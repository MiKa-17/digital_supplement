%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Mar  9 06:03:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUGGCAUUACUGAAAUCUUUAGAAAGGAGACGCCUAAUGAUUACAAUUAGUACCAUGUUGCAGUUUGGUUUAUUCCUUAUUGCAUUGAUAGGUCUAGUAAUCAAGCUUAUUGAAUUAAGCAAUAAAAAA\
) } def
/len { sequence length } bind def

/coor [
[122.92270660 286.69305420]
[113.24739075 298.15554810]
[101.82282257 307.87557983]
[88.95852661 315.58984375]
[75.00303650 321.08932495]
[60.33444977 324.22500610]
[45.35018539 324.91198730]
[30.45622063 323.13159180]
[16.05607414 318.93209839]
[2.53989458 312.42724609]
[-9.72612381 303.79333496]
[-20.40965652 293.26422119]
[-29.22125053 281.12518311]
[-35.92217255 267.70513916]
[-40.33087158 253.36767578]
[-42.32790756 238.50120544]
[-41.85916901 223.50852966]
[-38.93735886 208.79585266]
[-33.64163589 194.76176453]
[-26.11547661 181.78652954]
[-16.56279373 170.22164917]
[-5.24239540 160.38049316]
[7.53901100 152.52964783]
[21.43513680 146.88185120]
[36.06949234 143.59010315]
[51.04065323 142.74345398]
[64.11854553 135.39710999]
[77.19643402 128.05075073]
[62.19747543 128.22790527]
[47.19852066 128.40505981]
[35.00558472 138.83155823]
[19.27951622 135.65818787]
[12.08401012 121.31928253]
[18.93884277 106.81442261]
[34.58557129 103.27050018]
[47.02136993 113.40611267]
[62.02032471 113.22895813]
[77.01927948 113.05180359]
[75.90445709 96.01047516]
[85.11465454 83.23617554]
[99.07117462 79.60728455]
[103.94167328 65.42002869]
[108.81216431 51.23276901]
[113.68265533 37.04550934]
[118.55314636 22.85824966]
[123.42363739 8.67099190]
[128.29412842 -5.51626682]
[127.24457550 -10.82581711]
[128.29389954 -15.50987530]
[130.83018494 -18.85711288]
[134.04458618 -20.51437569]
[139.90736389 -34.32117844]
[145.77014160 -48.12798309]
[146.25900269 -57.34724045]
[151.93789673 -62.18904495]
[158.12515259 -75.85352325]
[164.31239319 -89.51800537]
[170.33781433 -103.25460815]
[176.20060730 -117.06140900]
[169.34698486 -133.10662842]
[176.04240417 -148.85346985]
[191.72378540 -154.81028748]
[197.25883484 -168.75170898]
[202.79388428 -182.69313049]
[208.32891846 -196.63455200]
[213.86396790 -210.57597351]
[219.39900208 -224.51739502]
[213.38145447 -238.88496399]
[219.19337463 -252.94470215]
[232.92773438 -258.59298706]
[238.46278381 -272.53439331]
[231.97052002 -286.94363403]
[237.64672852 -301.69342041]
[252.12379456 -308.03298950]
[266.81274414 -302.20114136]
[272.99890137 -287.65786743]
[267.01208496 -273.03137207]
[252.40420532 -266.99935913]
[246.86915588 -253.05793762]
[252.98901367 -239.52711487]
[247.57429504 -225.30967712]
[233.34042358 -218.98236084]
[227.80538940 -205.04093933]
[222.27033997 -191.09951782]
[216.73530579 -177.15808105]
[211.20025635 -163.21665955]
[205.66522217 -149.27523804]
[212.39389038 -138.22163391]
[211.48428345 -125.11745453]
[203.04597473 -114.79721832]
[190.00740051 -111.19863129]
[184.14462280 -97.39183044]
[184.42860413 -89.93445587]
[177.97686768 -83.33076477]
[171.78962708 -69.66628265]
[165.60238647 -56.00180435]
[159.57695007 -42.26520157]
[153.71417236 -28.45839882]
[147.85139465 -14.65159607]
[142.48138428 -0.64577460]
[137.61090088 13.54148388]
[132.74040222 27.72874260]
[127.86991119 41.91600037]
[122.99942017 56.10326004]
[118.12892914 70.29051971]
[113.25843811 84.47777557]
[122.98882294 104.47933960]
[108.36438751 125.06990814]
[119.40024567 135.22912598]
[130.43609619 145.38835144]
[141.47196960 155.54757690]
[152.50782776 165.70680237]
[168.28627014 164.80335999]
[180.02638245 175.38377380]
[180.76295471 191.17088318]
[170.05900574 202.79847717]
[154.26498413 203.36810303]
[142.75120544 192.54182434]
[142.34860229 176.74266052]
[131.31274414 166.58343506]
[120.27687836 156.42420959]
[109.24102020 146.26498413]
[98.20516205 136.10575867]
[103.01944733 150.31219482]
[107.83373260 164.51863098]
[118.40451813 175.16091919]
[127.08632660 187.39311218]
[133.64393616 200.88375854]
[137.89968872 215.26737976]
[139.73826599 230.15428162]
[139.10987854 245.14111328]
[136.03152466 259.82183838]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 38]
[29 37]
[30 36]
[41 106]
[42 105]
[43 104]
[44 103]
[45 102]
[46 101]
[47 100]
[51 99]
[52 98]
[53 97]
[55 96]
[56 95]
[57 94]
[58 92]
[59 91]
[62 87]
[63 86]
[64 85]
[65 84]
[66 83]
[67 82]
[70 79]
[71 78]
[108 123]
[109 122]
[110 121]
[111 120]
[112 119]
] def

init

% Start Annotations
28 38 0.0 1 colorpair
29 37 0.0 1 colorpair
30 36 0.0 1 colorpair
41 106 0.0 1 colorpair
42 105 0.0 1 colorpair
43 104 0.0 1 colorpair
44 103 0.0 1 colorpair
45 102 0.0 1 colorpair
46 101 0.0 1 colorpair
47 100 0.0 1 colorpair
51 99 0.0 1 colorpair
52 98 0.0 1 colorpair
53 97 0.0 0.2 colorpair
55 96 0.0 1 colorpair
56 95 0.0 0.2 colorpair
57 94 0.0 1 colorpair
58 92 0.0 1 colorpair
59 91 0.0 1 colorpair
62 87 0.16 1 colorpair
63 86 0.0 1 colorpair
64 85 0.0 1 colorpair
65 84 0.0 1 colorpair
66 83 0.0 1 colorpair
67 82 0.0 1 colorpair
70 79 0.0 1 colorpair
71 78 0.0 1 colorpair
108 123 0.0 1 colorpair
109 122 0.16 1 colorpair
110 121 0.0 1 colorpair
111 120 0.0 1 colorpair
112 119 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
53 97 2 gmark
56 95 2 gmark
87 cmark
109 cmark

% End Annotations
showpage
end
%%EOF
