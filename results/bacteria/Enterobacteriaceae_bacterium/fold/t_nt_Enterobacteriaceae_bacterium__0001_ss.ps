%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 20:04:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__________________________________________________________________________________________________________________G___U__CGC__AA___U_UGU___U______AG_CG_G_U__G_AUC___ACGCUCGUAUAAUUUACCGUGAUG___GUCUGGGACGACCUGGCUG__UUACCUAUC_________AUAAAGGGAAUUAUUGACGUGGCG\
GCAUUUGGAGGCUGAGGUAAUAAAAAGUAA__________________________________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50230408 92.21179199]
[62.51291656 91.63548279]
[47.53736877 90.77127838]
[32.58119202 89.61950684]
[17.64990234 88.18058777]
[2.74901533 86.45504761]
[-12.11596680 84.44352722]
[-26.93955612 82.14677429]
[-41.71628189 79.56563568]
[-56.44068527 76.70105743]
[-71.10733032 73.55410004]
[-85.71080780 70.12593079]
[-100.24572754 66.41780853]
[-114.70671082 62.43111038]
[-129.08842468 58.16729736]
[-143.38555908 53.62794876]
[-157.59284973 48.81474304]
[-171.70503235 43.72945404]
[-185.71690369 38.37395859]
[-199.62329102 32.75023651]
[-213.41906738 26.86036110]
[-227.09912109 20.70651054]
[-240.65841675 14.29095459]
[-254.09194946 7.61606121]
[-267.39474487 0.68429607]
[-280.56192017 -6.50178242]
[-293.58856201 -13.93952084]
[-306.46994019 -21.62617302]
[-319.20120239 -29.55890274]
[-331.77774048 -37.73477936]
[-344.19485474 -46.15078735]
[-356.44796753 -54.80381393]
[-368.53259277 -63.69067001]
[-380.44421387 -72.80807495]
[-392.17846680 -82.15265656]
[-403.73098755 -91.72097015]
[-415.09756470 -101.50947571]
[-426.27398682 -111.51457214]
[-437.25607300 -121.73255920]
[-448.03982544 -132.15966797]
[-458.62124634 -142.79203796]
[-468.99645996 -153.62574768]
[-479.16156006 -164.65681458]
[-489.11285400 -175.88113403]
[-498.84667969 -187.29460144]
[-508.35937500 -198.89295959]
[-517.64752197 -210.67196655]
[-526.70758057 -222.62724304]
[-535.53625488 -234.75439453]
[-544.13037109 -247.04893494]
[-552.48663330 -259.50634766]
[-560.60198975 -272.12197876]
[-568.47351074 -284.89123535]
[-576.09820557 -297.80935669]
[-583.47326660 -310.87158203]
[-590.59600830 -324.07312012]
[-597.46380615 -337.40905762]
[-604.07409668 -350.87448120]
[-610.42443848 -364.46444702]
[-616.51251221 -378.17391968]
[-622.33605957 -391.99780273]
[-627.89294434 -405.93106079]
[-633.18103027 -419.96847534]
[-638.19848633 -434.10491943]
[-642.94342041 -448.33517456]
[-647.41406250 -462.65393066]
[-651.60870361 -477.05596924]
[-655.52593994 -491.53594971]
[-659.16418457 -506.08850098]
[-662.52215576 -520.70825195]
[-665.59863281 -535.38989258]
[-668.39245605 -550.12786865]
[-670.90258789 -564.91680908]
[-673.12811279 -579.75128174]
[-675.06823730 -594.62573242]
[-676.72216797 -609.53472900]
[-678.08935547 -624.47277832]
[-679.16925049 -639.43432617]
[-679.96154785 -654.41381836]
[-680.46582031 -669.40582275]
[-680.68200684 -684.40472412]
[-680.60998535 -699.40502930]
[-680.24969482 -714.40112305]
[-679.60137939 -729.38757324]
[-678.66528320 -744.35882568]
[-677.44165039 -759.30926514]
[-675.93103027 -774.23352051]
[-674.13391113 -789.12591553]
[-672.05102539 -803.98107910]
[-669.68310547 -818.79345703]
[-667.03100586 -833.55761719]
[-664.09570312 -848.26806641]
[-660.87835693 -862.91943359]
[-657.38006592 -877.50628662]
[-653.60217285 -892.02319336]
[-649.54602051 -906.46490479]
[-645.21319580 -920.82592773]
[-640.60522461 -935.10113525]
[-635.72381592 -949.28509521]
[-630.57080078 -963.37274170]
[-625.14807129 -977.35870361]
[-619.45758057 -991.23791504]
[-613.50152588 -1005.00524902]
[-607.28204346 -1018.65557861]
[-600.80139160 -1032.18383789]
[-594.06207275 -1045.58520508]
[-587.06646729 -1058.85449219]
[-579.81719971 -1071.98706055]
[-572.31695557 -1084.97778320]
[-564.56854248 -1097.82214355]
[-556.57476807 -1110.51513672]
[-548.33856201 -1123.05224609]
[-539.86297607 -1135.42883301]
[-531.15118408 -1147.64013672]
[-522.20635986 -1159.68200684]
[-513.03186035 -1171.54968262]
[-503.63104248 -1183.23889160]
[-494.00732422 -1194.74536133]
[-484.16433716 -1206.06469727]
[-474.10565186 -1217.19299316]
[-463.83502197 -1228.12585449]
[-453.35626221 -1238.85937500]
[-442.67315674 -1249.38964844]
[-431.78973389 -1259.71264648]
[-420.70999146 -1269.82470703]
[-409.43798828 -1279.72192383]
[-397.97787476 -1289.40075684]
[-386.33395386 -1298.85766602]
[-374.51046753 -1308.08911133]
[-362.51181030 -1317.09167480]
[-350.34237671 -1325.86193848]
[-338.00671387 -1334.39685059]
[-325.50930786 -1342.69323730]
[-312.85482788 -1350.74792480]
[-300.04791260 -1358.55798340]
[-287.09332275 -1366.12048340]
[-273.99578857 -1373.43273926]
[-260.76019287 -1380.49206543]
[-247.39141846 -1387.29565430]
[-233.89439392 -1393.84118652]
[-220.27407837 -1400.12622070]
[-206.53553772 -1406.14831543]
[-192.68382263 -1411.90539551]
[-178.72404480 -1417.39526367]
[-164.66137695 -1422.61596680]
[-150.50099182 -1427.56542969]
[-136.24812317 -1432.24194336]
[-121.90802765 -1436.64367676]
[-107.48601532 -1440.76916504]
[-92.98739624 -1444.61669922]
[-78.41753387 -1448.18505859]
[-63.78179550 -1451.47277832]
[-49.08559036 -1454.47863770]
[-34.33434677 -1457.20166016]
[-19.53350639 -1459.64074707]
[-4.68853617 -1461.79492188]
[10.19508362 -1463.66357422]
[25.11186028 -1465.24584961]
[40.05628204 -1466.54125977]
[55.02283859 -1467.54931641]
[70.00599670 -1468.26965332]
[85.00022888 -1468.70190430]
[100.00000000 -1468.84606934]
[114.99977112 -1468.70190430]
[129.99400330 -1468.26965332]
[144.97715759 -1467.54931641]
[159.94371033 -1466.54125977]
[174.88813782 -1465.24584961]
[189.80491638 -1463.66357422]
[204.68853760 -1461.79492188]
[219.53350830 -1459.64074707]
[234.33435059 -1457.20166016]
[249.08558655 -1454.47863770]
[263.78179932 -1451.47277832]
[278.41754150 -1448.18505859]
[292.98739624 -1444.61669922]
[307.48602295 -1440.76916504]
[321.90802002 -1436.64367676]
[336.24810791 -1432.24194336]
[350.50097656 -1427.56542969]
[364.66137695 -1422.61596680]
[378.72406006 -1417.39526367]
[392.68380737 -1411.90539551]
[406.53555298 -1406.14831543]
[420.27407837 -1400.12622070]
[433.89437866 -1393.84118652]
[447.39141846 -1387.29565430]
[460.76019287 -1380.49206543]
[473.99578857 -1373.43273926]
[487.09332275 -1366.12048340]
[500.04791260 -1358.55798340]
[512.85479736 -1350.74792480]
[525.50927734 -1342.69323730]
[538.00671387 -1334.39685059]
[550.34240723 -1325.86193848]
[562.51177979 -1317.09167480]
[574.51049805 -1308.08911133]
[586.33398438 -1298.85766602]
[597.97790527 -1289.40075684]
[609.43798828 -1279.72192383]
[620.70996094 -1269.82470703]
[631.78973389 -1259.71264648]
[642.67315674 -1249.38964844]
[653.35626221 -1238.85937500]
[663.83502197 -1228.12585449]
[674.10565186 -1217.19299316]
[684.16430664 -1206.06469727]
[694.00732422 -1194.74536133]
[703.63104248 -1183.23889160]
[713.03186035 -1171.54968262]
[722.20635986 -1159.68200684]
[731.15118408 -1147.64013672]
[739.86297607 -1135.42883301]
[748.33856201 -1123.05224609]
[756.57476807 -1110.51513672]
[764.56854248 -1097.82214355]
[772.31695557 -1084.97778320]
[779.81719971 -1071.98706055]
[787.06646729 -1058.85449219]
[794.06207275 -1045.58520508]
[800.80139160 -1032.18383789]
[807.28204346 -1018.65557861]
[813.50152588 -1005.00524902]
[819.45758057 -991.23791504]
[825.14807129 -977.35870361]
[830.57080078 -963.37274170]
[835.72381592 -949.28509521]
[840.60522461 -935.10113525]
[845.21319580 -920.82592773]
[849.54602051 -906.46490479]
[853.60217285 -892.02319336]
[857.38006592 -877.50628662]
[860.87835693 -862.91943359]
[864.09570312 -848.26806641]
[867.03100586 -833.55761719]
[869.68310547 -818.79345703]
[872.05102539 -803.98107910]
[874.13391113 -789.12591553]
[875.93103027 -774.23352051]
[877.44165039 -759.30926514]
[878.66528320 -744.35882568]
[879.60137939 -729.38757324]
[880.24969482 -714.40112305]
[880.60998535 -699.40502930]
[880.68200684 -684.40472412]
[880.46582031 -669.40582275]
[879.96154785 -654.41381836]
[879.16925049 -639.43432617]
[878.08935547 -624.47277832]
[876.72216797 -609.53472900]
[875.06823730 -594.62573242]
[873.12811279 -579.75128174]
[870.90258789 -564.91680908]
[868.39245605 -550.12786865]
[865.59863281 -535.38989258]
[862.52215576 -520.70825195]
[859.16418457 -506.08850098]
[855.52593994 -491.53594971]
[851.60870361 -477.05596924]
[847.41406250 -462.65393066]
[842.94342041 -448.33517456]
[838.19848633 -434.10491943]
[833.18103027 -419.96847534]
[827.89294434 -405.93106079]
[822.33605957 -391.99780273]
[816.51251221 -378.17391968]
[810.42443848 -364.46444702]
[804.07409668 -350.87448120]
[797.46380615 -337.40905762]
[790.59600830 -324.07312012]
[783.47326660 -310.87158203]
[776.09820557 -297.80935669]
[768.47351074 -284.89123535]
[760.60198975 -272.12197876]
[752.48663330 -259.50634766]
[744.13037109 -247.04893494]
[735.53625488 -234.75439453]
[726.70758057 -222.62724304]
[717.64752197 -210.67196655]
[708.35937500 -198.89295959]
[698.84667969 -187.29460144]
[689.11285400 -175.88113403]
[679.16156006 -164.65681458]
[668.99645996 -153.62574768]
[658.62127686 -142.79203796]
[648.03985596 -132.15966797]
[637.25610352 -121.73255920]
[626.27398682 -111.51457214]
[615.09759521 -101.50947571]
[603.73101807 -91.72097015]
[592.17846680 -82.15265656]
[580.44421387 -72.80807495]
[568.53259277 -63.69067001]
[556.44799805 -54.80381393]
[544.19482422 -46.15078735]
[531.77770996 -37.73477936]
[519.20123291 -29.55890274]
[506.46994019 -21.62617302]
[493.58856201 -13.93952084]
[480.56192017 -6.50178242]
[467.39474487 0.68429607]
[454.09194946 7.61606121]
[440.65841675 14.29095459]
[427.09912109 20.70651054]
[413.41906738 26.86036110]
[399.62329102 32.75023651]
[385.71691895 38.37395859]
[371.70504761 43.72945404]
[357.59286499 48.81474304]
[343.38555908 53.62794876]
[329.08843994 58.16729736]
[314.70669556 62.43111038]
[300.24572754 66.41780853]
[285.71081543 70.12593079]
[271.10733032 73.55410004]
[256.44067383 76.70105743]
[241.71627808 79.56563568]
[226.93955994 82.14677429]
[212.11596680 84.44352722]
[197.25099182 86.45504761]
[182.35009766 88.18058777]
[167.41880798 89.61950684]
[152.46263123 90.77127838]
[137.48707581 91.63548279]
[122.49769592 92.21179199]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
