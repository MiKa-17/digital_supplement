%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 18:58:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_____________AUGAA___GCCGCAAAAUACUCUUAUCGGGUGCAUAUUUAUUGUUUGUGUGACGAUAUUAAUGUUCACAUUCCUUACACGGGAAACGCUUUGCGAACUGCGCUUGAAGGACGGGAAUAAGGAGGUUGCCGCUUCACUGGCUUGU_AAACCCGGU______________\
) } def
/len { sequence length } bind def

/coor [
[136.53015137 484.94885254]
[122.24526215 486.03784180]
[107.92984009 486.59695435]
[93.60353088 486.62536621]
[79.28600311 486.12304688]
[64.99691010 485.09072876]
[50.75586319 483.52978516]
[36.58241272 481.44238281]
[22.49601364 478.83135986]
[8.51600552 475.70034790]
[-5.33842468 472.05361938]
[-19.04825783 467.89617920]
[-32.59467697 463.23370361]
[-45.95908356 458.07266235]
[-59.12313461 452.42007446]
[-72.06876373 446.28372192]
[-84.77819061 439.67205811]
[-97.23397827 432.59408569]
[-109.41902161 425.05960083]
[-121.31660461 417.07891846]
[-132.91038513 408.66296387]
[-144.18446350 399.82333374]
[-155.12333679 390.57211304]
[-165.71202087 380.92205811]
[-175.93595886 370.88638306]
[-185.78112793 360.47885132]
[-195.23400879 349.71374512]
[-204.28161621 338.60589600]
[-212.91154480 327.17050171]
[-221.11195374 315.42327881]
[-228.87156677 303.38034058]
[-236.17974854 291.05822754]
[-243.02647400 278.47387695]
[-249.40231323 265.64450073]
[-255.29853821 252.58776855]
[-260.70706177 239.32156372]
[-265.62042236 225.86413574]
[-270.03192139 212.23391724]
[-273.93548584 198.44964600]
[-277.32574463 184.53022766]
[-280.19805908 170.49478149]
[-282.54849243 156.36257935]
[-284.37377930 142.15298462]
[-285.67144775 127.88554382]
[-286.43972778 113.57982635]
[-286.67755127 99.25546265]
[-286.38458252 84.93212128]
[-285.56121826 70.62946320]
[-284.20858765 56.36712265]
[-282.32858276 42.16467667]
[-279.92376709 28.04161835]
[-276.99743652 14.01733875]
[-273.55358887 0.11108441]
[-269.59698486 -13.65805340]
[-265.13302612 -27.27117538]
[-260.16784668 -40.70959091]
[-254.70829773 -53.95486069]
[-248.76184082 -66.98880005]
[-242.33663940 -79.79351044]
[-235.44151306 -92.35142517]
[-228.08593750 -104.64530182]
[-220.27999878 -116.65826416]
[-212.03440857 -128.37382507]
[-203.36050415 -139.77589417]
[-194.27018738 -150.84883118]
[-184.77592468 -161.57743835]
[-174.89074707 -171.94697571]
[-164.62823486 -181.94320679]
[-154.00247192 -191.55242920]
[-143.02804565 -200.76144409]
[-131.72001648 -209.55760193]
[-120.09391785 -217.92883301]
[-108.16568756 -225.86366272]
[-95.95171356 -233.35116577]
[-83.46876526 -240.38108826]
[-70.73397064 -246.94378662]
[-57.76480865 -253.03022766]
[-44.57908630 -258.63208008]
[-31.19490433 -263.74163818]
[-17.63063240 -268.35189819]
[-3.90488982 -272.45651245]
[9.96348095 -276.04986572]
[23.95544243 -279.12701416]
[38.05179214 -281.68377686]
[52.23317337 -283.71658325]
[66.48012543 -285.22265625]
[80.77308655 -286.19995117]
[95.09244537 -286.64712524]
[109.41854095 -286.56353760]
[123.73170471 -285.94934082]
[138.01229858 -284.80532837]
[152.24070740 -283.13311768]
[166.39739990 -280.93499756]
[180.46295166 -278.21395874]
[194.41806030 -274.97375488]
[208.24356079 -271.21881104]
[221.92048645 -266.95431519]
[235.43003845 -262.18612671]
[248.75369263 -256.92074585]
[254.79159546 -270.65185547]
[260.82949829 -284.38299561]
[261.67031860 -301.31607056]
[278.17440796 -305.19564819]
[286.47119141 -290.41052246]
[274.56063843 -278.34506226]
[268.52273560 -264.61395264]
[262.48480225 -250.88282776]
[277.87542725 -243.33717346]
[292.91647339 -235.11685181]
[307.57849121 -226.23802185]
[321.83258057 -216.71813965]
[335.65078735 -206.57591248]
[349.00592041 -195.83125305]
[361.87176514 -184.50527954]
[374.22305298 -172.62025452]
[386.03546143 -160.19952393]
[397.28582764 -147.26751709]
[407.95199585 -133.84960938]
[418.01306152 -119.97219849]
[427.44921875 -105.66253662]
[436.24194336 -90.94875336]
[444.37396240 -75.85974884]
[451.82928467 -60.42517853]
[458.59323120 -44.67537308]
[464.65255737 -28.64128304]
[469.99536133 -12.35440922]
[474.61111450 4.15324068]
[478.49072266 20.84922981]
[481.62661743 37.70075226]
[484.01263428 54.67469025]
[485.64404297 71.73769379]
[486.51763916 88.85623169]
[486.63177490 105.99666595]
[485.98614502 123.12532043]
[484.58206177 140.20852661]
[482.42224121 157.21273804]
[479.51098633 174.10450745]
[475.85400391 190.85067749]
[471.45846558 207.41831970]
[466.33297729 223.77488708]
[480.44793701 228.85107422]
[494.56292725 233.92727661]
[508.67788696 239.00346375]
[522.86712646 232.04350281]
[537.79461670 237.23434448]
[544.60418701 251.49636841]
[539.25579834 266.36816406]
[524.92260742 273.02658081]
[510.10818481 267.52124023]
[503.60168457 253.11843872]
[489.48672485 248.04223633]
[475.37176514 242.96604919]
[461.25677490 237.88984680]
[455.90093994 251.17738342]
[450.05654907 264.25741577]
[443.73162842 277.11196899]
[436.93487549 289.72338867]
[429.67562866 302.07440186]
[421.96383667 314.14801025]
[413.81008911 325.92767334]
[405.22558594 337.39718628]
[396.22207642 348.54083252]
[386.81198120 359.34332275]
[377.00817871 369.78982544]
[366.82412720 379.86599731]
[356.27380371 389.55798340]
[345.37167358 398.85250854]
[334.13275146 407.73678589]
[322.57244873 416.19863892]
[310.70660400 424.22647095]
[298.55154419 431.80923462]
[286.12393188 438.93652344]
[273.44082642 445.59854126]
[260.51965332 451.78619385]
[247.37811279 457.49093628]
[234.03427124 462.70495605]
[220.50645447 467.42111206]
[206.81321716 471.63290405]
[192.97335815 475.33456421]
[179.00588989 478.52099609]
[164.92994690 481.18786621]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[99 107]
[100 106]
[101 105]
[140 153]
[141 152]
[142 151]
[143 150]
] def

init

% Start Annotations
99 107 0.0 1 colorpair
100 106 0.16 1 colorpair
101 105 0.16 1 colorpair
140 153 0.0 1 colorpair
141 152 0.16 0.2 colorpair
142 151 0.32 1 colorpair
143 150 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
106 cmark
101 cmark
141 152 2 gmark
141 cmark
142 cmark
151 cmark

% End Annotations
showpage
end
%%EOF
