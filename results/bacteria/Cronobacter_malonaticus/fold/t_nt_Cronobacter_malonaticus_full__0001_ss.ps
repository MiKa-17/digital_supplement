%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 18:58:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_GUAAGAGGCUAAUCUGAUGAUGUUCA_GCAUGCAGAGGGCCUCGUUGGUUAAUUGAA_AAAUUACCUUCGGGGCUU__UCUUCUUUCUGCCACAC__CAAUGCGACA_AC_CUGCCAACAGCAUGAGGCAAAAA__GCCUCAAGCGCC______\
) } def
/len { sequence length } bind def

/coor [
[13.75893021 237.86097717]
[-3.80473399 244.01560974]
[-22.15427589 247.10664368]
[-40.75951767 247.04571533]
[-59.08304596 243.83549500]
[-76.59574890 237.56964111]
[-92.79208374 228.42999268]
[-107.20466614 216.68136597]
[-119.41777802 202.66383362]
[-132.09562683 210.68083191]
[-144.77348328 218.69781494]
[-146.21081543 232.12443542]
[-155.00442505 242.11372375]
[-167.76115417 245.15153503]
[-179.75128174 240.34275818]
[-192.58799744 248.10281372]
[-205.42472839 255.86288452]
[-218.26144409 263.62295532]
[-222.15280151 278.70590210]
[-235.28160095 286.39285278]
[-249.63690186 282.59008789]
[-262.47360229 290.35015869]
[-266.01199341 305.75323486]
[-279.44982910 314.07192993]
[-294.81463623 310.37088013]
[-302.99081421 296.84588623]
[-299.12753296 281.52105713]
[-285.51681519 273.48834229]
[-270.23367310 277.51342773]
[-257.39697266 269.75335693]
[-254.09291077 255.27514648]
[-241.18519592 247.22247314]
[-226.02151489 250.78623962]
[-213.18478394 243.02616882]
[-200.34806824 235.26609802]
[-187.51135254 227.50602722]
[-184.20983887 211.04187012]
[-169.75267029 201.85543823]
[-152.79046631 206.01995850]
[-140.11262512 198.00297546]
[-127.43476868 189.98599243]
[-132.54930115 179.15565491]
[-136.44940186 167.83020020]
[-139.08811951 156.14530945]
[-140.43362427 144.24104309]
[-140.46958923 132.26010132]
[-139.19535828 120.34611511]
[-136.62602234 108.64193726]
[-132.79217529 97.28794098]
[-127.73958588 86.42030334]
[-121.52864838 76.16941071]
[-114.23364258 66.65825653]
[-105.94187164 58.00099945]
[-96.75259399 50.30157089]
[-86.77584076 43.65243530]
[-76.13111877 38.13347626]
[-64.94594574 33.81104660]
[-53.35434723 30.73715591]
[-41.49524307 28.94885445]
[-29.51077271 28.46778488]
[-17.54461288 29.29991913]
[-5.74023867 31.43548584]
[5.76079369 34.84908295]
[16.82054138 39.49998474]
[27.30632973 45.33261871]
[37.09235001 52.27723312]
[46.06115341 60.25074387]
[54.10508728 69.15770721]
[61.12755585 78.89147949]
[67.04420471 89.33547974]
[71.78391266 100.36460114]
[86.19168854 96.19133759]
[96.01483154 86.24159241]
[109.63504791 89.40088654]
[124.04282379 85.22762299]
[138.45059204 81.05436707]
[152.85836792 76.88110352]
[154.75958252 64.04355621]
[161.36828613 52.92924118]
[171.66432190 45.18423080]
[184.08454895 41.93984222]
[196.76016235 43.64746475]
[207.79786682 50.01613998]
[215.56262207 60.06140137]
[230.05151367 56.17911911]
[244.45927429 52.00585556]
[258.86706543 47.83259201]
[269.96972656 36.56132889]
[284.34713745 40.45219421]
[298.75491333 36.27893448]
[313.16268921 32.10567093]
[327.57046509 27.93240929]
[325.88507080 12.99027157]
[326.74932861 -2.02175903]
[330.13836670 -16.67175674]
[335.95468140 -30.53821182]
[344.03091431 -43.22215652]
[354.13470459 -54.35865402]
[365.97531128 -63.62728119]
[379.21212769 -70.76136017]
[393.46426392 -75.55562592]
[408.32162476 -77.87215424]
[423.35678101 -77.64427185]
[438.13714600 -74.87854767]
[452.23742676 -69.65455627]
[465.25195312 -62.12260437]
[476.80624390 -52.49939728]
[486.56787109 -41.06181335]
[494.25601196 -28.13893509]
[499.64941406 -14.10258102]
[502.59292603 0.64339483]
[503.00183105 15.67472172]
[500.86437988 30.55891991]
[496.24206543 44.86774063]
[489.26791382 58.18948746]
[480.14251709 70.14086914]
[469.12850952 80.37802124]
[456.54272461 88.60640717]
[442.74731445 94.58926392]
[428.13919067 98.15447235]
[413.13867188 99.19943237]
[398.17730713 97.69409943]
[383.68560791 93.68177032]
[370.08053589 87.27789307]
[357.75350952 78.66671753]
[347.05920410 68.09601593]
[338.30529785 55.86991119]
[331.74371338 42.34017944]
[317.33593750 46.51344299]
[302.92816162 50.68670654]
[288.52041626 54.85996628]
[278.44827271 65.83273315]
[263.04031372 62.24036407]
[248.63253784 66.41362762]
[234.22477722 70.58689117]
[231.15469360 74.31324005]
[225.68891907 76.11609650]
[219.15235901 74.62553406]
[214.99810791 91.28548431]
[202.94100952 103.63419342]
[186.21409607 108.23231506]
[169.36772156 103.73620605]
[157.03163147 91.28887177]
[142.62385559 95.46213531]
[128.21607971 99.63539886]
[113.80831146 103.80866241]
[103.98516846 113.75840759]
[90.36495209 110.59911346]
[75.95717621 114.77237701]
[78.32714081 133.25366211]
[77.53335571 151.86663818]
[73.59966278 170.07369995]
[66.64060211 187.34915161]
[56.85803223 203.19432068]
[44.53531647 217.15200806]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 41]
[10 40]
[11 39]
[15 36]
[16 35]
[17 34]
[18 33]
[21 30]
[22 29]
[71 149]
[72 148]
[74 146]
[75 145]
[76 144]
[77 143]
[84 138]
[85 135]
[86 134]
[87 133]
[89 131]
[90 130]
[91 129]
[92 128]
] def

init

% Start Annotations
9 41 0.16 0.2 colorpair
10 40 0.0 0.2 colorpair
11 39 0.16 1 colorpair
15 36 0.0 0.2 colorpair
16 35 0.0 0.2 colorpair
17 34 0.32 0.2 colorpair
21 30 0.32 0.2 colorpair
22 29 0.16 1 colorpair
71 149 0.0 0.2 colorpair
72 148 0.16 1 colorpair
74 146 0.0 0.2 colorpair
75 145 0.0 0.2 colorpair
76 144 0.0 1 colorpair
77 143 0.0 0.2 colorpair
84 138 0.0 1 colorpair
85 135 0.16 1 colorpair
86 134 0.16 1 colorpair
87 133 0.0 1 colorpair
89 131 0.0 0.2 colorpair
90 130 0.0 1 colorpair
91 129 0.16 0.2 colorpair
92 128 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
9 41 2 gmark
9 cmark
41 cmark
10 40 2 gmark
39 cmark
15 36 2 gmark
16 35 2 gmark
17 34 2 gmark
17 cmark
34 cmark
18 33 4 gmark
18 cmark
33 cmark
21 30 2 gmark
21 cmark
30 cmark
22 cmark
71 149 2 gmark
72 cmark
148 cmark
74 146 2 gmark
75 145 2 gmark
77 143 2 gmark
85 cmark
135 cmark
134 cmark
89 131 2 gmark
91 129 2 gmark
91 cmark
129 cmark
92 128 2 gmark

% End Annotations
showpage
end
%%EOF
