%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 18:58:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUUUUCUGG__UGCGUAUUAAUCGUAUGUGUAACGCUAUUAAUAUUCACAUUCCUGACGCGGAAUUCGCUUUGCGAACUGCGCCUGAAGGACGGGCAUAGGGAGUUUGCUGCGUUUCUGGCUUACGAAUCCGGUAAGUAACAAUCUGA_GGGCGGGGAAAACCCCGCGUUUU__________G_GGCUG___GGGGUUUUAUGGCC_CAAGCGCCUUUAUUA_G_G_UG_\
) } def
/len { sequence length } bind def

/coor [
[-84.15407562 949.27227783]
[-99.03029633 951.20861816]
[-113.96791077 952.59399414]
[-128.94651794 953.42645264]
[-143.94564819 953.70489502]
[-158.94482422 953.42889404]
[-173.92355347 952.59881592]
[-188.86138916 951.21582031]
[-203.73791504 949.28179932]
[-218.53282166 946.79937744]
[-233.22589111 943.77197266]
[-247.79705811 940.20367432]
[-262.22640991 936.09942627]
[-276.49426270 931.46472168]
[-290.58111572 926.30603027]
[-304.46771240 920.63031006]
[-318.13513184 914.44537354]
[-331.56463623 907.75958252]
[-344.73791504 900.58215332]
[-357.63702393 892.92279053]
[-370.24426270 884.79205322]
[-382.54244995 876.20104980]
[-394.51480103 867.16143799]
[-406.14492798 857.68560791]
[-417.41699219 847.78649902]
[-428.31555176 837.47760010]
[-438.82574463 826.77307129]
[-448.93322754 815.68750000]
[-458.62417603 804.23596191]
[-467.88531494 792.43414307]
[-476.70407104 780.29821777]
[-485.06835938 767.84466553]
[-492.96673584 755.09057617]
[-500.38845825 742.05334473]
[-507.32336426 728.75079346]
[-513.76196289 715.20104980]
[-519.69549561 701.42260742]
[-525.11584473 687.43432617]
[-530.01562500 673.25537109]
[-534.38812256 658.90496826]
[-538.22729492 644.40289307]
[-541.52807617 629.76873779]
[-544.28576660 615.02270508]
[-546.49670410 600.18481445]
[-548.15789795 585.27532959]
[-549.26696777 570.31469727]
[-549.82244873 555.32324219]
[-549.82366943 540.32153320]
[-549.27050781 525.33001709]
[-548.16375732 510.36917114]
[-546.50494385 495.45944214]
[-544.29632568 480.62121582]
[-541.54095459 465.87469482]
[-538.24249268 451.24008179]
[-534.40557861 436.73736572]
[-530.03533936 422.38629150]
[-525.13781738 408.20654297]
[-519.71966553 394.21743774]
[-513.78826904 380.43807983]
[-507.35180664 366.88732910]
[-500.41900635 353.58364868]
[-492.99932861 340.54522705]
[-485.10293579 327.78991699]
[-476.74063110 315.33505249]
[-467.92376709 303.19772339]
[-458.66445923 291.39447021]
[-448.97534180 279.94143677]
[-438.86959839 268.85424805]
[-428.36108398 258.14804077]
[-417.46414185 247.83747864]
[-406.19363403 237.93658447]
[-394.56500244 228.45893860]
[-382.59408569 219.41744995]
[-370.29724121 210.82447815]
[-357.69125366 202.69175720]
[-344.79336548 195.03041077]
[-331.62121582 187.85089111]
[-318.19274902 181.16300964]
[-304.52633667 174.97589111]
[-290.64062500 169.29798889]
[-276.55456543 164.13706970]
[-262.28744507 159.50018311]
[-247.85873413 155.39364624]
[-233.28813171 151.82307434]
[-218.59553528 148.79335022]
[-203.80102539 146.30860901]
[-188.92480469 144.37223816]
[-173.98718262 142.98690796]
[-159.00857544 142.15447998]
[-144.00944519 141.87609863]
[-129.01026917 142.15214539]
[-114.03153992 142.98225403]
[-99.09371185 144.36528015]
[-84.21718597 146.29933167]
[-69.42228699 148.78178406]
[-54.72922516 151.80923462]
[-40.15806580 155.37753296]
[-25.72871208 159.48184204]
[-11.46087265 164.11651611]
[2.62596440 169.27525330]
[16.51255798 174.95100403]
[30.17993927 181.13600159]
[43.60944366 187.82179260]
[50.78607178 174.65000916]
[50.08105850 159.77209473]
[63.47791290 151.35575867]
[70.65454102 138.18395996]
[77.83116913 125.01217651]
[69.18250275 112.93630219]
[66.62044525 98.30543518]
[70.65103149 84.00925446]
[80.47817993 72.87133026]
[94.16099548 67.09146118]
[108.99703979 67.81119537]
[116.17366791 54.63940430]
[123.35029602 41.46761703]
[110.24057770 25.25421143]
[105.52752686 4.98995686]
[110.11692047 -15.25622845]
[123.05073547 -31.43673515]
[141.70680237 -40.33444595]
[162.33035278 -40.20235825]
[168.04724121 -54.07020569]
[173.76412964 -67.93805695]
[179.48101807 -81.80590057]
[185.19790649 -95.67375183]
[190.91479492 -109.54159546]
[183.51092529 -123.31536865]
[186.74345398 -138.61520386]
[199.08605957 -148.21697998]
[214.71093750 -147.58703613]
[226.24052429 -137.02281189]
[228.23088074 -121.51241302]
[219.74221802 -108.37937164]
[204.78263855 -103.82471466]
[199.06575012 -89.95686340]
[193.34886169 -76.08901215]
[187.63197327 -62.22116852]
[181.91508484 -48.35332108]
[176.19819641 -34.48547363]
[183.81423950 -28.63977242]
[190.05841064 -21.33497810]
[194.65643311 -12.88620567]
[197.40513611 -3.65894890]
[198.18142700 5.94673538]
[196.94783020 15.51357079]
[193.75422668 24.62518883]
[188.73594666 32.88424683]
[182.10791016 39.92976379]
[174.15554810 45.45288849]
[165.22239685 49.21043396]
[155.69537354 51.03560257]
[145.98789978 50.84536743]
[136.52207947 48.64424515]
[129.34545898 61.81603241]
[122.16883087 74.98782349]
[130.81750488 87.06369781]
[133.37954712 101.69456482]
[129.34896851 115.99074554]
[119.52182007 127.12866974]
[105.83900452 132.90853882]
[91.00296021 132.18881226]
[83.82633209 145.36059570]
[76.64970398 158.53237915]
[76.84139252 174.35243225]
[63.95785904 181.82664490]
[56.78123093 194.99842834]
[69.68032837 202.65773010]
[82.28759766 210.78842163]
[94.58580780 219.37944031]
[106.55817413 228.41902161]
[118.18833160 237.89482117]
[129.46040344 247.79391479]
[140.35899353 258.10275269]
[150.86921692 268.80728149]
[160.97669983 279.89285278]
[170.66766357 291.34436035]
[179.92886353 303.14611816]
[188.74763489 315.28207397]
[197.11193848 327.73556519]
[205.01036072 340.48965454]
[212.43209839 353.52688599]
[219.36703491 366.82943726]
[225.80567932 380.37918091]
[231.73924255 394.15756226]
[237.15962219 408.14581299]
[242.05940247 422.32479858]
[246.43191528 436.67517090]
[250.27116394 451.17727661]
[253.57192993 465.81137085]
[256.32968140 480.55743408]
[258.54064941 495.39532471]
[260.20184326 510.30477905]
[261.31097412 525.26544189]
[261.86651611 540.25689697]
[261.86770630 555.25860596]
[261.31457520 570.25012207]
[260.20788574 585.21093750]
[258.54910278 600.12066650]
[256.34051514 614.95892334]
[253.58515930 629.70544434]
[250.28675842 644.34008789]
[246.44984436 658.84277344]
[242.07965088 673.19384766]
[237.18215942 687.37365723]
[231.76403809 701.36273193]
[225.83268738 715.14208984]
[219.39624023 728.69287109]
[212.46345520 741.99658203]
[205.04382324 755.03503418]
[197.14746094 767.79034424]
[188.78515625 780.24523926]
[179.96833801 792.38256836]
[170.70906067 804.18585205]
[161.01994324 815.63891602]
[150.91424561 826.72613525]
[140.40574646 837.43231201]
[129.50881958 847.74291992]
[118.23834991 857.64385986]
[106.60971832 867.12152100]
[94.63881683 876.16302490]
[82.34198761 884.75604248]
[69.73603821 892.88879395]
[56.83817291 900.55017090]
[43.66601944 907.72967529]
[30.23756981 914.41760254]
[16.57115936 920.60473633]
[2.68545866 926.28265381]
[-11.40056705 931.44360352]
[-25.66767693 936.08056641]
[-40.09638596 940.18713379]
[-54.66698456 943.75769043]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[103 167]
[104 166]
[106 164]
[107 163]
[108 162]
[114 156]
[115 155]
[116 154]
[122 140]
[123 139]
[124 138]
[125 137]
[126 136]
[127 135]
] def

init

% Start Annotations
103 167 0.0 1 colorpair
104 166 0.0 0.6 colorpair
106 164 0.16 0.6 colorpair
107 163 0.48 0.6 colorpair
108 162 0.0 0.2 colorpair
114 156 0.0 1 colorpair
116 154 0.16 0.6 colorpair
122 140 0.16 1 colorpair
123 139 0.0 1 colorpair
124 138 0.0 0.6 colorpair
125 137 0.16 1 colorpair
127 135 0.16 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
104 166 1 gmark
106 164 1 gmark
164 cmark
107 163 1 gmark
107 cmark
163 cmark
108 162 2 gmark
115 155 3 gmark
115 cmark
155 cmark
116 154 1 gmark
154 cmark
122 cmark
140 cmark
124 138 1 gmark
137 cmark
126 136 3 gmark
126 cmark
136 cmark
127 135 2 gmark
127 cmark

% End Annotations
showpage
end
%%EOF
