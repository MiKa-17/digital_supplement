%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 17:09:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
____________________________________AUCAUGGCUAACGCCAAUCAUAAGUCACGCCCCGUCGUAACGGAACGCUUCGUCACUGUUCAAGAGUCAGCGCGCCAUCAUUCCUUGUCUAGGGUUCUCCGUGCCAUCAGAGCGCACCGGAAACUGAACACGACGUACUUCCCGUGGAUCAAAUUGGCUGGAGUAUGGCUUGAGGAAGCGGGAUUCGAGGCCGGAGAACGCGUCCGGAUCACCGUCGAG\
GACAAGCGGCUCAUCAUCACG___________________\
) } def
/len { sequence length } bind def

/coor [
[-162.18074036 369.86520386]
[-173.02416992 380.23135376]
[-184.18786621 390.25180054]
[-195.66081238 399.91662598]
[-207.43167114 409.21630859]
[-219.48881531 418.14166260]
[-231.82037354 426.68389893]
[-244.41416931 434.83459473]
[-257.25778198 442.58566284]
[-270.33850098 449.92947388]
[-283.64346313 456.85879517]
[-297.15948486 463.36679077]
[-310.87329102 469.44702148]
[-324.77130127 475.09347534]
[-338.83978271 480.30062866]
[-353.06491089 485.06326294]
[-367.43264771 489.37677002]
[-381.92874146 493.23681641]
[-396.53894043 496.63964844]
[-411.24880981 499.58184814]
[-426.04385376 502.06057739]
[-440.90945435 504.07336426]
[-455.83093262 505.61819458]
[-470.79357910 506.69357300]
[-485.78262329 507.29846191]
[-500.78326416 507.43218994]
[-515.78070068 507.09469604]
[-530.76013184 506.28628540]
[-545.70678711 505.00775146]
[-560.60595703 503.26037598]
[-575.44281006 501.04586792]
[-590.20281982 498.36639404]
[-604.87139893 495.22463989]
[-619.43402100 491.62368774]
[-633.87634277 487.56707764]
[-648.18414307 483.05880737]
[-662.34326172 478.10336304]
[-676.33972168 472.70562744]
[-690.15979004 466.87088013]
[-703.78967285 460.60494995]
[-717.21606445 453.91397095]
[-730.42565918 446.80456543]
[-743.40545654 439.28372192]
[-756.14257812 431.35891724]
[-768.62451172 423.03790283]
[-780.83886719 414.32894897]
[-792.77368164 405.24063110]
[-804.41711426 395.78192139]
[-815.75775146 385.96212769]
[-826.78430176 375.79098511]
[-837.48590088 365.27850342]
[-847.85205078 354.43505859]
[-857.87249756 343.27136230]
[-867.53729248 331.79840088]
[-876.83697510 320.02755737]
[-885.76232910 307.97039795]
[-894.30456543 295.63882446]
[-902.45526123 283.04501343]
[-910.20629883 270.20141602]
[-917.55010986 257.12069702]
[-924.47943115 243.81573486]
[-930.98742676 230.29969788]
[-937.06762695 216.58590698]
[-942.71411133 202.68788147]
[-947.92120361 188.61936951]
[-952.68383789 174.39424133]
[-956.99731445 160.02653503]
[-960.85742188 145.53042603]
[-964.26019287 130.92021179]
[-967.20239258 116.21033478]
[-969.68115234 101.41529846]
[-971.69390869 86.54970551]
[-973.23870850 71.62821960]
[-974.31408691 56.66557312]
[-974.91894531 41.67653275]
[-975.05267334 26.67588806]
[-974.71520996 11.67844582]
[-973.90673828 -3.30099511]
[-972.62823486 -18.24765205]
[-970.88085938 -33.14677048]
[-968.66632080 -47.98365402]
[-965.98681641 -62.74365616]
[-962.84509277 -77.41220856]
[-959.24407959 -91.97483826]
[-955.18750000 -106.41717529]
[-950.67919922 -120.72496033]
[-945.72375488 -134.88407898]
[-940.32598877 -148.88055420]
[-934.49127197 -162.70057678]
[-928.22528076 -176.33050537]
[-921.53430176 -189.75689697]
[-914.42492676 -202.96649170]
[-906.90405273 -215.94625854]
[-898.97924805 -228.68338013]
[-890.65820312 -241.16528320]
[-881.94927979 -253.37966919]
[-872.86096191 -265.31448364]
[-863.40222168 -276.95791626]
[-853.58245850 -288.29849243]
[-843.41125488 -299.32504272]
[-832.89880371 -310.02667236]
[-822.05529785 -320.39282227]
[-810.89160156 -330.41323853]
[-799.41870117 -340.07803345]
[-787.64782715 -349.37771606]
[-775.59063721 -358.30307007]
[-763.25909424 -366.84527588]
[-750.66528320 -374.99594116]
[-737.82165527 -382.74700928]
[-724.74090576 -390.09082031]
[-711.43597412 -397.02011108]
[-697.91992188 -403.52807617]
[-684.20611572 -409.60830688]
[-670.30810547 -415.25473022]
[-656.23956299 -420.46185303]
[-642.01446533 -425.22448730]
[-627.64672852 -429.53796387]
[-613.15063477 -433.39801025]
[-598.54040527 -436.80081177]
[-583.83050537 -439.74301147]
[-569.03546143 -442.22171021]
[-554.16986084 -444.23446655]
[-539.24841309 -445.77929688]
[-524.28576660 -446.85464478]
[-509.29672241 -447.45950317]
[-494.29608154 -447.59323120]
[-479.29864502 -447.25570679]
[-464.31918335 -446.44726562]
[-449.37252808 -445.16873169]
[-434.47341919 -443.42132568]
[-419.63653564 -441.20678711]
[-404.87652588 -438.52731323]
[-390.20797729 -435.38552856]
[-375.64535522 -431.78454590]
[-361.20303345 -427.72790527]
[-346.89523315 -423.21963501]
[-332.73611450 -418.26419067]
[-318.73965454 -412.86642456]
[-304.91961670 -407.03167725]
[-291.28970337 -400.76571655]
[-277.86331177 -394.07470703]
[-264.65374756 -386.96527100]
[-251.67398071 -379.44442749]
[-238.93685913 -371.51959229]
[-226.45495605 -363.19857788]
[-214.24057007 -354.48962402]
[-202.30578613 -345.40127563]
[-190.66233826 -335.94256592]
[-179.32176208 -326.12277222]
[-168.29522705 -315.95159912]
[-157.59361267 -305.43908691]
[-147.22747803 -294.59564209]
[-137.20706177 -283.43191528]
[-127.54225922 -271.95895386]
[-118.24259186 -260.18807983]
[-109.31725311 -248.13092041]
[-100.77503967 -235.79934692]
[-92.62438202 -223.20553589]
[-84.87333679 -210.36192322]
[-77.52953339 -197.28117371]
[-70.60023499 -183.97621155]
[-64.09227753 -170.46015930]
[-58.01207733 -156.74635315]
[-52.36564255 -142.84834290]
[-47.15853882 -128.77981567]
[-42.39590454 -114.55467987]
[-38.08244705 -100.18696594]
[-34.22241974 -85.69084930]
[-30.81962776 -71.08064270]
[-27.87743378 -56.37075806]
[-25.39874077 -41.57571793]
[-23.38599586 -26.71011734]
[-21.84118271 -11.78863049]
[-20.76582718 3.17401624]
[-20.16098976 18.16305733]
[-20.02726936 33.16370010]
[-20.36479759 48.16114426]
[-21.17323875 63.14058304]
[-22.45179749 78.08723450]
[-7.55390835 79.83448792]
[7.34398174 81.58174133]
[22.24187088 83.32898712]
[28.25302124 65.69809723]
[38.20059586 49.94919586]
[51.53881836 36.94635010]
[67.53587341 27.40296173]
[85.31409454 21.84263802]
[103.89805603 20.57044411]
[122.26815033 23.65618134]
[139.41650391 30.93054962]
[154.40223694 41.99443817]
[166.40318298 56.24082184]
[179.65072632 49.20499420]
[192.89825439 42.16917038]
[194.07441711 26.78670692]
[203.39846802 14.49583340]
[217.89514160 9.21852493]
[232.93859863 12.63874912]
[243.72853088 23.66512680]
[246.82189941 38.77917862]
[241.23164368 53.15806961]
[228.74156189 62.21354294]
[213.33721924 63.05603409]
[199.93408203 55.41670609]
[186.68655396 62.45252991]
[173.43901062 69.48835754]
[177.47099304 76.92918396]
[180.73817444 84.88205719]
[183.17744446 93.26715851]
[184.73408508 101.99706268]
[199.69270325 103.11045837]
[214.65132141 104.22384644]
[229.60993958 105.33724213]
[244.56855774 106.45063019]
[259.52719116 107.56402588]
[268.22164917 94.98015594]
[281.95675659 88.48069000]
[297.00100708 89.72061920]
[309.32223511 98.26714325]
[315.66848755 111.74269867]
[330.62710571 112.85609436]
[345.58575439 113.96948242]
[357.39465332 103.46589661]
[373.16687012 104.47229004]
[383.54501343 116.39158630]
[382.37191772 132.15228271]
[370.34356689 142.40382385]
[354.59616089 141.06417847]
[344.47235107 128.92810059]
[329.51373291 127.81471252]
[314.55511475 126.70132446]
[306.28381348 139.08886719]
[292.83309937 145.71716309]
[277.77108765 144.71623230]
[265.14950562 136.25500488]
[258.41378784 122.52264404]
[243.45516968 121.40925598]
[228.49655151 120.29586029]
[213.53793335 119.18247223]
[198.57931519 118.06907654]
[183.62068176 116.95568848]
[180.86123657 123.92959595]
[194.80905151 129.44850159]
[208.75686646 134.96740723]
[222.70460510 140.48654175]
[217.18527222 154.43418884]
[203.23796082 148.91523743]
[189.29014587 143.39631653]
[175.34233093 137.87741089]
[172.58287048 144.85131836]
[184.25340271 154.27462769]
[195.92395020 163.69792175]
[212.04579163 168.94412231]
[211.46759033 185.88819885]
[195.02561951 190.02319336]
[186.50064087 175.36846924]
[174.83010864 165.94515991]
[163.15957642 156.52186584]
[152.97996521 165.71122742]
[141.49629211 173.10357666]
[129.02050781 178.51982117]
[115.88805389 181.83422852]
[102.44885254 182.97732544]
[89.05797577 181.93724060]
[76.06626129 178.75955200]
[63.81114578 173.54556274]
[52.60784912 166.44926453]
[42.74133301 157.67274475]
[34.45901489 147.46052551]
[27.96459770 136.09280396]
[23.41307640 123.87765503]
[20.90707970 111.14282990]
[20.49462128 98.22687531]
[5.59673166 96.47962952]
[-9.30115795 94.73237610]
[-24.19904709 92.98513031]
[-26.41355324 107.82201385]
[-29.09300423 122.58201599]
[-32.23475647 137.25057983]
[-35.83570862 151.81321716]
[-39.89230728 166.25555420]
[-44.40055084 180.56333923]
[-49.35598755 194.72247314]
[-54.75373077 208.71894836]
[-60.58844757 222.53898621]
[-66.85438538 236.16893005]
[-73.54535675 249.59532166]
[-80.65476227 262.80493164]
[-88.17557526 275.78469849]
[-96.10038757 288.52182007]
[-104.42137909 301.00375366]
[-113.13032532 313.21813965]
[-122.21863556 325.15295410]
[-131.67735291 336.79641724]
[-141.49711609 348.13702393]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[179 276]
[180 275]
[181 274]
[182 273]
[192 206]
[193 205]
[194 204]
[210 241]
[211 240]
[212 239]
[213 238]
[214 237]
[215 236]
[220 231]
[221 230]
[222 229]
[250 258]
[251 257]
[252 256]
] def

init

% Start Annotations
179 276 0.16 1 colorpair
180 275 0.0 1 colorpair
181 274 0.0 1 colorpair
182 273 0.0 1 colorpair
192 206 0.0 1 colorpair
193 205 0.16 1 colorpair
194 204 0.0 1 colorpair
210 241 0.0 1 colorpair
212 239 0.0 0.2 colorpair
214 237 0.0 1 colorpair
215 236 0.0 1 colorpair
220 231 0.16 1 colorpair
221 230 0.16 1 colorpair
222 229 0.0 1 colorpair
250 258 0.0 0.2 colorpair
251 257 0.0 1 colorpair
252 256 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
179 cmark
193 cmark
205 cmark
211 240 4 gmark
240 cmark
212 239 2 gmark
213 238 4 gmark
213 cmark
238 cmark
231 cmark
230 cmark
250 258 2 gmark
252 cmark
256 cmark

% End Annotations
showpage
end
%%EOF
