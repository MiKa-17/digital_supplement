%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 23:14:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
____________AAAAUGCAGCAAAAACGGGUCGUUCAAAGGCUGACGAUUAUAUGCAUCACGCUUAUGGCAUUCAUGUGGAUCACACGCGGCUCACUGUGUGAACUGACCAUCAAACAGGGAAACACGGAGGUAGCGGCCAUGUUGGCUUACGAAGCCAAA___\
) } def
/len { sequence length } bind def

/coor [
[60.73169327 339.82116699]
[50.16032791 329.11785889]
[41.73588943 316.65417480]
[35.74530792 302.85461426]
[32.39262009 288.18920898]
[31.79201698 273.15744019]
[33.96395493 258.27130127]
[38.83446121 244.03778076]
[46.23764801 230.94169617]
[55.92136002 219.42907715]
[67.55577850 209.89204407]
[80.74463654 202.65544128]
[95.03873444 197.96571350]
[93.05738831 183.09713745]
[91.07604218 168.22857666]
[89.09469604 153.36001587]
[87.11335754 138.49143982]
[85.13201141 123.62287903]
[79.74243164 137.62118530]
[77.06966400 152.38113403]
[66.46802521 162.99269104]
[51.71057510 165.67926025]
[38.04940796 159.48469543]
[30.34646225 146.61361694]
[31.34317207 131.64677429]
[40.68481445 119.91077423]
[55.04745865 115.58240509]
[68.34493256 108.64141846]
[53.34761810 108.35755920]
[38.35030365 108.07369995]
[23.35298920 107.78983307]
[8.35567570 107.50597382]
[-6.64163828 107.22211456]
[-11.80843925 121.45527649]
[-21.31872940 133.23802185]
[-34.14090347 141.29223633]
[-48.88410950 144.74429321]
[-63.94911575 143.21969604]
[-77.70177460 136.88385010]
[-88.65031433 126.42400360]
[-95.60710907 112.97477722]
[-97.81753540 97.99503326]
[-95.04183197 83.10966492]
[-87.58108521 69.93332672]
[-76.24457550 59.89528656]
[-62.26200485 54.08439636]
[-47.15009689 53.13097763]
[-32.54808426 57.13845444]
[-20.03987503 65.67211914]
[-10.98227310 77.80631256]
[-6.35777617 92.22480011]
[8.63953781 92.50865936]
[23.63685226 92.79251862]
[38.63416672 93.07638550]
[53.63147736 93.36024475]
[68.62879181 93.64410400]
[73.62261200 88.04841614]
[60.59732056 80.60920715]
[47.57202911 73.16999817]
[34.54674149 65.73078918]
[21.52145004 58.29158401]
[7.17325926 53.91786194]
[-2.51840615 42.46921158]
[-4.46350527 27.59585953]
[1.95812762 14.03995228]
[14.69905186 6.12358522]
[29.69701385 6.37077379]
[42.17014313 14.70270538]
[48.14159012 28.46307755]
[57.00875473 40.56156540]
[65.87592316 52.66005325]
[74.74308777 64.75853729]
[83.61024475 76.85702515]
[88.60406494 71.26133728]
[86.62271881 56.39276886]
[84.64138031 41.52420044]
[82.66003418 26.65563583]
[72.23305511 13.99822140]
[78.23383331 -1.26358187]
[94.48928833 -3.42973948]
[104.27719879 9.72810650]
[97.52860260 24.67429161]
[99.50994110 39.54285812]
[101.49128723 54.41142273]
[103.47263336 69.27999115]
[110.76374817 71.03773499]
[114.27945709 56.45555496]
[128.86157227 59.97148895]
[125.34597778 74.55321503]
[132.63708496 76.31095123]
[141.17602539 63.97861099]
[149.71495056 51.64627075]
[158.25389099 39.31393051]
[166.79283142 26.98159218]
[175.33175659 14.64925098]
[183.87069702 2.31691122]
[192.40962219 -10.01542854]
[196.45521545 -26.47961998]
[213.39590454 -27.14987946]
[218.72961426 -11.05678082]
[204.74195862 -1.47649550]
[196.20303345 10.85584450]
[187.66409302 23.18818474]
[179.12516785 35.52052689]
[170.58622742 47.85286331]
[162.04730225 60.18520355]
[153.50836182 72.51754761]
[144.96943665 84.84988403]
[147.27355957 91.98718262]
[160.67961121 85.25831604]
[174.08567810 78.52945709]
[187.49172974 71.80059052]
[200.89778137 65.07172394]
[214.30384827 58.34286499]
[224.95733643 47.78336716]
[239.66349792 44.82886124]
[253.56861877 50.45447159]
[262.08340454 62.80349350]
[262.39761353 77.80020142]
[254.40751648 90.49501801]
[240.75021362 96.69809723]
[225.93165588 94.36138153]
[211.12168884 96.74146271]
[196.31172180 99.12154388]
[181.50173950 101.50161743]
[166.69177246 103.88169861]
[151.88180542 106.26177979]
[154.18592834 113.39907837]
[168.32397461 118.41063690]
[182.46200562 123.42220306]
[196.61924744 116.39738464]
[211.57035828 121.51987457]
[218.44511414 135.75059509]
[213.16482544 150.64671326]
[198.86221313 157.37062073]
[184.02276611 151.93313599]
[177.45045471 137.56024170]
[163.31240845 132.54867554]
[149.17436218 127.53711700]
[119.72187042 133.64660645]
[100.00057983 121.64153290]
[101.98191833 136.51010132]
[103.96326447 151.37866211]
[105.94461060 166.24723816]
[107.92595673 181.11579895]
[109.90730286 195.98435974]
[124.93067169 196.76731873]
[139.55430603 200.29772949]
[153.28015137 206.45530701]
[165.64070129 215.03038025]
[176.21495056 225.73083496]
[184.64274597 238.19224548]
[190.63703918 251.99018860]
[193.99368286 266.65469360]
[194.59834290 281.68627930]
[192.43040466 296.57302856]
[187.56373596 310.80783081]
[180.16409302 323.90591431]
[170.48347473 335.42114258]
[158.85162354 344.96130371]
[145.66471863 352.20147705]
[131.37188721 356.89508057]
[116.45995331 358.88220215]
[101.43679810 358.09518433]
[86.81410217 354.56085205]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 146]
[14 145]
[15 144]
[16 143]
[17 142]
[18 141]
[28 56]
[29 55]
[30 54]
[31 53]
[32 52]
[33 51]
[74 85]
[75 84]
[76 83]
[77 82]
[90 108]
[91 107]
[92 106]
[93 105]
[94 104]
[95 103]
[96 102]
[97 101]
[128 139]
[129 138]
[130 137]
] def

init

% Start Annotations
13 146 0.16 1 colorpair
14 145 0.16 0.6 colorpair
15 144 0.16 1 colorpair
16 143 0.0 0.2 colorpair
17 142 0.16 1 colorpair
18 141 0.0 0.6 colorpair
28 56 0.0 1 colorpair
29 55 0.16 0.6 colorpair
30 54 0.16 0.6 colorpair
31 53 0.32 1 colorpair
32 52 0.16 1 colorpair
33 51 0.32 0.2 colorpair
74 85 0.0 1 colorpair
75 84 0.16 0.2 colorpair
76 83 0.0 1 colorpair
77 82 0.0 0.6 colorpair
90 108 0.16 0.2 colorpair
91 107 0.0 1 colorpair
92 106 0.16 0.2 colorpair
93 105 0.16 1 colorpair
94 104 0.0 1 colorpair
95 103 0.0 1 colorpair
96 102 0.32 1 colorpair
97 101 0.0 0.6 colorpair
128 139 0.16 1 colorpair
129 138 0.16 0.2 colorpair
130 137 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
13 cmark
14 145 1 gmark
14 cmark
15 cmark
144 cmark
16 143 2 gmark
142 cmark
18 141 1 gmark
29 55 1 gmark
29 cmark
30 54 1 gmark
30 cmark
54 cmark
31 cmark
53 cmark
52 cmark
33 51 2 gmark
33 cmark
51 cmark
75 84 2 gmark
75 cmark
84 cmark
77 82 1 gmark
90 108 2 gmark
90 cmark
92 106 2 gmark
106 cmark
93 cmark
105 cmark
96 cmark
102 cmark
97 101 1 gmark
128 cmark
139 cmark
129 138 2 gmark
129 cmark
138 cmark
130 cmark
137 cmark

% End Annotations
showpage
end
%%EOF
