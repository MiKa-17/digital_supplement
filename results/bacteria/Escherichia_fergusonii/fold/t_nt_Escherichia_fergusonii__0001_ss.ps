%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 03:07:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
____________________________________________________AGAAGCCCGCAGAAAUAGGCAUUAAUUAUGCGCAUCGUCAUCC___UCACGUUAUUGAUUGUGCUCUUACUGGUAAGUUAUUCACUUUAUUAA______________________________________________________________________________________________________________\
___________________________________________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50205994 92.22761536]
[62.51153946 91.68294525]
[47.53337860 90.86614990]
[32.57252121 89.77751160]
[17.63389778 88.41738892]
[2.72243619 86.78622437]
[-12.15694809 84.88455963]
[-26.99934769 82.71302032]
[-41.79986954 80.27232361]
[-56.55362701 77.56327057]
[-71.25576782 74.58676147]
[-85.90142822 71.34378052]
[-100.48578644 67.83538055]
[-115.00403595 64.06273651]
[-129.45138550 60.02708054]
[-143.82307434 55.72975159]
[-158.11434937 51.17216110]
[-172.32052612 46.35581207]
[-186.43688965 41.28229523]
[-200.45880127 35.95328522]
[-214.38163757 30.37053490]
[-228.20080566 24.53588867]
[-241.91174316 18.45126915]
[-255.50993347 12.11868095]
[-268.99087524 5.54021549]
[-282.35015869 -1.28195965]
[-295.58334351 -8.34559441]
[-308.68609619 -15.64835930]
[-321.65408325 -23.18784714]
[-334.48303223 -30.96156883]
[-347.16870117 -38.96696472]
[-359.70687866 -47.20139313]
[-372.09350586 -55.66213989]
[-384.32443237 -64.34641266]
[-396.39566040 -73.25135040]
[-408.30319214 -82.37400818]
[-420.04312134 -91.71139526]
[-431.61154175 -101.26041412]
[-443.00466919 -111.01792908]
[-454.21875000 -120.98071289]
[-465.25006104 -131.14549255]
[-476.09497070 -141.50889587]
[-486.74990845 -152.06753540]
[-497.21136475 -162.81790161]
[-507.47589111 -173.75645447]
[-517.54010010 -184.87959290]
[-527.40063477 -196.18365479]
[-537.05432129 -207.66490173]
[-546.49792480 -219.31954956]
[-555.72833252 -231.14376831]
[-564.74249268 -243.13363647]
[-573.53747559 -255.28521729]
[-582.11035156 -267.59448242]
[-590.45825195 -280.05740356]
[-598.57849121 -292.66986084]
[-606.46838379 -305.42767334]
[-614.12530518 -318.32669067]
[-621.54675293 -331.36257935]
[-628.73028564 -344.53109741]
[-635.67346191 -357.82788086]
[-642.37408447 -371.24853516]
[-648.82989502 -384.78866577]
[-655.03875732 -398.44378662]
[-660.99859619 -412.20941162]
[-666.70758057 -426.08096313]
[-672.16363525 -440.05392456]
[-677.36517334 -454.12362671]
[-682.31030273 -468.28549194]
[-686.99743652 -482.53479004]
[-691.42510986 -496.86688232]
[-695.59179688 -511.27697754]
[-699.49609375 -525.76037598]
[-703.13677979 -540.31225586]
[-706.51263428 -554.92791748]
[-709.62249756 -569.60241699]
[-712.46539307 -584.33093262]
[-715.04034424 -599.10870361]
[-717.34661865 -613.93078613]
[-719.38330078 -628.79229736]
[-721.14978027 -643.68829346]
[-722.64550781 -658.61395264]
[-723.86993408 -673.56433105]
[-724.82269287 -688.53442383]
[-725.50347900 -703.51940918]
[-725.91198730 -718.51428223]
[-726.04821777 -733.51403809]
[-725.91198730 -748.51385498]
[-725.50347900 -763.50866699]
[-724.82269287 -778.49365234]
[-723.86993408 -793.46380615]
[-722.64550781 -808.41412354]
[-721.14978027 -823.33978271]
[-719.38330078 -838.23583984]
[-717.34661865 -853.09735107]
[-715.04040527 -867.91943359]
[-712.46545410 -882.69714355]
[-709.62249756 -897.42572021]
[-706.51263428 -912.10021973]
[-703.13684082 -926.71582031]
[-699.49615479 -941.26770020]
[-695.59185791 -955.75109863]
[-691.42517090 -970.16125488]
[-686.99749756 -984.49328613]
[-682.31036377 -998.74261475]
[-677.36523438 -1012.90447998]
[-672.16375732 -1026.97424316]
[-666.70764160 -1040.94714355]
[-660.99871826 -1054.81872559]
[-655.03881836 -1068.58435059]
[-648.82995605 -1082.23950195]
[-642.37414551 -1095.77954102]
[-635.67358398 -1109.20019531]
[-628.73034668 -1122.49707031]
[-621.54687500 -1135.66552734]
[-614.12542725 -1148.70141602]
[-606.46850586 -1161.60046387]
[-598.57861328 -1174.35827637]
[-590.45837402 -1186.97070312]
[-582.11047363 -1199.43359375]
[-573.53759766 -1211.74291992]
[-564.74261475 -1223.89453125]
[-555.72845459 -1235.88439941]
[-546.49804688 -1247.70861816]
[-537.05444336 -1259.36328125]
[-527.40075684 -1270.84448242]
[-517.54022217 -1282.14855957]
[-507.47601318 -1293.27172852]
[-497.21151733 -1304.21020508]
[-486.75006104 -1314.96069336]
[-476.09512329 -1325.51928711]
[-465.25021362 -1335.88269043]
[-454.21890259 -1346.04748535]
[-443.00482178 -1356.01025391]
[-431.61172485 -1365.76770020]
[-420.04327393 -1375.31677246]
[-408.30337524 -1384.65417480]
[-396.39584351 -1393.77685547]
[-384.32461548 -1402.68176270]
[-372.09368896 -1411.36608887]
[-359.70706177 -1419.82678223]
[-347.16885376 -1428.06127930]
[-334.48318481 -1436.06665039]
[-321.65426636 -1443.84033203]
[-308.68627930 -1451.37988281]
[-295.58352661 -1458.68261719]
[-282.35034180 -1465.74621582]
[-268.99105835 -1472.56848145]
[-255.51011658 -1479.14685059]
[-241.91192627 -1485.47949219]
[-228.20098877 -1491.56408691]
[-214.38182068 -1497.39880371]
[-200.45899963 -1502.98156738]
[-186.43708801 -1508.31054688]
[-172.32070923 -1513.38403320]
[-158.11454773 -1518.20043945]
[-143.82327271 -1522.75805664]
[-129.45158386 -1527.05529785]
[-115.00423431 -1531.09094238]
[-100.48598480 -1534.86364746]
[-85.90162659 -1538.37207031]
[-71.25596619 -1541.61499023]
[-56.55383301 -1544.59155273]
[-41.80007172 -1547.30053711]
[-26.99955177 -1549.74133301]
[-12.15715313 -1551.91284180]
[2.72223091 -1553.81445312]
[17.63369179 -1555.44567871]
[32.57231522 -1556.80578613]
[47.53317261 -1557.89440918]
[62.51133347 -1558.71130371]
[77.50185394 -1559.25598145]
[92.49979401 -1559.52832031]
[107.50020599 -1559.52832031]
[122.49814606 -1559.25598145]
[137.48866272 -1558.71130371]
[152.46682739 -1557.89440918]
[167.42768860 -1556.80578613]
[182.36630249 -1555.44567871]
[197.27777100 -1553.81445312]
[212.15715027 -1551.91284180]
[226.99955750 -1549.74133301]
[241.80006409 -1547.30053711]
[256.55383301 -1544.59155273]
[271.25598145 -1541.61499023]
[285.90164185 -1538.37207031]
[300.48599243 -1534.86364746]
[315.00424194 -1531.09094238]
[329.45156860 -1527.05529785]
[343.82327271 -1522.75805664]
[358.11456299 -1518.20043945]
[372.32070923 -1513.38403320]
[386.43707275 -1508.31054688]
[400.45898438 -1502.98156738]
[414.38183594 -1497.39880371]
[428.20098877 -1491.56408691]
[441.91192627 -1485.47949219]
[455.51010132 -1479.14685059]
[468.99105835 -1472.56848145]
[482.35034180 -1465.74621582]
[495.58352661 -1458.68261719]
[508.68627930 -1451.37988281]
[521.65423584 -1443.84033203]
[534.48321533 -1436.06665039]
[547.16888428 -1428.06127930]
[559.70709229 -1419.82678223]
[572.09368896 -1411.36608887]
[584.32458496 -1402.68176270]
[596.39581299 -1393.77685547]
[608.30334473 -1384.65417480]
[620.04327393 -1375.31677246]
[631.61169434 -1365.76770020]
[643.00482178 -1356.01025391]
[654.21887207 -1346.04748535]
[665.25018311 -1335.88269043]
[676.09509277 -1325.51928711]
[686.75006104 -1314.96069336]
[697.21148682 -1304.21020508]
[707.47601318 -1293.27172852]
[717.54022217 -1282.14855957]
[727.40075684 -1270.84448242]
[737.05444336 -1259.36328125]
[746.49804688 -1247.70861816]
[755.72845459 -1235.88439941]
[764.74261475 -1223.89453125]
[773.53759766 -1211.74291992]
[782.11047363 -1199.43359375]
[790.45837402 -1186.97070312]
[798.57861328 -1174.35827637]
[806.46850586 -1161.60046387]
[814.12542725 -1148.70141602]
[821.54687500 -1135.66552734]
[828.73034668 -1122.49707031]
[835.67358398 -1109.20019531]
[842.37414551 -1095.77954102]
[848.82995605 -1082.23950195]
[855.03881836 -1068.58435059]
[860.99871826 -1054.81872559]
[866.70764160 -1040.94714355]
[872.16375732 -1026.97424316]
[877.36523438 -1012.90447998]
[882.31036377 -998.74261475]
[886.99749756 -984.49328613]
[891.42517090 -970.16125488]
[895.59185791 -955.75109863]
[899.49615479 -941.26770020]
[903.13684082 -926.71582031]
[906.51263428 -912.10021973]
[909.62249756 -897.42572021]
[912.46545410 -882.69714355]
[915.04040527 -867.91943359]
[917.34661865 -853.09735107]
[919.38330078 -838.23583984]
[921.14978027 -823.33978271]
[922.64550781 -808.41412354]
[923.86993408 -793.46380615]
[924.82269287 -778.49365234]
[925.50347900 -763.50866699]
[925.91198730 -748.51385498]
[926.04821777 -733.51403809]
[925.91198730 -718.51428223]
[925.50347900 -703.51940918]
[924.82269287 -688.53442383]
[923.86993408 -673.56433105]
[922.64550781 -658.61395264]
[921.14978027 -643.68829346]
[919.38330078 -628.79229736]
[917.34661865 -613.93078613]
[915.04034424 -599.10870361]
[912.46539307 -584.33093262]
[909.62249756 -569.60241699]
[906.51263428 -554.92791748]
[903.13677979 -540.31225586]
[899.49609375 -525.76037598]
[895.59179688 -511.27697754]
[891.42510986 -496.86688232]
[886.99743652 -482.53479004]
[882.31030273 -468.28549194]
[877.36517334 -454.12362671]
[872.16363525 -440.05392456]
[866.70758057 -426.08096313]
[860.99859619 -412.20941162]
[855.03875732 -398.44378662]
[848.82989502 -384.78866577]
[842.37408447 -371.24853516]
[835.67346191 -357.82788086]
[828.73028564 -344.53109741]
[821.54675293 -331.36257935]
[814.12530518 -318.32669067]
[806.46838379 -305.42767334]
[798.57849121 -292.66986084]
[790.45825195 -280.05740356]
[782.11035156 -267.59448242]
[773.53747559 -255.28521729]
[764.74249268 -243.13363647]
[755.72833252 -231.14376831]
[746.49792480 -219.31954956]
[737.05432129 -207.66490173]
[727.40063477 -196.18365479]
[717.54010010 -184.87959290]
[707.47589111 -173.75645447]
[697.21136475 -162.81790161]
[686.74987793 -152.06753540]
[676.09497070 -141.50889587]
[665.25006104 -131.14549255]
[654.21875000 -120.98071289]
[643.00469971 -111.01792908]
[631.61157227 -101.26041412]
[620.04315186 -91.71139526]
[608.30322266 -82.37400818]
[596.39569092 -73.25135040]
[584.32446289 -64.34641266]
[572.09350586 -55.66213989]
[559.70690918 -47.20139313]
[547.16870117 -38.96696472]
[534.48303223 -30.96156883]
[521.65411377 -23.18784714]
[508.68609619 -15.64835930]
[495.58334351 -8.34559441]
[482.35015869 -1.28195965]
[468.99087524 5.54021549]
[455.50991821 12.11868095]
[441.91174316 18.45126915]
[428.20080566 24.53588867]
[414.38162231 30.37053490]
[400.45880127 35.95328522]
[386.43688965 41.28229523]
[372.32052612 46.35581207]
[358.11434937 51.17216110]
[343.82305908 55.72975159]
[329.45138550 60.02708054]
[315.00402832 64.06273651]
[300.48577881 67.83538055]
[285.90142822 71.34378052]
[271.25576782 74.58676147]
[256.55361938 77.56327057]
[241.79986572 80.27232361]
[226.99934387 82.71302032]
[212.15695190 84.88455963]
[197.27755737 86.78622437]
[182.36610413 88.41738892]
[167.42747498 89.77751160]
[152.46661377 90.86614990]
[137.48846436 91.68294525]
[122.49794006 92.22761536]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
