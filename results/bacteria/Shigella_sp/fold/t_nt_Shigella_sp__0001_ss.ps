%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Mar  9 05:51:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
____________________________________________________________________________________AUGACGCUCGC__A__U_G_CAUG___UUCUG__AUGAUGAAG__CAGCUCAG______CACAUUGCUG___GUAUUCUUACCGAUACGA_UUCUCAGCUGGCUAA___A__GGAAGUAA___________________________________________________\
_______________________________________________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50201416 92.23072815]
[62.51127625 91.69227600]
[47.53261948 90.88481140]
[32.57087326 89.80859375]
[17.63085747 88.46397400]
[2.71738434 86.85137939]
[-12.16473770 84.97132874]
[-27.01071167 82.82444000]
[-41.81575775 80.41139221]
[-56.57509995 77.73297119]
[-71.28398132 74.79003906]
[-85.93766785 71.58353424]
[-100.53143311 68.11450195]
[-115.06056976 64.38405609]
[-129.52040100 60.39340210]
[-143.90626526 56.14381790]
[-158.21353149 51.63668060]
[-172.43759155 46.87343979]
[-186.57383728 41.85562897]
[-200.61773682 36.58486938]
[-214.56477356 31.06285477]
[-228.41041565 25.29136658]
[-242.15023804 19.27226639]
[-255.77978516 13.00749302]
[-269.29467773 6.49906445]
[-282.69058228 -0.25092143]
[-295.96313477 -7.24028921]
[-309.10809326 -14.46678638]
[-322.12121582 -21.92808342]
[-334.99829102 -29.62177849]
[-347.73516846 -37.54538727]
[-360.32778931 -45.69636154]
[-372.77203369 -54.07207108]
[-385.06396484 -62.66981888]
[-397.19952393 -71.48683167]
[-409.17489624 -80.52027130]
[-420.98614502 -89.76722717]
[-432.62951660 -99.22470856]
[-444.10125732 -108.88968658]
[-455.39761353 -118.75903320]
[-466.51501465 -128.82955933]
[-477.44982910 -139.09805298]
[-488.19857788 -149.56115723]
[-498.75775146 -160.21554565]
[-509.12396240 -171.05775452]
[-519.29388428 -182.08430481]
[-529.26422119 -193.29164124]
[-539.03179932 -204.67614746]
[-548.59344482 -216.23416138]
[-557.94604492 -227.96194458]
[-567.08660889 -239.85572815]
[-576.01220703 -251.91168213]
[-584.71990967 -264.12591553]
[-593.20697021 -276.49447632]
[-601.47064209 -289.01342773]
[-609.50830078 -301.67868042]
[-617.31726074 -314.48617554]
[-624.89508057 -327.43179321]
[-632.23925781 -340.51135254]
[-639.34747314 -353.72064209]
[-646.21746826 -367.05538940]
[-652.84692383 -380.51132202]
[-659.23376465 -394.08410645]
[-665.37597656 -407.76934814]
[-671.27154541 -421.56262207]
[-676.91851807 -435.45953369]
[-682.31512451 -449.45553589]
[-687.45959473 -463.54620361]
[-692.35034180 -477.72692871]
[-696.98571777 -491.99313354]
[-701.36425781 -506.34030151]
[-705.48455811 -520.76373291]
[-709.34527588 -535.25878906]
[-712.94512939 -549.82080078]
[-716.28308105 -564.44512939]
[-719.35791016 -579.12701416]
[-722.16870117 -593.86169434]
[-724.71453857 -608.64453125]
[-726.99462891 -623.47058105]
[-729.00817871 -638.33526611]
[-730.75457764 -653.23364258]
[-732.23321533 -668.16101074]
[-733.44372559 -683.11248779]
[-734.38562012 -698.08331299]
[-735.05859375 -713.06860352]
[-735.46246338 -728.06353760]
[-735.59710693 -743.06335449]
[-735.46246338 -758.06317139]
[-735.05859375 -773.05810547]
[-734.38562012 -788.04339600]
[-733.44372559 -803.01422119]
[-732.23327637 -817.96569824]
[-730.75457764 -832.89306641]
[-729.00817871 -847.79144287]
[-726.99462891 -862.65606689]
[-724.71459961 -877.48217773]
[-722.16876221 -892.26501465]
[-719.35797119 -906.99969482]
[-716.28308105 -921.68157959]
[-712.94519043 -936.30590820]
[-709.34533691 -950.86791992]
[-705.48461914 -965.36297607]
[-701.36431885 -979.78643799]
[-696.98577881 -994.13354492]
[-692.35040283 -1008.39978027]
[-687.45965576 -1022.58050537]
[-682.31518555 -1036.67114258]
[-676.91857910 -1050.66723633]
[-671.27160645 -1064.56408691]
[-665.37603760 -1078.35742188]
[-659.23388672 -1092.04260254]
[-652.84698486 -1105.61535645]
[-646.21752930 -1119.07128906]
[-639.34759521 -1132.40612793]
[-632.23937988 -1145.61535645]
[-624.89514160 -1158.69494629]
[-617.31738281 -1171.64050293]
[-609.50842285 -1184.44799805]
[-601.47076416 -1197.11328125]
[-593.20709229 -1209.63220215]
[-584.72003174 -1222.00085449]
[-576.01226807 -1234.21508789]
[-567.08673096 -1246.27099609]
[-557.94616699 -1258.16479492]
[-548.59356689 -1269.89257812]
[-539.03192139 -1281.45056152]
[-529.26440430 -1292.83508301]
[-519.29400635 -1304.04248047]
[-509.12411499 -1315.06896973]
[-498.75790405 -1325.91125488]
[-488.19873047 -1336.56555176]
[-477.44998169 -1347.02868652]
[-466.51516724 -1357.29724121]
[-455.39776611 -1367.36779785]
[-444.10140991 -1377.23706055]
[-432.62966919 -1386.90209961]
[-420.98629761 -1396.35949707]
[-409.17504883 -1405.60656738]
[-397.19970703 -1414.63989258]
[-385.06411743 -1423.45690918]
[-372.77221680 -1432.05468750]
[-360.32797241 -1440.43041992]
[-347.73535156 -1448.58142090]
[-334.99844360 -1456.50500488]
[-322.12136841 -1464.19873047]
[-309.10827637 -1471.66003418]
[-295.96331787 -1478.88647461]
[-282.69076538 -1485.87585449]
[-269.29486084 -1492.62585449]
[-255.77996826 -1499.13427734]
[-242.15042114 -1505.39904785]
[-228.41059875 -1511.41821289]
[-214.56495667 -1517.18969727]
[-200.61793518 -1522.71166992]
[-186.57403564 -1527.98242188]
[-172.43777466 -1533.00024414]
[-158.21372986 -1537.76354980]
[-143.90646362 -1542.27062988]
[-129.52059937 -1546.52026367]
[-115.06076813 -1550.51086426]
[-100.53162384 -1554.24133301]
[-85.93786621 -1557.71044922]
[-71.28417969 -1560.91687012]
[-56.57529831 -1563.85986328]
[-41.81595612 -1566.53820801]
[-27.01091194 -1568.95129395]
[-12.16493797 -1571.09826660]
[2.71718359 -1572.97827148]
[17.63065529 -1574.59082031]
[32.57067108 -1575.93542480]
[47.53242111 -1577.01171875]
[62.51107407 -1577.81921387]
[77.50180817 -1578.35766602]
[92.49980164 -1578.62695312]
[107.50019836 -1578.62695312]
[122.49819183 -1578.35766602]
[137.48892212 -1577.81921387]
[152.46757507 -1577.01171875]
[167.42932129 -1575.93542480]
[182.36933899 -1574.59082031]
[197.28282166 -1572.97827148]
[212.16493225 -1571.09826660]
[227.01091003 -1568.95129395]
[241.81594849 -1566.53820801]
[256.57528687 -1563.85986328]
[271.28417969 -1560.91687012]
[285.93786621 -1557.71044922]
[300.53161621 -1554.24133301]
[315.06076050 -1550.51086426]
[329.52059937 -1546.52026367]
[343.90646362 -1542.27062988]
[358.21371460 -1537.76354980]
[372.43777466 -1533.00024414]
[386.57403564 -1527.98242188]
[400.61791992 -1522.71166992]
[414.56494141 -1517.18969727]
[428.41061401 -1511.41821289]
[442.15042114 -1505.39904785]
[455.77996826 -1499.13427734]
[469.29486084 -1492.62585449]
[482.69076538 -1485.87585449]
[495.96331787 -1478.88647461]
[509.10827637 -1471.66003418]
[522.12139893 -1464.19873047]
[534.99847412 -1456.50500488]
[547.73535156 -1448.58142090]
[560.32794189 -1440.43041992]
[572.77221680 -1432.05468750]
[585.06408691 -1423.45690918]
[597.19970703 -1414.63989258]
[609.17504883 -1405.60656738]
[620.98632812 -1396.35949707]
[632.62969971 -1386.90209961]
[644.10137939 -1377.23706055]
[655.39776611 -1367.36779785]
[666.51513672 -1357.29724121]
[677.45001221 -1347.02868652]
[688.19873047 -1336.56555176]
[698.75787354 -1325.91125488]
[709.12408447 -1315.06896973]
[719.29400635 -1304.04248047]
[729.26440430 -1292.83508301]
[739.03192139 -1281.45056152]
[748.59356689 -1269.89257812]
[757.94616699 -1258.16479492]
[767.08673096 -1246.27099609]
[776.01226807 -1234.21508789]
[784.72003174 -1222.00085449]
[793.20709229 -1209.63220215]
[801.47076416 -1197.11328125]
[809.50842285 -1184.44799805]
[817.31738281 -1171.64050293]
[824.89514160 -1158.69494629]
[832.23937988 -1145.61535645]
[839.34759521 -1132.40612793]
[846.21752930 -1119.07128906]
[852.84698486 -1105.61535645]
[859.23388672 -1092.04260254]
[865.37603760 -1078.35742188]
[871.27160645 -1064.56408691]
[876.91857910 -1050.66723633]
[882.31518555 -1036.67114258]
[887.45965576 -1022.58050537]
[892.35040283 -1008.39978027]
[896.98577881 -994.13354492]
[901.36431885 -979.78643799]
[905.48461914 -965.36297607]
[909.34533691 -950.86791992]
[912.94519043 -936.30590820]
[916.28308105 -921.68157959]
[919.35797119 -906.99969482]
[922.16876221 -892.26501465]
[924.71459961 -877.48217773]
[926.99462891 -862.65606689]
[929.00817871 -847.79144287]
[930.75457764 -832.89306641]
[932.23327637 -817.96569824]
[933.44372559 -803.01422119]
[934.38562012 -788.04339600]
[935.05859375 -773.05810547]
[935.46246338 -758.06317139]
[935.59710693 -743.06335449]
[935.46246338 -728.06353760]
[935.05859375 -713.06860352]
[934.38562012 -698.08331299]
[933.44372559 -683.11248779]
[932.23321533 -668.16101074]
[930.75457764 -653.23364258]
[929.00817871 -638.33526611]
[926.99462891 -623.47058105]
[924.71453857 -608.64453125]
[922.16870117 -593.86169434]
[919.35791016 -579.12701416]
[916.28308105 -564.44512939]
[912.94512939 -549.82080078]
[909.34527588 -535.25878906]
[905.48455811 -520.76373291]
[901.36425781 -506.34030151]
[896.98571777 -491.99313354]
[892.35034180 -477.72692871]
[887.45959473 -463.54620361]
[882.31512451 -449.45553589]
[876.91851807 -435.45953369]
[871.27154541 -421.56262207]
[865.37597656 -407.76934814]
[859.23376465 -394.08410645]
[852.84692383 -380.51132202]
[846.21746826 -367.05538940]
[839.34747314 -353.72064209]
[832.23925781 -340.51135254]
[824.89508057 -327.43179321]
[817.31726074 -314.48617554]
[809.50830078 -301.67868042]
[801.47064209 -289.01342773]
[793.20697021 -276.49447632]
[784.71990967 -264.12591553]
[776.01220703 -251.91168213]
[767.08660889 -239.85572815]
[757.94604492 -227.96194458]
[748.59344482 -216.23416138]
[739.03179932 -204.67614746]
[729.26422119 -193.29164124]
[719.29388428 -182.08430481]
[709.12396240 -171.05775452]
[698.75775146 -160.21554565]
[688.19854736 -149.56115723]
[677.44982910 -139.09805298]
[666.51501465 -128.82955933]
[655.39764404 -118.75903320]
[644.10125732 -108.88968658]
[632.62951660 -99.22470856]
[620.98614502 -89.76722717]
[609.17486572 -80.52027130]
[597.19952393 -71.48683167]
[585.06396484 -62.66981888]
[572.77203369 -54.07207108]
[560.32775879 -45.69636154]
[547.73516846 -37.54538727]
[534.99829102 -29.62177849]
[522.12121582 -21.92808342]
[509.10809326 -14.46678638]
[495.96313477 -7.24028921]
[482.69058228 -0.25092143]
[469.29467773 6.49906445]
[455.77978516 13.00749302]
[442.15023804 19.27226639]
[428.41043091 25.29136658]
[414.56475830 31.06285477]
[400.61773682 36.58486938]
[386.57385254 41.85562897]
[372.43759155 46.87343979]
[358.21353149 51.63668060]
[343.90628052 56.14381790]
[329.52041626 60.39340210]
[315.06057739 64.38405609]
[300.53143311 68.11450195]
[285.93765259 71.58353424]
[271.28399658 74.79003906]
[256.57510376 77.73297119]
[241.81575012 80.41139221]
[227.01071167 82.82444000]
[212.16473389 84.97132874]
[197.28262329 86.85137939]
[182.36914062 88.46397400]
[167.42912292 89.80859375]
[152.46737671 90.88481140]
[137.48872375 91.69227600]
[122.49798584 92.23072815]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
