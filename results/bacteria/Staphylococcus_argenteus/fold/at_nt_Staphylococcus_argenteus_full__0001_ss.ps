%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Mar  9 06:02:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUACAGAAAAAGGGCAACAUGCGCAAACAUGUUACCCUAAUGAGCCCGUUAAAAAGACGGUGGCUAUUUUAGAUUAAAGAUUAAAUUAAUAACCAUUUAACCAUCGAAACCAGCCAAAGUUAGCGAUGGUUAUUUUUU\
) } def
/len { sequence length } bind def

/coor [
[122.30412292 222.89054871]
[109.57670593 224.53051758]
[96.74819183 224.85586548]
[83.95400238 223.86318970]
[71.32920837 221.56294250]
[59.00707245 217.97941589]
[47.11767960 213.15043640]
[35.78653717 207.12699890]
[25.13326454 199.97267151]
[15.27032280 191.76296997]
[6.30182838 182.58459473]
[-1.67754197 172.53440857]
[-8.58355427 161.71850586]
[-14.34330463 150.25106812]
[-28.41330147 155.45060730]
[-42.48329926 160.65014648]
[-56.55329514 165.84968567]
[-66.81582642 177.89091492]
[-81.43602753 175.04505920]
[-95.50602722 180.24459839]
[-109.57601929 185.44413757]
[-123.64601898 190.64367676]
[-137.71601868 195.84321594]
[-151.78601074 201.04275513]
[-158.16619873 215.50196838]
[-172.93186951 221.13671875]
[-187.32281494 214.60403442]
[-192.80114746 199.77960205]
[-186.11666870 185.45852661]
[-171.23515320 180.13723755]
[-156.98554993 186.97274780]
[-142.91555786 181.77320862]
[-128.84555054 176.57366943]
[-114.77555847 171.37413025]
[-100.70556641 166.17459106]
[-86.63556671 160.97506714]
[-77.37941742 149.30574036]
[-61.75283432 151.77969360]
[-47.68283463 146.58015442]
[-33.61283875 141.38061523]
[-19.54284286 136.18107605]
[-24.69629288 107.09904480]
[-22.87676430 77.62004089]
[-14.18600750 49.39251328]
[0.88999599 23.99493980]
[21.50819969 2.84754682]
[12.79915619 -9.36525631]
[4.09011269 -21.57806015]
[-4.61893082 -33.79086304]
[-13.59601593 -45.80801392]
[-22.83674812 -57.62363434]
[-32.07748032 -69.43925476]
[-41.31821060 -81.25487518]
[-57.00402451 -84.62160492]
[-64.02246857 -99.04800415]
[-56.98959351 -113.46737671]
[-41.30042267 -116.81840515]
[-28.99034119 -106.53047943]
[-29.50259209 -90.49560547]
[-20.26185989 -78.67998505]
[-11.02112770 -66.86436462]
[-1.78039587 -55.04874802]
[2.84211731 -53.58731842]
[6.56280756 -49.16025162]
[7.59387255 -42.49990463]
[16.30291557 -30.28710365]
[25.01195908 -18.07430077]
[33.72100067 -5.86149645]
[42.18793488 -10.71281433]
[51.00777054 -14.88830853]
[60.12667084 -18.36249161]
[69.48896790 -21.11415672]
[79.03750610 -23.12650299]
[88.71401215 -24.38725281]
[98.45941162 -24.88870430]
[108.21421814 -24.62779999]
[117.91887665 -23.60613251]
[127.51415253 -21.82993507]
[136.94148254 -19.31005478]
[146.14331055 -16.06186867]
[155.06346130 -12.10520935]
[163.64747620 -7.46422720]
[171.84298706 -2.16725159]
[179.59994507 3.75338221]
[186.87098694 10.26153374]
[193.61175537 17.31747437]
[199.78109741 24.87813187]
[205.34133911 32.89735794]
[210.25854492 41.32619476]
[214.50270081 50.11319733]
[218.04789734 59.20471954]
[220.87249756 68.54527283]
[222.95925903 78.07782745]
[224.29544067 87.74420929]
[224.87289429 97.48539734]
[224.68807983 107.24193573]
[223.74212646 116.95426941]
[222.04083252 126.56311035]
[219.59454346 136.00981140]
[216.41822815 145.23667908]
[212.53126526 154.18742371]
[225.63084412 161.49501038]
[238.73043823 168.80261230]
[251.83001709 176.11019897]
[264.92959595 183.41778564]
[278.02917480 190.72538757]
[291.12875366 198.03297424]
[304.22836304 205.34057617]
[317.32794189 212.64816284]
[335.69091797 211.91699219]
[344.15628052 227.25064087]
[357.41433716 234.26664734]
[370.67236328 241.28266907]
[384.54580688 234.33235168]
[399.84942627 236.89724731]
[410.69866943 247.99110413]
[412.92178345 263.34811401]
[405.66390991 277.06317139]
[391.71588135 283.86257935]
[376.44097900 281.13180542]
[365.71270752 269.92092896]
[363.65634155 254.54071045]
[350.39831543 247.52468872]
[337.14025879 240.50868225]
[325.43948364 243.76713562]
[314.31350708 237.96519470]
[310.02035522 225.74774170]
[296.92074585 218.44015503]
[283.82116699 211.13255310]
[270.72158813 203.82496643]
[257.62200928 196.51737976]
[244.52241516 189.20977783]
[231.42283630 181.90219116]
[218.32325745 174.59458923]
[205.22367859 167.28700256]
[197.76400757 177.72875977]
[189.27230835 187.34996033]
[179.83821106 196.04905701]
[169.56129456 203.73422241]
[158.55004883 210.32431030]
[146.92073059 215.74975586]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 41]
[15 40]
[16 39]
[17 38]
[19 36]
[20 35]
[21 34]
[22 33]
[23 32]
[24 31]
[46 68]
[47 67]
[48 66]
[49 65]
[50 62]
[51 61]
[52 60]
[53 59]
[101 135]
[102 134]
[103 133]
[104 132]
[105 131]
[106 130]
[107 129]
[108 128]
[109 127]
[111 124]
[112 123]
[113 122]
] def

init

% Start Annotations
14 41 0.0 1 colorpair
15 40 0.0 1 colorpair
16 39 0.0 1 colorpair
17 38 0.0 1 colorpair
19 36 0.0 1 colorpair
20 35 0.0 1 colorpair
21 34 0.0 1 colorpair
22 33 0.0 1 colorpair
23 32 0.0 1 colorpair
24 31 0.0 1 colorpair
46 68 0.0 1 colorpair
47 67 0.0 1 colorpair
48 66 0.0 1 colorpair
49 65 0.0 1 colorpair
50 62 0.0 1 colorpair
51 61 0.0 1 colorpair
52 60 0.0 1 colorpair
53 59 0.0 1 colorpair
101 135 0.0 1 colorpair
102 134 0.0 1 colorpair
103 133 0.0 1 colorpair
104 132 0.0 1 colorpair
105 131 0.0 1 colorpair
106 130 0.0 1 colorpair
107 129 0.0 1 colorpair
108 128 0.0 1 colorpair
109 127 0.0 1 colorpair
111 124 0.0 1 colorpair
112 123 0.0 1 colorpair
113 122 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
