%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 18:58:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUAUCGGGAGCGUUAUUAUUGUCUGCCUGCCGGCAUUCAUGUUAACCCGCCUUUCACGGGAAACGCGUUGCGCGUUGCGCUUGCAGGGUGCGGGUAUAAAGGUUGUCGCUUCACUGGCUUAUCAAUCCAGCGAGUAAGCGUCUGCGCGGGGAGCACCCCCCGCGAUUUAGCUGGCCGGUUUAUGCCUCUCAGGUACCCGAUGAUUA\
) } def
/len { sequence length } bind def

/coor [
[85.31433868 637.36248779]
[77.56279755 623.78137207]
[80.40541840 608.40429688]
[92.50000000 598.49194336]
[92.50000000 583.49194336]
[92.50000000 568.49194336]
[92.50000000 553.49194336]
[92.50000000 538.49194336]
[92.50000000 523.49194336]
[92.50000000 508.49194336]
[92.50000000 493.49194336]
[84.76270294 480.76467896]
[92.50000000 466.96450806]
[92.50000000 451.96450806]
[77.84561920 448.87500000]
[64.14855957 442.80364990]
[52.00850296 434.01358032]
[41.95753098 422.88705444]
[34.43677902 409.90881348]
[29.77709579 395.64486694]
[28.18446350 380.71798706]
[29.73092079 365.78039551]
[34.35128784 351.48522949]
[41.84592056 338.45812988]
[51.88933182 327.26968384]
[64.04432678 318.41064453]
[77.78102875 312.27014160]
[92.50000000 309.11883545]
[92.50000000 294.11883545]
[92.50000000 279.11883545]
[84.76270294 266.39157104]
[92.50000000 252.59138489]
[92.50000000 237.59138489]
[92.50000000 222.59138489]
[92.50000000 207.59138489]
[92.50000000 192.59138489]
[92.50000000 177.59138489]
[78.65208435 174.97293091]
[65.50193787 169.90391541]
[53.47939301 162.55003357]
[42.97741318 153.15165710]
[34.33926392 142.01596069]
[27.84729195 129.50694275]
[23.71369171 116.03347778]
[22.07357216 102.03593445]
[22.98054314 87.97184753]
[26.40495872 74.30091095]
[32.23488998 61.46997070]
[19.96910095 52.83571243]
[7.70330954 44.20145798]
[-4.56248140 35.56719971]
[-16.82827187 26.93294525]
[-29.09406281 18.29868889]
[-41.42409515 9.75642204]
[-53.81767654 1.30662096]
[-66.21125793 -7.14317989]
[-78.60483551 -15.59298038]
[-91.06127930 -23.94984245]
[-103.57987976 -32.21329880]
[-119.35958862 -33.35842514]
[-125.71897125 -46.82718658]
[-141.49868774 -47.97231674]
[-147.85806274 -61.44107437]
[-163.63777161 -62.58620453]
[-169.99716187 -76.05496216]
[-182.51576233 -84.31842041]
[-195.03436279 -92.58187103]
[-207.55296326 -100.84532928]
[-220.07156372 -109.10877991]
[-232.59016418 -117.37223816]
[-249.13998413 -121.05185699]
[-250.18560791 -137.97352600]
[-234.21470642 -143.66267395]
[-224.32670593 -129.89083862]
[-211.80810547 -121.62738037]
[-199.28950500 -113.36392975]
[-186.77090454 -105.10047150]
[-174.25230408 -96.83702087]
[-161.73370361 -88.57356262]
[-146.84941101 -88.01949310]
[-139.59461975 -73.95967102]
[-124.71031952 -73.40560150]
[-117.45552063 -59.34578323]
[-102.57122040 -58.79171371]
[-95.31642151 -44.73189545]
[-82.79782104 -36.46844101]
[-75.48319244 -35.40700912]
[-70.15503693 -27.98656273]
[-57.76145554 -19.53676224]
[-45.36787415 -11.08696079]
[-32.97429276 -2.63715982]
[-25.67636299 -1.46642494]
[-20.45980644 6.03289843]
[-8.19401646 14.66715431]
[4.07177448 23.30141068]
[16.33756638 31.93566704]
[28.60335541 40.56992340]
[40.86914825 49.20417786]
[48.58271408 41.40873718]
[57.31392288 34.77291870]
[66.88996124 29.42806053]
[77.12130737 25.47994423]
[87.80545807 23.00671196]
[98.73096466 22.05731010]
[109.68158722 22.65053177]
[120.44059753 24.77463722]
[130.79504395 28.38758278]
[140.54000854 33.41786575]
[142.62678528 17.73488045]
[156.45175171 12.19236660]
[165.44908142 0.19036303]
[174.44641113 -11.81163979]
[183.44374084 -23.81364250]
[192.44107056 -35.81564713]
[195.08488464 -44.55993271]
[201.66384888 -47.92855072]
[210.83972168 -59.79461670]
[220.01557922 -71.66068268]
[222.33673096 -87.31069183]
[236.24307251 -92.64577484]
[245.41893005 -104.51184082]
[254.59478760 -116.37790680]
[249.33341980 -130.88037109]
[252.77018738 -145.92005920]
[263.80841064 -156.69786072]
[278.92587280 -159.77461243]
[293.29858398 -154.16854858]
[302.34033203 -141.66853333]
[303.16589355 -126.26326752]
[295.51184082 -112.86853027]
[281.82055664 -105.75852966]
[266.46084595 -107.20204163]
[257.28500366 -95.33597565]
[248.10913086 -83.46990967]
[246.44430542 -68.66864014]
[231.88165283 -62.48481750]
[222.70578003 -50.61875153]
[213.52992249 -38.75268555]
[204.44306946 -26.81831741]
[195.44573975 -14.81631470]
[186.44841003 -2.81431174]
[177.45108032 9.18769169]
[168.45375061 21.18969536]
[167.01052856 36.01421356]
[152.54200745 42.41519165]
[164.93759155 56.87481308]
[173.45689392 73.90868378]
[177.59138489 92.50000000]
[192.59138489 92.50000000]
[207.59138489 92.50000000]
[222.59138489 92.50000000]
[237.59138489 92.50000000]
[252.59138489 92.50000000]
[267.59140015 92.50000000]
[278.58807373 81.14886475]
[294.39147949 80.98176575]
[305.62573242 92.09785461]
[305.62573242 107.90214539]
[294.39147949 119.01823425]
[278.58807373 118.85113525]
[267.59140015 107.50000000]
[252.59138489 107.50000000]
[237.59138489 107.50000000]
[222.59138489 107.50000000]
[207.59138489 107.50000000]
[192.59138489 107.50000000]
[177.59138489 107.50000000]
[173.84631348 124.96789551]
[166.22274780 141.12445068]
[155.12110901 155.12110901]
[141.12445068 166.22274780]
[124.96789551 173.84631348]
[107.50000000 177.59138489]
[107.50000000 192.59138489]
[107.50000000 207.59138489]
[107.50000000 222.59138489]
[107.50000000 237.59138489]
[107.50000000 252.59138489]
[115.23729706 266.39157104]
[107.50000000 279.11883545]
[107.50000000 294.11883545]
[107.50000000 309.11883545]
[122.21897125 312.27014160]
[135.95567322 318.41064453]
[148.11067200 327.26968384]
[158.15408325 338.45812988]
[165.64871216 351.48522949]
[170.26907349 365.78039551]
[171.81553650 380.71798706]
[170.22290039 395.64486694]
[165.56321716 409.90881348]
[158.04246521 422.88705444]
[147.99150085 434.01358032]
[135.85144043 442.80364990]
[122.15438080 448.87500000]
[107.50000000 451.96450806]
[107.50000000 466.96450806]
[115.23729706 480.76467896]
[107.50000000 493.49194336]
[107.50000000 508.49194336]
[107.50000000 523.49194336]
[107.50000000 538.49194336]
[107.50000000 553.49194336]
[107.50000000 568.49194336]
[107.50000000 583.49194336]
[107.50000000 598.49194336]
[119.59458160 608.40429688]
[122.43720245 623.78137207]
[114.68566132 637.36248779]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 206]
[5 205]
[6 204]
[7 203]
[8 202]
[9 201]
[10 200]
[11 199]
[13 197]
[14 196]
[28 182]
[29 181]
[30 180]
[32 178]
[33 177]
[34 176]
[35 175]
[36 174]
[37 173]
[48 98]
[49 97]
[50 96]
[51 95]
[52 94]
[53 93]
[54 91]
[55 90]
[56 89]
[57 88]
[58 86]
[59 85]
[61 83]
[63 81]
[65 79]
[66 78]
[67 77]
[68 76]
[69 75]
[70 74]
[108 145]
[110 143]
[111 142]
[112 141]
[113 140]
[114 139]
[116 138]
[117 137]
[118 136]
[120 134]
[121 133]
[122 132]
[148 167]
[149 166]
[150 165]
[151 164]
[152 163]
[153 162]
[154 161]
] def

init

% Start Annotations
4 206 0.0 1 colorpair
5 205 0.0 1 colorpair
6 204 0.0 1 colorpair
7 203 0.0 1 colorpair
8 202 0.0 1 colorpair
9 201 0.0 1 colorpair
10 200 0.0 1 colorpair
11 199 0.0 1 colorpair
13 197 0.0 1 colorpair
14 196 0.0 1 colorpair
28 182 0.0 1 colorpair
29 181 0.0 1 colorpair
30 180 0.0 1 colorpair
32 178 0.0 1 colorpair
33 177 0.0 1 colorpair
34 176 0.0 1 colorpair
35 175 0.0 1 colorpair
36 174 0.0 1 colorpair
37 173 0.0 1 colorpair
48 98 0.0 1 colorpair
49 97 0.0 1 colorpair
50 96 0.0 1 colorpair
51 95 0.0 1 colorpair
52 94 0.0 1 colorpair
53 93 0.0 1 colorpair
54 91 0.0 1 colorpair
55 90 0.0 1 colorpair
56 89 0.0 1 colorpair
57 88 0.0 1 colorpair
58 86 0.0 1 colorpair
59 85 0.0 1 colorpair
61 83 0.0 1 colorpair
63 81 0.0 1 colorpair
65 79 0.0 1 colorpair
66 78 0.0 1 colorpair
67 77 0.0 1 colorpair
68 76 0.0 1 colorpair
69 75 0.0 1 colorpair
70 74 0.0 1 colorpair
108 145 0.0 1 colorpair
110 143 0.0 1 colorpair
111 142 0.0 1 colorpair
112 141 0.0 1 colorpair
113 140 0.0 1 colorpair
114 139 0.0 1 colorpair
116 138 0.0 1 colorpair
117 137 0.0 1 colorpair
118 136 0.0 1 colorpair
120 134 0.0 1 colorpair
121 133 0.0 1 colorpair
122 132 0.0 1 colorpair
148 167 0.0 1 colorpair
149 166 0.0 1 colorpair
150 165 0.0 1 colorpair
151 164 0.0 1 colorpair
152 163 0.0 1 colorpair
153 162 0.0 1 colorpair
154 161 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
