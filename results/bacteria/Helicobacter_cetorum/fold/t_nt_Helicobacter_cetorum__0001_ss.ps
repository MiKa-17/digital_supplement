%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 03:32:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___CUAAAGAAACAACAACUUUAAACCCCAAAAAAGAAAUUUCAAGGUAUAAUGCCUUCCAAGAGUUUUUGCCAUGUUUUGUUGCCAUGACAAACUCCUUUAUA_AAAAUUUAUCCCCAUAAAU_CAACUUAUGGGGG_\
) } def
/len { sequence length } bind def

/coor [
[163.49952698 280.54766846]
[152.05592346 284.17337036]
[140.40753174 287.07452393]
[128.60018921 289.23974609]
[116.68031311 290.66049194]
[104.69482422 291.33114624]
[92.69086456 291.24911499]
[80.71565247 290.41470337]
[68.81631470 288.83120728]
[57.03964996 286.50485229]
[45.43199539 283.44476318]
[34.03900909 279.66302490]
[22.90551758 275.17446899]
[12.07531548 269.99676514]
[1.59101081 264.15029907]
[-8.50615025 257.65808105]
[-18.17644691 250.54560852]
[-27.38183403 242.84088135]
[-36.08609772 234.57423401]
[-44.25499725 225.77816772]
[-51.85639572 216.48727417]
[-58.86038589 206.73812866]
[-65.23941803 196.56907654]
[-70.96839142 186.02011108]
[-76.02478027 175.13273621]
[-80.38867188 163.94979858]
[-84.04292297 152.51527405]
[-86.97313690 140.87416077]
[-89.16779327 129.07223511]
[-90.61827087 117.15595245]
[-91.31884003 105.17217255]
[-91.26676178 93.16804504]
[-90.46224213 81.19079590]
[-88.90843201 69.28754425]
[-86.61145782 57.50511169]
[-83.58034515 45.88985443]
[-79.82702637 34.48747253]
[-75.36626434 23.34281349]
[-70.21560669 12.49972725]
[-64.39531708 2.00086904]
[-57.92829514 -8.11245918]
[-50.83998108 -17.80047035]
[-43.15825653 -27.02505302]
[-34.91334534 -35.74991608]
[-26.13768387 -43.94073486]
[-16.86579323 -51.56528854]
[-7.13415051 -58.59358215]
[3.01896048 -64.99796295]
[13.55359745 -70.75324249]
[24.42831612 -75.83677673]
[35.60033417 -80.22856140]
[47.02570343 -83.91132355]
[58.65947342 -86.87057495]
[70.45587921 -89.09467316]
[82.36850739 -90.57486725]
[94.35050201 -91.30534363]
[106.35472107 -91.28321075]
[118.33394623 -90.50857544]
[130.24104309 -88.98447418]
[142.02915955 -86.71689606]
[153.65194702 -83.71477509]
[165.06365967 -79.98992157]
[176.21940613 -75.55697632]
[182.72766113 -89.07151031]
[189.23593140 -102.58604431]
[195.74418640 -116.10057831]
[202.25244141 -129.61511230]
[202.13719177 -136.35943604]
[205.05612183 -141.35673523]
[209.36788940 -143.57998657]
[216.47592163 -156.78890991]
[223.58395386 -169.99784851]
[230.69198608 -183.20677185]
[237.80001831 -196.41571045]
[244.90805054 -209.62464905]
[252.01606750 -222.83357239]
[244.45001221 -236.27821350]
[245.37657166 -251.67773438]
[254.50009155 -264.11819458]
[268.90927124 -269.62988281]
[284.00622559 -266.45407104]
[294.97354126 -255.60411072]
[298.31161499 -240.54220581]
[292.95523071 -226.07455444]
[280.61364746 -216.81773376]
[265.22500610 -215.72555542]
[258.11697388 -202.51661682]
[251.00894165 -189.30767822]
[243.90090942 -176.09875488]
[236.79289246 -162.88981628]
[229.68486023 -149.68087769]
[222.57682800 -136.47195435]
[215.76696777 -123.10684967]
[209.25871277 -109.59231567]
[202.75045776 -96.07778931]
[196.24220276 -82.56325531]
[189.73394775 -69.04872131]
[207.80291748 -58.13975906]
[224.56076050 -45.30748749]
[239.80371094 -30.70797348]
[253.34634399 -14.51877880]
[265.02395630 3.06320310]
[274.69454956 21.82413864]
[282.24047852 41.53585815]
[287.57000732 61.95861816]
[290.61825562 82.84404755]
[291.34823608 103.93812561]
[289.75097656 124.98430634]
[285.84597778 145.72662354]
[279.68069458 165.91281128]
[271.33010864 185.29736328]
[260.89581299 203.64453125]
[248.50468445 220.73115540]
[234.30741882 236.34944153]
[218.47669983 250.30941772]
[227.29347229 262.44467163]
[236.11026001 274.57992554]
[244.92703247 286.71517944]
[253.74382019 298.85043335]
[262.56057739 310.98568726]
[271.37738037 323.12094116]
[280.19415283 335.25619507]
[295.80520630 336.16647339]
[307.14334106 346.93591309]
[308.85501099 362.47952271]
[300.13201904 375.45809937]
[285.09310913 379.74356079]
[270.83920288 373.31240845]
[264.10052490 359.20129395]
[268.05889893 344.07299805]
[259.24212646 331.93774414]
[250.42533875 319.80249023]
[241.60855103 307.66723633]
[232.79177856 295.53195190]
[223.97500610 283.39669800]
[215.15821838 271.26144409]
[206.34144592 259.12619019]
[196.15649414 265.47982788]
[185.59327698 271.18249512]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 97]
[64 96]
[65 95]
[66 94]
[67 93]
[70 92]
[71 91]
[72 90]
[73 89]
[74 88]
[75 87]
[76 86]
[115 137]
[116 136]
[117 135]
[118 134]
[119 133]
[120 132]
[121 131]
[122 130]
] def

init

% Start Annotations
63 97 0.0 1 colorpair
64 96 0.0 1 colorpair
65 95 0.0 1 colorpair
66 94 0.0 1 colorpair
67 93 0.0 0.6 colorpair
70 92 0.0 1 colorpair
71 91 0.0 0.6 colorpair
72 90 0.16 0.2 colorpair
73 89 0.0 0.6 colorpair
74 88 0.0 1 colorpair
75 87 0.0 1 colorpair
76 86 0.0 0.6 colorpair
115 137 0.0 0.6 colorpair
116 136 0.0 1 colorpair
117 135 0.0 1 colorpair
118 134 0.0 1 colorpair
119 133 0.0 0.6 colorpair
120 132 0.0 1 colorpair
121 131 0.0 1 colorpair
122 130 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
67 93 1 gmark
71 91 1 gmark
72 90 2 gmark
72 cmark
90 cmark
73 89 1 gmark
76 86 1 gmark
115 137 1 gmark
119 133 1 gmark
122 130 1 gmark

% End Annotations
showpage
end
%%EOF
