%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 03:32:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___CUAAAGAAACAAUAACUUUAAACCCCAAAAAAGAAAUUUCAAGGUAUAAUGCUUUCCAAGAGUUUUUGCCAUGUUUUGUCGCCAUGACAAACUCCUUU_UUAAAAAUUUAUCCCCAUAAUUACGACUUAUGGGGG_\
) } def
/len { sequence length } bind def

/coor [
[143.58795166 225.89434814]
[136.00256348 228.26968384]
[128.28903198 230.18843079]
[120.47480774 231.64375305]
[112.58769226 232.63049316]
[104.65576935 233.14511108]
[96.70728302 233.18579102]
[88.77050781 232.75238037]
[80.87371063 231.84643555]
[73.04499054 230.47116089]
[65.31222534 228.63146973]
[57.70293045 226.33389282]
[50.24419403 223.58663940]
[42.96257019 220.39944458]
[35.88397598 216.78369141]
[29.03360939 212.75224304]
[22.43585205 208.31942749]
[16.11419106 203.50105286]
[10.09113026 198.31425476]
[4.38810730 192.77748108]
[-0.97457629 186.91047668]
[-5.97783232 180.73410034]
[-10.60385036 174.27033997]
[-14.83616543 167.54222107]
[-18.65970993 160.57366943]
[-22.06087494 153.38949585]
[-25.02755356 146.01528931]
[-27.54918671 138.47727966]
[-29.61679649 130.80230713]
[-31.22302246 123.01770020]
[-32.36214828 115.15115356]
[-33.03012085 107.23066711]
[-33.22456360 99.28445435]
[-32.94477844 91.34078217]
[-32.19176483 83.42793274]
[-30.96820450 75.57407379]
[-29.27845001 67.80716705]
[-27.12851715 60.15484619]
[-24.52606010 52.64435959]
[-21.48034096 45.30244064]
[-18.00220299 38.15522385]
[-14.10402393 31.22814751]
[-9.79968262 24.54586983]
[-5.10449982 18.13217735]
[-16.40057182 8.26309681]
[-27.69664383 -1.60598361]
[-38.99271393 -11.47506428]
[-50.28878784 -21.34414482]
[-61.58485794 -31.21322632]
[-77.49098206 -37.08107758]
[-76.25569916 -53.98996353]
[-59.66565704 -57.48380280]
[-51.71577835 -42.50929642]
[-40.41970825 -32.64021683]
[-29.12363434 -22.77113724]
[-17.82756233 -12.90205574]
[-6.53149080 -3.03297472]
[4.76458120 6.83610630]
[29.38780403 -12.97439480]
[57.98439789 -26.42778778]
[88.94522858 -32.76704407]
[120.52810669 -31.63545418]
[150.95587158 -23.09669113]
[157.46412659 -36.61122513]
[163.97238159 -50.12575912]
[170.48063660 -63.64028931]
[176.98889160 -77.15482330]
[176.87365723 -83.89914703]
[179.79258728 -88.89645386]
[184.10435486 -91.11969757]
[191.21238708 -104.32862854]
[190.93841553 -120.14746094]
[203.78291321 -127.68857574]
[210.89093018 -140.89750671]
[217.99896240 -154.10644531]
[225.10699463 -167.31536865]
[217.54093933 -180.76000977]
[218.46749878 -196.15953064]
[227.59101868 -208.59999084]
[242.00019836 -214.11169434]
[257.09713745 -210.93586731]
[268.06445312 -200.08590698]
[271.40252686 -185.02400208]
[266.04617310 -170.55635071]
[253.70458984 -161.29953003]
[238.31593323 -160.20735168]
[231.20790100 -146.99841309]
[224.09986877 -133.78947449]
[216.99183655 -120.58054352]
[217.77421570 -105.70650482]
[204.42131042 -97.22059631]
[197.31327820 -84.01166534]
[190.50343323 -70.64656830]
[183.99517822 -57.13203430]
[177.48690796 -43.61750031]
[170.97865295 -30.10296822]
[164.47039795 -16.58843613]
[176.70922852 -8.92653751]
[188.04698181 0.01487364]
[198.35047913 10.13076782]
[207.49870300 21.30231857]
[215.38418579 33.39829636]
[221.91429138 46.27661896]
[227.01232910 59.78600311]
[230.61839294 73.76776886]
[232.69015503 88.05767059]
[233.20324707 102.48785400]
[232.15167236 116.88881683]
[229.54776001 131.09138489]
[225.42210388 144.92874146]
[219.82316589 158.23834229]
[212.81672668 170.86384583]
[204.48506165 182.65692139]
[194.92605591 193.47908020]
[184.25199890 203.20317078]
[193.06878662 215.33842468]
[201.88555908 227.47367859]
[210.70234680 239.60894775]
[219.51911926 251.74420166]
[228.33590698 263.87945557]
[237.15267944 276.01470947]
[245.96945190 288.14996338]
[261.58053589 289.06021118]
[272.91864014 299.82965088]
[274.63031006 315.37329102]
[265.90734863 328.35186768]
[250.86842346 332.63729858]
[236.61450195 326.20617676]
[229.87582397 312.09503174]
[233.83419800 296.96673584]
[225.01742554 284.83148193]
[216.20063782 272.69622803]
[207.38386536 260.56097412]
[198.56709290 248.42572021]
[189.75030518 236.29046631]
[180.93353271 224.15521240]
[172.11674500 212.01995850]
[165.30801392 216.12132263]
[158.26678467 219.80934143]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[44 58]
[45 57]
[46 56]
[47 55]
[48 54]
[49 53]
[63 97]
[64 96]
[65 95]
[66 94]
[67 93]
[70 92]
[71 91]
[73 89]
[74 88]
[75 87]
[76 86]
[115 137]
[116 136]
[117 135]
[118 134]
[119 133]
[120 132]
[121 131]
[122 130]
] def

init

% Start Annotations
44 58 0.0 0.6 colorpair
45 57 0.0 0.6 colorpair
46 56 0.16 0.6 colorpair
47 55 0.16 1 colorpair
48 54 0.32 1 colorpair
49 53 0.0 1 colorpair
63 97 0.0 1 colorpair
64 96 0.0 1 colorpair
65 95 0.0 1 colorpair
66 94 0.0 1 colorpair
67 93 0.0 0.6 colorpair
70 92 0.0 1 colorpair
71 91 0.0 0.6 colorpair
73 89 0.0 0.6 colorpair
74 88 0.0 1 colorpair
75 87 0.0 1 colorpair
76 86 0.0 0.6 colorpair
115 137 0.0 0.6 colorpair
116 136 0.0 1 colorpair
117 135 0.0 1 colorpair
118 134 0.0 1 colorpair
119 133 0.0 0.6 colorpair
120 132 0.0 1 colorpair
121 131 0.0 1 colorpair
122 130 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
44 58 1 gmark
45 57 1 gmark
46 56 1 gmark
56 cmark
55 cmark
48 cmark
54 cmark
67 93 1 gmark
71 91 1 gmark
73 89 1 gmark
76 86 1 gmark
115 137 1 gmark
119 133 1 gmark
122 130 1 gmark

% End Annotations
showpage
end
%%EOF
