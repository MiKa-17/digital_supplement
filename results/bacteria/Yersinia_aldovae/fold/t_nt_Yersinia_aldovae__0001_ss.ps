%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Mar  9 06:28:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUAAGGCUACCGUAACGUUGUCUGGCGUUACAGAGAGCCUCGUAUUGAUUAAUUUUAAUACGGGGCUUUUCUCUGCCUGCUUUCAGCCGAACAUAAGCACUUAAAGCAGACAGCCUCAAGCACC\
) } def
/len { sequence length } bind def

/coor [
[103.58217621 249.33784485]
[102.47003937 234.37913513]
[89.72810364 226.71223450]
[83.87478638 212.84852600]
[87.34790802 198.02317810]
[99.01959991 187.96943665]
[97.90745544 173.01071167]
[96.79531097 158.05200195]
[95.68317413 143.09329224]
[94.57102966 128.13456726]
[85.96996307 126.48624420]
[77.91220093 122.16545105]
[71.23615265 115.36602020]
[66.70729065 106.54557037]
[52.93949509 112.49938202]
[39.17170334 118.45320129]
[25.40391159 124.40701294]
[11.63611889 130.36082458]
[-2.13167357 136.31463623]
[-15.89946651 142.26844788]
[-29.66725922 148.22225952]
[-39.00845718 161.70091248]
[-55.32740402 160.08105469]
[-61.83656693 145.02903748]
[-51.83987808 132.02911377]
[-35.62107086 134.45446777]
[-21.85327911 128.50065613]
[-8.08548641 122.54684448]
[5.68230629 116.59303284]
[19.45009804 110.63922119]
[33.21789169 104.68540192]
[46.98568344 98.73159027]
[60.75347519 92.77777863]
[66.19245148 78.79859924]
[60.06880951 65.10549164]
[53.94516754 51.41239166]
[47.82152939 37.71929169]
[41.69789124 24.02618790]
[35.07049179 10.56968021]
[27.94846344 -2.63170958]
[20.82643509 -15.83309937]
[13.70440483 -29.03448868]
[6.58237553 -42.23587799]
[-0.53965372 -55.43727112]
[-7.66168308 -68.63865662]
[-14.78371239 -81.84004974]
[-21.90574265 -95.04144287]
[-29.02777100 -108.24282837]
[-36.14979935 -121.44422150]
[-43.27183151 -134.64561462]
[-58.48313522 -138.93417358]
[-66.13368225 -152.76329041]
[-61.68453217 -167.92840576]
[-47.77529526 -175.43231201]
[-32.65806961 -170.82308960]
[-25.30163765 -156.83528137]
[-30.07044029 -141.76763916]
[-22.94841194 -128.56625366]
[-15.82638168 -115.36486053]
[-8.70435238 -102.16346741]
[-1.58232272 -88.96208191]
[5.53970671 -75.76068878]
[12.66173649 -62.55929947]
[19.78376579 -49.35791016]
[26.90579605 -36.15652084]
[34.02782440 -22.95512962]
[41.14985275 -9.75373936]
[48.27188492 3.44765091]
[51.63943100 4.79787683]
[54.48608398 7.90716934]
[55.96395111 12.49559879]
[55.39099121 17.90254974]
[61.51463318 31.59565163]
[67.63826752 45.28875351]
[73.76190948 58.98185349]
[79.88555145 72.67495728]
[100.26252747 67.82983398]
[118.42642975 75.80534363]
[127.55973816 92.15853882]
[142.55859375 91.97301483]
[157.55744934 91.78749084]
[172.55630493 91.60196686]
[187.55514526 91.41645050]
[202.55400085 91.23092651]
[217.55285645 91.04540253]
[231.25627136 83.13800812]
[244.07827759 90.71730804]
[259.07711792 90.53178406]
[274.61990356 80.75086975]
[289.60263062 89.79917145]
[298.13922119 76.84131622]
[312.67373657 71.40739441]
[327.61734009 75.58686829]
[337.22393799 87.77263641]
[337.79959106 103.27902985]
[329.12292480 116.14352417]
[314.53030396 121.41945648]
[299.63290405 117.07811737]
[290.15908813 104.78884888]
[281.64105225 113.47233582]
[269.08587646 113.99726868]
[259.26263428 105.53063965]
[244.26379395 105.71615601]
[231.63319397 113.61028290]
[217.73837280 106.04425812]
[202.73953247 106.22977448]
[187.74067688 106.41529846]
[172.74182129 106.60082245]
[157.74296570 106.78634644]
[142.74411011 106.97187042]
[127.74526215 107.15738678]
[123.98500824 115.67632294]
[117.69161987 122.53961945]
[109.52974701 127.02243042]
[110.64189148 141.98114014]
[111.75402832 156.93986511]
[112.86617279 171.89857483]
[113.97830963 186.85728455]
[127.00839996 195.07452393]
[132.63566589 209.22328186]
[128.89683533 223.80015564]
[117.42874908 233.26698303]
[118.54089355 248.22570801]
[128.21310425 261.46884155]
[121.33375549 276.35528564]
[104.97974396 277.57116699]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 123]
[2 122]
[6 118]
[7 117]
[8 116]
[9 115]
[10 114]
[14 33]
[15 32]
[16 31]
[17 30]
[18 29]
[19 28]
[20 27]
[21 26]
[34 76]
[35 75]
[36 74]
[37 73]
[38 72]
[39 68]
[40 67]
[41 66]
[42 65]
[43 64]
[44 63]
[45 62]
[46 61]
[47 60]
[48 59]
[49 58]
[50 57]
[79 111]
[80 110]
[81 109]
[82 108]
[83 107]
[84 106]
[85 105]
[87 103]
[88 102]
[90 99]
] def

init

% Start Annotations
1 123 0.0 1 colorpair
2 122 0.0 1 colorpair
6 118 0.0 1 colorpair
7 117 0.0 1 colorpair
8 116 0.0 1 colorpair
9 115 0.0 1 colorpair
10 114 0.0 1 colorpair
14 33 0.0 1 colorpair
15 32 0.0 1 colorpair
16 31 0.0 1 colorpair
17 30 0.0 1 colorpair
18 29 0.0 1 colorpair
19 28 0.0 1 colorpair
20 27 0.0 1 colorpair
21 26 0.0 1 colorpair
34 76 0.0 1 colorpair
35 75 0.0 1 colorpair
36 74 0.0 1 colorpair
37 73 0.0 1 colorpair
38 72 0.0 1 colorpair
39 68 0.0 1 colorpair
40 67 0.0 1 colorpair
41 66 0.0 1 colorpair
42 65 0.0 1 colorpair
43 64 0.0 1 colorpair
44 63 0.0 1 colorpair
45 62 0.0 1 colorpair
46 61 0.0 1 colorpair
47 60 0.0 1 colorpair
48 59 0.0 1 colorpair
49 58 0.0 1 colorpair
50 57 0.0 1 colorpair
79 111 0.0 1 colorpair
80 110 0.0 1 colorpair
81 109 0.0 1 colorpair
82 108 0.0 1 colorpair
83 107 0.0 1 colorpair
84 106 0.0 1 colorpair
85 105 0.0 1 colorpair
87 103 0.0 1 colorpair
88 102 0.0 1 colorpair
90 99 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
