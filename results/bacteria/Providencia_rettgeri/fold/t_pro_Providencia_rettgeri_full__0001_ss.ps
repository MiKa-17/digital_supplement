%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 07:29:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_______________________AGUAGUCACCAUGGCUAAGCGCGAUUGUAGUGUAAAAACACCGACAGCUAAAGAAGAAGUGGUUAAAACCAGACAGUAUACAGUAGGUUACGCCCCGAACCGCGGUAAGCCCAACUCCAGCCCACAACUCACCUUAAGCGGUAAGUGGCUGAAAGAGAUGGGGUUUGAGGUCGGUAGACACUAUACCCUCACUCGCCAAGCCGGACAGUUAAUUAUCCGGCUGGCUGAGGGG\
GAGUAAGGCGGCUAAGGAGAUCC______________________\
) } def
/len { sequence length } bind def

/coor [
[185.36601257 796.06317139]
[171.63586426 789.98736572]
[158.62933350 782.48657227]
[146.49377441 773.64575195]
[135.36671448 763.56500244]
[125.37422180 752.35870361]
[116.62952423 740.15368652]
[109.23170471 727.08825684]
[103.26458740 713.31054688]
[98.79577637 698.97662354]
[95.87590790 684.24884033]
[94.53807831 669.29418945]
[94.79743195 654.28204346]
[96.65103912 639.38250732]
[100.07789612 624.76440430]
[105.03917694 610.59338379]
[111.47865295 597.03002930]
[119.32337189 584.22796631]
[128.48445129 572.33227539]
[138.85806274 561.47778320]
[150.32670593 551.78747559]
[162.76039124 543.37109375]
[176.01826477 536.32403564]
[189.95010376 530.72619629]
[204.39802551 526.64086914]
[219.19834900 524.11450195]
[218.25961304 509.14392090]
[217.32087708 494.17330933]
[216.38215637 479.20272827]
[215.44342041 464.23211670]
[206.92478943 452.01400757]
[213.78327942 437.75668335]
[212.84454346 422.78607178]
[199.00892639 416.99163818]
[187.68200684 426.82528687]
[182.33351135 441.71502686]
[167.65039062 444.21609497]
[156.32347107 454.04974365]
[153.76440430 469.88739014]
[139.71632385 477.63537598]
[124.95573425 471.35009766]
[120.80568695 455.85311890]
[130.44973755 443.03237915]
[146.48980713 442.72283936]
[157.81672668 432.88916016]
[162.35504150 418.70281982]
[177.84834290 415.49838257]
[189.17526245 405.66470337]
[192.13040161 390.95867920]
[185.48144531 377.51281738]
[178.83248901 364.06695557]
[172.18353271 350.62109375]
[165.53459167 337.17520142]
[158.88563538 323.72933960]
[152.23667908 310.28347778]
[145.58772278 296.83758545]
[136.34170532 296.71853638]
[127.71066284 293.24316406]
[120.87784576 286.84301758]
[116.79613495 278.35345459]
[116.05529785 268.90496826]
[118.79713440 259.77252197]
[124.69063568 252.20359802]
[118.60866547 238.49192810]
[112.52668762 224.78027344]
[106.44471741 211.06861877]
[100.36273956 197.35694885]
[94.28076935 183.64529419]
[80.33380890 178.54450989]
[73.97049713 164.72558594]
[79.41522980 150.13131714]
[83.42630005 164.58508301]
[80.53290558 179.30337524]
[71.34898376 191.16320801]
[57.82321930 197.64808655]
[42.82558060 197.38203430]
[29.53833389 190.42149353]
[20.78083801 178.24339294]
[18.41129684 163.43173218]
[22.93249512 149.12931824]
[33.38509750 138.37092590]
[47.55122375 133.43931580]
[62.42485428 135.38081360]
[47.99495316 131.28472900]
[33.56504822 127.18864441]
[19.13514709 123.09255981]
[3.37472129 127.62477875]
[-8.24108887 116.04872894]
[-3.76293445 100.27285767]
[12.20244408 96.52602386]
[23.23123360 108.66265869]
[37.66113663 112.75874329]
[52.09103775 116.85482788]
[66.52094269 120.95092010]
[69.88045502 114.24542236]
[56.46957779 107.52616882]
[63.18905258 94.11540222]
[76.59948730 100.83443451]
[79.95899963 94.12893677]
[68.03887177 85.02341461]
[56.11874771 75.91789246]
[40.65815353 77.81732941]
[28.69916153 68.41322327]
[26.98361969 53.66220856]
[10.65954781 52.09480286]
[4.10203886 37.06379700]
[14.05689335 24.03180313]
[30.28341103 26.40501595]
[36.08914185 41.74208069]
[50.77201080 39.51744843]
[62.99042511 48.58193970]
[65.22426605 63.99776459]
[77.14439392 73.10328674]
[89.06452179 82.20880890]
[99.97114563 71.91097260]
[91.56451416 59.48806763]
[83.15788269 47.06516266]
[69.01570892 39.97225571]
[68.29078674 25.09530258]
[59.88415527 12.67239952]
[45.99969864 2.94315457]
[51.50512314 -13.09201527]
[68.43768311 -12.24072361]
[72.30706024 4.26576757]
[80.71369171 16.68867111]
[94.25457764 22.89300728]
[95.58078766 38.65853119]
[103.98741913 51.08143616]
[112.39405060 63.50433731]
[127.06843567 60.39587402]
[129.71597290 45.63137054]
[124.53591156 30.68220520]
[134.39813232 19.52040291]
[137.04566956 4.75590038]
[139.69322205 -10.00860214]
[142.34075928 -24.77310562]
[137.16069031 -39.72227097]
[147.02291870 -50.88407135]
[149.67045593 -65.64857483]
[152.31799316 -80.41307831]
[154.73406982 -95.21721649]
[156.91809082 -110.05737305]
[159.10211182 -124.89752197]
[161.28611755 -139.73767090]
[163.47013855 -154.57781982]
[161.77845764 -158.45831299]
[161.41661072 -162.29393005]
[162.21224976 -165.67990112]
[163.88127136 -168.30644226]
[166.06752014 -169.98663330]
[168.86901855 -184.72268677]
[171.67050171 -199.45875549]
[166.64675903 -214.46116638]
[176.62493896 -225.51943970]
[179.42642212 -240.25550842]
[182.22792053 -254.99156189]
[173.13032532 -267.91476440]
[175.91770935 -283.47131348]
[188.93637085 -292.43176270]
[204.46258545 -289.48007202]
[213.28489685 -276.36740112]
[210.16920471 -260.87326050]
[196.96398926 -252.19007874]
[194.16249084 -237.45401001]
[191.36100769 -222.71794128]
[196.58512878 -208.76954651]
[186.40657043 -196.65727234]
[183.60508728 -181.92120361]
[180.80358887 -167.18513489]
[178.31028748 -152.39379883]
[176.12626648 -137.55364990]
[173.94226074 -122.71350098]
[171.75823975 -107.87335205]
[169.57421875 -93.03320312]
[171.33239746 -90.02962494]
[171.75056458 -86.03730774]
[170.38485718 -81.68286896]
[167.08250427 -77.76554108]
[164.43495178 -63.00103760]
[161.78741455 -48.23653412]
[167.15684509 -34.34342575]
[157.10525513 -22.12556648]
[154.45771790 -7.36106300]
[151.81018066 7.40343952]
[149.16264343 22.16794205]
[154.53207397 36.06105042]
[144.48046875 48.27891159]
[141.83293152 63.04341125]
[144.03129578 124.11144257]
[93.12689209 144.04934692]
[107.59980774 149.80888367]
[113.57246399 163.80110168]
[107.99242401 177.56332397]
[114.07440186 191.27497864]
[120.15637207 204.98663330]
[126.23834991 218.69830322]
[132.32032776 232.40995789]
[138.40229797 246.12161255]
[158.49195862 252.48323059]
[167.13069153 271.37811279]
[159.03359985 290.18865967]
[165.68255615 303.63452148]
[172.33149719 317.08038330]
[178.98045349 330.52624512]
[185.62940979 343.97213745]
[192.27836609 357.41799927]
[198.92730713 370.86386108]
[205.57626343 384.30972290]
[251.42448425 386.35958862]
[266.31655884 388.15567017]
[281.20864868 389.95178223]
[296.10070801 391.74786377]
[310.99279785 393.54397583]
[325.88488770 395.34005737]
[330.59808350 393.33087158]
[335.16156006 393.30139160]
[338.85598755 394.87130737]
[341.21234131 397.43258667]
[356.04089355 399.69403076]
[370.86944580 401.95547485]
[385.69799805 404.21688843]
[394.60360718 402.42184448]
[400.66918945 406.58007812]
[415.47332764 408.99615479]
[430.27746582 411.41223145]
[445.08163452 413.82830811]
[459.88577271 416.24438477]
[474.68991089 418.66046143]
[484.34927368 406.71926880]
[498.69088745 401.22253418]
[513.85687256 403.64889526]
[525.76776123 413.34564209]
[531.21948242 427.70440674]
[528.74560547 442.86276245]
[519.01159668 454.74316406]
[504.63580322 460.14987183]
[489.48529053 457.62847900]
[477.63543701 447.85726929]
[472.27383423 433.46459961]
[457.46969604 431.04852295]
[442.66555786 428.63244629]
[427.86141968 426.21636963]
[413.05725098 423.80029297]
[398.25311279 421.38421631]
[383.43658447 419.04544067]
[368.60803223 416.78402710]
[353.77947998 414.52258301]
[338.95092773 412.26113892]
[324.08877563 410.23214722]
[309.19671631 408.43603516]
[294.30462646 406.63995361]
[279.41253662 404.84384155]
[264.52047729 403.04776001]
[249.62838745 401.25167847]
[244.17507935 406.40057373]
[259.02645874 408.50695801]
[266.63943481 421.43142700]
[261.28146362 435.44186401]
[246.98709106 439.98837280]
[234.52000427 431.64739990]
[233.26844788 416.69842529]
[227.81513977 421.84735107]
[228.75387573 436.81793213]
[237.33964539 450.10684204]
[230.41401672 463.29339600]
[231.35275269 478.26397705]
[232.29147339 493.23458862]
[233.23020935 508.20516968]
[234.16894531 523.17578125]
[249.16893005 523.83355713]
[264.01400757 526.08197021]
[278.53601074 529.89562988]
[292.57034302 535.23132324]
[305.95800781 542.02856445]
[318.54730225 550.21038818]
[330.19558716 559.68395996]
[340.77090454 570.34204102]
[350.15341187 582.06390381]
[358.23675537 594.71661377]
[364.92941284 608.15686035]
[370.15548706 622.23236084]
[373.85583496 636.78363037]
[375.98846436 651.64581299]
[376.52923584 666.65045166]
[375.47201538 681.62762451]
[372.82876587 696.40753174]
[368.62948608 710.82269287]
[362.92175293 724.70989990]
[355.77017212 737.91168213]
[347.25585938 750.27850342]
[337.47521973 761.67022705]
[326.53912354 771.95776367]
[314.57144165 781.02459717]
[301.70782471 788.76794434]
[288.09399414 795.10003662]
[273.88421631 799.94921875]
[259.23953247 803.26049805]
[244.32580566 804.99633789]
[229.31207275 805.13708496]
[214.36842346 803.68115234]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 269]
[27 268]
[28 267]
[29 266]
[30 265]
[32 263]
[33 262]
[34 48]
[35 47]
[37 45]
[38 44]
[49 208]
[50 207]
[51 206]
[52 205]
[53 204]
[54 203]
[55 202]
[56 201]
[63 198]
[64 197]
[65 196]
[66 195]
[67 194]
[68 193]
[71 190]
[83 94]
[84 93]
[85 92]
[86 91]
[99 114]
[100 113]
[101 112]
[104 109]
[115 129]
[116 128]
[117 127]
[119 125]
[120 124]
[130 188]
[131 187]
[133 185]
[134 184]
[135 183]
[136 182]
[138 180]
[139 179]
[140 178]
[141 174]
[142 173]
[143 172]
[144 171]
[145 170]
[150 169]
[151 168]
[152 167]
[154 165]
[155 164]
[156 163]
[209 254]
[210 253]
[211 252]
[212 251]
[213 250]
[214 249]
[218 248]
[219 247]
[220 246]
[221 245]
[223 244]
[224 243]
[225 242]
[226 241]
[227 240]
[228 239]
] def

init

% Start Annotations
26 269 0.0 1 colorpair
27 268 0.0 1 colorpair
28 267 0.0 1 colorpair
29 266 0.0 1 colorpair
30 265 0.0 1 colorpair
32 263 0.0 1 colorpair
33 262 0.0 1 colorpair
34 48 0.0 1 colorpair
35 47 0.0 1 colorpair
37 45 0.0 1 colorpair
38 44 0.0 1 colorpair
49 208 0.0 1 colorpair
50 207 0.0 1 colorpair
51 206 0.0 1 colorpair
52 205 0.0 1 colorpair
53 204 0.0 1 colorpair
54 203 0.0 1 colorpair
55 202 0.0 1 colorpair
56 201 0.0 1 colorpair
63 198 0.0 1 colorpair
64 197 0.0 1 colorpair
65 196 0.0 1 colorpair
66 195 0.0 1 colorpair
67 194 0.0 1 colorpair
68 193 0.0 1 colorpair
71 190 0.0 1 colorpair
83 94 0.0 1 colorpair
84 93 0.0 1 colorpair
85 92 0.0 1 colorpair
86 91 0.0 1 colorpair
99 114 0.0 1 colorpair
100 113 0.0 1 colorpair
101 112 0.0 1 colorpair
104 109 0.0 1 colorpair
115 129 0.0 1 colorpair
116 128 0.0 1 colorpair
117 127 0.0 1 colorpair
119 125 0.0 1 colorpair
120 124 0.0 1 colorpair
130 188 0.0 1 colorpair
131 187 0.0 1 colorpair
133 185 0.0 1 colorpair
134 184 0.0 1 colorpair
135 183 0.0 1 colorpair
136 182 0.0 1 colorpair
138 180 0.0 1 colorpair
139 179 0.0 1 colorpair
140 178 0.0 1 colorpair
141 174 0.0 1 colorpair
142 173 0.0 1 colorpair
143 172 0.0 1 colorpair
144 171 0.0 1 colorpair
145 170 0.0 1 colorpair
150 169 0.0 1 colorpair
151 168 0.0 1 colorpair
152 167 0.0 1 colorpair
154 165 0.0 1 colorpair
155 164 0.0 1 colorpair
156 163 0.0 1 colorpair
209 254 0.0 1 colorpair
210 253 0.0 1 colorpair
211 252 0.0 1 colorpair
212 251 0.0 1 colorpair
213 250 0.0 1 colorpair
214 249 0.0 1 colorpair
218 248 0.0 1 colorpair
219 247 0.0 1 colorpair
220 246 0.0 1 colorpair
221 245 0.0 1 colorpair
223 244 0.0 1 colorpair
224 243 0.0 1 colorpair
225 242 0.0 1 colorpair
226 241 0.0 1 colorpair
227 240 0.0 1 colorpair
228 239 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
