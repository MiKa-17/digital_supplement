%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 06:59:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______________________________CUGAUCAUGGCUGACGCCAAUCUUAAUGCAUUGACCGCCCAUCCCGAGCGGCAUGUAACCAU____________CCAGCAGUC______GCUGCGAUACCGGCGCAUCAAUGCGCGCACCUACGACGACUAUCCGCCUGUGCCGUGGAUUCGGCUCUCGGGGCGGUGGCUGGAAGAGGCGGGGUUUGAGAUUUCAGGGAACGUUCGGGUGGAAGUGCAGAAGGGG\
AGGCUCGUCAUAACGC_CG_U______\
) } def
/len { sequence length } bind def

/coor [
[-173.36412048 439.03118896]
[-184.67636108 448.88381958]
[-196.30818176 458.35705566]
[-208.24684143 467.44052124]
[-220.47932434 476.12426758]
[-232.99223328 484.39883423]
[-245.77188110 492.25515747]
[-258.80429077 499.68466187]
[-272.07522583 506.67919922]
[-285.57015991 513.23114014]
[-299.27435303 519.33325195]
[-313.17282104 524.97900391]
[-327.25036621 530.16204834]
[-341.49154663 534.87689209]
[-355.88085938 539.11828613]
[-370.40252686 542.88153076]
[-385.04067993 546.16265869]
[-399.77932739 548.95794678]
[-414.60232544 551.26446533]
[-429.49346924 553.07958984]
[-444.43649292 554.40136719]
[-459.41506958 555.22833252]
[-474.41278076 555.55963135]
[-489.41323853 555.39489746]
[-504.40005493 554.73425293]
[-519.35687256 553.57843018]
[-534.26727295 551.92877197]
[-549.11492920 549.78698730]
[-563.88372803 547.15545654]
[-578.55737305 544.03710938]
[-593.11993408 540.43524170]
[-607.55541992 536.35388184]
[-621.84808350 531.79748535]
[-635.98229980 526.77099609]
[-649.94256592 521.27996826]
[-663.71368408 515.33032227]
[-677.28051758 508.92861938]
[-690.62829590 502.08184814]
[-703.74243164 494.79751587]
[-716.60852051 487.08355713]
[-729.21252441 478.94842529]
[-741.54064941 470.40100098]
[-753.57940674 461.45065308]
[-765.31567383 452.10714722]
[-776.73663330 442.38070679]
[-787.82971191 432.28198242]
[-798.58288574 421.82199097]
[-808.98425293 411.01217651]
[-819.02258301 399.86437988]
[-828.68682861 388.39077759]
[-837.96643066 376.60391235]
[-846.85125732 364.51669312]
[-855.33154297 352.14230347]
[-863.39813232 339.49429321]
[-871.04205322 326.58648682]
[-878.25500488 313.43301392]
[-885.02917480 300.04821777]
[-891.35705566 286.44680786]
[-897.23181152 272.64358521]
[-902.64691162 258.65365601]
[-907.59655762 244.49237061]
[-912.07525635 230.17515564]
[-916.07812500 215.71769714]
[-919.60076904 201.13578796]
[-922.63940430 186.44537354]
[-925.19061279 171.66253662]
[-927.25170898 156.80342102]
[-928.82037354 141.88429260]
[-929.89489746 126.92144775]
[-930.47406006 111.93125916]
[-930.55737305 96.93011475]
[-930.14459229 81.93441772]
[-929.23620605 66.96057129]
[-927.83325195 52.02494431]
[-925.93725586 37.14387131]
[-923.55029297 22.33361816]
[-920.67492676 7.61038542]
[-917.31439209 -7.00972891]
[-913.47222900 -21.51073647]
[-909.15277100 -35.87678528]
[-904.36065674 -50.09215927]
[-899.10113525 -64.14131927]
[-893.38000488 -78.00889587]
[-887.20349121 -91.67974091]
[-880.57836914 -105.13888550]
[-873.51184082 -118.37162781]
[-866.01165771 -131.36347961]
[-858.08599854 -144.10026550]
[-849.74359131 -156.56802368]
[-840.99346924 -168.75314331]
[-831.84527588 -180.64228821]
[-822.30902100 -192.22247314]
[-812.39508057 -203.48101807]
[-802.11425781 -214.40562439]
[-791.47790527 -224.98432922]
[-780.49761963 -235.20558167]
[-769.18536377 -245.05819702]
[-757.55352783 -254.53141785]
[-745.61486816 -263.61486816]
[-733.38232422 -272.29861450]
[-720.86944580 -280.57315063]
[-708.08978271 -288.42944336]
[-695.05737305 -295.85891724]
[-681.78637695 -302.85342407]
[-668.29144287 -309.40533447]
[-654.58721924 -315.50747681]
[-640.68878174 -321.15316772]
[-626.61126709 -326.33624268]
[-612.37005615 -331.05102539]
[-597.98071289 -335.29238892]
[-583.45904541 -339.05566406]
[-568.82092285 -342.33673096]
[-554.08227539 -345.13201904]
[-539.25927734 -347.43847656]
[-524.36810303 -349.25357056]
[-509.42504883 -350.57534790]
[-494.44650269 -351.40231323]
[-479.44879150 -351.73358154]
[-464.44830322 -351.56878662]
[-449.46148682 -350.90811157]
[-434.50469971 -349.75231934]
[-419.59432983 -348.10260010]
[-404.74661255 -345.96081543]
[-389.97787476 -343.32928467]
[-375.30419922 -340.21087646]
[-360.74163818 -336.60900879]
[-346.30615234 -332.52764893]
[-332.01348877 -327.97119141]
[-317.87930298 -322.94470215]
[-303.91900635 -317.45361328]
[-290.14791870 -311.50396729]
[-276.58108521 -305.10226440]
[-263.23330688 -298.25546265]
[-250.11923218 -290.97109985]
[-237.25315857 -283.25714111]
[-224.64916992 -275.12197876]
[-212.32106018 -266.57455444]
[-200.28228760 -257.62417603]
[-188.54602051 -248.28063965]
[-177.12510681 -238.55419922]
[-166.03202820 -228.45544434]
[-155.27890015 -217.99543762]
[-144.87750244 -207.18562317]
[-134.83920288 -196.03781128]
[-125.17498016 -184.56417847]
[-115.89539337 -172.77731323]
[-107.01059723 -160.69006348]
[-98.53030396 -148.31565857]
[-90.46378326 -135.66763306]
[-82.81986237 -122.75981903]
[-75.60688782 -109.60633087]
[-68.83276367 -96.22154236]
[-62.50489044 -82.62010193]
[-56.63018417 -68.81687927]
[-51.21507263 -54.82696152]
[-46.26547623 -40.66564941]
[-41.78680801 -26.34843254]
[-37.78395844 -11.89096165]
[-34.26131439 2.69095182]
[-31.22272491 17.38136292]
[-28.67150879 32.16420746]
[-26.61046028 47.02332306]
[-25.04183006 61.94245911]
[-23.96733475 76.90530396]
[-23.38814926 91.89549255]
[-8.38838100 91.81223297]
[-2.87414241 81.04930115]
[6.73997879 73.59522247]
[18.67779541 70.90437317]
[30.70080757 73.54392242]
[40.52793121 81.07558441]
[46.26826859 92.12706757]
[61.26618576 92.37683105]
[76.26410675 92.62659454]
[91.26203156 92.87635803]
[78.21985626 85.46678162]
[65.48181915 77.54576874]
[57.06076813 65.13263702]
[54.40943527 50.36881256]
[57.98521423 35.80125427]
[67.17123413 23.94304848]
[80.38278961 16.83989525]
[95.34071350 15.71717834]
[109.46457672 20.76858330]
[120.31781006 31.12267494]
[126.02805328 44.99295807]
[114.71612549 54.84386063]
[129.36605835 51.62210846]
[144.01597595 48.40035629]
[158.66590881 45.17860413]
[173.31582642 41.95684814]
[185.13208008 31.43607521]
[199.22416687 36.25919342]
[211.04042053 25.73841858]
[225.13250732 30.56153488]
[230.21231079 26.43467331]
[235.77947998 25.58822823]
[240.14332581 27.43469238]
[254.86116028 24.53896713]
[261.26443481 10.40468979]
[274.76931763 2.76284885]
[290.18289185 4.55188799]
[301.57836914 15.08388519]
[304.57391357 30.30907249]
[298.01770020 44.37305450]
[284.43072510 51.86794281]
[269.03741455 49.91180038]
[257.75689697 39.25680542]
[243.03904724 42.15253067]
[228.35426331 45.21146011]
[217.58586121 55.50179291]
[202.44592285 50.90911865]
[191.67752075 61.19945145]
[176.53758240 56.60677338]
[161.88764954 59.82852936]
[147.23773193 63.05028152]
[132.58779907 66.27203369]
[117.93788147 69.49378967]
[116.73584747 76.89683533]
[131.54190063 79.30113983]
[129.13735962 94.10715485]
[114.33178711 91.70292664]
[113.12976074 99.10597992]
[126.00770569 106.79742432]
[136.60449219 96.07493591]
[149.45976257 88.20059967]
[163.82615662 83.63220978]
[178.86842346 82.63537598]
[193.71202087 85.26805115]
[207.49397278 91.37717438]
[219.41299438 100.60757446]
[228.77615356 112.42259979]
[235.03907776 126.13533783]
[237.83763123 140.94856262]
[237.00914001 156.00103760]
[232.60176086 170.41763306]
[224.87171936 183.36019897]
[214.26844788 194.07626343]
[201.40838623 201.94281006]
[187.03923035 206.50248718]
[171.99636841 207.49018860]
[157.15435791 204.84852600]
[143.37612915 198.73104858]
[131.46269226 189.49342346]
[122.10670471 177.67272949]
[115.85209656 163.95619202]
[113.06251526 149.14128113]
[113.90013885 134.08930969]
[118.31626129 119.67537689]
[105.43830872 111.98393250]
[91.01226807 107.87427521]
[76.01434326 107.62451172]
[61.01642609 107.37474823]
[46.01850510 107.12499237]
[35.51935196 121.94927979]
[18.36407661 127.42464447]
[1.51614285 121.52791595]
[-8.30512333 106.81200409]
[-23.30489349 106.89526367]
[-23.71763992 121.89095306]
[-24.62596893 136.86480713]
[-26.02888680 151.80043030]
[-27.92486191 166.68151855]
[-30.31181717 181.49177551]
[-33.18714523 196.21501160]
[-36.54770279 210.83512878]
[-40.38981247 225.33613586]
[-44.70927429 239.70219421]
[-49.50136566 253.91757202]
[-54.76084518 267.96673584]
[-60.48196030 281.83432007]
[-66.65845490 295.50518799]
[-73.28358459 308.96432495]
[-80.35009003 322.19708252]
[-87.85025787 335.18896484]
[-95.77587891 347.92575073]
[-104.11828613 360.39352417]
[-112.86835480 372.57864380]
[-122.01652527 384.46783447]
[-131.55279541 396.04800415]
[-141.46672058 407.30657959]
[-151.74748230 418.23120117]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[165 259]
[166 258]
[172 254]
[173 253]
[174 252]
[175 251]
[187 218]
[188 217]
[189 216]
[190 215]
[191 214]
[193 212]
[195 210]
[198 209]
[199 208]
[223 250]
[224 249]
] def

init

% Start Annotations
165 259 0.16 1 colorpair
166 258 0.0 1 colorpair
172 254 0.0 1 colorpair
173 253 0.0 1 colorpair
174 252 0.16 0.2 colorpair
175 251 0.0 1 colorpair
187 218 0.0 1 colorpair
188 217 0.0 1 colorpair
189 216 0.16 1 colorpair
190 215 0.0 1 colorpair
191 214 0.0 1 colorpair
193 212 0.0 1 colorpair
195 210 0.16 0.2 colorpair
198 209 0.0 1 colorpair
199 208 0.0 1 colorpair
223 250 0.16 1 colorpair
224 249 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
259 cmark
174 252 2 gmark
174 cmark
252 cmark
216 cmark
195 210 2 gmark
195 cmark
210 cmark
223 cmark
250 cmark
224 cmark
249 cmark

% End Annotations
showpage
end
%%EOF
