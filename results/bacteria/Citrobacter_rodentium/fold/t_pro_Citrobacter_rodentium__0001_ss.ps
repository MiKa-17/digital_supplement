%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 17:38:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
________________________AUGC_G___AAAUGUACCUUAUUCAGUUUAAUAGUGCUAUGUGUCACGAUAUUGCGAUUCACGCCGUUGGUCGGAGAAUCGCUAUGCGAGUUAAGAAUCAGACAGCGUAGUAAGGAG_U___GGCA_UU_U_GC_U__GAA__GAA____\
) } def
/len { sequence length } bind def

/coor [
[176.70535278 786.79827881]
[162.45285034 791.47442627]
[147.96183777 795.34881592]
[133.27740479 798.40936279]
[118.44519043 800.64666748]
[103.51132965 802.05371094]
[88.52225494 802.62615967]
[73.52457428 802.36218262]
[58.56493378 801.26257324]
[43.68984222 799.33087158]
[28.94555664 796.57293701]
[14.37792492 792.99743652]
[0.03224748 788.61547852]
[-14.04686737 783.44073486]
[-27.81563950 777.48913574]
[-41.23125458 770.77935791]
[-54.25199509 763.33221436]
[-66.83737183 755.17083740]
[-78.94825745 746.32055664]
[-90.54697418 736.80902100]
[-101.59747314 726.66571045]
[-112.06538391 715.92224121]
[-121.91815948 704.61193848]
[-131.12515259 692.77001953]
[-139.65774536 680.43328857]
[-147.48941040 667.64013672]
[-154.59576416 654.43029785]
[-160.95474243 640.84484863]
[-166.54655457 626.92608643]
[-171.35382080 612.71728516]
[-175.36158752 598.26263428]
[-178.55738831 583.60699463]
[-180.93128967 568.79608154]
[-182.47592163 553.87579346]
[-183.18646240 538.89263916]
[-183.06069946 523.89318848]
[-182.09904480 508.92401123]
[-180.30447388 494.03176880]
[-177.68258667 479.26266479]
[-174.24150085 464.66271973]
[-169.99194336 450.27725220]
[-164.94712830 436.15106201]
[-159.12272644 422.32800293]
[-152.53686523 408.85113525]
[-145.21002197 395.76229858]
[-137.16497803 383.10223389]
[-128.42672729 370.91030884]
[-119.02248383 359.22442627]
[-108.98146057 348.08090210]
[-98.33489227 337.51443481]
[-87.11587524 327.55783081]
[-75.35930634 318.24209595]
[-63.10174561 309.59616089]
[-50.38129807 301.64694214]
[-37.23752213 294.41912842]
[-23.71129417 287.93521118]
[-9.84467030 282.21536255]
[4.31546068 277.27853394]
[-6.71079397 267.10888672]
[-17.73704910 256.93923950]
[-28.76330376 246.76959229]
[-39.78955841 236.59994507]
[-55.89850616 233.52848816]
[-61.03675842 217.95509338]
[-49.91852188 205.90036011]
[-33.98128510 209.76513672]
[-29.61991310 225.57369995]
[-18.59365845 235.74334717]
[-7.56740284 245.91299438]
[3.45885205 256.08264160]
[14.48510742 266.25228882]
[29.07847595 262.78332520]
[34.34909821 248.73982239]
[39.61972046 234.69628906]
[44.89034271 220.65277100]
[50.16096497 206.60925293]
[55.43158722 192.56571960]
[54.83603668 185.17378235]
[60.92492676 178.31883240]
[66.44679260 164.37217712]
[71.96866608 150.42553711]
[77.49053192 136.47888184]
[83.01239777 122.53224182]
[88.53427124 108.58559418]
[86.68193054 94.72700500]
[97.51908112 85.89253998]
[95.40530396 70.21317291]
[107.28448486 61.22794342]
[112.80635834 47.28129959]
[118.32822418 33.33465195]
[118.58215332 24.16947556]
[124.07642365 19.18866158]
[129.84776306 5.34338522]
[135.61909485 -8.50189209]
[127.42647552 -21.67992973]
[128.57794189 -37.15422440]
[138.63073730 -48.97459030]
[153.71934509 -52.59585571]
[168.04188538 -46.62557602]
[176.09106445 -33.35943604]
[174.77180481 -17.89854622]
[164.59136963 -6.18792915]
[149.46437073 -2.73055696]
[143.69303894 11.11472034]
[137.92170715 24.95999718]
[132.27487183 38.85651779]
[126.75300598 52.80316544]
[121.23113251 66.74981689]
[123.73987579 81.43162537]
[111.46572876 91.41440582]
[113.31806946 105.27299500]
[102.48091888 114.10746002]
[96.95904541 128.05410767]
[91.43717957 142.00076294]
[85.91531372 155.94740295]
[80.39344025 169.89404297]
[74.87157440 183.84069824]
[69.47511292 197.83634949]
[64.20449066 211.87986755]
[58.93386841 225.92338562]
[53.66324615 239.96691895]
[48.39262390 254.01043701]
[43.12200165 268.05395508]
[57.99292755 266.09042358]
[72.95018768 264.95886230]
[87.94726562 264.66284180]
[102.93753052 265.20321655]
[117.87436676 266.57833862]
[132.71131897 268.78390503]
[147.40226746 271.81311035]
[161.90151978 275.65649414]
[176.16400146 280.30212402]
[190.14533997 285.73556519]
[203.80207825 291.93988037]
[217.09173584 298.89581299]
[229.97300720 306.58169556]
[242.40580750 314.97366333]
[254.35151672 324.04562378]
[265.77294922 333.76934814]
[276.63461304 344.11459351]
[286.90270996 355.04922485]
[296.54534912 366.53921509]
[305.53250122 378.54882812]
[313.83627319 391.04071045]
[321.43078613 403.97607422]
[328.29248047 417.31463623]
[334.39996338 431.01495361]
[339.73428345 445.03439331]
[344.27883911 459.32940674]
[348.01947021 473.85549927]
[350.94461060 488.56753540]
[353.04510498 503.41973877]
[354.31448364 518.36590576]
[354.74871826 533.35961914]
[354.34652710 548.35424805]
[353.10913086 563.30310059]
[351.04037476 578.15979004]
[348.14669800 592.87799072]
[344.43710327 607.41204834]
[339.92312622 621.71673584]
[334.61877441 635.74755859]
[328.54058838 649.46093750]
[321.70742798 662.81414795]
[314.14059448 675.76568604]
[305.86355591 688.27532959]
[296.90206909 700.30407715]
[287.28402710 711.81469727]
[277.03933716 722.77124023]
[266.19979858 733.13964844]
[254.79917908 742.88775635]
[242.87290955 751.98522949]
[230.45805359 760.40380859]
[217.59326172 768.11718750]
[204.31849670 775.10150146]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[58 71]
[59 70]
[60 69]
[61 68]
[62 67]
[72 123]
[73 122]
[74 121]
[75 120]
[76 119]
[77 118]
[79 117]
[80 116]
[81 115]
[82 114]
[83 113]
[84 112]
[86 110]
[88 108]
[89 107]
[90 106]
[92 105]
[93 104]
[94 103]
] def

init

% Start Annotations
58 71 0.0 0.6 colorpair
59 70 0.0 1 colorpair
60 69 0.0 1 colorpair
61 68 0.16 0.6 colorpair
62 67 0.16 0.6 colorpair
72 123 0.16 0.6 colorpair
73 122 0.16 0.6 colorpair
74 121 0.16 1 colorpair
75 120 0.32 1 colorpair
76 119 0.32 1 colorpair
77 118 0.16 0.6 colorpair
79 117 0.32 1 colorpair
80 116 0.0 0.6 colorpair
81 115 0.16 1 colorpair
82 114 0.32 1 colorpair
83 113 0.16 1 colorpair
84 112 0.16 0.6 colorpair
86 110 0.0 0.6 colorpair
88 108 0.16 0.6 colorpair
89 107 0.16 0.6 colorpair
90 106 0.16 0.6 colorpair
92 105 0.32 1 colorpair
93 104 0.0 0.6 colorpair
94 103 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
58 71 1 gmark
61 68 1 gmark
61 cmark
68 cmark
62 67 1 gmark
62 cmark
72 123 1 gmark
123 cmark
73 122 1 gmark
73 cmark
121 cmark
75 cmark
120 cmark
76 cmark
119 cmark
77 118 1 gmark
77 cmark
118 cmark
79 cmark
117 cmark
80 116 1 gmark
81 cmark
82 cmark
114 cmark
113 cmark
84 112 1 gmark
84 cmark
86 110 1 gmark
88 108 1 gmark
88 cmark
108 cmark
89 107 1 gmark
89 cmark
107 cmark
90 106 1 gmark
106 cmark
92 cmark
105 cmark
93 104 1 gmark
94 103 1 gmark

% End Annotations
showpage
end
%%EOF
