%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 17:38:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_______________________GAUGCCGCAAAAAUGUAUAUUAUGCAGUUUAAUAGUGAUAUGUCUCACUAUAUUAUUAUUUACCUGGAUGGUUCGUGAUUCAUUAUGCGAAUUACAUAUCAGACAGGGCAAUAAUGAACUGGCGGCAUUUUUAGCCUGUGAAGUGAA____\
) } def
/len { sequence length } bind def

/coor [
[85.99955750 461.47885132]
[71.12539673 459.40118408]
[56.61013031 455.54571533]
[42.66543961 449.96871948]
[29.49467278 442.75149536]
[17.28990173 433.99932861]
[6.22910547 423.83978271]
[-3.52641487 412.42105103]
[-11.83439541 399.90966797]
[-18.57368279 386.48806763]
[-23.64599609 372.35198975]
[-26.97736740 357.70755005]
[-28.51921654 342.76834106]
[-28.24905777 327.75219727]
[-26.17082977 312.87811279]
[-22.31483841 298.36300659]
[-16.73731995 284.41851807]
[-9.51960659 271.24801636]
[-0.76695603 259.04357910]
[9.39299297 247.98315430]
[20.81207848 238.22807312]
[33.32377625 229.92054749]
[46.74562836 223.18176270]
[60.88190842 218.10998535]
[75.52645874 214.77915955]
[90.46572876 213.23786926]
[90.73499298 198.24028015]
[91.00426483 183.24270630]
[91.27352905 168.24511719]
[81.29218292 166.20849609]
[71.72098541 162.72036743]
[62.76974869 157.85720825]
[54.63472748 151.72561646]
[47.49425888 144.46003723]
[41.50489044 136.21974182]
[36.79792786 127.18539429]
[33.47656250 117.55505371]
[31.61360931 107.53984833]
[31.24991226 97.35933685]
[32.39344406 87.23672485]
[35.01913071 77.39392853]
[39.06941605 68.04672241]
[44.45550156 59.40004730]
[51.05930328 51.64345169]
[41.60206604 40.00039673]
[32.14483261 28.35734367]
[17.43834877 22.52383041]
[15.41974926 7.76664400]
[5.96251488 -3.87641025]
[-3.49471951 -15.51946449]
[-23.53188133 -16.48936081]
[-36.24210739 -31.61478996]
[-33.82183838 -50.91648483]
[-43.89210510 -62.03357697]
[-53.96237183 -73.15067291]
[-64.03263855 -84.26776123]
[-74.10290527 -95.38485718]
[-84.66179657 -106.03894806]
[-95.68804932 -116.20859528]
[-106.71430969 -126.37824249]
[-117.74056244 -136.54788208]
[-133.51985168 -135.65934753]
[-145.24996948 -146.25085449]
[-145.97161865 -162.03866577]
[-135.25668335 -173.65614319]
[-119.46213531 -174.21084595]
[-107.95859528 -163.37367249]
[-107.57091522 -147.57414246]
[-96.54466248 -137.40449524]
[-85.51840210 -127.23484802]
[-74.49214935 -117.06520844]
[-72.28922272 -131.90255737]
[-59.40882874 -139.58992004]
[-45.30408096 -134.48541260]
[-40.32666016 -120.33531189]
[-48.12957001 -107.52458954]
[-62.98581314 -105.45511627]
[-52.91554642 -94.33802795]
[-42.84527969 -83.22093201]
[-32.77501297 -72.10384369]
[-22.70474625 -60.98675156]
[-12.63775730 -63.26900482]
[-2.45605350 -61.13277817]
[5.97489452 -54.90056992]
[11.08178329 -45.65152740]
[11.87687397 -35.03503418]
[8.14833450 -24.97669983]
[17.60556984 -13.33364487]
[27.06280327 -1.69059014]
[41.09284210 3.31013370]
[43.78788757 18.90010834]
[53.24512100 30.54316330]
[62.70235825 42.18621826]
[77.51062012 34.97865677]
[93.60752106 31.49683189]
[110.07072449 31.94025993]
[125.95686340 36.28352737]
[140.35566711 44.27776718]
[150.42593384 33.16067505]
[160.49620056 22.04358292]
[170.56646729 10.92649078]
[180.63673401 -0.19060160]
[190.70700073 -11.30769348]
[200.77726746 -22.42478561]
[198.46818542 -37.89094543]
[206.68479919 -51.19587708]
[221.54748535 -56.05739594]
[236.03854370 -50.18004608]
[243.31573486 -36.33892822]
[239.94299316 -21.06939697]
[227.51281738 -11.58125687]
[211.89436340 -12.35451889]
[201.82409668 -1.23742723]
[191.75382996 9.87966442]
[181.68356323 20.99675751]
[171.61329651 32.11384964]
[161.54302979 43.23094177]
[151.47276306 54.34803391]
[155.18049622 58.90669632]
[158.48573303 63.76511002]
[161.36433411 68.88784027]
[163.79531860 74.23751831]
[165.76094055 79.77511597]
[167.24688721 85.46024323]
[168.24229431 91.25143433]
[168.73991394 97.10644531]
[168.73609924 102.98255920]
[183.56181335 105.26255798]
[198.38751221 107.54255676]
[211.04725647 98.46683502]
[226.05015564 100.99028015]
[234.62445068 113.11533356]
[247.21873474 103.56758881]
[262.86392212 105.80455780]
[272.27798462 118.49908447]
[269.87573242 134.11973572]
[257.08236694 143.39904785]
[241.48799133 140.83178711]
[232.34445190 127.94104004]
[220.52316284 136.92951965]
[205.45530701 134.82846069]
[196.10751343 122.36827087]
[181.28181458 120.08826447]
[166.45610046 117.80826569]
[154.02482605 142.60124207]
[132.81422424 160.47126770]
[106.27111053 168.51438904]
[106.00184631 183.51196289]
[105.73258209 198.50955200]
[105.46331787 213.50714111]
[120.33763123 215.58369446]
[134.85317993 219.43804932]
[148.79829407 225.01400757]
[161.96960449 232.23023987]
[174.17501831 240.98152161]
[185.23657227 251.14022827]
[194.99295044 262.55822754]
[203.30186462 275.06900024]
[210.04216003 288.49008179]
[215.11552429 302.62579346]
[218.44799805 317.26998901]
[219.99096680 332.20907593]
[219.72192383 347.22521973]
[217.64480591 362.09945679]
[213.78990173 376.61486816]
[208.21342468 390.55978394]
[200.99670410 403.73080444]
[192.24496460 415.93591309]
[182.08584595 426.99710083]
[170.66748047 436.75305176]
[158.15641785 445.06149292]
[144.73506165 451.80126953]
[130.59916687 456.87411499]
[115.95485687 460.20602417]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 150]
[27 149]
[28 148]
[29 147]
[44 93]
[45 92]
[46 91]
[48 89]
[49 88]
[50 87]
[53 81]
[54 80]
[55 79]
[56 78]
[57 77]
[58 71]
[59 70]
[60 69]
[61 68]
[98 118]
[99 117]
[100 116]
[101 115]
[102 114]
[103 113]
[104 112]
[127 144]
[128 143]
[129 142]
[132 139]
] def

init

% Start Annotations
26 150 0.0 0.6 colorpair
27 149 0.0 0.6 colorpair
28 148 0.0 0.6 colorpair
29 147 0.16 0.6 colorpair
44 93 0.16 0.6 colorpair
45 92 0.0 0.6 colorpair
46 91 0.16 0.6 colorpair
48 89 0.16 0.6 colorpair
49 88 0.16 0.6 colorpair
50 87 0.16 1 colorpair
53 81 0.0 0.6 colorpair
54 80 0.16 0.6 colorpair
55 79 0.16 0.2 colorpair
56 78 0.32 1 colorpair
57 77 0.0 0.6 colorpair
58 71 0.0 0.6 colorpair
59 70 0.0 1 colorpair
60 69 0.0 1 colorpair
61 68 0.16 0.2 colorpair
98 118 0.16 0.2 colorpair
99 117 0.16 0.6 colorpair
100 116 0.0 0.6 colorpair
101 115 0.0 0.6 colorpair
102 114 0.16 0.6 colorpair
103 113 0.0 1 colorpair
104 112 0.0 0.6 colorpair
127 144 0.32 1 colorpair
128 143 0.0 0.6 colorpair
129 142 0.16 1 colorpair
132 139 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
26 150 1 gmark
27 149 1 gmark
28 148 1 gmark
29 147 1 gmark
29 cmark
44 93 1 gmark
93 cmark
45 92 1 gmark
46 91 1 gmark
46 cmark
91 cmark
48 89 1 gmark
48 cmark
89 cmark
49 88 1 gmark
49 cmark
88 cmark
50 cmark
87 cmark
53 81 1 gmark
54 80 1 gmark
54 cmark
80 cmark
55 79 2 gmark
55 cmark
79 cmark
56 cmark
78 cmark
57 77 1 gmark
58 71 1 gmark
61 68 2 gmark
61 cmark
68 cmark
98 118 2 gmark
118 cmark
99 117 1 gmark
99 cmark
117 cmark
100 116 1 gmark
101 115 1 gmark
102 114 1 gmark
102 cmark
114 cmark
104 112 1 gmark
127 cmark
144 cmark
128 143 1 gmark
142 cmark
132 139 1 gmark
132 cmark

% End Annotations
showpage
end
%%EOF
