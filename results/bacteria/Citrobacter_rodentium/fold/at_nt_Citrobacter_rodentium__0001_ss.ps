%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 17:38:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_________G_A_____A__GU______U__C_C_____U___A_U_ACCCGGAUGGUU_GGGACUCAGUAUGUCACCUAUAUAUCAAACAACGCAGUAAGGAACUUGCCCCAUUU_U_GC_________G_____G_A___G___________________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[38.81785583 530.16381836]
[24.00672150 527.79571533]
[9.28614998 524.91784668]
[-5.32631636 521.53356934]
[-19.81326294 517.64691162]
[-34.15742493 513.26257324]
[-48.34171295 508.38571167]
[-62.34921646 503.02218628]
[-76.16324615 497.17837524]
[-89.76733398 490.86126709]
[-103.14527893 484.07830811]
[-116.28112793 476.83767700]
[-129.15924072 469.14794922]
[-141.76425171 461.01831055]
[-154.08114624 452.45840454]
[-166.09524536 443.47851562]
[-177.79223633 434.08926392]
[-189.15818787 424.30187988]
[-200.17953491 414.12802124]
[-210.84315491 403.57980347]
[-221.13633728 392.66979980]
[-231.04681396 381.41104126]
[-240.56277466 369.81689453]
[-249.67288208 357.90121460]
[-258.36627197 345.67819214]
[-266.63259888 333.16238403]
[-274.46200562 320.36871338]
[-281.84515381 307.31243896]
[-288.77325439 294.00909424]
[-295.23803711 280.47454834]
[-301.23181152 266.72491455]
[-306.74743652 252.77659607]
[-311.77832031 238.64620972]
[-316.31848145 224.35060120]
[-320.36251831 209.90681458]
[-323.90560913 195.33203125]
[-326.94351196 180.64364624]
[-329.47262573 165.85916138]
[-331.48992920 150.99618530]
[-332.99301147 136.07243347]
[-333.98007202 121.10569763]
[-334.44998169 106.11380768]
[-334.40213013 91.11463165]
[-333.83660889 76.12604523]
[-332.75405884 61.16591263]
[-331.15579224 46.25205612]
[-329.04373169 31.40225410]
[-326.42034912 16.63419914]
[-323.28878784 1.96549451]
[-319.65280151 -12.58638096]
[-315.51669312 -27.00408554]
[-310.88540649 -41.27043915]
[-305.76446533 -55.36843491]
[-300.15997314 -69.28127289]
[-294.07861328 -82.99238586]
[-287.52761841 -96.48541260]
[-280.51477051 -109.74428558]
[-273.04849243 -122.75320435]
[-265.13763428 -135.49667358]
[-256.79162598 -147.95948792]
[-248.02041626 -160.12680054]
[-238.83447266 -171.98411560]
[-229.24473572 -183.51730347]
[-219.26263428 -194.71263123]
[-208.90005493 -205.55673218]
[-198.16935730 -216.03669739]
[-187.08332825 -226.14002991]
[-175.65518188 -235.85470581]
[-184.97006226 -247.61195374]
[-194.28494263 -259.36920166]
[-203.59982300 -271.12646484]
[-212.91471863 -282.88369751]
[-222.22959900 -294.64096069]
[-231.54447937 -306.39822388]
[-245.81600952 -301.33837891]
[-260.95724487 -301.18914795]
[-275.32571411 -305.96670532]
[-287.36291504 -315.15283203]
[-295.76306152 -327.75109863]
[-299.61502075 -342.39489746]
[-298.50094604 -357.49581909]
[-292.54168701 -371.41580200]
[-282.38366699 -382.64492798]
[-269.12872314 -389.96511841]
[-254.21469116 -392.58236694]
[-239.25929260 -390.21276855]
[-225.88481140 -383.11334229]
[-215.54199219 -372.05419922]
[-209.35275269 -358.23492432]
[-207.98846436 -343.15454102]
[-211.59709167 -328.44888306]
[-219.78723145 -315.71310425]
[-210.47235107 -303.95584106]
[-201.15745544 -292.19860840]
[-191.84257507 -280.44134521]
[-182.52769470 -268.68408203]
[-173.21281433 -256.92684937]
[-163.89793396 -245.16958618]
[-151.82676697 -254.07264709]
[-139.45549011 -262.55377197]
[-126.79885864 -270.60281372]
[-113.87194824 -278.21020508]
[-100.69015503 -285.36688232]
[-87.26920319 -292.06430054]
[-73.62507629 -298.29449463]
[-59.77403259 -304.05001831]
[-45.73258591 -309.32403564]
[-31.51746941 -314.11026001]
[-17.14561844 -318.40298462]
[-2.63416481 -322.19711304]
[11.99960041 -325.48806763]
[26.73823738 -328.27197266]
[41.56418228 -330.54550171]
[56.45976639 -332.30590820]
[71.40723419 -333.55117798]
[86.38877869 -334.27975464]
[101.38655090 -334.49078369]
[116.38265991 -334.18402100]
[131.35925293 -333.35986328]
[146.29847717 -332.01922607]
[161.18251038 -330.16375732]
[175.99365234 -327.79565430]
[190.71421814 -324.91775513]
[205.32667542 -321.53344727]
[219.81362915 -317.64682007]
[234.15777588 -313.26245117]
[248.34205627 -308.38558960]
[262.34954834 -303.02206421]
[276.16357422 -297.17825317]
[289.76766968 -290.86108398]
[303.14559937 -284.07815552]
[316.28146362 -276.83749390]
[329.15954590 -269.14773560]
[341.76455688 -261.01809692]
[354.08145142 -252.45819092]
[366.09555054 -243.47827148]
[377.79254150 -234.08901978]
[389.15847778 -224.30162048]
[400.17980957 -214.12776184]
[410.84341431 -203.57954407]
[421.13659668 -192.66954041]
[431.04705811 -181.41075134]
[440.56301880 -169.81660461]
[449.67309570 -157.90092468]
[458.36648560 -145.67788696]
[466.63281250 -133.16206360]
[474.46218872 -120.36839294]
[481.84533691 -107.31210327]
[488.77340698 -94.00875092]
[495.23818970 -80.47418976]
[501.23196411 -66.72456360]
[506.74755859 -52.77624512]
[511.77844238 -38.64585876]
[516.31860352 -24.35024834]
[520.36260986 -9.90644646]
[523.90570068 4.66833305]
[526.94360352 19.35672188]
[529.47265625 34.14121246]
[531.48999023 49.00418854]
[532.99304199 63.92794037]
[533.98010254 78.89467621]
[534.45001221 93.88656616]
[534.40209961 108.88574219]
[533.83660889 123.87432861]
[532.75402832 138.83445740]
[531.15576172 153.74832153]
[529.04364014 168.59811401]
[526.42028809 183.36616516]
[523.28869629 198.03486633]
[519.65270996 212.58674622]
[515.51660156 227.00444031]
[510.88528442 241.27079773]
[505.76434326 255.36878967]
[500.15985107 269.28161621]
[494.07846069 282.99273682]
[487.52743530 296.48574829]
[480.51458740 309.74462891]
[473.04827881 322.75354004]
[465.13742065 335.49697876]
[456.79141235 347.95977783]
[448.02020264 360.12710571]
[438.83422852 371.98440552]
[429.24450684 383.51757812]
[419.26239014 394.71289062]
[408.89981079 405.55700684]
[398.16909790 416.03695679]
[387.08303833 426.14028931]
[375.65487671 435.85494995]
[363.89822388 445.16937256]
[351.82705688 454.07244873]
[339.45581055 462.55355835]
[326.79919434 470.60260010]
[313.87228394 478.21002197]
[300.69049072 485.36669922]
[287.26953125 492.06411743]
[273.62542725 498.29434204]
[259.77438354 504.04989624]
[245.73294067 509.32391357]
[231.51782227 514.11016846]
[217.14598083 518.40289307]
[202.63452148 522.19702148]
[188.00076294 525.48797607]
[173.26213074 528.27191162]
[158.43618774 530.54541016]
[143.54060364 532.30590820]
[128.59313965 533.55114746]
[113.61159515 534.27972412]
[98.61382294 534.49078369]
[83.61771393 534.18402100]
[68.64112091 533.35986328]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 98]
[69 97]
[70 96]
[71 95]
[72 94]
[73 93]
[74 92]
] def

init

% Start Annotations
68 98 0.32 1 colorpair
69 97 0.32 0.2 colorpair
70 96 0.16 0.2 colorpair
71 95 0.32 0.6 colorpair
72 94 0.16 0.6 colorpair
73 93 0.16 0.2 colorpair
74 92 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
68 cmark
98 cmark
69 97 2 gmark
69 cmark
97 cmark
70 96 2 gmark
96 cmark
71 95 1 gmark
71 cmark
95 cmark
72 94 1 gmark
94 cmark
73 93 2 gmark
73 cmark
93 cmark
74 cmark
92 cmark

% End Annotations
showpage
end
%%EOF
