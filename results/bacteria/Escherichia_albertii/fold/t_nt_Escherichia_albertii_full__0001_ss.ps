%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 20:19:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
________________________________________________________________________________________________________CA____U__AUGAUGAAGUUCGUCAUCAU__ACUGAUUGUGCUGUUACUGAUAGGUUUCCCGGC_________UUAUUAA______A_U_G_UG_________________________________________________________\
______________________________________________________________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50185394 92.24179840]
[62.51036835 91.72546387]
[47.52999496 90.95114899]
[32.56517029 89.91909027]
[17.62032700 88.62959290]
[2.69989514 87.08303070]
[-12.19170475 85.27986908]
[-27.05006027 83.22064209]
[-41.87076569 80.90595245]
[-56.64943695 78.33649445]
[-71.38168335 75.51302338]
[-86.06314850 72.43638611]
[-100.68948364 69.10748291]
[-115.25634003 65.52730560]
[-129.75941467 61.69691467]
[-144.19441223 57.61744308]
[-158.55705261 53.29010391]
[-172.84306335 48.71617508]
[-187.04823303 43.89701462]
[-201.16835022 38.83404922]
[-215.19921875 33.52877808]
[-229.13668823 27.98277473]
[-242.97662354 22.19768143]
[-256.71493530 16.17521667]
[-270.34753418 9.91715908]
[-283.87039185 3.42536712]
[-297.27951050 -3.29823709]
[-310.57089233 -10.25166130]
[-323.74063110 -17.43284416]
[-336.78479004 -24.83965874]
[-349.69952393 -32.46990967]
[-362.48098755 -40.32133484]
[-375.12542725 -48.39160919]
[-387.62908936 -56.67834473]
[-399.98825073 -65.17907715]
[-412.19924927 -73.89129639]
[-424.25845337 -82.81241608]
[-436.16232300 -91.93978882]
[-447.90731812 -101.27072144]
[-459.48995972 -110.80244446]
[-470.90679932 -120.53211975]
[-482.15447998 -130.45689392]
[-493.22964478 -140.57379150]
[-504.12902832 -150.87983704]
[-514.84942627 -161.37196350]
[-525.38757324 -172.04707336]
[-535.74041748 -182.90200806]
[-545.90490723 -193.93353271]
[-555.87799072 -205.13839722]
[-565.65673828 -216.51325989]
[-575.23822021 -228.05476379]
[-584.61956787 -239.75949097]
[-593.79809570 -251.62396240]
[-602.77105713 -263.64468384]
[-611.53576660 -275.81805420]
[-620.08959961 -288.14053345]
[-628.43005371 -300.60839844]
[-636.55468750 -313.21798706]
[-644.46105957 -325.96554565]
[-652.14678955 -338.84732056]
[-659.60968018 -351.85949707]
[-666.84747314 -364.99819946]
[-673.85803223 -378.25952148]
[-680.63928223 -391.63958740]
[-687.18927002 -405.13436890]
[-693.50592041 -418.73992920]
[-699.58746338 -432.45217896]
[-705.43206787 -446.26708984]
[-711.03796387 -460.18054199]
[-716.40362549 -474.18844604]
[-721.52728271 -488.28665161]
[-726.40753174 -502.47094727]
[-731.04290771 -516.73712158]
[-735.43200684 -531.08099365]
[-739.57360840 -545.49835205]
[-743.46636963 -559.98480225]
[-747.10919189 -574.53613281]
[-750.50103760 -589.14794922]
[-753.64080811 -603.81604004]
[-756.52764893 -618.53601074]
[-759.16070557 -633.30346680]
[-761.53918457 -648.11407471]
[-763.66229248 -662.96343994]
[-765.52954102 -677.84716797]
[-767.14031982 -692.76080322]
[-768.49414062 -707.69995117]
[-769.59057617 -722.66021729]
[-770.42938232 -737.63708496]
[-771.01019287 -752.62622070]
[-771.33294678 -767.62310791]
[-771.39752197 -782.62335205]
[-771.20385742 -797.62249756]
[-770.75207520 -812.61602783]
[-770.04223633 -827.59960938]
[-769.07458496 -842.56872559]
[-767.84936523 -857.51898193]
[-766.36706543 -872.44592285]
[-764.62799072 -887.34515381]
[-762.63275146 -902.21221924]
[-760.38183594 -917.04278564]
[-757.87597656 -931.83233643]
[-755.11596680 -946.57659912]
[-752.10253906 -961.27117920]
[-748.83660889 -975.91168213]
[-745.31915283 -990.49383545]
[-741.55120850 -1005.01324463]
[-737.53387451 -1019.46569824]
[-733.26837158 -1033.84680176]
[-728.75598145 -1048.15234375]
[-723.99798584 -1062.37817383]
[-718.99584961 -1076.51989746]
[-713.75097656 -1090.57348633]
[-708.26501465 -1104.53466797]
[-702.53955078 -1118.39941406]
[-696.57629395 -1132.16345215]
[-690.37695312 -1145.82287598]
[-683.94342041 -1159.37353516]
[-677.27758789 -1172.81152344]
[-670.38140869 -1186.13269043]
[-663.25695801 -1199.33325195]
[-655.90637207 -1212.40917969]
[-648.33172607 -1225.35656738]
[-640.53540039 -1238.17175293]
[-632.51959229 -1250.85083008]
[-624.28674316 -1263.39001465]
[-615.83929443 -1275.78564453]
[-607.17968750 -1288.03393555]
[-598.31054688 -1300.13146973]
[-589.23449707 -1312.07446289]
[-579.95422363 -1323.85949707]
[-570.47241211 -1335.48303223]
[-560.79193115 -1346.94165039]
[-550.91571045 -1358.23193359]
[-540.84655762 -1369.35058594]
[-530.58746338 -1380.29418945]
[-520.14160156 -1391.05969238]
[-509.51193237 -1401.64367676]
[-498.70166016 -1412.04309082]
[-487.71395874 -1422.25500488]
[-476.55212402 -1432.27624512]
[-465.21945190 -1442.10375977]
[-453.71929932 -1451.73486328]
[-442.05505371 -1461.16650391]
[-430.23016357 -1470.39599609]
[-418.24819946 -1479.42065430]
[-406.11264038 -1488.23754883]
[-393.82711792 -1496.84436035]
[-381.39526367 -1505.23840332]
[-368.82073975 -1513.41723633]
[-356.10729980 -1521.37841797]
[-343.25872803 -1529.11950684]
[-330.27880859 -1536.63830566]
[-317.17135620 -1543.93261719]
[-303.94030762 -1551.00024414]
[-290.58956909 -1557.83898926]
[-277.12310791 -1564.44689941]
[-263.54486084 -1570.82202148]
[-249.85890198 -1576.96252441]
[-236.06927490 -1582.86657715]
[-222.18005371 -1588.53234863]
[-208.19537354 -1593.95812988]
[-194.11935425 -1599.14245605]
[-179.95619202 -1604.08374023]
[-165.71008301 -1608.78039551]
[-151.38522339 -1613.23120117]
[-136.98587036 -1617.43481445]
[-122.51630402 -1621.38989258]
[-107.98079681 -1625.09533691]
[-93.38365936 -1628.55004883]
[-78.72921753 -1631.75292969]
[-64.02182007 -1634.70300293]
[-49.26581192 -1637.39965820]
[-34.46557617 -1639.84179688]
[-19.62549782 -1642.02880859]
[-4.74996948 -1643.96008301]
[10.15659809 -1645.63500977]
[25.08978844 -1647.05310059]
[40.04517746 -1648.21398926]
[55.01832962 -1649.11718750]
[70.00481415 -1649.76245117]
[85.00018311 -1650.14978027]
[100.00000000 -1650.27893066]
[114.99981689 -1650.14978027]
[129.99519348 -1649.76245117]
[144.98167419 -1649.11718750]
[159.95481873 -1648.21398926]
[174.91021729 -1647.05310059]
[189.84339905 -1645.63500977]
[204.74996948 -1643.96008301]
[219.62550354 -1642.02880859]
[234.46557617 -1639.84179688]
[249.26580811 -1637.39965820]
[264.02182007 -1634.70300293]
[278.72921753 -1631.75292969]
[293.38366699 -1628.55004883]
[307.98080444 -1625.09533691]
[322.51629639 -1621.38989258]
[336.98587036 -1617.43481445]
[351.38522339 -1613.23120117]
[365.71008301 -1608.78039551]
[379.95620728 -1604.08374023]
[394.11935425 -1599.14245605]
[408.19537354 -1593.95812988]
[422.18005371 -1588.53234863]
[436.06927490 -1582.86657715]
[449.85888672 -1576.96252441]
[463.54486084 -1570.82202148]
[477.12310791 -1564.44689941]
[490.58956909 -1557.83898926]
[503.94030762 -1551.00024414]
[517.17138672 -1543.93261719]
[530.27880859 -1536.63830566]
[543.25872803 -1529.11950684]
[556.10729980 -1521.37841797]
[568.82073975 -1513.41723633]
[581.39526367 -1505.23840332]
[593.82708740 -1496.84436035]
[606.11260986 -1488.23754883]
[618.24816895 -1479.42065430]
[630.23016357 -1470.39599609]
[642.05505371 -1461.16650391]
[653.71929932 -1451.73486328]
[665.21948242 -1442.10375977]
[676.55212402 -1432.27624512]
[687.71398926 -1422.25500488]
[698.70166016 -1412.04309082]
[709.51190186 -1401.64367676]
[720.14160156 -1391.05969238]
[730.58746338 -1380.29418945]
[740.84655762 -1369.35058594]
[750.91571045 -1358.23193359]
[760.79193115 -1346.94165039]
[770.47241211 -1335.48303223]
[779.95422363 -1323.85949707]
[789.23449707 -1312.07446289]
[798.31054688 -1300.13146973]
[807.17968750 -1288.03393555]
[815.83929443 -1275.78564453]
[824.28674316 -1263.39001465]
[832.51959229 -1250.85083008]
[840.53540039 -1238.17175293]
[848.33172607 -1225.35656738]
[855.90637207 -1212.40917969]
[863.25695801 -1199.33325195]
[870.38140869 -1186.13269043]
[877.27758789 -1172.81152344]
[883.94342041 -1159.37353516]
[890.37695312 -1145.82287598]
[896.57629395 -1132.16345215]
[902.53955078 -1118.39941406]
[908.26501465 -1104.53466797]
[913.75097656 -1090.57348633]
[918.99584961 -1076.51989746]
[923.99798584 -1062.37817383]
[928.75598145 -1048.15234375]
[933.26837158 -1033.84680176]
[937.53387451 -1019.46569824]
[941.55120850 -1005.01324463]
[945.31915283 -990.49383545]
[948.83660889 -975.91168213]
[952.10253906 -961.27117920]
[955.11596680 -946.57659912]
[957.87597656 -931.83233643]
[960.38183594 -917.04278564]
[962.63275146 -902.21221924]
[964.62799072 -887.34515381]
[966.36706543 -872.44592285]
[967.84936523 -857.51898193]
[969.07458496 -842.56872559]
[970.04223633 -827.59960938]
[970.75207520 -812.61602783]
[971.20385742 -797.62249756]
[971.39752197 -782.62335205]
[971.33294678 -767.62310791]
[971.01019287 -752.62622070]
[970.42938232 -737.63708496]
[969.59057617 -722.66021729]
[968.49414062 -707.69995117]
[967.14031982 -692.76080322]
[965.52954102 -677.84716797]
[963.66229248 -662.96343994]
[961.53918457 -648.11407471]
[959.16070557 -633.30346680]
[956.52764893 -618.53601074]
[953.64080811 -603.81604004]
[950.50103760 -589.14794922]
[947.10919189 -574.53613281]
[943.46636963 -559.98480225]
[939.57360840 -545.49835205]
[935.43200684 -531.08099365]
[931.04290771 -516.73712158]
[926.40753174 -502.47094727]
[921.52728271 -488.28665161]
[916.40362549 -474.18844604]
[911.03796387 -460.18054199]
[905.43206787 -446.26708984]
[899.58746338 -432.45217896]
[893.50592041 -418.73992920]
[887.18927002 -405.13436890]
[880.63928223 -391.63958740]
[873.85803223 -378.25952148]
[866.84747314 -364.99819946]
[859.60968018 -351.85949707]
[852.14678955 -338.84732056]
[844.46105957 -325.96554565]
[836.55468750 -313.21798706]
[828.43005371 -300.60839844]
[820.08959961 -288.14053345]
[811.53576660 -275.81805420]
[802.77105713 -263.64468384]
[793.79809570 -251.62396240]
[784.61956787 -239.75949097]
[775.23822021 -228.05476379]
[765.65673828 -216.51325989]
[755.87799072 -205.13839722]
[745.90490723 -193.93353271]
[735.74041748 -182.90200806]
[725.38757324 -172.04707336]
[714.84942627 -161.37196350]
[704.12902832 -150.87983704]
[693.22967529 -140.57379150]
[682.15447998 -130.45689392]
[670.90679932 -120.53211975]
[659.48992920 -110.80244446]
[647.90728760 -101.27072144]
[636.16235352 -91.93978882]
[624.25848389 -82.81241608]
[612.19921875 -73.89129639]
[599.98822021 -65.17907715]
[587.62908936 -56.67834473]
[575.12542725 -48.39160919]
[562.48101807 -40.32133484]
[549.69952393 -32.46990967]
[536.78479004 -24.83965874]
[523.74060059 -17.43284416]
[510.57089233 -10.25166130]
[497.27951050 -3.29823709]
[483.87039185 3.42536712]
[470.34753418 9.91715908]
[456.71493530 16.17521667]
[442.97662354 22.19768143]
[429.13668823 27.98277473]
[415.19921875 33.52877808]
[401.16833496 38.83404922]
[387.04824829 43.89701462]
[372.84307861 48.71617508]
[358.55703735 53.29010391]
[344.19442749 57.61744308]
[329.75942993 61.69691467]
[315.25634766 65.52730560]
[300.68948364 69.10748291]
[286.06314087 72.43638611]
[271.38168335 75.51302338]
[256.64944458 78.33649445]
[241.87077332 80.90595245]
[227.05006409 83.22064209]
[212.19171143 85.27986908]
[197.30010986 87.08303070]
[182.37966919 88.62959290]
[167.43482971 89.91909027]
[152.47000122 90.95114899]
[137.48962402 91.72546387]
[122.49814606 92.24179840]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
