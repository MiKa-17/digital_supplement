%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 20:19:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__________________________________________________________________________________________________________________________________GGUCAG_GGC___U_AUA__C_G_U_G__UUUGCCA_C_GGU_AU_GGCUCACG__CUGUUAUG_U__U__CAUGACUAUAAGGCAC_UCAUCAUGCGACC_CCCGUCGUCGAUGGGAAAGUACC\
GAGGU________GUCGGUAAGCCGGGUGUACAAAGUGCCGGAGUAA______________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50186157 92.24108887]
[62.51042557 91.72333527]
[47.53015900 90.94689941]
[32.56552887 89.91201019]
[17.62098885 88.61897278]
[2.70099425 87.06817627]
[-12.19001007 85.26008606]
[-27.04758644 83.19523621]
[-41.86730957 80.87424469]
[-56.64476395 78.29779816]
[-71.37554169 75.46665955]
[-86.05525970 72.38169098]
[-100.67954254 69.04379272]
[-115.24403381 65.45397186]
[-129.74440002 61.61329651]
[-144.17630005 57.52290344]
[-158.53544617 53.18401718]
[-172.81758118 48.59792709]
[-187.01840210 43.76600266]
[-201.13372803 38.68968201]
[-215.15931702 33.37047958]
[-229.09101868 27.80997849]
[-242.92465210 22.00983620]
[-256.65612793 15.97177982]
[-270.28131104 9.69760895]
[-283.79617310 3.18919349]
[-297.19668579 -3.55152798]
[-310.47888184 -10.52254677]
[-323.63873291 -17.72178650]
[-336.67239380 -25.14710045]
[-349.57592773 -32.79627609]
[-362.34552002 -40.66703796]
[-374.97732544 -48.75703812]
[-387.46765137 -57.06386566]
[-399.81271362 -65.58504486]
[-412.00885010 -74.31803894]
[-424.05245972 -83.26025391]
[-435.93991089 -92.40900421]
[-447.66766357 -101.76158142]
[-459.23226929 -111.31520081]
[-470.63021851 -121.06700134]
[-481.85815430 -131.01408386]
[-492.91275024 -141.15348816]
[-503.79064941 -151.48219299]
[-514.48864746 -161.99711609]
[-525.00360107 -172.69512939]
[-535.33233643 -183.57304382]
[-545.47174072 -194.62762451]
[-555.41882324 -205.85556030]
[-565.17059326 -217.25352478]
[-574.72424316 -228.81809998]
[-584.07678223 -240.54586792]
[-593.22558594 -252.43331909]
[-602.16778564 -264.47689819]
[-610.90075684 -276.67303467]
[-619.42199707 -289.01809692]
[-627.72882080 -301.50842285]
[-635.81878662 -314.14022827]
[-643.68957520 -326.90982056]
[-651.33874512 -339.81335449]
[-658.76403809 -352.84701538]
[-665.96331787 -366.00686646]
[-672.93432617 -379.28903198]
[-679.67504883 -392.68954468]
[-686.18347168 -406.20443726]
[-692.45764160 -419.82962036]
[-698.49572754 -433.56109619]
[-704.29583740 -447.39471436]
[-709.85638428 -461.32641602]
[-715.17559814 -475.35198975]
[-720.25189209 -489.46731567]
[-725.08380127 -503.66815186]
[-729.66992188 -517.95025635]
[-734.00878906 -532.30944824]
[-738.09918213 -546.74133301]
[-741.93988037 -561.24169922]
[-745.52972412 -575.80615234]
[-748.86761475 -590.43048096]
[-751.95257568 -605.11016846]
[-754.78375244 -619.84094238]
[-757.36016846 -634.61840820]
[-759.68121338 -649.43811035]
[-761.74603271 -664.29571533]
[-763.55413818 -679.18670654]
[-765.10491943 -694.10668945]
[-766.39794922 -709.05120850]
[-767.43286133 -724.01586914]
[-768.20928955 -738.99615479]
[-768.72705078 -753.98754883]
[-768.98596191 -768.98571777]
[-768.98596191 -783.98608398]
[-768.72705078 -798.98419189]
[-768.20935059 -813.97564697]
[-767.43286133 -828.95593262]
[-766.39801025 -843.92053223]
[-765.10498047 -858.86511230]
[-763.55413818 -873.78509521]
[-761.74609375 -888.67608643]
[-759.68121338 -903.53369141]
[-757.36022949 -918.35339355]
[-754.78375244 -933.13085938]
[-751.95263672 -947.86163330]
[-748.86767578 -962.54132080]
[-745.52978516 -977.16564941]
[-741.93994141 -991.73010254]
[-738.09924316 -1006.23046875]
[-734.00885010 -1020.66235352]
[-729.66998291 -1035.02148438]
[-725.08386230 -1049.30371094]
[-720.25195312 -1063.50451660]
[-715.17565918 -1077.61975098]
[-709.85644531 -1091.64538574]
[-704.29595947 -1105.57714844]
[-698.49578857 -1119.41076660]
[-692.45770264 -1133.14221191]
[-686.18353271 -1146.76733398]
[-679.67517090 -1160.28222656]
[-672.93444824 -1173.68273926]
[-665.96337891 -1186.96496582]
[-658.76416016 -1200.12475586]
[-651.33886719 -1213.15844727]
[-643.68963623 -1226.06201172]
[-635.81890869 -1238.83154297]
[-627.72888184 -1251.46337891]
[-619.42205811 -1263.95373535]
[-610.90087891 -1276.29882812]
[-602.16790771 -1288.49487305]
[-593.22570801 -1300.53857422]
[-584.07690430 -1312.42602539]
[-574.72436523 -1324.15368652]
[-565.17071533 -1335.71826172]
[-555.41894531 -1347.11633301]
[-545.47186279 -1358.34423828]
[-535.33245850 -1369.39880371]
[-525.00372314 -1380.27673340]
[-514.48883057 -1390.97473145]
[-503.79080200 -1401.48962402]
[-492.91287231 -1411.81835938]
[-481.85830688 -1421.95776367]
[-470.63037109 -1431.90490723]
[-459.23239136 -1441.65661621]
[-447.66781616 -1451.21032715]
[-435.94006348 -1460.56286621]
[-424.05261230 -1469.71166992]
[-412.00900269 -1478.65380859]
[-399.81286621 -1487.38684082]
[-387.46780396 -1495.90795898]
[-374.97750854 -1504.21484375]
[-362.34567261 -1512.30480957]
[-349.57608032 -1520.17565918]
[-336.67254639 -1527.82482910]
[-323.63891602 -1535.25012207]
[-310.47903442 -1542.44934082]
[-297.19686890 -1549.42041016]
[-283.79635620 -1556.16113281]
[-270.28149414 -1562.66955566]
[-256.65628052 -1568.94372559]
[-242.92481995 -1574.98168945]
[-229.09118652 -1580.78186035]
[-215.15950012 -1586.34240723]
[-201.13389587 -1591.66162109]
[-187.01858521 -1596.73791504]
[-172.81774902 -1601.56982422]
[-158.53562927 -1606.15588379]
[-144.17648315 -1610.49487305]
[-129.74456787 -1614.58520508]
[-115.24421692 -1618.42590332]
[-100.67972565 -1622.01574707]
[-86.05544281 -1625.35363770]
[-71.37572479 -1628.43859863]
[-56.64494705 -1631.26977539]
[-41.86749268 -1633.84619141]
[-27.04777145 -1636.16723633]
[-12.19019508 -1638.23205566]
[2.70080876 -1640.04016113]
[17.62080383 -1641.59094238]
[32.56534195 -1642.88403320]
[47.52997208 -1643.91882324]
[62.51023865 -1644.69531250]
[77.50167084 -1645.21301270]
[92.49981689 -1645.47192383]
[107.50018311 -1645.47192383]
[122.49832916 -1645.21301270]
[137.48976135 -1644.69531250]
[152.47003174 -1643.91882324]
[167.43466187 -1642.88403320]
[182.37919617 -1641.59094238]
[197.29919434 -1640.04016113]
[212.19020081 -1638.23205566]
[227.04777527 -1636.16723633]
[241.86749268 -1633.84619141]
[256.64495850 -1631.26977539]
[271.37573242 -1628.43859863]
[286.05545044 -1625.35363770]
[300.67971802 -1622.01574707]
[315.24423218 -1618.42590332]
[329.74456787 -1614.58520508]
[344.17648315 -1610.49487305]
[358.53564453 -1606.15588379]
[372.81774902 -1601.56982422]
[387.01858521 -1596.73791504]
[401.13391113 -1591.66162109]
[415.15948486 -1586.34240723]
[429.09118652 -1580.78186035]
[442.92483521 -1574.98168945]
[456.65628052 -1568.94372559]
[470.28149414 -1562.66955566]
[483.79635620 -1556.16113281]
[497.19686890 -1549.42041016]
[510.47903442 -1542.44934082]
[523.63891602 -1535.25012207]
[536.67254639 -1527.82482910]
[549.57611084 -1520.17565918]
[562.34564209 -1512.30480957]
[574.97747803 -1504.21484375]
[587.46777344 -1495.90795898]
[599.81286621 -1487.38684082]
[612.00903320 -1478.65380859]
[624.05261230 -1469.71166992]
[635.94006348 -1460.56286621]
[647.66778564 -1451.21032715]
[659.23242188 -1441.65661621]
[670.63037109 -1431.90490723]
[681.85827637 -1421.95776367]
[692.91290283 -1411.81835938]
[703.79077148 -1401.48962402]
[714.48883057 -1390.97473145]
[725.00372314 -1380.27673340]
[735.33245850 -1369.39880371]
[745.47186279 -1358.34423828]
[755.41894531 -1347.11633301]
[765.17071533 -1335.71826172]
[774.72436523 -1324.15368652]
[784.07690430 -1312.42602539]
[793.22570801 -1300.53857422]
[802.16790771 -1288.49487305]
[810.90087891 -1276.29882812]
[819.42205811 -1263.95373535]
[827.72888184 -1251.46337891]
[835.81890869 -1238.83154297]
[843.68963623 -1226.06201172]
[851.33886719 -1213.15844727]
[858.76416016 -1200.12475586]
[865.96337891 -1186.96496582]
[872.93444824 -1173.68273926]
[879.67517090 -1160.28222656]
[886.18353271 -1146.76733398]
[892.45770264 -1133.14221191]
[898.49578857 -1119.41076660]
[904.29595947 -1105.57714844]
[909.85644531 -1091.64538574]
[915.17565918 -1077.61975098]
[920.25195312 -1063.50451660]
[925.08386230 -1049.30371094]
[929.66998291 -1035.02148438]
[934.00885010 -1020.66235352]
[938.09924316 -1006.23046875]
[941.93994141 -991.73010254]
[945.52978516 -977.16564941]
[948.86767578 -962.54132080]
[951.95263672 -947.86163330]
[954.78375244 -933.13085938]
[957.36022949 -918.35339355]
[959.68121338 -903.53369141]
[961.74609375 -888.67608643]
[963.55413818 -873.78509521]
[965.10498047 -858.86511230]
[966.39801025 -843.92053223]
[967.43286133 -828.95593262]
[968.20935059 -813.97564697]
[968.72705078 -798.98419189]
[968.98596191 -783.98608398]
[968.98596191 -768.98571777]
[968.72705078 -753.98754883]
[968.20928955 -738.99615479]
[967.43286133 -724.01586914]
[966.39794922 -709.05120850]
[965.10491943 -694.10668945]
[963.55413818 -679.18670654]
[961.74603271 -664.29571533]
[959.68121338 -649.43811035]
[957.36016846 -634.61840820]
[954.78375244 -619.84094238]
[951.95257568 -605.11016846]
[948.86761475 -590.43048096]
[945.52972412 -575.80615234]
[941.93988037 -561.24169922]
[938.09918213 -546.74133301]
[934.00878906 -532.30944824]
[929.66992188 -517.95025635]
[925.08380127 -503.66815186]
[920.25189209 -489.46731567]
[915.17559814 -475.35198975]
[909.85638428 -461.32641602]
[904.29583740 -447.39471436]
[898.49572754 -433.56109619]
[892.45764160 -419.82962036]
[886.18347168 -406.20443726]
[879.67504883 -392.68954468]
[872.93432617 -379.28903198]
[865.96331787 -366.00686646]
[858.76403809 -352.84701538]
[851.33874512 -339.81335449]
[843.68957520 -326.90982056]
[835.81878662 -314.14022827]
[827.72882080 -301.50842285]
[819.42199707 -289.01809692]
[810.90075684 -276.67303467]
[802.16778564 -264.47689819]
[793.22558594 -252.43331909]
[784.07678223 -240.54586792]
[774.72424316 -228.81809998]
[765.17059326 -217.25352478]
[755.41882324 -205.85556030]
[745.47174072 -194.62762451]
[735.33233643 -183.57304382]
[725.00360107 -172.69512939]
[714.48864746 -161.99711609]
[703.79064941 -151.48219299]
[692.91271973 -141.15348816]
[681.85815430 -131.01408386]
[670.63024902 -121.06700134]
[659.23223877 -111.31520081]
[647.66766357 -101.76158142]
[635.93988037 -92.40900421]
[624.05242920 -83.26025391]
[612.00885010 -74.31803894]
[599.81274414 -65.58504486]
[587.46765137 -57.06386566]
[574.97735596 -48.75703812]
[562.34552002 -40.66703796]
[549.57592773 -32.79627609]
[536.67236328 -25.14710045]
[523.63873291 -17.72178650]
[510.47888184 -10.52254677]
[497.19668579 -3.55152798]
[483.79617310 3.18919349]
[470.28131104 9.69760895]
[456.65612793 15.97177982]
[442.92465210 22.00983620]
[429.09100342 27.80997849]
[415.15933228 33.37047958]
[401.13372803 38.68968201]
[387.01840210 43.76600266]
[372.81756592 48.59792709]
[358.53546143 53.18401718]
[344.17630005 57.52290344]
[329.74438477 61.61329651]
[315.24404907 65.45397186]
[300.67953491 69.04379272]
[286.05526733 72.38169098]
[271.37554932 75.46665955]
[256.64477539 78.29779816]
[241.86730957 80.87424469]
[227.04759216 83.19523621]
[212.19000244 85.26008606]
[197.29901123 87.06817627]
[182.37901306 88.61897278]
[167.43447876 89.91201019]
[152.46983337 90.94689941]
[137.48957825 91.72333527]
[122.49813843 92.24108887]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
