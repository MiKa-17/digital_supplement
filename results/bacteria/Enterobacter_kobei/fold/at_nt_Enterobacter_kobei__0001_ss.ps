%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 20:07:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_________________________CU__A__ACG______AUC____CC_G_AUGGUGCGUGAUUCGCUAUGUGAAUAGCAUUUUAGACAGGAGAAAACAGAGCUGGCUGCAGCGUCGGCUUAC__AGCAAAAC__U______A________________CC_CGC__C__C_G_GU__UU______________________________\
) } def
/len { sequence length } bind def

/coor [
[57.71261597 518.03564453]
[42.81889343 516.25994873]
[27.99804497 513.95379639]
[13.26894951 511.12011719]
[-1.34961998 507.76254272]
[-15.83903503 503.88531494]
[-30.18083000 499.49340820]
[-44.35673141 494.59240723]
[-58.34867096 489.18853760]
[-72.13881683 483.28872681]
[-85.70960236 476.90048218]
[-99.04372406 470.03192139]
[-112.12419891 462.69180298]
[-124.93434906 454.88952637]
[-137.45785522 446.63494873]
[-149.67877197 437.93865967]
[-161.58149719 428.81173706]
[-173.15087891 419.26577759]
[-184.37216187 409.31295776]
[-195.23106384 398.96597290]
[-205.71374512 388.23797607]
[-215.80683899 377.14270020]
[-225.49748230 365.69421387]
[-234.77333069 353.90716553]
[-243.62255859 341.79653931]
[-252.03388977 329.37780762]
[-259.99661255 316.66674805]
[-267.50054932 303.67956543]
[-274.53619385 290.43283081]
[-281.09454346 276.94342041]
[-287.16723633 263.22854614]
[-292.74655151 249.30563354]
[-297.82537842 235.19245911]
[-302.39721680 220.90701294]
[-306.45626831 206.46748352]
[-309.99737549 191.89227295]
[-313.01596069 177.19996643]
[-315.50827026 162.40927124]
[-317.47103882 147.53906250]
[-318.90182495 132.60824585]
[-319.79876709 117.63589478]
[-320.16073608 102.64106750]
[-319.98730469 87.64286804]
[-319.27862549 72.66042328]
[-318.03567505 57.71281433]
[-316.25997925 42.81909180]
[-313.95382690 27.99824142]
[-311.12017822 13.26914501]
[-307.76257324 -1.34942555]
[-303.88537598 -15.83884239]
[-299.49346924 -30.18063927]
[-294.59246826 -44.35654068]
[-289.18862915 -58.34848404]
[-283.28881836 -72.13863373]
[-276.90057373 -85.70941925]
[-270.03201294 -99.04354858]
[-262.69192505 -112.12402344]
[-254.88961792 -124.93418121]
[-246.63507080 -137.45770264]
[-237.93878174 -149.67860413]
[-228.81185913 -161.58132935]
[-219.26589966 -173.15072632]
[-209.31307983 -184.37202454]
[-198.96609497 -195.23092651]
[-188.23812866 -205.71360779]
[-177.14283752 -215.80670166]
[-165.69438171 -225.49734497]
[-153.90733337 -234.77320862]
[-141.79670715 -243.62243652]
[-129.37796021 -252.03378296]
[-116.66690826 -259.99649048]
[-103.67974091 -267.50045776]
[-90.43301392 -274.53610229]
[-76.94361115 -281.09445190]
[-63.22872162 -287.16717529]
[-49.30582428 -292.74649048]
[-35.19265366 -297.82531738]
[-39.76473999 -312.11154175]
[-44.33682632 -326.39773560]
[-48.90891266 -340.68395996]
[-53.48099899 -354.97018433]
[-68.44702911 -353.35684204]
[-83.43143463 -354.78955078]
[-97.82060242 -359.20956421]
[-111.02531433 -366.43594360]
[-122.50485229 -376.17272949]
[-131.78912354 -388.02124023]
[-138.49794006 -401.49627686]
[-142.35658264 -416.04605103]
[-143.20706177 -431.07473755]
[-141.01452637 -445.96694946]
[-135.86877441 -460.11282349]
[-127.98051453 -472.93313599]
[-117.67276764 -483.90289307]
[-105.36763000 -492.57284546]
[-91.56898499 -498.58801270]
[-76.84188080 -501.70208740]
[-61.78938675 -501.78750610]
[-47.02788925 -498.84078979]
[-33.16186523 -492.98260498]
[-20.75911522 -484.45285034]
[-10.32752991 -473.60083008]
[-2.29427147 -460.87088013]
[3.01170111 -446.78430176]
[5.37311220 -431.91793823]
[4.69326353 -416.88055420]
[0.99999398 -402.28793335]
[-5.55545902 -388.73760986]
[-14.70465374 -376.78451538]
[-26.07293701 -366.91802979]
[-39.19478226 -359.54226685]
[-34.62269592 -345.25604248]
[-30.05060959 -330.96981812]
[-25.47852325 -316.68362427]
[-20.90643692 -302.39739990]
[-6.46690035 -306.45642090]
[8.10831165 -309.99749756]
[22.80062485 -313.01608276]
[37.59132004 -315.50836182]
[52.46154022 -317.47109985]
[67.39234924 -318.90185547]
[82.36470032 -319.79879761]
[97.35953522 -320.16076660]
[112.35772705 -319.98727417]
[127.34017944 -319.27859497]
[142.28778076 -318.03561401]
[157.18150330 -316.25988770]
[172.00234985 -313.95373535]
[186.73144531 -311.12002563]
[201.35000610 -307.76245117]
[215.83941650 -303.88519287]
[230.18121338 -299.49328613]
[244.35710144 -294.59225464]
[258.34902954 -289.18841553]
[272.13919067 -283.28857422]
[285.70996094 -276.90029907]
[299.04406738 -270.03173828]
[312.12454224 -262.69161987]
[324.93469238 -254.88929749]
[337.45819092 -246.63473511]
[349.67907715 -237.93843079]
[361.58181763 -228.81147766]
[373.15118408 -219.26550293]
[384.37246704 -209.31268311]
[395.23135376 -198.96568298]
[405.71401978 -188.23768616]
[415.80709839 -177.14239502]
[425.49774170 -165.69390869]
[434.77355957 -153.90684509]
[443.62277222 -141.79621887]
[452.03411865 -129.37745667]
[459.99682617 -116.66638947]
[467.50076294 -103.67921448]
[474.53637695 -90.43247986]
[481.09472656 -76.94306946]
[487.16738892 -63.22816849]
[492.74670410 -49.30525970]
[497.82550049 -35.19208527]
[502.39733887 -20.90662766]
[506.45639038 -6.46709442]
[509.99746704 8.10811615]
[513.01605225 22.80042839]
[515.50830078 37.59112167]
[517.47106934 52.46134186]
[518.90185547 67.39214325]
[519.79876709 82.36450195]
[520.16076660 97.35933685]
[519.98730469 112.35752869]
[519.27862549 127.33998108]
[518.03564453 142.28758240]
[516.25994873 157.18130493]
[513.95379639 172.00215149]
[511.12008667 186.73124695]
[507.76248169 201.34980774]
[503.88525391 215.83923340]
[499.49334717 230.18101501]
[494.59234619 244.35691833]
[489.18847656 258.34884644]
[483.28866577 272.13900757]
[476.90039062 285.70977783]
[470.03182983 299.04391479]
[462.69171143 312.12435913]
[454.88940430 324.93450928]
[446.63485718 337.45803833]
[437.93853760 349.67892456]
[428.81161499 361.58166504]
[419.26562500 373.15103149]
[409.31280518 384.37231445]
[398.96582031 395.23120117]
[388.23785400 405.71389771]
[377.14254761 415.80697632]
[365.69406128 425.49761963]
[353.90701294 434.77343750]
[341.79638672 443.62268066]
[329.37762451 452.03399658]
[316.66656494 459.99670410]
[303.67938232 467.50067139]
[290.43264771 474.53628540]
[276.94323730 481.09463501]
[263.22836304 487.16732788]
[249.30545044 492.74661255]
[235.19227600 497.82543945]
[220.90681458 502.39727783]
[206.46728516 506.45632935]
[191.89207458 509.99740601]
[177.19976807 513.01599121]
[162.40907288 515.50830078]
[147.53884888 517.47106934]
[132.60804749 518.90185547]
[117.63569641 519.79876709]
[102.64086914 520.16076660]
[87.64266968 519.98730469]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[77 115]
[78 114]
[79 113]
[80 112]
[81 111]
] def

init

% Start Annotations
77 115 0.16 0.6 colorpair
78 114 0.16 1 colorpair
79 113 0.16 0.2 colorpair
80 112 0.0 0.2 colorpair
81 111 0.48 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
77 115 1 gmark
77 cmark
115 cmark
114 cmark
79 113 2 gmark
79 cmark
113 cmark
80 112 2 gmark
81 cmark
111 cmark

% End Annotations
showpage
end
%%EOF
