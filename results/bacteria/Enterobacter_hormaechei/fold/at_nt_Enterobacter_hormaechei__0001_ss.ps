%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 19:47:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
C___G_U________U_UU__U__U_UGU__GACG_U__UGAUCUUCACCU_GAUGACUCGCGACUCGCUGUGUGAGUUGCGCUUGAGGCACGGAAAGCGGGAGGUGGCGGCAAUGUUGGCUUACGA_AGCA___G___G_UAGC___UA____GGCGG_G_CG__UUCCCCGCCU_CUC_UG___GG___________UGGUGA_GCCU____AA_GCACCC_U_U__________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50438690 92.10236359]
[62.52458954 91.30736542]
[47.57112503 90.11554718]
[32.65451050 88.52777100]
[17.78522491 86.54512787]
[2.97372246 84.16902924]
[-11.76958942 81.40113831]
[-26.43434906 78.24340057]
[-41.01025009 74.69803619]
[-55.48704529 70.76753998]
[-69.85456085 66.45466614]
[-84.10270691 61.76245117]
[-98.22145844 56.69419098]
[-112.20090485 51.25344849]
[-126.03120422 45.44404984]
[-139.70265198 39.27007294]
[-153.20564270 32.73586273]
[-166.53067017 25.84600639]
[-179.66838074 18.60535049]
[-192.60952759 11.01897907]
[-205.34503174 3.09222770]
[-217.86593628 -5.16933441]
[-230.16343689 -13.75990009]
[-242.22891235 -22.67343140]
[-254.05384827 -31.90366554]
[-265.62994385 -41.44411469]
[-276.94909668 -51.28807449]
[-288.00332642 -61.42862320]
[-298.78485107 -71.85863495]
[-309.28610229 -82.57078552]
[-319.49969482 -93.55754089]
[-329.41848755 -104.81117249]
[-339.03546143 -116.32378387]
[-348.34387207 -128.08728027]
[-357.33718872 -140.09339905]
[-366.00909424 -152.33367920]
[-374.35345459 -164.79954529]
[-382.36447144 -177.48222351]
[-390.03646851 -190.37280273]
[-397.36404419 -203.46221924]
[-404.34207153 -216.74128723]
[-410.96566772 -230.20065308]
[-417.23013306 -243.83087158]
[-423.13107300 -257.62237549]
[-428.66436768 -271.56542969]
[-433.82611084 -285.65029907]
[-438.61267090 -299.86700439]
[-443.02069092 -314.20562744]
[-447.04705811 -328.65603638]
[-450.68899536 -343.20812988]
[-453.94384766 -357.85162354]
[-456.80941772 -372.57626343]
[-459.28366089 -387.37170410]
[-461.36480713 -402.22750854]
[-463.05145264 -417.13327026]
[-464.34234619 -432.07849121]
[-465.23663330 -447.05270386]
[-465.73367310 -462.04534912]
[-465.83309937 -477.04589844]
[-465.53485107 -492.04382324]
[-464.83914185 -507.02856445]
[-463.74645996 -521.98962402]
[-462.25756836 -536.91638184]
[-460.37353516 -551.79852295]
[-458.09564209 -566.62542725]
[-455.42553711 -581.38677979]
[-452.36505127 -596.07214355]
[-448.91635132 -610.67120361]
[-445.08187866 -625.17370605]
[-440.86431885 -639.56951904]
[-436.26663208 -653.84844971]
[-431.29205322 -668.00048828]
[-425.94409180 -682.01568604]
[-420.22647095 -695.88415527]
[-414.14324951 -709.59625244]
[-407.69866943 -723.14221191]
[-400.89727783 -736.51263428]
[-393.74383545 -749.69805908]
[-386.24340820 -762.68914795]
[-378.40124512 -775.47692871]
[-370.22283936 -788.05230713]
[-361.71395874 -800.40649414]
[-352.88058472 -812.53076172]
[-343.72891235 -824.41662598]
[-334.26541138 -836.05572510]
[-324.49667358 -847.43981934]
[-314.42959595 -858.56103516]
[-304.07128906 -869.41143799]
[-293.42895508 -879.98345947]
[-282.51013184 -890.26965332]
[-271.32247925 -900.26275635]
[-259.87387085 -909.95581055]
[-248.17231750 -919.34204102]
[-236.22607422 -928.41467285]
[-224.04351807 -937.16754150]
[-211.63322449 -945.59436035]
[-199.00392151 -953.68920898]
[-186.16447449 -961.44647217]
[-173.12390137 -968.86065674]
[-159.89137268 -975.92651367]
[-146.47619629 -982.63916016]
[-132.88778687 -988.99383545]
[-119.13571167 -994.98608398]
[-105.22962189 -1000.61163330]
[-91.17929840 -1005.86657715]
[-76.99460602 -1010.74731445]
[-62.68552017 -1015.25024414]
[-48.26209641 -1019.37231445]
[-33.73447800 -1023.11059570]
[-19.11286545 -1026.46240234]
[-4.40753984 -1029.42553711]
[10.37116432 -1031.99780273]
[25.21286011 -1034.17736816]
[40.10711670 -1035.96264648]
[55.04346848 -1037.35266113]
[70.01141357 -1038.34606934]
[85.00043488 -1038.94250488]
[100.00000000 -1039.14135742]
[114.99956512 -1038.94250488]
[129.98858643 -1038.34606934]
[144.95652771 -1037.35266113]
[159.89288330 -1035.96264648]
[174.78713989 -1034.17736816]
[189.62882996 -1031.99780273]
[204.40754700 -1029.42553711]
[219.11286926 -1026.46240234]
[233.73448181 -1023.11059570]
[248.26210022 -1019.37231445]
[262.68551636 -1015.25024414]
[276.99459839 -1010.74731445]
[291.17929077 -1005.86657715]
[305.22961426 -1000.61163330]
[319.13571167 -994.98608398]
[332.88778687 -988.99383545]
[346.47619629 -982.63916016]
[359.89138794 -975.92651367]
[373.12390137 -968.86065674]
[386.16445923 -961.44647217]
[399.00393677 -953.68920898]
[411.63323975 -945.59436035]
[424.04351807 -937.16754150]
[436.22607422 -928.41467285]
[448.17230225 -919.34204102]
[459.87387085 -909.95581055]
[471.32247925 -900.26275635]
[482.51013184 -890.26965332]
[493.42895508 -879.98345947]
[504.07128906 -869.41143799]
[514.42962646 -858.56103516]
[524.49664307 -847.43981934]
[534.26538086 -836.05572510]
[543.72894287 -824.41662598]
[552.88055420 -812.53076172]
[561.71392822 -800.40649414]
[570.22283936 -788.05230713]
[578.40124512 -775.47692871]
[586.24340820 -762.68914795]
[593.74383545 -749.69805908]
[600.89727783 -736.51263428]
[607.69866943 -723.14221191]
[614.14324951 -709.59625244]
[620.22650146 -695.88415527]
[625.94409180 -682.01568604]
[631.29205322 -668.00048828]
[636.26666260 -653.84844971]
[640.86431885 -639.56951904]
[645.08190918 -625.17370605]
[648.91638184 -610.67120361]
[652.36505127 -596.07214355]
[655.42553711 -581.38677979]
[658.09564209 -566.62542725]
[660.37353516 -551.79852295]
[662.25756836 -536.91638184]
[663.74645996 -521.98962402]
[664.83917236 -507.02856445]
[665.53485107 -492.04382324]
[665.83312988 -477.04589844]
[665.73370361 -462.04534912]
[665.23663330 -447.05270386]
[664.34234619 -432.07849121]
[663.05145264 -417.13327026]
[661.36480713 -402.22750854]
[659.28363037 -387.37170410]
[656.80944824 -372.57626343]
[653.94384766 -357.85162354]
[650.68896484 -343.20812988]
[647.04705811 -328.65603638]
[643.02069092 -314.20562744]
[638.61267090 -299.86700439]
[633.82611084 -285.65029907]
[628.66436768 -271.56542969]
[623.13110352 -257.62237549]
[617.23010254 -243.83087158]
[610.96563721 -230.20065308]
[604.34210205 -216.74128723]
[597.36401367 -203.46221924]
[590.03643799 -190.37280273]
[582.36444092 -177.48222351]
[574.35345459 -164.79954529]
[566.00909424 -152.33367920]
[557.33715820 -140.09339905]
[548.34387207 -128.08728027]
[539.03546143 -116.32378387]
[529.41845703 -104.81117249]
[519.49969482 -93.55754089]
[509.28610229 -82.57078552]
[498.78485107 -71.85863495]
[488.00332642 -61.42862320]
[476.94909668 -51.28807449]
[465.62994385 -41.44411469]
[454.05383301 -31.90366554]
[442.22891235 -22.67343140]
[430.16345215 -13.75990009]
[417.86593628 -5.16933441]
[405.34503174 3.09222770]
[392.60952759 11.01897907]
[379.66836548 18.60535049]
[366.53067017 25.84600639]
[353.20562744 32.73586273]
[339.70266724 39.27007294]
[326.03121948 45.44404984]
[312.20089722 51.25344849]
[298.22146606 56.69419098]
[284.10269165 61.76245117]
[269.85455322 66.45466614]
[255.48704529 70.76753998]
[241.01025391 74.69803619]
[226.43434143 78.24340057]
[211.76959229 81.40113831]
[197.02627563 84.16902924]
[182.21476746 86.54512787]
[167.34548950 88.52777100]
[152.42887878 90.11554718]
[137.47541809 91.30736542]
[122.49561310 92.10236359]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
