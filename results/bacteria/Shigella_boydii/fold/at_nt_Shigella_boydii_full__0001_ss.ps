%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 23:17:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
____________________________________________________________________________________________GGG_______GCUUAAGAUUAA_C_____CUCCAUUAUGAUG_UCACGCUA_______ACCCGCACAUCGU____GUAAGGC__C_C_CUCU_____CUCG______________________________________________________________\
____________________________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50291443 92.17613983]
[62.51631165 91.52857208]
[47.54718399 90.55759430]
[32.60251236 89.26365662]
[17.68925667 87.64736938]
[2.81437492 85.70947266]
[-12.01520061 83.45088959]
[-26.79255676 80.87265015]
[-41.51080322 77.97597504]
[-56.16308212 74.76220703]
[-70.74256134 71.23284912]
[-85.24243927 67.38953400]
[-99.65596008 63.23406982]
[-113.97640991 58.76838303]
[-128.19709778 53.99455643]
[-142.31141663 48.91481781]
[-156.31275940 43.53153610]
[-170.19462585 37.84721756]
[-183.95053101 31.86451721]
[-197.57405090 25.58621979]
[-211.05885315 19.01525307]
[-224.39865112 12.15468121]
[-237.58721924 5.00770140]
[-250.61840820 -2.42235351]
[-263.48614502 -10.13202000]
[-276.18441772 -18.11770439]
[-288.70733643 -26.37568474]
[-301.04904175 -34.90210724]
[-313.20376587 -43.69300461]
[-325.16589355 -52.74427032]
[-336.92977905 -62.05168915]
[-348.49002075 -71.61092377]
[-359.84115601 -81.41751099]
[-370.97790527 -91.46688843]
[-381.89511108 -101.75436401]
[-392.58767700 -112.27514648]
[-403.05059814 -123.02433014]
[-413.27899170 -133.99690247]
[-423.26812744 -145.18774414]
[-433.01330566 -156.59164429]
[-442.51000977 -168.20329285]
[-451.75378418 -180.01725769]
[-460.74035645 -192.02804565]
[-469.46551514 -204.23005676]
[-477.92520142 -216.61759949]
[-486.11547852 -229.18489075]
[-494.03250122 -241.92610168]
[-501.67260742 -254.83525085]
[-509.03222656 -267.90634155]
[-516.10791016 -281.13330078]
[-522.89642334 -294.50991821]
[-529.39447021 -308.02999878]
[-535.59918213 -321.68722534]
[-541.50750732 -335.47521973]
[-547.11682129 -349.38754272]
[-552.42449951 -363.41775513]
[-557.42797852 -377.55926514]
[-562.12493896 -391.80551147]
[-566.51330566 -406.14987183]
[-570.59094238 -420.58560181]
[-574.35589600 -435.10601807]
[-577.80651855 -449.70431519]
[-580.94116211 -464.37374878]
[-583.75836182 -479.10739136]
[-586.25677490 -493.89846802]
[-588.43530273 -508.74002075]
[-590.29290771 -523.62512207]
[-591.82867432 -538.54687500]
[-593.04193115 -553.49835205]
[-593.93212891 -568.47247314]
[-594.49877930 -583.46234131]
[-594.74169922 -598.46099854]
[-594.66070557 -613.46136475]
[-594.25592041 -628.45648193]
[-593.52746582 -643.43933105]
[-592.47570801 -658.40301514]
[-591.10107422 -673.34051514]
[-589.40429688 -688.24481201]
[-587.38616943 -703.10900879]
[-585.04754639 -717.92614746]
[-582.38958740 -732.68939209]
[-579.41351318 -747.39178467]
[-576.12066650 -762.02648926]
[-572.51269531 -776.58673096]
[-568.59112549 -791.06567383]
[-564.35791016 -805.45654297]
[-559.81500244 -819.75268555]
[-554.96447754 -833.94738770]
[-549.80865479 -848.03405762]
[-544.34985352 -862.00616455]
[-538.59069824 -875.85711670]
[-532.53381348 -889.58050537]
[-526.18206787 -903.16998291]
[-519.53839111 -916.61907959]
[-512.60589600 -929.92169189]
[-505.38784790 -943.07147217]
[-497.88754272 -956.06237793]
[-490.10855103 -968.88830566]
[-482.05441284 -981.54327393]
[-473.72897339 -994.02142334]
[-465.13604736 -1006.31689453]
[-456.27966309 -1018.42401123]
[-447.16397095 -1030.33715820]
[-437.79318237 -1042.05053711]
[-428.17166138 -1053.55908203]
[-418.30395508 -1064.85705566]
[-408.19461060 -1075.93945312]
[-397.84835815 -1086.80090332]
[-387.26998901 -1097.43652344]
[-376.46450806 -1107.84130859]
[-365.43685913 -1118.01037598]
[-354.19226074 -1127.93884277]
[-342.73593140 -1137.62231445]
[-331.07318115 -1147.05627441]
[-319.20950317 -1156.23608398]
[-307.15036011 -1165.15771484]
[-294.90142822 -1173.81689453]
[-282.46841431 -1182.20959473]
[-269.85708618 -1190.33190918]
[-257.07333374 -1198.18005371]
[-244.12312317 -1205.75036621]
[-231.01248169 -1213.03930664]
[-217.74752808 -1220.04345703]
[-204.33445740 -1226.75964355]
[-190.77949524 -1233.18469238]
[-177.08898926 -1239.31555176]
[-163.26930237 -1245.14941406]
[-149.32688904 -1250.68347168]
[-135.26823425 -1255.91528320]
[-121.09991455 -1260.84240723]
[-106.82851410 -1265.46240234]
[-92.46069336 -1269.77331543]
[-78.00315094 -1273.77294922]
[-63.46263123 -1277.45947266]
[-48.84590149 -1280.83117676]
[-34.15978622 -1283.88659668]
[-19.41112518 -1286.62426758]
[-4.60679770 -1289.04284668]
[10.24629593 -1291.14123535]
[25.14123154 -1292.91833496]
[40.07106400 -1294.37353516]
[55.02883530 -1295.50610352]
[70.00756836 -1296.31542969]
[85.00028992 -1296.80114746]
[100.00000000 -1296.96313477]
[114.99971008 -1296.80114746]
[129.99243164 -1296.31542969]
[144.97116089 -1295.50610352]
[159.92893982 -1294.37353516]
[174.85876465 -1292.91833496]
[189.75370789 -1291.14123535]
[204.60679626 -1289.04284668]
[219.41113281 -1286.62426758]
[234.15979004 -1283.88659668]
[248.84590149 -1280.83117676]
[263.46261597 -1277.45947266]
[278.00314331 -1273.77294922]
[292.46069336 -1269.77331543]
[306.82852173 -1265.46240234]
[321.09991455 -1260.84240723]
[335.26824951 -1255.91528320]
[349.32690430 -1250.68347168]
[363.26931763 -1245.14941406]
[377.08898926 -1239.31555176]
[390.77951050 -1233.18469238]
[404.33444214 -1226.75964355]
[417.74752808 -1220.04345703]
[431.01248169 -1213.03930664]
[444.12310791 -1205.75036621]
[457.07333374 -1198.18005371]
[469.85708618 -1190.33190918]
[482.46841431 -1182.20959473]
[494.90142822 -1173.81689453]
[507.15036011 -1165.15771484]
[519.20947266 -1156.23608398]
[531.07318115 -1147.05627441]
[542.73590088 -1137.62231445]
[554.19226074 -1127.93884277]
[565.43688965 -1118.01037598]
[576.46447754 -1107.84130859]
[587.27001953 -1097.43652344]
[597.84832764 -1086.80090332]
[608.19458008 -1075.93945312]
[618.30395508 -1064.85705566]
[628.17169189 -1053.55908203]
[637.79315186 -1042.05053711]
[647.16394043 -1030.33715820]
[656.27966309 -1018.42401123]
[665.13604736 -1006.31689453]
[673.72894287 -994.02142334]
[682.05444336 -981.54327393]
[690.10852051 -968.88830566]
[697.88757324 -956.06237793]
[705.38787842 -943.07147217]
[712.60589600 -929.92169189]
[719.53839111 -916.61907959]
[726.18206787 -903.16998291]
[732.53381348 -889.58050537]
[738.59069824 -875.85711670]
[744.34985352 -862.00616455]
[749.80865479 -848.03405762]
[754.96447754 -833.94738770]
[759.81500244 -819.75268555]
[764.35791016 -805.45654297]
[768.59112549 -791.06567383]
[772.51269531 -776.58673096]
[776.12066650 -762.02648926]
[779.41351318 -747.39178467]
[782.38958740 -732.68939209]
[785.04754639 -717.92614746]
[787.38616943 -703.10900879]
[789.40429688 -688.24481201]
[791.10107422 -673.34051514]
[792.47570801 -658.40301514]
[793.52746582 -643.43933105]
[794.25592041 -628.45648193]
[794.66070557 -613.46136475]
[794.74169922 -598.46099854]
[794.49877930 -583.46234131]
[793.93212891 -568.47247314]
[793.04193115 -553.49835205]
[791.82867432 -538.54687500]
[790.29290771 -523.62512207]
[788.43530273 -508.74002075]
[786.25677490 -493.89846802]
[783.75836182 -479.10739136]
[780.94116211 -464.37374878]
[777.80651855 -449.70431519]
[774.35589600 -435.10601807]
[770.59094238 -420.58560181]
[766.51330566 -406.14987183]
[762.12493896 -391.80551147]
[757.42797852 -377.55926514]
[752.42449951 -363.41775513]
[747.11682129 -349.38754272]
[741.50750732 -335.47521973]
[735.59918213 -321.68722534]
[729.39447021 -308.02999878]
[722.89642334 -294.50991821]
[716.10791016 -281.13330078]
[709.03222656 -267.90634155]
[701.67260742 -254.83525085]
[694.03253174 -241.92610168]
[686.11547852 -229.18489075]
[677.92523193 -216.61759949]
[669.46551514 -204.23005676]
[660.74035645 -192.02804565]
[651.75378418 -180.01725769]
[642.51000977 -168.20329285]
[633.01330566 -156.59164429]
[623.26812744 -145.18774414]
[613.27899170 -133.99690247]
[603.05059814 -123.02433014]
[592.58764648 -112.27514648]
[581.89514160 -101.75436401]
[570.97790527 -91.46688843]
[559.84112549 -81.41751099]
[548.48999023 -71.61092377]
[536.92980957 -62.05168915]
[525.16589355 -52.74427032]
[513.20379639 -43.69300461]
[501.04904175 -34.90210724]
[488.70733643 -26.37568474]
[476.18441772 -18.11770439]
[463.48614502 -10.13202000]
[450.61840820 -2.42235351]
[437.58721924 5.00770140]
[424.39865112 12.15468121]
[411.05886841 19.01525307]
[397.57406616 25.58621979]
[383.95053101 31.86451721]
[370.19461060 37.84721756]
[356.31277466 43.53153610]
[342.31140137 48.91481781]
[328.19711304 53.99455643]
[313.97640991 58.76838303]
[299.65597534 63.23406982]
[285.24243164 67.38953400]
[270.74255371 71.23284912]
[256.16308594 74.76220703]
[241.51080322 77.97597504]
[226.79255676 80.87265015]
[212.01519775 83.45088959]
[197.18562317 85.70947266]
[182.31074524 87.64736938]
[167.39749146 89.26365662]
[152.45281982 90.55759430]
[137.48368835 91.52857208]
[122.49708557 92.17613983]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
