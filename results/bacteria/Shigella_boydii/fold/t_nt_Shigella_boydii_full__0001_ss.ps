%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 23:17:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
________________________________________________________AUGACGCUCGC_GAG_U_GCCAUG_UU________AUGAUUAAGCUCCUCCU____CA_______UGCUGG_A___U_U____CAGUG__________UGAUUGUUAGCUGGUUUCCUAACCGAAUA____A___________________________________________________________________\
_______________________________________________________________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50183868 92.24250031]
[62.51031113 91.72757721]
[47.52983093 90.95538330]
[32.56481552 89.92613983]
[17.61967087 88.64015198]
[2.69880486 87.09780121]
[-12.19338608 85.29954529]
[-27.05251312 83.24590302]
[-41.87419510 80.93749237]
[-56.65406799 78.37498474]
[-71.38777924 75.55914307]
[-86.07097626 72.49078369]
[-100.69933319 69.17082977]
[-115.26854706 65.60024261]
[-129.77432251 61.78008652]
[-144.21238708 57.71147919]
[-158.57847595 53.39562607]
[-172.86834717 48.83379364]
[-187.07781982 44.02732849]
[-201.20268250 38.97764587]
[-215.23878479 33.68623734]
[-229.18197632 28.15466118]
[-243.02816772 22.38454437]
[-256.77325439 16.37759018]
[-270.41320801 10.13556862]
[-283.94400024 3.66031909]
[-297.36163330 -3.04625058]
[-310.66217041 -9.98216343]
[-323.84167480 -17.14537621]
[-336.89627075 -24.53377724]
[-349.82211304 -32.14518738]
[-362.61541748 -39.97736740]
[-375.27233887 -48.02800751]
[-387.78924561 -56.29473114]
[-400.16235352 -64.77510834]
[-412.38809204 -73.46663666]
[-424.46282959 -82.36675262]
[-436.38296509 -91.47283936]
[-448.14508057 -100.78221130]
[-459.74560547 -110.29212189]
[-471.18121338 -119.99977112]
[-482.44845581 -129.90229797]
[-493.54406738 -139.99678040]
[-504.46475220 -150.28024292]
[-515.20727539 -160.74966431]
[-525.76855469 -171.40194702]
[-536.14538574 -182.23396301]
[-546.33471680 -193.24250793]
[-556.33361816 -204.42434692]
[-566.13903809 -215.77618408]
[-575.74816895 -227.29467773]
[-585.15820312 -238.97642517]
[-594.36627197 -250.81797791]
[-603.36968994 -262.81585693]
[-612.16583252 -274.96652222]
[-620.75213623 -287.26641846]
[-629.12597656 -299.71188354]
[-637.28497314 -312.29925537]
[-645.22668457 -325.02484131]
[-652.94873047 -337.88485718]
[-660.44891357 -350.87554932]
[-667.72503662 -363.99310303]
[-674.77484131 -377.23361206]
[-681.59631348 -390.59317017]
[-688.18750000 -404.06790161]
[-694.54638672 -417.65374756]
[-700.67108154 -431.34677124]
[-706.55987549 -445.14291382]
[-712.21087646 -459.03811646]
[-717.62261963 -473.02828979]
[-722.79333496 -487.10928345]
[-727.72161865 -501.27697754]
[-732.40594482 -515.52716064]
[-736.84490967 -529.85571289]
[-741.03735352 -544.25830078]
[-744.98187256 -558.73071289]
[-748.67736816 -573.26873779]
[-752.12280273 -587.86810303]
[-755.31707764 -602.52441406]
[-758.25927734 -617.23339844]
[-760.94854736 -631.99072266]
[-763.38409424 -646.79205322]
[-765.56518555 -661.63299561]
[-767.49121094 -676.50921631]
[-769.16162109 -691.41632080]
[-770.57580566 -706.34985352]
[-771.73352051 -721.30548096]
[-772.63427734 -736.27874756]
[-773.27783203 -751.26531982]
[-773.66406250 -766.26074219]
[-773.79284668 -781.26055908]
[-773.66406250 -796.26037598]
[-773.27783203 -811.25573730]
[-772.63427734 -826.24230957]
[-771.73352051 -841.21563721]
[-770.57586670 -856.17126465]
[-769.16162109 -871.10479736]
[-767.49127197 -886.01190186]
[-765.56524658 -900.88806152]
[-763.38415527 -915.72906494]
[-760.94854736 -930.53033447]
[-758.25927734 -945.28771973]
[-755.31707764 -959.99670410]
[-752.12280273 -974.65301514]
[-748.67742920 -989.25231934]
[-744.98193359 -1003.79034424]
[-741.03735352 -1018.26281738]
[-736.84497070 -1032.66540527]
[-732.40600586 -1046.99389648]
[-727.72167969 -1061.24414062]
[-722.79339600 -1075.41186523]
[-717.62268066 -1089.49279785]
[-712.21099854 -1103.48303223]
[-706.55993652 -1117.37817383]
[-700.67114258 -1131.17431641]
[-694.54644775 -1144.86730957]
[-688.18756104 -1158.45324707]
[-681.59643555 -1171.92797852]
[-674.77490234 -1185.28747559]
[-667.72509766 -1198.52795410]
[-660.44903564 -1211.64550781]
[-652.94885254 -1224.63623047]
[-645.22674561 -1237.49633789]
[-637.28503418 -1250.22192383]
[-629.12609863 -1262.80920410]
[-620.75219727 -1275.25476074]
[-612.16595459 -1287.55456543]
[-603.36981201 -1299.70532227]
[-594.36633301 -1311.70312500]
[-585.15826416 -1323.54467773]
[-575.74829102 -1335.22644043]
[-566.13916016 -1346.74499512]
[-556.33374023 -1358.09680176]
[-546.33483887 -1369.27868652]
[-536.14550781 -1380.28723145]
[-525.76867676 -1391.11914062]
[-515.20745850 -1401.77148438]
[-504.46487427 -1412.24096680]
[-493.54418945 -1422.52441406]
[-482.44860840 -1432.61889648]
[-471.18133545 -1442.52136230]
[-459.74575806 -1452.22900391]
[-448.14520264 -1461.73889160]
[-436.38311768 -1471.04833984]
[-424.46295166 -1480.15441895]
[-412.38824463 -1489.05456543]
[-400.16250610 -1497.74609375]
[-387.78939819 -1506.22644043]
[-375.27252197 -1514.49316406]
[-362.61557007 -1522.54382324]
[-349.82229614 -1530.37597656]
[-336.89645386 -1537.98742676]
[-323.84182739 -1545.37585449]
[-310.66232300 -1552.53906250]
[-297.36178589 -1559.47497559]
[-283.94415283 -1566.18151855]
[-270.41339111 -1572.65673828]
[-256.77343750 -1578.89880371]
[-243.02833557 -1584.90576172]
[-229.18214417 -1590.67590332]
[-215.23895264 -1596.20739746]
[-201.20286560 -1601.49890137]
[-187.07798767 -1606.54858398]
[-172.86853027 -1611.35498047]
[-158.57864380 -1615.91687012]
[-144.21255493 -1620.23266602]
[-129.77450562 -1624.30126953]
[-115.26873016 -1628.12145996]
[-100.69951630 -1631.69201660]
[-86.07115173 -1635.01196289]
[-71.38795471 -1638.08032227]
[-56.65425110 -1640.89624023]
[-41.87437820 -1643.45874023]
[-27.05269623 -1645.76721191]
[-12.19356918 -1647.82080078]
[2.69862127 -1649.61901855]
[17.61948776 -1651.16137695]
[32.56462860 -1652.44738770]
[47.52964783 -1653.47668457]
[62.51012802 -1654.24890137]
[77.50165558 -1654.76379395]
[92.49981689 -1655.02124023]
[107.50018311 -1655.02124023]
[122.49834442 -1654.76379395]
[137.48986816 -1654.24890137]
[152.47035217 -1653.47668457]
[167.43536377 -1652.44738770]
[182.38050842 -1651.16137695]
[197.30137634 -1649.61901855]
[212.19357300 -1647.82080078]
[227.05268860 -1645.76721191]
[241.87437439 -1643.45874023]
[256.65426636 -1640.89624023]
[271.38796997 -1638.08032227]
[286.07116699 -1635.01196289]
[300.69952393 -1631.69201660]
[315.26873779 -1628.12145996]
[329.77450562 -1624.30126953]
[344.21255493 -1620.23266602]
[358.57864380 -1615.91687012]
[372.86853027 -1611.35498047]
[387.07800293 -1606.54858398]
[401.20285034 -1601.49890137]
[415.23895264 -1596.20739746]
[429.18215942 -1590.67590332]
[443.02832031 -1584.90576172]
[456.77343750 -1578.89880371]
[470.41339111 -1572.65673828]
[483.94415283 -1566.18151855]
[497.36178589 -1559.47497559]
[510.66232300 -1552.53906250]
[523.84185791 -1545.37585449]
[536.89642334 -1537.98742676]
[549.82226562 -1530.37597656]
[562.61553955 -1522.54382324]
[575.27252197 -1514.49316406]
[587.78936768 -1506.22644043]
[600.16253662 -1497.74609375]
[612.38824463 -1489.05456543]
[624.46295166 -1480.15441895]
[636.38311768 -1471.04833984]
[648.14520264 -1461.73889160]
[659.74572754 -1452.22900391]
[671.18133545 -1442.52136230]
[682.44860840 -1432.61889648]
[693.54418945 -1422.52441406]
[704.46490479 -1412.24096680]
[715.20745850 -1401.77148438]
[725.76867676 -1391.11914062]
[736.14550781 -1380.28723145]
[746.33483887 -1369.27868652]
[756.33374023 -1358.09680176]
[766.13916016 -1346.74499512]
[775.74829102 -1335.22644043]
[785.15826416 -1323.54467773]
[794.36633301 -1311.70312500]
[803.36981201 -1299.70532227]
[812.16595459 -1287.55456543]
[820.75219727 -1275.25476074]
[829.12609863 -1262.80920410]
[837.28503418 -1250.22192383]
[845.22674561 -1237.49633789]
[852.94885254 -1224.63623047]
[860.44903564 -1211.64550781]
[867.72509766 -1198.52795410]
[874.77490234 -1185.28747559]
[881.59643555 -1171.92797852]
[888.18756104 -1158.45324707]
[894.54644775 -1144.86730957]
[900.67114258 -1131.17431641]
[906.55993652 -1117.37817383]
[912.21099854 -1103.48303223]
[917.62268066 -1089.49279785]
[922.79339600 -1075.41186523]
[927.72167969 -1061.24414062]
[932.40600586 -1046.99389648]
[936.84497070 -1032.66540527]
[941.03735352 -1018.26281738]
[944.98193359 -1003.79034424]
[948.67742920 -989.25231934]
[952.12280273 -974.65301514]
[955.31707764 -959.99670410]
[958.25927734 -945.28771973]
[960.94854736 -930.53033447]
[963.38415527 -915.72906494]
[965.56524658 -900.88806152]
[967.49127197 -886.01190186]
[969.16162109 -871.10479736]
[970.57586670 -856.17126465]
[971.73352051 -841.21563721]
[972.63427734 -826.24230957]
[973.27783203 -811.25573730]
[973.66406250 -796.26037598]
[973.79284668 -781.26055908]
[973.66406250 -766.26074219]
[973.27783203 -751.26531982]
[972.63427734 -736.27874756]
[971.73352051 -721.30548096]
[970.57580566 -706.34985352]
[969.16162109 -691.41632080]
[967.49121094 -676.50921631]
[965.56518555 -661.63299561]
[963.38409424 -646.79205322]
[960.94854736 -631.99072266]
[958.25927734 -617.23339844]
[955.31707764 -602.52441406]
[952.12280273 -587.86810303]
[948.67736816 -573.26873779]
[944.98187256 -558.73071289]
[941.03735352 -544.25830078]
[936.84490967 -529.85571289]
[932.40594482 -515.52716064]
[927.72161865 -501.27697754]
[922.79333496 -487.10928345]
[917.62261963 -473.02828979]
[912.21087646 -459.03811646]
[906.55987549 -445.14291382]
[900.67108154 -431.34677124]
[894.54638672 -417.65374756]
[888.18750000 -404.06790161]
[881.59631348 -390.59317017]
[874.77484131 -377.23361206]
[867.72503662 -363.99310303]
[860.44891357 -350.87554932]
[852.94873047 -337.88485718]
[845.22668457 -325.02484131]
[837.28497314 -312.29925537]
[829.12597656 -299.71188354]
[820.75213623 -287.26641846]
[812.16583252 -274.96652222]
[803.36968994 -262.81585693]
[794.36627197 -250.81797791]
[785.15820312 -238.97642517]
[775.74816895 -227.29467773]
[766.13903809 -215.77618408]
[756.33361816 -204.42434692]
[746.33471680 -193.24250793]
[736.14538574 -182.23396301]
[725.76855469 -171.40194702]
[715.20727539 -160.74966431]
[704.46478271 -150.28024292]
[693.54406738 -139.99678040]
[682.44848633 -129.90229797]
[671.18121338 -119.99977112]
[659.74560547 -110.29212189]
[648.14508057 -100.78221130]
[636.38299561 -91.47283936]
[624.46282959 -82.36675262]
[612.38806152 -73.46663666]
[600.16235352 -64.77510834]
[587.78924561 -56.29473114]
[575.27233887 -48.02800751]
[562.61541748 -39.97736740]
[549.82214355 -32.14518738]
[536.89630127 -24.53377724]
[523.84167480 -17.14537621]
[510.66217041 -9.98216343]
[497.36163330 -3.04625058]
[483.94400024 3.66031909]
[470.41320801 10.13556862]
[456.77325439 16.37759018]
[443.02816772 22.38454437]
[429.18197632 28.15466118]
[415.23876953 33.68623734]
[401.20269775 38.97764587]
[387.07781982 44.02732849]
[372.86834717 48.83379364]
[358.57846069 53.39562607]
[344.21237183 57.71147919]
[329.77432251 61.78008652]
[315.26855469 65.60024261]
[300.69934082 69.17082977]
[286.07098389 72.49078369]
[271.38778687 75.55914307]
[256.65408325 78.37498474]
[241.87419128 80.93749237]
[227.05250549 83.24590302]
[212.19338989 85.29954529]
[197.30119324 87.09780121]
[182.38032532 88.64015198]
[167.43518066 89.92613983]
[152.47016907 90.95538330]
[137.48968506 91.72757721]
[122.49816132 92.24250031]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
