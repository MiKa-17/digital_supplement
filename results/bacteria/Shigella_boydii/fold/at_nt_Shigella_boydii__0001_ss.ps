%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 23:17:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_________________________________________________________________U_____G_GAUUAA_UCU_G_UGAGGUUCAAG_U____________A_AU_AACCACC_GUGAUGCAUUGUCAGAUUACAAC_CCGU_____________ACCGUGCGGGGGUUUU_CUCCC____U_C_____________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50379181 92.13043213]
[62.52124023 91.39150238]
[47.56144333 90.28366852]
[32.63348007 88.80759430]
[17.74641418 86.96418762]
[2.90928555 84.75455475]
[-11.86890030 82.18005371]
[-26.57917023 79.24222565]
[-41.21259308 75.94287109]
[-55.76028824 72.28398895]
[-70.21342468 68.26779938]
[-84.56321716 63.89673996]
[-98.80097198 59.17346573]
[-112.91802979 54.10084152]
[-126.90582275 48.68194580]
[-140.75587463 42.92007828]
[-154.45974731 36.81872559]
[-168.00915527 30.38159561]
[-181.39584351 23.61259842]
[-194.61169434 16.51584053]
[-207.64869690 9.09563351]
[-220.49893188 1.35647976]
[-233.15458679 -6.69692183]
[-245.60798645 -15.05968189]
[-257.85156250 -23.72672272]
[-269.87789917 -32.69278336]
[-281.67965698 -41.95242310]
[-293.24972534 -51.50001526]
[-304.58105469 -61.32976532]
[-315.66674805 -71.43570709]
[-326.50009155 -81.81170654]
[-337.07452393 -92.45146179]
[-347.38360596 -103.34851837]
[-357.42108154 -114.49624634]
[-367.18084717 -125.88789368]
[-376.65701294 -137.51654053]
[-385.84378052 -149.37512207]
[-394.73559570 -161.45645142]
[-403.32708740 -173.75317383]
[-411.61297607 -186.25784302]
[-419.58828735 -198.96286011]
[-427.24813843 -211.86050415]
[-434.58792114 -224.94296265]
[-441.60314941 -238.20228577]
[-448.28955078 -251.63040161]
[-454.64309692 -265.21920776]
[-460.65994263 -278.96038818]
[-466.33639526 -292.84567261]
[-471.66903687 -306.86657715]
[-476.65463257 -321.01461792]
[-481.29013062 -335.28118896]
[-485.57272339 -349.65762329]
[-489.49981689 -364.13522339]
[-493.06903076 -378.70516968]
[-496.27819824 -393.35864258]
[-499.12536621 -408.08673096]
[-501.60879517 -422.88049316]
[-503.72698975 -437.73095703]
[-505.47869873 -452.62908936]
[-506.86279297 -467.56585693]
[-507.87847900 -482.53219604]
[-508.52511597 -497.51901245]
[-508.80230713 -512.51721191]
[-508.70989990 -527.51770020]
[-508.24795532 -542.51135254]
[-507.41674805 -557.48907471]
[-506.21676636 -572.44171143]
[-504.64877319 -587.36035156]
[-502.71368408 -602.23571777]
[-500.41271973 -617.05895996]
[-497.74722290 -631.82104492]
[-494.71881104 -646.51293945]
[-491.32937622 -661.12573242]
[-487.58096313 -675.65063477]
[-483.47579956 -690.07873535]
[-479.01641846 -704.40136719]
[-474.20553589 -718.60974121]
[-469.04605103 -732.69525146]
[-463.54107666 -746.64941406]
[-457.69400024 -760.46368408]
[-451.50836182 -774.12976074]
[-444.98788452 -787.63922119]
[-438.13653564 -800.98394775]
[-430.95849609 -814.15582275]
[-423.45812988 -827.14691162]
[-415.63995361 -839.94921875]
[-407.50875854 -852.55499268]
[-399.06942749 -864.95666504]
[-390.32711792 -877.14660645]
[-381.28713989 -889.11749268]
[-371.95498657 -900.86199951]
[-362.33630371 -912.37298584]
[-352.43692017 -923.64355469]
[-342.26287842 -934.66680908]
[-331.82034302 -945.43603516]
[-321.11566162 -955.94470215]
[-310.15530396 -966.18646240]
[-298.94595337 -976.15509033]
[-287.49438477 -985.84448242]
[-275.80758667 -995.24884033]
[-263.89263916 -1004.36236572]
[-251.75677490 -1013.17962646]
[-239.40734863 -1021.69512939]
[-226.85188293 -1029.90393066]
[-214.09797668 -1037.80078125]
[-201.15338135 -1045.38098145]
[-188.02597046 -1052.64001465]
[-174.72367859 -1059.57348633]
[-161.25462341 -1066.17700195]
[-147.62695312 -1072.44677734]
[-133.84895325 -1078.37878418]
[-119.92897034 -1083.96960449]
[-105.87548065 -1089.21582031]
[-91.69700623 -1094.11413574]
[-77.40215302 -1098.66162109]
[-62.99959183 -1102.85559082]
[-48.49808121 -1106.69348145]
[-33.90641785 -1110.17285156]
[-19.23345757 -1113.29174805]
[-4.48811197 -1116.04809570]
[10.32066727 -1118.44030762]
[25.18389130 -1120.46704102]
[40.09253693 -1122.12683105]
[55.03754807 -1123.41894531]
[70.00985718 -1124.34240723]
[85.00037384 -1124.89672852]
[100.00000000 -1125.08154297]
[114.99962616 -1124.89672852]
[129.99014282 -1124.34240723]
[144.96244812 -1123.41894531]
[159.90747070 -1122.12683105]
[174.81611633 -1120.46704102]
[189.67933655 -1118.44030762]
[204.48811340 -1116.04809570]
[219.23345947 -1113.29174805]
[233.90641785 -1110.17285156]
[248.49807739 -1106.69348145]
[262.99960327 -1102.85559082]
[277.40216064 -1098.66162109]
[291.69699097 -1094.11413574]
[305.87548828 -1089.21582031]
[319.92898560 -1083.96960449]
[333.84893799 -1078.37878418]
[347.62695312 -1072.44677734]
[361.25460815 -1066.17700195]
[374.72369385 -1059.57348633]
[388.02597046 -1052.64001465]
[401.15338135 -1045.38098145]
[414.09799194 -1037.80078125]
[426.85186768 -1029.90393066]
[439.40734863 -1021.69512939]
[451.75677490 -1013.17962646]
[463.89263916 -1004.36236572]
[475.80758667 -995.24884033]
[487.49438477 -985.84448242]
[498.94595337 -976.15509033]
[510.15530396 -966.18646240]
[521.11566162 -955.94470215]
[531.82037354 -945.43603516]
[542.26287842 -934.66680908]
[552.43695068 -923.64355469]
[562.33630371 -912.37298584]
[571.95501709 -900.86199951]
[581.28717041 -889.11749268]
[590.32714844 -877.14660645]
[599.06945801 -864.95666504]
[607.50872803 -852.55499268]
[615.63995361 -839.94921875]
[623.45812988 -827.14691162]
[630.95849609 -814.15582275]
[638.13653564 -800.98394775]
[644.98785400 -787.63922119]
[651.50836182 -774.12976074]
[657.69403076 -760.46368408]
[663.54107666 -746.64941406]
[669.04602051 -732.69525146]
[674.20556641 -718.60974121]
[679.01641846 -704.40136719]
[683.47583008 -690.07873535]
[687.58093262 -675.65063477]
[691.32940674 -661.12573242]
[694.71881104 -646.51293945]
[697.74719238 -631.82104492]
[700.41271973 -617.05895996]
[702.71368408 -602.23571777]
[704.64880371 -587.36035156]
[706.21679688 -572.44171143]
[707.41674805 -557.48907471]
[708.24798584 -542.51135254]
[708.70989990 -527.51770020]
[708.80230713 -512.51721191]
[708.52508545 -497.51901245]
[707.87847900 -482.53219604]
[706.86279297 -467.56585693]
[705.47869873 -452.62908936]
[703.72698975 -437.73095703]
[701.60882568 -422.88049316]
[699.12536621 -408.08673096]
[696.27819824 -393.35864258]
[693.06903076 -378.70516968]
[689.49981689 -364.13522339]
[685.57269287 -349.65762329]
[681.29010010 -335.28118896]
[676.65460205 -321.01461792]
[671.66906738 -306.86657715]
[666.33642578 -292.84567261]
[660.65997314 -278.96038818]
[654.64312744 -265.21920776]
[648.28955078 -251.63040161]
[641.60314941 -238.20228577]
[634.58789062 -224.94296265]
[627.24810791 -211.86050415]
[619.58825684 -198.96286011]
[611.61297607 -186.25784302]
[603.32708740 -173.75317383]
[594.73559570 -161.45645142]
[585.84381104 -149.37512207]
[576.65698242 -137.51654053]
[567.18084717 -125.88789368]
[557.42108154 -114.49624634]
[547.38360596 -103.34851837]
[537.07452393 -92.45146179]
[526.50012207 -81.81170654]
[515.66674805 -71.43570709]
[504.58105469 -61.32976532]
[493.24972534 -51.50001526]
[481.67965698 -41.95242310]
[469.87789917 -32.69278336]
[457.85156250 -23.72672272]
[445.60797119 -15.05968189]
[433.15457153 -6.69692183]
[420.49893188 1.35647976]
[407.64871216 9.09563351]
[394.61169434 16.51584053]
[381.39584351 23.61259842]
[368.00915527 30.38159561]
[354.45974731 36.81872559]
[340.75585938 42.92007828]
[326.90582275 48.68194580]
[312.91802979 54.10084152]
[298.80096436 59.17346573]
[284.56323242 63.89673996]
[270.21340942 68.26779938]
[255.76028442 72.28398895]
[241.21260071 75.94287109]
[226.57917786 79.24222565]
[211.86889648 82.18005371]
[197.09071350 84.75455475]
[182.25358582 86.96418762]
[167.36651611 88.80759430]
[152.43855286 90.28366852]
[137.47875977 91.39150238]
[122.49620819 92.13043213]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
