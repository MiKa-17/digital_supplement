%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 17:10:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__CAAAAGGCC____AAACUCACGUUGACCAGAAAAAUUG______AUAGCACAAGGUUAAUUGAAAAAUAACUCAG_ACGUGAGUCACUCUGCCAAUCACG_ACCAAACAAGACAAAAAGCAGCAAGCACC________________________\
) } def
/len { sequence length } bind def

/coor [
[71.77634430 236.17343140]
[60.56312180 233.35858154]
[49.62244797 229.62207031]
[39.02994156 224.98973083]
[28.85881042 219.49356079]
[19.17934418 213.17155457]
[10.05843925 206.06741333]
[1.55913281 198.23020935]
[-9.61477852 208.23739624]
[-20.78869057 218.24458313]
[-31.96260071 228.25177002]
[-43.13651276 238.25894165]
[-44.79040909 243.32810974]
[-47.93239594 246.86984253]
[-51.71582413 248.57092285]
[-55.29411316 248.50653076]
[-67.04827118 257.82531738]
[-78.80242920 267.14410400]
[-78.01605225 282.64123535]
[-86.51702881 295.62249756]
[-101.03656769 301.09631348]
[-115.99160767 296.95788574]
[-125.63162231 284.79855347]
[-126.24983978 269.29379272]
[-117.60854340 256.40551758]
[-103.03047943 251.08953857]
[-88.12121582 255.38993835]
[-76.36705780 246.07115173]
[-64.61289978 236.75236511]
[-53.14369583 227.08503723]
[-41.96978378 217.07785034]
[-30.79587173 207.07066345]
[-19.62196159 197.06349182]
[-8.44804955 187.05630493]
[-16.08610344 176.57542419]
[-22.71461296 165.42861938]
[-28.27593231 153.71279907]
[-32.72169876 141.52986145]
[-36.01325226 128.98577881]
[-38.12196350 116.18959808]
[-39.02949142 103.25263977]
[-38.72795105 90.28739166]
[-37.21996307 77.40660858]
[-34.51863861 64.72230530]
[-30.64746857 52.34479904]
[-25.64012337 40.38172531]
[-19.54014778 28.93712234]
[-32.00175858 20.58797836]
[-44.46337128 12.23883247]
[-56.92498398 3.88968778]
[-69.38659668 -4.45945692]
[-81.84820557 -12.80860233]
[-98.37239838 -16.60167313]
[-99.30191803 -33.53012085]
[-83.29235077 -39.10956955]
[-73.49906158 -25.27021408]
[-61.03745270 -16.92107010]
[-48.57584000 -8.57192421]
[-36.11422729 -0.22277944]
[-23.65261459 8.12636566]
[-11.19100285 16.47550964]
[3.47272491 -0.11126127]
[20.58283234 -14.16082096]
[39.70568466 -25.31709671]
[60.35662842 -33.29734802]
[82.01229095 -37.89931870]
[104.12383270 -39.00637817]
[126.13085938 -36.59047318]
[147.47563171 -30.71282959]
[167.61718750 -21.52240944]
[186.04504395 -9.25213432]
[202.29219055 5.78701878]
[213.85754395 -3.76508713]
[225.42289734 -13.31719303]
[236.98823547 -22.86929893]
[248.55358887 -32.42140579]
[260.02279663 -42.08874130]
[264.52124023 -50.10448074]
[271.72149658 -51.94952393]
[283.28683472 -61.50162888]
[294.85217285 -71.05373383]
[306.41754150 -80.60584259]
[317.98287964 -90.15794373]
[329.54821777 -99.71005249]
[341.11358643 -109.26216125]
[340.28985596 -124.64486694]
[348.58493042 -137.41377258]
[362.64196777 -142.78625488]
[376.99530029 -138.89775085]
[388.56063843 -148.44985962]
[400.12597656 -158.00196838]
[411.69134521 -167.55406189]
[423.25668335 -177.10617065]
[434.82202148 -186.65827942]
[446.38739014 -196.21038818]
[457.95272827 -205.76249695]
[456.85641479 -221.24078369]
[465.09597778 -234.38954163]
[479.50308228 -240.15278625]
[494.53790283 -236.31442261]
[504.41931152 -224.35040283]
[505.34762573 -208.86111450]
[496.96594238 -195.80252075]
[482.49716187 -190.19590759]
[467.50482178 -194.19714355]
[455.93948364 -184.64503479]
[444.37414551 -175.09292603]
[432.80877686 -165.54083252]
[421.24343872 -155.98872375]
[409.67810059 -146.43661499]
[398.11273193 -136.88450623]
[386.54739380 -127.33240509]
[387.65374756 -112.50290680]
[379.72192383 -99.71424103]
[365.61563110 -93.98130798]
[350.66567993 -97.69680786]
[339.10034180 -88.14470673]
[327.53497314 -78.59259796]
[315.96963501 -69.04048920]
[304.40429688 -59.48838806]
[292.83892822 -49.93627930]
[281.27359009 -40.38417435]
[269.80438232 -30.71683693]
[266.76721191 -23.93278313]
[258.10568237 -20.85605621]
[246.54034424 -11.30395126]
[234.97500610 -1.75184524]
[223.40965271 7.80026054]
[211.84429932 17.35236740]
[218.32264709 26.92790413]
[223.98324585 37.00844955]
[228.78697205 47.52434158]
[232.70063782 58.40289688]
[235.69720459 69.56893921]
[237.75593567 80.94528961]
[238.86262512 92.45333862]
[239.00961304 104.01353455]
[238.19587708 115.54599762]
[236.42706299 126.97101593]
[233.71537781 138.20964050]
[230.07957458 149.18418884]
[225.54476929 159.81881714]
[220.14230347 170.04002380]
[213.90953064 179.77719116]
[206.88949585 188.96299744]
[199.13075256 197.53396606]
[190.68688965 205.43086243]
[181.61628723 212.59912109]
[171.98161316 218.98918152]
[161.84947205 224.55690002]
[151.28987122 229.26379395]
[140.37580872 233.07731628]
[129.18270874 235.97113037]
[117.78791046 237.92523193]
[106.27018738 238.92611694]
[94.70912170 238.96685791]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 34]
[9 33]
[10 32]
[11 31]
[12 30]
[16 29]
[17 28]
[18 27]
[47 61]
[48 60]
[49 59]
[50 58]
[51 57]
[52 56]
[72 129]
[73 128]
[74 127]
[75 126]
[76 125]
[77 123]
[79 122]
[80 121]
[81 120]
[82 119]
[83 118]
[84 117]
[85 116]
[89 112]
[90 111]
[91 110]
[92 109]
[93 108]
[94 107]
[95 106]
[96 105]
] def

init

% Start Annotations
8 34 0.16 1 colorpair
9 33 0.0 0.2 colorpair
10 32 0.0 1 colorpair
11 31 0.0 0.2 colorpair
12 30 0.0 0.2 colorpair
16 29 0.0 0.2 colorpair
17 28 0.16 1 colorpair
18 27 0.0 0.2 colorpair
47 61 0.0 0.2 colorpair
48 60 0.0 1 colorpair
49 59 0.16 1 colorpair
50 58 0.0 0.2 colorpair
51 57 0.0 0.2 colorpair
52 56 0.16 1 colorpair
72 129 0.0 0.2 colorpair
73 128 0.0 1 colorpair
74 127 0.0 1 colorpair
75 126 0.0 0.2 colorpair
76 125 0.0 0.2 colorpair
77 123 0.16 1 colorpair
79 122 0.0 0.2 colorpair
80 121 0.0 1 colorpair
81 120 0.16 1 colorpair
82 119 0.0 1 colorpair
83 118 0.16 1 colorpair
84 117 0.0 0.2 colorpair
85 116 0.0 0.2 colorpair
89 112 0.0 0.2 colorpair
90 111 0.0 1 colorpair
91 110 0.0 0.2 colorpair
92 109 0.0 0.2 colorpair
93 108 0.0 0.2 colorpair
94 107 0.16 1 colorpair
95 106 0.0 0.2 colorpair
96 105 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
8 cmark
34 cmark
9 33 2 gmark
11 31 2 gmark
12 30 2 gmark
16 29 2 gmark
17 cmark
28 cmark
18 27 2 gmark
47 61 2 gmark
49 cmark
50 58 2 gmark
51 57 2 gmark
52 cmark
56 cmark
72 129 2 gmark
75 126 2 gmark
76 125 2 gmark
77 cmark
123 cmark
79 122 2 gmark
81 cmark
120 cmark
83 cmark
118 cmark
84 117 2 gmark
85 116 2 gmark
89 112 2 gmark
91 110 2 gmark
92 109 2 gmark
93 108 2 gmark
94 cmark
107 cmark
95 106 2 gmark
96 105 2 gmark

% End Annotations
showpage
end
%%EOF
