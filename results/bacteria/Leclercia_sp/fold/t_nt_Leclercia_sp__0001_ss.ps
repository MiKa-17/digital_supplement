%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 06:50:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
________________________________________________________CGAAAGGGGCUAUACUG___GAUAUGCGAAGCAGUUAGGAGAUUACACUGG__UCCAUGCAUUCAUUA__UUCGAGGCUUGUCGCUUA__CUGAAACGC_______AACA_CC_GAAC_AA_______AUCGGCAUGAGAUAAAAAGCCUCAAG_GCC_________________________________________\
______________________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50233459 92.21002197]
[62.51307678 91.63016510]
[47.53783035 90.76065063]
[32.58219147 89.60179901]
[17.65175056 88.15405273]
[2.75208735 86.41793823]
[-12.11122990 84.39411926]
[-26.93264580 82.08334351]
[-41.70662308 79.48648071]
[-56.42763519 76.60449219]
[-71.09017944 73.43846130]
[-85.68878937 69.98957062]
[-100.21798706 66.25910950]
[-114.67235565 62.24847412]
[-129.04649353 57.95915985]
[-143.33502197 53.39276886]
[-157.53260803 48.55101395]
[-171.63394165 43.43569565]
[-185.63375854 38.04873276]
[-199.52680969 32.39213943]
[-213.30792236 26.46802330]
[-226.97192383 20.27860451]
[-240.51373291 13.82619286]
[-253.92826843 7.11320210]
[-267.21054077 0.14214012]
[-280.35552979 -7.08438730]
[-293.35839844 -14.56367970]
[-306.21423340 -22.29294205]
[-318.91824341 -30.26928329]
[-331.46569824 -38.48972321]
[-343.85189819 -46.95119095]
[-356.07217407 -55.65052414]
[-368.12200928 -64.58447266]
[-379.99691772 -73.74969482]
[-391.69238281 -83.14276123]
[-403.20410156 -92.76016998]
[-414.52774048 -102.59832001]
[-425.65908813 -112.65353394]
[-436.59396362 -122.92205811]
[-447.32827759 -133.40005493]
[-457.85803223 -144.08360291]
[-468.17929077 -154.96871948]
[-478.28820801 -166.05131531]
[-488.18096924 -177.32727051]
[-497.85391235 -188.79235840]
[-507.30340576 -200.44230652]
[-516.52587891 -212.27275085]
[-525.51800537 -224.27926636]
[-534.27630615 -236.45736694]
[-542.79754639 -248.80252075]
[-551.07855225 -261.31008911]
[-559.11621094 -273.97540283]
[-566.90747070 -286.79373169]
[-574.44952393 -299.76028442]
[-581.73956299 -312.87020874]
[-588.77471924 -326.11859131]
[-595.55249023 -339.50054932]
[-602.07025146 -353.01098633]
[-608.32568359 -366.64492798]
[-614.31634521 -380.39724731]
[-620.03997803 -394.26278687]
[-625.49456787 -408.23638916]
[-630.67797852 -422.31283569]
[-635.58831787 -436.48684692]
[-640.22369385 -450.75314331]
[-644.58245850 -465.10638428]
[-648.66290283 -479.54119873]
[-652.46356201 -494.05221558]
[-655.98297119 -508.63397217]
[-659.21984863 -523.28106689]
[-662.17297363 -537.98797607]
[-664.84118652 -552.74920654]
[-667.22357178 -567.55926514]
[-669.31921387 -582.41265869]
[-671.12731934 -597.30371094]
[-672.64721680 -612.22698975]
[-673.87835693 -627.17687988]
[-674.82025146 -642.14770508]
[-675.47253418 -657.13403320]
[-675.83502197 -672.13012695]
[-675.90753174 -687.13037109]
[-675.69006348 -702.12927246]
[-675.18261719 -717.12115479]
[-674.38549805 -732.10046387]
[-673.29895020 -747.06152344]
[-671.92340088 -761.99877930]
[-670.25927734 -776.90667725]
[-668.30731201 -791.77960205]
[-666.06823730 -806.61199951]
[-663.54278564 -821.39831543]
[-660.73199463 -836.13311768]
[-657.63684082 -850.81079102]
[-654.25854492 -865.42590332]
[-650.59838867 -879.97296143]
[-646.65765381 -894.44653320]
[-642.43786621 -908.84124756]
[-637.94055176 -923.15167236]
[-633.16748047 -937.37249756]
[-628.12036133 -951.49841309]
[-622.80114746 -965.52404785]
[-617.21173096 -979.44427490]
[-611.35430908 -993.25390625]
[-605.23101807 -1006.94763184]
[-598.84411621 -1020.52044678]
[-592.19604492 -1033.96728516]
[-585.28924561 -1047.28308105]
[-578.12634277 -1060.46289062]
[-570.70996094 -1073.50170898]
[-563.04296875 -1086.39477539]
[-555.12811279 -1099.13720703]
[-546.96838379 -1111.72424316]
[-538.56689453 -1124.15112305]
[-529.92669678 -1136.41333008]
[-521.05108643 -1148.50622559]
[-511.94338989 -1160.42529297]
[-502.60696411 -1172.16601562]
[-493.04528809 -1183.72412109]
[-483.26199341 -1195.09509277]
[-473.26068115 -1206.27490234]
[-463.04513550 -1217.25927734]
[-452.61914062 -1228.04418945]
[-441.98660278 -1238.62536621]
[-431.15148926 -1248.99914551]
[-420.11788940 -1259.16149902]
[-408.88986206 -1269.10864258]
[-397.47164917 -1278.83691406]
[-385.86752319 -1288.34252930]
[-374.08178711 -1297.62219238]
[-362.11886597 -1306.67211914]
[-349.98324585 -1315.48925781]
[-337.67944336 -1324.07006836]
[-325.21203613 -1332.41137695]
[-312.58572388 -1340.51013184]
[-299.80520630 -1348.36328125]
[-286.87524414 -1355.96801758]
[-273.80068970 -1363.32116699]
[-260.58645630 -1370.42041016]
[-247.23744202 -1377.26269531]
[-233.75863647 -1383.84570312]
[-220.15509033 -1390.16699219]
[-206.43190002 -1396.22399902]
[-192.59417725 -1402.01464844]
[-178.64709473 -1407.53662109]
[-164.59585571 -1412.78808594]
[-150.44573975 -1417.76684570]
[-136.20202637 -1422.47106934]
[-121.87001801 -1426.89916992]
[-107.45509338 -1431.04931641]
[-92.96263123 -1434.92004395]
[-78.39804840 -1438.50988770]
[-63.76678848 -1441.81750488]
[-49.07432175 -1444.84167480]
[-34.32614136 -1447.58129883]
[-19.52775383 -1450.03515625]
[-4.68469477 -1452.20263672]
[10.19749069 -1454.08264160]
[25.11323929 -1455.67468262]
[40.05697632 -1456.97802734]
[55.02312088 -1457.99230957]
[70.00607300 -1458.71704102]
[85.00022888 -1459.15197754]
[100.00000000 -1459.29699707]
[114.99977112 -1459.15197754]
[129.99392700 -1458.71704102]
[144.97688293 -1457.99230957]
[159.94302368 -1456.97802734]
[174.88676453 -1455.67468262]
[189.80250549 -1454.08264160]
[204.68469238 -1452.20263672]
[219.52775574 -1450.03515625]
[234.32614136 -1447.58129883]
[249.07432556 -1444.84167480]
[263.76678467 -1441.81750488]
[278.39804077 -1438.50988770]
[292.96261597 -1434.92004395]
[307.45507812 -1431.04931641]
[321.87002563 -1426.89916992]
[336.20202637 -1422.47106934]
[350.44573975 -1417.76684570]
[364.59585571 -1412.78808594]
[378.64709473 -1407.53662109]
[392.59417725 -1402.01464844]
[406.43188477 -1396.22399902]
[420.15509033 -1390.16699219]
[433.75863647 -1383.84570312]
[447.23742676 -1377.26269531]
[460.58645630 -1370.42041016]
[473.80068970 -1363.32116699]
[486.87524414 -1355.96801758]
[499.80520630 -1348.36328125]
[512.58569336 -1340.51013184]
[525.21203613 -1332.41137695]
[537.67944336 -1324.07006836]
[549.98321533 -1315.48925781]
[562.11889648 -1306.67211914]
[574.08178711 -1297.62219238]
[585.86755371 -1288.34252930]
[597.47167969 -1278.83691406]
[608.88989258 -1269.10864258]
[620.11785889 -1259.16149902]
[631.15148926 -1248.99914551]
[641.98657227 -1238.62536621]
[652.61914062 -1228.04418945]
[663.04510498 -1217.25927734]
[673.26068115 -1206.27490234]
[683.26196289 -1195.09509277]
[693.04528809 -1183.72412109]
[702.60693359 -1172.16601562]
[711.94335938 -1160.42529297]
[721.05108643 -1148.50622559]
[729.92669678 -1136.41333008]
[738.56689453 -1124.15112305]
[746.96838379 -1111.72424316]
[755.12811279 -1099.13720703]
[763.04296875 -1086.39477539]
[770.70996094 -1073.50170898]
[778.12634277 -1060.46289062]
[785.28924561 -1047.28308105]
[792.19604492 -1033.96728516]
[798.84411621 -1020.52044678]
[805.23101807 -1006.94763184]
[811.35430908 -993.25390625]
[817.21173096 -979.44427490]
[822.80114746 -965.52404785]
[828.12036133 -951.49841309]
[833.16748047 -937.37249756]
[837.94055176 -923.15167236]
[842.43786621 -908.84124756]
[846.65765381 -894.44653320]
[850.59838867 -879.97296143]
[854.25854492 -865.42590332]
[857.63684082 -850.81079102]
[860.73199463 -836.13311768]
[863.54278564 -821.39831543]
[866.06823730 -806.61199951]
[868.30731201 -791.77960205]
[870.25927734 -776.90667725]
[871.92340088 -761.99877930]
[873.29895020 -747.06152344]
[874.38549805 -732.10046387]
[875.18261719 -717.12115479]
[875.69006348 -702.12927246]
[875.90753174 -687.13037109]
[875.83502197 -672.13012695]
[875.47253418 -657.13403320]
[874.82025146 -642.14770508]
[873.87835693 -627.17687988]
[872.64721680 -612.22698975]
[871.12731934 -597.30371094]
[869.31921387 -582.41265869]
[867.22357178 -567.55926514]
[864.84118652 -552.74920654]
[862.17297363 -537.98797607]
[859.21984863 -523.28106689]
[855.98297119 -508.63397217]
[852.46356201 -494.05221558]
[848.66290283 -479.54119873]
[844.58245850 -465.10638428]
[840.22369385 -450.75314331]
[835.58831787 -436.48684692]
[830.67797852 -422.31283569]
[825.49456787 -408.23638916]
[820.03997803 -394.26278687]
[814.31634521 -380.39724731]
[808.32568359 -366.64492798]
[802.07025146 -353.01098633]
[795.55249023 -339.50054932]
[788.77471924 -326.11859131]
[781.73956299 -312.87020874]
[774.44952393 -299.76028442]
[766.90747070 -286.79373169]
[759.11621094 -273.97540283]
[751.07855225 -261.31008911]
[742.79754639 -248.80252075]
[734.27630615 -236.45736694]
[725.51800537 -224.27926636]
[716.52587891 -212.27275085]
[707.30340576 -200.44230652]
[697.85388184 -188.79235840]
[688.18096924 -177.32727051]
[678.28820801 -166.05131531]
[668.17932129 -154.96871948]
[657.85803223 -144.08360291]
[647.32824707 -133.40005493]
[636.59393311 -122.92205811]
[625.65905762 -112.65353394]
[614.52777100 -102.59832001]
[603.20410156 -92.76016998]
[591.69238281 -83.14276123]
[579.99688721 -73.74969482]
[568.12200928 -64.58447266]
[556.07220459 -55.65052414]
[543.85186768 -46.95119095]
[531.46569824 -38.48972321]
[518.91827393 -30.26928329]
[506.21423340 -22.29294205]
[493.35839844 -14.56367970]
[480.35552979 -7.08438730]
[467.21054077 0.14214012]
[453.92828369 7.11320210]
[440.51373291 13.82619286]
[426.97192383 20.27860451]
[413.30792236 26.46802330]
[399.52682495 32.39213943]
[385.63375854 38.04873276]
[371.63394165 43.43569565]
[357.53262329 48.55101395]
[343.33502197 53.39276886]
[329.04650879 57.95915985]
[314.67236328 62.24847412]
[300.21798706 66.25910950]
[285.68878174 69.98957062]
[271.09017944 73.43846130]
[256.42764282 76.60449219]
[241.70661926 79.48648071]
[226.93264771 82.08334351]
[212.11123657 84.39411926]
[197.24790955 86.41793823]
[182.34825134 88.15405273]
[167.41780090 89.60179901]
[152.46217346 90.76065063]
[137.48692322 91.63016510]
[122.49766541 92.21002197]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
