%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 06:50:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_________________________________________________________________________AACUGCCGAAACAAUCUGUUGUGUUAGGUAUGUUGAUAGUUUGUCUGACUAUACUGAUAUUC__ACCUUGAUUAUGCGCGGC___UCGCUCUGCGAACUGCGGUUCAAAAACGGAAAGCA___GGAAGUGGCGGCUGUGAUAGCCUACGAAGCCGGUAA_______________________\
______________________________________________________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50193787 92.23600769]
[62.51083755 91.70810699]
[47.53135300 90.91646576]
[32.56812286 89.86131287]
[17.62577820 88.54299164]
[2.70894837 86.96189880]
[-12.17774487 85.11853027]
[-27.02969170 83.01345062]
[-41.84228897 80.64732361]
[-56.61095428 78.02087402]
[-71.33110809 75.13491821]
[-85.99819183 71.99034119]
[-100.60765839 68.58813477]
[-115.15499115 64.92933655]
[-129.63568115 61.01508331]
[-144.04522705 56.84659576]
[-158.37919617 52.42515564]
[-172.63313293 47.75213623]
[-186.80261230 42.82898712]
[-200.88325500 37.65723038]
[-214.87069702 32.23846817]
[-228.76062012 26.57437706]
[-242.54870605 20.66671753]
[-256.23068237 14.51731300]
[-269.80230713 8.12807274]
[-283.25939941 1.50097358]
[-296.59777832 -5.36193085]
[-309.81329346 -12.45851517]
[-322.90188599 -19.78658104]
[-335.85946655 -27.34385872]
[-348.68206787 -35.12800980]
[-361.36566162 -43.13661575]
[-373.90637207 -51.36720276]
[-386.30026245 -59.81722260]
[-398.54354858 -68.48405457]
[-410.63238525 -77.36500549]
[-422.56307983 -86.45734406]
[-434.33187866 -95.75823975]
[-445.93518066 -105.26480865]
[-457.36938477 -114.97412109]
[-468.63095093 -124.88315582]
[-479.71636963 -134.98884583]
[-490.62222290 -145.28807068]
[-501.34512329 -155.77763367]
[-511.88177490 -166.45428467]
[-522.22888184 -177.31471252]
[-532.38323975 -188.35556030]
[-542.34173584 -199.57339478]
[-552.10125732 -210.96476746]
[-561.65881348 -222.52612305]
[-571.01141357 -234.25390625]
[-580.15618896 -246.14445496]
[-589.09020996 -258.19412231]
[-597.81085205 -270.39913940]
[-606.31530762 -282.75573730]
[-614.60101318 -295.26010132]
[-622.66534424 -307.90832520]
[-630.50585938 -320.69653320]
[-638.12005615 -333.62075806]
[-645.50567627 -346.67697144]
[-652.66033936 -359.86114502]
[-659.58184814 -373.16918945]
[-666.26812744 -386.59698486]
[-672.71697998 -400.14035034]
[-678.92657471 -413.79513550]
[-684.89483643 -427.55709839]
[-690.61999512 -441.42196655]
[-696.10021973 -455.38543701]
[-701.33392334 -469.44317627]
[-706.31939697 -483.59085083]
[-711.05505371 -497.82409668]
[-715.53955078 -512.13842773]
[-719.77136230 -526.52954102]
[-723.74932861 -540.99285889]
[-727.47210693 -555.52392578]
[-730.93853760 -570.11828613]
[-734.14764404 -584.77142334]
[-737.09832764 -599.47869873]
[-739.78973389 -614.23565674]
[-742.22106934 -629.03771973]
[-744.39147949 -643.88024902]
[-746.30029297 -658.75872803]
[-747.94702148 -673.66845703]
[-749.33111572 -688.60479736]
[-750.45208740 -703.56329346]
[-751.30963135 -718.53912354]
[-751.90350342 -733.52777100]
[-752.23345947 -748.52453613]
[-752.29949951 -763.52478027]
[-752.10150146 -778.52386475]
[-751.63952637 -793.51708984]
[-750.91381836 -808.49993896]
[-749.92449951 -823.46765137]
[-748.67193604 -838.41564941]
[-747.15649414 -853.33929443]
[-745.37866211 -868.23394775]
[-743.33892822 -883.09503174]
[-741.03802490 -897.91790771]
[-738.47656250 -912.69799805]
[-735.65539551 -927.43066406]
[-732.57537842 -942.11145020]
[-729.23748779 -956.73577881]
[-725.64270020 -971.29907227]
[-721.79223633 -985.79681396]
[-717.68719482 -1000.22454834]
[-713.32885742 -1014.57781982]
[-708.71856689 -1028.85217285]
[-703.85784912 -1043.04321289]
[-698.74804688 -1057.14648438]
[-693.39093018 -1071.15759277]
[-687.78796387 -1085.07238770]
[-681.94104004 -1098.88623047]
[-675.85192871 -1112.59521484]
[-669.52246094 -1126.19482422]
[-662.95458984 -1139.68090820]
[-656.15045166 -1153.04931641]
[-649.11212158 -1166.29602051]
[-641.84167480 -1179.41662598]
[-634.34149170 -1192.40734863]
[-626.61383057 -1205.26403809]
[-618.66113281 -1217.98278809]
[-610.48577881 -1230.55957031]
[-602.09039307 -1242.99060059]
[-593.47747803 -1255.27185059]
[-584.64984131 -1267.39965820]
[-575.61004639 -1279.37023926]
[-566.36102295 -1291.17980957]
[-556.90563965 -1302.82482910]
[-547.24670410 -1314.30163574]
[-537.38732910 -1325.60668945]
[-527.33050537 -1336.73645020]
[-517.07934570 -1347.68762207]
[-506.63708496 -1358.45654297]
[-496.00689697 -1369.04003906]
[-485.19210815 -1379.43481445]
[-474.19604492 -1389.63769531]
[-463.02212524 -1399.64550781]
[-451.67379761 -1409.45495605]
[-440.15460205 -1419.06335449]
[-428.46807861 -1428.46740723]
[-416.61788940 -1437.66442871]
[-404.60766602 -1446.65136719]
[-392.44113159 -1455.42565918]
[-380.12207031 -1463.98437500]
[-367.65429688 -1472.32507324]
[-355.04165649 -1480.44494629]
[-342.28805542 -1488.34167480]
[-329.39746094 -1496.01257324]
[-316.37387085 -1503.45556641]
[-303.22131348 -1510.66821289]
[-289.94384766 -1517.64819336]
[-276.54559326 -1524.39343262]
[-263.03073120 -1530.90185547]
[-249.40339661 -1537.17150879]
[-235.66783142 -1543.20019531]
[-221.82830811 -1548.98632812]
[-207.88908386 -1554.52795410]
[-193.85449219 -1559.82348633]
[-179.72888184 -1564.87109375]
[-165.51663208 -1569.66943359]
[-151.22212219 -1574.21679688]
[-136.84980774 -1578.51196289]
[-122.40412903 -1582.55346680]
[-107.88956451 -1586.34008789]
[-93.31060028 -1589.87072754]
[-78.67175293 -1593.14428711]
[-63.97756958 -1596.15966797]
[-49.23258972 -1598.91601562]
[-34.44138718 -1601.41235352]
[-19.60854149 -1603.64807129]
[-4.73864651 -1605.62243652]
[10.16369152 -1607.33471680]
[25.09385681 -1608.78442383]
[40.04722214 -1609.97119141]
[55.01916122 -1610.89465332]
[70.00502777 -1611.55444336]
[85.00019073 -1611.95043945]
[100.00000000 -1612.08239746]
[114.99980927 -1611.95043945]
[129.99496460 -1611.55444336]
[144.98083496 -1610.89465332]
[159.95277405 -1609.97119141]
[174.90614319 -1608.78442383]
[189.83630371 -1607.33471680]
[204.73864746 -1605.62243652]
[219.60853577 -1603.64807129]
[234.44139099 -1601.41235352]
[249.23258972 -1598.91601562]
[263.97756958 -1596.15966797]
[278.67175293 -1593.14428711]
[293.31060791 -1589.87072754]
[307.88955688 -1586.34008789]
[322.40414429 -1582.55346680]
[336.84982300 -1578.51196289]
[351.22213745 -1574.21679688]
[365.51663208 -1569.66943359]
[379.72888184 -1564.87109375]
[393.85449219 -1559.82348633]
[407.88906860 -1554.52795410]
[421.82830811 -1548.98632812]
[435.66784668 -1543.20019531]
[449.40338135 -1537.17150879]
[463.03073120 -1530.90185547]
[476.54559326 -1524.39343262]
[489.94384766 -1517.64819336]
[503.22131348 -1510.66821289]
[516.37390137 -1503.45556641]
[529.39746094 -1496.01257324]
[542.28808594 -1488.34167480]
[555.04162598 -1480.44494629]
[567.65429688 -1472.32507324]
[580.12207031 -1463.98437500]
[592.44110107 -1455.42565918]
[604.60766602 -1446.65136719]
[616.61785889 -1437.66442871]
[628.46807861 -1428.46740723]
[640.15460205 -1419.06335449]
[651.67376709 -1409.45495605]
[663.02209473 -1399.64550781]
[674.19604492 -1389.63769531]
[685.19207764 -1379.43481445]
[696.00689697 -1369.04003906]
[706.63708496 -1358.45654297]
[717.07934570 -1347.68762207]
[727.33050537 -1336.73645020]
[737.38732910 -1325.60668945]
[747.24670410 -1314.30163574]
[756.90563965 -1302.82482910]
[766.36102295 -1291.17980957]
[775.61004639 -1279.37023926]
[784.64984131 -1267.39965820]
[793.47747803 -1255.27185059]
[802.09039307 -1242.99060059]
[810.48577881 -1230.55957031]
[818.66113281 -1217.98278809]
[826.61383057 -1205.26403809]
[834.34149170 -1192.40734863]
[841.84167480 -1179.41662598]
[849.11212158 -1166.29602051]
[856.15045166 -1153.04931641]
[862.95458984 -1139.68090820]
[869.52246094 -1126.19482422]
[875.85192871 -1112.59521484]
[881.94104004 -1098.88623047]
[887.78796387 -1085.07238770]
[893.39093018 -1071.15759277]
[898.74804688 -1057.14648438]
[903.85784912 -1043.04321289]
[908.71856689 -1028.85217285]
[913.32885742 -1014.57781982]
[917.68719482 -1000.22454834]
[921.79223633 -985.79681396]
[925.64270020 -971.29907227]
[929.23748779 -956.73577881]
[932.57537842 -942.11145020]
[935.65539551 -927.43066406]
[938.47656250 -912.69799805]
[941.03802490 -897.91790771]
[943.33892822 -883.09503174]
[945.37866211 -868.23394775]
[947.15649414 -853.33929443]
[948.67193604 -838.41564941]
[949.92449951 -823.46765137]
[950.91381836 -808.49993896]
[951.63952637 -793.51708984]
[952.10150146 -778.52386475]
[952.29949951 -763.52478027]
[952.23345947 -748.52453613]
[951.90350342 -733.52777100]
[951.30963135 -718.53912354]
[950.45208740 -703.56329346]
[949.33111572 -688.60479736]
[947.94702148 -673.66845703]
[946.30029297 -658.75872803]
[944.39147949 -643.88024902]
[942.22106934 -629.03771973]
[939.78973389 -614.23565674]
[937.09832764 -599.47869873]
[934.14764404 -584.77142334]
[930.93853760 -570.11828613]
[927.47210693 -555.52392578]
[923.74932861 -540.99285889]
[919.77136230 -526.52954102]
[915.53955078 -512.13842773]
[911.05505371 -497.82409668]
[906.31939697 -483.59085083]
[901.33392334 -469.44317627]
[896.10021973 -455.38543701]
[890.61999512 -441.42196655]
[884.89483643 -427.55709839]
[878.92657471 -413.79513550]
[872.71697998 -400.14035034]
[866.26812744 -386.59698486]
[859.58184814 -373.16918945]
[852.66033936 -359.86114502]
[845.50567627 -346.67697144]
[838.12005615 -333.62075806]
[830.50585938 -320.69653320]
[822.66534424 -307.90832520]
[814.60101318 -295.26010132]
[806.31530762 -282.75573730]
[797.81085205 -270.39913940]
[789.09020996 -258.19412231]
[780.15618896 -246.14445496]
[771.01141357 -234.25390625]
[761.65881348 -222.52612305]
[752.10125732 -210.96476746]
[742.34173584 -199.57339478]
[732.38323975 -188.35556030]
[722.22888184 -177.31471252]
[711.88177490 -166.45428467]
[701.34515381 -155.77763367]
[690.62219238 -145.28807068]
[679.71636963 -134.98884583]
[668.63092041 -124.88315582]
[657.36938477 -114.97412109]
[645.93518066 -105.26480865]
[634.33190918 -95.75823975]
[622.56304932 -86.45734406]
[610.63238525 -77.36500549]
[598.54351807 -68.48405457]
[586.30029297 -59.81722260]
[573.90637207 -51.36720276]
[561.36566162 -43.13661575]
[548.68206787 -35.12800980]
[535.85949707 -27.34385872]
[522.90185547 -19.78658104]
[509.81329346 -12.45851517]
[496.59777832 -5.36193085]
[483.25939941 1.50097358]
[469.80230713 8.12807274]
[456.23068237 14.51731300]
[442.54870605 20.66671753]
[428.76062012 26.57437706]
[414.87069702 32.23846817]
[400.88327026 37.65723038]
[386.80261230 42.82898712]
[372.63311768 47.75213623]
[358.37921143 52.42515564]
[344.04522705 56.84659576]
[329.63568115 61.01508331]
[315.15499878 64.92933655]
[300.60766602 68.58813477]
[285.99819946 71.99034119]
[271.33111572 75.13491821]
[256.61096191 78.02087402]
[241.84228516 80.64732361]
[227.02969360 83.01345062]
[212.17774963 85.11853027]
[197.29104614 86.96189880]
[182.37422180 88.54299164]
[167.43188477 89.86131287]
[152.46864319 90.91646576]
[137.48916626 91.70810699]
[122.49806213 92.23600769]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
