%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 06:50:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__________________________________A______A_____AUGAAACCACAAAAAUAUGCCGCUGUCGUA_G_GUAUUUAUAGUAUGUCUGGCGAUGC__________UGAUAUUCGCAU___________UUAUGAAUCGCCGGUAGCUCUGCGAACUCCGGUUCAAG_ACCGGAAAGCAAGAAGUGGCGGCGGUGAUAGACUGCGAAACGAGUCAG______________________________\
______________________________________________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50202179 92.22995758]
[62.51134109 91.68996429]
[47.53280640 90.88018799]
[32.57128143 89.80088806]
[17.63160706 88.45242310]
[2.71863103 86.83522797]
[-12.16281509 84.94982147]
[-27.00790787 82.79682159]
[-41.81183624 80.37692261]
[-56.56980133 77.69091034]
[-71.27701569 74.73965454]
[-85.92872620 71.52410889]
[-100.52016449 68.04531860]
[-115.04661560 64.30440521]
[-129.50337219 60.30259323]
[-143.88574219 56.04117203]
[-158.18905640 51.52152634]
[-172.40869141 46.74511337]
[-186.54003906 41.71348953]
[-200.57852173 36.42828369]
[-214.51956177 30.89120483]
[-228.35868835 25.10405350]
[-242.09136963 19.06870079]
[-255.71318054 12.78710461]
[-269.21969604 6.26130056]
[-282.60653687 -0.50659561]
[-295.86938477 -7.51439095]
[-309.00393677 -14.75981426]
[-322.00588989 -22.24051666]
[-334.87109375 -29.95407295]
[-347.59533691 -37.89798355]
[-360.17453003 -46.06967545]
[-372.60455322 -54.46649933]
[-384.88137817 -63.08573151]
[-397.00109863 -71.92458344]
[-408.95968628 -80.98017883]
[-420.75332642 -90.24959564]
[-432.37820435 -99.72982788]
[-443.83050537 -109.41779327]
[-455.10656738 -119.31036377]
[-466.20269775 -129.40432739]
[-477.11532593 -139.69641113]
[-487.84088135 -150.18327332]
[-498.37591553 -160.86152649]
[-508.71701050 -171.72770691]
[-518.86083984 -182.77828979]
[-528.80401611 -194.00970459]
[-538.54345703 -205.41828918]
[-548.07592773 -217.00036621]
[-557.39831543 -228.75216675]
[-566.50769043 -240.66989136]
[-575.40100098 -252.74967957]
[-584.07537842 -264.98760986]
[-592.52807617 -277.37969971]
[-600.75628662 -289.92196655]
[-608.75738525 -302.61032104]
[-616.52880859 -315.44067383]
[-624.06793213 -328.40884399]
[-631.37243652 -341.51065063]
[-638.43981934 -354.74179077]
[-645.26794434 -368.09805298]
[-651.85449219 -381.57507324]
[-658.19732666 -395.16845703]
[-664.29443359 -408.87384033]
[-670.14379883 -422.68676758]
[-675.74359131 -436.60275269]
[-681.09191895 -450.61730957]
[-686.18707275 -464.72586060]
[-691.02746582 -478.92385864]
[-695.61145020 -493.20666504]
[-699.93756104 -507.56973267]
[-704.00439453 -522.00830078]
[-707.81066895 -536.51776123]
[-711.35510254 -551.09338379]
[-714.63653564 -565.73046875]
[-717.65399170 -580.42425537]
[-720.40643311 -595.16998291]
[-722.89294434 -609.96289062]
[-725.11273193 -624.79815674]
[-727.06506348 -639.67095947]
[-728.74938965 -654.57647705]
[-730.16510010 -669.50994873]
[-731.31170654 -684.46649170]
[-732.18890381 -699.44122314]
[-732.79638672 -714.42932129]
[-733.13391113 -729.42590332]
[-733.20141602 -744.42614746]
[-732.99890137 -759.42523193]
[-732.52636719 -774.41815186]
[-731.78405762 -789.40020752]
[-730.77209473 -804.36645508]
[-729.49084473 -819.31201172]
[-727.94079590 -834.23211670]
[-726.12237549 -849.12188721]
[-724.03625488 -863.97656250]
[-721.68298340 -878.79119873]
[-719.06341553 -893.56109619]
[-716.17840576 -908.28143311]
[-713.02880859 -922.94750977]
[-709.61572266 -937.55444336]
[-705.94024658 -952.09759521]
[-702.00354004 -966.57220459]
[-697.80688477 -980.97357178]
[-693.35168457 -995.29711914]
[-688.63928223 -1009.53808594]
[-683.67132568 -1023.69195557]
[-678.44934082 -1037.75402832]
[-672.97509766 -1051.71984863]
[-667.25024414 -1065.58496094]
[-661.27679443 -1079.34460449]
[-655.05657959 -1092.99462891]
[-648.59161377 -1106.53039551]
[-641.88403320 -1119.94750977]
[-634.93603516 -1133.24182129]
[-627.74975586 -1146.40881348]
[-620.32763672 -1159.44433594]
[-612.67205811 -1172.34411621]
[-604.78552246 -1185.10388184]
[-596.67053223 -1197.71972656]
[-588.32971191 -1210.18750000]
[-579.76586914 -1222.50292969]
[-570.98162842 -1234.66235352]
[-561.97991943 -1246.66162109]
[-552.76367188 -1258.49682617]
[-543.33587646 -1270.16418457]
[-533.69958496 -1281.66003418]
[-523.85784912 -1292.98046875]
[-513.81390381 -1304.12194824]
[-503.57107544 -1315.08081055]
[-493.13256836 -1325.85339355]
[-482.50183105 -1336.43640137]
[-471.68231201 -1346.82629395]
[-460.67749023 -1357.01977539]
[-449.49096680 -1367.01342773]
[-438.12631226 -1376.80407715]
[-426.58724976 -1386.38854980]
[-414.87753296 -1395.76379395]
[-403.00091553 -1404.92663574]
[-390.96130371 -1413.87426758]
[-378.76254272 -1422.60363770]
[-366.40859985 -1431.11206055]
[-353.90350342 -1439.39660645]
[-341.25128174 -1447.45471191]
[-328.45602417 -1455.28381348]
[-315.52191162 -1462.88122559]
[-302.45315552 -1470.24462891]
[-289.25393677 -1477.37145996]
[-275.92852783 -1484.25964355]
[-262.48132324 -1490.90673828]
[-248.91659546 -1497.31066895]
[-235.23880005 -1503.46948242]
[-221.45233154 -1509.38098145]
[-207.56169128 -1515.04333496]
[-193.57136536 -1520.45471191]
[-179.48588562 -1525.61328125]
[-165.30981445 -1530.51745605]
[-151.04776001 -1535.16577148]
[-136.70433044 -1539.55639648]
[-122.28419495 -1543.68823242]
[-107.79200745 -1547.55981445]
[-93.23246765 -1551.16979980]
[-78.61030579 -1554.51708984]
[-63.93024826 -1557.60058594]
[-49.19706345 -1560.41931152]
[-34.41551971 -1562.97241211]
[-19.59040833 -1565.25891113]
[-4.72653675 -1567.27819824]
[10.17127800 -1569.02966309]
[25.09820747 -1570.51257324]
[40.04941177 -1571.72644043]
[55.02005005 -1572.67102051]
[70.00526428 -1573.34594727]
[85.00019836 -1573.75097656]
[100.00000000 -1573.88598633]
[114.99980164 -1573.75097656]
[129.99473572 -1573.34594727]
[144.97994995 -1572.67102051]
[159.95059204 -1571.72644043]
[174.90179443 -1570.51257324]
[189.82872009 -1569.02966309]
[204.72653198 -1567.27819824]
[219.59040833 -1565.25891113]
[234.41551208 -1562.97241211]
[249.19706726 -1560.41931152]
[263.93023682 -1557.60058594]
[278.61029053 -1554.51708984]
[293.23248291 -1551.16979980]
[307.79199219 -1547.55981445]
[322.28421021 -1543.68823242]
[336.70434570 -1539.55639648]
[351.04776001 -1535.16577148]
[365.30981445 -1530.51745605]
[379.48587036 -1525.61328125]
[393.57135010 -1520.45471191]
[407.56170654 -1515.04333496]
[421.45233154 -1509.38098145]
[435.23880005 -1503.46948242]
[448.91659546 -1497.31066895]
[462.48132324 -1490.90673828]
[475.92852783 -1484.25964355]
[489.25393677 -1477.37145996]
[502.45315552 -1470.24462891]
[515.52191162 -1462.88122559]
[528.45605469 -1455.28381348]
[541.25128174 -1447.45471191]
[553.90350342 -1439.39660645]
[566.40856934 -1431.11206055]
[578.76251221 -1422.60363770]
[590.96130371 -1413.87426758]
[603.00091553 -1404.92663574]
[614.87756348 -1395.76379395]
[626.58728027 -1386.38854980]
[638.12634277 -1376.80407715]
[649.49096680 -1367.01342773]
[660.67749023 -1357.01977539]
[671.68231201 -1346.82629395]
[682.50183105 -1336.43640137]
[693.13256836 -1325.85339355]
[703.57104492 -1315.08081055]
[713.81390381 -1304.12194824]
[723.85784912 -1292.98046875]
[733.69958496 -1281.66003418]
[743.33587646 -1270.16418457]
[752.76367188 -1258.49682617]
[761.97991943 -1246.66162109]
[770.98162842 -1234.66235352]
[779.76586914 -1222.50292969]
[788.32971191 -1210.18750000]
[796.67053223 -1197.71972656]
[804.78552246 -1185.10388184]
[812.67205811 -1172.34411621]
[820.32763672 -1159.44433594]
[827.74975586 -1146.40881348]
[834.93603516 -1133.24182129]
[841.88403320 -1119.94750977]
[848.59161377 -1106.53039551]
[855.05657959 -1092.99462891]
[861.27679443 -1079.34460449]
[867.25024414 -1065.58496094]
[872.97509766 -1051.71984863]
[878.44934082 -1037.75402832]
[883.67132568 -1023.69195557]
[888.63928223 -1009.53808594]
[893.35168457 -995.29711914]
[897.80688477 -980.97357178]
[902.00354004 -966.57220459]
[905.94024658 -952.09759521]
[909.61572266 -937.55444336]
[913.02880859 -922.94750977]
[916.17840576 -908.28143311]
[919.06341553 -893.56109619]
[921.68298340 -878.79119873]
[924.03625488 -863.97656250]
[926.12237549 -849.12188721]
[927.94079590 -834.23211670]
[929.49084473 -819.31201172]
[930.77209473 -804.36645508]
[931.78405762 -789.40020752]
[932.52636719 -774.41815186]
[932.99890137 -759.42523193]
[933.20141602 -744.42614746]
[933.13391113 -729.42590332]
[932.79638672 -714.42932129]
[932.18890381 -699.44122314]
[931.31170654 -684.46649170]
[930.16510010 -669.50994873]
[928.74938965 -654.57647705]
[927.06506348 -639.67095947]
[925.11273193 -624.79815674]
[922.89294434 -609.96289062]
[920.40643311 -595.16998291]
[917.65399170 -580.42425537]
[914.63653564 -565.73046875]
[911.35510254 -551.09338379]
[907.81066895 -536.51776123]
[904.00439453 -522.00830078]
[899.93756104 -507.56973267]
[895.61145020 -493.20666504]
[891.02746582 -478.92385864]
[886.18707275 -464.72586060]
[881.09191895 -450.61730957]
[875.74359131 -436.60275269]
[870.14379883 -422.68676758]
[864.29443359 -408.87384033]
[858.19732666 -395.16845703]
[851.85449219 -381.57507324]
[845.26794434 -368.09805298]
[838.43981934 -354.74179077]
[831.37243652 -341.51065063]
[824.06793213 -328.40884399]
[816.52880859 -315.44067383]
[808.75738525 -302.61032104]
[800.75628662 -289.92196655]
[792.52807617 -277.37969971]
[784.07537842 -264.98760986]
[775.40100098 -252.74967957]
[766.50769043 -240.66989136]
[757.39831543 -228.75216675]
[748.07592773 -217.00036621]
[738.54345703 -205.41828918]
[728.80401611 -194.00970459]
[718.86083984 -182.77828979]
[708.71704102 -171.72770691]
[698.37591553 -160.86152649]
[687.84088135 -150.18327332]
[677.11529541 -139.69641113]
[666.20269775 -129.40432739]
[655.10656738 -119.31036377]
[643.83050537 -109.41779327]
[632.37817383 -99.72982788]
[620.75335693 -90.24959564]
[608.95971680 -80.98017883]
[597.00109863 -71.92458344]
[584.88140869 -63.08573151]
[572.60455322 -54.46649933]
[560.17449951 -46.06967545]
[547.59533691 -37.89798355]
[534.87109375 -29.95407295]
[522.00592041 -22.24051666]
[509.00393677 -14.75981426]
[495.86938477 -7.51439095]
[482.60653687 -0.50659561]
[469.21969604 6.26130056]
[455.71319580 12.78710461]
[442.09136963 19.06870079]
[428.35867310 25.10405350]
[414.51956177 30.89120483]
[400.57852173 36.42828369]
[386.54003906 41.71348953]
[372.40869141 46.74511337]
[358.18905640 51.52152634]
[343.88574219 56.04117203]
[329.50335693 60.30259323]
[315.04663086 64.30440521]
[300.52017212 68.04531860]
[285.92871094 71.52410889]
[271.27700806 74.73965454]
[256.56979370 77.69091034]
[241.81182861 80.37692261]
[227.00790405 82.79682159]
[212.16281128 84.94982147]
[197.28137207 86.83522797]
[182.36839294 88.45242310]
[167.42872620 89.80088806]
[152.46719360 90.88018799]
[137.48866272 91.68996429]
[122.49797821 92.22995758]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
