%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 06:48:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAGAGGCUACUCUACAUGUGACUAGCAUAUAGACAGGCCUCGUUGGUUAAUUGAAAAAUGACCUUCGGGGCUUUCUUCUUUCUGCCGCACAACUUUUUACCGUCAUGAGGCAAAAAGCCUCAAGCGCC\
) } def
/len { sequence length } bind def

/coor [
[232.28121948 349.16384888]
[223.29206848 337.15573120]
[214.30290222 325.14761353]
[205.31373596 313.13946533]
[196.32456970 301.13134766]
[187.33540344 289.12322998]
[178.34623718 277.11511230]
[169.35707092 265.10699463]
[160.36790466 253.09889221]
[158.91471863 268.02832031]
[150.45935059 280.41812134]
[137.08673096 287.21316528]
[122.09426117 286.73797607]
[109.17877960 279.10971069]
[101.52499390 266.20935059]
[101.02015686 251.21784973]
[107.78875732 237.83181763]
[120.16180420 229.35195923]
[135.08834839 227.86926270]
[148.88682556 233.74856567]
[142.65560913 220.10408020]
[136.42437744 206.45960999]
[130.19316101 192.81512451]
[118.78327942 191.20866394]
[109.49690247 184.18580627]
[104.74654388 173.42420959]
[105.83728790 161.59048462]
[112.61067200 151.67955017]
[107.03573608 137.75402832]
[101.46080017 123.82850647]
[87.23030090 120.17092896]
[77.83684540 108.87278748]
[76.83860016 94.21371460]
[84.61367798 81.74642944]
[79.03874207 67.82091522]
[73.46380615 53.89539337]
[57.06781769 42.27905273]
[60.40128708 23.29044533]
[54.17006302 9.64596558]
[47.93883896 -3.99851465]
[41.70761108 -17.64299393]
[35.47638702 -31.28747368]
[29.24516106 -44.93195343]
[23.01393700 -58.57643509]
[16.78271103 -72.22091675]
[2.24780989 -77.82219696]
[-3.87716770 -91.74840546]
[1.55237567 -105.57069397]
[-4.67884970 -119.21517944]
[-10.91007423 -132.85964966]
[-17.14130020 -146.50413513]
[-23.37252426 -160.14862061]
[-29.84675789 -166.73307800]
[-29.58536911 -174.19274902]
[-35.49012375 -187.98165894]
[-48.93542862 -197.37078857]
[-47.25746918 -213.68386841]
[-32.18238068 -220.13938904]
[-19.21812820 -210.09648132]
[-21.70121765 -193.88641357]
[-15.79646397 -180.09750366]
[-9.72804546 -166.37983704]
[-3.49681997 -152.73536682]
[2.73440528 -139.09088135]
[8.96563053 -125.44640350]
[15.19685555 -111.80192566]
[29.19863892 -106.85362244]
[35.71235657 -93.10494995]
[30.42719078 -78.45214081]
[36.65841675 -64.80766296]
[42.88964081 -51.16318130]
[49.12086487 -37.51869965]
[55.35209274 -23.87421989]
[61.58331680 -10.22974014]
[67.81454468 3.41473985]
[74.04576874 17.05921936]
[84.01235962 19.80194092]
[90.92874146 27.77895737]
[92.28737640 38.47168732]
[87.38932800 48.32045746]
[92.96426392 62.24597549]
[98.53919983 76.17149353]
[112.76969910 79.82907104]
[122.16315460 91.12721252]
[123.16139984 105.78628540]
[115.38632202 118.25357056]
[120.96125793 132.17909241]
[126.53619385 146.10461426]
[144.17468262 152.80561829]
[151.28707886 169.93986511]
[143.83763123 186.58390808]
[150.06886292 200.22837830]
[156.30007935 213.87286377]
[162.53131104 227.51733398]
[171.46044922 234.23489380]
[172.37602234 244.10972595]
[181.36518860 256.11782837]
[190.35435486 268.12594604]
[199.34352112 280.13406372]
[208.33268738 292.14218140]
[217.32185364 304.15032959]
[226.31101990 316.15844727]
[235.30018616 328.16656494]
[244.28935242 340.17468262]
[262.41531372 337.31942749]
[279.43710327 343.94387817]
[290.75991821 358.16900635]
[293.37310791 376.07666016]
[286.65023804 392.78829956]
[296.47314453 404.12454224]
[306.29605103 415.46078491]
[316.11895752 426.79702759]
[325.94189453 438.13327026]
[335.76480103 449.46951294]
[351.60000610 452.04360962]
[359.33465576 466.09902954]
[353.03536987 480.85366821]
[337.53445435 484.98898315]
[324.72286987 475.33279419]
[324.42855835 459.29241943]
[314.60565186 447.95617676]
[304.78271484 436.61993408]
[294.95980835 425.28369141]
[285.13690186 413.94744873]
[275.31399536 402.61120605]
[264.01947021 406.47103882]
[252.05075073 406.25366211]
[240.83876038 401.96136475]
[231.73200989 394.08496094]
[225.83445740 383.54788208]
[223.87167358 371.59793091]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 104]
[2 103]
[3 102]
[4 101]
[5 100]
[6 99]
[7 98]
[8 97]
[9 96]
[20 94]
[21 93]
[22 92]
[23 91]
[28 88]
[29 87]
[30 86]
[34 82]
[35 81]
[36 80]
[38 76]
[39 75]
[40 74]
[41 73]
[42 72]
[43 71]
[44 70]
[45 69]
[48 66]
[49 65]
[50 64]
[51 63]
[52 62]
[54 61]
[55 60]
[109 125]
[110 124]
[111 123]
[112 122]
[113 121]
[114 120]
] def

init

% Start Annotations
1 104 0.0 1 colorpair
2 103 0.0 1 colorpair
3 102 0.0 1 colorpair
4 101 0.0 1 colorpair
5 100 0.0 1 colorpair
6 99 0.0 1 colorpair
7 98 0.0 1 colorpair
8 97 0.0 1 colorpair
9 96 0.0 1 colorpair
20 94 0.0 1 colorpair
21 93 0.0 1 colorpair
22 92 0.0 1 colorpair
23 91 0.0 1 colorpair
28 88 0.0 1 colorpair
29 87 0.0 1 colorpair
30 86 0.0 1 colorpair
34 82 0.0 1 colorpair
35 81 0.0 1 colorpair
36 80 0.0 1 colorpair
38 76 0.0 1 colorpair
39 75 0.0 1 colorpair
40 74 0.0 1 colorpair
41 73 0.0 1 colorpair
42 72 0.0 1 colorpair
43 71 0.0 1 colorpair
44 70 0.0 1 colorpair
45 69 0.0 1 colorpair
48 66 0.0 1 colorpair
49 65 0.0 1 colorpair
50 64 0.0 1 colorpair
51 63 0.0 1 colorpair
52 62 0.0 1 colorpair
54 61 0.0 1 colorpair
55 60 0.0 1 colorpair
109 125 0.0 1 colorpair
110 124 0.0 1 colorpair
111 123 0.0 1 colorpair
112 122 0.0 1 colorpair
113 121 0.0 1 colorpair
114 120 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
