%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 20:16:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_________________AGCCAUAGUAACUACUCCUGUUAGUUGCUU__GUGGUGAGCGGCG___UGGGUGAGGUGCGAACUCAUCAUCGCCGCGCU______________________________________________________________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[193.35903931 354.03338623]
[182.93762207 343.24478149]
[173.02302551 331.98861694]
[163.63623047 320.28872681]
[154.79704285 308.16976929]
[146.52415466 295.65740967]
[138.83505249 282.77804565]
[131.74597168 269.55895996]
[125.27189636 256.02801514]
[119.42651367 242.21382141]
[114.22217560 228.14559937]
[109.66988373 213.85307312]
[105.77924347 199.36642456]
[102.55849457 184.71627808]
[100.01442719 169.93359375]
[98.15242767 155.04960632]
[96.97643280 140.09577942]
[96.48891449 125.10369873]
[96.69192505 110.07752991]
[83.30631256 116.84698486]
[69.92070770 123.61643982]
[56.53509903 130.38589478]
[43.14949036 137.15534973]
[29.92067146 144.22630310]
[16.85543251 151.59512329]
[3.79019189 158.96392822]
[-9.27504826 166.33274841]
[-22.34028816 173.70156860]
[-35.40552902 181.07038879]
[-48.47076797 188.43920898]
[-61.47998810 195.90649414]
[-74.43244934 203.47178650]
[-82.08603668 217.97540283]
[-98.48138428 218.32852173]
[-106.75235748 204.16790771]
[-98.39048767 190.06077576]
[-81.99774933 190.51933289]
[-69.04529572 182.95402527]
[-64.85400391 176.86460876]
[-55.83958817 175.37397766]
[-42.77434921 168.00515747]
[-29.70910835 160.63633728]
[-16.64386749 153.26751709]
[-3.57862735 145.89869690]
[9.48661327 138.52987671]
[22.55185318 131.16105652]
[23.84563446 127.87866974]
[26.79484367 125.06056213]
[31.16360855 123.47854614]
[36.38003922 123.76973724]
[49.76564407 117.00028229]
[63.15125275 110.23082733]
[76.53685760 103.46138000]
[89.92247009 96.69192505]
[90.82649231 89.24660492]
[92.63454437 74.35597229]
[93.53856659 66.91065979]
[82.16195679 57.13452530]
[70.78534698 47.35839462]
[59.40874100 37.58226395]
[48.03212738 27.80613136]
[36.65551758 18.03000069]
[27.42757607 19.98727036]
[18.46689606 17.51440239]
[11.75078964 11.28834629]
[8.70056057 2.79924774]
[9.88173962 -6.00474310]
[-1.04037440 -16.28615379]
[-11.96248817 -26.56756592]
[-22.88460350 -36.84897614]
[-33.80671692 -47.13039017]
[-44.72883224 -57.41180038]
[-55.65094757 -67.69321442]
[-71.15850830 -65.68086243]
[-84.30357361 -74.15087891]
[-88.87944794 -89.10398865]
[-82.72554016 -103.47978210]
[-68.74753571 -110.49044800]
[-53.54542542 -106.82577515]
[-44.29718018 -94.21609497]
[-45.36953354 -78.61532593]
[-34.44742203 -68.33391571]
[-23.52530670 -58.05250168]
[-12.60319138 -47.77109146]
[-1.68107736 -37.48968124]
[9.24103737 -27.20826912]
[20.16315079 -16.92685699]
[40.58672333 -13.96178150]
[46.43165207 6.65339041]
[57.80826187 16.42952156]
[69.18486786 26.20565224]
[80.56147766 35.98178482]
[91.93808746 45.75791550]
[103.31469727 55.53404617]
[106.70674133 40.92261124]
[110.76671600 26.48250580]
[115.48602295 12.24424362]
[120.85470581 -1.76208627]
[126.86141205 -15.50688457]
[133.49343872 -28.96110725]
[140.73680115 -42.09632111]
[148.57615662 -54.88476944]
[156.99496460 -67.29942322]
[165.97543335 -79.31405640]
[175.49856567 -90.90326691]
[185.54425049 -102.04257965]
[196.09124756 -112.70844269]
[207.11729431 -122.87832642]
[218.59906006 -132.53073120]
[230.51231384 -141.64524841]
[242.83184814 -150.20265198]
[255.53164673 -158.18482971]
[268.58486938 -165.57492065]
[281.96392822 -172.35729980]
[295.64056396 -178.51765442]
[309.58584595 -184.04295349]
[323.77032471 -188.92150879]
[338.16403198 -193.14303589]
[352.73654175 -196.69860840]
[367.45706177 -199.58068848]
[382.29446411 -201.78321838]
[397.21743774 -203.30152893]
[412.19439697 -204.13240051]
[427.19372559 -204.27409363]
[442.18371582 -203.72630310]
[457.13269043 -202.49018860]
[472.00906372 -200.56835938]
[486.78140259 -197.96488953]
[501.41848755 -194.68525696]
[515.88940430 -190.73640442]
[530.16351318 -186.12667847]
[544.21069336 -180.86581421]
[558.00122070 -174.96493530]
[571.50604248 -168.43652344]
[584.69653320 -161.29434204]
[597.54486084 -153.55351257]
[610.02386475 -145.23037720]
[622.10717773 -136.34254456]
[633.76928711 -126.90877533]
[644.98547363 -116.94900513]
[655.73205566 -106.48429871]
[665.98638916 -95.53675842]
[675.72680664 -84.12951660]
[684.93261719 -72.28668976]
[693.58447266 -60.03329086]
[701.66400146 -47.39522552]
[709.15423584 -34.39919662]
[716.03924561 -21.07266617]
[722.30456543 -7.44379663]
[727.93688965 6.45861006]
[732.92431641 20.60517502]
[737.25634766 34.96600342]
[740.92382812 49.51074982]
[743.91900635 64.20867920]
[746.23553467 79.02872467]
[747.86846924 93.93957520]
[748.81445312 108.90971375]
[749.07141113 123.90750885]
[748.63885498 138.90127563]
[747.51770020 153.85931396]
[745.71026611 168.75003052]
[743.22045898 183.54193115]
[740.05340576 198.20379639]
[736.21594238 212.70460510]
[731.71606445 227.01373291]
[726.56329346 241.10093689]
[720.76861572 254.93644714]
[714.34417725 268.49102783]
[707.30364990 281.73605347]
[699.66180420 294.64349365]
[691.43481445 307.18612671]
[682.64013672 319.33737183]
[673.29626465 331.07162476]
[663.42303467 342.36404419]
[653.04119873 353.19079590]
[642.17285156 363.52896118]
[630.84082031 373.35675049]
[619.06909180 382.65332031]
[606.88256836 391.39910889]
[594.30694580 399.57556152]
[581.36889648 407.16543579]
[568.09570312 414.15270996]
[554.51538086 420.52258301]
[540.65667725 426.26159668]
[526.54882812 431.35763550]
[512.22174072 435.79995728]
[497.70562744 439.57910156]
[483.03115845 442.68716431]
[468.22933960 445.11752319]
[453.33151245 446.86505127]
[438.36907959 447.92608643]
[423.37368774 448.29833984]
[408.37704468 447.98104858]
[393.41082764 446.97488403]
[378.50665283 445.28198242]
[363.69604492 442.90591431]
[349.01028442 439.85168457]
[334.48040771 436.12576294]
[320.13711548 431.73599243]
[306.01071167 426.69171143]
[292.13107300 421.00354004]
[278.52749634 414.68350220]
[265.22875977 407.74493408]
[252.26295471 400.20254517]
[239.65747070 392.07223511]
[227.43896484 383.37118530]
[215.63323975 374.11782837]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 54]
[20 53]
[21 52]
[22 51]
[23 50]
[24 46]
[25 45]
[26 44]
[27 43]
[28 42]
[29 41]
[30 40]
[31 38]
[32 37]
[57 94]
[58 93]
[59 92]
[60 91]
[61 90]
[62 89]
[67 87]
[68 86]
[69 85]
[70 84]
[71 83]
[72 82]
[73 81]
] def

init

% Start Annotations
19 54 0.0 1 colorpair
20 53 0.16 1 colorpair
21 52 0.16 1 colorpair
22 51 0.16 1 colorpair
23 50 0.16 1 colorpair
24 46 0.32 1 colorpair
25 45 0.0 0.6 colorpair
26 44 0.16 1 colorpair
27 43 0.0 0.6 colorpair
28 42 0.0 1 colorpair
29 41 0.16 1 colorpair
30 40 0.16 1 colorpair
31 38 0.0 0.6 colorpair
32 37 0.0 0.6 colorpair
57 94 0.0 1 colorpair
58 93 0.0 0.6 colorpair
59 92 0.0 0.6 colorpair
60 91 0.16 1 colorpair
61 90 0.0 1 colorpair
62 89 0.16 1 colorpair
67 87 0.16 0.6 colorpair
68 86 0.16 0.6 colorpair
69 85 0.16 0.6 colorpair
70 84 0.16 1 colorpair
71 83 0.0 0.6 colorpair
72 82 0.16 1 colorpair
73 81 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
20 cmark
21 cmark
22 cmark
50 cmark
24 cmark
46 cmark
25 45 1 gmark
44 cmark
27 43 1 gmark
29 cmark
41 cmark
30 cmark
40 cmark
31 38 1 gmark
32 37 1 gmark
58 93 1 gmark
59 92 1 gmark
91 cmark
62 cmark
89 cmark
67 87 1 gmark
67 cmark
87 cmark
68 86 1 gmark
68 cmark
86 cmark
69 85 1 gmark
69 cmark
70 cmark
84 cmark
71 83 1 gmark
72 cmark
82 cmark
81 cmark

% End Annotations
showpage
end
%%EOF
