%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 20:09:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
________________________UAUGCCUAACCAUAAUGAUCUUUACCUUAAUUGCUCGUGGCAUGCUCUAUGGGGUAUAAUUAAAGCGUUGACAUAAGAAAGUGGCGGCUA___UGGCCUCCAACC__________GCUAACCCCU__GGGAGGAA__CCACGCUUCCGCGGGGCUUGUA_______________________________________\
) } def
/len { sequence length } bind def

/coor [
[1.18866396 540.25177002]
[-13.38992977 536.72418213]
[-27.84321785 532.71398926]
[-42.15522766 528.22558594]
[-56.31014633 523.26403809]
[-70.29232788 517.83465576]
[-84.08631897 511.94357300]
[-97.67687988 505.59725952]
[-111.04899597 498.80273438]
[-124.18788147 491.56747437]
[-137.07902527 483.89950562]
[-149.70816040 475.80728149]
[-162.06135559 467.29977417]
[-174.12495422 458.38638306]
[-185.88562012 449.07693481]
[-197.33035278 439.38171387]
[-208.44651794 429.31146240]
[-219.22181702 418.87728882]
[-229.64436340 408.09069824]
[-239.70260620 396.96368408]
[-249.38545227 385.50848389]
[-258.68218994 373.73776245]
[-267.58258057 361.66455078]
[-276.07675171 349.30218506]
[-284.15530396 336.66430664]
[-291.80935669 323.76489258]
[-299.03039551 310.61819458]
[-305.81048584 297.23876953]
[-312.14215088 283.64135742]
[-318.01834106 269.84100342]
[-323.43255615 255.85296631]
[-328.37887573 241.69270325]
[-332.85180664 227.37585449]
[-336.84637451 212.91824341]
[-340.35821533 198.33584595]
[-343.38339233 183.64477539]
[-345.91860962 168.86128235]
[-347.96105957 154.00167847]
[-349.50845337 139.08241272]
[-350.55911255 124.11994934]
[-351.11187744 109.13082886]
[-351.16610718 94.13162231]
[-350.72177124 79.13890076]
[-349.77932739 64.16922760]
[-348.33984375 49.23915863]
[-346.40493774 34.36517715]
[-343.97668457 19.56373215]
[-341.05780029 4.85117579]
[-337.65151978 -9.75623322]
[-333.76159668 -24.24235344]
[-329.39233398 -38.59117508]
[-324.54855347 -52.78683853]
[-319.23559570 -66.81365967]
[-313.45935059 -80.65614319]
[-307.22622681 -94.29898071]
[-300.54306030 -107.72710419]
[-293.41726685 -120.92567444]
[-306.37228394 -128.48658752]
[-319.32730103 -136.04751587]
[-332.28231812 -143.60842896]
[-342.40530396 -132.46308899]
[-354.62457275 -123.66632843]
[-368.40594482 -117.60267639]
[-383.14694214 -114.53722382]
[-398.20312500 -114.60398102]
[-412.91635132 -117.80002594]
[-426.64340210 -123.98563385]
[-438.78417969 -132.89041138]
[-448.80798340 -144.12507629]
[-456.27655029 -157.19848633]
[-460.86343384 -171.53912354]
[-462.36807251 -186.52011108]
[-460.72476196 -201.48651123]
[-456.00527954 -215.78407288]
[-448.41595459 -228.78775024]
[-438.28854370 -239.92910767]
[-426.06582642 -248.72106934]
[-412.28207397 -254.77929688]
[-397.53988647 -257.83892822]
[-382.48370361 -257.76626587]
[-367.77175903 -254.56443787]
[-354.04714966 -248.37341309]
[-341.90985107 -239.46386719]
[-331.89050293 -228.22526550]
[-324.42706299 -215.14892578]
[-319.84582520 -200.80647278]
[-318.34704590 -185.82490540]
[-319.99627686 -170.85914612]
[-324.72137451 -156.56344604]
[-311.76635742 -149.00253296]
[-298.81134033 -141.44160461]
[-285.85632324 -133.88069153]
[-277.86935425 -146.57664490]
[-269.46478271 -159.00010681]
[-260.65194702 -171.13735962]
[-251.44053650 -182.97497559]
[-241.84075928 -194.49987793]
[-231.86322021 -205.69934082]
[-221.51895142 -216.56097412]
[-210.81936646 -227.07278442]
[-199.77630615 -237.22315979]
[-188.40196228 -247.00085449]
[-176.70890808 -256.39511108]
[-164.71006775 -265.39547729]
[-152.41870117 -273.99209595]
[-139.84840393 -282.17538452]
[-127.01303101 -289.93637085]
[-113.92680359 -297.26641846]
[-100.60416412 -304.15747070]
[-87.05984497 -310.60186768]
[-73.30879974 -316.59252930]
[-59.36624146 -322.12283325]
[-45.24756622 -327.18664551]
[-30.96837997 -331.77838135]
[-16.54446220 -335.89297485]
[-1.99175322 -339.52584839]
[12.67366505 -342.67300415]
[27.43558693 -345.33099365]
[42.27769852 -347.49685669]
[57.18359756 -349.16818237]
[72.13681030 -350.34313965]
[87.12081909 -351.02041626]
[102.11905670 -351.19927979]
[117.11495209 -350.87954712]
[132.09193420 -350.06155396]
[147.03346252 -348.74618530]
[161.92300415 -346.93493652]
[176.74411011 -344.62976074]
[191.48042297 -341.83325195]
[206.11563110 -338.54846191]
[220.63357544 -334.77905273]
[235.01820374 -330.52917480]
[249.25363159 -325.80352783]
[263.32412720 -320.60733032]
[277.21411133 -314.94631958]
[290.90829468 -308.82675171]
[304.39147949 -302.25540161]
[317.64880371 -295.23953247]
[330.66561890 -287.78686523]
[343.42752075 -279.90570068]
[355.92041016 -271.60467529]
[368.13049316 -262.89300537]
[380.04425049 -253.78030396]
[391.64855957 -244.27665710]
[402.93054199 -234.39254761]
[413.87777710 -224.13890076]
[424.47814941 -213.52705383]
[434.71994019 -202.56874084]
[444.59185791 -191.27604675]
[454.08294678 -179.66148376]
[463.18276978 -167.73786926]
[471.88122559 -155.51837158]
[480.16873169 -143.01651001]
[488.03610229 -130.24610901]
[495.47467041 -117.22124481]
[502.47619629 -103.95634460]
[509.03295898 -90.46604919]
[515.13769531 -76.76527405]
[520.78369141 -62.86915970]
[525.96466064 -48.79305649]
[530.67492676 -34.55252838]
[534.90924072 -20.16330719]
[538.66296387 -5.64129639]
[541.93194580 8.99745846]
[544.71252441 23.73677826]
[547.00164795 38.56037521]
[548.79681396 53.45186996]
[550.09600830 68.39480591]
[550.89776611 83.37266541]
[551.20129395 98.36889648]
[551.00622559 113.36693573]
[550.31274414 128.35020447]
[549.12158203 143.30213928]
[547.43414307 158.20622253]
[545.25225830 173.04597473]
[542.57830811 187.80502319]
[539.41528320 202.46702576]
[535.76666260 217.01579285]
[531.63647461 231.43525696]
[527.02929688 245.70945740]
[521.95025635 259.82266235]
[516.40484619 273.75921631]
[510.39935303 287.50378418]
[503.94027710 301.04113770]
[497.03485107 314.35629272]
[489.69064331 327.43460083]
[481.91580200 340.26156616]
[473.71890259 352.82302856]
[465.10900879 365.10507202]
[456.09564209 377.09417725]
[446.68875122 388.77706909]
[436.89877319 400.14080811]
[426.73645020 411.17291260]
[416.21307373 421.86111450]
[405.34027100 432.19363403]
[394.13003540 442.15905762]
[382.59475708 451.74636841]
[370.74716187 460.94494629]
[358.60040283 469.74465942]
[346.16784668 478.13580322]
[333.46325684 486.10903931]
[320.50067139 493.65560913]
[307.29443359 500.76715088]
[293.85910034 507.43582153]
[280.20953369 513.65423584]
[266.36083984 519.41552734]
[252.32827759 524.71331787]
[238.12738037 529.54174805]
[223.77384949 533.89550781]
[209.28353882 537.76977539]
[194.67245483 541.16027832]
[179.95675659 544.06329346]
[165.15269470 546.47552490]
[150.27664185 548.39440918]
[135.34501648 549.81774902]
[120.37434387 550.74401855]
[105.38114929 551.17218018]
[90.38201141 551.10174561]
[75.39350128 550.53277588]
[60.43218231 549.46600342]
[45.51458740 547.90246582]
[30.65720558 545.84399414]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[57 92]
[58 91]
[59 90]
[60 89]
] def

init

% Start Annotations
57 92 0.32 0.6 colorpair
59 90 0.32 0.2 colorpair
60 89 0.32 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
57 92 1 gmark
57 cmark
92 cmark
58 91 3 gmark
58 cmark
91 cmark
59 90 2 gmark
59 cmark
90 cmark
60 cmark
89 cmark

% End Annotations
showpage
end
%%EOF
