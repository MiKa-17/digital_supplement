%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 23:14:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
____________AAAAUGCAGCAAGAACGGGUCGUUCUAAGGCUGAUGAUUAUCUGCAUCACGCUGAUAGCGCUGAUGUGGAUCACCCGCGGUUCACUAUGUGAACUGCGCAUCAAACUGGGAGACACGGAGGUAGCCGCCAUUUUGGCUUACGAAACCGAA___\
) } def
/len { sequence length } bind def

/coor [
[-40.55001831 305.56591797]
[-51.17071915 297.88647461]
[-61.37268066 289.65893555]
[-71.12763214 280.90600586]
[-80.40856171 271.65197754]
[-89.18975830 261.92245483]
[-97.44689941 251.74443054]
[-105.15711212 241.14605713]
[-112.29903412 230.15670776]
[-118.85289001 218.80682373]
[-124.80051422 207.12785339]
[-130.12544250 195.15213013]
[-134.81292725 182.91284180]
[-138.84997559 170.44387817]
[-142.22540283 157.77978516]
[-144.92987061 144.95564270]
[-159.75827026 147.21800232]
[-174.58668518 149.48037720]
[-189.41508484 151.74273682]
[-204.24349976 154.00509644]
[-204.58811951 169.04013062]
[-207.53848267 183.78688049]
[-213.00495911 197.79719543]
[-220.82139587 210.64530945]
[-230.75028992 221.94081116]
[-242.48991394 231.34040833]
[-255.68348694 238.55848694]
[-269.93008423 243.37568665]
[-284.79678345 245.64562988]
[-299.83178711 245.29930115]
[-314.57818604 242.34725952]
[-328.58789062 236.87921143]
[-341.43511963 229.06129456]
[-352.72949219 219.13111877]
[-362.12774658 207.39044189]
[-369.34432983 194.19604492]
[-374.15991211 179.94889832]
[-376.42816162 165.08195496]
[-376.08013916 150.04699707]
[-373.12643433 135.30091858]
[-367.65679932 121.29184723]
[-359.83743286 108.44549561]
[-349.90597534 97.15225220]
[-338.16421509 87.75531006]
[-324.96899414 80.54022217]
[-310.72131348 75.72625732]
[-295.85409546 73.45970154]
[-280.81918335 73.80942535]
[-266.07345581 76.76481628]
[-252.06500244 82.23605347]
[-239.21952820 90.05686951]
[-227.92741394 99.98960876]
[-218.53179932 111.73241425]
[-211.31822205 124.92845154]
[-206.50585938 139.17669678]
[-191.67745972 136.91432190]
[-176.84904480 134.65196228]
[-162.02064514 132.38960266]
[-147.19223022 130.12722778]
[-148.73298645 111.98138428]
[-148.94348145 93.77145386]
[-147.82258606 75.59484100]
[-145.37632751 57.54874420]
[-141.61775208 39.72968292]
[-136.56698608 22.23295593]
[-130.25102234 5.15213490]
[-122.70364380 -11.42142677]
[-113.96523285 -27.39909363]
[-104.08250427 -42.69541550]
[-93.10831451 -57.22858429]
[-81.10136414 -70.92087555]
[-68.12585449 -83.69905853]
[-54.25119400 -95.49480438]
[-39.55157852 -106.24501801]
[-24.10562134 -115.89220428]
[-7.99593496 -124.38477325]
[8.69132710 -131.67730713]
[25.86691856 -137.73080444]
[43.43898392 -142.51289368]
[61.31354523 -145.99798584]
[79.39500427 -148.16744995]
[97.58666229 -149.00968933]
[115.79122925 -148.52018738]
[133.91133118 -146.70158386]
[151.85008240 -143.56358337]
[169.51153564 -139.12297058]
[186.80122375 -133.40350342]
[203.62669373 -126.43576813]
[219.89796448 -118.25702667]
[235.52798462 -108.91101837]
[244.06692505 -121.24335480]
[252.60585022 -133.57569885]
[261.14480591 -145.90803528]
[269.68371582 -158.24037170]
[278.22265625 -170.57272339]
[286.76159668 -182.90505981]
[285.31896973 -198.88311768]
[297.01080322 -209.86860657]
[312.86810303 -207.43438721]
[320.72650146 -193.44778442]
[314.55773926 -178.63813782]
[299.09393311 -174.36611938]
[290.55499268 -162.03378296]
[282.01605225 -149.70144653]
[273.47714233 -137.36911011]
[264.93820190 -125.03676605]
[256.39926147 -112.70442200]
[247.86033630 -100.37208557]
[258.19766235 -92.31524658]
[268.09677124 -83.72569275]
[277.53024292 -74.62721252]
[286.47195435 -65.04502106]
[294.89715576 -55.00565338]
[302.78247070 -44.53691483]
[310.10607910 -33.66780853]
[316.84768677 -22.42844391]
[322.98864746 -10.84994984]
[328.51190186 1.03559887]
[333.40219116 13.19528008]
[337.64596558 25.59541130]
[341.23144531 38.20164490]
[344.14871216 50.97905731]
[346.38967896 63.89226151]
[347.94815063 76.90547943]
[348.81982422 89.98267365]
[349.00222778 103.08761597]
[348.49493408 116.18400574]
[347.29928589 129.23556519]
[345.41860962 142.20614624]
[342.85812378 155.05981445]
[339.62490845 167.76095581]
[335.72796631 180.27441406]
[331.17800903 192.56549072]
[325.98773193 204.60017395]
[320.17144775 216.34512329]
[313.74526978 227.76777649]
[306.72705078 238.83651733]
[299.13616943 249.52069092]
[290.99368286 259.79067993]
[282.32214355 269.61804199]
[273.14556885 278.97558594]
[263.48937988 287.83734131]
[253.38034058 296.17880249]
[242.84642029 303.97683716]
[231.91682434 311.20983887]
[220.62181091 317.85781860]
[208.99266052 323.90231323]
[197.06161499 329.32659912]
[184.86170959 334.11566162]
[172.42672729 338.25619507]
[159.79113770 341.73678589]
[146.98991394 344.54772949]
[134.05853271 346.68130493]
[121.03280640 348.13156128]
[107.94882202 348.89450073]
[94.84281158 348.96798706]
[81.75109100 348.35180664]
[68.70992279 347.04772949]
[55.75542831 345.05932617]
[42.92348862 342.39208984]
[30.24965286 339.05340576]
[17.76902580 335.05258179]
[5.51617861 330.40063477]
[-6.47494698 325.11050415]
[-18.17113686 319.19677734]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 59]
[17 58]
[18 57]
[19 56]
[20 55]
[90 108]
[91 107]
[92 106]
[93 105]
[94 104]
[95 103]
[96 102]
] def

init

% Start Annotations
16 59 0.0 1 colorpair
17 58 0.16 1 colorpair
18 57 0.16 1 colorpair
19 56 0.16 1 colorpair
91 107 0.0 1 colorpair
93 105 0.16 1 colorpair
94 104 0.0 1 colorpair
95 103 0.0 1 colorpair
96 102 0.32 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
58 cmark
57 cmark
19 cmark
20 55 4 gmark
20 cmark
90 108 4 gmark
90 cmark
92 106 4 gmark
106 cmark
93 cmark
105 cmark
96 cmark
102 cmark

% End Annotations
showpage
end
%%EOF
