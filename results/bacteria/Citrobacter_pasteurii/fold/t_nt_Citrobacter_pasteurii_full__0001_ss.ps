%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 17:36:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACUCUCAC_CA_UUUGUUGUAGCUUUCUCUGAUCCUGAAGCCCCUCCUGCAAACACUGGCACUCCUUACCGCCAGCUAUGCAACUCGUUAU_________________________________________________________________________________________________________________________________________________________________\
__________________________________________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50207520 92.22682953]
[62.51160431 91.68057251]
[47.53357315 90.86141968]
[32.57294083 89.76963043]
[17.63467598 88.40557098]
[2.72372651 86.76969910]
[-12.15495872 84.86254883]
[-26.99644470 82.68476105]
[-41.79581070 80.23705292]
[-56.54814529 77.52024078]
[-71.24855804 74.53521729]
[-85.89217377 71.28298187]
[-100.47412872 67.76461029]
[-114.98959351 63.98126221]
[-129.43376160 59.93420029]
[-143.80181885 55.62476730]
[-158.08901978 51.05438995]
[-172.29061890 46.22458649]
[-186.40191650 41.13695145]
[-200.41821289 35.79318237]
[-214.33486938 30.19504547]
[-228.14726257 24.34439850]
[-241.85083008 18.24318314]
[-255.44100952 11.89342117]
[-268.91329956 5.29722071]
[-282.26324463 -1.54323184]
[-295.48638916 -8.62566757]
[-308.57833862 -15.94773674]
[-321.53482056 -23.50701141]
[-334.35147095 -31.30098343]
[-347.02404785 -39.32706833]
[-359.54837036 -47.58260727]
[-371.92025757 -56.06485367]
[-384.13565063 -64.77100372]
[-396.19042969 -73.69816589]
[-408.08068848 -82.84337616]
[-419.80239868 -92.20360565]
[-431.35168457 -101.77574921]
[-442.72476196 -111.55663300]
[-453.91784668 -121.54300690]
[-464.92718506 -131.73156738]
[-475.74917603 -142.11892700]
[-486.38018799 -152.70164490]
[-496.81671143 -163.47621155]
[-507.05529785 -174.43905640]
[-517.09252930 -185.58653259]
[-526.92510986 -196.91496277]
[-536.54974365 -208.42056274]
[-545.96325684 -220.09953308]
[-555.16247559 -231.94799805]
[-564.14447021 -243.96202087]
[-572.90612793 -256.13763428]
[-581.44464111 -268.47079468]
[-589.75714111 -280.95739746]
[-597.84082031 -293.59329224]
[-605.69305420 -306.37432861]
[-613.31127930 -319.29623413]
[-620.69287109 -332.35470581]
[-627.83544922 -345.54547119]
[-634.73663330 -358.86413574]
[-641.39410400 -372.30624390]
[-647.80566406 -385.86737061]
[-653.96923828 -399.54299927]
[-659.88269043 -413.32861328]
[-665.54412842 -427.21963501]
[-670.95166016 -441.21145630]
[-676.10351562 -455.29943848]
[-680.99792480 -469.47891235]
[-685.63330078 -483.74514771]
[-690.00811768 -498.09344482]
[-694.12091064 -512.51904297]
[-697.97033691 -527.01708984]
[-701.55505371 -541.58288574]
[-704.87396240 -556.21154785]
[-707.92584229 -570.89819336]
[-710.70983887 -585.63800049]
[-713.22491455 -600.42608643]
[-715.47021484 -615.25750732]
[-717.44512939 -630.12738037]
[-719.14886475 -645.03070068]
[-720.58093262 -659.96258545]
[-721.74084473 -674.91809082]
[-722.62817383 -689.89227295]
[-723.24267578 -704.88006592]
[-723.58416748 -719.87658691]
[-723.65246582 -734.87689209]
[-723.44757080 -749.87591553]
[-722.96954346 -764.86871338]
[-722.21862793 -779.85028076]
[-721.19494629 -794.81573486]
[-719.89892578 -809.76007080]
[-718.33093262 -824.67828369]
[-716.49157715 -839.56549072]
[-714.38134766 -854.41674805]
[-712.00103760 -869.22711182]
[-709.35144043 -883.99169922]
[-706.43334961 -898.70550537]
[-703.24786377 -913.36376953]
[-699.79589844 -927.96160889]
[-696.07867432 -942.49414062]
[-692.09741211 -956.95660400]
[-687.85345459 -971.34411621]
[-683.34814453 -985.65197754]
[-678.58306885 -999.87542725]
[-673.55975342 -1014.00976562]
[-668.27984619 -1028.05017090]
[-662.74511719 -1041.99218750]
[-656.95739746 -1055.83117676]
[-650.91864014 -1069.56225586]
[-644.63085938 -1083.18127441]
[-638.09606934 -1096.68347168]
[-631.31646729 -1110.06433105]
[-624.29431152 -1123.31958008]
[-617.03192139 -1136.44482422]
[-609.53167725 -1149.43554688]
[-601.79614258 -1162.28759766]
[-593.82781982 -1174.99658203]
[-585.62939453 -1187.55834961]
[-577.20355225 -1199.96875000]
[-568.55316162 -1212.22363281]
[-559.68096924 -1224.31896973]
[-550.58996582 -1236.25073242]
[-541.28320312 -1248.01489258]
[-531.76373291 -1259.60766602]
[-522.03472900 -1271.02514648]
[-512.09942627 -1282.26354980]
[-501.96109009 -1293.31921387]
[-491.62310791 -1304.18835449]
[-481.08889771 -1314.86743164]
[-470.36196899 -1325.35290527]
[-459.44586182 -1335.64123535]
[-448.34420776 -1345.72912598]
[-437.06066895 -1355.61328125]
[-425.59899902 -1365.29016113]
[-413.96301270 -1374.75671387]
[-402.15655518 -1384.00988770]
[-390.18353271 -1393.04638672]
[-378.04794312 -1401.86340332]
[-365.75378418 -1410.45800781]
[-353.30517578 -1418.82727051]
[-340.70620728 -1426.96838379]
[-327.96105957 -1434.87878418]
[-315.07397461 -1442.55566406]
[-302.04922485 -1449.99670410]
[-288.89111328 -1457.19921875]
[-275.60403442 -1464.16101074]
[-262.19235229 -1470.87951660]
[-248.66056824 -1477.35278320]
[-235.01312256 -1483.57861328]
[-221.25457764 -1489.55468750]
[-207.38948059 -1495.27941895]
[-193.42242432 -1500.75061035]
[-179.35804749 -1505.96643066]
[-165.20101929 -1510.92541504]
[-150.95602417 -1515.62573242]
[-136.62779236 -1520.06579590]
[-122.22109222 -1524.24426270]
[-107.74067688 -1528.15954590]
[-93.19136047 -1531.81054688]
[-78.57797241 -1535.19604492]
[-63.90534973 -1538.31481934]
[-49.17836761 -1541.16589355]
[-34.40190506 -1543.74816895]
[-19.58086395 -1546.06103516]
[-4.72016382 -1548.10363770]
[10.17527008 -1549.87524414]
[25.10049629 -1551.37524414]
[40.05056381 -1552.60327148]
[55.02051544 -1553.55871582]
[70.00538635 -1554.24145508]
[85.00020599 -1554.65124512]
[100.00000000 -1554.78784180]
[114.99979401 -1554.65124512]
[129.99461365 -1554.24145508]
[144.97947693 -1553.55871582]
[159.94943237 -1552.60327148]
[174.89950562 -1551.37524414]
[189.82472229 -1549.87524414]
[204.72016907 -1548.10363770]
[219.58087158 -1546.06103516]
[234.40190125 -1543.74816895]
[249.17835999 -1541.16589355]
[263.90536499 -1538.31481934]
[278.57797241 -1535.19604492]
[293.19137573 -1531.81054688]
[307.74066162 -1528.15954590]
[322.22109985 -1524.24426270]
[336.62780762 -1520.06579590]
[350.95602417 -1515.62573242]
[365.20101929 -1510.92541504]
[379.35803223 -1505.96643066]
[393.42242432 -1500.75061035]
[407.38946533 -1495.27941895]
[421.25457764 -1489.55468750]
[435.01312256 -1483.57861328]
[448.66055298 -1477.35278320]
[462.19235229 -1470.87951660]
[475.60403442 -1464.16101074]
[488.89111328 -1457.19921875]
[502.04922485 -1449.99670410]
[515.07397461 -1442.55566406]
[527.96105957 -1434.87878418]
[540.70617676 -1426.96838379]
[553.30517578 -1418.82727051]
[565.75378418 -1410.45800781]
[578.04791260 -1401.86340332]
[590.18353271 -1393.04638672]
[602.15655518 -1384.00988770]
[613.96301270 -1374.75671387]
[625.59899902 -1365.29016113]
[637.06066895 -1355.61328125]
[648.34417725 -1345.72912598]
[659.44586182 -1335.64123535]
[670.36199951 -1325.35290527]
[681.08892822 -1314.86743164]
[691.62310791 -1304.18835449]
[701.96112061 -1293.31921387]
[712.09942627 -1282.26354980]
[722.03472900 -1271.02514648]
[731.76373291 -1259.60766602]
[741.28320312 -1248.01489258]
[750.58996582 -1236.25073242]
[759.68096924 -1224.31896973]
[768.55316162 -1212.22363281]
[777.20355225 -1199.96875000]
[785.62939453 -1187.55834961]
[793.82781982 -1174.99658203]
[801.79614258 -1162.28759766]
[809.53167725 -1149.43554688]
[817.03192139 -1136.44482422]
[824.29431152 -1123.31958008]
[831.31646729 -1110.06433105]
[838.09606934 -1096.68347168]
[844.63085938 -1083.18127441]
[850.91864014 -1069.56225586]
[856.95739746 -1055.83117676]
[862.74511719 -1041.99218750]
[868.27984619 -1028.05017090]
[873.55975342 -1014.00976562]
[878.58306885 -999.87542725]
[883.34814453 -985.65197754]
[887.85345459 -971.34411621]
[892.09741211 -956.95660400]
[896.07867432 -942.49414062]
[899.79589844 -927.96160889]
[903.24786377 -913.36376953]
[906.43334961 -898.70550537]
[909.35144043 -883.99169922]
[912.00103760 -869.22711182]
[914.38134766 -854.41674805]
[916.49157715 -839.56549072]
[918.33093262 -824.67828369]
[919.89892578 -809.76007080]
[921.19494629 -794.81573486]
[922.21862793 -779.85028076]
[922.96954346 -764.86871338]
[923.44757080 -749.87591553]
[923.65246582 -734.87689209]
[923.58416748 -719.87658691]
[923.24267578 -704.88006592]
[922.62817383 -689.89227295]
[921.74084473 -674.91809082]
[920.58093262 -659.96258545]
[919.14886475 -645.03070068]
[917.44512939 -630.12738037]
[915.47021484 -615.25750732]
[913.22491455 -600.42608643]
[910.70983887 -585.63800049]
[907.92584229 -570.89819336]
[904.87396240 -556.21154785]
[901.55505371 -541.58288574]
[897.97033691 -527.01708984]
[894.12091064 -512.51904297]
[890.00811768 -498.09344482]
[885.63330078 -483.74514771]
[880.99792480 -469.47891235]
[876.10351562 -455.29943848]
[870.95166016 -441.21145630]
[865.54412842 -427.21963501]
[859.88269043 -413.32861328]
[853.96923828 -399.54299927]
[847.80566406 -385.86737061]
[841.39410400 -372.30624390]
[834.73663330 -358.86413574]
[827.83544922 -345.54547119]
[820.69287109 -332.35470581]
[813.31127930 -319.29623413]
[805.69305420 -306.37432861]
[797.84082031 -293.59329224]
[789.75714111 -280.95739746]
[781.44464111 -268.47079468]
[772.90612793 -256.13763428]
[764.14447021 -243.96202087]
[755.16247559 -231.94799805]
[745.96325684 -220.09953308]
[736.54974365 -208.42056274]
[726.92510986 -196.91496277]
[717.09252930 -185.58653259]
[707.05529785 -174.43905640]
[696.81671143 -163.47621155]
[686.38018799 -152.70164490]
[675.74914551 -142.11892700]
[664.92718506 -131.73156738]
[653.91784668 -121.54300690]
[642.72479248 -111.55663300]
[631.35168457 -101.77574921]
[619.80236816 -92.20360565]
[608.08068848 -82.84337616]
[596.19042969 -73.69816589]
[584.13562012 -64.77100372]
[571.92028809 -56.06485367]
[559.54833984 -47.58260727]
[547.02404785 -39.32706833]
[534.35144043 -31.30098343]
[521.53479004 -23.50701141]
[508.57833862 -15.94773674]
[495.48638916 -8.62566757]
[482.26324463 -1.54323184]
[468.91329956 5.29722071]
[455.44100952 11.89342117]
[441.85083008 18.24318314]
[428.14727783 24.34439850]
[414.33486938 30.19504547]
[400.41821289 35.79318237]
[386.40191650 41.13695145]
[372.29061890 46.22458649]
[358.08901978 51.05438995]
[343.80181885 55.62476730]
[329.43374634 59.93420029]
[314.98959351 63.98126221]
[300.47412109 67.76461029]
[285.89218140 71.28298187]
[271.24856567 74.53521729]
[256.54815674 77.52024078]
[241.79580688 80.23705292]
[226.99644470 82.68476105]
[212.15495300 84.86254883]
[197.27627563 86.76969910]
[182.36532593 88.40557098]
[167.42706299 89.76963043]
[152.46643066 90.86141968]
[137.48838806 91.68057251]
[122.49792480 92.22682953]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
