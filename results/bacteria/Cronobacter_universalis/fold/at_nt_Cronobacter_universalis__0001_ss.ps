%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 19:04:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
C__U__UCUGGUG__U__U_AU__U_UGU_U_AC__U_UUA_U_UUCAC____CU____CG__A__CGCU_UGCGA__U__G______GG_C________GGAGGCUGAAGCCUUUCUGGCUUAAGAAUCCGGGAAGUACA___CUG__GAGAGGAGAAAACCCCGCC_UUU___G___GGC__GG_U___UG____U__G_____G____CG__UU_____________\
) } def
/len { sequence length } bind def

/coor [
[78.80966187 1106.48730469]
[63.82343292 1105.81689453]
[48.86530304 1104.68078613]
[33.94974136 1103.07995605]
[19.09118271 1101.01611328]
[4.30399704 1098.49108887]
[-10.39750862 1095.50744629]
[-24.99911118 1092.06799316]
[-39.48668671 1088.17614746]
[-53.84621811 1083.83557129]
[-68.06381226 1079.05053711]
[-82.12570953 1073.82568359]
[-96.01831818 1068.16601562]
[-109.72819519 1062.07702637]
[-123.24206543 1055.56457520]
[-136.54685974 1048.63500977]
[-149.62973022 1041.29504395]
[-162.47798157 1033.55175781]
[-175.07920837 1025.41259766]
[-187.42120361 1016.88555908]
[-199.49205017 1007.97869873]
[-211.28004456 998.70080566]
[-222.77380371 989.06079102]
[-233.96220398 979.06799316]
[-244.83441162 968.73205566]
[-255.37991333 958.06298828]
[-265.58850098 947.07116699]
[-275.45031738 935.76708984]
[-284.95581055 924.16186523]
[-294.09579468 912.26660156]
[-302.86138916 900.09277344]
[-311.24414062 887.65234375]
[-319.23596191 874.95715332]
[-326.82907104 862.01959229]
[-334.01617432 848.85211182]
[-340.79028320 835.46746826]
[-347.14486694 821.87866211]
[-353.07376099 808.09881592]
[-358.57122803 794.14123535]
[-363.63195801 780.01940918]
[-368.25106812 765.74707031]
[-372.42404175 751.33795166]
[-376.14691162 736.80603027]
[-379.41601562 722.16534424]
[-382.22824097 707.43005371]
[-384.58081055 692.61450195]
[-386.47149658 677.73291016]
[-387.89846802 662.79968262]
[-388.86029053 647.82934570]
[-389.35610962 632.83630371]
[-389.38537598 617.83514404]
[-388.94812012 602.84027100]
[-388.04470825 587.86633301]
[-386.67605591 572.92767334]
[-384.84347534 558.03881836]
[-382.54876709 543.21411133]
[-379.79409790 528.46801758]
[-376.58215332 513.81469727]
[-372.91604614 499.26834106]
[-368.79934692 484.84304810]
[-364.23599243 470.55276489]
[-359.23043823 456.41131592]
[-353.78747559 442.43237305]
[-347.91241455 428.62945557]
[-341.61096191 415.01593018]
[-334.88912964 401.60498047]
[-327.75350952 388.40957642]
[-320.21093750 375.44244385]
[-312.26873779 362.71618652]
[-303.93460083 350.24304199]
[-295.21658325 338.03515625]
[-286.12313843 326.10430908]
[-276.66302490 314.46200562]
[-266.84539795 303.11956787]
[-256.67980957 292.08795166]
[-246.17602539 281.37780762]
[-235.34425354 270.99951172]
[-224.19494629 260.96310425]
[-212.73890686 251.27827454]
[-200.98721313 241.95443726]
[-188.95123291 233.00056458]
[-176.64260864 224.42535400]
[-164.07325745 216.23709106]
[-151.25532532 208.44369507]
[-138.20121765 201.05268860]
[-124.92356873 194.07125854]
[-111.43522644 187.50611877]
[-97.74922180 181.36366272]
[-83.87881470 175.64979553]
[-69.83741760 170.37005615]
[-55.63861084 165.52957153]
[-41.29613495 161.13299561]
[-26.82386398 157.18460083]
[-12.23579788 153.68820190]
[2.45394874 150.64718628]
[17.23116493 148.06448364]
[32.08155441 145.94261169]
[46.99075317 144.28359985]
[61.94433212 143.08906555]
[76.92782593 142.36016846]
[91.92674255 142.09759521]
[92.13073730 127.09898376]
[92.33473206 112.10037231]
[85.67738342 99.80519867]
[92.66665649 87.69563293]
[92.87065125 72.69702148]
[79.78256989 64.78187561]
[72.46193695 51.46628189]
[72.78704071 36.37453842]
[80.57046509 23.55758476]
[93.63626099 16.40561867]
[93.84024811 1.40700567]
[94.04424286 -13.59160709]
[83.93090820 -26.04552078]
[87.50282288 -41.68588638]
[102.01992035 -48.51475143]
[116.34592438 -41.29359436]
[119.49115753 -25.56187248]
[109.04285431 -13.38761425]
[108.83886719 1.61099899]
[108.63487244 16.60961151]
[121.50131989 24.11427689]
[128.93328857 37.13817215]
[128.84782410 52.23317719]
[121.16776276 65.34474945]
[107.86926270 72.90101624]
[107.66526794 87.89962769]
[114.32261658 100.19480133]
[107.33334351 112.30436707]
[107.12934875 127.30297852]
[106.92536163 142.30158997]
[121.91158295 142.97198486]
[136.86972046 144.10810852]
[151.78527832 145.70889282]
[166.64384460 147.77276611]
[181.43103027 150.29772949]
[196.13253784 153.28137207]
[210.73414612 156.72077942]
[225.22172546 160.61262512]
[239.58126831 164.95315552]
[253.79885864 169.73815918]
[267.86077881 174.96302795]
[281.75338745 180.62268066]
[295.46325684 186.71166992]
[308.97714233 193.22407532]
[322.28195190 200.15361023]
[335.36480713 207.49357605]
[348.21307373 215.23686218]
[360.81433105 223.37599182]
[373.15634155 231.90306091]
[385.22720337 240.80986023]
[397.01519775 250.08775330]
[408.50897217 259.72775269]
[419.69738770 269.72055054]
[430.56961060 280.05645752]
[441.11511230 290.72552490]
[451.32373047 301.71737671]
[461.18554688 313.02139282]
[470.69107056 324.62664795]
[479.83105469 336.52188110]
[488.59664917 348.69564819]
[496.97943115 361.13613892]
[504.97125244 373.83129883]
[512.56439209 386.76885986]
[519.75152588 399.93630981]
[526.52563477 413.32092285]
[532.88024902 426.90972900]
[538.80914307 440.68957520]
[544.30664062 454.64715576]
[549.36737061 468.76898193]
[553.98651123 483.04132080]
[558.15954590 497.45043945]
[561.88238525 511.98236084]
[565.15155029 526.62304688]
[567.96374512 541.35827637]
[570.31634521 556.17388916]
[572.20703125 571.05548096]
[573.63403320 585.98864746]
[574.59588623 600.95898438]
[575.09173584 615.95202637]
[575.12103271 630.95318604]
[574.68377686 645.94805908]
[573.78039551 660.92205811]
[572.41174316 675.86071777]
[570.57922363 690.74957275]
[568.28448486 705.57421875]
[565.52984619 720.32037354]
[562.31793213 734.97369385]
[558.65185547 749.52001953]
[554.53515625 763.94531250]
[549.97180176 778.23559570]
[544.96624756 792.37707520]
[539.52331543 806.35601807]
[533.64831543 820.15893555]
[527.34686279 833.77246094]
[520.62506104 847.18341064]
[513.48944092 860.37884521]
[505.94686890 873.34600830]
[498.00469971 886.07226562]
[489.67056274 898.54541016]
[480.95257568 910.75329590]
[471.85913086 922.68420410]
[462.39904785 934.32647705]
[452.58145142 945.66894531]
[442.41583252 956.70056152]
[431.91207886 967.41070557]
[421.08032227 977.78906250]
[409.93103027 987.82543945]
[398.47500610 997.51031494]
[386.72332764 1006.83416748]
[374.68734741 1015.78802490]
[362.37875366 1024.36328125]
[349.80938721 1032.55151367]
[336.99148560 1040.34497070]
[323.93737793 1047.73596191]
[310.65972900 1054.71740723]
[297.17138672 1061.28259277]
[283.48541260 1067.42504883]
[269.61502075 1073.13891602]
[255.57360840 1078.41870117]
[241.37481689 1083.25915527]
[227.03234863 1087.65576172]
[212.56007385 1091.60424805]
[197.97201538 1095.10058594]
[183.28227234 1098.14160156]
[168.50506592 1100.72436523]
[153.65467834 1102.84631348]
[138.74548340 1104.50524902]
[123.79190063 1105.69982910]
[108.80840302 1106.42883301]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[101 131]
[102 130]
[103 129]
[105 127]
[106 126]
[111 121]
[112 120]
[113 119]
] def

init

% Start Annotations
101 131 0.0 1 colorpair
102 130 0.0 0.2 colorpair
103 129 0.0 0.2 colorpair
105 127 0.16 0.2 colorpair
106 126 0.32 1 colorpair
111 121 0.0 1 colorpair
112 120 0.32 1 colorpair
113 119 0.16 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
102 130 2 gmark
103 129 2 gmark
105 127 2 gmark
105 cmark
127 cmark
106 cmark
126 cmark
112 cmark
120 cmark
113 119 2 gmark
113 cmark

% End Annotations
showpage
end
%%EOF
