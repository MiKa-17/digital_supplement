%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 19:04:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_____________AUGAAGCCACUGCAAAAUACUCUGGCCUGGU___UAUUUAUGGUUUGCGUAACGAUAUUAAUUUUCACAUUAAUUAAACAGGAAACGCUAUGCGAGCUGACCAUGAAGGACGGAAAUAAGGAGGUGGCGGCUUAGCUGGCCUGU__AAUCC_GU______________\
) } def
/len { sequence length } bind def

/coor [
[140.89657593 406.30661011]
[127.66384125 407.78399658]
[114.37975311 408.68997192]
[101.06896973 409.02285767]
[87.75620270 408.78204346]
[74.46617126 407.96801758]
[61.22353363 406.58221436]
[48.05289078 404.62725830]
[34.97868347 402.10675049]
[22.02519035 399.02542114]
[9.21645451 395.38891602]
[-3.42374158 391.20404053]
[-15.87193298 386.47854614]
[-28.10500908 381.22122192]
[-40.10026169 375.44180298]
[-51.83541489 369.15103149]
[-63.28869247 362.36056519]
[-74.43882751 355.08306885]
[-85.26511383 347.33197021]
[-95.74745941 339.12173462]
[-105.86640167 330.46755981]
[-115.60315704 321.38552856]
[-124.93964386 311.89248657]
[-133.85853577 302.00607300]
[-142.34327698 291.74462891]
[-150.37809753 281.12722778]
[-157.94810486 270.17358398]
[-165.03923035 258.90399170]
[-171.63832092 247.33938599]
[-177.73310852 235.50125122]
[-183.31228638 223.41157532]
[-188.36550903 211.09277344]
[-192.88337708 198.56773376]
[-196.85751343 185.85971069]
[-200.28053284 172.99227905]
[-203.14608765 159.98934937]
[-205.44885254 146.87504578]
[-207.18455505 133.67370605]
[-208.34997559 120.40986633]
[-208.94294739 107.10813141]
[-208.96237183 93.79320526]
[-208.40820312 80.48979187]
[-207.28147888 67.22261047]
[-205.58430481 54.01627350]
[-203.31980896 40.89530563]
[-200.49220276 27.88406372]
[-197.10673523 15.00670624]
[-193.16969299 2.28713703]
[-188.68836975 -10.25102901]
[-183.67112732 -22.58451653]
[-178.12722778 -34.69042587]
[-172.06700134 -46.54628372]
[-165.50169373 -58.13008118]
[-158.44346619 -69.42031097]
[-150.90545654 -80.39601135]
[-142.90162659 -91.03681183]
[-134.44686890 -101.32295990]
[-125.55686188 -111.23534393]
[-116.24810791 -120.75557709]
[-106.53788757 -129.86598206]
[-116.28945160 -141.26365662]
[-126.04100800 -152.66133118]
[-140.22610474 -147.31727600]
[-155.38354492 -147.15017700]
[-169.68298340 -152.18025208]
[-181.39772034 -161.80006409]
[-189.11312866 -174.84797668]
[-191.89753723 -189.74841309]
[-189.41471863 -204.70205688]
[-181.96447754 -217.90318298]
[-170.44647217 -227.75769043]
[-156.25155640 -233.07560730]
[-141.09384155 -233.21476746]
[-126.80368042 -228.15835571]
[-115.10669708 -218.51696777]
[-107.41534424 -205.45484924]
[-104.65840149 -190.54931641]
[-107.16877747 -175.60026550]
[-114.64333344 -162.41290283]
[-104.89176941 -151.01521301]
[-95.14021301 -139.61753845]
[-80.51187897 -150.82211304]
[-65.24175262 -161.13488770]
[-49.38411713 -170.51922607]
[-32.99536133 -178.94175720]
[-16.13374710 -186.37252808]
[1.14077330 -192.78511047]
[18.76678085 -198.15672302]
[36.68160629 -202.46826172]
[54.82155609 -205.70439148]
[73.12213135 -207.85362244]
[91.51827240 -208.90827942]
[109.94457245 -208.86465454]
[128.33551025 -207.72286987]
[146.62570190 -205.48699951]
[164.75012207 -202.16500854]
[182.64433289 -197.76867676]
[200.24470520 -192.31364441]
[217.48866272 -185.81932068]
[223.52656555 -199.55044556]
[229.56448364 -213.28155518]
[230.40528870 -230.21464539]
[246.90939331 -234.09423828]
[255.20614624 -219.30909729]
[243.29559326 -207.24365234]
[237.25769043 -193.51252747]
[231.21978760 -179.78140259]
[246.10235596 -172.30564880]
[260.56057739 -164.03895569]
[274.55239868 -155.00534058]
[288.03726196 -145.23103333]
[300.97592163 -134.74443054]
[313.33084106 -123.57599640]
[325.06610107 -111.75815582]
[336.14764404 -99.32524872]
[346.54330444 -86.31337738]
[356.22280884 -72.76034546]
[365.15811157 -58.70551300]
[373.32324219 -44.18970490]
[380.69448853 -29.25508308]
[387.25039673 -13.94502926]
[392.97198486 1.69598842]
[397.84262085 17.62253952]
[401.84811401 33.78836441]
[404.97686768 50.14650726]
[407.21981812 66.64945221]
[408.57037354 83.24926758]
[409.02468872 99.89774323]
[408.58139038 116.54650879]
[407.24182129 133.14721680]
[405.00979614 149.65164185]
[401.89187622 166.01185608]
[397.89706421 182.18032837]
[413.34536743 178.76550293]
[423.29052734 189.85343933]
[437.64932251 194.19223022]
[452.00811768 198.53100586]
[466.36691284 202.86979675]
[480.72570801 207.20857239]
[495.12142944 211.42326355]
[509.55297852 215.51356506]
[523.22821045 207.59124756]
[538.47827148 211.73985291]
[546.25555420 225.49809265]
[541.94598389 240.70344543]
[528.10626221 248.33483887]
[512.94732666 243.86471558]
[505.46267700 229.94509888]
[491.03112793 225.85481262]
[483.71942139 227.05899048]
[476.38693237 221.56736755]
[462.02813721 217.22857666]
[447.66934204 212.88980103]
[433.31054688 208.55102539]
[418.95175171 204.21223450]
[404.53051758 207.93740845]
[393.55828857 196.53912354]
[389.12716675 209.09510803]
[384.15930176 221.44857788]
[378.66390991 233.57656860]
[372.65115356 245.45657349]
[366.13223267 257.06655884]
[359.11923218 268.38491821]
[351.62521362 279.39071655]
[343.66403198 290.06344604]
[335.25048828 300.38333130]
[326.40020752 310.33120728]
[317.12960815 319.88861084]
[307.45593262 329.03778076]
[297.39709473 337.76174927]
[286.97180176 346.04434204]
[276.19940186 353.87011719]
[265.09988403 361.22460938]
[253.69384766 368.09414673]
[242.00250244 374.46594238]
[230.04751587 380.32821655]
[217.85110474 385.67007446]
[205.43591309 390.48156738]
[192.82496643 394.75378418]
[180.04170227 398.47879028]
[167.10983276 401.64968872]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[60 81]
[61 80]
[62 79]
[99 107]
[100 106]
[101 105]
[133 157]
[135 155]
[136 154]
[137 153]
[138 152]
[139 151]
[140 149]
[141 148]
] def

init

% Start Annotations
60 81 0.0 1 colorpair
61 80 0.16 1 colorpair
62 79 0.16 0.2 colorpair
99 107 0.0 1 colorpair
100 106 0.16 1 colorpair
101 105 0.16 1 colorpair
133 157 0.16 0.6 colorpair
135 155 0.0 1 colorpair
136 154 0.32 1 colorpair
137 153 0.0 0.6 colorpair
138 152 0.16 0.2 colorpair
139 151 0.32 1 colorpair
140 149 0.0 1 colorpair
141 148 0.16 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
61 cmark
80 cmark
62 79 2 gmark
79 cmark
106 cmark
101 cmark
133 157 1 gmark
157 cmark
136 cmark
154 cmark
137 153 1 gmark
138 152 2 gmark
138 cmark
139 cmark
151 cmark
141 148 2 gmark
141 cmark
148 cmark

% End Annotations
showpage
end
%%EOF
