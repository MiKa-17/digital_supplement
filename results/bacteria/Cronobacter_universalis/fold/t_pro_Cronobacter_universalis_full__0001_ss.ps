%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 19:04:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_____________AUAAUGCCGCGAAAUACUCUUAUCUGGUGUGUAUUAAUGGUCUGUGUAACGAUAUUAAUGUUCACAUUACUUAAACGGGAAACGCUAUGCGAGCUGAGCAUGAAGGACGGAAAUAAGGAGGUGGCGGCGUUGCUGGCUUGC_GAAUCCGGUAA____________\
) } def
/len { sequence length } bind def

/coor [
[187.24626160 437.23641968]
[173.89923096 440.41036987]
[160.43756104 443.05630493]
[146.88214111 445.17007446]
[133.25401306 446.74847412]
[119.57428741 447.78897095]
[105.86421204 448.29000854]
[92.14503479 448.25079346]
[78.43804169 447.67141724]
[64.76449585 446.55270386]
[51.14560318 444.89645386]
[37.60249329 442.70523071]
[24.15616989 439.98239136]
[10.82749271 436.73220825]
[-2.36286402 432.95971680]
[-15.39444065 428.67071533]
[-28.24702263 423.87191772]
[-40.90067291 418.57073975]
[-53.33576584 412.77542114]
[-65.53301239 406.49493408]
[-77.47348785 399.73901367]
[-89.13867950 392.51818848]
[-100.51049042 384.84359741]
[-111.57127380 376.72714233]
[-122.30387878 368.18148804]
[-132.69165039 359.21981812]
[-142.71849060 349.85607910]
[-152.36883545 340.10473633]
[-161.62771606 329.98098755]
[-170.48077393 319.50048828]
[-178.91427612 308.67953491]
[-186.91514587 297.53485107]
[-194.47096252 286.08380127]
[-201.57000732 274.34408569]
[-208.20126343 262.33392334]
[-214.35446167 250.07197571]
[-220.02003479 237.57723999]
[-225.18922424 224.86909485]
[-229.85398865 211.96725464]
[-234.00711060 198.89173889]
[-237.64212036 185.66284180]
[-240.75340271 172.30105591]
[-243.33612061 158.82711792]
[-245.38627625 145.26193237]
[-246.90068054 131.62654114]
[-247.87699890 117.94209290]
[-248.31369019 104.22981262]
[-248.21011353 90.51097107]
[-247.56639099 76.80684662]
[-246.38356018 63.13870239]
[-244.66342163 49.52773285]
[-242.40866089 35.99505234]
[-239.62277222 22.56165695]
[-236.31007385 9.24837780]
[-232.47570801 -3.92413163]
[-228.12562561 -16.93543816]
[-223.26657104 -29.76536179]
[-217.90608215 -42.39399719]
[-212.05245972 -54.80175781]
[-205.71479797 -66.96939850]
[-198.90293884 -78.87804413]
[-191.62742615 -90.50922394]
[-183.89956665 -101.84489441]
[-175.73132324 -112.86746979]
[-167.13537598 -123.55986023]
[-158.12507629 -133.90547180]
[-148.71437073 -143.88825989]
[-138.91787720 -153.49273682]
[-128.75079346 -162.70401001]
[-118.22886658 -171.50779724]
[-107.36844635 -179.89042664]
[-96.18635559 -187.83891296]
[-84.69995880 -195.34089661]
[-72.92705536 -202.38478088]
[-60.88592529 -208.95960999]
[-48.59523010 -215.05520630]
[-36.07404327 -220.66209412]
[-23.34178543 -225.77159119]
[-10.41820431 -230.37576294]
[2.67665195 -234.46746826]
[15.92247200 -238.04037476]
[29.29870796 -241.08891296]
[42.78461456 -243.60838318]
[56.35926819 -245.59486389]
[70.00161743 -247.04527283]
[83.69049835 -247.95735168]
[97.40467834 -248.32971191]
[111.12287903 -248.16174316]
[124.82382965 -247.45373535]
[138.48628235 -246.20677185]
[152.08901978 -244.42279053]
[165.61097717 -242.10455322]
[179.03115845 -239.25566101]
[192.32873535 -235.88052368]
[205.48310852 -231.98439026]
[218.47386169 -227.57330322]
[223.87805176 -241.56596375]
[229.28222656 -255.55863953]
[229.34843445 -272.51245117]
[245.65802002 -277.14212036]
[254.62168884 -262.75152588]
[243.27490234 -250.15446472]
[237.87071228 -236.16178894]
[232.46653748 -222.16911316]
[249.99113464 -214.39303589]
[267.06137085 -205.66456604]
[283.62551880 -196.01013184]
[299.63339233 -185.45898438]
[315.03652954 -174.04309082]
[329.78823853 -161.79702759]
[343.84384155 -148.75790405]
[357.16079712 -134.96520996]
[369.69869995 -120.46073914]
[381.41958618 -105.28841400]
[392.28799438 -89.49420166]
[402.27096558 -73.12595367]
[411.33822632 -56.23324585]
[419.46237183 -38.86725998]
[426.61874390 -21.08060265]
[432.78570557 -2.92715144]
[437.94454956 15.53809929]
[442.07962036 34.25921249]
[445.17843628 53.17947388]
[447.23159790 72.24157715]
[448.23291016 91.38776398]
[448.17929077 110.56003571]
[447.07089233 129.70031738]
[444.91113281 148.75064087]
[441.70654297 167.65327454]
[437.46679688 186.35096741]
[452.83843994 182.60623169]
[463.01870728 193.47872925]
[477.46707153 197.50915527]
[491.91546631 201.53956604]
[506.36386108 205.56999207]
[520.81225586 209.60040283]
[535.26062012 213.63081360]
[546.71313477 203.29429626]
[561.93963623 200.81289673]
[576.08135986 206.97842407]
[584.62585449 219.82348633]
[584.84649658 235.24928284]
[576.67291260 248.33346558]
[562.71325684 254.90095520]
[547.42199707 252.85606384]
[535.67858887 242.85131836]
[531.23022461 228.07919312]
[516.78179932 224.04878235]
[502.33343506 220.01837158]
[487.88504028 215.98794556]
[473.43667603 211.95753479]
[458.98828125 207.92712402]
[444.65008545 211.96014404]
[433.43637085 200.79934692]
[429.20858765 213.85090637]
[424.47015381 226.72586060]
[419.22842407 239.40425110]
[413.49148560 251.86639404]
[407.26831055 264.09298706]
[400.56851196 276.06503296]
[393.40246582 287.76397705]
[385.78134155 299.17166138]
[377.71688843 310.27041626]
[369.22167969 321.04299927]
[360.30886841 331.47271729]
[350.99224854 341.54339600]
[341.28634644 351.23937988]
[331.20614624 360.54568481]
[320.76730347 369.44781494]
[309.98602295 377.93200684]
[298.87902832 385.98507690]
[287.46353149 393.59451294]
[275.75726318 400.74856567]
[263.77835083 407.43612671]
[251.54541016 413.64678955]
[239.07739258 419.37094116]
[226.39364624 424.59970093]
[213.51383972 429.32495117]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[96 104]
[97 103]
[98 102]
[130 154]
[132 152]
[133 151]
[134 150]
[135 149]
[136 148]
[137 147]
] def

init

% Start Annotations
96 104 0.0 1 colorpair
97 103 0.16 1 colorpair
98 102 0.16 1 colorpair
130 154 0.16 0.6 colorpair
132 152 0.0 1 colorpair
133 151 0.32 1 colorpair
134 150 0.0 0.2 colorpair
135 149 0.16 0.2 colorpair
136 148 0.32 1 colorpair
137 147 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
103 cmark
98 cmark
130 154 1 gmark
154 cmark
133 cmark
151 cmark
134 150 2 gmark
135 149 2 gmark
135 cmark
136 cmark
148 cmark

% End Annotations
showpage
end
%%EOF
