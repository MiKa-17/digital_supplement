%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 19:04:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______UCUGGUG_GUAUUAAU__U_UGUAU_AC__U_UUAAUGUUCAC__U_CU_AC_CG__A_UCGCUGUGCGAACUG_G__UGAAGGACGGG_A_AGGGAGCUUGCUGCGUUUCUGGCUUACGAAUCCGGUAAGUAGC___CUGCAGGGCGGAGGAAACCCCGCC_UUUCAGG______________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[-81.17906952 966.87451172]
[-96.07157135 968.68188477]
[-111.02153015 969.92779541]
[-126.00776672 970.61047363]
[-141.00907898 970.72900391]
[-156.00422668 970.28314209]
[-170.97200012 969.27355957]
[-185.89120483 967.70172119]
[-200.74072266 965.56976318]
[-215.49954224 962.88073730]
[-230.14675903 959.63848877]
[-244.66166687 955.84759521]
[-259.02368164 951.51336670]
[-273.21252441 946.64196777]
[-287.20809937 941.24035645]
[-300.99057007 935.31610107]
[-314.54043579 928.87762451]
[-327.83856201 921.93395996]
[-340.86605835 914.49505615]
[-353.60452271 906.57141113]
[-366.03594971 898.17419434]
[-378.14270020 889.31524658]
[-389.90765381 880.00726318]
[-401.31414795 870.26330566]
[-412.34606934 860.09716797]
[-422.98779297 849.52325439]
[-433.22421265 838.55657959]
[-443.04092407 827.21258545]
[-452.42395020 815.50732422]
[-461.36004639 803.45745850]
[-469.83657837 791.08001709]
[-477.84152222 778.39245605]
[-485.36355591 765.41271973]
[-492.39202881 752.15930176]
[-498.91699219 738.65081787]
[-504.92922974 724.90649414]
[-510.42022705 710.94580078]
[-515.38220215 696.78839111]
[-519.80816650 682.45434570]
[-523.69177246 667.96398926]
[-527.02758789 653.33776855]
[-529.81085205 638.59643555]
[-532.03771973 623.76086426]
[-533.70489502 608.85198975]
[-534.81011963 593.89099121]
[-535.35186768 578.89898682]
[-535.32922363 563.89721680]
[-534.74230957 548.90692139]
[-533.59197998 533.94934082]
[-531.87988281 519.04559326]
[-529.60833740 504.21676636]
[-526.78057861 489.48388672]
[-523.40069580 474.86782837]
[-519.47338867 460.38922119]
[-515.00427246 446.06860352]
[-509.99963379 431.92620850]
[-504.46658325 417.98208618]
[-498.41293335 404.25595093]
[-491.84725952 390.76724243]
[-484.77886963 377.53503418]
[-477.21774292 364.57809448]
[-469.17459106 351.91470337]
[-460.66079712 339.56283569]
[-451.68838501 327.53994751]
[-442.27011108 315.86309814]
[-432.41928101 304.54873657]
[-422.14981079 293.61294556]
[-411.47628784 283.07116699]
[-400.41375732 272.93835449]
[-388.97793579 263.22882080]
[-377.18496704 253.95629883]
[-365.05157471 245.13395691]
[-352.59490967 236.77424622]
[-339.83258057 228.88900757]
[-326.78271484 221.48939514]
[-313.46374512 214.58590698]
[-299.89450073 208.18829346]
[-286.09423828 202.30560303]
[-272.08245850 196.94618225]
[-257.87899780 192.11761475]
[-243.50396729 187.82672119]
[-228.97770691 184.07957458]
[-214.32077026 180.88150024]
[-199.55390930 178.23699951]
[-184.69804382 176.14982605]
[-169.77416992 174.62292480]
[-154.80342102 173.65847778]
[-139.80699158 173.25784302]
[-124.80610657 173.42156982]
[-109.82199097 174.14944458]
[-94.87586212 175.44044495]
[-79.98887634 177.29270935]
[-65.18209076 179.70364380]
[-50.47647858 182.66983032]
[-35.89284134 186.18707275]
[-21.45182800 190.25039673]
[-7.17387724 194.85403442]
[6.92080450 199.99147034]
[20.81226540 205.65545654]
[34.48084641 211.83796692]
[41.17229080 198.41319275]
[47.86373901 184.98841858]
[48.03427887 177.61033630]
[54.73855972 171.42750549]
[61.61195755 158.09497070]
[68.48535156 144.76243591]
[63.71965027 130.69744873]
[70.50032806 117.07846069]
[85.28528595 112.17511749]
[80.97351074 98.34201050]
[87.61299133 85.46321106]
[101.38218689 80.95148468]
[108.25558472 67.61895752]
[115.12898254 54.28642273]
[122.00238037 40.95389175]
[128.87577820 27.62136078]
[117.18095398 8.42883682]
[119.47108459 -13.79977036]
[134.65753174 -30.01688004]
[156.43447876 -33.71649933]
[161.81951904 -47.71654510]
[167.20455933 -61.71659470]
[172.58959961 -75.71664429]
[169.30479431 -93.84205627]
[183.38487244 -104.32672119]
[188.57902527 -118.39870453]
[185.27281189 -134.46112061]
[197.70825195 -145.15185547]
[213.09281921 -139.47322083]
[215.60020447 -123.26689148]
[202.65101624 -113.20455933]
[197.45686340 -99.13256836]
[202.23164368 -88.02786255]
[198.03042603 -76.26740265]
[186.58964539 -70.33160400]
[181.20460510 -56.33155441]
[175.81956482 -42.33150482]
[170.43452454 -28.33145905]
[176.64318848 -23.14938927]
[181.48544312 -16.65258598]
[184.68975830 -9.19313431]
[186.07360840 -1.17741752]
[185.55383301 6.95601606]
[183.15167236 14.76044846]
[178.99191284 21.80552483]
[173.29647827 27.70098877]
[166.37261963 32.11829376]
[158.59625244 34.80890656]
[150.39167786 35.61829376]
[142.20831299 34.49475861]
[135.33491516 47.82728958]
[128.46151733 61.15982056]
[121.58811188 74.49235535]
[114.71471405 87.82488251]
[119.02648926 101.65798950]
[112.38700867 114.53678894]
[98.61781311 119.04851532]
[103.19979095 133.93620300]
[96.03926086 147.35937500]
[81.81788635 151.63583374]
[74.94448853 164.96836853]
[68.07109070 178.30090332]
[61.28850937 191.67985535]
[54.59706497 205.10462952]
[47.90562057 218.52940369]
[61.07077026 225.72190857]
[73.95606232 233.40454102]
[86.54325104 241.56640625]
[98.81452179 250.19596863]
[110.75251007 259.28100586]
[122.34030914 268.80865479]
[133.56153870 278.76544189]
[144.40028381 289.13726807]
[154.84123230 299.90945435]
[164.86959839 311.06674194]
[174.47117615 322.59338379]
[183.63240051 334.47299194]
[192.34027100 346.68881226]
[200.58248901 359.22354126]
[208.34738159 372.05941772]
[215.62396240 385.17831421]
[222.40191650 398.56158447]
[228.67166138 412.19036865]
[234.42433167 426.04534912]
[239.65176392 440.10690308]
[244.34658813 454.35513306]
[248.50212097 468.76986694]
[252.11251831 483.33071899]
[255.17265320 498.01708984]
[257.67819214 512.80816650]
[259.62557983 527.68298340]
[261.01208496 542.62054443]
[261.83572388 557.59973145]
[262.09533691 572.59924316]
[261.79058838 587.59796143]
[260.92184448 602.57452393]
[259.49038696 617.50787354]
[257.49822998 632.37677002]
[254.94816589 647.16027832]
[251.84384155 661.83734131]
[248.18963623 676.38726807]
[243.99070740 690.78942871]
[239.25303650 705.02343750]
[233.98329163 719.06921387]
[228.18893433 732.90679932]
[221.87818909 746.51666260]
[215.05998230 759.87945557]
[207.74394226 772.97637939]
[199.94044495 785.78881836]
[191.66053772 798.29870605]
[182.91592407 810.48822021]
[173.71899414 822.34020996]
[164.08274841 833.83789062]
[154.02084351 844.96496582]
[143.54751587 855.70568848]
[132.67759705 866.04479980]
[121.42645264 875.96777344]
[109.81002045 885.46051025]
[97.84473419 894.50958252]
[85.54754639 903.10217285]
[72.93584442 911.22607422]
[60.02748489 918.86987305]
[46.84074402 926.02270508]
[33.39427567 932.67449951]
[19.70711899 938.81573486]
[5.79864597 944.43786621]
[-8.31145954 949.53277588]
[-22.60322571 954.09332275]
[-37.05642319 958.11309814]
[-51.65059662 961.58636475]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[100 165]
[101 164]
[102 163]
[104 162]
[105 161]
[106 160]
[109 157]
[112 154]
[113 153]
[114 152]
[115 151]
[116 150]
[120 138]
[121 137]
[122 136]
[123 135]
[125 132]
[126 131]
] def

init

% Start Annotations
100 165 0.0 0.6 colorpair
101 164 0.0 1 colorpair
102 163 0.0 1 colorpair
104 162 0.0 0.2 colorpair
105 161 0.32 0.6 colorpair
106 160 0.0 0.6 colorpair
109 157 0.16 0.2 colorpair
112 154 0.0 1 colorpair
113 153 0.16 0.2 colorpair
114 152 0.16 1 colorpair
115 151 0.16 0.6 colorpair
116 150 0.0 0.6 colorpair
120 138 0.16 1 colorpair
121 137 0.0 1 colorpair
122 136 0.16 1 colorpair
123 135 0.16 1 colorpair
125 132 0.16 0.2 colorpair
126 131 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
100 165 1 gmark
104 162 2 gmark
105 161 1 gmark
105 cmark
161 cmark
106 160 1 gmark
109 157 2 gmark
109 cmark
113 153 2 gmark
113 cmark
153 cmark
152 cmark
115 151 1 gmark
151 cmark
116 150 1 gmark
120 cmark
138 cmark
136 cmark
135 cmark
125 132 2 gmark
125 cmark
132 cmark
126 131 1 gmark

% End Annotations
showpage
end
%%EOF
