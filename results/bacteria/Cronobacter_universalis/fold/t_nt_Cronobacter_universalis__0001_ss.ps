%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 19:04:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAGAGGCUACACUGAUUAU__GUCUGUUAAUCAGUGGGCCUCGUUGGUUAAUUGAAU_AUUGACCUUCGGGGCUUUCUUCUUUCUGCCA__UCACCAUCACGGAAACACUGCCGACAGCAGGAGGCAAAAA__GCCUCAAGCGCC______\
) } def
/len { sequence length } bind def

/coor [
[31.81939125 158.59562683]
[23.74557877 147.61624146]
[17.42416954 135.54258728]
[13.00043392 122.65212250]
[10.57603550 109.24109650]
[10.20668888 95.61769867]
[11.90088177 82.09500885]
[15.61968040 68.98379517]
[2.02149677 62.65217590]
[-11.57668686 56.32055664]
[-15.46444607 61.67364883]
[-21.43131828 65.82883453]
[-29.05662155 68.01654053]
[-42.09737778 75.42860413]
[-55.13813019 82.84066772]
[-68.17888641 90.25273132]
[-81.21964264 97.66480255]
[-94.26039886 105.07686615]
[-107.30115509 112.48892975]
[-120.34190369 119.90099335]
[-133.38265991 127.31305695]
[-134.11811829 142.72288513]
[-143.08660889 155.27555847]
[-157.42633057 160.96557617]
[-172.56150818 157.97726440]
[-183.66256714 147.26420593]
[-187.18721008 132.24485779]
[-182.01072693 117.71187592]
[-169.78492737 108.30267334]
[-154.41099548 107.01967621]
[-140.79472351 114.27230072]
[-127.75397491 106.86023712]
[-114.71321869 99.44817352]
[-101.67246246 92.03610992]
[-88.63170624 84.62404633]
[-75.59095001 77.21198273]
[-62.55019760 69.79991150]
[-49.50944138 62.38784790]
[-36.46868515 54.97578430]
[-34.34764481 40.12650299]
[-44.79179382 29.35989761]
[-55.23593903 18.59329414]
[-65.68009186 7.82669115]
[-76.12423706 -2.93991256]
[-86.56838989 -13.70651627]
[-97.01253510 -24.47311974]
[-112.58409119 -24.87856102]
[-123.02256775 -35.94620895]
[-122.54008484 -50.78881073]
[-132.98423767 -61.55541229]
[-143.42837524 -72.32201385]
[-153.87252808 -83.08862305]
[-164.31668091 -93.85522461]
[-179.19114685 -90.02825928]
[-193.98197937 -94.16670227]
[-204.71052551 -105.15734100]
[-208.49084473 -120.04373169]
[-204.30606079 -134.82151794]
[-193.28186035 -145.51556396]
[-178.38368225 -149.24920654]
[-163.61907959 -145.01811218]
[-152.95965576 -133.96043396]
[-149.27272034 -119.05064392]
[-153.55007935 -104.29936981]
[-143.10592651 -93.53276825]
[-132.66177368 -82.76616669]
[-122.21762848 -71.99956512]
[-111.77347565 -61.23295975]
[-96.92307281 -61.26404190]
[-86.17784119 -50.49395370]
[-86.24593353 -34.91727066]
[-75.80178070 -24.15066528]
[-65.35763550 -13.38406181]
[-54.91348648 -2.61745787]
[-44.46933746 8.14914608]
[-34.02518845 18.91575050]
[-23.58103943 29.68235397]
[-28.96975136 15.68371868]
[-27.51185417 0.75473517]
[-19.51669121 -11.93689156]
[-6.68071747 -19.69819069]
[8.27246952 -20.88232994]
[22.17002869 -15.23805618]
[32.06311035 -3.96299648]
[35.85254669 10.55045128]
[32.73428345 25.22275162]
[23.36996269 36.94066620]
[9.74655628 43.21783066]
[-5.24506807 42.72237396]
[8.35311604 49.05399323]
[21.95129967 55.38561249]
[31.04709625 42.31516266]
[42.30625534 31.05454826]
[55.37553024 21.95706367]
[69.84487152 15.30813694]
[85.26032257 11.31637669]
[101.13822174 10.10702133]
[116.98040771 11.71801376]
[132.28984070 16.09881020]
[146.58619690 23.11196709]
[159.42092896 32.53744507]
[170.39137268 44.07953262]
[179.15330505 57.37609482]
[185.43185425 72.00995636]
[200.02622986 68.54524231]
[214.62059021 65.08052826]
[229.21496582 61.61581039]
[237.29238892 48.03160095]
[252.62985229 44.21873856]
[266.12789917 52.43933105]
[269.77838135 67.81624603]
[261.41555786 81.22663116]
[246.00090027 84.71434021]
[232.67968750 76.21018219]
[218.08531189 79.67490387]
[203.49093628 83.13961792]
[188.89656067 86.60433197]
[189.83966064 103.29808807]
[187.67506409 119.87776184]
[182.47764587 135.76983643]
[174.42718506 150.42456055]
[186.10031128 159.84466553]
[201.69879150 162.49003601]
[206.74417114 176.50408936]
[218.41728210 185.92417908]
[230.09040833 195.34428406]
[241.76351929 204.76438904]
[253.43664551 214.18449402]
[265.10974121 223.60459900]
[280.41912842 220.41754150]
[294.17083740 227.86227417]
[299.87176514 242.42364502]
[294.83010864 257.22619629]
[281.42639160 265.28063965]
[265.98941040 262.78387451]
[255.80805969 250.91485596]
[255.68965149 235.27770996]
[244.01654053 225.85760498]
[232.34341431 216.43751526]
[220.67030334 207.01741028]
[208.99719238 197.59730530]
[197.32406616 188.17720032]
[182.56053162 186.20561218]
[176.68020630 171.51777649]
[165.00709534 162.09768677]
[154.87351990 171.21054077]
[143.47889709 178.68690491]
[131.08509827 184.35496521]
[117.97692108 188.08447266]
[104.45561981 189.78970337]
[90.83192444 189.43147278]
[77.41892242 187.01803589]
[64.52484894 182.60482788]
[52.44603729 176.29327393]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 91]
[9 90]
[10 89]
[13 39]
[14 38]
[15 37]
[16 36]
[17 35]
[18 34]
[19 33]
[20 32]
[21 31]
[40 77]
[41 76]
[42 75]
[43 74]
[44 73]
[45 72]
[46 71]
[49 68]
[50 67]
[51 66]
[52 65]
[53 64]
[104 117]
[105 116]
[106 115]
[107 114]
[121 145]
[122 144]
[124 142]
[125 141]
[126 140]
[127 139]
[128 138]
[129 137]
] def

init

% Start Annotations
8 91 0.16 1 colorpair
9 90 0.0 0.6 colorpair
10 89 0.0 1 colorpair
13 39 0.0 0.6 colorpair
14 38 0.32 1 colorpair
15 37 0.16 1 colorpair
16 36 0.0 0.6 colorpair
17 35 0.16 0.6 colorpair
18 34 0.16 0.6 colorpair
19 33 0.16 1 colorpair
20 32 0.16 0.6 colorpair
21 31 0.0 0.6 colorpair
40 77 0.16 0.6 colorpair
41 76 0.0 0.6 colorpair
42 75 0.0 0.6 colorpair
43 74 0.16 1 colorpair
44 73 0.0 0.6 colorpair
45 72 0.0 1 colorpair
46 71 0.16 1 colorpair
49 68 0.16 1 colorpair
50 67 0.0 0.6 colorpair
51 66 0.0 1 colorpair
52 65 0.0 0.6 colorpair
53 64 0.16 1 colorpair
104 117 0.0 0.6 colorpair
105 116 0.0 0.6 colorpair
106 115 0.16 1 colorpair
107 114 0.16 0.6 colorpair
121 145 0.0 0.6 colorpair
122 144 0.16 1 colorpair
124 142 0.16 0.6 colorpair
125 141 0.0 0.6 colorpair
126 140 0.0 0.6 colorpair
127 139 0.0 1 colorpair
128 138 0.0 1 colorpair
129 137 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
8 cmark
91 cmark
9 90 1 gmark
13 39 1 gmark
14 cmark
38 cmark
15 cmark
37 cmark
16 36 1 gmark
17 35 1 gmark
17 cmark
35 cmark
18 34 1 gmark
18 cmark
34 cmark
19 cmark
33 cmark
20 32 1 gmark
20 cmark
32 cmark
21 31 1 gmark
40 77 1 gmark
40 cmark
41 76 1 gmark
42 75 1 gmark
43 cmark
74 cmark
44 73 1 gmark
71 cmark
49 cmark
68 cmark
50 67 1 gmark
52 65 1 gmark
53 cmark
64 cmark
104 117 1 gmark
105 116 1 gmark
106 cmark
115 cmark
107 114 1 gmark
107 cmark
121 145 1 gmark
122 cmark
144 cmark
124 142 1 gmark
124 cmark
142 cmark
125 141 1 gmark
126 140 1 gmark

% End Annotations
showpage
end
%%EOF
