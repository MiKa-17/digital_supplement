%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 18:58:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___________________________________________________________________________________________________GGGAGCUUAACGCUUC_CUGGCUUAAAAA_____AAAGUAAGCGACAGA___AAGAAGAAAGCCCCGCA_________________________________________\
) } def
/len { sequence length } bind def

/coor [
[-192.55102539 800.41845703]
[-206.90036011 804.79638672]
[-221.42475891 808.55297852]
[-236.09733582 811.68115234]
[-250.89089966 814.17523193]
[-265.77807617 816.03051758]
[-280.73126221 817.24359131]
[-295.72280884 817.81225586]
[-310.72494507 817.73541260]
[-325.70989990 817.01318359]
[-340.64987183 815.64697266]
[-355.51727295 813.63928223]
[-370.28451538 810.99377441]
[-384.92425537 807.71545410]
[-399.40942383 803.81030273]
[-413.71316528 799.28558350]
[-427.80899048 794.14965820]
[-441.67080688 788.41210938]
[-455.27294922 782.08343506]
[-468.59020996 775.17547607]
[-481.59796143 767.70092773]
[-494.27209473 759.67370605]
[-506.58914185 751.10864258]
[-518.52630615 742.02160645]
[-530.06146240 732.42944336]
[-541.17327881 722.34985352]
[-551.84112549 711.80157471]
[-562.04528809 700.80407715]
[-571.76690674 689.37774658]
[-580.98791504 677.54382324]
[-589.69122314 665.32403564]
[-597.86077881 652.74121094]
[-605.48144531 639.81854248]
[-612.53906250 626.57995605]
[-619.02062988 613.05004883]
[-624.91412354 599.25378418]
[-630.20855713 585.21673584]
[-634.89422607 570.96490479]
[-638.96234131 556.52465820]
[-642.40551758 541.92279053]
[-645.21728516 527.18627930]
[-647.39239502 512.34246826]
[-648.92694092 497.41885376]
[-649.81799316 482.44299316]
[-650.06390381 467.44268799]
[-649.66424561 452.44567871]
[-648.61981201 437.47976685]
[-646.93243408 422.57263184]
[-644.60528564 407.75189209]
[-641.64263916 393.04498291]
[-638.05004883 378.47915649]
[-633.83410645 364.08139038]
[-629.00262451 349.87832642]
[-623.56463623 335.89630127]
[-617.53009033 322.16113281]
[-610.91021729 308.69833374]
[-603.71728516 295.53277588]
[-595.96459961 282.68887329]
[-587.66650391 270.19039917]
[-578.83837891 258.06051636]
[-569.49658203 246.32165527]
[-559.65844727 234.99557495]
[-549.34210205 224.10324097]
[-538.56671143 213.66481018]
[-527.35217285 203.69964600]
[-515.71929932 194.22616577]
[-503.68966675 185.26194763]
[-491.28549194 176.82356262]
[-478.52975464 168.92663574]
[-465.44610596 161.58581543]
[-452.05874634 154.81468201]
[-438.39245605 148.62576294]
[-424.47256470 143.03053284]
[-410.32485962 138.03935242]
[-395.97549438 133.66145325]
[-381.45108032 129.90495300]
[-366.77850342 126.77680969]
[-351.98492432 124.28280640]
[-337.09774780 122.42756653]
[-322.14453125 121.21452332]
[-307.15298462 120.64591980]
[-292.15084839 120.72281647]
[-277.16592407 121.44507599]
[-262.22592163 122.81134033]
[-247.35855103 124.81909943]
[-232.59132385 127.46463013]
[-217.95158386 130.74302673]
[-203.46644592 134.64822388]
[-189.16271973 139.17298889]
[-175.06690979 144.30894470]
[-161.20510864 150.04656982]
[-147.60299683 156.37525940]
[-134.28573608 163.28327942]
[-121.27801514 170.75784302]
[-108.60391235 178.78511047]
[-96.28689575 187.35020447]
[-84.34976959 196.43728638]
[-72.81464386 206.02951050]
[-61.70287704 216.10911560]
[-51.03504562 226.65745544]
[-40.03926849 216.45486450]
[-29.04349136 206.25227356]
[-26.27816582 199.39782715]
[-17.80607414 195.98081970]
[-6.65890169 185.94386292]
[4.48827076 175.90690613]
[15.63544273 165.86994934]
[26.78261566 155.83297729]
[37.92978668 145.79602051]
[38.45042038 130.95471191]
[49.61225891 120.61701202]
[65.17565918 121.26373291]
[76.32283020 111.22676849]
[87.47000885 101.18981171]
[98.38916016 90.90525818]
[102.30672455 82.65267944]
[109.31427765 80.30223083]
[120.15619659 69.93629456]
[130.99812317 59.57035065]
[141.84004211 49.20441055]
[152.68196106 38.83847046]
[163.52389526 28.47253227]
[174.36581421 18.10659218]
[174.88395691 2.53837848]
[186.02687073 -7.81971121]
[200.86560059 -7.22979593]
[211.70751953 -17.59573555]
[208.66639709 -32.72038651]
[214.30632019 -47.07987213]
[226.82760620 -56.09213257]
[242.23477173 -56.88138580]
[255.61143494 -49.19578552]
[262.68914795 -35.48778152]
[261.20944214 -20.13154221]
[251.64450073 -8.02719212]
[237.04644775 -3.03718495]
[222.07345581 -6.75381279]
[211.23153687 3.61212707]
[211.15512085 18.46237183]
[200.30754089 29.12935638]
[184.73175049 28.94851494]
[173.88983154 39.31445312]
[163.04791260 49.68039322]
[152.20597839 60.04633331]
[141.36405945 70.41227722]
[130.52214050 80.77821350]
[119.68021393 91.14414978]
[108.91613007 101.59089661]
[108.34111786 105.40513611]
[106.08726501 108.94725800]
[102.31388855 111.47299957]
[97.50696564 112.33698273]
[86.35979462 122.37393951]
[75.21262360 132.41090393]
[74.22897339 147.95664978]
[62.78117752 157.97676086]
[47.96674728 156.94319153]
[36.81957626 166.98016357]
[25.67240143 177.01712036]
[14.52522945 187.05407715]
[3.37805724 197.09103394]
[-7.76911497 207.12799072]
[-18.84090042 217.24804688]
[-29.83667755 227.45063782]
[-40.83245468 237.65322876]
[-31.11082649 249.07951355]
[-21.88978195 260.91345215]
[-13.18640041 273.13314819]
[-5.01679468 285.71597290]
[2.60390449 298.63864136]
[9.66158581 311.87716675]
[16.14318085 325.40710449]
[22.03668594 339.20333862]
[27.33118820 353.24038696]
[32.01688385 367.49218750]
[36.08509445 381.93240356]
[39.52828979 396.53424072]
[42.34009171 411.27072144]
[44.51529312 426.11453247]
[46.04986572 441.03817749]
[46.94096756 456.01400757]
[47.18695068 471.01431274]
[46.78735733 486.01132202]
[45.74292755 500.97726440]
[44.05559921 515.88439941]
[41.72849274 530.70513916]
[38.76591873 545.41204834]
[35.17336273 559.97790527]
[30.95747948 574.37567139]
[26.12607193 588.57873535]
[20.68809128 602.56085205]
[14.65360355 616.29602051]
[8.03378487 629.75885010]
[0.84089333 642.92437744]
[-6.91175079 655.76831055]
[-15.20979214 668.26684570]
[-24.03786469 680.39672852]
[-33.37961960 692.13562012]
[-43.21775818 703.46173096]
[-53.53406525 714.35412598]
[-64.30943298 724.79260254]
[-75.52391052 734.75781250]
[-87.15673065 744.23132324]
[-99.18635559 753.19555664]
[-111.59049988 761.63397217]
[-124.34620667 769.53094482]
[-137.42984009 776.87182617]
[-150.81718445 783.64300537]
[-164.48344421 789.83197021]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[100 165]
[101 164]
[102 163]
[104 162]
[105 161]
[106 160]
[107 159]
[108 158]
[109 157]
[112 154]
[113 153]
[114 152]
[115 148]
[117 147]
[118 146]
[119 145]
[120 144]
[121 143]
[122 142]
[123 141]
[126 138]
[127 137]
] def

init

% Start Annotations
100 165 0.0 0.6 colorpair
101 164 0.0 1 colorpair
102 163 0.0 1 colorpair
104 162 0.0 1 colorpair
105 161 0.16 1 colorpair
106 160 0.0 1 colorpair
107 159 0.0 1 colorpair
108 158 0.0 0.6 colorpair
109 157 0.0 0.6 colorpair
112 154 0.0 1 colorpair
113 153 0.16 1 colorpair
114 152 0.16 1 colorpair
115 148 0.0 0.6 colorpair
117 147 0.0 1 colorpair
118 146 0.0 0.6 colorpair
119 145 0.0 1 colorpair
120 144 0.16 1 colorpair
121 143 0.0 1 colorpair
122 142 0.0 0.6 colorpair
123 141 0.0 1 colorpair
126 138 0.16 1 colorpair
127 137 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
100 165 1 gmark
105 cmark
161 cmark
108 158 1 gmark
109 157 1 gmark
153 cmark
152 cmark
115 148 1 gmark
118 146 1 gmark
120 cmark
144 cmark
122 142 1 gmark
126 cmark
127 137 1 gmark

% End Annotations
showpage
end
%%EOF
