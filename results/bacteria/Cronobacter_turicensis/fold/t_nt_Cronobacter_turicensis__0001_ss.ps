%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 19:03:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAGAGGCUACGCUGAUGAUGUUCAGGCAUGCAGAUGGCCUCGUUGGUUAAUUGAAAA_AUUACCUU__CGGGGCUUUCUUCUUUCUGCCACAC_ACAAUGCGACACAAC_UGCCAACAGCAGGAGGCAAAAA__GCCUCAAGCGCC______\
) } def
/len { sequence length } bind def

/coor [
[99.98377228 234.08488464]
[112.25785828 224.94129944]
[109.85169220 210.13554382]
[97.65406036 201.66481018]
[95.00294495 186.68394470]
[103.97054291 173.94737244]
[101.56436920 159.14161682]
[99.15820312 144.33587646]
[96.75202942 129.53012085]
[94.34586334 114.72436523]
[96.61824799 129.55123901]
[95.05619049 144.46968079]
[89.76181793 158.50427246]
[81.08129883 170.73736572]
[69.58219147 180.36911011]
[56.01636887 186.76976013]
[41.27080154 189.52081299]
[26.30961800 188.44238281]
[12.11103821 183.60499573]
[-0.39657986 175.32493591]
[-10.39544010 164.14356995]
[-17.23177910 150.79200745]
[-20.45860863 136.14318848]
[-19.86494637 121.15494537]
[-15.48961067 106.80725098]
[-7.61867523 94.03820801]
[3.23322654 83.68271637]
[16.35655594 76.41785431]
[30.89325714 72.71862793]
[45.89286804 72.82689667]
[60.37464905 76.73559570]
[73.39173126 84.18915558]
[84.09072876 94.69732666]
[73.48412323 84.09072876]
[62.87752151 73.48412323]
[52.27091980 62.87752151]
[41.66431808 52.27091980]
[31.05771637 41.66431808]
[20.45111465 31.05771637]
[9.84451294 20.45111465]
[-0.76208842 9.84451294]
[-11.36869049 -0.76208842]
[-21.97529221 -11.36869049]
[-32.58189392 -21.97529221]
[-43.18849564 -32.58189392]
[-62.07343292 -31.82327271]
[-75.33139038 -44.84363556]
[-74.92818451 -63.10369492]
[-85.95326996 -73.27461243]
[-96.97835541 -83.44552612]
[-110.76184845 -77.03586578]
[-125.94921875 -76.39381409]
[-140.22450256 -81.61728668]
[-151.41082764 -91.90974426]
[-157.80235291 -105.70165253]
[-158.42442322 -120.88985443]
[-153.18217468 -135.15826416]
[-142.87501526 -146.33102417]
[-129.07470703 -152.70440674]
[-113.88569641 -153.30650330]
[-99.62419891 -148.04548645]
[-88.46499634 -137.72363281]
[-82.10977936 -123.91495514]
[-81.52767181 -108.72517395]
[-86.80744171 -94.47061157]
[-75.78235626 -84.29969788]
[-64.75727081 -74.12878418]
[-53.66109085 -77.05634308]
[-42.41995239 -74.20913696]
[-33.87995148 -66.18783569]
[-30.26130295 -54.91796494]
[-32.58189392 -43.18849564]
[-21.97529221 -32.58189392]
[-11.36869049 -21.97529221]
[-0.76208842 -11.36869049]
[9.84451294 -0.76208842]
[20.45111465 9.84451294]
[31.05771637 20.45111465]
[41.66431808 31.05771637]
[52.27091980 41.66431808]
[62.87752151 52.27091980]
[73.48412323 62.87752151]
[84.09072876 73.48412323]
[94.69732666 84.09072876]
[109.22457123 87.82692719]
[123.63233948 83.65366364]
[138.04011536 79.48040009]
[149.14277649 68.20913696]
[163.52020264 72.10000610]
[177.92797852 67.92674255]
[192.33575439 63.75347900]
[206.74351501 59.58021545]
[221.15129089 55.40695572]
[235.55906677 51.23369217]
[249.96682739 47.06043243]
[250.71301270 33.57990265]
[255.58351135 21.01235771]
[264.08758545 10.58496952]
[275.38040161 3.31124783]
[288.34707642 -0.10747956]
[301.71252441 0.65033901]
[314.16705322 5.49628687]
[324.49453735 13.94203281]
[331.69134521 25.14850426]
[346.25549316 21.55876923]
[360.81961060 17.96903419]
[375.38372803 14.37930012]
[382.11364746 0.26397851]
[396.36358643 -6.17600775]
[411.40515137 -1.89989424]
[420.13619995 11.07326889]
[418.43417358 26.61795044]
[407.10272217 37.39442825]
[391.49221802 38.31437683]
[378.97348022 28.94342804]
[364.40933228 32.53316116]
[349.84521484 36.12289810]
[335.28109741 39.71263123]
[333.18518066 56.18162155]
[324.92742920 70.62622070]
[311.74096680 80.83281708]
[295.61682129 85.22493744]
[279.00305176 83.10668945]
[264.43322754 74.77284241]
[254.14009094 61.46820450]
[239.73233032 65.64146423]
[225.32455444 69.81472778]
[210.91677856 73.98799133]
[196.50900269 78.16124725]
[182.10124207 82.33451080]
[167.69346619 86.50777435]
[157.62133789 97.48053741]
[142.21337891 93.88817596]
[127.80560303 98.06143188]
[113.39783478 102.23469543]
[112.93434906 105.78843689]
[111.50962830 109.23741150]
[109.15161896 112.31819153]
[111.55778503 127.12394714]
[113.96395874 141.92970276]
[116.37012482 156.73545837]
[118.77629089 171.54121399]
[131.31564331 180.78254700]
[133.54492188 195.83197021]
[124.65744019 207.72937012]
[127.06361389 222.53512573]
[141.60151672 227.32135010]
[152.24159241 238.32350159]
[156.53881836 253.01338196]
[153.50573730 268.01535034]
[143.83932495 279.88204956]
[129.76083374 285.88665771]
[114.50543213 284.64929199]
[101.57867432 276.45431519]
[93.95103455 263.18487549]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 146]
[3 145]
[6 142]
[7 141]
[8 140]
[9 139]
[10 138]
[33 84]
[34 83]
[35 82]
[36 81]
[37 80]
[38 79]
[39 78]
[40 77]
[41 76]
[42 75]
[43 74]
[44 73]
[45 72]
[48 67]
[49 66]
[50 65]
[85 135]
[86 134]
[87 133]
[89 131]
[90 130]
[91 129]
[92 128]
[93 127]
[94 126]
[95 125]
[104 118]
[105 117]
[106 116]
[107 115]
] def

init

% Start Annotations
2 146 0.16 1 colorpair
3 145 0.16 1 colorpair
6 142 0.0 0.6 colorpair
7 141 0.0 0.6 colorpair
8 140 0.0 0.6 colorpair
9 139 0.0 0.6 colorpair
10 138 0.0 1 colorpair
33 84 0.0 0.2 colorpair
34 83 0.16 0.2 colorpair
35 82 0.0 0.6 colorpair
36 81 0.16 1 colorpair
37 80 0.0 0.2 colorpair
38 79 0.16 0.2 colorpair
39 78 0.16 0.6 colorpair
40 77 0.0 1 colorpair
41 76 0.0 0.6 colorpair
42 75 0.0 0.6 colorpair
43 74 0.16 1 colorpair
44 73 0.0 0.6 colorpair
45 72 0.0 0.6 colorpair
48 67 0.16 1 colorpair
49 66 0.0 0.6 colorpair
50 65 0.16 1 colorpair
85 135 0.16 1 colorpair
86 134 0.16 1 colorpair
87 133 0.0 1 colorpair
89 131 0.0 0.6 colorpair
90 130 0.0 1 colorpair
91 129 0.0 0.6 colorpair
92 128 0.0 0.6 colorpair
93 127 0.0 0.2 colorpair
94 126 0.16 0.6 colorpair
95 125 0.16 1 colorpair
104 118 0.16 0.6 colorpair
105 117 0.16 0.6 colorpair
106 116 0.16 1 colorpair
107 115 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
2 cmark
146 cmark
3 cmark
145 cmark
6 142 1 gmark
7 141 1 gmark
8 140 1 gmark
9 139 1 gmark
33 84 2 gmark
34 83 2 gmark
34 cmark
83 cmark
35 82 1 gmark
36 cmark
81 cmark
37 80 2 gmark
38 79 2 gmark
38 cmark
79 cmark
39 78 1 gmark
39 cmark
41 76 1 gmark
42 75 1 gmark
74 cmark
44 73 1 gmark
45 72 1 gmark
48 cmark
67 cmark
49 66 1 gmark
50 cmark
65 cmark
85 cmark
135 cmark
134 cmark
89 131 1 gmark
91 129 1 gmark
92 128 1 gmark
93 127 2 gmark
94 126 1 gmark
94 cmark
95 cmark
125 cmark
104 118 1 gmark
104 cmark
118 cmark
105 117 1 gmark
105 cmark
117 cmark
106 cmark
116 cmark
107 115 1 gmark
107 cmark

% End Annotations
showpage
end
%%EOF
