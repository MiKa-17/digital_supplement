%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 19:03:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______UCUGGUGCGUAUUAAUCGUAUGUAUAACGCUGUUAAUAUUCACAUUCCUGACGCGUAAUUCGCUGUGCGAACUACG_CUGAAGGACGGGCAAAGGGAGUUUGCUGCGUUUCUGGCUUACGAAUCCGGUAAGUAGCAACCUG__GGGCGGGGGAAACCCCGCCUUUUCAGG___G__GA_G_UG______GC_UU_______C_AGCGCCUUUAU_A_G_G__G_\
) } def
/len { sequence length } bind def

/coor [
[-64.37913513 934.28717041]
[-79.27164459 936.09454346]
[-94.22159576 937.34045410]
[-109.20783234 938.02319336]
[-124.20914459 938.14166260]
[-139.20429993 937.69586182]
[-154.17207336 936.68627930]
[-169.09127808 935.11437988]
[-183.94079590 932.98242188]
[-198.69960022 930.29345703]
[-213.34683228 927.05114746]
[-227.86172485 923.26025391]
[-242.22377014 918.92602539]
[-256.41259766 914.05468750]
[-270.40817261 908.65301514]
[-284.19064331 902.72875977]
[-297.74050903 896.29028320]
[-311.03860474 889.34667969]
[-324.06613159 881.90777588]
[-336.80459595 873.98406982]
[-349.23602295 865.58685303]
[-361.34277344 856.72796631]
[-373.10772705 847.41992188]
[-384.51422119 837.67596436]
[-395.54614258 827.50982666]
[-406.18786621 816.93591309]
[-416.42428589 805.96923828]
[-426.24096680 794.62524414]
[-435.62402344 782.92004395]
[-444.56011963 770.87017822]
[-453.03662109 758.49267578]
[-461.04156494 745.80511475]
[-468.56359863 732.82543945]
[-475.59210205 719.57196045]
[-482.11706543 706.06353760]
[-488.12930298 692.31921387]
[-493.62030029 678.35845947]
[-498.58227539 664.20104980]
[-503.00820923 649.86700439]
[-506.89181519 635.37664795]
[-510.22766113 620.75042725]
[-513.01092529 606.00909424]
[-515.23779297 591.17352295]
[-516.90496826 576.26470947]
[-518.01019287 561.30364990]
[-518.55187988 546.31164551]
[-518.52929688 531.30993652]
[-517.94238281 516.31964111]
[-516.79205322 501.36199951]
[-515.07989502 486.45825195]
[-512.80834961 471.62945557]
[-509.98065186 456.89657593]
[-506.60076904 442.28048706]
[-502.67346191 427.80191040]
[-498.20434570 413.48126221]
[-493.19970703 399.33889771]
[-487.66665649 385.39477539]
[-481.61300659 371.66864014]
[-475.04733276 358.17993164]
[-467.97894287 344.94772339]
[-460.41781616 331.99075317]
[-452.37466431 319.32739258]
[-443.86083984 306.97552490]
[-434.88845825 294.95263672]
[-425.47018433 283.27575684]
[-415.61935425 271.96142578]
[-405.34988403 261.02563477]
[-394.67636108 250.48385620]
[-383.61383057 240.35102844]
[-372.17800903 230.64149475]
[-360.38504028 221.36898804]
[-348.25164795 212.54663086]
[-335.79495239 204.18692017]
[-323.03265381 196.30168152]
[-309.98278809 188.90208435]
[-296.66381836 181.99858093]
[-283.09457397 175.60096741]
[-269.29431152 169.71829224]
[-255.28253174 164.35887146]
[-241.07907104 159.53028870]
[-226.70404053 155.23939514]
[-212.17776489 151.49224854]
[-197.52084351 148.29417419]
[-182.75398254 145.64967346]
[-167.89810181 143.56250000]
[-152.97422791 142.03561401]
[-138.00349426 141.07116699]
[-123.00705719 140.67051697]
[-108.00617218 140.83425903]
[-93.02206421 141.56213379]
[-78.07593536 142.85311890]
[-63.18894196 144.70539856]
[-48.38216019 147.11633301]
[-33.67654419 150.08251953]
[-19.09291077 153.59976196]
[-4.65189743 157.66307068]
[9.62605381 162.26670837]
[23.72073555 167.40415955]
[37.61219788 173.06814575]
[51.28077698 179.25064087]
[57.97222137 165.82586670]
[64.66366577 152.40109253]
[64.83421326 145.02301025]
[71.53849030 138.84017944]
[78.41188812 125.50764465]
[85.28528595 112.17511749]
[80.97351074 98.34201050]
[87.61299133 85.46321106]
[101.38218689 80.95148468]
[96.80020905 66.06379700]
[103.96073914 52.64062881]
[118.18211365 48.36416626]
[125.05551147 35.03163528]
[131.92890930 21.69910431]
[138.80230713 8.36657238]
[145.67570496 -4.96595955]
[133.98088074 -24.15848351]
[136.27101135 -46.38709259]
[151.45745850 -62.60419846]
[173.23440552 -66.30381775]
[178.61944580 -80.30386353]
[184.00448608 -94.30391693]
[189.38952637 -108.30396271]
[194.77456665 -122.30400848]
[200.15960693 -136.30406189]
[192.42987061 -149.89762878]
[195.29714966 -165.27009583]
[207.40760803 -175.16305542]
[223.04307556 -174.90534973]
[234.82093811 -164.61866760]
[237.18006897 -149.16006470]
[229.00654602 -135.82861328]
[214.15966797 -130.91902161]
[208.77462769 -116.91896820]
[203.38958740 -102.91892242]
[198.00454712 -88.91887665]
[192.61950684 -74.91882324]
[187.23446655 -60.91877747]
[193.44311523 -55.73670959]
[198.28536987 -49.23990631]
[201.48968506 -41.78045654]
[202.87353516 -33.76473618]
[202.35375977 -25.63130379]
[199.95159912 -17.82687187]
[195.79183960 -10.78179550]
[190.09642029 -4.88633108]
[183.17254639 -0.46902651]
[175.39619446 2.22158813]
[167.19160461 3.03097320]
[159.00823975 1.90743816]
[152.13484192 15.23997021]
[145.26144409 28.57250214]
[138.38804626 41.90503311]
[131.51464844 55.23756409]
[136.28034973 69.30254364]
[129.49967957 82.92153931]
[114.71471405 87.82488251]
[119.02648926 101.65798950]
[112.38700867 114.53678894]
[98.61781311 119.04851532]
[91.74441528 132.38104248]
[84.87101746 145.71357727]
[78.08843994 159.09254456]
[71.39699554 172.51731873]
[64.70555115 185.94209290]
[77.87070465 193.13459778]
[90.75598907 200.81721497]
[103.34317780 208.97908020]
[115.61444855 217.60864258]
[127.55243683 226.69367981]
[139.14024353 236.22132874]
[150.36146545 246.17811584]
[161.20021057 256.54995728]
[171.64115906 267.32214355]
[181.66952515 278.47943115]
[191.27111816 290.00604248]
[200.43232727 301.88568115]
[209.14019775 314.10150146]
[217.38241577 326.63623047]
[225.14730835 339.47210693]
[232.42388916 352.59097290]
[239.20184326 365.97427368]
[245.47160339 379.60305786]
[251.22425842 393.45803833]
[256.45169067 407.51959229]
[261.14651489 421.76782227]
[265.30206299 436.18255615]
[268.91244507 450.74340820]
[271.97256470 465.42977905]
[274.47811890 480.22082520]
[276.42550659 495.09567261]
[277.81201172 510.03326416]
[278.63565063 525.01239014]
[278.89529419 540.01196289]
[278.59051514 555.01062012]
[277.72177124 569.98724365]
[276.29031372 584.92053223]
[274.29815674 599.78948975]
[271.74810791 614.57293701]
[268.64376831 629.25000000]
[264.98956299 643.79992676]
[260.79064941 658.20208740]
[256.05294800 672.43615723]
[250.78321838 686.48187256]
[244.98887634 700.31945801]
[238.67813110 713.92932129]
[231.85990906 727.29217529]
[224.54388428 740.38903809]
[216.74038696 753.20153809]
[208.46046448 765.71136475]
[199.71585083 777.90093994]
[190.51892090 789.75292969]
[180.88269043 801.25054932]
[170.82078552 812.37762451]
[160.34745789 823.11834717]
[149.47752380 833.45751953]
[138.22637939 843.38043213]
[126.60994720 852.87316895]
[114.64466858 861.92224121]
[102.34747314 870.51483154]
[89.73577881 878.63879395]
[76.82741547 886.28259277]
[63.64067459 893.43542480]
[50.19420624 900.08715820]
[36.50704956 906.22845459]
[22.59857750 911.85052490]
[8.48847198 916.94543457]
[-5.80329370 921.50604248]
[-20.25649071 925.52575684]
[-34.85066223 928.99902344]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[100 165]
[101 164]
[102 163]
[104 162]
[105 161]
[106 160]
[109 157]
[112 154]
[113 153]
[114 152]
[115 151]
[116 150]
[120 138]
[121 137]
[122 136]
[123 135]
[124 134]
[125 133]
] def

init

% Start Annotations
100 165 0.0 0.6 colorpair
101 164 0.0 1 colorpair
102 163 0.0 1 colorpair
104 162 0.0 1 colorpair
105 161 0.32 0.6 colorpair
106 160 0.0 0.6 colorpair
109 157 0.16 0.2 colorpair
112 154 0.0 1 colorpair
113 153 0.16 0.2 colorpair
114 152 0.16 1 colorpair
115 151 0.16 0.6 colorpair
116 150 0.16 0.6 colorpair
120 138 0.16 1 colorpair
121 137 0.0 1 colorpair
122 136 0.0 1 colorpair
123 135 0.16 1 colorpair
124 134 0.0 0.2 colorpair
125 133 0.16 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
100 165 1 gmark
105 161 1 gmark
105 cmark
161 cmark
106 160 1 gmark
109 157 2 gmark
109 cmark
113 153 2 gmark
113 cmark
153 cmark
152 cmark
115 151 1 gmark
151 cmark
116 150 1 gmark
150 cmark
120 cmark
138 cmark
135 cmark
124 134 2 gmark
125 133 2 gmark
125 cmark

% End Annotations
showpage
end
%%EOF
