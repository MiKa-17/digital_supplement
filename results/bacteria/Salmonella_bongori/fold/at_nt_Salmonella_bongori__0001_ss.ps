%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 07:34:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______________________________________________AAACACGUACACUACUCCUGUUGAAAUAACA_AGUGUGUUUAGCGGCGACCACCCGCAUCACAACGUAAAAACCGCGCU_______________\
) } def
/len { sequence length } bind def

/coor [
[91.41253662 442.06170654]
[79.39725494 451.04129028]
[66.65915680 458.96218872]
[53.29127121 465.76660156]
[39.39123535 471.40475464]
[25.06056404 475.83554077]
[10.40391636 479.02658081]
[-4.47166491 480.95455933]
[-19.45753860 481.60537720]
[-34.44425964 480.97433472]
[-49.32237244 479.06600952]
[-63.98321915 475.89431763]
[-78.31972504 471.48245239]
[-92.22719574 465.86264038]
[-105.60404205 459.07589722]
[-118.35258484 451.17181396]
[-130.37971497 442.20809937]
[-141.59759521 432.25021362]
[-151.92428589 421.37091064]
[-161.28437805 409.64962769]
[-169.60951233 397.17193604]
[-176.83889771 384.02902222]
[-182.91970825 370.31686401]
[-187.80755615 356.13558960]
[-191.46673584 341.58874512]
[-193.87052917 326.78259277]
[-195.00137329 311.82528687]
[-194.85101318 296.82604980]
[-193.42054749 281.89440918]
[-190.72042847 267.13943481]
[-186.77035522 252.66886902]
[-181.59919739 238.58842468]
[-175.24472046 225.00091553]
[-167.75332642 212.00556946]
[-159.17971802 199.69729614]
[-149.58653259 188.16601562]
[-139.04380798 177.49591064]
[-127.62857056 167.76490784]
[-115.42416382 159.04411316]
[-102.51972961 151.39717102]
[-89.00951385 144.87995911]
[-74.99217987 139.54006958]
[-60.57010651 135.41650391]
[-45.84862518 132.53936768]
[-30.93524551 130.92967224]
[-15.93888664 130.59918213]
[-0.96907169 131.55030823]
[13.86487007 133.77610779]
[28.45460320 137.26031494]
[42.69357300 141.97749329]
[56.47778702 147.89318848]
[69.70657349 154.96418762]
[82.28332520 163.13887024]
[94.11048126 172.35267639]
[93.77629852 157.35639954]
[93.44210815 142.36012268]
[93.10792542 127.36383820]
[92.77374268 112.36756134]
[85.67961121 100.31912231]
[92.22998047 87.96662140]
[91.89579773 72.97034454]
[91.39456940 57.97872162]
[90.72637177 42.99361038]
[90.05816650 28.00850296]
[89.38996124 13.02339268]
[88.72176361 -1.96171629]
[88.05355835 -16.94682503]
[78.77819061 -30.47086525]
[86.09581757 -45.14684677]
[102.47868347 -45.87737656]
[111.07350922 -31.91094971]
[103.03866577 -17.61502838]
[103.70687103 -2.62991905]
[104.37506866 12.35519028]
[105.04327393 27.34029961]
[105.71147919 42.32540894]
[106.37968445 57.31052017]
[109.84802246 63.90582275]
[106.89207458 72.63616180]
[107.22625732 87.63243866]
[114.32038879 99.68087769]
[107.77001953 112.03337860]
[108.10420227 127.02965546]
[108.43838501 142.02592468]
[108.77257538 157.02220154]
[109.10675812 172.01847839]
[109.62688446 172.49468994]
[110.11691284 172.99543762]
[125.11598206 172.82832336]
[140.11505127 172.66122437]
[155.11412048 172.49412537]
[170.11318970 172.32702637]
[185.11225891 172.15991211]
[200.11132812 171.99281311]
[215.11039734 171.82571411]
[230.10946655 171.65861511]
[245.10853577 171.49150085]
[260.10760498 171.32440186]
[275.10665894 171.15730286]
[290.10574341 170.99020386]
[305.10479736 170.82310486]
[313.97494507 158.09123230]
[328.64562988 153.03648376]
[343.47570801 157.60252380]
[352.76269531 170.03359985]
[352.93554688 185.54971313]
[343.92782593 198.18460083]
[329.20315552 203.07989502]
[314.42349243 198.35325623]
[305.27191162 185.82217407]
[290.27285767 185.98927307]
[275.27377319 186.15637207]
[260.27471924 186.32347107]
[245.27563477 186.49057007]
[230.27656555 186.65768433]
[215.27749634 186.82478333]
[200.27842712 186.99188232]
[185.27935791 187.15898132]
[170.28028870 187.32609558]
[155.28121948 187.49319458]
[140.28215027 187.66029358]
[125.28308105 187.82739258]
[110.28401184 187.99450684]
[119.89241791 199.51312256]
[128.48225403 211.81005859]
[135.99079895 224.79550171]
[142.36320496 238.37461853]
[147.55294800 252.44822693]
[151.52210999 266.91354370]
[154.24171448 281.66494751]
[155.69189453 296.59469604]
[155.86204529 311.59371948]
[154.75094604 326.55252075]
[152.36669922 341.36181641]
[148.72671509 355.91348267]
[143.85758972 370.10119629]
[137.79487610 383.82138062]
[130.58285522 396.97381592]
[122.27420044 409.46246338]
[112.92958832 421.19610596]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[54 86]
[55 85]
[56 84]
[57 83]
[58 82]
[60 80]
[61 79]
[62 77]
[63 76]
[64 75]
[65 74]
[66 73]
[67 72]
[88 123]
[89 122]
[90 121]
[91 120]
[92 119]
[93 118]
[94 117]
[95 116]
[96 115]
[97 114]
[98 113]
[99 112]
[100 111]
[101 110]
] def

init

% Start Annotations
54 86 0.16 0.2 colorpair
55 85 0.32 1 colorpair
56 84 0.16 1 colorpair
57 83 0.0 0.2 colorpair
58 82 0.0 1 colorpair
60 80 0.16 1 colorpair
61 79 0.16 0.2 colorpair
62 77 0.16 1 colorpair
63 76 0.16 1 colorpair
64 75 0.0 0.2 colorpair
65 74 0.0 1 colorpair
66 73 0.16 0.6 colorpair
67 72 0.0 1 colorpair
88 123 0.0 0.2 colorpair
89 122 0.0 1 colorpair
90 121 0.0 0.2 colorpair
91 120 0.0 1 colorpair
92 119 0.16 1 colorpair
93 118 0.0 0.2 colorpair
94 117 0.16 1 colorpair
95 116 0.0 0.2 colorpair
96 115 0.16 0.2 colorpair
97 114 0.16 0.2 colorpair
98 113 0.16 0.6 colorpair
99 112 0.16 1 colorpair
100 111 0.0 0.2 colorpair
101 110 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
54 86 2 gmark
54 cmark
55 cmark
85 cmark
56 cmark
57 83 2 gmark
60 cmark
80 cmark
61 79 2 gmark
79 cmark
77 cmark
63 cmark
76 cmark
64 75 2 gmark
66 73 1 gmark
66 cmark
88 123 2 gmark
90 121 2 gmark
92 cmark
119 cmark
93 118 2 gmark
94 cmark
117 cmark
95 116 2 gmark
96 115 2 gmark
96 cmark
115 cmark
97 114 2 gmark
114 cmark
98 113 1 gmark
98 cmark
113 cmark
99 cmark
100 111 2 gmark
101 110 2 gmark

% End Annotations
showpage
end
%%EOF
