%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 06:53:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___U__UUU___G__UA_U__U__U_UGU_U_AC_CU__UG___UU_A___GGAUCGCACAUGGAUAUCUGUGUGAAAUACAAAUUAAGAACGGAAAAAAAGAGGUUGCCGCACU_UUA__CUACG_A__UAA___G_A_G_G___U_ACG_C_A__U_U__C___A_______________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[76.70417023 522.92938232]
[63.87811661 522.02740479]
[51.08535004 520.73663330]
[38.33765411 519.05810547]
[25.64677620 516.99346924]
[13.02441502 514.54455566]
[0.48219669 511.71368408]
[-11.96831894 508.50341797]
[-24.31566048 504.91671753]
[-36.54845047 500.95693970]
[-48.65541458 496.62768555]
[-60.62540054 491.93292236]
[-72.44738007 486.87704468]
[-84.11045074 481.46466064]
[-95.60386658 475.70077515]
[-106.91704559 469.59069824]
[-118.03956604 463.14004517]
[-128.96116638 456.35476685]
[-139.67178345 449.24114990]
[-150.16156006 441.80569458]
[-160.42080688 434.05529785]
[-170.44009399 425.99707031]
[-180.21018982 417.63845825]
[-189.72207642 408.98715210]
[-198.96699524 400.05111694]
[-207.93643188 390.83862305]
[-216.62211609 381.35809326]
[-225.01603699 371.61834717]
[-233.11047363 361.62826538]
[-240.89796448 351.39712524]
[-248.37132263 340.93435669]
[-255.52368164 330.24954224]
[-262.34841919 319.35256958]
[-268.83929443 308.25347900]
[-274.99029541 296.96249390]
[-280.79574585 285.49002075]
[-286.25030518 273.84661865]
[-291.34896851 262.04302979]
[-296.08697510 250.09010315]
[-300.46005249 237.99888611]
[-304.46411133 225.78051758]
[-308.09545898 213.44622803]
[-311.35076904 201.00741577]
[-314.22702026 188.47552490]
[-316.72158813 175.86212158]
[-318.83215332 163.17880249]
[-320.55679321 150.43725586]
[-321.89392090 137.64924622]
[-322.84228516 124.82654572]
[-323.40100098 111.98096466]
[-323.56958008 99.12434387]
[-323.34783936 86.26852417]
[-322.73602295 73.42536163]
[-321.73464966 60.60668945]
[-320.34466553 47.82431793]
[-318.56735229 35.09001923]
[-316.40435791 22.41553497]
[-313.85766602 9.81254101]
[-310.92959595 -2.70734811]
[-307.62289429 -15.13259697]
[-303.94058228 -27.45175552]
[-299.88604736 -39.65347290]
[-295.46304321 -51.72650146]
[-290.67562866 -63.65972519]
[-285.52819824 -75.44213867]
[-280.02554321 -87.06288910]
[-274.17269897 -98.51126862]
[-267.97509766 -109.77673340]
[-261.43838501 -120.84889221]
[-254.56864929 -131.71754456]
[-247.37217712 -142.37268066]
[-259.51983643 -151.17236328]
[-271.66751099 -159.97203064]
[-283.81515503 -168.77171326]
[-295.96282959 -177.57138062]
[-311.96798706 -176.46940613]
[-322.70193481 -188.39257812]
[-319.93051147 -204.19442749]
[-305.77972412 -211.75315857]
[-291.10482788 -205.27033997]
[-287.16314697 -189.71903992]
[-275.01550293 -180.91937256]
[-262.86782837 -172.11968994]
[-250.72015381 -163.32002258]
[-238.57249451 -154.52035522]
[-217.61555481 -180.23616028]
[-194.71038818 -204.23301697]
[-169.99749756 -226.36373901]
[-143.62846375 -246.49258423]
[-115.76504517 -264.49606323]
[-86.57814026 -280.26379395]
[-56.24678040 -293.69897461]
[-24.95701790 -304.71926880]
[-29.12767601 -319.12780762]
[-33.29833603 -333.53631592]
[-37.46899796 -347.94485474]
[-41.63965607 -362.35336304]
[-56.27937317 -367.49713135]
[-65.07201385 -380.28262329]
[-64.63661194 -395.79360962]
[-55.14060974 -408.06573486]
[-40.23539734 -412.38018799]
[-25.65233994 -407.07791138]
[-16.99891853 -394.19775391]
[-17.60255241 -378.69244385]
[-27.23113060 -366.52401733]
[-23.06047058 -352.11550903]
[-18.88981056 -337.70697021]
[-14.71915150 -323.29846191]
[-10.54849243 -308.88992310]
[1.91310155 -312.05691528]
[14.46507835 -314.84420776]
[27.09587288 -317.24923706]
[39.79384613 -319.26980591]
[52.54729462 -320.90402222]
[65.34446716 -322.15036011]
[78.17357635 -323.00775146]
[91.02280426 -323.47534180]
[103.88029480 -323.55270386]
[116.73421478 -323.23977661]
[129.57270813 -322.53686523]
[142.38395691 -321.44458008]
[155.15615845 -319.96398926]
[167.87751770 -318.09637451]
[180.53634644 -315.84353638]
[193.12095642 -313.20748901]
[205.61975098 -310.19070435]
[218.02124023 -306.79592896]
[230.31396484 -303.02630615]
[242.48661804 -298.88534546]
[254.52796936 -294.37680054]
[266.42691040 -289.50485229]
[278.17251587 -284.27398682]
[289.75396729 -278.68902588]
[301.16052246 -272.75512695]
[312.38174438 -266.47775269]
[323.40725708 -259.86267090]
[334.22689819 -252.91600037]
[344.83071899 -245.64411926]
[355.20895386 -238.05375671]
[365.35198975 -230.15187073]
[375.25054932 -221.94578552]
[384.89544678 -213.44302368]
[394.27783203 -204.65144348]
[403.38906860 -195.57913208]
[412.22070312 -186.23446655]
[420.76467896 -176.62603760]
[429.01306152 -166.76271057]
[436.95828247 -156.65357971]
[444.59301758 -146.30793762]
[451.91021729 -135.73535156]
[458.90313721 -124.94552612]
[465.56533813 -113.94843292]
[471.89068604 -102.75418854]
[477.87335205 -91.37311554]
[483.50784302 -79.81570435]
[488.78890991 -68.09259796]
[493.71176147 -56.21459961]
[498.27178955 -44.19265366]
[502.46484375 -32.03784180]
[506.28704834 -19.76136208]
[509.73486328 -7.37452745]
[512.80511475 5.11124897]
[515.49499512 17.68446159]
[517.80200195 30.33352470]
[519.72406006 43.04678345]
[521.25933838 55.81252289]
[522.40643311 68.61898041]
[523.16424561 81.45434570]
[523.53222656 94.30680847]
[523.50988770 107.16452026]
[523.09729004 120.01562500]
[522.29486084 132.84828186]
[521.10327148 145.65068054]
[519.52368164 158.41101074]
[517.55749512 171.11750793]
[515.20654297 183.75848389]
[512.47296143 196.32228088]
[509.35937500 208.79730225]
[505.86853027 221.17208862]
[502.00372314 233.43522644]
[497.76846313 245.57539368]
[493.16668701 257.58142090]
[488.20260620 269.44223022]
[482.88082886 281.14694214]
[477.20623779 292.68469238]
[471.18408203 304.04492188]
[464.81985474 315.21713257]
[458.11950684 326.19100952]
[451.08914185 336.95648193]
[443.73526001 347.50357056]
[436.06463623 357.82263184]
[428.08435059 367.90411377]
[419.80172729 377.73870850]
[411.22445679 387.31741333]
[402.36038208 396.63134766]
[393.21768188 405.67193604]
[383.80480957 414.43087769]
[374.13043213 422.90005493]
[364.20343018 431.07171631]
[354.03298950 438.93832397]
[343.62847900 446.49258423]
[332.99945068 453.72756958]
[322.15573120 460.63662720]
[311.10729980 467.21334839]
[299.86434937 473.45172119]
[288.43722534 479.34594727]
[276.83648682 484.89062500]
[265.07278442 490.08065796]
[253.15695190 494.91125488]
[241.10002136 499.37792969]
[228.91305542 503.47659302]
[216.60729980 507.20349121]
[204.19410706 510.55514526]
[191.68489075 513.52850342]
[179.09120178 516.12078857]
[166.42463684 518.32965088]
[153.69685364 520.15307617]
[140.91958618 521.58929443]
[128.10462952 522.63702393]
[115.26376343 523.29534912]
[102.40883636 523.56359863]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[71 85]
[72 84]
[73 83]
[74 82]
[75 81]
[93 110]
[94 109]
[95 108]
[96 107]
[97 106]
] def

init

% Start Annotations
71 85 0.0 0.6 colorpair
72 84 0.0 1 colorpair
73 83 0.16 0.6 colorpair
74 82 0.16 1 colorpair
75 81 0.0 0.6 colorpair
93 110 0.0 1 colorpair
94 109 0.0 1 colorpair
95 108 0.16 0.6 colorpair
96 107 0.0 0.6 colorpair
97 106 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
71 85 1 gmark
73 83 1 gmark
73 cmark
83 cmark
74 cmark
82 cmark
75 81 1 gmark
95 108 1 gmark
95 cmark
96 107 1 gmark
97 106 1 gmark

% End Annotations
showpage
end
%%EOF
