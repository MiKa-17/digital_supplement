%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 06:53:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___________________AAAUGCCACAAAAAACUGUUAUUUGGUGUCUAUUGAUCGUCUGUAUAACACUUCUGGCGUUCAUUGGGAUCACACAUGGAUAUCUGUGUGAAAUACACAUCAAAAACGGUAAUAAAGAGGUUGCCGCCGUUUUAGCCUACGCAUCUAAA___\
) } def
/len { sequence length } bind def

/coor [
[-65.47196198 520.94763184]
[-78.32992554 513.22277832]
[-90.40936279 504.32971191]
[-101.60445404 494.34622192]
[-111.81712341 483.35980225]
[-120.95792389 471.46670532]
[-128.94677734 458.77108765]
[-135.71368408 445.38421631]
[-141.19938660 431.42330933]
[-145.35583496 417.01065063]
[-148.14659119 402.27255249]
[-149.54722595 387.33810425]
[-149.54547119 372.33810425]
[-148.14134216 357.40396118]
[-145.34713745 342.66650391]
[-141.18733215 328.25485229]
[-135.69836426 314.29522705]
[-128.92831421 300.90991211]
[-120.93650055 288.21618652]
[-111.79292297 276.32522583]
[-101.57767487 265.34118652]
[-90.38024902 255.36032104]
[-78.29873657 246.47004700]
[-65.43897247 238.74824524]
[-51.91359711 232.26254272]
[-37.84109879 227.06976318]
[-23.34475899 223.21540833]
[-8.55155754 220.73323059]
[6.40891361 219.64498901]
[21.40560150 219.96018982]
[36.30713654 221.67608643]
[50.98297501 224.77763367]
[65.30456543 229.23770142]
[79.14644623 235.01716614]
[92.38735962 242.06544495]
[104.91132355 250.32077026]
[116.62007904 259.72094727]
[114.16539001 244.92317200]
[111.71069336 230.12538147]
[107.49848938 224.01873779]
[109.34887695 215.03512573]
[107.16485596 200.19497681]
[104.98084259 185.35482788]
[102.79682159 170.51466370]
[100.61280823 155.67451477]
[98.42878723 140.83436584]
[96.24477386 125.99421692]
[75.92278290 110.49231720]
[78.40367889 85.05342865]
[69.02075958 73.35040283]
[59.63784409 61.64736938]
[44.96879959 55.72034454]
[43.04419327 40.95060730]
[33.66127777 29.24757767]
[24.27836227 17.54454803]
[9.60931492 11.61752224]
[7.68471098 -3.15221572]
[-1.69820487 -14.85524464]
[-11.08112049 -26.55827522]
[-20.46403694 -38.26130295]
[-35.05003357 -33.98145676]
[-50.16302872 -35.61418533]
[-63.49840164 -42.91050720]
[-73.02259827 -54.75778580]
[-77.28325653 -69.34940338]
[-75.63065338 -84.46023560]
[-68.31679535 -97.78599548]
[-56.45699310 -107.29460907]
[-41.85978317 -111.53606415]
[-26.75113678 -109.86357880]
[-13.43500805 -102.53219604]
[-3.94201112 -90.65990448]
[0.28024074 -76.05712891]
[-1.41211510 -60.95069122]
[-8.76100636 -47.64421844]
[0.62190884 -35.94118881]
[10.00482464 -24.23816109]
[19.38773918 -12.53513145]
[33.38565826 -7.44518471]
[35.98139191 8.16163254]
[45.36430740 19.86466217]
[54.74722290 31.56769180]
[68.74514008 36.65763855]
[71.34087372 52.26445389]
[80.72379303 63.96748352]
[90.10670471 75.67051697]
[95.04954529 74.20670319]
[100.18309784 73.73657227]
[105.30959320 74.27822876]
[112.41072845 61.06558990]
[119.51186371 47.85295105]
[126.61299896 34.64030838]
[133.71414185 21.42766953]
[140.81527710 8.21502781]
[147.91641235 -4.99761248]
[141.05546570 -18.91547966]
[143.71873474 -34.20229340]
[154.88214111 -44.97995758]
[170.25311279 -47.10424423]
[183.92121887 -39.75831985]
[190.63078308 -25.76684380]
[187.80183411 -10.50982189]
[176.52217102 0.14610755]
[161.12904358 2.10352349]
[154.02790833 15.31616402]
[146.92677307 28.52880478]
[139.82563782 41.74144363]
[132.72450256 54.95408630]
[125.62337494 68.16672516]
[118.52223206 81.37936401]
[122.87919617 87.10257721]
[125.52011871 93.79315948]
[126.24690247 100.94928741]
[125.00505066 108.03420258]
[121.88771057 114.51652527]
[117.12867737 119.91003418]
[111.08492279 123.81020355]
[113.26893616 138.65036011]
[115.45295715 153.49050903]
[117.63697052 168.33065796]
[119.82099152 183.17080688]
[122.00501251 198.01095581]
[124.18902588 212.85110474]
[126.50847626 227.67068481]
[128.96318054 242.46847534]
[131.41786194 257.26626587]
[141.63002014 268.25317383]
[156.20915222 271.78149414]
[170.78826904 275.30978394]
[185.36740112 278.83810425]
[199.94653320 282.36642456]
[214.52566528 285.89474487]
[227.88383484 277.44873047]
[243.28312683 281.00363159]
[251.58741760 294.45034790]
[247.86991882 309.81121826]
[234.33615112 317.97286987]
[219.01547241 314.09317017]
[210.99734497 300.47387695]
[196.41821289 296.94555664]
[181.83909607 293.41723633]
[167.25996399 289.88891602]
[152.68083191 286.36059570]
[138.10169983 282.83230591]
[146.61404419 295.18301392]
[153.93441772 308.27545166]
[159.99867249 321.99496460]
[164.75369263 336.22134399]
[168.15783691 350.82995605]
[170.18127441 365.69284058]
[170.80627441 380.67980957]
[170.02737427 395.65957642]
[167.85139465 410.50091553]
[164.29739380 425.07382202]
[159.39651489 439.25057983]
[153.19166565 452.90710449]
[145.73722839 465.92367554]
[137.09849548 478.18630981]
[127.35112000 489.58755493]
[116.58052063 500.02758789]
[104.88102722 509.41491699]
[92.35513306 517.66729736]
[79.11257172 524.71246338]
[65.26934052 530.48870850]
[50.94670868 534.94543457]
[36.27014542 538.04357910]
[21.36820984 539.75598145]
[6.37144852 540.06768799]
[-8.58876801 538.97589111]
[-23.38138771 536.49029541]
[-37.87682724 532.63250732]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 126]
[38 125]
[39 124]
[41 123]
[42 122]
[43 121]
[44 120]
[45 119]
[46 118]
[47 117]
[49 86]
[50 85]
[51 84]
[53 82]
[54 81]
[55 80]
[57 78]
[58 77]
[59 76]
[60 75]
[89 110]
[90 109]
[91 108]
[92 107]
[93 106]
[94 105]
[95 104]
[127 144]
[128 143]
[129 142]
[130 141]
[131 140]
[132 139]
] def

init

% Start Annotations
37 126 0.16 1 colorpair
38 125 0.0 1 colorpair
39 124 0.16 1 colorpair
41 123 0.16 1 colorpair
42 122 0.0 1 colorpair
43 121 0.0 1 colorpair
44 120 0.16 1 colorpair
45 119 0.0 0.2 colorpair
46 118 0.0 0.2 colorpair
47 117 0.0 0.2 colorpair
49 86 0.16 1 colorpair
50 85 0.0 0.2 colorpair
51 84 0.0 0.2 colorpair
53 82 0.0 1 colorpair
54 81 0.16 1 colorpair
55 80 0.16 1 colorpair
57 78 0.16 1 colorpair
58 77 0.16 1 colorpair
59 76 0.16 1 colorpair
60 75 0.0 0.2 colorpair
89 110 0.0 1 colorpair
90 109 0.0 0.2 colorpair
91 108 0.16 1 colorpair
92 107 0.16 1 colorpair
93 106 0.0 1 colorpair
94 105 0.0 1 colorpair
95 104 0.16 1 colorpair
127 144 0.0 1 colorpair
128 143 0.0 1 colorpair
129 142 0.0 0.2 colorpair
130 141 0.0 1 colorpair
131 140 0.0 1 colorpair
132 139 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
37 cmark
126 cmark
39 cmark
124 cmark
123 cmark
44 cmark
120 cmark
45 119 2 gmark
46 118 2 gmark
47 117 2 gmark
49 cmark
50 85 2 gmark
51 84 2 gmark
54 cmark
81 cmark
55 cmark
57 cmark
78 cmark
58 cmark
77 cmark
76 cmark
60 75 2 gmark
90 109 2 gmark
91 cmark
108 cmark
92 cmark
95 cmark
129 142 2 gmark
132 139 2 gmark

% End Annotations
showpage
end
%%EOF
