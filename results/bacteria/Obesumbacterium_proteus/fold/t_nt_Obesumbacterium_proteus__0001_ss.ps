%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 06:53:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___AAAAGGCCACAAAAA__CAUUAUUUGGAGGCGAUUAA__GACUGCAUAACACUAAUGAAA___AUUGACAUCACACAUGGACAUCCGACCGAAACACACAUCAAAAACGGCAAGAAAAAAGCCGCAACCACC____________________________\
) } def
/len { sequence length } bind def

/coor [
[89.75331116 544.13592529]
[75.23133850 540.32409668]
[61.18737411 535.01519775]
[47.77528381 528.26733398]
[35.14202499 520.15447998]
[23.42601395 510.76550293]
[12.75561523 500.20330811]
[3.24774051 488.58355713]
[-4.99343681 476.03363037]
[-11.87762165 462.69100952]
[-17.32938766 448.70187378]
[-21.28900146 434.21951294]
[-23.71307945 419.40255737]
[-24.57506180 404.41342163]
[-23.86550713 389.41625977]
[-21.59218597 374.57546997]
[-17.78000641 360.05358887]
[-12.47073841 346.00973511]
[-5.72255325 332.59780884]
[2.39061332 319.96475220]
[11.77986813 308.24896240]
[22.34233856 297.57882690]
[33.96229553 288.07122803]
[46.51242447 279.83035278]
[59.85521698 272.94650269]
[73.84449005 267.49508667]
[88.32695770 263.53582764]
[103.14395142 261.11209106]
[102.28240204 246.13685608]
[101.42086029 231.16162109]
[100.55931091 216.18638611]
[99.69776154 201.21115112]
[98.83621216 186.23591614]
[97.97466278 171.26066589]
[97.11311340 156.28543091]
[96.25157166 141.31019592]
[95.39002228 126.33496094]
[94.52847290 111.35972595]
[94.00676727 126.35064697]
[84.77744293 138.17518616]
[70.36194611 142.32167053]
[56.26050568 137.20803833]
[47.85351562 124.78537750]
[48.34866333 109.79354858]
[57.55702972 97.95269012]
[71.96513367 93.78066254]
[61.98524475 82.58236694]
[52.00535965 71.38407135]
[42.02547455 60.18577194]
[32.04558945 48.98747253]
[22.06570435 37.78917313]
[12.08581829 26.59087563]
[2.10593319 15.39257717]
[-7.87395239 4.19427919]
[-17.85383797 -7.00401926]
[-27.83372307 -18.20231819]
[-37.81361008 -29.40061569]
[-47.79349518 -40.59891510]
[-57.77338028 -51.79721069]
[-67.75326538 -62.99551010]
[-83.62278748 -65.34875488]
[-91.55249786 -79.29505920]
[-85.45939636 -94.13600159]
[-70.01759338 -98.48689270]
[-57.07271576 -89.01009369]
[-56.55496597 -72.97539520]
[-46.57508087 -61.77709961]
[-36.59519577 -50.57880020]
[-26.61531067 -39.38050079]
[-16.63542557 -28.18220329]
[-6.65553951 -16.98390388]
[3.32434607 -5.78560638]
[13.30423164 5.41269207]
[23.28411674 16.61099052]
[33.26400375 27.80928802]
[43.24388885 39.00758743]
[53.22377396 50.20588684]
[63.20365906 61.40418243]
[73.18354797 72.60248566]
[83.16342926 83.80078125]
[75.10528564 71.14904785]
[77.61119080 56.35985184]
[89.38734436 47.06887817]
[104.35369110 48.07308197]
[114.78307343 58.85398865]
[115.29077911 73.84539795]
[105.61287689 85.30818939]
[117.00028229 75.54463959]
[128.38769531 65.78108215]
[139.77510071 56.01753235]
[151.16250610 46.25397873]
[162.54991150 36.49042892]
[173.93731689 26.72687531]
[185.32472229 16.96332359]
[196.71214294 7.19977045]
[208.09954834 -2.56378222]
[202.74055481 -16.74323845]
[202.55751038 -31.90049171]
[207.57252502 -46.20522690]
[217.17999268 -57.93008041]
[230.21978760 -65.65921783]
[245.11729431 -68.45930481]
[260.07354736 -65.99222565]
[273.28250122 -58.55588150]
[283.14910889 -47.04825592]
[288.48196411 -32.85894775]
[288.63708496 -17.70138359]
[283.59573364 -3.40591359]
[273.96664429 8.30121326]
[260.91262817 16.00630569]
[246.01000977 18.77893639]
[231.05833435 16.28429604]
[217.86309814 8.82362556]
[206.47569275 18.58717728]
[195.08828735 28.35073090]
[183.70086670 38.11428070]
[172.31346130 47.87783432]
[160.92605591 57.64138794]
[149.53865051 67.40493774]
[138.15124512 77.16849518]
[126.76383972 86.93204498]
[115.37643433 96.69559479]
[109.50370789 110.49817657]
[110.36525726 125.47341156]
[111.22680664 140.44865417]
[112.08835602 155.42388916]
[112.94990540 170.39912415]
[113.81144714 185.37435913]
[114.67299652 200.34959412]
[115.53454590 215.32482910]
[116.39609528 230.30007935]
[117.25764465 245.27531433]
[118.11918640 260.25054932]
[133.11637878 260.95901489]
[147.95736694 263.23126221]
[162.47952271 267.04235840]
[176.52374268 272.35061646]
[189.93615723 279.09783936]
[202.56980896 287.21008301]
[214.28628540 296.59848022]
[224.95719910 307.16015625]
[234.46563721 318.77941895]
[242.70741272 331.32894897]
[249.59225464 344.67126465]
[255.04469299 358.66012573]
[259.00500488 373.14230347]
[261.42980957 387.95910645]
[262.29251099 402.94824219]
[261.58370972 417.94540405]
[259.31109619 432.78631592]
[255.49961853 447.30841064]
[250.19104004 461.35247803]
[243.44349670 474.76473999]
[235.33094788 487.39819336]
[225.94226074 499.11444092]
[215.38031006 509.78509521]
[203.76081848 519.29327393]
[191.21109009 527.53472900]
[177.86862183 534.41925049]
[163.87962341 539.87133789]
[149.39733887 543.83129883]
[134.58047485 546.25573730]
[119.59133911 547.11810303]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 133]
[29 132]
[30 131]
[31 130]
[32 129]
[33 128]
[34 127]
[35 126]
[36 125]
[37 124]
[38 123]
[46 80]
[47 79]
[48 78]
[49 77]
[50 76]
[51 75]
[52 74]
[53 73]
[54 72]
[55 71]
[56 70]
[57 69]
[58 68]
[59 67]
[60 66]
[87 122]
[88 121]
[89 120]
[90 119]
[91 118]
[92 117]
[93 116]
[94 115]
[95 114]
[96 113]
] def

init

% Start Annotations
28 133 0.16 1 colorpair
29 132 0.0 1 colorpair
30 131 0.0 0.6 colorpair
31 130 0.0 0.6 colorpair
32 129 0.16 1 colorpair
33 128 0.0 0.6 colorpair
34 127 0.0 0.6 colorpair
35 126 0.0 0.6 colorpair
36 125 0.16 1 colorpair
37 124 0.0 1 colorpair
38 123 0.16 1 colorpair
46 80 0.0 0.6 colorpair
47 79 0.0 1 colorpair
48 78 0.16 1 colorpair
49 77 0.0 0.6 colorpair
50 76 0.16 1 colorpair
51 75 0.0 0.6 colorpair
52 74 0.0 1 colorpair
53 73 0.0 0.6 colorpair
54 72 0.0 0.6 colorpair
55 71 0.16 1 colorpair
56 70 0.0 1 colorpair
57 69 0.0 0.6 colorpair
58 68 0.0 0.6 colorpair
59 67 0.0 1 colorpair
60 66 0.0 0.6 colorpair
87 122 0.0 1 colorpair
88 121 0.16 1 colorpair
89 120 0.0 0.6 colorpair
90 119 0.0 0.6 colorpair
91 118 0.0 0.6 colorpair
92 117 0.16 1 colorpair
93 116 0.16 1 colorpair
94 115 0.0 0.6 colorpair
95 114 0.0 0.6 colorpair
96 113 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
133 cmark
30 131 1 gmark
31 130 1 gmark
32 cmark
129 cmark
33 128 1 gmark
34 127 1 gmark
35 126 1 gmark
36 cmark
125 cmark
123 cmark
46 80 1 gmark
48 cmark
78 cmark
49 77 1 gmark
76 cmark
51 75 1 gmark
53 73 1 gmark
54 72 1 gmark
55 cmark
71 cmark
57 69 1 gmark
58 68 1 gmark
60 66 1 gmark
88 cmark
121 cmark
89 120 1 gmark
90 119 1 gmark
91 118 1 gmark
92 cmark
117 cmark
93 cmark
116 cmark
94 115 1 gmark
95 114 1 gmark
96 113 1 gmark

% End Annotations
showpage
end
%%EOF
