%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 06:35:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
____________________________________________________GGAGGUUCGAGAUUCGC_U___CGAAAUACGGUGCAAGGAGGGAAACAGACAGCUUGCGGCACUUUU_GGCUUG_G_____________________________________________________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50469971 92.08847809]
[62.52633667 91.26572418]
[47.57617950 90.03236389]
[32.66548538 88.38932800]
[17.80547905 86.33785248]
[3.00734663 83.87947083]
[-11.71777344 81.01604462]
[-26.35879517 77.74972534]
[-40.90469742 74.08297729]
[-55.34453201 70.01855469]
[-69.66742706 65.55951691]
[-83.86260223 60.70922089]
[-97.91937256 55.47132111]
[-111.82715607 49.84975815]
[-125.57547760 43.84876633]
[-139.15399170 37.47285843]
[-152.55249023 30.72683907]
[-165.76086426 23.61578178]
[-178.76918030 16.14504242]
[-191.56765747 8.32024288]
[-204.14665222 0.14727513]
[-216.49667358 -8.36770916]
[-228.60847473 -17.21829987]
[-240.47288513 -26.39783478]
[-252.08100891 -35.89940262]
[-263.42410278 -45.71585464]
[-274.49362183 -55.83979797]
[-285.28121948 -66.26361084]
[-295.77880859 -76.97945404]
[-305.97845459 -87.97924805]
[-315.87249756 -99.25472260]
[-325.45346069 -110.79738617]
[-334.71420288 -122.59854889]
[-343.64767456 -134.64933777]
[-352.24719238 -146.94065857]
[-360.50625610 -159.46328735]
[-368.41867065 -172.20776367]
[-375.97848511 -185.16453552]
[-383.17999268 -198.32380676]
[-390.01776123 -211.67570496]
[-396.48669434 -225.21015930]
[-402.58184814 -238.91699219]
[-408.29870605 -252.78587341]
[-413.63293457 -266.80636597]
[-418.58050537 -280.96795654]
[-423.13769531 -295.25991821]
[-427.30108643 -309.67150879]
[-431.06753540 -324.19192505]
[-434.43423462 -338.81018066]
[-437.39862061 -353.51531982]
[-439.95846558 -368.29623413]
[-442.11184692 -383.14181519]
[-443.85711670 -398.04089355]
[-445.19302368 -412.98223877]
[-446.11853027 -427.95458984]
[-446.63290405 -442.94671631]
[-446.73580933 -457.94732666]
[-446.42715454 -472.94509888]
[-445.70715332 -487.92874146]
[-444.57635498 -502.88699341]
[-443.03564453 -517.80859375]
[-441.08612061 -532.68237305]
[-438.72930908 -547.49700928]
[-435.96694946 -562.24139404]
[-432.80111694 -576.90447998]
[-429.23422241 -591.47521973]
[-425.26895142 -605.94256592]
[-420.90826416 -620.29571533]
[-416.15542603 -634.52380371]
[-411.01406860 -648.61621094]
[-405.48803711 -662.56219482]
[-399.58148193 -676.35137939]
[-393.29885864 -689.97326660]
[-386.64489746 -703.41772461]
[-379.62460327 -716.67456055]
[-372.24325562 -729.73382568]
[-364.50640869 -742.58569336]
[-356.41992188 -755.22039795]
[-347.98983765 -767.62860107]
[-339.22253418 -779.80078125]
[-330.12460327 -791.72790527]
[-320.70288086 -803.40087891]
[-310.96444702 -814.81103516]
[-300.91665649 -825.94976807]
[-290.56710815 -836.80859375]
[-279.92352295 -847.37939453]
[-268.99392700 -857.65429688]
[-257.78659058 -867.62542725]
[-246.30990601 -877.28533936]
[-234.57254028 -886.62677002]
[-222.58331299 -895.64270020]
[-210.35125732 -904.32635498]
[-197.88557434 -912.67108154]
[-185.19566345 -920.67077637]
[-172.29106140 -928.31927490]
[-159.18148804 -935.61083984]
[-145.87680054 -942.54003906]
[-132.38703918 -949.10162354]
[-118.72232819 -955.29071045]
[-104.89298248 -961.10253906]
[-90.90939331 -966.53277588]
[-76.78209686 -971.57733154]
[-62.52172470 -976.23248291]
[-48.13901138 -980.49462891]
[-33.64477921 -984.36059570]
[-19.04994774 -987.82745361]
[-4.36549807 -990.89263916]
[10.39751530 -993.55377197]
[25.22797775 -995.80895996]
[40.11472702 -997.65637207]
[55.04655457 -999.09472656]
[70.01222229 -1000.12292480]
[85.00046539 -1000.74011230]
[100.00000000 -1000.94592285]
[114.99953461 -1000.74011230]
[129.98777771 -1000.12292480]
[144.95344543 -999.09472656]
[159.88526917 -997.65637207]
[174.77201843 -995.80895996]
[189.60247803 -993.55377197]
[204.36549377 -990.89263916]
[219.04994202 -987.82745361]
[233.64477539 -984.36059570]
[248.13900757 -980.49462891]
[262.52172852 -976.23248291]
[276.78210449 -971.57733154]
[290.90939331 -966.53277588]
[304.89297485 -961.10253906]
[318.72232056 -955.29071045]
[332.38702393 -949.10162354]
[345.87680054 -942.54003906]
[359.18148804 -935.61083984]
[372.29104614 -928.31927490]
[385.19564819 -920.67077637]
[397.88558960 -912.67108154]
[410.35125732 -904.32635498]
[422.58331299 -895.64270020]
[434.57254028 -886.62677002]
[446.30990601 -877.28533936]
[457.78659058 -867.62542725]
[468.99392700 -857.65429688]
[479.92352295 -847.37939453]
[490.56710815 -836.80859375]
[500.91665649 -825.94976807]
[510.96444702 -814.81103516]
[520.70288086 -803.40087891]
[530.12457275 -791.72790527]
[539.22253418 -779.80078125]
[547.98986816 -767.62860107]
[556.41992188 -755.22039795]
[564.50640869 -742.58569336]
[572.24322510 -729.73382568]
[579.62457275 -716.67456055]
[586.64489746 -703.41772461]
[593.29882812 -689.97326660]
[599.58148193 -676.35137939]
[605.48803711 -662.56219482]
[611.01409912 -648.61621094]
[616.15545654 -634.52380371]
[620.90826416 -620.29571533]
[625.26892090 -605.94256592]
[629.23425293 -591.47521973]
[632.80114746 -576.90447998]
[635.96691895 -562.24139404]
[638.72930908 -547.49700928]
[641.08612061 -532.68237305]
[643.03564453 -517.80859375]
[644.57635498 -502.88699341]
[645.70715332 -487.92874146]
[646.42712402 -472.94509888]
[646.73583984 -457.94732666]
[646.63293457 -442.94671631]
[646.11853027 -427.95458984]
[645.19305420 -412.98223877]
[643.85711670 -398.04089355]
[642.11181641 -383.14181519]
[639.95843506 -368.29623413]
[637.39862061 -353.51531982]
[634.43420410 -338.81018066]
[631.06756592 -324.19192505]
[627.30108643 -309.67150879]
[623.13769531 -295.25991821]
[618.58050537 -280.96795654]
[613.63293457 -266.80636597]
[608.29870605 -252.78587341]
[602.58184814 -238.91699219]
[596.48669434 -225.21015930]
[590.01776123 -211.67570496]
[583.17999268 -198.32380676]
[575.97845459 -185.16453552]
[568.41870117 -172.20776367]
[560.50622559 -159.46328735]
[552.24719238 -146.94065857]
[543.64764404 -134.64933777]
[534.71417236 -122.59854889]
[525.45349121 -110.79738617]
[515.87249756 -99.25472260]
[505.97845459 -87.97924805]
[495.77880859 -76.97945404]
[485.28121948 -66.26361084]
[474.49362183 -55.83979797]
[463.42410278 -45.71585464]
[452.08102417 -35.89940262]
[440.47290039 -26.39783478]
[428.60845947 -17.21829987]
[416.49667358 -8.36770916]
[404.14663696 0.14727513]
[391.56765747 8.32024288]
[378.76919556 16.14504242]
[365.76086426 23.61578178]
[352.55249023 30.72683907]
[339.15399170 37.47285843]
[325.57546997 43.84876633]
[311.82714844 49.84975815]
[297.91937256 55.47132111]
[283.86260986 60.70922089]
[269.66741943 65.55951691]
[255.34452820 70.01855469]
[240.90469360 74.08297729]
[226.35879517 77.74972534]
[211.71777344 81.01604462]
[196.99266052 83.87947083]
[182.19451904 86.33785248]
[167.33451843 88.38932800]
[152.42382812 90.03236389]
[137.47366333 91.26572418]
[122.49530029 92.08847809]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
