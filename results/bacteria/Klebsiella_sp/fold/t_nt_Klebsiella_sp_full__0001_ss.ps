%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 06:35:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___________________________________________________________________________________________________________________________A_GAAAGGCGAGAGACUG_GCGCUGGCUGGGUUUGCCGUGGUCCUCUGGGUCGAUCUGAAAGUUAC__AGGGAUGGUUCGUGUUCUGCUCAGCAAAAUCGGGACCAGAAAGGGUAACAUCAAGUCGC_AGCU\
G_AUUAGCU_GCG______AA____AA_________________________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50248718 92.20081329]
[62.51391983 91.60256195]
[47.54027176 90.70547485]
[32.58749008 89.50991058]
[17.66153336 88.01634979]
[2.76833344 86.22537994]
[-12.08618259 84.13771820]
[-26.89610481 81.75419617]
[-41.65554047 79.07575989]
[-56.35861588 76.10346985]
[-70.99948883 72.83851624]
[-85.57231903 69.28219604]
[-100.07132721 65.43592834]
[-114.49073792 61.30123138]
[-128.82479858 56.87976456]
[-143.06784058 52.17327499]
[-157.21415710 47.18363953]
[-171.25814819 41.91284943]
[-185.19422913 36.36299133]
[-199.01683044 30.53627968]
[-212.72047424 24.43502998]
[-226.29968262 18.06167221]
[-239.74908447 11.41874027]
[-253.06332397 4.50887775]
[-266.23709106 -2.66516662]
[-279.26513672 -10.10053921]
[-292.14230347 -17.79428101]
[-304.86346436 -25.74333000]
[-317.42352295 -33.94452667]
[-329.81750488 -42.39460373]
[-342.04049683 -51.09020233]
[-354.08761597 -60.02786636]
[-365.95410156 -69.20403290]
[-377.63516235 -78.61505127]
[-389.12622070 -88.25718689]
[-400.42266846 -98.12659454]
[-411.52001953 -108.21934509]
[-422.41387939 -118.53143311]
[-433.09988403 -129.05874634]
[-443.57379150 -139.79710388]
[-453.83142090 -150.74223328]
[-463.86871338 -161.88977051]
[-473.68167114 -173.23529053]
[-483.26638794 -184.77427673]
[-492.61904907 -196.50213623]
[-501.73593140 -208.41419983]
[-510.61340332 -220.50573730]
[-519.24798584 -232.77194214]
[-527.63610840 -245.20791626]
[-535.77459717 -257.80871582]
[-543.66009521 -270.56933594]
[-551.28955078 -283.48471069]
[-558.65991211 -296.54968262]
[-565.76812744 -309.75903320]
[-572.61157227 -323.10757446]
[-579.18731689 -336.58993530]
[-585.49291992 -350.20074463]
[-591.52575684 -363.93466187]
[-597.28344727 -377.78613281]
[-602.76379395 -391.74969482]
[-607.96447754 -405.81979370]
[-612.88348389 -419.99081421]
[-617.51892090 -434.25714111]
[-621.86883545 -448.61309814]
[-625.93157959 -463.05291748]
[-629.70550537 -477.57092285]
[-633.18914795 -492.16131592]
[-636.38104248 -506.81829834]
[-639.27996826 -521.53601074]
[-641.88482666 -536.30859375]
[-644.19445801 -551.13024902]
[-646.20800781 -565.99499512]
[-647.92468262 -580.89691162]
[-649.34381104 -595.83013916]
[-650.46484375 -610.78869629]
[-651.28723145 -625.76660156]
[-651.81072998 -640.75799561]
[-652.03515625 -655.75683594]
[-651.96032715 -670.75714111]
[-651.58636475 -685.75292969]
[-650.91339111 -700.73834229]
[-649.94165039 -715.70733643]
[-648.67150879 -730.65399170]
[-647.10357666 -745.57232666]
[-645.23834229 -760.45635986]
[-643.07659912 -775.30029297]
[-640.61926270 -790.09814453]
[-637.86724854 -804.84405518]
[-634.82171631 -819.53210449]
[-631.48376465 -834.15655518]
[-627.85485840 -848.71142578]
[-623.93627930 -863.19110107]
[-619.72973633 -877.58972168]
[-615.23687744 -891.90155029]
[-610.45941162 -906.12091064]
[-605.39929199 -920.24218750]
[-600.05853271 -934.25970459]
[-594.43920898 -948.16796875]
[-588.54364014 -961.96130371]
[-582.37414551 -975.63433838]
[-575.93316650 -989.18164062]
[-569.22326660 -1002.59771729]
[-562.24707031 -1015.87738037]
[-555.00744629 -1029.01513672]
[-547.50720215 -1042.00598145]
[-539.74932861 -1054.84460449]
[-531.73693848 -1067.52600098]
[-523.47320557 -1080.04504395]
[-514.96142578 -1092.39672852]
[-506.20495605 -1104.57617188]
[-497.20733643 -1116.57861328]
[-487.97210693 -1128.39916992]
[-478.50296021 -1140.03308105]
[-468.80364990 -1151.47595215]
[-458.87802124 -1162.72302246]
[-448.73007202 -1173.76989746]
[-438.36376953 -1184.61218262]
[-427.78329468 -1195.24560547]
[-416.99285889 -1205.66577148]
[-405.99670410 -1215.86877441]
[-394.79925537 -1225.85034180]
[-383.40493774 -1235.60656738]
[-371.81829834 -1245.13366699]
[-360.04394531 -1254.42773438]
[-348.08654785 -1263.48510742]
[-335.95089722 -1272.30212402]
[-323.64178467 -1280.87536621]
[-311.16415405 -1289.20141602]
[-298.52291870 -1297.27697754]
[-285.72311401 -1305.09875488]
[-272.76986694 -1312.66369629]
[-259.66830444 -1319.96875000]
[-246.42366028 -1327.01110840]
[-233.04118347 -1333.78784180]
[-219.52619934 -1340.29626465]
[-205.88409424 -1346.53393555]
[-192.12028503 -1352.49816895]
[-178.24026489 -1358.18676758]
[-164.24952698 -1363.59741211]
[-150.15367126 -1368.72790527]
[-135.95829773 -1373.57617188]
[-121.66902924 -1378.14038086]
[-107.29158020 -1382.41870117]
[-92.83165741 -1386.40930176]
[-78.29501343 -1390.11083984]
[-63.68743515 -1393.52160645]
[-49.01473236 -1396.64038086]
[-34.28274536 -1399.46594238]
[-19.49733162 -1401.99707031]
[-4.66437674 -1404.23278809]
[10.21022034 -1406.17224121]
[25.12054062 -1407.81457520]
[40.06064987 -1409.15917969]
[55.02460861 -1410.20556641]
[70.00646210 -1410.95324707]
[85.00024414 -1411.40197754]
[100.00000000 -1411.55163574]
[114.99975586 -1411.40197754]
[129.99354553 -1410.95324707]
[144.97538757 -1410.20556641]
[159.93934631 -1409.15917969]
[174.87945557 -1407.81457520]
[189.78977966 -1406.17224121]
[204.66438293 -1404.23278809]
[219.49732971 -1401.99707031]
[234.28274536 -1399.46594238]
[249.01473999 -1396.64038086]
[263.68743896 -1393.52160645]
[278.29501343 -1390.11083984]
[292.83166504 -1386.40930176]
[307.29156494 -1382.41870117]
[321.66903687 -1378.14038086]
[335.95828247 -1373.57617188]
[350.15368652 -1368.72790527]
[364.24954224 -1363.59741211]
[378.24026489 -1358.18676758]
[392.12026978 -1352.49816895]
[405.88409424 -1346.53393555]
[419.52618408 -1340.29626465]
[433.04116821 -1333.78784180]
[446.42364502 -1327.01110840]
[459.66830444 -1319.96875000]
[472.76986694 -1312.66369629]
[485.72311401 -1305.09875488]
[498.52291870 -1297.27697754]
[511.16415405 -1289.20141602]
[523.64178467 -1280.87536621]
[535.95086670 -1272.30212402]
[548.08654785 -1263.48510742]
[560.04394531 -1254.42773438]
[571.81829834 -1245.13366699]
[583.40490723 -1235.60656738]
[594.79925537 -1225.85034180]
[605.99670410 -1215.86877441]
[616.99285889 -1205.66577148]
[627.78332520 -1195.24560547]
[638.36376953 -1184.61218262]
[648.73004150 -1173.76989746]
[658.87805176 -1162.72302246]
[668.80364990 -1151.47595215]
[678.50292969 -1140.03308105]
[687.97210693 -1128.39916992]
[697.20733643 -1116.57861328]
[706.20495605 -1104.57617188]
[714.96142578 -1092.39672852]
[723.47320557 -1080.04504395]
[731.73693848 -1067.52600098]
[739.74932861 -1054.84460449]
[747.50720215 -1042.00598145]
[755.00744629 -1029.01513672]
[762.24707031 -1015.87738037]
[769.22326660 -1002.59771729]
[775.93316650 -989.18164062]
[782.37414551 -975.63433838]
[788.54364014 -961.96130371]
[794.43920898 -948.16796875]
[800.05853271 -934.25970459]
[805.39929199 -920.24218750]
[810.45941162 -906.12091064]
[815.23687744 -891.90155029]
[819.72973633 -877.58972168]
[823.93627930 -863.19110107]
[827.85485840 -848.71142578]
[831.48376465 -834.15655518]
[834.82171631 -819.53210449]
[837.86724854 -804.84405518]
[840.61926270 -790.09814453]
[843.07659912 -775.30029297]
[845.23834229 -760.45635986]
[847.10357666 -745.57232666]
[848.67150879 -730.65399170]
[849.94165039 -715.70733643]
[850.91339111 -700.73834229]
[851.58636475 -685.75292969]
[851.96032715 -670.75714111]
[852.03515625 -655.75683594]
[851.81072998 -640.75799561]
[851.28723145 -625.76660156]
[850.46484375 -610.78869629]
[849.34381104 -595.83013916]
[847.92468262 -580.89691162]
[846.20800781 -565.99499512]
[844.19445801 -551.13024902]
[841.88482666 -536.30859375]
[839.27996826 -521.53601074]
[836.38104248 -506.81829834]
[833.18914795 -492.16131592]
[829.70550537 -477.57092285]
[825.93157959 -463.05291748]
[821.86883545 -448.61309814]
[817.51892090 -434.25714111]
[812.88348389 -419.99081421]
[807.96447754 -405.81979370]
[802.76379395 -391.74969482]
[797.28344727 -377.78613281]
[791.52575684 -363.93466187]
[785.49291992 -350.20074463]
[779.18731689 -336.58993530]
[772.61157227 -323.10757446]
[765.76812744 -309.75903320]
[758.65991211 -296.54968262]
[751.28955078 -283.48471069]
[743.66009521 -270.56933594]
[735.77459717 -257.80871582]
[727.63610840 -245.20791626]
[719.24798584 -232.77194214]
[710.61340332 -220.50573730]
[701.73596191 -208.41419983]
[692.61901855 -196.50213623]
[683.26635742 -184.77427673]
[673.68164062 -173.23529053]
[663.86871338 -161.88977051]
[653.83142090 -150.74223328]
[643.57379150 -139.79710388]
[633.09985352 -129.05874634]
[622.41387939 -118.53143311]
[611.52001953 -108.21934509]
[600.42266846 -98.12659454]
[589.12622070 -88.25718689]
[577.63519287 -78.61505127]
[565.95410156 -69.20403290]
[554.08764648 -60.02786636]
[542.04052734 -51.09020233]
[529.81750488 -42.39460373]
[517.42352295 -33.94452667]
[504.86346436 -25.74333000]
[492.14230347 -17.79428101]
[479.26513672 -10.10053921]
[466.23709106 -2.66516662]
[453.06332397 4.50887775]
[439.74908447 11.41874027]
[426.29968262 18.06167221]
[412.72045898 24.43502998]
[399.01681519 30.53627968]
[385.19421387 36.36299133]
[371.25814819 41.91284943]
[357.21417236 47.18363953]
[343.06784058 52.17327499]
[328.82479858 56.87976456]
[314.49072266 61.30123138]
[300.07131958 65.43592834]
[285.57232666 69.28219604]
[270.99948120 72.83851624]
[256.35861206 76.10346985]
[241.65553284 79.07575989]
[226.89610291 81.75419617]
[212.08618164 84.13771820]
[197.23167419 86.22537994]
[182.33847046 88.01634979]
[167.41250610 89.50991058]
[152.45973206 90.70547485]
[137.48608398 91.60256195]
[122.49751282 92.20081329]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
