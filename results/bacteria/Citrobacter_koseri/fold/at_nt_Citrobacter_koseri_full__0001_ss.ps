%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 17:35:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UACUCAAAUGCGUCAAAAUCCGUGCCGAAAUGGCGUAUUCUUCGCGAAACGCGAAUACUACUAAUGUUGAUA_UAACACAGCGUGCUUCACCACAACCAACCGCAUAACGCUGAU_____CCUCGCUCCGGCGGGGUUUU__\
) } def
/len { sequence length } bind def

/coor [
[66.62004852 439.87515259]
[54.68282318 449.06484985]
[40.99977493 455.36740112]
[26.25723839 458.46664429]
[11.19468880 458.20712280]
[-3.43234062 454.60189819]
[-16.89016533 447.83175659]
[-28.50374413 438.23632812]
[-37.69054794 426.29687500]
[-43.98976517 412.61230469]
[-47.08543777 397.86901855]
[-46.82228088 382.80651855]
[-43.21349716 368.18035889]
[-36.44010162 354.72418213]
[-26.84184647 343.11291504]
[-14.90017414 333.92901611]
[-1.21407402 327.63311768]
[13.52996445 324.54101562]
[28.59238625 324.80783081]
[32.18212128 310.24368286]
[35.77185440 295.67956543]
[39.36159134 281.11544800]
[37.65830231 276.57812500]
[38.84269333 270.91995239]
[43.44212723 265.99743652]
[47.66811752 251.60504150]
[51.89410400 237.21264648]
[31.03654480 228.00596619]
[11.87457275 215.65203857]
[-5.12068081 200.45460510]
[-19.53135681 182.78732300]
[-31.00314522 163.08456421]
[-39.25399017 141.83074951]
[-44.08102798 119.54846954]
[-45.36558151 96.78554535]
[-43.07606888 74.10165405]
[-57.67874908 70.67211914]
[-72.28142548 67.24257660]
[-86.62123108 74.43629456]
[-101.12522888 67.57965851]
[-104.66720581 51.93248749]
[-94.53004456 39.49795151]
[-78.49011993 39.81476593]
[-68.85189056 52.63989639]
[-54.24920654 56.06943893]
[-39.64652634 59.49897766]
[-35.71658707 47.82247925]
[-30.81227112 36.52059174]
[-24.96878815 25.67444992]
[-18.22809410 15.36192894]
[-10.63858414 5.65706587]
[-2.25474501 -3.37046289]
[6.86323071 -11.65584469]
[16.64988136 -19.13959503]
[27.03494263 -25.76798439]
[37.94385529 -31.49342346]
[49.29829788 -36.27480698]
[61.01675797 -40.07780838]
[73.01509094 -42.87512207]
[85.20716858 -44.64666367]
[97.50544739 -45.37971878]
[109.82163239 -45.06902313]
[122.06730652 -43.71680450]
[134.15455627 -41.33277130]
[145.99658203 -37.93404388]
[151.46939087 -51.90001297]
[156.94219971 -65.86598206]
[162.41500854 -79.83195496]
[167.88783264 -93.79792786]
[155.83203125 -102.88420868]
[146.67567444 -114.88685608]
[141.09820557 -128.91520691]
[139.51350403 -143.92823792]
[142.03918457 -158.81190491]
[148.48780823 -172.46173096]
[158.38084412 -183.86482239]
[170.98417664 -192.17497253]
[185.36254883 -196.77552795]
[200.44898987 -197.32508850]
[215.12397766 -193.78286743]
[228.29853821 -186.41174316]
[238.99502563 -175.75869751]
[246.41970825 -162.61422729]
[250.02160645 -147.95378113]
[249.53343201 -132.86523438]
[244.99142456 -118.46826172]
[236.73263550 -105.83122253]
[225.36990356 -95.89186096]
[211.74642944 -89.38774109]
[196.87315369 -86.80152130]
[181.85379028 -88.32511139]
[176.38098145 -74.35914612]
[170.90817261 -60.39317322]
[165.43536377 -46.42720032]
[159.96255493 -32.46123123]
[171.21742249 -26.76578140]
[181.93632507 -20.11629486]
[192.03855896 -12.56281757]
[201.44813538 -4.16219330]
[210.09419250 5.02235317]
[217.91169739 14.92169952]
[224.84179688 25.46134377]
[230.83233643 36.56196213]
[235.83824158 48.14001465]
[239.82182312 60.10836792]
[242.75311279 72.37693787]
[244.61004639 84.85340881]
[245.37864685 97.44386292]
[245.05313110 110.05355835]
[243.63595581 122.58759308]
[241.13777161 134.95162964]
[237.57737732 147.05262756]
[232.98159790 158.79949951]
[227.38499451 170.10385132]
[220.82969666 180.88059998]
[213.36502075 191.04864502]
[205.04718018 200.53146362]
[195.93875122 209.25769043]
[186.10829163 217.16163635]
[175.62977600 224.18382263]
[164.58207703 230.27140808]
[153.04833984 235.37857056]
[141.11535645 239.46688843]
[128.87294006 242.50556946]
[116.41322327 244.47177124]
[103.82998657 245.35066223]
[91.21792603 245.13566589]
[78.67195892 243.82836914]
[66.28649902 241.43862915]
[62.06051254 255.83102417]
[57.83452225 270.22341919]
[53.92572021 284.70516968]
[50.33598328 299.26928711]
[46.74625015 313.83343506]
[43.15651321 328.39755249]
[56.61761856 335.16116333]
[68.23584747 344.75097656]
[77.42842865 356.68597412]
[83.73428345 370.36749268]
[86.83709717 385.10928345]
[86.58123779 400.17190552]
[82.97954559 414.79980469]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 135]
[20 134]
[21 133]
[22 132]
[25 131]
[26 130]
[27 129]
[36 46]
[37 45]
[38 44]
[65 95]
[66 94]
[67 93]
[68 92]
[69 91]
] def

init

% Start Annotations
19 135 0.16 0.2 colorpair
20 134 0.16 0.2 colorpair
21 133 0.0 0.2 colorpair
22 132 0.16 0.2 colorpair
25 131 0.0 0.2 colorpair
26 130 0.0 0.2 colorpair
27 129 0.16 0.2 colorpair
36 46 0.0 1 colorpair
37 45 0.16 1 colorpair
38 44 0.16 1 colorpair
65 95 0.16 1 colorpair
66 94 0.16 1 colorpair
67 93 0.16 0.2 colorpair
69 91 0.16 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
19 135 2 gmark
19 cmark
20 134 2 gmark
20 cmark
21 133 2 gmark
22 132 2 gmark
22 cmark
132 cmark
25 131 2 gmark
26 130 2 gmark
27 129 2 gmark
27 cmark
129 cmark
37 cmark
45 cmark
38 cmark
44 cmark
65 cmark
95 cmark
66 cmark
94 cmark
67 93 2 gmark
93 cmark
68 92 4 gmark
68 cmark
92 cmark
69 91 2 gmark
69 cmark
91 cmark

% End Annotations
showpage
end
%%EOF
