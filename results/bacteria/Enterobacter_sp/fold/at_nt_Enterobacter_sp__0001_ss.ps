%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 20:10:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___________________________C_____U________U_U__UAAU_GUGUGCCUCACAAUGCUGAUAUU_CACCUUGCUUGCUCGAGAUUCGCUGUGUGAACUUUGU_GUGAAGGAGGAACACAG_GGAGGUGGCGGCCAACCUAG__CCUA_GAA_C_G_UAAGUA__CCU___C___G_GGCGGGG_____UCC_____________________________________________________\
____________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50345612 92.14703369]
[62.51937485 91.44129944]
[47.55604553 90.38317108]
[32.62175751 88.97324371]
[17.72478104 87.21230316]
[2.87336397 85.10131073]
[-11.92426872 82.64144897]
[-26.65992165 79.83407593]
[-41.32543564 76.68074799]
[-55.91269302 73.18319702]
[-70.41361237 69.34338379]
[-84.82015991 65.16341400]
[-99.12436676 60.64561081]
[-113.31830597 55.79247665]
[-127.39411926 50.60669708]
[-141.34400940 45.09114456]
[-155.16026306 39.24887085]
[-168.83522034 33.08311844]
[-182.36129761 26.59729385]
[-195.73101807 19.79499054]
[-208.93698120 12.67997742]
[-221.97187805 5.25619316]
[-234.82846069 -2.47225142]
[-247.49964905 -10.50107670]
[-259.97839355 -18.82583618]
[-272.25781250 -27.44191933]
[-284.33108521 -36.34455872]
[-296.19152832 -45.52882004]
[-307.83258057 -54.98961639]
[-319.24780273 -64.72171783]
[-330.43084717 -74.71971893]
[-341.37554932 -84.97810364]
[-352.07583618 -95.49117279]
[-362.52578735 -106.25312042]
[-372.71960449 -117.25797272]
[-382.65167236 -128.49964905]
[-392.31643677 -139.97190857]
[-401.70858765 -151.66841125]
[-410.82293701 -163.58267212]
[-419.65438843 -175.70811462]
[-428.19808960 -188.03799438]
[-436.44931030 -200.56549072]
[-444.40347290 -213.28367615]
[-452.05615234 -226.18551636]
[-459.40313721 -239.26383972]
[-466.44033813 -252.51142883]
[-473.16387939 -265.92092896]
[-479.57003784 -279.48492432]
[-485.65524292 -293.19592285]
[-491.41613770 -307.04629517]
[-496.84954834 -321.02838135]
[-501.95242310 -335.13446045]
[-506.72198486 -349.35671997]
[-511.15557861 -363.68722534]
[-515.25073242 -378.11813354]
[-519.00518799 -392.64138794]
[-522.41687012 -407.24896240]
[-525.48388672 -421.93276978]
[-528.20452881 -436.68469238]
[-530.57727051 -451.49652100]
[-532.60089111 -466.36010742]
[-534.27416992 -481.26718140]
[-535.59619141 -496.20950317]
[-536.56628418 -511.17880249]
[-537.18389893 -526.16674805]
[-537.44860840 -541.16516113]
[-537.36041260 -556.16558838]
[-536.91918945 -571.15979004]
[-536.12530518 -586.13946533]
[-534.97918701 -601.09631348]
[-533.48138428 -616.02203369]
[-531.63287354 -630.90838623]
[-529.43450928 -645.74713135]
[-526.88763428 -660.53002930]
[-523.99365234 -675.24890137]
[-520.75408936 -689.89562988]
[-517.17077637 -704.46203613]
[-513.24566650 -718.94012451]
[-508.98104858 -733.32183838]
[-504.37915039 -747.59918213]
[-499.44259644 -761.76434326]
[-494.17410278 -775.80938721]
[-488.57656860 -789.72662354]
[-482.65310669 -803.50823975]
[-476.40701294 -817.14666748]
[-469.84170532 -830.63439941]
[-462.96087646 -843.96386719]
[-455.76828003 -857.12774658]
[-448.26794434 -870.11871338]
[-440.46398926 -882.92962646]
[-432.36074829 -895.55334473]
[-423.96270752 -907.98291016]
[-415.27453613 -920.21142578]
[-406.30102539 -932.23211670]
[-397.04714966 -944.03826904]
[-387.51803589 -955.62347412]
[-377.71893311 -966.98126221]
[-367.65530396 -978.10528564]
[-357.33270264 -988.98944092]
[-346.75686646 -999.62768555]
[-335.93362427 -1010.01416016]
[-324.86898804 -1020.14306641]
[-313.56909180 -1030.00878906]
[-302.04016113 -1039.60595703]
[-290.28860474 -1048.92907715]
[-278.32092285 -1057.97314453]
[-266.14373779 -1066.73315430]
[-253.76379395 -1075.20410156]
[-241.18795776 -1083.38146973]
[-228.42320251 -1091.26074219]
[-215.47656250 -1098.83740234]
[-202.35523987 -1106.10729980]
[-189.06648254 -1113.06640625]
[-175.61764526 -1119.71093750]
[-162.01618958 -1126.03723145]
[-148.26963806 -1132.04162598]
[-134.38562012 -1137.72094727]
[-120.37179565 -1143.07202148]
[-106.23593903 -1148.09179688]
[-91.98588562 -1152.77758789]
[-77.62951660 -1157.12683105]
[-63.17478180 -1161.13696289]
[-48.62969208 -1164.80590820]
[-34.00229645 -1168.13159180]
[-19.30069542 -1171.11218262]
[-4.53303099 -1173.74597168]
[10.29251862 -1176.03149414]
[25.16774368 -1177.96765137]
[40.08440781 -1179.55322266]
[55.03425217 -1180.78735352]
[70.00899506 -1181.66931152]
[85.00034332 -1182.19873047]
[100.00000000 -1182.37524414]
[114.99965668 -1182.19873047]
[129.99101257 -1181.66931152]
[144.96574402 -1180.78735352]
[159.91558838 -1179.55322266]
[174.83226013 -1177.96765137]
[189.70747375 -1176.03149414]
[204.53303528 -1173.74597168]
[219.30068970 -1171.11218262]
[234.00228882 -1168.13159180]
[248.62968445 -1164.80590820]
[263.17477417 -1161.13696289]
[277.62951660 -1157.12683105]
[291.98590088 -1152.77758789]
[306.23593140 -1148.09179688]
[320.37179565 -1143.07202148]
[334.38562012 -1137.72094727]
[348.26965332 -1132.04162598]
[362.01620483 -1126.03723145]
[375.61764526 -1119.71093750]
[389.06646729 -1113.06640625]
[402.35522461 -1106.10729980]
[415.47656250 -1098.83740234]
[428.42318726 -1091.26074219]
[441.18795776 -1083.38146973]
[453.76379395 -1075.20410156]
[466.14373779 -1066.73315430]
[478.32092285 -1057.97314453]
[490.28860474 -1048.92907715]
[502.04016113 -1039.60595703]
[513.56909180 -1030.00878906]
[524.86901855 -1020.14306641]
[535.93365479 -1010.01416016]
[546.75683594 -999.62768555]
[557.33270264 -988.98944092]
[567.65527344 -978.10528564]
[577.71893311 -966.98126221]
[587.51800537 -955.62347412]
[597.04711914 -944.03826904]
[606.30102539 -932.23211670]
[615.27453613 -920.21142578]
[623.96270752 -907.98291016]
[632.36077881 -895.55334473]
[640.46398926 -882.92962646]
[648.26794434 -870.11871338]
[655.76831055 -857.12774658]
[662.96087646 -843.96386719]
[669.84173584 -830.63439941]
[676.40698242 -817.14666748]
[682.65313721 -803.50823975]
[688.57653809 -789.72662354]
[694.17407227 -775.80938721]
[699.44256592 -761.76434326]
[704.37915039 -747.59918213]
[708.98101807 -733.32183838]
[713.24566650 -718.94012451]
[717.17077637 -704.46203613]
[720.75408936 -689.89562988]
[723.99365234 -675.24890137]
[726.88763428 -660.53002930]
[729.43450928 -645.74713135]
[731.63287354 -630.90838623]
[733.48138428 -616.02203369]
[734.97918701 -601.09631348]
[736.12530518 -586.13946533]
[736.91918945 -571.15979004]
[737.36041260 -556.16558838]
[737.44860840 -541.16516113]
[737.18389893 -526.16674805]
[736.56628418 -511.17880249]
[735.59619141 -496.20950317]
[734.27416992 -481.26718140]
[732.60089111 -466.36010742]
[730.57727051 -451.49652100]
[728.20452881 -436.68469238]
[725.48388672 -421.93276978]
[722.41687012 -407.24896240]
[719.00518799 -392.64138794]
[715.25073242 -378.11813354]
[711.15557861 -363.68722534]
[706.72198486 -349.35671997]
[701.95245361 -335.13446045]
[696.84954834 -321.02838135]
[691.41613770 -307.04629517]
[685.65521240 -293.19592285]
[679.57000732 -279.48492432]
[673.16387939 -265.92092896]
[666.44036865 -252.51142883]
[659.40313721 -239.26383972]
[652.05615234 -226.18551636]
[644.40344238 -213.28367615]
[636.44934082 -200.56549072]
[628.19812012 -188.03799438]
[619.65441895 -175.70811462]
[610.82293701 -163.58267212]
[601.70861816 -151.66841125]
[592.31646729 -139.97190857]
[582.65167236 -128.49964905]
[572.71960449 -117.25797272]
[562.52575684 -106.25312042]
[552.07586670 -95.49117279]
[541.37554932 -84.97810364]
[530.43084717 -74.71971893]
[519.24780273 -64.72171783]
[507.83258057 -54.98961639]
[496.19152832 -45.52882004]
[484.33108521 -36.34455872]
[472.25781250 -27.44191933]
[459.97839355 -18.82583618]
[447.49963379 -10.50107670]
[434.82846069 -2.47225142]
[421.97186279 5.25619316]
[408.93698120 12.67997742]
[395.73101807 19.79499054]
[382.36129761 26.59729385]
[368.83520508 33.08311844]
[355.16027832 39.24887085]
[341.34402466 45.09114456]
[327.39413452 50.60669708]
[313.31829834 55.79247665]
[299.12435913 60.64561081]
[284.82015991 65.16341400]
[270.41360474 69.34338379]
[255.91268921 73.18319702]
[241.32543945 76.68074799]
[226.65992737 79.83407593]
[211.92427063 82.64144897]
[197.12663269 85.10131073]
[182.27522278 87.21230316]
[167.37825012 88.97324371]
[152.44395447 90.38317108]
[137.48062134 91.44129944]
[122.49654388 92.14703369]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
