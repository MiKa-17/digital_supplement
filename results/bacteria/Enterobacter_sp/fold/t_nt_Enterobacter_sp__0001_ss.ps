%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 20:10:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__UAAGAGGCUA_U_____CUGAAUUUGUC__UA_GUAUACAGAG___UGCCUCG_______GGUGAUU__GAA_________AAUUACCC______GGGGCUUUCUUCUUU__CUGUCCCUCAA_____________CACUGCU________UGAGGCAGAAAGCCUGAAGCGCC_____________\
) } def
/len { sequence length } bind def

/coor [
[-98.18231201 460.61895752]
[-111.74439240 467.03356934]
[-125.58248138 472.82879639]
[-139.66830444 477.99276733]
[-153.97308350 482.51498413]
[-168.46759033 486.38619995]
[-183.12223816 489.59848022]
[-197.90705872 492.14526367]
[-212.79185486 494.02136230]
[-227.74623108 495.22293091]
[-242.73963928 495.74752808]
[-257.74142456 495.59408569]
[-272.72094727 494.76290894]
[-287.64761353 493.25567627]
[-302.49093628 491.07550049]
[-317.22058105 488.22680664]
[-331.80642700 484.71545410]
[-346.21871948 480.54855347]
[-360.42800903 475.73468018]
[-374.40524292 470.28363037]
[-388.12188721 464.20657349]
[-401.54992676 457.51586914]
[-414.66189575 450.22525024]
[-427.43103027 442.34957886]
[-439.83126831 433.90493774]
[-451.83721924 424.90859985]
[-463.42437744 415.37893677]
[-474.56909180 405.33538818]
[-485.24856567 394.79852295]
[-495.44100952 383.78982544]
[-505.12561035 372.33181763]
[-514.28253174 360.44787598]
[-522.89306641 348.16232300]
[-530.93969727 335.50018311]
[-538.40594482 322.48742676]
[-545.27655029 309.15054321]
[-551.53747559 295.51684570]
[-557.17590332 281.61413574]
[-562.18035889 267.47085571]
[-566.54058838 253.11585999]
[-570.24774170 238.57852173]
[-573.29418945 223.88851929]
[-575.67370605 209.07585144]
[-577.38146973 194.17079163]
[-578.41394043 179.20378113]
[-578.76904297 164.20541382]
[-578.44604492 149.20632935]
[-577.44561768 134.23715210]
[-575.76977539 119.32846832]
[-573.42193604 104.51074219]
[-570.40698242 89.81424713]
[-566.73095703 75.26899719]
[-562.40148926 60.90472031]
[-557.42730713 46.75075150]
[-551.81860352 32.83601379]
[-545.58691406 19.18892860]
[-538.74487305 5.83737993]
[-531.30651855 -7.19135761]
[-523.28704834 -19.87066650]
[-514.70275879 -32.17464066]
[-505.57131958 -44.07815170]
[-495.91128540 -55.55686951]
[-485.74243164 -66.58735657]
[-475.08554077 -77.14706421]
[-463.96234131 -87.21443939]
[-452.39559937 -96.76889038]
[-440.40893555 -105.79091644]
[-428.02682495 -114.26207733]
[-415.27456665 -122.16506958]
[-402.17822266 -129.48374939]
[-388.76455688 -136.20317078]
[-375.06094360 -142.30958557]
[-361.09542847 -147.79054260]
[-346.89648438 -152.63482666]
[-332.49313354 -156.83255005]
[-317.91482544 -160.37513733]
[-303.19131470 -163.25534058]
[-288.35269165 -165.46730042]
[-273.42929077 -167.00646973]
[-258.45156860 -167.86972046]
[-243.45014954 -168.05528259]
[-228.45565796 -167.56278992]
[-213.49874878 -166.39321899]
[-198.60997009 -164.54899597]
[-183.81971741 -162.03385925]
[-169.15823364 -158.85296631]
[-154.65547180 -155.01280212]
[-140.34103394 -150.52122498]
[-126.24420166 -145.38739014]
[-112.39373779 -139.62181091]
[-98.81796265 -133.23625183]
[-85.54459381 -126.24375916]
[-72.60076141 -118.65861511]
[-60.01290131 -110.49633026]
[-47.80673599 -101.77355957]
[-36.00719452 -92.50814056]
[-24.63838768 -82.71899414]
[-13.72354126 -72.42611694]
[-3.28495193 -61.65054703]
[6.65605402 -50.41428375]
[16.07916832 -38.74029160]
[24.96513748 -26.65241814]
[33.29581070 -14.17535782]
[41.05416870 -1.33460069]
[48.22436142 11.84362030]
[54.79174042 25.33238220]
[60.74288559 39.10412979]
[66.06564331 53.13072586]
[70.74913788 67.38351440]
[74.78380585 81.83338165]
[78.16139221 96.45080566]
[92.91397095 93.73759460]
[96.80453491 90.19058228]
[102.40849304 89.08577728]
[108.19863892 91.18703461]
[123.03285980 88.96308136]
[137.86708069 86.73912811]
[152.70129395 84.51517487]
[167.53550720 82.29122162]
[167.71780396 67.25915527]
[170.30917358 52.45101547]
[175.24252319 38.25037384]
[182.39002991 25.02504921]
[191.56658936 13.11761951]
[202.53450012 2.83651018]
[215.00965881 -5.55197144]
[228.66893005 -11.83054352]
[243.15850830 -15.83657551]
[258.10308838 -17.46630287]
[273.11553955 -16.67751122]
[287.80703735 -13.49063110]
[301.79702759 -7.98821211]
[314.72311401 -0.31277868]
[326.25048828 9.33685589]
[336.08059692 20.71074486]
[343.95877075 33.51427460]
[349.68099976 47.41580200]
[353.09899902 62.05524826]
[354.12426758 77.05341339]
[352.73025513 92.02181244]
[348.95306396 106.57272339]
[342.89053345 120.32924652]
[334.69970703 132.93504333]
[324.59271240 144.06361389]
[312.83139038 153.42668152]
[299.72033691 160.78173828]
[285.59921265 165.93824768]
[270.83374023 168.76268005]
[255.80641174 169.18183899]
[240.90646362 167.18487549]
[226.51985168 162.82353210]
[213.01921082 156.21075439]
[200.75422668 147.51785278]
[190.04261780 136.96998596]
[181.16183472 124.84036255]
[174.34188843 111.44316864]
[169.75947571 97.12543488]
[154.92524719 99.34938812]
[140.09103394 101.57334900]
[125.25681305 103.79730225]
[110.42259216 106.02125549]
[95.62717438 108.49017334]
[80.87460327 111.20338440]
[82.91881561 126.06603241]
[84.28933716 141.00587463]
[84.98336029 155.99238586]
[84.99948120 170.99494934]
[84.33765411 185.98291016]
[82.99922943 200.92565918]
[80.98695374 215.79266357]
[78.30493164 230.55355835]
[74.95864105 245.17817688]
[70.95491791 259.63665771]
[66.30194855 273.89944458]
[61.00922775 287.93740845]
[55.08757782 301.72186279]
[48.54909134 315.22463989]
[41.40712738 328.41818237]
[33.67627716 341.27551270]
[25.37233162 353.77038574]
[16.51225853 365.87725830]
[7.11415672 377.57138062]
[-2.80277252 388.82891846]
[-13.21827030 399.62680054]
[-24.11105728 409.94302368]
[-35.45888138 419.75646973]
[-47.23855972 429.04714966]
[-59.42602921 437.79602051]
[-71.99638367 445.98522949]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[111 163]
[112 162]
[115 161]
[116 160]
[117 159]
[118 158]
[119 157]
] def

init

% Start Annotations
112 162 0.16 1 colorpair
118 158 0.32 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
111 163 6 gmark
111 cmark
163 cmark
112 cmark
162 cmark
115 161 6 gmark
115 cmark
161 cmark
116 160 4 gmark
116 cmark
160 cmark
117 159 5 gmark
117 cmark
159 cmark
118 158 1 gmark
118 cmark
158 cmark
119 157 5 gmark
119 cmark
157 cmark

% End Annotations
showpage
end
%%EOF
