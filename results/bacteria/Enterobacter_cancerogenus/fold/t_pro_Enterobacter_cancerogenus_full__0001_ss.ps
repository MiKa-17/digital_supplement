%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 19:08:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
____________________AAUGCCAAAACGUGCUCUGCUGUUAGGUUUGUUUUUGAUCUGUACGACGCUGUUGAUCUUCACCUGGAUGGUGCGCGAUUCGCUAUGUGAAUUGCAUUUCAGACAGGAGAAAACAG_AGCUGGCGGCAGUGUUGGCUUACGAAGCAAA____\
) } def
/len { sequence length } bind def

/coor [
[83.52839661 482.02523804]
[69.65211487 476.28015137]
[56.56951904 468.90429688]
[44.47139740 460.00524902]
[33.53417587 449.71282959]
[23.91734505 438.17703247]
[15.76115417 425.56619263]
[9.18454170 412.06411743]
[4.28341293 397.86776733]
[1.12924254 383.18417358]
[-0.23197325 368.22741699]
[0.21961623 353.21563721]
[2.47742558 338.36773682]
[6.50852919 323.90026855]
[12.25414181 310.02420044]
[19.63047409 296.94189453]
[28.52996063 284.84411621]
[38.82281876 273.90725708]
[50.35894775 264.29086304]
[62.97011566 256.13516235]
[76.47241974 249.55903625]
[90.66895294 244.65844727]
[105.35268402 241.50482178]
[103.99259186 226.56660461]
[102.63249969 211.62840271]
[101.27240753 196.69018555]
[99.91231537 181.75198364]
[89.14083862 181.02760315]
[78.55873108 178.89021301]
[68.35053253 175.37709045]
[58.69425201 170.54948425]
[49.75829315 164.49159241]
[41.69848251 157.30905151]
[34.65536880 149.12710571]
[28.75178146 140.08847046]
[24.09066772 130.35073853]
[20.75331116 120.08372498]
[18.79791069 109.46647644]
[18.25856400 98.68415070]
[19.14468193 87.92477417]
[21.44080544 77.37596893]
[7.46824312 71.92001343]
[-6.50432014 66.46405029]
[-24.61978340 69.67392731]
[-35.06576538 55.59150314]
[-49.13509369 50.39016724]
[-63.20442581 45.18882751]
[-77.27375793 39.98749161]
[-91.34308624 34.78615189]
[-104.83432007 42.69315720]
[-120.24299622 40.02732849]
[-130.29360962 28.04738617]
[-130.24058533 12.40989208]
[-120.10894012 0.49839479]
[-104.68253326 -2.06286168]
[-91.24524689 5.93546963]
[-86.14175415 20.71682167]
[-72.07241821 25.91815948]
[-58.00308990 31.11949730]
[-43.93375778 36.32083511]
[-29.86442566 41.52217484]
[-18.72514343 36.74881744]
[-6.94689465 40.99483490]
[-1.04836166 52.49148941]
[12.92420101 57.94744873]
[26.89676476 63.40340805]
[43.28338242 41.12200165]
[66.16178894 25.57977867]
[92.91333008 18.55570793]
[120.47600555 20.85376358]
[125.54938507 6.73778629]
[130.62277222 -7.37819147]
[117.98287964 -18.50625420]
[110.58902740 -33.59591293]
[109.54507446 -50.33048630]
[114.98239136 -66.15271759]
[126.04406738 -78.65554810]
[141.01985168 -85.94833374]
[157.61048889 -86.94266510]
[162.16796875 -101.23355103]
[166.72543335 -115.52443695]
[171.28289795 -129.81532288]
[175.84036255 -144.10621643]
[164.29054260 -153.94883728]
[157.40751648 -167.42723083]
[156.21244812 -182.47334290]
[160.85636902 -196.79191589]
[170.60202026 -208.21063232]
[183.94062805 -215.00967407]
[198.82545471 -216.18070984]
[203.38291931 -230.47160339]
[207.94038391 -244.76249695]
[201.88642883 -259.61944580]
[209.85287476 -273.54479980]
[225.72854614 -275.85620117]
[237.33499146 -264.78054810]
[235.76873779 -248.81413269]
[222.23127747 -240.20501709]
[217.67381287 -225.91413879]
[213.11633301 -211.62324524]
[224.57505798 -202.05105591]
[231.51480103 -188.78509521]
[232.85043335 -173.83247375]
[228.34744263 -159.46896362]
[218.66227722 -147.89263916]
[205.24691772 -140.88754272]
[190.13125610 -139.54875183]
[185.57379150 -125.25785828]
[181.01632690 -110.96697235]
[176.45884705 -96.67608643]
[171.90138245 -82.38519287]
[182.58393860 -74.46910858]
[190.31263733 -63.62218475]
[194.32035828 -50.89680099]
[194.20176697 -37.53294754]
[189.95439148 -24.83739853]
[181.98014832 -14.05593109]
[171.04736328 -6.25108433]
[158.21681213 -2.19744968]
[144.73873901 -2.30481195]
[139.66535950 11.81116581]
[134.59197998 25.92714310]
[144.09114075 31.15695000]
[152.81455994 37.59794998]
[160.60879517 45.13682556]
[167.33670044 53.64094162]
[172.87991333 62.96067429]
[177.14091492 72.93206024]
[180.04472351 83.37966919]
[181.54026794 94.11968994]
[181.60122681 104.96316528]
[180.22653198 115.71932220]
[177.44036865 126.19892120]
[173.29174805 136.21759033]
[167.85366821 145.59906006]
[161.22180176 154.17826843]
[153.51281738 161.80430603]
[144.86235046 168.34297180]
[135.42260742 173.67926025]
[125.35964966 177.71925354]
[114.85052490 180.39189148]
[116.21061707 195.33009338]
[117.57070923 210.26831055]
[118.93080139 225.20652771]
[120.29089355 240.14472961]
[135.30271912 240.59463501]
[150.15086365 242.85078430]
[164.61877441 246.88026428]
[178.49548340 252.62431335]
[191.57862854 259.99917603]
[203.67742920 268.89730835]
[214.61541748 279.18893433]
[224.23310852 290.72399902]
[232.39024353 303.33425903]
[238.96786499 316.83581543]
[243.87005615 331.03179932]
[247.02532959 345.71517944]
[248.38766479 360.67181396]
[247.93719482 375.68362427]
[245.68049622 390.53167725]
[241.65046692 404.99945068]
[235.90589905 418.87594604]
[228.53054810 431.95883179]
[219.63195801 444.05728149]
[209.33992004 454.99487305]
[197.80450439 464.61215210]
[185.19395447 472.76879883]
[171.69213867 479.34591675]
[157.49597168 484.24758911]
[142.81248474 487.40231323]
[127.85577393 488.76406860]
[112.84398651 488.31304932]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 145]
[24 144]
[25 143]
[26 142]
[27 141]
[41 66]
[42 65]
[43 64]
[45 61]
[46 60]
[47 59]
[48 58]
[49 57]
[70 122]
[71 121]
[72 120]
[79 111]
[80 110]
[81 109]
[82 108]
[83 107]
[90 100]
[91 99]
[92 98]
] def

init

% Start Annotations
23 145 0.16 0.6 colorpair
24 144 0.0 0.6 colorpair
25 143 0.0 0.6 colorpair
26 142 0.0 0.6 colorpair
27 141 0.0 0.6 colorpair
41 66 0.16 1 colorpair
42 65 0.16 0.6 colorpair
43 64 0.16 0.6 colorpair
45 61 0.0 0.2 colorpair
46 60 0.16 0.6 colorpair
47 59 0.16 0.2 colorpair
48 58 0.16 1 colorpair
49 57 0.32 1 colorpair
70 122 0.16 0.2 colorpair
71 121 0.16 1 colorpair
72 120 0.16 1 colorpair
79 111 0.0 1 colorpair
80 110 0.0 1 colorpair
81 109 0.0 1 colorpair
82 108 0.16 0.6 colorpair
83 107 0.0 0.6 colorpair
90 100 0.16 0.6 colorpair
91 99 0.16 0.2 colorpair
92 98 0.16 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
23 145 1 gmark
23 cmark
24 144 1 gmark
25 143 1 gmark
26 142 1 gmark
27 141 1 gmark
41 cmark
66 cmark
42 65 1 gmark
42 cmark
65 cmark
43 64 1 gmark
43 cmark
64 cmark
45 61 2 gmark
46 60 1 gmark
46 cmark
60 cmark
47 59 2 gmark
59 cmark
48 cmark
58 cmark
49 cmark
57 cmark
70 122 2 gmark
70 cmark
121 cmark
72 cmark
120 cmark
82 108 1 gmark
82 cmark
108 cmark
83 107 1 gmark
90 100 1 gmark
90 cmark
100 cmark
91 99 2 gmark
99 cmark
92 98 2 gmark
92 cmark
98 cmark

% End Annotations
showpage
end
%%EOF
