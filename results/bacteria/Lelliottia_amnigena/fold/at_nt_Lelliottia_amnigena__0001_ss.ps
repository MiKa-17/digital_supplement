%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 06:51:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_________________________________________UGAUCCUUAACGUCAUAAUACGUGCCUGAAAUUGCGAGUUAGAAAGCGAUCGCGAACACUCAGAGCGGGCA__UAA___AG__UGU__UGC_G______AACCGCA____C__G_AAA___CC_CGC__CG_CGGGG__U_U_____________________________\
) } def
/len { sequence length } bind def

/coor [
[110.22034454 541.50738525]
[95.33415222 541.60101318]
[80.45326996 541.19287109]
[65.59458923 540.28338623]
[50.77500534 538.87365723]
[36.01135254 536.96527100]
[21.32040787 534.56036377]
[6.71886349 531.66168213]
[-7.77669048 528.27258301]
[-22.14978218 524.39678955]
[-36.38408279 520.03881836]
[-50.46341324 515.20355225]
[-64.37178040 509.89648438]
[-78.09337616 504.12368774]
[-91.61261749 497.89169312]
[-104.91413879 491.20761108]
[-117.98281860 484.07901001]
[-130.80381775 476.51400757]
[-143.36256409 468.52117920]
[-155.64479065 460.10961914]
[-167.63653564 451.28887939]
[-179.32418823 442.06900024]
[-190.69444275 432.46044922]
[-201.73440552 422.47412109]
[-212.43151855 412.12136841]
[-222.77363586 401.41397095]
[-232.74897766 390.36410522]
[-242.34625244 378.98431396]
[-251.55453491 367.28750610]
[-260.36334229 355.28701782]
[-268.76269531 342.99642944]
[-276.74304199 330.42974854]
[-284.29531860 317.60125732]
[-291.41094971 304.52548218]
[-298.08181763 291.21734619]
[-304.30035400 277.69192505]
[-310.05953979 263.96459961]
[-315.35275269 250.05096436]
[-320.17404175 235.96684265]
[-324.51788330 221.72821045]
[-328.37939453 207.35128784]
[-331.75415039 192.85237122]
[-334.63830566 178.24795532]
[-337.02862549 163.55462646]
[-338.92236328 148.78909302]
[-340.31735229 133.96810913]
[-341.21203613 119.10853577]
[-341.60540771 104.22724915]
[-341.49697876 89.34116364]
[-340.88693237 74.46718597]
[-339.77590942 59.62221909]
[-338.16516113 44.82313156]
[-336.05657959 30.08674049]
[-333.45251465 15.42978668]
[-330.35592651 0.86892796]
[-326.77035522 -13.57929325]
[-322.69989014 -27.89845848]
[-318.14910889 -42.07229996]
[-313.12319946 -56.08470917]
[-307.62786865 -69.91976929]
[-301.66937256 -83.56175232]
[-295.25448608 -96.99517059]
[-308.56390381 -103.91322327]
[-321.87332153 -110.83126831]
[-335.18273926 -117.74932098]
[-349.00454712 -110.69688416]
[-364.32669067 -113.14885712]
[-375.25744629 -124.16240692]
[-377.59371948 -139.50259399]
[-370.43719482 -153.27081299]
[-356.53967285 -160.17288208]
[-341.24505615 -157.55484009]
[-330.43441772 -146.42337036]
[-328.26467896 -131.05873108]
[-314.95526123 -124.14068604]
[-301.64584351 -117.22263336]
[-288.33642578 -110.30458832]
[-280.90747070 -123.47865295]
[-273.03173828 -136.39060974]
[-264.71850586 -149.02532959]
[-255.97750854 -161.36796570]
[-246.81901550 -173.40405273]
[-237.25373840 -185.11949158]
[-227.29290771 -196.50050354]
[-216.94822693 -207.53378296]
[-206.23179626 -218.20635986]
[-195.15620422 -228.50573730]
[-183.73445129 -238.41981506]
[-171.97990417 -247.93698120]
[-159.90635681 -257.04605103]
[-147.52798462 -265.73638916]
[-134.85929871 -273.99774170]
[-121.91516113 -281.82046509]
[-108.71074677 -289.19534302]
[-95.26154327 -296.11380005]
[-81.58332825 -302.56762695]
[-67.69214630 -308.54931641]
[-53.60427856 -314.05184937]
[-39.33625412 -319.06875610]
[-24.90481186 -323.59414673]
[-10.32687473 -327.62271118]
[4.38046122 -331.14974976]
[19.19994545 -334.17111206]
[34.11419296 -336.68325806]
[49.10572052 -338.68322754]
[64.15693665 -340.16870117]
[79.25019073 -341.13790894]
[94.36778259 -341.58972168]
[109.49198151 -341.52362061]
[124.60504150 -340.93966675]
[139.68925476 -339.83856201]
[154.72691345 -338.22158813]
[169.70037842 -336.09066772]
[184.59210205 -333.44824219]
[199.38461304 -330.29745483]
[214.06054688 -326.64199829]
[228.60272217 -322.48614502]
[242.99404907 -317.83477783]
[257.21768188 -312.69335938]
[271.25689697 -307.06790161]
[285.09527588 -300.96502686]
[298.71655273 -294.39184570]
[312.10476685 -287.35614014]
[325.24420166 -279.86608887]
[338.11947632 -271.93051147]
[350.71548462 -263.55874634]
[363.01739502 -254.76054382]
[375.01086426 -245.54627991]
[386.68176270 -235.92672729]
[398.01641846 -225.91319275]
[409.00158691 -215.51741028]
[419.62429810 -204.75155640]
[429.87216187 -193.62828064]
[439.73312378 -182.16062927]
[449.19561768 -170.36203003]
[458.24856567 -158.24633789]
[466.88131714 -145.82777405]
[475.08380127 -133.12088013]
[482.84634399 -120.14057159]
[490.15988159 -106.90206146]
[497.01580811 -93.42089844]
[503.40609741 -79.71286774]
[509.32327271 -65.79406738]
[514.76031494 -51.68081665]
[519.71093750 -37.38966370]
[524.16931152 -22.93737030]
[528.13018799 -8.34089088]
[531.58892822 6.38265753]
[534.54144287 21.21600533]
[536.98437500 36.14175415]
[538.91473389 51.14239883]
[540.33032227 66.20034790]
[541.22943115 81.29794312]
[541.61108398 96.41746521]
[541.47479248 111.54119110]
[540.82073975 126.65138245]
[539.64959717 141.73031616]
[537.96289062 156.76031494]
[535.76245117 171.72372437]
[533.05096436 186.60302734]
[529.83154297 201.38075256]
[526.10797119 216.03956604]
[521.88470459 230.56228638]
[536.13677979 235.23960876]
[550.38891602 239.91691589]
[564.64105225 244.59423828]
[578.89312744 249.27156067]
[593.14526367 253.94886780]
[609.07635498 250.05886841]
[620.21362305 262.09600830]
[615.10003662 277.67749023]
[598.99597168 280.77444458]
[588.46795654 268.20098877]
[574.21582031 263.52365112]
[559.96368408 258.84634399]
[545.71160889 254.16903687]
[531.45947266 249.49171448]
[517.20739746 244.81439209]
[512.08959961 258.79351807]
[506.50354004 272.59219360]
[500.45562744 286.19476318]
[493.95269775 299.58578491]
[487.00210571 312.75000000]
[479.61181641 325.67248535]
[471.79016113 338.33856201]
[463.54608154 350.73382568]
[454.88891602 362.84417725]
[445.82849121 374.65588379]
[436.37512207 386.15551758]
[426.53955078 397.32998657]
[416.33294678 408.16662598]
[405.76690674 418.65310669]
[394.85345459 428.77749634]
[383.60494995 438.52835083]
[372.03421021 447.89450073]
[360.15435791 456.86538696]
[347.97891235 465.43078613]
[335.52169800 473.58096313]
[322.79687500 481.30664062]
[309.81890869 488.59906006]
[296.60250854 495.44995117]
[283.16271973 501.85147095]
[269.51483154 507.79641724]
[255.67433167 513.27801514]
[241.65693665 518.28997803]
[227.47857666 522.82672119]
[213.15538025 526.88293457]
[198.70359802 530.45416260]
[184.13967896 533.53631592]
[169.48014832 536.12579346]
[154.74166870 538.21972656]
[139.94097900 539.81579590]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[62 77]
[63 76]
[64 75]
[65 74]
[163 178]
[164 177]
[165 176]
[166 175]
[167 174]
[168 173]
] def

init

% Start Annotations
62 77 0.16 1 colorpair
63 76 0.32 1 colorpair
64 75 0.32 1 colorpair
65 74 0.16 1 colorpair
164 177 0.0 0.2 colorpair
165 176 0.32 0.2 colorpair
167 174 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
62 cmark
77 cmark
63 cmark
76 cmark
64 cmark
75 cmark
65 cmark
163 178 3 gmark
164 177 2 gmark
165 176 2 gmark
165 cmark
176 cmark
166 175 3 gmark
167 174 2 gmark
168 173 3 gmark
168 cmark
173 cmark

% End Annotations
showpage
end
%%EOF
