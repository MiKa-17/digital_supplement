%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 06:51:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_______________________________AUGAGCAGCGUGGAUAAGGUGAAAAUUAUCCUCAAACUCAUUGUUGCGGUACUGCAAC__UGCUUGAUGCCG___UCCUGAAAUACC_\
) } def
/len { sequence length } bind def

/coor [
[93.38656616 297.44464111]
[79.74996948 303.69311523]
[65.40849304 308.08880615]
[50.61260986 310.55493164]
[35.62073135 311.04843140]
[20.69469261 309.56069946]
[6.09517908 306.11770630]
[-7.92282438 300.77957153]
[-21.11449242 293.63955688]
[-33.24943161 284.82232666]
[-44.11570358 274.48193359]
[-53.52352142 262.79891968]
[-61.30858612 249.97732544]
[-67.33492279 236.24113464]
[-71.49728394 221.83020020]
[-73.72296906 206.99624634]
[-73.97311401 191.99833679]
[-72.24333954 177.09840393]
[-68.56386566 162.55668640]
[-62.99895477 148.62716675]
[-55.64579391 135.55310059]
[-46.63280869 123.56285095]
[-36.11740875 112.86582184]
[-24.28325462 103.64884186]
[-11.33702755 96.07287598]
[2.49516535 90.27025604]
[16.97174263 86.34231567]
[31.83986664 84.35765076]
[46.83986282 84.35093689]
[61.70975876 86.32228851]
[76.18984985 90.23726654]
[90.01994324 96.02387238]
[83.91889191 82.32068634]
[77.81784058 68.61750793]
[71.71678925 54.91432571]
[65.61574554 41.21114349]
[51.89005280 39.33477783]
[40.98989487 30.96201324]
[35.72190857 18.38465118]
[37.37486267 4.95863008]
[45.40619278 -5.79126787]
[39.66593933 -19.64946175]
[33.92568970 -33.50765228]
[28.18543625 -47.36584854]
[22.44518471 -61.22404099]
[16.70493317 -75.08222961]
[10.45384312 -81.91513062]
[11.00105858 -89.37911224]
[5.62553930 -103.38281250]
[0.25002009 -117.38652039]
[-13.76222038 -125.19911957]
[-16.24832916 -141.04837036]
[-5.30117512 -152.77609253]
[10.68152142 -151.38577271]
[19.43920326 -137.94395447]
[14.25372601 -122.76203918]
[19.62924576 -108.75833130]
[25.00476456 -94.75463104]
[30.56312561 -80.82248688]
[36.30337906 -66.96429443]
[42.04362869 -53.10609818]
[47.78388214 -39.24790573]
[53.52413177 -25.38971329]
[59.26438522 -11.53151989]
[75.29093170 -8.24995518]
[86.34729004 4.03071785]
[87.96601105 20.64190865]
[79.31892395 35.11009598]
[85.41997528 48.81327820]
[91.52102661 62.51645660]
[97.62207031 76.21964264]
[103.72312164 89.92282104]
[108.05418396 75.56169891]
[122.26996613 70.77510071]
[134.40524292 79.59185028]
[134.24591064 94.59100342]
[121.92600250 103.14798737]
[136.89389038 104.12903595]
[151.88874817 104.52169037]
[166.88360596 104.91434479]
[181.87846375 105.30699921]
[196.87333679 105.69965363]
[204.43293762 97.66461945]
[214.96757507 95.23548126]
[224.86872864 98.99231720]
[230.88352966 107.43826294]
[245.83729553 108.61515045]
[260.79104614 109.79203796]
[272.64443970 99.33868408]
[288.41223145 100.41202545]
[298.73968506 112.37527466]
[297.49969482 128.13084412]
[285.42794800 138.33123779]
[269.68637085 136.92474365]
[259.61416626 124.74579620]
[244.66041565 123.56891632]
[229.70664978 122.39202881]
[213.03829956 132.04824829]
[196.48068237 120.69451141]
[181.48580933 120.30185699]
[166.49095154 119.90920258]
[151.49609375 119.51654816]
[136.50123596 119.12389374]
[133.64672852 121.38781738]
[129.51260376 122.31252289]
[124.77394867 121.29325104]
[120.35807800 118.06581879]
[130.14009094 129.43737793]
[138.33715820 141.99954224]
[144.80609131 155.53294373]
[149.43394470 169.80119324]
[152.13986206 184.55511475]
[152.87660217 199.53700256]
[151.63128662 214.48521423]
[148.42567444 229.13868713]
[143.31575012 243.24147034]
[136.39074707 256.54727173]
[127.77162933 268.82369995]
[117.60891724 279.85635376]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 72]
[33 71]
[34 70]
[35 69]
[36 68]
[41 64]
[42 63]
[43 62]
[44 61]
[45 60]
[46 59]
[48 58]
[49 57]
[50 56]
[77 107]
[78 103]
[79 102]
[80 101]
[81 100]
[82 99]
[86 97]
[87 96]
[88 95]
] def

init

% Start Annotations
32 72 0.16 0.6 colorpair
33 71 0.32 1 colorpair
34 70 0.0 0.6 colorpair
35 69 0.16 0.6 colorpair
36 68 0.16 1 colorpair
41 64 0.16 0.6 colorpair
42 63 0.16 0.2 colorpair
43 62 0.0 0.2 colorpair
44 61 0.0 0.6 colorpair
45 60 0.16 0.6 colorpair
46 59 0.32 1 colorpair
48 58 0.16 0.2 colorpair
49 57 0.32 1 colorpair
50 56 0.32 0.6 colorpair
77 107 0.32 1 colorpair
78 103 0.0 0.6 colorpair
79 102 0.16 0.6 colorpair
80 101 0.0 0.6 colorpair
81 100 0.32 1 colorpair
82 99 0.16 1 colorpair
86 97 0.16 0.6 colorpair
87 96 0.0 1 colorpair
88 95 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
32 72 1 gmark
32 cmark
33 cmark
71 cmark
34 70 1 gmark
35 69 1 gmark
35 cmark
68 cmark
41 64 1 gmark
41 cmark
64 cmark
42 63 2 gmark
63 cmark
43 62 2 gmark
44 61 1 gmark
45 60 1 gmark
45 cmark
60 cmark
46 cmark
59 cmark
48 58 2 gmark
48 cmark
58 cmark
49 cmark
57 cmark
50 56 1 gmark
50 cmark
56 cmark
77 cmark
107 cmark
78 103 1 gmark
79 102 1 gmark
79 cmark
102 cmark
80 101 1 gmark
81 cmark
100 cmark
82 cmark
99 cmark
86 97 1 gmark
86 cmark
88 cmark
95 cmark

% End Annotations
showpage
end
%%EOF
