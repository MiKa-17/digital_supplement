%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 19:08:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
C_____U________U__U__U__U_UGUAUGACGCUAAUGAUCUUUACCUGAAUUACGCGCAACUCGCUGUGCGAGUUUCC___UU_UG___AGUUAGGGGAAUACGGAGGUGGCAGCAGCGUUGGCUUGCGAA_CC_____CUGA_UAGC___CCUCGGCGGGG_GG_____GUCCCGC____________________G________________A_GC_CC_______________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50400543 92.11999512]
[62.52245712 91.36022949]
[47.56495667 90.22118378]
[32.64111710 88.70358276]
[17.76050758 86.80841827]
[2.93268538 84.53688812]
[-11.83283424 81.89045715]
[-26.52657509 78.87082672]
[-41.13910294 75.47993469]
[-55.66104126 71.71994781]
[-70.08306885 67.59329987]
[-84.39592743 63.10261917]
[-98.59043884 58.25079727]
[-112.65747833 53.04094696]
[-126.58802032 47.47640991]
[-140.37313843 41.56076431]
[-154.00396729 35.29780197]
[-167.47175598 28.69154167]
[-180.76786804 21.74622726]
[-193.88378906 14.46631432]
[-206.81106567 6.85647583]
[-219.54141235 -1.07840335]
[-232.06666565 -9.33323002]
[-244.37878418 -17.90270615]
[-256.46984863 -26.78133202]
[-268.33215332 -35.96340942]
[-279.95800781 -45.44304276]
[-291.33999634 -55.21414948]
[-302.47079468 -65.27045441]
[-313.34329224 -75.60550690]
[-323.95046997 -86.21267700]
[-334.28552246 -97.08514404]
[-344.34182739 -108.21594238]
[-354.11294556 -119.59792328]
[-363.59259033 -131.22377014]
[-372.77468872 -143.08604431]
[-381.65332031 -155.17710876]
[-390.22280884 -167.48922729]
[-398.47766113 -180.01446533]
[-406.41253662 -192.74481201]
[-414.02239990 -205.67207336]
[-421.30233765 -218.78797913]
[-428.24765015 -232.08409119]
[-434.85394287 -245.55187988]
[-441.11691284 -259.18270874]
[-447.03256226 -272.96780396]
[-452.59710693 -286.89834595]
[-457.80697632 -300.96539307]
[-462.65881348 -315.15988159]
[-467.14950562 -329.47274780]
[-471.27618408 -343.89477539]
[-475.03616333 -358.41668701]
[-478.42709351 -373.02923584]
[-481.44671631 -387.72296143]
[-484.09317017 -402.48846436]
[-486.36471558 -417.31628418]
[-488.25991821 -432.19689941]
[-489.77752686 -447.12075806]
[-490.91659546 -462.07824707]
[-491.67636108 -477.05978394]
[-492.05636597 -492.05578613]
[-492.05639648 -507.05657959]
[-491.67639160 -522.05255127]
[-490.91659546 -537.03411865]
[-489.77755737 -551.99163818]
[-488.25994873 -566.91546631]
[-486.36477661 -581.79608154]
[-484.09323120 -596.62390137]
[-481.44680786 -611.38940430]
[-478.42718506 -626.08312988]
[-475.03628540 -640.69567871]
[-471.27627563 -655.21765137]
[-467.14962769 -669.63964844]
[-462.65893555 -683.95251465]
[-457.80712891 -698.14703369]
[-452.59725952 -712.21405029]
[-447.03271484 -726.14459229]
[-441.11706543 -739.92968750]
[-434.85409546 -753.56054688]
[-428.24783325 -767.02832031]
[-421.30252075 -780.32446289]
[-414.02261353 -793.44036865]
[-406.41275024 -806.36761475]
[-398.47787476 -819.09796143]
[-390.22305298 -831.62322998]
[-381.65356445 -843.93536377]
[-372.77493286 -856.02642822]
[-363.59286499 -867.88867188]
[-354.11322021 -879.51452637]
[-344.34210205 -890.89654541]
[-334.28579712 -902.02734375]
[-323.95074463 -912.89984131]
[-313.34356689 -923.50695801]
[-302.47109985 -933.84204102]
[-291.34030151 -943.89837646]
[-279.95831299 -953.66949463]
[-268.33245850 -963.14910889]
[-256.47018433 -972.33117676]
[-244.37911987 -981.20983887]
[-232.06700134 -989.77929688]
[-219.54174805 -998.03417969]
[-206.81140137 -1005.96905518]
[-193.88414001 -1013.57891846]
[-180.76823425 -1020.85882568]
[-167.47212219 -1027.80407715]
[-154.00431824 -1034.41040039]
[-140.37350464 -1040.67333984]
[-126.58839417 -1046.58898926]
[-112.65785217 -1052.15356445]
[-98.59081268 -1057.36340332]
[-84.39631653 -1062.21520996]
[-70.08345795 -1066.70593262]
[-55.66143036 -1070.83264160]
[-41.13949585 -1074.59265137]
[-26.52696800 -1077.98352051]
[-11.83323002 -1081.00317383]
[2.93228793 -1083.64965820]
[17.76010895 -1085.92114258]
[32.64071655 -1087.81628418]
[47.56455612 -1089.33398438]
[62.52205276 -1090.47302246]
[77.50360870 -1091.23278809]
[92.49959564 -1091.61279297]
[107.50040436 -1091.61279297]
[122.49639130 -1091.23278809]
[137.47795105 -1090.47302246]
[152.43544006 -1089.33398438]
[167.35928345 -1087.81628418]
[182.23988342 -1085.92114258]
[197.06771851 -1083.64965820]
[211.83323669 -1081.00317383]
[226.52696228 -1077.98352051]
[241.13949585 -1074.59265137]
[255.66143799 -1070.83264160]
[270.08346558 -1066.70593262]
[284.39630127 -1062.21520996]
[298.59082031 -1057.36340332]
[312.65786743 -1052.15356445]
[326.58840942 -1046.58898926]
[340.37350464 -1040.67333984]
[354.00433350 -1034.41040039]
[367.47210693 -1027.80407715]
[380.76821899 -1020.85882568]
[393.88412476 -1013.57891846]
[406.81140137 -1005.96905518]
[419.54174805 -998.03417969]
[432.06701660 -989.77929688]
[444.37911987 -981.20983887]
[456.47018433 -972.33117676]
[468.33245850 -963.14910889]
[479.95831299 -953.66949463]
[491.34030151 -943.89837646]
[502.47109985 -933.84204102]
[513.34356689 -923.50695801]
[523.95074463 -912.89984131]
[534.28576660 -902.02734375]
[544.34210205 -890.89654541]
[554.11322021 -879.51452637]
[563.59283447 -867.88867188]
[572.77496338 -856.02642822]
[581.65356445 -843.93536377]
[590.22302246 -831.62322998]
[598.47790527 -819.09796143]
[606.41278076 -806.36761475]
[614.02258301 -793.44036865]
[621.30249023 -780.32446289]
[628.24786377 -767.02832031]
[634.85412598 -753.56054688]
[641.11706543 -739.92968750]
[647.03271484 -726.14459229]
[652.59729004 -712.21405029]
[657.80712891 -698.14703369]
[662.65893555 -683.95251465]
[667.14965820 -669.63964844]
[671.27630615 -655.21765137]
[675.03625488 -640.69567871]
[678.42718506 -626.08312988]
[681.44677734 -611.38940430]
[684.09326172 -596.62390137]
[686.36474609 -581.79608154]
[688.25994873 -566.91546631]
[689.77752686 -551.99163818]
[690.91662598 -537.03411865]
[691.67639160 -522.05255127]
[692.05639648 -507.05657959]
[692.05639648 -492.05578613]
[691.67639160 -477.05978394]
[690.91656494 -462.07824707]
[689.77752686 -447.12075806]
[688.25988770 -432.19689941]
[686.36474609 -417.31628418]
[684.09320068 -402.48846436]
[681.44671631 -387.72296143]
[678.42706299 -373.02923584]
[675.03619385 -358.41668701]
[671.27618408 -343.89477539]
[667.14953613 -329.47274780]
[662.65881348 -315.15988159]
[657.80700684 -300.96539307]
[652.59710693 -286.89834595]
[647.03259277 -272.96780396]
[641.11688232 -259.18270874]
[634.85394287 -245.55187988]
[628.24768066 -232.08409119]
[621.30230713 -218.78797913]
[614.02239990 -205.67207336]
[606.41253662 -192.74481201]
[598.47766113 -180.01446533]
[590.22283936 -167.48922729]
[581.65332031 -155.17710876]
[572.77471924 -143.08604431]
[563.59259033 -131.22377014]
[554.11297607 -119.59792328]
[544.34185791 -108.21594238]
[534.28552246 -97.08514404]
[523.95043945 -86.21267700]
[513.34326172 -75.60550690]
[502.47079468 -65.27045441]
[491.33999634 -55.21414948]
[479.95800781 -45.44304276]
[468.33215332 -35.96340942]
[456.46984863 -26.78133202]
[444.37878418 -17.90270615]
[432.06668091 -9.33323002]
[419.54141235 -1.07840335]
[406.81106567 6.85647583]
[393.88378906 14.46631432]
[380.76788330 21.74622726]
[367.47177124 28.69154167]
[354.00396729 35.29780197]
[340.37313843 41.56076431]
[326.58801270 47.47640991]
[312.65747070 53.04094696]
[298.59042358 58.25079727]
[284.39593506 63.10261917]
[270.08306885 67.59329987]
[255.66104126 71.71994781]
[241.13909912 75.47993469]
[226.52658081 78.87082672]
[211.83283997 81.89045715]
[197.06732178 84.53688812]
[182.23948669 86.80841827]
[167.35888672 88.70358276]
[152.43504333 90.22118378]
[137.47753906 91.36022949]
[122.49599457 92.11999512]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
