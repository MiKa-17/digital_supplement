%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 03:45:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__________________________________________________________________________________________________AUGACGCUCACACAGUUGGGUCUGAUCUUA_UGGGACGAU__CUGGCGGCGCCGAUAAUCGC________UGGCAUCGUGGUCAGUAUUAUCGUCA__GCUGGAUGCAUAACCAGA_AGUGA___________________________________\
_________________________________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50218201 92.21951294]
[62.51223373 91.65863037]
[47.53539658 90.81755829]
[32.57690048 89.69657135]
[17.64198303 88.29608154]
[2.73586345 86.61656952]
[-12.13624477 84.65862274]
[-26.96914101 82.42292786]
[-41.75764084 79.91026306]
[-56.49656677 77.12151337]
[-71.18077087 74.05764771]
[-85.80512238 70.71974182]
[-100.36449432 67.10895538]
[-114.85380554 63.22656250]
[-129.26799011 59.07391357]
[-143.60200500 54.65245819]
[-157.85083008 49.96374893]
[-172.00949097 45.00942230]
[-186.07304382 39.79121017]
[-200.03656006 34.31093597]
[-213.89515686 28.57052231]
[-227.64399719 22.57196999]
[-241.27825928 16.31737900]
[-254.79319763 9.80893517]
[-268.18405151 3.04891586]
[-281.44616699 -3.96031523]
[-294.57492065 -11.21630764]
[-307.56567383 -18.71652412]
[-320.41390991 -26.45834160]
[-333.11517334 -34.43905258]
[-345.66494751 -42.65586853]
[-358.05889893 -51.10591125]
[-370.29266357 -59.78623199]
[-382.36199951 -68.69379425]
[-394.26263428 -77.82547760]
[-405.99044800 -87.17810059]
[-417.54132080 -96.74837494]
[-428.91125488 -106.53297424]
[-440.09619141 -116.52845764]
[-451.09231567 -126.73134613]
[-461.89569092 -137.13806152]
[-472.50262451 -147.74497986]
[-482.90933228 -158.54837036]
[-493.11224365 -169.54446411]
[-503.10772705 -180.72941589]
[-512.89233398 -192.09933472]
[-522.46258545 -203.65020752]
[-531.81524658 -215.37802124]
[-540.94689941 -227.27867126]
[-549.85449219 -239.34797668]
[-558.53479004 -251.58175659]
[-566.98486328 -263.97570801]
[-575.20166016 -276.52548218]
[-583.18237305 -289.22671509]
[-590.92419434 -302.07495117]
[-598.42443848 -315.06570435]
[-605.68041992 -328.19445801]
[-612.68969727 -341.45657349]
[-619.44970703 -354.84741211]
[-625.95812988 -368.36236572]
[-632.21276855 -381.99661255]
[-638.21130371 -395.74545288]
[-643.95172119 -409.60403442]
[-649.43200684 -423.56756592]
[-654.65020752 -437.63110352]
[-659.60455322 -451.78976440]
[-664.29327393 -466.03860474]
[-668.71472168 -480.37261963]
[-672.86737061 -494.78680420]
[-676.74981689 -509.27609253]
[-680.36059570 -523.83544922]
[-683.69848633 -538.45983887]
[-686.76239014 -553.14404297]
[-689.55114746 -567.88293457]
[-692.06378174 -582.67144775]
[-694.29949951 -597.50433350]
[-696.25744629 -612.37646484]
[-697.93695068 -627.28259277]
[-699.33746338 -642.21746826]
[-700.45843506 -657.17596436]
[-701.29956055 -672.15283203]
[-701.86041260 -687.14276123]
[-702.14093018 -702.14056396]
[-702.14093018 -717.14105225]
[-701.86041260 -732.13885498]
[-701.29956055 -747.12878418]
[-700.45843506 -762.10565186]
[-699.33746338 -777.06414795]
[-697.93701172 -791.99902344]
[-696.25744629 -806.90515137]
[-694.29949951 -821.77728271]
[-692.06384277 -836.61016846]
[-689.55114746 -851.39868164]
[-686.76239014 -866.13757324]
[-683.69854736 -880.82177734]
[-680.36065674 -895.44616699]
[-676.74981689 -910.00549316]
[-672.86743164 -924.49481201]
[-668.71478271 -938.90899658]
[-664.29333496 -953.24304199]
[-659.60461426 -967.49182129]
[-654.65026855 -981.65051270]
[-649.43206787 -995.71405029]
[-643.95178223 -1009.67755127]
[-638.21136475 -1023.53619385]
[-632.21282959 -1037.28503418]
[-625.95825195 -1050.91931152]
[-619.44982910 -1064.43420410]
[-612.68975830 -1077.82507324]
[-605.68054199 -1091.08715820]
[-598.42456055 -1104.21594238]
[-590.92431641 -1117.20666504]
[-583.18249512 -1130.05493164]
[-575.20178223 -1142.75622559]
[-566.98498535 -1155.30590820]
[-558.53491211 -1167.69995117]
[-549.85461426 -1179.93371582]
[-540.94708252 -1192.00292969]
[-531.81536865 -1203.90368652]
[-522.46276855 -1215.63146973]
[-512.89245605 -1227.18237305]
[-503.10787964 -1238.55224609]
[-493.11236572 -1249.73718262]
[-482.90948486 -1260.73327637]
[-472.50277710 -1271.53674316]
[-461.89587402 -1282.14355469]
[-451.09246826 -1292.55029297]
[-440.09637451 -1302.75317383]
[-428.91140747 -1312.74865723]
[-417.54150391 -1322.53332520]
[-405.99063110 -1332.10363770]
[-394.26281738 -1341.45617676]
[-382.36215210 -1350.58789062]
[-370.29284668 -1359.49548340]
[-358.05908203 -1368.17578125]
[-345.66513062 -1376.62585449]
[-333.11535645 -1384.84265137]
[-320.41412354 -1392.82336426]
[-307.56585693 -1400.56518555]
[-294.57510376 -1408.06542969]
[-281.44638062 -1415.32141113]
[-268.18426514 -1422.33068848]
[-254.79339600 -1429.09069824]
[-241.27845764 -1435.59912109]
[-227.64419556 -1441.85375977]
[-213.89535522 -1447.85229492]
[-200.03675842 -1453.59265137]
[-186.07324219 -1459.07299805]
[-172.00970459 -1464.29113770]
[-157.85104370 -1469.24548340]
[-143.60220337 -1473.93420410]
[-129.26820374 -1478.35571289]
[-114.85401917 -1482.50830078]
[-100.36470795 -1486.39074707]
[-85.80533600 -1490.00146484]
[-71.18098450 -1493.33947754]
[-56.49678421 -1496.40332031]
[-41.75785446 -1499.19201660]
[-26.96935654 -1501.70471191]
[-12.13646126 -1503.94042969]
[2.73564601 -1505.89831543]
[17.64176559 -1507.57788086]
[32.57668304 -1508.97839355]
[47.53517532 -1510.09936523]
[62.51201630 -1510.94042969]
[77.50196838 -1511.50134277]
[92.49977875 -1511.78186035]
[107.50022125 -1511.78186035]
[122.49803162 -1511.50134277]
[137.48797607 -1510.94042969]
[152.46482849 -1510.09936523]
[167.42332458 -1508.97839355]
[182.35823059 -1507.57788086]
[197.26435852 -1505.89831543]
[212.13645935 -1503.94042969]
[226.96936035 -1501.70471191]
[241.75785828 -1499.19201660]
[256.49679565 -1496.40332031]
[271.18099976 -1493.33947754]
[285.80532837 -1490.00146484]
[300.36471558 -1486.39074707]
[314.85400391 -1482.50830078]
[329.26818848 -1478.35571289]
[343.60220337 -1473.93420410]
[357.85104370 -1469.24548340]
[372.00970459 -1464.29113770]
[386.07324219 -1459.07299805]
[400.03677368 -1453.59265137]
[413.89535522 -1447.85229492]
[427.64419556 -1441.85375977]
[441.27847290 -1435.59912109]
[454.79339600 -1429.09069824]
[468.18426514 -1422.33068848]
[481.44638062 -1415.32141113]
[494.57510376 -1408.06542969]
[507.56585693 -1400.56518555]
[520.41412354 -1392.82336426]
[533.11535645 -1384.84265137]
[545.66510010 -1376.62585449]
[558.05908203 -1368.17578125]
[570.29284668 -1359.49548340]
[582.36218262 -1350.58789062]
[594.26281738 -1341.45617676]
[605.99060059 -1332.10363770]
[617.54150391 -1322.53332520]
[628.91143799 -1312.74865723]
[640.09637451 -1302.75317383]
[651.09246826 -1292.55029297]
[661.89587402 -1282.14355469]
[672.50274658 -1271.53674316]
[682.90948486 -1260.73327637]
[693.11236572 -1249.73718262]
[703.10784912 -1238.55224609]
[712.89245605 -1227.18237305]
[722.46276855 -1215.63146973]
[731.81536865 -1203.90368652]
[740.94708252 -1192.00292969]
[749.85461426 -1179.93371582]
[758.53491211 -1167.69995117]
[766.98498535 -1155.30590820]
[775.20178223 -1142.75622559]
[783.18249512 -1130.05493164]
[790.92431641 -1117.20666504]
[798.42456055 -1104.21594238]
[805.68054199 -1091.08715820]
[812.68975830 -1077.82507324]
[819.44982910 -1064.43420410]
[825.95825195 -1050.91931152]
[832.21282959 -1037.28503418]
[838.21136475 -1023.53619385]
[843.95178223 -1009.67755127]
[849.43206787 -995.71405029]
[854.65026855 -981.65051270]
[859.60461426 -967.49182129]
[864.29333496 -953.24304199]
[868.71478271 -938.90899658]
[872.86743164 -924.49481201]
[876.74981689 -910.00549316]
[880.36065674 -895.44616699]
[883.69854736 -880.82177734]
[886.76239014 -866.13757324]
[889.55114746 -851.39868164]
[892.06384277 -836.61016846]
[894.29949951 -821.77728271]
[896.25744629 -806.90515137]
[897.93701172 -791.99902344]
[899.33746338 -777.06414795]
[900.45843506 -762.10565186]
[901.29956055 -747.12878418]
[901.86041260 -732.13885498]
[902.14093018 -717.14105225]
[902.14093018 -702.14056396]
[901.86041260 -687.14276123]
[901.29956055 -672.15283203]
[900.45843506 -657.17596436]
[899.33746338 -642.21746826]
[897.93695068 -627.28259277]
[896.25744629 -612.37646484]
[894.29949951 -597.50433350]
[892.06378174 -582.67144775]
[889.55114746 -567.88293457]
[886.76239014 -553.14404297]
[883.69848633 -538.45983887]
[880.36059570 -523.83544922]
[876.74981689 -509.27609253]
[872.86737061 -494.78680420]
[868.71472168 -480.37261963]
[864.29327393 -466.03860474]
[859.60455322 -451.78976440]
[854.65020752 -437.63110352]
[849.43200684 -423.56756592]
[843.95172119 -409.60403442]
[838.21130371 -395.74545288]
[832.21276855 -381.99661255]
[825.95812988 -368.36236572]
[819.44970703 -354.84741211]
[812.68969727 -341.45657349]
[805.68041992 -328.19445801]
[798.42443848 -315.06570435]
[790.92419434 -302.07495117]
[783.18237305 -289.22671509]
[775.20166016 -276.52548218]
[766.98486328 -263.97570801]
[758.53479004 -251.58175659]
[749.85449219 -239.34797668]
[740.94689941 -227.27867126]
[731.81524658 -215.37802124]
[722.46258545 -203.65020752]
[712.89233398 -192.09933472]
[703.10772705 -180.72941589]
[693.11224365 -169.54446411]
[682.90936279 -158.54837036]
[672.50262451 -147.74497986]
[661.89569092 -137.13806152]
[651.09228516 -126.73134613]
[640.09619141 -116.52845764]
[628.91125488 -106.53297424]
[617.54132080 -96.74837494]
[605.99047852 -87.17810059]
[594.26263428 -77.82547760]
[582.36199951 -68.69379425]
[570.29266357 -59.78623199]
[558.05889893 -51.10591125]
[545.66491699 -42.65586853]
[533.11517334 -34.43905258]
[520.41394043 -26.45834160]
[507.56567383 -18.71652412]
[494.57492065 -11.21630764]
[481.44616699 -3.96031523]
[468.18405151 3.04891586]
[454.79318237 9.80893517]
[441.27825928 16.31737900]
[427.64398193 22.57196999]
[413.89517212 28.57052231]
[400.03656006 34.31093597]
[386.07305908 39.79121017]
[372.00949097 45.00942230]
[357.85083008 49.96374893]
[343.60198975 54.65245819]
[329.26797485 59.07391357]
[314.85382080 63.22656250]
[300.36450195 67.10895538]
[285.80511475 70.71974182]
[271.18078613 74.05764771]
[256.49658203 77.12151337]
[241.75764465 79.91026306]
[226.96914673 82.42292786]
[212.13624573 84.65862274]
[197.26412964 86.61656952]
[182.35801697 88.29608154]
[167.42309570 89.69657135]
[152.46459961 90.81755829]
[137.48776245 91.65863037]
[122.49781799 92.21951294]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
