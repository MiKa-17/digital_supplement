%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 03:45:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_____________________________________________________CUGGUGCUAG_A__UGCUAUCCGACGUUCAGUUGAAUGAGGAAAACAGGCAAC_UUGCGACAGUCCUAGCUUU___________________________________________________________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50453949 92.09554291]
[62.52544022 91.28690338]
[47.57358551 90.07466888]
[32.65985489 88.45973206]
[17.79509163 86.44326019]
[2.99010253 84.02671814]
[-11.74434662 81.21186829]
[-26.39754105 78.00074768]
[-40.95882797 74.39569855]
[-55.41761398 70.39934540]
[-69.76338959 66.01458740]
[-83.98572540 61.24461746]
[-98.07427216 56.09290314]
[-112.01879120 50.56318665]
[-125.80914307 44.65949249]
[-139.43530273 38.38611221]
[-152.88734436 31.74760818]
[-166.15551758 24.74880791]
[-179.23014832 17.39480019]
[-192.10173035 9.69093227]
[-204.76092529 1.64280558]
[-217.19850159 -6.74372673]
[-229.40542603 -15.46256733]
[-241.37283325 -24.50737572]
[-253.09202576 -33.87157440]
[-264.55444336 -43.54835510]
[-275.75180054 -53.53068542]
[-286.67590332 -63.81129837]
[-297.31884766 -74.38272095]
[-307.67291260 -85.23727417]
[-317.73049927 -96.36705780]
[-327.48434448 -107.76397705]
[-336.92736816 -119.41974640]
[-346.05264282 -131.32589722]
[-354.85360718 -143.47375488]
[-363.32382202 -155.85450745]
[-371.45712280 -168.45913696]
[-379.24758911 -181.27848816]
[-386.68960571 -194.30323792]
[-393.77770996 -207.52391052]
[-400.50677490 -220.93089294]
[-406.87188721 -234.51443481]
[-412.86840820 -248.26466370]
[-418.49203491 -262.17160034]
[-423.73861694 -276.22506714]
[-428.60440063 -290.41491699]
[-433.08578491 -304.73080444]
[-437.17953491 -319.16232300]
[-440.88269043 -333.69897461]
[-444.19253540 -348.33016968]
[-447.10665894 -363.04531860]
[-449.62298584 -377.83367920]
[-451.73965454 -392.68450928]
[-453.45510864 -407.58700562]
[-454.76812744 -422.53033447]
[-455.67773438 -437.50366211]
[-456.18331909 -452.49603271]
[-456.28445435 -467.49661255]
[-455.98107910 -482.49444580]
[-455.27343750 -497.47866821]
[-454.16201782 -512.43835449]
[-452.64767456 -527.36260986]
[-450.73144531 -542.24066162]
[-448.41476440 -557.06158447]
[-445.69931030 -571.81469727]
[-442.58703613 -586.48919678]
[-439.08023071 -601.07446289]
[-435.18142700 -615.55987549]
[-430.89349365 -629.93487549]
[-426.21948242 -644.18902588]
[-421.16287231 -658.31195068]
[-415.72726440 -672.29345703]
[-409.91668701 -686.12329102]
[-403.73529053 -699.79144287]
[-397.18762207 -713.28790283]
[-390.27844238 -726.60296631]
[-383.01272583 -739.72686768]
[-375.39581299 -752.65008545]
[-367.43319702 -765.36328125]
[-359.13070679 -777.85711670]
[-350.49435425 -790.12249756]
[-341.53042603 -802.15063477]
[-332.24542236 -813.93267822]
[-322.64614868 -825.46008301]
[-312.73953247 -836.72442627]
[-302.53277588 -847.71765137]
[-292.03335571 -858.43157959]
[-281.24884033 -868.85858154]
[-270.18710327 -878.99096680]
[-258.85620117 -888.82141113]
[-247.26435852 -898.34277344]
[-235.41998291 -907.54815674]
[-223.33172607 -916.43078613]
[-211.00836182 -924.98425293]
[-198.45883179 -933.20233154]
[-185.69229126 -941.07910156]
[-172.71801758 -948.60870361]
[-159.54542542 -955.78576660]
[-146.18411255 -962.60504150]
[-132.64378357 -969.06158447]
[-118.93428802 -975.15069580]
[-105.06559753 -980.86791992]
[-91.04779053 -986.20916748]
[-76.89106750 -991.17047119]
[-62.60571671 -995.74822998]
[-48.20212936 -999.93920898]
[-33.69078064 -1003.74023438]
[-19.08221436 -1007.14868164]
[-4.38705873 -1010.16192627]
[10.38400078 -1012.77789307]
[25.22022438 -1014.99456787]
[40.11082458 -1016.81048584]
[55.04497147 -1018.22418213]
[70.01181030 -1019.23474121]
[85.00045013 -1019.84136963]
[100.00000000 -1020.04364014]
[114.99954987 -1019.84136963]
[129.98818970 -1019.23474121]
[144.95503235 -1018.22418213]
[159.88917542 -1016.81048584]
[174.77976990 -1014.99456787]
[189.61599731 -1012.77789307]
[204.38705444 -1010.16192627]
[219.08221436 -1007.14868164]
[233.69078064 -1003.74023438]
[248.20213318 -999.93920898]
[262.60571289 -995.74822998]
[276.89108276 -991.17047119]
[291.04779053 -986.20916748]
[305.06558228 -980.86791992]
[318.93429565 -975.15069580]
[332.64376831 -969.06158447]
[346.18411255 -962.60504150]
[359.54541016 -955.78576660]
[372.71801758 -948.60870361]
[385.69229126 -941.07910156]
[398.45883179 -933.20233154]
[411.00836182 -924.98425293]
[423.33172607 -916.43078613]
[435.41998291 -907.54815674]
[447.26434326 -898.34277344]
[458.85620117 -888.82141113]
[470.18710327 -878.99096680]
[481.24884033 -868.85858154]
[492.03335571 -858.43157959]
[502.53277588 -847.71765137]
[512.73950195 -836.72442627]
[522.64611816 -825.46008301]
[532.24542236 -813.93267822]
[541.53039551 -802.15063477]
[550.49432373 -790.12249756]
[559.13067627 -777.85711670]
[567.43322754 -765.36328125]
[575.39581299 -752.65008545]
[583.01275635 -739.72686768]
[590.27844238 -726.60296631]
[597.18762207 -713.28790283]
[603.73529053 -699.79144287]
[609.91668701 -686.12329102]
[615.72729492 -672.29345703]
[621.16284180 -658.31195068]
[626.21948242 -644.18902588]
[630.89349365 -629.93487549]
[635.18145752 -615.55987549]
[639.08020020 -601.07446289]
[642.58703613 -586.48919678]
[645.69927979 -571.81469727]
[648.41473389 -557.06158447]
[650.73144531 -542.24066162]
[652.64764404 -527.36260986]
[654.16204834 -512.43835449]
[655.27343750 -497.47866821]
[655.98107910 -482.49444580]
[656.28442383 -467.49661255]
[656.18328857 -452.49603271]
[655.67773438 -437.50366211]
[654.76812744 -422.53033447]
[653.45507812 -407.58700562]
[651.73962402 -392.68450928]
[649.62298584 -377.83367920]
[647.10668945 -363.04531860]
[644.19250488 -348.33016968]
[640.88269043 -333.69897461]
[637.17956543 -319.16232300]
[633.08575439 -304.73080444]
[628.60437012 -290.41491699]
[623.73864746 -276.22506714]
[618.49206543 -262.17160034]
[612.86840820 -248.26466370]
[606.87188721 -234.51443481]
[600.50677490 -220.93089294]
[593.77770996 -207.52391052]
[586.68957520 -194.30323792]
[579.24761963 -181.27848816]
[571.45709229 -168.45913696]
[563.32379150 -155.85450745]
[554.85357666 -143.47375488]
[546.05267334 -131.32589722]
[536.92736816 -119.41974640]
[527.48437500 -107.76397705]
[517.73052979 -96.36705780]
[507.67291260 -85.23727417]
[497.31884766 -74.38272095]
[486.67590332 -63.81129837]
[475.75180054 -53.53068542]
[464.55444336 -43.54835510]
[453.09201050 -33.87157440]
[441.37283325 -24.50737572]
[429.40542603 -15.46256733]
[417.19848633 -6.74372673]
[404.76092529 1.64280558]
[392.10171509 9.69093227]
[379.23013306 17.39480019]
[366.15551758 24.74880791]
[352.88735962 31.74760818]
[339.43530273 38.38611221]
[325.80914307 44.65949249]
[312.01879883 50.56318665]
[298.07427979 56.09290314]
[283.98571777 61.24461746]
[269.76339722 66.01458740]
[255.41761780 70.39934540]
[240.95883179 74.39569855]
[226.39753723 78.00074768]
[211.74433899 81.21186829]
[197.00990295 84.02671814]
[182.20491028 86.44326019]
[167.34014893 88.45973206]
[152.42640686 90.07466888]
[137.47456360 91.28690338]
[122.49546051 92.09554291]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
