%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 06:57:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACUGACGCCCAUUCUAUUGCACAACCGUCUGAACCAGAAGUCUCCCCAGCAAAUAACCGUCAAUUAACGGUUGGCUACGCGAGUCGCUAUCCGGAUUACAGCCGGAUUCCCGCCAUCACCAUGAAAGGACAAUGGCUGGAAGCAGCCGGUUUUGCCACUGGCACAGCAGUAGAUGUAAAGGUAAUGGAAGGCUGUAUCGUGCUCACCG_________CCCGGCAGGAGAGCG___AACUGAUGCAGUCGCUG\
CGCCAGGUAUGCAAGCUGUCGGCGCGGAAACAAAAGCAGGUGCAGGAGUUUAUUCAGGUUAUAUCCGG______________\
) } def
/len { sequence length } bind def

/coor [
[479.84588623 800.58941650]
[488.30465698 788.19323730]
[497.67672729 776.47222900]
[507.90841675 765.49359131]
[518.94110107 755.32025146]
[509.63552856 743.55560303]
[500.32998657 731.79095459]
[486.36593628 726.60882568]
[483.87313843 710.98522949]
[474.56759644 699.22064209]
[465.26202393 687.45599365]
[456.30923462 693.65612793]
[447.03698730 699.36767578]
[437.47189331 704.57427979]
[427.64147949 709.26092529]
[417.57394409 713.41412354]
[407.29818726 717.02203369]
[396.84378052 720.07409668]
[386.24072266 722.56170654]
[375.51950073 724.47760010]
[364.71087646 725.81628418]
[353.84594727 726.57391357]
[342.95590210 726.74822998]
[332.07202148 726.33886719]
[321.22558594 725.34686279]
[310.44778442 723.77502441]
[299.76956177 721.62799072]
[289.22158813 718.91186523]
[278.83419800 715.63433838]
[268.63723755 711.80493164]
[258.66000366 707.43463135]
[248.93115234 702.53588867]
[239.47865295 697.12286377]
[230.32968140 691.21105957]
[221.51051331 684.81750488]
[213.04650879 677.96044922]
[204.96199036 670.65960693]
[197.28018188 662.93603516]
[190.02319336 654.81182861]
[183.21185303 646.31036377]
[176.86576843 637.45599365]
[171.00315857 628.27423096]
[165.64088440 618.79144287]
[160.79438782 609.03485107]
[156.47756958 599.03247070]
[152.70288086 588.81298828]
[149.48114014 578.40582275]
[146.82165527 567.84088135]
[144.73205566 557.14849854]
[143.21835327 546.35937500]
[142.28494263 535.50457764]
[141.93447876 524.61517334]
[142.16801453 513.72253418]
[142.98486328 502.85787964]
[144.38272095 492.05252075]
[146.35757446 481.33746338]
[148.90374756 470.74349976]
[152.01394653 460.30105591]
[155.67924500 450.04016113]
[159.88914490 439.99029541]
[164.63154602 430.18032837]
[169.89282227 420.63842773]
[175.65789795 411.39205933]
[181.91018677 402.46777344]
[188.63177490 393.89123535]
[195.80332947 385.68707275]
[203.40426636 377.87890625]
[211.41275024 370.48910522]
[219.80580139 363.53897095]
[228.55929565 357.04849243]
[237.64808655 351.03628540]
[230.18836975 338.02270508]
[222.72865295 325.00915527]
[215.26893616 311.99560547]
[202.22682190 304.80166626]
[202.07644653 288.98117065]
[194.61672974 275.96762085]
[187.15701294 262.95407104]
[169.48458862 261.83923340]
[155.92979431 250.20101929]
[152.08694458 232.59175110]
[159.69290161 216.07731628]
[151.99256897 203.20466614]
[144.29225159 190.33203125]
[138.19972229 186.23008728]
[136.58081055 177.30375671]
[129.00045776 164.36010742]
[121.42011261 151.41644287]
[99.08059692 156.87911987]
[75.94624329 152.85754395]
[55.95335770 139.64385986]
[42.65890121 119.12585449]
[38.61031723 94.52456665]
[44.86577225 69.89052582]
[32.68153763 61.14155960]
[20.49730301 52.39259338]
[8.31306839 43.64362717]
[-4.22190428 52.13478851]
[-18.87814140 55.81808853]
[-33.88202667 54.26770401]
[-47.42466736 47.68994522]
[-57.87999344 36.89607239]
[-63.99996948 23.20226669]
[-65.06358337 8.26915455]
[-60.96170807 -6.09955931]
[-73.14594269 -14.84852505]
[-84.70654297 -5.16331625]
[-98.31291962 1.34186637]
[-113.10975647 4.25810099]
[-128.16691589 3.40207076]
[-142.53788757 -1.17241371]
[-155.31930542 -9.17779636]
[-165.70771790 -20.11085129]
[-173.05010986 -33.28432083]
[-176.88490295 -47.87010193]
[-176.97106934 -62.95132828]
[-173.30317688 -77.57997894]
[-166.11180115 -90.83648682]
[-155.84899902 -101.88752747]
[-143.15988159 -110.03843689]
[-128.84211731 -114.77682495]
[-113.79572296 -115.80484772]
[-98.96652985 -113.05787659]
[-85.28671265 -106.70859528]
[-73.61619568 -97.15611267]
[-64.68859863 -85.00091553]
[-59.06512451 -71.00708008]
[-57.09925842 -56.05428314]
[-58.91457748 -41.08246231]
[-64.39698029 -27.03276062]
[-52.21274185 -18.28379440]
[-39.90863800 -26.76284409]
[-25.41881943 -30.52771950]
[-10.48726463 -29.10534096]
[3.08205438 -22.64816856]
[13.64311314 -11.91811180]
[19.90750313 1.80331767]
[21.10159683 16.86804962]
[17.06203461 31.45939255]
[29.24626923 40.20835876]
[41.43050385 48.95732498]
[53.61474228 57.70629120]
[59.84591675 53.53227234]
[51.49787903 41.06991959]
[43.15003204 28.60743523]
[55.61264420 20.25978279]
[63.96023178 32.72187805]
[72.30827332 45.18423462]
[78.53944397 41.01021576]
[75.08523560 26.41335106]
[71.63101959 11.81648827]
[68.17681122 -2.78037524]
[53.80889130 -8.64063644]
[45.65821075 -21.84465027]
[46.85886383 -37.31520462]
[56.94917679 -49.10355759]
[72.04921722 -52.67684174]
[86.35271454 -46.66106033]
[94.35968018 -33.36940384]
[92.99127197 -17.91278458]
[82.77367401 -6.23458862]
[86.22788239 8.36227417]
[89.68209839 22.95913696]
[93.13631439 37.55599976]
[94.68926239 40.97848511]
[96.10430908 44.43656540]
[97.07955933 29.46830177]
[98.05480957 14.50003910]
[86.03517151 4.68638086]
[82.11196136 -10.32655048]
[87.79374695 -24.76597404]
[100.89575195 -33.07963943]
[116.37999725 -32.07077026]
[128.29246521 -22.12729836]
[132.05258179 -7.07269239]
[126.21449280 7.30424595]
[113.02307129 15.47528934]
[112.04782104 30.44355202]
[111.07257080 45.41181564]
[119.76428986 47.92462540]
[127.93452454 51.81147385]
[135.36769104 56.96979904]
[141.86766052 63.26350021]
[147.26293945 70.52651215]
[151.41114807 78.56719208]
[154.20286560 87.17339325]
[155.56439209 96.11802673]
[155.45983887 105.16509247]
[153.89193726 114.07586670]
[150.90208435 122.61524963]
[146.56915283 130.55792236]
[141.00746155 137.69429016]
[134.36376953 143.83609009]
[141.94412231 156.77975464]
[149.52447510 169.72340393]
[157.16488647 182.63169861]
[164.86521912 195.50434875]
[172.56555176 208.37698364]
[184.98454285 207.83561707]
[196.39831543 212.57551575]
[204.68334961 221.64889526]
[208.32623291 233.30798340]
[206.69987488 245.34158325]
[200.17057800 255.49435425]
[207.63029480 268.50790405]
[215.09001160 281.52145386]
[228.66567993 289.64620972]
[228.28248596 304.53588867]
[235.74220276 317.54943848]
[243.20191956 330.56298828]
[250.66163635 343.57656860]
[275.95901489 332.42770386]
[302.53344727 324.81445312]
[329.89334106 320.87713623]
[357.53271484 320.68814087]
[384.94049072 324.25048828]
[411.60992432 331.49780273]
[437.04797363 342.29568481]
[460.78439331 356.44396973]
[482.38055420 373.68069458]
[501.43737793 393.68673706]
[517.60278320 416.09185791]
[530.61639404 408.63214111]
[538.38763428 394.19125366]
[554.78533936 393.97146606]
[562.94085693 408.19888306]
[554.46453857 422.23754883]
[538.07611084 421.64569092]
[525.06250000 429.10540771]
[529.71685791 438.55538940]
[533.87518311 448.23394775]
[537.52618408 458.11499023]
[540.66015625 468.17202759]
[543.26867676 478.37796021]
[545.34466553 488.70538330]
[546.88256836 499.12652588]
[547.87823486 509.61337280]
[548.32904053 520.13775635]
[548.23376465 530.67132568]
[547.59259033 541.18579102]
[546.40728760 551.65295410]
[544.68109131 562.04455566]
[542.41857910 572.33270264]
[539.62585449 582.48980713]
[536.31042480 592.48846436]
[532.48120117 602.30181885]
[528.14849854 611.90356445]
[523.32391357 621.26776123]
[518.02044678 630.36938477]
[512.25238037 639.18383789]
[506.03518677 647.68743896]
[499.38558960 655.85742188]
[492.32147217 663.67175293]
[484.86178589 671.10943604]
[477.02667236 678.15045166]
[486.33221436 689.91503906]
[495.63778687 701.67968750]
[510.26742554 707.70330811]
[512.09460449 722.48541260]
[521.40014648 734.25006104]
[530.70574951 746.01464844]
[543.14630127 737.62121582]
[556.18603516 730.19268799]
[569.75018311 723.77166748]
[583.76116943 718.39483643]
[598.13867188 714.09301758]
[612.80029297 710.89093018]
[627.66210938 708.80682373]
[642.63897705 707.85266113]
[657.64514160 708.03393555]
[672.59460449 709.34960938]
[687.40173340 711.79211426]
[701.98175049 715.34747314]
[716.25115967 719.99536133]
[730.12811279 725.70910645]
[743.53326416 732.45599365]
[756.38970947 740.19732666]
[768.62384033 748.88885498]
[780.16564941 758.48071289]
[790.94897461 768.91802979]
[800.91204834 780.14099121]
[809.99780273 792.08532715]
[818.15417480 804.68255615]
[825.33447266 817.86059570]
[831.49761963 831.54394531]
[836.60821533 845.65417480]
[840.63702393 860.11053467]
[843.56091309 874.83020020]
[845.36328125 889.72882080]
[846.03369141 904.72106934]
[845.56829834 919.72106934]
[843.96984863 934.64294434]
[841.24743652 949.40118408]
[837.41662598 963.91131592]
[832.49945068 978.09008789]
[826.52398682 991.85638428]
[819.52453613 1005.13140869]
[811.54113770 1017.83898926]
[802.61956787 1029.90637207]
[792.81085205 1041.26452637]
[782.17126465 1051.84826660]
[770.76165771 1061.59704590]
[758.64746094 1070.45507812]
[745.89807129 1078.37145996]
[732.58642578 1085.30102539]
[718.78887939 1091.20385742]
[704.58441162 1096.04638672]
[690.05432129 1099.80078125]
[675.28198242 1102.44555664]
[660.35192871 1103.96545410]
[645.34960938 1104.35192871]
[630.36108398 1103.60266113]
[615.47216797 1101.72192383]
[600.76812744 1098.72058105]
[586.33319092 1094.61572266]
[572.25000000 1089.43090820]
[558.59930420 1083.19592285]
[545.45922852 1075.94641113]
[532.90509033 1067.72387695]
[521.00872803 1058.57531738]
[509.83834839 1048.55334473]
[499.45791626 1037.71533203]
[489.92691040 1026.12316895]
[481.29986572 1013.84344482]
[473.62628174 1000.94641113]
[466.95001221 987.50598145]
[461.30938721 973.59912109]
[456.73669434 959.30554199]
[453.25808716 944.70697021]
[450.89352417 929.88720703]
[449.65652466 914.93103027]
[449.55419922 899.92413330]
[450.58712769 884.95245361]
[452.74942017 870.10180664]
[456.02862549 855.45721436]
[460.40600586 841.10260010]
[465.85650635 827.12011719]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 261]
[6 260]
[7 259]
[9 257]
[10 256]
[11 255]
[71 211]
[72 210]
[73 209]
[74 208]
[76 206]
[77 205]
[78 204]
[82 198]
[83 197]
[84 196]
[86 195]
[87 194]
[88 193]
[94 142]
[95 141]
[96 140]
[97 139]
[105 131]
[106 130]
[149 164]
[150 163]
[151 162]
[152 161]
[166 179]
[167 178]
[168 177]
[222 229]
[223 228]
] def

init

% Start Annotations
5 261 0.0 0.2 colorpair
6 260 0.0 0.2 colorpair
7 259 0.0 0.2 colorpair
9 257 0.16 0.2 colorpair
71 211 0.0 0.2 colorpair
73 209 0.0 0.2 colorpair
74 208 0.0 0.2 colorpair
76 206 0.16 0.6 colorpair
77 205 0.0 0.2 colorpair
78 204 0.16 0.6 colorpair
82 198 0.16 0.6 colorpair
83 197 0.16 0.6 colorpair
86 195 0.16 0.6 colorpair
87 194 0.16 0.2 colorpair
88 193 0.0 0.6 colorpair
94 142 0.0 0.2 colorpair
95 141 0.16 0.6 colorpair
96 140 0.16 0.2 colorpair
97 139 0.0 0.6 colorpair
105 131 0.0 0.2 colorpair
106 130 0.0 0.6 colorpair
149 164 0.16 1 colorpair
150 163 0.16 1 colorpair
151 162 0.16 0.6 colorpair
152 161 0.0 0.6 colorpair
166 179 0.0 0.6 colorpair
167 178 0.0 0.6 colorpair
222 229 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
5 261 2 gmark
6 260 2 gmark
7 259 2 gmark
9 257 2 gmark
9 cmark
257 cmark
10 256 4 gmark
10 cmark
256 cmark
11 255 3 gmark
71 211 2 gmark
72 210 3 gmark
72 cmark
210 cmark
73 209 2 gmark
74 208 2 gmark
76 206 1 gmark
76 cmark
77 205 2 gmark
78 204 1 gmark
78 cmark
82 198 1 gmark
198 cmark
83 197 1 gmark
83 cmark
197 cmark
84 196 3 gmark
84 cmark
196 cmark
86 195 1 gmark
195 cmark
87 194 2 gmark
87 cmark
88 193 1 gmark
94 142 2 gmark
95 141 1 gmark
95 cmark
96 140 2 gmark
96 cmark
97 139 1 gmark
105 131 2 gmark
106 130 1 gmark
149 cmark
150 cmark
163 cmark
151 162 1 gmark
162 cmark
152 161 1 gmark
166 179 1 gmark
167 178 1 gmark
168 177 3 gmark
168 cmark
177 cmark
222 229 2 gmark
223 228 3 gmark
223 cmark
228 cmark

% End Annotations
showpage
end
%%EOF
