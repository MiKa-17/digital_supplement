%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 17:08:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCUUGAGAAAGUGGGUAUAACAAUUGCUUUCCUUAUUCCUAUCACGGUUUUAAUCAUCAACUGUUUAACGAUAGCUGAGAAGAUUCAAAACCUGAUGAAGAAUAAGAAAAGC\
) } def
/len { sequence length } bind def

/coor [
[-98.07032013 337.18920898]
[-106.21124268 349.78784180]
[-114.35217285 362.38647461]
[-122.49309540 374.98507690]
[-130.63401794 387.58370972]
[-138.77494812 400.18234253]
[-133.05575562 414.60699463]
[-136.94004822 429.63003540]
[-148.93420410 439.47482300]
[-164.42625427 440.35580444]
[-177.45916748 431.93423462]
[-183.02154541 417.44839478]
[-178.97451782 402.46838379]
[-166.87426758 392.75430298]
[-151.37356567 392.04141235]
[-143.23265076 379.44277954]
[-135.09172058 366.84414673]
[-126.95079041 354.24554443]
[-118.80986786 341.64691162]
[-110.66894531 329.04827881]
[-113.94269562 322.98995972]
[-115.11573029 316.15133667]
[-114.03193665 309.24520874]
[-110.77220917 303.00213623]
[-105.64936829 298.09338379]
[-99.17843628 295.05859375]
[-92.02494049 294.24679565]
[-84.93650055 295.77639771]
[-74.84889221 284.67501831]
[-64.76128387 273.57366943]
[-54.67367172 262.47232056]
[-44.58606339 251.37095642]
[-45.55216217 236.55197144]
[-35.48003387 225.14990234]
[-19.92997360 224.23706055]
[-9.84236431 213.13569641]
[0.24524385 202.03433228]
[10.33285236 190.93298340]
[20.42045975 179.83161926]
[30.50806808 168.73027039]
[33.23310089 151.45304871]
[50.70626450 145.84515381]
[60.48687744 134.47239685]
[70.26748657 123.09963226]
[80.04810333 111.72687531]
[89.82871246 100.35411835]
[92.32645416 92.56563568]
[100.03514862 88.80902100]
[110.12275696 77.70766449]
[120.21036530 66.60630035]
[130.29797363 55.50494385]
[140.38558960 44.40358734]
[150.47319031 33.30222702]
[160.40823364 22.06412125]
[170.18884277 10.69136429]
[179.96945190 -0.68139327]
[189.75007629 -12.05415058]
[192.88204956 -27.56225395]
[207.04704285 -32.16682816]
[216.82766724 -43.53958511]
[212.65635681 -56.75736237]
[215.57260132 -70.19624329]
[224.70181274 -80.33468628]
[237.55603027 -84.57089233]
[250.71121216 -81.89002991]
[260.79882812 -92.99138641]
[270.88644409 -104.09275055]
[268.60150146 -119.56249237]
[276.83886719 -132.85458374]
[291.70913696 -137.69290161]
[306.19100952 -131.79292297]
[313.44656372 -117.94046783]
[310.04998779 -102.67622375]
[297.60501099 -93.20749664]
[281.98779297 -94.00514221]
[271.90017700 -82.90377808]
[261.81259155 -71.80242157]
[265.67919922 -55.91280365]
[259.29418945 -40.67806244]
[244.97016907 -32.12371826]
[228.20042419 -33.75897217]
[218.41979980 -22.38621712]
[215.98739624 -7.69156885]
[201.12283325 -2.27353740]
[191.34220886 9.09921932]
[181.56159973 20.47197723]
[171.78099060 31.84473419]
[169.77839661 39.06565094]
[161.57455444 43.38983536]
[151.48693848 54.49119568]
[141.39933777 65.59255219]
[131.31172180 76.69390869]
[121.22412109 87.79527283]
[111.13651276 98.89662933]
[101.20146942 110.13473511]
[91.42086029 121.50749207]
[81.64024353 132.88024902]
[71.85963440 144.25300598]
[62.07902145 155.62576294]
[62.24993134 168.61143494]
[53.75602341 177.89656067]
[41.60942841 178.81787109]
[31.52181816 189.91923523]
[21.43420982 201.02058411]
[11.34660244 212.12194824]
[1.25899386 223.22331238]
[-8.82861423 234.32466125]
[-8.25276566 249.89085388]
[-18.64117813 261.00549316]
[-33.48470688 261.45855713]
[-43.57231522 272.55990601]
[-53.65992355 283.66128540]
[-63.74753189 294.76263428]
[-73.83513641 305.86398315]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 20]
[2 19]
[3 18]
[4 17]
[5 16]
[6 15]
[28 114]
[29 113]
[30 112]
[31 111]
[32 110]
[35 107]
[36 106]
[37 105]
[38 104]
[39 103]
[40 102]
[42 99]
[43 98]
[44 97]
[45 96]
[46 95]
[48 94]
[49 93]
[50 92]
[51 91]
[52 90]
[53 89]
[54 87]
[55 86]
[56 85]
[57 84]
[59 82]
[60 81]
[65 77]
[66 76]
[67 75]
] def

init

% Start Annotations
1 20 0.0 1 colorpair
2 19 0.0 1 colorpair
3 18 0.0 1 colorpair
4 17 0.0 1 colorpair
5 16 0.0 1 colorpair
6 15 0.0 1 colorpair
28 114 0.0 1 colorpair
29 113 0.0 1 colorpair
30 112 0.0 1 colorpair
31 111 0.0 1 colorpair
32 110 0.0 1 colorpair
35 107 0.0 1 colorpair
36 106 0.0 1 colorpair
37 105 0.0 1 colorpair
38 104 0.0 1 colorpair
39 103 0.0 1 colorpair
40 102 0.0 1 colorpair
42 99 0.0 1 colorpair
43 98 0.0 1 colorpair
44 97 0.0 1 colorpair
45 96 0.0 1 colorpair
46 95 0.0 1 colorpair
48 94 0.0 1 colorpair
49 93 0.0 1 colorpair
50 92 0.0 1 colorpair
51 91 0.0 1 colorpair
52 90 0.0 1 colorpair
53 89 0.0 1 colorpair
54 87 0.0 1 colorpair
55 86 0.16 1 colorpair
56 85 0.0 1 colorpair
57 84 0.0 1 colorpair
59 82 0.0 1 colorpair
60 81 0.16 1 colorpair
65 77 0.0 1 colorpair
66 76 0.16 1 colorpair
67 75 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
55 cmark
60 cmark
76 cmark

% End Annotations
showpage
end
%%EOF
