%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 17:08:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCUUGAGAAAGUGGGUAUAACAAUUGCUUUCCUUAUUCCUAUCACGGUUUUAAUCAUCAACUGUUUAACGAUAGCUGAGAAGAUUCAAAACCUGAUGAAGAAUAAGAAAAGCAAAAAGAAAAAGCGUACACGCAAGCGCCUCCGUAGCAAGAGACAACGCAAACGUAUACGCAGAU\
) } def
/len { sequence length } bind def

/coor [
[86.19592285 156.55915833]
[80.79174042 170.55181885]
[75.38755798 184.54449463]
[69.98337555 198.53715515]
[64.57919312 212.52983093]
[59.17501068 226.52250671]
[67.71232605 239.47988892]
[66.96936035 254.97917175]
[57.23181152 267.06054688]
[42.24396133 271.07849121]
[27.76893806 265.48800659]
[19.37269020 252.43878174]
[20.28374481 236.94847107]
[30.15178108 224.97343445]
[45.18233871 221.11831665]
[50.58652115 207.12565613]
[55.99070358 193.13298035]
[61.39488602 179.14030457]
[66.79906464 165.14764404]
[72.20324707 151.15496826]
[57.88755035 140.19990540]
[47.60919952 125.39083099]
[42.35359573 108.14752960]
[42.62459183 90.12312317]
[48.39620590 73.04561615]
[59.11511612 58.55224228]
[50.04473114 46.60535431]
[40.97434616 34.65846634]
[31.90396309 22.71158028]
[22.83357811 10.76469231]
[13.76319313 -1.18219566]
[4.69280863 -13.12908363]
[-10.71637249 -15.40830994]
[-19.74484444 -27.65336418]
[-17.47698784 -42.32961655]
[-26.54737282 -54.27650452]
[-35.61775970 -66.22339630]
[-44.68814087 -78.17028046]
[-53.75852585 -90.11716461]
[-62.82891083 -102.06405640]
[-79.95811462 -108.78545380]
[-81.51049805 -126.25321198]
[-90.78915405 -138.03907776]
[-100.06780243 -149.82493591]
[-109.34645844 -161.61080933]
[-118.62511444 -173.39666748]
[-126.41607666 -178.22196960]
[-127.96101379 -185.47177124]
[-137.03140259 -197.41865540]
[-146.10177612 -209.36553955]
[-155.17216492 -221.31243896]
[-164.24255371 -233.25932312]
[-173.31292725 -245.20620728]
[-182.48780823 -257.07302856]
[-191.76646423 -268.85891724]
[-201.04512024 -280.64477539]
[-210.32377625 -292.43063354]
[-224.93962097 -298.48764038]
[-226.73303223 -313.27389526]
[-236.01168823 -325.05975342]
[-249.72402954 -323.50534058]
[-262.31100464 -328.89367676]
[-270.52020264 -339.71588135]
[-272.28829956 -353.07452393]
[-267.25869751 -365.45895386]
[-276.32907104 -377.40582275]
[-285.39944458 -389.35272217]
[-301.02624512 -389.93402100]
[-312.58865356 -400.46231079]
[-314.62725830 -415.96643066]
[-306.17953491 -429.12582397]
[-291.23422241 -433.72705078]
[-276.84802246 -427.59750366]
[-269.81365967 -413.63140869]
[-273.45257568 -398.42309570]
[-264.38217163 -386.47622681]
[-255.31179810 -374.52932739]
[-238.93278503 -375.40609741]
[-225.11444092 -366.26455688]
[-219.40109253 -350.53558350]
[-224.22583008 -334.33840942]
[-214.94717407 -322.55255127]
[-200.99499512 -317.33853149]
[-198.53790283 -301.70928955]
[-189.25924683 -289.92343140]
[-179.98060608 -278.13754272]
[-170.70195007 -266.35168457]
[-164.07456970 -263.03140259]
[-161.36604309 -254.27659607]
[-152.29566956 -242.32969666]
[-143.22528076 -230.38281250]
[-134.15489197 -218.43592834]
[-125.08451080 -206.48904419]
[-116.01412201 -194.54216003]
[-106.83924866 -182.67532349]
[-97.56060028 -170.88946533]
[-88.28194427 -159.10359192]
[-79.00328827 -147.31773376]
[-69.72463226 -135.53187561]
[-57.73667526 -133.78359985]
[-49.91193390 -124.01513672]
[-50.88202286 -111.13443756]
[-41.81163788 -99.18755341]
[-32.74125671 -87.24066162]
[-23.67086983 -75.29377747]
[-14.60048580 -63.34688950]
[-5.53010130 -51.40000153]
[9.21580029 -49.64103317]
[18.58464813 -37.65439987]
[16.63969612 -22.19946861]
[25.71008110 -10.25258064]
[34.78046417 1.69430721]
[43.85084915 13.64119530]
[52.92123413 25.58808327]
[61.99161911 37.53496933]
[71.06200409 49.48185730]
[84.54228210 43.87024689]
[98.99489594 41.78934860]
[113.51072693 43.37005615]
[127.17670441 48.51294327]
[139.13319397 56.89450073]
[148.62809753 67.98751831]
[155.06414795 81.09420013]
[158.03652954 95.39011383]
[157.35826111 109.97599792]
[153.07199097 123.93436432]
[165.83746338 131.81108093]
[178.60293579 139.68780518]
[191.36840820 147.56452942]
[204.13388062 155.44125366]
[219.94122314 156.10324097]
[226.70956421 169.37121582]
[239.47503662 177.24794006]
[252.24050903 185.12466431]
[266.54010010 179.39508057]
[281.29901123 183.14039612]
[290.90890503 194.72116089]
[291.84561157 209.56234741]
[304.61108398 217.43907166]
[317.37655640 225.31579590]
[338.77471924 224.59063721]
[347.88107300 243.09471130]
[361.04339600 250.28869629]
[374.20571899 257.48266602]
[388.17153931 250.71989441]
[403.43920898 253.49072266]
[414.13800049 264.72973633]
[416.15402222 280.11529541]
[408.71206665 293.73132324]
[394.67367554 300.34222412]
[379.43695068 297.40591431]
[368.86071777 286.05151367]
[367.01171875 270.64498901]
[353.84939575 263.45101929]
[340.68707275 256.25701904]
[332.64059448 260.12835693]
[323.57794189 259.84179688]
[315.55163574 255.33491516]
[310.43820190 247.51550293]
[309.49984741 238.08126831]
[296.73437500 230.20454407]
[283.96890259 222.32781982]
[270.28402710 228.14698792]
[255.62327576 224.75196838]
[245.65629578 213.24055481]
[244.36378479 197.89013672]
[231.59831238 190.01341248]
[218.83283997 182.13668823]
[203.93855286 182.03808594]
[196.25715637 168.20672607]
[183.49168396 160.33000183]
[170.72621155 152.45327759]
[157.96073914 144.57655334]
[145.19526672 136.69982910]
[137.53883362 144.50085449]
[128.55917358 150.73326111]
[118.57282257 155.17735291]
[107.93180084 157.67648315]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 20]
[2 19]
[3 18]
[4 17]
[5 16]
[6 15]
[26 116]
[27 115]
[28 114]
[29 113]
[30 112]
[31 111]
[32 110]
[35 107]
[36 106]
[37 105]
[38 104]
[39 103]
[40 102]
[42 99]
[43 98]
[44 97]
[45 96]
[46 95]
[48 94]
[49 93]
[50 92]
[51 91]
[52 90]
[53 89]
[54 87]
[55 86]
[56 85]
[57 84]
[59 82]
[60 81]
[65 77]
[66 76]
[67 75]
[126 174]
[127 173]
[128 172]
[129 171]
[130 170]
[132 168]
[133 167]
[134 166]
[138 162]
[139 161]
[140 160]
[142 155]
[143 154]
[144 153]
] def

init

% Start Annotations
1 20 0.0 1 colorpair
2 19 0.0 1 colorpair
3 18 0.0 1 colorpair
4 17 0.0 1 colorpair
5 16 0.0 1 colorpair
6 15 0.0 1 colorpair
26 116 0.0 1 colorpair
27 115 0.0 1 colorpair
28 114 0.0 1 colorpair
29 113 0.0 1 colorpair
30 112 0.0 1 colorpair
31 111 0.0 1 colorpair
32 110 0.0 1 colorpair
35 107 0.0 1 colorpair
36 106 0.0 1 colorpair
37 105 0.0 1 colorpair
38 104 0.0 1 colorpair
39 103 0.0 1 colorpair
40 102 0.0 1 colorpair
42 99 0.0 1 colorpair
43 98 0.0 1 colorpair
44 97 0.0 1 colorpair
45 96 0.0 1 colorpair
46 95 0.0 1 colorpair
48 94 0.0 1 colorpair
49 93 0.0 1 colorpair
50 92 0.0 1 colorpair
51 91 0.0 1 colorpair
52 90 0.0 1 colorpair
53 89 0.0 1 colorpair
54 87 0.0 1 colorpair
55 86 0.16 1 colorpair
56 85 0.0 1 colorpair
57 84 0.0 1 colorpair
59 82 0.0 1 colorpair
60 81 0.16 1 colorpair
65 77 0.0 1 colorpair
66 76 0.16 1 colorpair
67 75 0.0 1 colorpair
126 174 0.0 1 colorpair
127 173 0.0 1 colorpair
128 172 0.0 1 colorpair
129 171 0.0 1 colorpair
130 170 0.0 1 colorpair
132 168 0.0 1 colorpair
133 167 0.0 1 colorpair
134 166 0.0 1 colorpair
138 162 0.0 1 colorpair
139 161 0.0 1 colorpair
140 160 0.0 1 colorpair
142 155 0.0 1 colorpair
143 154 0.0 1 colorpair
144 153 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
55 cmark
60 cmark
76 cmark

% End Annotations
showpage
end
%%EOF
