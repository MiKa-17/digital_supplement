%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 17:02:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGCUAACAUCA__UU___GCACAUGAU__UGGGCCUCGUUGGUUAAUGAAAAUUGACCUUCGGGGCUUUCGUCUAUCUGGCUCUUGCUUGCGCUUGAGACAGACAGCCUCAAGCACC\
) } def
/len { sequence length } bind def

/coor [
[108.87344360 192.95387268]
[99.49740601 193.37509155]
[90.12645721 192.85296631]
[80.85525513 191.39277649]
[71.77746582 189.00926208]
[62.98480225 185.72651672]
[54.56608963 181.57769775]
[46.60638809 176.60472107]
[39.18610764 170.85781860]
[32.38021469 164.39506531]
[26.25746346 157.28175354]
[20.87971497 149.58973694]
[16.30129814 141.39671326]
[12.56846714 132.78547668]
[9.71893406 123.84302521]
[7.78148603 114.65969086]
[6.77569723 105.32825470]
[6.71172953 95.94297791]
[7.59022808 86.59870148]
[9.40231800 77.38980865]
[12.12969208 68.40933990]
[15.74479675 59.74802399]
[20.21110916 51.49336243]
[25.48350906 43.72875214]
[31.50872803 36.53263474]
[38.22589493 29.97771072]
[45.56715393 24.13020325]
[53.45832825 19.04918861]
[47.05050278 5.48674965]
[40.64268112 -8.07569027]
[27.45697975 -11.15869522]
[18.61281395 -21.15350914]
[17.19956970 -34.22801208]
[23.51342773 -45.54065323]
[17.45985222 -59.26487350]
[11.40627670 -72.98908997]
[5.35270119 -86.71331024]
[-0.70087427 -100.43753052]
[-6.75444984 -114.16175079]
[-12.80802536 -127.88597107]
[-18.86160088 -141.61019897]
[-33.32256317 -147.39968872]
[-39.26624298 -161.40423584]
[-33.65772629 -175.15487671]
[-39.71129990 -188.87910461]
[-45.76487732 -202.60331726]
[-51.81845093 -216.32754517]
[-57.87202454 -230.05175781]
[-63.92560196 -243.77598572]
[-69.97917938 -257.50021362]
[-83.52526855 -266.74334717]
[-82.02388000 -283.07360840]
[-67.01950836 -289.69183350]
[-53.94737244 -279.78976440]
[-56.25495529 -263.55377197]
[-50.20138168 -249.82955933]
[-44.14780426 -236.10533142]
[-38.09423065 -222.38111877]
[-32.04065704 -208.65689087]
[-25.98707962 -194.93267822]
[-19.93350410 -181.20845032]
[-5.99713707 -176.07881165]
[0.33755586 -162.24673462]
[-5.13738012 -147.66377258]
[0.91619539 -133.93954468]
[6.96977091 -120.21533203]
[13.02334595 -106.49111176]
[19.07692146 -92.76689148]
[25.13049698 -79.04267120]
[31.18407249 -65.31845093]
[37.23764801 -51.59422684]
[53.12263489 -46.24014664]
[60.41677094 -30.77479172]
[54.20512009 -14.48351574]
[60.61294556 -0.92107546]
[67.02076721 12.64136410]
[91.68230438 6.99474859]
[116.95444489 8.17566967]
[140.98194885 16.09743690]
[162.00097656 30.17851067]
[178.46847534 49.38519669]
[189.17559814 72.30752563]
[203.81179810 69.02397919]
[218.44799805 65.74042511]
[230.13758850 54.23888397]
[245.86871338 58.87178040]
[249.45854187 74.87319183]
[237.21415710 85.78223419]
[221.73155212 80.37662506]
[207.09535217 83.66017151]
[192.45915222 86.94372559]
[193.33422852 102.80735779]
[191.50727844 118.58972168]
[187.03118896 133.83390808]
[180.03552246 148.09860229]
[170.72283936 160.97082520]
[181.26036072 171.64605713]
[191.79789734 182.32127380]
[202.33543396 192.99650574]
[212.87295532 203.67172241]
[223.41049194 214.34695435]
[238.61163330 218.73280334]
[242.04608154 233.22604370]
[258.01489258 234.76759338]
[266.64492798 248.29171753]
[261.31597900 263.42385864]
[246.11593628 268.55593872]
[232.70498657 259.75106812]
[231.37084961 243.76358032]
[216.92343140 240.14128113]
[212.73527527 224.88447571]
[202.19773865 214.20925903]
[191.66020203 203.53402710]
[181.12266541 192.85881042]
[170.58514404 182.18357849]
[160.04760742 171.50836182]
[152.56588745 177.17504883]
[144.55311584 182.06205750]
[136.09024048 186.12001038]
[127.26274872 189.30790710]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 76]
[29 75]
[30 74]
[34 71]
[35 70]
[36 69]
[37 68]
[38 67]
[39 66]
[40 65]
[41 64]
[44 61]
[45 60]
[46 59]
[47 58]
[48 57]
[49 56]
[50 55]
[82 91]
[83 90]
[84 89]
[96 116]
[97 115]
[98 114]
[99 113]
[100 112]
[101 111]
[103 109]
] def

init

% Start Annotations
28 76 0.0 0.6 colorpair
29 75 0.0 1 colorpair
30 74 0.16 1 colorpair
34 71 0.0 1 colorpair
35 70 0.16 1 colorpair
36 69 0.0 1 colorpair
37 68 0.0 1 colorpair
38 67 0.0 1 colorpair
39 66 0.0 1 colorpair
40 65 0.0 1 colorpair
41 64 0.0 1 colorpair
44 61 0.0 1 colorpair
45 60 0.0 1 colorpair
46 59 0.0 1 colorpair
47 58 0.0 1 colorpair
48 57 0.0 1 colorpair
49 56 0.0 1 colorpair
50 55 0.0 1 colorpair
82 91 0.0 1 colorpair
83 90 0.0 1 colorpair
84 89 0.0 1 colorpair
96 116 0.0 1 colorpair
97 115 0.0 1 colorpair
98 114 0.0 1 colorpair
99 113 0.0 1 colorpair
100 112 0.0 1 colorpair
101 111 0.0 1 colorpair
103 109 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
28 76 1 gmark
30 cmark
35 cmark

% End Annotations
showpage
end
%%EOF
