%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 17:02:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
____AAGGAGGCAAGUAUGCUUGGAAAAACCGCCGUGAUGGCGUUGCUCAUUGUGUGUGUCACGGUACUGGCGUUUACCGCGCUGGUACGAGAUUCACUGUGUGAGUUAAGUGUGCGGCAAGGCGGCACGGAAAUCCGGGCAUAUCUUGCCUACGAACCGAG________________\
) } def
/len { sequence length } bind def

/coor [
[184.63764954 859.92053223]
[172.75282288 850.73468018]
[162.14027405 840.10443115]
[152.97427368 828.20434570]
[145.40531921 815.22979736]
[139.55769348 801.39379883]
[135.52745056 786.92364502]
[133.38075256 772.05688477]
[133.15283203 757.03771973]
[134.84747314 742.11267090]
[138.43681335 727.52691650]
[143.86192322 713.51989746]
[151.03372192 700.32165527]
[159.83442688 688.14892578]
[170.11955261 677.20153809]
[181.72016907 667.65930176]
[194.44581604 659.67895508]
[208.08752441 653.39147949]
[222.42126465 648.90014648]
[219.80213928 634.13055420]
[207.48379517 625.83636475]
[204.61723328 610.89520264]
[213.40048218 598.03082275]
[210.78135681 583.26129150]
[196.39186096 579.33599854]
[185.08709717 569.51196289]
[179.14445496 555.69726562]
[179.79182434 540.61077881]
[186.95431519 527.24719238]
[199.25848389 518.28234863]
[196.63935852 503.51278687]
[194.02023315 488.74322510]
[190.75579834 474.10275269]
[186.85232544 459.61953735]
[182.94885254 445.13635254]
[179.04537964 430.65316772]
[168.70764160 424.33660889]
[165.34880066 412.27975464]
[171.30039978 400.81536865]
[160.69963074 390.35244751]
[164.84768677 375.08468628]
[161.19900513 360.53521729]
[150.59823608 350.07229614]
[154.74630737 334.80453491]
[151.09761047 320.25506592]
[147.44891357 305.70559692]
[132.67272949 297.70172119]
[128.15466309 281.16571045]
[137.15524292 266.18164062]
[133.25177002 251.69845581]
[129.34829712 237.21525574]
[115.19888306 236.42747498]
[101.96596527 231.29666138]
[90.95056152 222.31300354]
[83.24005890 210.34620667]
[79.60089111 196.56127930]
[80.40235901 182.30511475]
[85.57920837 168.97491455]
[94.63671875 157.88122559]
[106.69795227 150.11911011]
[103.04926300 135.56964111]
[99.40056610 121.02017212]
[95.75187683 106.47070312]
[88.99921417 109.16816711]
[80.74738312 108.13338470]
[72.67041779 102.87036896]
[66.55599976 93.55329132]
[60.18360138 79.97416687]
[53.81121063 66.39504242]
[47.43881607 52.81591797]
[41.06642151 39.23679352]
[34.69403076 25.65767097]
[28.32163620 12.07854748]
[21.94924355 -1.50057662]
[7.40958405 -8.28127575]
[3.78583717 -23.90971184]
[13.85783005 -36.39708710]
[29.89919281 -36.16415405]
[39.60436249 -23.38960075]
[35.52836609 -7.87297010]
[41.90076065 5.70615387]
[48.27315140 19.28527832]
[54.64554596 32.86440277]
[61.01794052 46.44352341]
[67.39033508 60.02264786]
[73.76272583 73.60177612]
[80.13512421 87.18089294]
[95.00535583 85.21212769]
[97.62448120 70.44255829]
[100.24360657 55.67298889]
[89.37887573 44.59430695]
[87.13431549 29.24042892]
[94.37300110 15.51523495]
[108.31152344 8.69634056]
[123.59022522 11.40575123]
[134.33413696 22.60164261]
[136.41200256 37.97896576]
[129.02484131 51.62482834]
[115.01317596 58.29211426]
[112.39405060 73.06168365]
[109.77492523 87.83125305]
[110.30134583 102.82201385]
[113.95003510 117.37148285]
[117.59873199 131.92094421]
[121.24742126 146.47041321]
[137.09001160 148.02653503]
[151.42010498 154.89709473]
[162.51625061 166.23641968]
[169.05247498 180.66322327]
[170.25668335 196.42889404]
[166.00183105 211.62939453]
[156.81906128 224.43528748]
[143.83148193 233.31178284]
[147.73495483 247.79498291]
[151.63842773 262.27816772]
[164.02310181 267.61706543]
[170.96232605 278.95352173]
[170.10862732 292.02255249]
[161.99838257 302.05691528]
[165.64707947 316.60638428]
[169.29577637 331.15585327]
[180.15751648 342.65945435]
[175.74847412 356.88653564]
[179.39715576 371.43600464]
[190.25891113 382.93960571]
[185.84986877 397.16668701]
[198.96220398 410.07611084]
[193.52856445 426.74969482]
[197.43203735 441.23287964]
[201.33551025 455.71606445]
[205.23898315 470.19927979]
[214.99652100 458.80670166]
[229.99253845 459.15237427]
[239.21473694 470.98245239]
[235.89083862 485.60955811]
[222.46171570 492.29226685]
[208.78981018 486.12408447]
[211.40893555 500.89364624]
[214.02806091 515.66320801]
[228.66455078 519.85064697]
[239.98539734 529.93652344]
[245.78079224 543.88049316]
[244.95072937 558.89617920]
[237.71330261 572.00836182]
[225.55093384 580.64215088]
[228.17005920 595.41174316]
[240.84118652 604.47155762]
[243.28695679 619.48730469]
[234.57171631 631.51147461]
[237.19084167 646.28100586]
[252.19491577 645.56982422]
[267.16674805 646.78320312]
[281.86050415 649.90118408]
[296.03488159 654.87268066]
[309.45712280 661.61590576]
[321.90682983 670.02026367]
[333.17956543 679.94769287]
[343.09020996 691.23522949]
[351.47604370 703.69738770]
[358.19934082 717.12963867]
[363.14971924 731.31140137]
[366.24584961 746.00976562]
[367.43695068 760.98339844]
[366.70343018 775.98638916]
[364.05731201 790.77246094]
[359.54208374 805.09869385]
[353.23190308 818.72985840]
[345.23031616 831.44219971]
[335.66879272 843.02691650]
[324.70431519 853.29376221]
[312.51690674 862.07421875]
[299.30673218 869.22399902]
[285.29071045 874.62573242]
[270.69897461 878.19079590]
[255.77113342 879.86053467]
[240.75233459 879.60760498]
[225.88919067 877.43609619]
[211.42576599 873.38177490]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 150]
[20 149]
[23 146]
[24 145]
[30 139]
[31 138]
[32 137]
[33 131]
[34 130]
[35 129]
[36 128]
[39 126]
[41 124]
[42 123]
[44 121]
[45 120]
[46 119]
[49 115]
[50 114]
[51 113]
[60 105]
[61 104]
[62 103]
[63 102]
[67 87]
[68 86]
[69 85]
[70 84]
[71 83]
[72 82]
[73 81]
[74 80]
[88 101]
[89 100]
[90 99]
] def

init

% Start Annotations
19 150 0.0 1 colorpair
20 149 0.16 1 colorpair
23 146 0.16 1 colorpair
24 145 0.16 1 colorpair
30 139 0.0 1 colorpair
31 138 0.0 1 colorpair
32 137 0.0 1 colorpair
33 131 0.0 1 colorpair
34 130 0.0 1 colorpair
35 129 0.0 1 colorpair
36 128 0.0 1 colorpair
39 126 0.32 1 colorpair
41 124 0.16 1 colorpair
42 123 0.0 1 colorpair
44 121 0.16 1 colorpair
45 120 0.0 1 colorpair
46 119 0.0 1 colorpair
49 115 0.16 1 colorpair
50 114 0.0 1 colorpair
51 113 0.0 1 colorpair
60 105 0.0 1 colorpair
61 104 0.0 1 colorpair
62 103 0.0 1 colorpair
63 102 0.0 1 colorpair
67 87 0.16 1 colorpair
68 86 0.0 1 colorpair
69 85 0.0 1 colorpair
70 84 0.0 1 colorpair
71 83 0.0 1 colorpair
72 82 0.16 1 colorpair
73 81 0.0 1 colorpair
74 80 0.16 1 colorpair
88 101 0.0 1 colorpair
89 100 0.0 1 colorpair
90 99 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
20 cmark
146 cmark
145 cmark
39 cmark
126 cmark
41 cmark
124 cmark
44 cmark
121 cmark
49 cmark
115 cmark
67 cmark
72 cmark
82 cmark
74 cmark
80 cmark

% End Annotations
showpage
end
%%EOF
