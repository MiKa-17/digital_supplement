%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 17:02:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_________________________________________________________________________________________________GGAAAUCCGAGCCUAUCUGGCUCAAGAAC__AAACAAGAACCAGAAAGACGAAAGCCCCGAA_____________________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[-43.55123138 997.24017334]
[-58.52692795 998.12274170]
[-73.52486420 998.45770264]
[-88.52503204 998.24475098]
[-103.50740814 997.48406982]
[-118.45201111 996.17675781]
[-133.33889771 994.32446289]
[-148.14820862 991.92968750]
[-162.86016846 988.99566650]
[-177.45515442 985.52630615]
[-191.91371155 981.52624512]
[-206.21652222 977.00073242]
[-220.34449768 971.95593262]
[-234.27882385 966.39849854]
[-248.00086975 960.33581543]
[-261.49234009 953.77606201]
[-274.73522949 946.72796631]
[-287.71188354 939.20086670]
[-300.40496826 931.20489502]
[-312.79757690 922.75067139]
[-324.87313843 913.84942627]
[-336.61553955 904.51318359]
[-348.00912476 894.75427246]
[-359.03872681 884.58575439]
[-369.68957520 874.02117920]
[-379.94744873 863.07470703]
[-389.79873657 851.76086426]
[-399.23022461 840.09478760]
[-408.22937012 828.09204102]
[-416.78411865 815.76861572]
[-424.88311768 803.14105225]
[-432.51550293 790.22601318]
[-439.67111206 777.04089355]
[-446.34039307 763.60327148]
[-452.51446533 749.93096924]
[-458.18508911 736.04229736]
[-463.34469604 721.95587158]
[-467.98635864 707.69030762]
[-472.10394287 693.26477051]
[-475.69192505 678.69848633]
[-478.74551392 664.01092529]
[-481.26068115 649.22155762]
[-483.23397827 634.35021973]
[-484.66287231 619.41674805]
[-485.54537964 604.44104004]
[-485.88037109 589.44311523]
[-485.66738892 574.44299316]
[-484.90670776 559.46057129]
[-483.59933472 544.51599121]
[-481.74703979 529.62908936]
[-479.35229492 514.81982422]
[-476.41824341 500.10784912]
[-472.94888306 485.51284790]
[-468.94876099 471.05429077]
[-464.42327881 456.75149536]
[-459.37841797 442.62350464]
[-453.82095337 428.68920898]
[-447.75830078 414.96716309]
[-441.19851685 401.47570801]
[-434.15039062 388.23281860]
[-426.62332153 375.25616455]
[-418.62731934 362.56307983]
[-410.17306519 350.17050171]
[-401.27185059 338.09497070]
[-391.93557739 326.35256958]
[-382.17663574 314.95895386]
[-372.00811768 303.92941284]
[-361.44354248 293.27856445]
[-350.49703979 283.02066040]
[-339.18319702 273.16940308]
[-327.51712036 263.73794556]
[-315.51437378 254.73881531]
[-303.19094849 246.18406677]
[-290.56332397 238.08509827]
[-277.64831543 230.45271301]
[-264.46319580 223.29711914]
[-251.02552795 216.62782288]
[-237.35324097 210.45376587]
[-223.46459961 204.78317261]
[-209.37811279 199.62359619]
[-195.11257935 194.98191833]
[-180.68704224 190.86436462]
[-166.12075806 187.27639771]
[-151.43315125 184.22280884]
[-136.64381409 181.70768738]
[-121.77247620 179.73437500]
[-106.83900452 178.30551147]
[-91.86330414 177.42300415]
[-76.86537170 177.08802795]
[-61.86520386 177.30104065]
[-46.88282776 178.06173706]
[-31.93822479 179.36911011]
[-17.05134392 181.22142029]
[-2.24204302 183.61619568]
[12.46991444 186.55024719]
[27.06489944 190.01963806]
[41.52343750 194.01977539]
[55.82624054 198.54527283]
[60.87050247 184.41886902]
[65.91477203 170.29246521]
[65.20490265 162.94564819]
[71.12634277 156.00767517]
[76.36392212 141.95179749]
[81.60150146 127.89591217]
[86.83908081 113.84003448]
[80.91142273 100.61849213]
[85.97075653 87.04096222]
[99.10504150 80.92238617]
[98.23967743 76.69680786]
[98.70927429 72.80432892]
[100.24697113 69.62193298]
[102.49129486 67.40203857]
[105.03468323 66.25244141]
[111.03530884 52.50498581]
[117.03593445 38.75753403]
[123.03656006 25.01007843]
[129.03718567 11.26262474]
[135.03781128 -2.48482895]
[141.03843689 -16.23228264]
[129.44866943 -25.92011261]
[121.05889893 -38.48149872]
[116.54924011 -52.89814377]
[116.28527069 -68.00135803]
[120.28839111 -82.56678009]
[128.23408508 -95.41367340]
[139.47822571 -105.50058746]
[153.10931396 -112.00982666]
[168.02233887 -114.41371155]
[183.00834656 -112.51737213]
[196.85250854 -106.47453308]
[208.43252563 -96.77506256]
[216.80967712 -84.20526123]
[221.30485535 -69.78408813]
[221.55364990 -54.68062210]
[217.53590393 -40.11922073]
[209.57730103 -27.28031731]
[198.32302856 -17.20470428]
[184.68540955 -10.70916462]
[169.76998901 -8.32026291]
[154.78588867 -10.23165703]
[148.78526306 3.51579666]
[142.78463745 17.26325035]
[136.78401184 31.01070404]
[130.78338623 44.75815964]
[124.78276062 58.50561142]
[118.78213501 72.25306702]
[113.16091919 86.15996552]
[119.08857727 99.38150787]
[114.02924347 112.95903778]
[100.89495850 119.07761383]
[95.65737915 133.13349915]
[90.41979980 147.18937683]
[85.18222046 161.24525452]
[80.04117584 175.33673096]
[74.99691010 189.46313477]
[69.95264435 203.58953857]
[83.88697052 209.14695740]
[97.60903168 215.20957947]
[111.10052490 221.76931763]
[124.34342957 228.81741333]
[137.32009888 236.34445190]
[150.01319885 244.34042358]
[162.40580750 252.79461670]
[174.48138428 261.69580078]
[186.22381592 271.03204346]
[197.61743164 280.79092407]
[208.64703369 290.95941162]
[219.29789734 301.52395630]
[229.55583191 312.47042847]
[239.40711975 323.78424072]
[248.83863831 335.45028687]
[257.83779907 347.45303345]
[266.39257812 359.77642822]
[274.49157715 372.40402222]
[282.12399292 385.31900024]
[289.27966309 398.50408936]
[295.94897461 411.94174194]
[302.12307739 425.61401367]
[307.79373169 439.50265503]
[312.95333862 453.58911133]
[317.59506226 467.85464478]
[321.71264648 482.28015137]
[325.30065918 496.84643555]
[328.35430908 511.53402710]
[330.86947632 526.32336426]
[332.84283447 541.19470215]
[334.27172852 556.12817383]
[335.15429688 571.10382080]
[335.48931885 586.10180664]
[335.27633667 601.10192871]
[334.51568604 616.08435059]
[333.20837402 631.02893066]
[331.35610962 645.91583252]
[328.96136475 660.72515869]
[326.02737427 675.43707275]
[322.55801392 690.03210449]
[318.55792236 704.49066162]
[314.03247070 718.79345703]
[308.98764038 732.92144775]
[303.43020630 746.85577393]
[297.36758423 760.57781982]
[290.80783081 774.06933594]
[283.75973511 787.31219482]
[276.23266602 800.28887939]
[268.23669434 812.98199463]
[259.78247070 825.37457275]
[250.88128662 837.45013428]
[241.54502869 849.19256592]
[231.78613281 860.58618164]
[221.61763000 871.61578369]
[211.05308533 882.26660156]
[200.10659790 892.52453613]
[188.79277039 902.37579346]
[177.12670898 911.80731201]
[165.12397766 920.80645752]
[152.80058289 929.36120605]
[140.17295837 937.46020508]
[127.25798035 945.09265137]
[114.07286835 952.24822998]
[100.63520813 958.91754150]
[86.96293640 965.09167480]
[73.07430267 970.76226807]
[58.98782730 975.92187500]
[44.72230911 980.56359863]
[30.29678345 984.68121338]
[15.73050117 988.26916504]
[1.04289496 991.32281494]
[-13.74643612 993.83795166]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[98 156]
[99 155]
[100 154]
[102 153]
[103 152]
[104 151]
[105 150]
[108 147]
[113 146]
[114 145]
[115 144]
[116 143]
[117 142]
[118 141]
[119 140]
] def

init

% Start Annotations
98 156 0.0 1 colorpair
99 155 0.0 1 colorpair
100 154 0.16 1 colorpair
102 153 0.16 1 colorpair
103 152 0.16 1 colorpair
104 151 0.16 1 colorpair
105 150 0.16 1 colorpair
108 147 0.0 1 colorpair
113 146 0.16 1 colorpair
114 145 0.16 1 colorpair
115 144 0.0 1 colorpair
116 143 0.16 1 colorpair
117 142 0.16 1 colorpair
118 141 0.0 0.6 colorpair
119 140 0.32 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
100 cmark
154 cmark
102 cmark
153 cmark
103 cmark
104 cmark
151 cmark
105 cmark
150 cmark
146 cmark
114 cmark
116 cmark
143 cmark
117 cmark
142 cmark
118 141 1 gmark
119 cmark
140 cmark

% End Annotations
showpage
end
%%EOF
