%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 17:02:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_________________________________________________________________________________________________GGGUGUUUGAGGCUAUCUGUCUCAAGCGC__AAGCAAGAGCCAGAUAGACGAAAGCCCCGAA_____________________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[-18.81699562 930.86193848]
[-33.79269028 931.74444580]
[-48.79062653 932.07946777]
[-63.79079437 931.86651611]
[-78.77317047 931.10583496]
[-93.71778107 929.79846191]
[-108.60466003 927.94622803]
[-123.41397095 925.55145264]
[-138.12593079 922.61743164]
[-152.72093201 919.14807129]
[-167.17947388 915.14794922]
[-181.48228455 910.62249756]
[-195.61027527 905.57763672]
[-209.54458618 900.02020264]
[-223.26663208 893.95758057]
[-236.75810242 887.39782715]
[-250.00100708 880.34967041]
[-262.97766113 872.82263184]
[-275.67074585 864.82659912]
[-288.06332397 856.37237549]
[-300.13888550 847.47119141]
[-311.88128662 838.13494873]
[-323.27490234 828.37603760]
[-334.30447388 818.20751953]
[-344.95532227 807.64294434]
[-355.21322632 796.69647217]
[-365.06448364 785.38262939]
[-374.49600220 773.71655273]
[-383.49511719 761.71380615]
[-392.04989624 749.39038086]
[-400.14886475 736.76275635]
[-407.78125000 723.84777832]
[-414.93688965 710.66265869]
[-421.60617065 697.22497559]
[-427.78024292 683.55273438]
[-433.45086670 669.66406250]
[-438.61044312 655.57757568]
[-443.25213623 641.31207275]
[-447.36972046 626.88653564]
[-450.95770264 612.32025146]
[-454.01129150 597.63262939]
[-456.52642822 582.84332275]
[-458.49975586 567.97198486]
[-459.92861938 553.03851318]
[-460.81115723 538.06280518]
[-461.14614868 523.06488037]
[-460.93316650 508.06472778]
[-460.17248535 493.08233643]
[-458.86511230 478.13772583]
[-457.01281738 463.25085449]
[-454.61804199 448.44155884]
[-451.68402100 433.72958374]
[-448.21463013 419.13458252]
[-444.21453857 404.67605591]
[-439.68902588 390.37326050]
[-434.64419556 376.24526978]
[-429.08673096 362.31094360]
[-423.02407837 348.58892822]
[-416.46429443 335.09744263]
[-409.41616821 321.85455322]
[-401.88906860 308.87789917]
[-393.89306641 296.18484497]
[-385.43881226 283.79226685]
[-376.53762817 271.71670532]
[-367.20132446 259.97430420]
[-357.44241333 248.58071899]
[-347.27389526 237.55114746]
[-336.70932007 226.90031433]
[-325.76281738 216.64242554]
[-314.44897461 206.79115295]
[-302.78289795 197.35968018]
[-290.78012085 188.36056519]
[-278.45672607 179.80580139]
[-265.82910156 171.70683289]
[-252.91409302 164.07446289]
[-239.72895813 156.91885376]
[-226.29129028 150.24957275]
[-212.61900330 144.07551575]
[-198.73036194 138.40490723]
[-184.64387512 133.24533081]
[-170.37834167 128.60366821]
[-155.95280457 124.48610687]
[-141.38652039 120.89813995]
[-126.69890594 117.84455872]
[-111.90956879 115.32942963]
[-97.03824615 113.35612488]
[-82.10476685 111.92726135]
[-67.12907410 111.04475403]
[-52.13113403 110.70977783]
[-37.13097000 110.92278290]
[-22.14859009 111.68347931]
[-7.20398951 112.99085999]
[7.68289280 114.84317017]
[22.49219322 117.23794556]
[37.20415115 120.17199707]
[51.79913712 123.64139557]
[66.25767517 127.64151764]
[80.56047821 132.16702271]
[85.60473633 118.04061890]
[90.64900208 103.91420746]
[90.17797852 95.87856293]
[95.86057281 89.62941742]
[101.09815979 75.57353973]
[106.33573914 61.51765823]
[111.57331848 47.46178055]
[113.93000031 32.64806747]
[113.31282806 17.66076851]
[112.69565582 2.67347097]
[112.07849121 -12.31382751]
[111.46131897 -27.30112457]
[100.68154907 -39.18288422]
[103.39213562 -54.99529266]
[117.51374054 -62.60842514]
[132.21348572 -56.18214035]
[136.21498108 -40.64612961]
[126.44861603 -27.91829491]
[127.06578827 -12.93099594]
[127.68295288 2.05630159]
[128.30012512 17.04360008]
[128.91729736 32.03089905]
[134.72607422 18.20129013]
[143.16802979 5.80235958]
[153.90620422 -4.67101526]
[166.51200867 -12.80081272]
[180.48231506 -18.26254654]
[195.25952148 -20.83822441]
[210.25382996 -20.42504501]
[224.86677551 -17.03949547]
[238.51510620 -10.81670570]
[250.65408325 -2.00504565]
[260.79919434 9.04378605]
[268.54553223 21.88879776]
[273.58389282 36.01730728]
[275.71319580 50.86540604]
[274.84848022 65.84046173]
[271.02423096 80.34477234]
[264.39309692 93.79943085]
[255.21971130 105.66742706]
[243.87025452 115.47506714]
[230.79769897 122.83090210]
[216.52380371 127.44133759]
[201.61830139 129.12236023]
[186.67610168 127.80687714]
[172.29357910 123.54738617]
[159.04479980 116.51390076]
[147.45857239 106.98714447]
[137.99729919 95.34736633]
[131.03863525 82.05913544]
[126.86032867 67.65283203]
[125.62919617 52.69935989]
[120.39161682 66.75524139]
[115.15403748 80.81111908]
[109.91645813 94.86699677]
[104.77541351 108.95847321]
[99.73114777 123.08488464]
[94.68688202 137.21128845]
[108.62120819 142.76870728]
[122.34326935 148.83132935]
[135.83476257 155.39105225]
[149.07766724 162.43914795]
[162.05433655 169.96620178]
[174.74743652 177.96215820]
[187.14004517 186.41636658]
[199.21562195 195.31753540]
[210.95805359 204.65379333]
[222.35166931 214.41267395]
[233.38127136 224.58117676]
[244.03213501 235.14570618]
[254.29006958 246.09217834]
[264.14135742 257.40597534]
[273.57287598 269.07205200]
[282.57202148 281.07476807]
[291.12683105 293.39816284]
[299.22583008 306.02575684]
[306.85824585 318.94073486]
[314.01388550 332.12585449]
[320.68319702 345.56350708]
[326.85729980 359.23577881]
[332.52795410 373.12438965]
[337.68759155 387.21087646]
[342.32928467 401.47637939]
[346.44689941 415.90188599]
[350.03491211 430.46817017]
[353.08853149 445.15579224]
[355.60369873 459.94509888]
[357.57705688 474.81643677]
[359.00598145 489.74990845]
[359.88851929 504.72558594]
[360.22354126 519.72351074]
[360.01058960 534.72369385]
[359.24993896 549.70605469]
[357.94259644 564.65069580]
[356.09033203 579.53759766]
[353.69558716 594.34686279]
[350.76159668 609.05883789]
[347.29223633 623.65386963]
[343.29217529 638.11236572]
[338.76669312 652.41522217]
[333.72189331 666.54321289]
[328.16445923 680.47753906]
[322.10183716 694.19958496]
[315.54208374 707.69104004]
[308.49395752 720.93395996]
[300.96691895 733.91064453]
[292.97091675 746.60369873]
[284.51672363 758.99633789]
[275.61553955 771.07189941]
[266.27926636 782.81433105]
[256.52035522 794.20788574]
[246.35186768 805.23748779]
[235.78732300 815.88836670]
[224.84083557 826.14630127]
[213.52700806 835.99755859]
[201.86094666 845.42907715]
[189.85821533 854.42822266]
[177.53482056 862.98297119]
[164.90719604 871.08197021]
[151.99221802 878.71435547]
[138.80709839 885.86999512]
[125.36944580 892.53930664]
[111.69717407 898.71337891]
[97.80854034 904.38403320]
[83.72206116 909.54364014]
[69.45654297 914.18536377]
[55.03102112 918.30291748]
[40.46473694 921.89093018]
[25.77713013 924.94451904]
[10.98779964 927.45971680]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[98 156]
[99 155]
[100 154]
[102 153]
[103 152]
[104 151]
[105 150]
[106 120]
[107 119]
[108 118]
[109 117]
[110 116]
] def

init

% Start Annotations
98 156 0.0 1 colorpair
99 155 0.0 1 colorpair
100 154 0.16 1 colorpair
102 153 0.16 1 colorpair
103 152 0.16 1 colorpair
104 151 0.16 1 colorpair
105 150 0.16 1 colorpair
106 120 0.16 1 colorpair
107 119 0.32 1 colorpair
108 118 0.0 1 colorpair
109 117 0.16 1 colorpair
110 116 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
100 cmark
154 cmark
102 cmark
153 cmark
103 cmark
104 cmark
151 cmark
105 cmark
150 cmark
120 cmark
107 cmark
119 cmark
109 cmark
117 cmark
110 116 1 gmark
110 cmark
116 cmark

% End Annotations
showpage
end
%%EOF
