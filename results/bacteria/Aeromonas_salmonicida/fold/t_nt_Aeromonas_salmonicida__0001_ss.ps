%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 17:02:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGCUAACAUCA__UU___GAACAUGAU__UGGGCCUCGUUGGUUAAUGAAAAUUGACCUUCGGGGCUUUCGUCUAUCUGGCUCUUGCUUGCGCUUGAGACAGACAGCCUCAAGCACC\
) } def
/len { sequence length } bind def

/coor [
[115.71027374 187.66300964]
[106.57345581 188.81671143]
[97.36634064 189.02067566]
[88.18739319 188.27275085]
[79.13475800 186.58093262]
[70.30522919 183.96331787]
[61.79323196 180.44787598]
[53.68977356 176.07220459]
[46.08151245 170.88310242]
[39.04979706 164.93605042]
[32.66981888 158.29463196]
[27.00980186 151.02987671]
[22.13026619 143.21945190]
[18.08338737 134.94689941]
[14.91244030 126.30065155]
[12.65133095 117.37317657]
[11.32423782 108.25992584]
[10.94535160 99.05835724]
[11.51872253 89.86685181]
[13.03822041 80.78369904]
[15.48759747 71.90602875]
[18.84066200 63.32876968]
[23.06156158 55.14363098]
[28.10515976 47.43814087]
[33.91752625 40.29469299]
[40.43651199 33.78966904]
[47.59240723 27.99263000]
[55.30869293 22.96556473]
[48.90086746 9.40312481]
[42.49304199 -4.15931559]
[29.30734253 -7.24232006]
[20.46317673 -17.23713493]
[19.04993439 -30.31163788]
[25.36379051 -41.62427902]
[19.31021500 -55.34849930]
[13.25664043 -69.07271576]
[7.20306492 -82.79693604]
[1.14948940 -96.52115631]
[-4.90408611 -110.24537659]
[-10.95766163 -123.96959686]
[-17.01123619 -137.69381714]
[-31.47220039 -143.48332214]
[-37.41587830 -157.48786926]
[-31.80736160 -171.23851013]
[-37.86093521 -184.96272278]
[-43.91451263 -198.68695068]
[-49.96808624 -212.41116333]
[-56.02166367 -226.13539124]
[-62.07523727 -239.85960388]
[-68.12881470 -253.58383179]
[-81.67490387 -262.82696533]
[-80.17351532 -279.15722656]
[-65.16915131 -285.77545166]
[-52.09700775 -275.87338257]
[-54.40459442 -259.63739014]
[-48.35101700 -245.91317749]
[-42.29744339 -232.18896484]
[-36.24386597 -218.46473694]
[-30.19029236 -204.74052429]
[-24.13671684 -191.01629639]
[-18.08314133 -177.29208374]
[-4.14677334 -172.16242981]
[2.18791962 -158.33035278]
[-3.28701639 -143.74739075]
[2.76655912 -130.02317810]
[8.82013416 -116.29895782]
[14.87370968 -102.57473755]
[20.92728424 -88.85051727]
[26.98085976 -75.12629700]
[33.03443527 -61.40207291]
[39.08801270 -47.67785263]
[54.97299576 -42.32376862]
[62.26713562 -26.85841751]
[56.05548477 -10.56714058]
[62.46330643 2.99529982]
[68.87113190 16.55773926]
[92.29787445 11.27404881]
[116.28466797 12.44186592]
[139.08734131 19.97627640]
[159.04788208 33.32943344]
[174.71488953 51.53038788]
[184.94915771 73.25570679]
[199.58535767 69.97215271]
[214.22155762 66.68860626]
[225.91114807 55.18706131]
[241.64227295 59.81995773]
[245.23210144 75.82137299]
[232.98771667 86.73041534]
[217.50511169 81.32480621]
[202.86891174 84.60835266]
[188.23271179 87.89190674]
[188.81185913 106.63866425]
[185.45208740 125.09099579]
[178.30241394 142.43051147]
[167.67994690 157.88818359]
[178.21748352 168.56340027]
[188.75502014 179.23863220]
[199.29254150 189.91384888]
[209.83007812 200.58908081]
[220.36761475 211.26429749]
[230.90513611 221.93952942]
[246.10629272 226.32539368]
[249.54072571 240.81861877]
[265.50955200 242.36018372]
[274.13958740 255.88429260]
[268.81063843 271.01644897]
[253.61058044 276.14852905]
[240.19963074 267.34362793]
[238.86550903 251.35615540]
[224.41807556 247.73385620]
[220.22991943 232.47706604]
[209.69238281 221.80183411]
[199.15484619 211.12661743]
[188.61732483 200.45138550]
[178.07978821 189.77616882]
[167.54225159 179.10093689]
[157.00473022 168.42572021]
[149.63372803 173.94667053]
[141.73200989 178.67691040]
[133.38404846 182.56587219]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 76]
[29 75]
[30 74]
[34 71]
[35 70]
[36 69]
[37 68]
[38 67]
[39 66]
[40 65]
[41 64]
[44 61]
[45 60]
[46 59]
[47 58]
[48 57]
[49 56]
[50 55]
[82 91]
[83 90]
[84 89]
[95 117]
[96 116]
[97 115]
[98 114]
[99 113]
[100 112]
[101 111]
[103 109]
] def

init

% Start Annotations
28 76 0.0 0.6 colorpair
29 75 0.0 1 colorpair
30 74 0.16 1 colorpair
34 71 0.0 1 colorpair
35 70 0.16 1 colorpair
36 69 0.0 1 colorpair
37 68 0.0 1 colorpair
38 67 0.0 1 colorpair
39 66 0.0 1 colorpair
40 65 0.0 1 colorpair
41 64 0.0 1 colorpair
44 61 0.0 1 colorpair
45 60 0.0 1 colorpair
46 59 0.0 1 colorpair
47 58 0.0 1 colorpair
48 57 0.0 1 colorpair
49 56 0.0 1 colorpair
50 55 0.0 1 colorpair
82 91 0.0 1 colorpair
83 90 0.0 1 colorpair
84 89 0.0 1 colorpair
95 117 0.0 0.6 colorpair
96 116 0.0 1 colorpair
97 115 0.0 1 colorpair
98 114 0.0 1 colorpair
99 113 0.0 1 colorpair
100 112 0.0 1 colorpair
101 111 0.0 1 colorpair
103 109 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
28 76 1 gmark
30 cmark
35 cmark
95 117 1 gmark

% End Annotations
showpage
end
%%EOF
