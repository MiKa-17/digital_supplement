%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 17:02:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
____AAGGAGGCAAGUAUGCUUGGAAAAACCGCCGUGAUGGCGUUGCUCAUUGUGUGUGUCACGGUACUGGCGUUUACCGCGCUGGUACGAGAUUCACUGUGUGAGUUAAGUGUGCGGCAAGGCGGCACGGAAAUCCGGGCAUAUCUUGCCUACGAACCGAGAG_GUAACC_______\
) } def
/len { sequence length } bind def

/coor [
[197.39047241 735.82696533]
[195.83654785 720.87060547]
[196.83277893 705.86676025]
[200.35050964 691.24713135]
[206.28852844 677.43237305]
[214.47598267 664.81994629]
[224.67730713 653.77270508]
[236.59898376 644.60852051]
[249.89799500 637.59112549]
[245.23771667 623.33343506]
[240.57742310 609.07574463]
[235.91714478 594.81805420]
[231.25685120 580.56036377]
[226.59657288 566.30267334]
[221.93627930 552.04498291]
[217.15106201 537.82873535]
[212.24127197 523.65502930]
[207.33148193 509.48132324]
[202.42169189 495.30761719]
[197.51191711 481.13391113]
[192.60212708 466.96020508]
[187.69233704 452.78649902]
[182.78254700 438.61279297]
[177.87275696 424.43908691]
[172.96296692 410.26538086]
[162.58488464 409.50268555]
[153.02270508 405.30151367]
[145.38536072 398.12112427]
[140.56787109 388.76785278]
[139.14651489 378.30462646]
[141.30992126 367.93017578]
[146.83462524 358.84164429]
[155.10771179 352.09655762]
[151.20423889 337.61337280]
[147.30076599 323.13018799]
[143.39729309 308.64700317]
[139.49382019 294.16378784]
[134.70330811 288.50717163]
[135.65132141 279.39212036]
[125.05054474 268.92919922]
[129.19860840 253.66143799]
[125.54991913 239.11196899]
[114.94915771 228.64904785]
[119.09722137 213.38130188]
[115.44853210 198.83183289]
[111.79983521 184.28236389]
[108.15114594 169.73289490]
[104.50244904 155.18342590]
[100.72622681 140.66653442]
[96.82275391 126.18333435]
[92.91928101 111.70014191]
[83.43521118 100.07893372]
[70.02853394 93.35130310]
[56.62186050 86.62367249]
[43.21518326 79.89604187]
[27.59663582 83.56217957]
[15.08197975 73.52410126]
[15.27138710 57.48217010]
[28.01955986 47.74237442]
[43.54719162 51.77625275]
[49.94281387 66.48936462]
[63.34949112 73.21699524]
[76.75616455 79.94462585]
[90.16284180 86.67225647]
[100.90813446 76.20618439]
[94.53574371 62.62705994]
[88.16335297 49.04793549]
[81.79095459 35.46881485]
[75.41856384 21.88969040]
[69.04617310 8.31056595]
[62.67377853 -5.26855755]
[56.30138397 -18.84768105]
[49.92898941 -32.42680359]
[43.55659485 -46.00592804]
[29.01693916 -52.78662872]
[25.39319038 -68.41506195]
[35.46518326 -80.90243530]
[51.50654602 -80.66950226]
[61.21171570 -67.89495087]
[57.13571930 -52.37832260]
[63.50811386 -38.79919815]
[69.88050842 -25.22007561]
[76.25289917 -11.64095116]
[82.62529755 1.93817258]
[88.99768829 15.51729679]
[95.37007904 29.09642029]
[101.74247742 42.67554474]
[108.11486816 56.25466919]
[114.48725891 69.83379364]
[121.98264313 69.57058716]
[116.84976959 55.47613144]
[128.66835022 46.23920059]
[141.10523987 54.62513351]
[136.97340393 69.04416656]
[144.46878052 68.78096008]
[149.87297058 54.78828812]
[155.27714539 40.79561996]
[160.68132019 26.80294991]
[160.74752808 9.84913063]
[177.05711365 5.21946716]
[186.02079773 19.61004829]
[174.67399597 32.20713043]
[169.26982117 46.19980240]
[163.86563110 60.19247055]
[158.46145630 74.18514252]
[167.66282654 86.03143311]
[170.48455811 100.76363373]
[166.31175232 115.17154694]
[156.05371094 126.11560059]
[141.94567871 131.21105957]
[127.06188202 129.34757996]
[114.64556122 120.93122864]
[107.40247345 107.79666901]
[111.30594635 122.27986145]
[115.20941925 136.76306152]
[120.47883606 144.26077271]
[119.05191803 151.53472900]
[122.70061493 166.08419800]
[126.34930420 180.63366699]
[129.99800110 195.18313599]
[133.64669800 209.73260498]
[144.50843811 221.23620605]
[140.09939575 235.46328735]
[143.74807739 250.01275635]
[154.60983276 261.51635742]
[150.20079041 275.74343872]
[153.97700500 290.26031494]
[157.88047791 304.74353027]
[161.78395081 319.22671509]
[165.68742371 333.70989990]
[169.59089661 348.19308472]
[188.59513855 354.29147339]
[200.01429749 370.48547363]
[199.38615417 390.14709473]
[187.13667297 405.35559082]
[192.04646301 419.52929688]
[196.95625305 433.70300293]
[201.86604309 447.87670898]
[206.77583313 462.05041504]
[211.68562317 476.22412109]
[216.59541321 490.39782715]
[221.50518799 504.57156372]
[226.41497803 518.74523926]
[231.32476807 532.91894531]
[237.10714722 540.02856445]
[236.19396973 547.38470459]
[240.85426331 561.64239502]
[245.51454163 575.90008545]
[250.17483521 590.15777588]
[254.83511353 604.41546631]
[259.49539185 618.67315674]
[264.15570068 632.93084717]
[279.03195190 630.73883057]
[294.06466675 631.09265137]
[308.82135010 633.98205566]
[322.87738037 639.32397461]
[335.82833862 646.96466064]
[347.30163574 656.68432617]
[356.96716309 668.20324707]
[364.54675293 681.19006348]
[369.82241821 695.27111816]
[372.64230347 710.04125977]
[372.92529297 725.07543945]
[370.66326904 739.94122314]
[365.92126465 754.21081543]
[358.83578491 767.47369385]
[349.61062622 779.34826660]
[338.51123047 789.49279785]
[325.85699463 797.61547852]
[312.01193237 803.48254395]
[297.37448120 806.92529297]
[282.36569214 807.84460449]
[267.41748047 806.21398926]
[252.95991516 802.08044434]
[239.40893555 795.56280518]
[227.15446472 786.84869385]
[216.54907227 776.18878174]
[207.89790344 763.88977051]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 152]
[10 151]
[11 150]
[12 149]
[13 148]
[14 147]
[15 146]
[16 144]
[17 143]
[18 142]
[19 141]
[20 140]
[21 139]
[22 138]
[23 137]
[24 136]
[25 135]
[33 131]
[34 130]
[35 129]
[36 128]
[37 127]
[39 126]
[41 124]
[42 123]
[44 121]
[45 120]
[46 119]
[47 118]
[48 117]
[49 115]
[50 114]
[51 113]
[52 64]
[53 63]
[54 62]
[55 61]
[65 89]
[66 88]
[67 87]
[68 86]
[69 85]
[70 84]
[71 83]
[72 82]
[73 81]
[74 80]
[95 105]
[96 104]
[97 103]
[98 102]
] def

init

% Start Annotations
9 152 0.0 1 colorpair
10 151 0.16 1 colorpair
11 150 0.0 1 colorpair
12 149 0.0 1 colorpair
13 148 0.0 0.2 colorpair
14 147 0.0 1 colorpair
15 146 0.16 1 colorpair
16 144 0.0 1 colorpair
17 143 0.0 0.2 colorpair
18 142 0.16 0.6 colorpair
19 141 0.16 1 colorpair
20 140 0.0 0.2 colorpair
21 139 0.16 1 colorpair
22 138 0.0 1 colorpair
23 137 0.0 1 colorpair
24 136 0.0 1 colorpair
25 135 0.0 1 colorpair
33 131 0.0 1 colorpair
34 130 0.0 1 colorpair
35 129 0.0 1 colorpair
36 128 0.0 1 colorpair
37 127 0.0 0.2 colorpair
39 126 0.32 1 colorpair
41 124 0.16 1 colorpair
42 123 0.0 1 colorpair
44 121 0.16 1 colorpair
45 120 0.0 1 colorpair
46 119 0.0 1 colorpair
47 118 0.0 0.2 colorpair
48 117 0.16 1 colorpair
49 115 0.16 1 colorpair
50 114 0.0 1 colorpair
51 113 0.0 1 colorpair
52 64 0.16 0.2 colorpair
53 63 0.0 1 colorpair
54 62 0.0 1 colorpair
55 61 0.0 1 colorpair
65 89 0.0 1 colorpair
66 88 0.0 0.2 colorpair
67 87 0.16 1 colorpair
68 86 0.0 1 colorpair
69 85 0.0 1 colorpair
70 84 0.0 1 colorpair
71 83 0.0 1 colorpair
72 82 0.16 1 colorpair
73 81 0.0 1 colorpair
74 80 0.16 1 colorpair
95 105 0.0 1 colorpair
96 104 0.0 1 colorpair
97 103 0.0 0.2 colorpair
98 102 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
151 cmark
13 148 2 gmark
146 cmark
17 143 2 gmark
18 142 1 gmark
142 cmark
141 cmark
20 140 2 gmark
21 cmark
37 127 2 gmark
39 cmark
126 cmark
41 cmark
124 cmark
44 cmark
121 cmark
47 118 2 gmark
117 cmark
49 cmark
115 cmark
52 64 2 gmark
64 cmark
66 88 2 gmark
67 cmark
72 cmark
82 cmark
74 cmark
80 cmark
97 103 2 gmark

% End Annotations
showpage
end
%%EOF
