%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 17:37:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_______________________________________________________________________________________________________________________________________________________________________________________AUGACCCUCGUAGAUAUAGGCGU__UCUU_____AUCAUCAAGCUCAUCGCAGCAGCGCUGCAACC__AUUA\
GAAGCC_GAUUGGGAACUCGCUG_____________________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50204468 92.22840118]
[62.51147079 91.68529510]
[47.53318787 90.87085724]
[32.57210541 89.78534698]
[17.63312721 88.42913055]
[2.72115684 86.80265045]
[-12.15892029 84.90644073]
[-27.00222588 82.74111176]
[-41.80389023 80.30738831]
[-56.55906677 77.60606384]
[-71.26290894 74.63801575]
[-85.91060638 71.40422821]
[-100.49734497 67.90575409]
[-115.01834869 64.14375305]
[-129.46885681 60.11943817]
[-143.84413147 55.83414459]
[-158.13946533 51.28926849]
[-172.35015869 46.48630524]
[-186.47157288 41.42683029]
[-200.49905396 36.11249924]
[-214.42800903 30.54505348]
[-228.25387573 24.72632217]
[-241.97212219 18.65821075]
[-255.57826233 12.34270859]
[-269.06781006 5.78188658]
[-282.43634033 -1.02210367]
[-295.67950439 -8.06703186]
[-308.79293823 -15.35058784]
[-321.77233887 -22.87038422]
[-334.61346436 -30.62395477]
[-347.31210327 -38.60876083]
[-359.86407471 -46.82217789]
[-372.26528931 -55.26151657]
[-384.51165771 -63.92401123]
[-396.59918213 -72.80682373]
[-408.52386475 -81.90703583]
[-420.28186035 -91.22166443]
[-431.86923218 -100.74766541]
[-443.28225708 -110.48190308]
[-454.51715088 -120.42118835]
[-465.57025146 -130.56227112]
[-476.43789673 -140.90180969]
[-487.11657715 -151.43643188]
[-497.60275269 -162.16268921]
[-507.89300537 -173.07704163]
[-517.98394775 -184.17591858]
[-527.87231445 -195.45568848]
[-537.55474854 -206.91264343]
[-547.02819824 -218.54304504]
[-556.28955078 -230.34306335]
[-565.33569336 -242.30882263]
[-574.16369629 -254.43643188]
[-582.77062988 -266.72189331]
[-591.15374756 -279.16116333]
[-599.31030273 -291.75018311]
[-607.23754883 -304.48483276]
[-614.93292236 -317.36090088]
[-622.39385986 -330.37423706]
[-629.61798096 -343.52047729]
[-636.60290527 -356.79541016]
[-643.34631348 -370.19461060]
[-649.84600830 -383.71371460]
[-656.09985352 -397.34829712]
[-662.10583496 -411.09387207]
[-667.86193848 -424.94595337]
[-673.36627197 -438.89996338]
[-678.61700439 -452.95135498]
[-683.61254883 -467.09552002]
[-688.35113525 -481.32778931]
[-692.83123779 -495.64355469]
[-697.05145264 -510.03808594]
[-701.01031494 -524.50665283]
[-704.70654297 -539.04455566]
[-708.13891602 -553.64697266]
[-711.30639648 -568.30914307]
[-714.20788574 -583.02630615]
[-716.84234619 -597.79351807]
[-719.20904541 -612.60607910]
[-721.30718994 -627.45904541]
[-723.13604736 -642.34753418]
[-724.69500732 -657.26672363]
[-725.98358154 -672.21166992]
[-727.00134277 -687.17749023]
[-727.74798584 -702.15930176]
[-728.22320557 -717.15222168]
[-728.42694092 -732.15124512]
[-728.35900879 -747.15148926]
[-728.01953125 -762.14807129]
[-727.40856934 -777.13604736]
[-726.52636719 -792.11047363]
[-725.37310791 -807.06646729]
[-723.94927979 -821.99914551]
[-722.25531006 -836.90362549]
[-720.29174805 -851.77496338]
[-718.05926514 -866.60833740]
[-715.55859375 -881.39880371]
[-712.79046631 -896.14160156]
[-709.75592041 -910.83184814]
[-706.45581055 -925.46478271]
[-702.89135742 -940.03552246]
[-699.06365967 -954.53936768]
[-694.97399902 -968.97149658]
[-690.62365723 -983.32720947]
[-686.01409912 -997.60180664]
[-681.14685059 -1011.79064941]
[-676.02349854 -1025.88903809]
[-670.64575195 -1039.89233398]
[-665.01531982 -1053.79589844]
[-659.13403320 -1067.59533691]
[-653.00390625 -1081.28588867]
[-646.62683105 -1094.86328125]
[-640.00500488 -1108.32299805]
[-633.14062500 -1121.66064453]
[-626.03576660 -1134.87182617]
[-618.69293213 -1147.95214844]
[-611.11444092 -1160.89733887]
[-603.30285645 -1173.70324707]
[-595.26062012 -1186.36560059]
[-586.99047852 -1198.88024902]
[-578.49511719 -1211.24316406]
[-569.77722168 -1223.45019531]
[-560.83978271 -1235.49731445]
[-551.68572998 -1247.38073730]
[-542.31793213 -1259.09643555]
[-532.73956299 -1270.64050293]
[-522.95379639 -1282.00939941]
[-512.96374512 -1293.19921875]
[-502.77273560 -1304.20617676]
[-492.38409424 -1315.02697754]
[-481.80123901 -1325.65783691]
[-471.02761841 -1336.09533691]
[-460.06680298 -1346.33605957]
[-448.92236328 -1356.37670898]
[-437.59793091 -1366.21386719]
[-426.09725952 -1375.84436035]
[-414.42410278 -1385.26513672]
[-402.58227539 -1394.47290039]
[-390.57568359 -1403.46472168]
[-378.40823364 -1412.23779297]
[-366.08395386 -1420.78906250]
[-353.60687256 -1429.11584473]
[-340.98104858 -1437.21520996]
[-328.21063232 -1445.08471680]
[-315.29983521 -1452.72180176]
[-302.25289917 -1460.12377930]
[-289.07406616 -1467.28820801]
[-275.76766968 -1474.21301270]
[-262.33807373 -1480.89575195]
[-248.78967285 -1487.33410645]
[-235.12692261 -1493.52624512]
[-221.35430908 -1499.46984863]
[-207.47631836 -1505.16320801]
[-193.49752808 -1510.60424805]
[-179.42251587 -1515.79138184]
[-165.25588989 -1520.72290039]
[-151.00228882 -1525.39697266]
[-136.66639709 -1529.81225586]
[-122.25291443 -1533.96716309]
[-107.76656342 -1537.86047363]
[-93.21208954 -1541.49096680]
[-78.59427643 -1544.85717773]
[-63.91790771 -1547.95825195]
[-49.18779373 -1550.79309082]
[-34.40877151 -1553.36071777]
[-19.58567810 -1555.66027832]
[-4.72337770 -1557.69116211]
[10.17325687 -1559.45263672]
[25.09934235 -1560.94396973]
[40.04998398 -1562.16491699]
[55.02028275 -1563.11486816]
[70.00532532 -1563.79370117]
[85.00020599 -1564.20104980]
[100.00000000 -1564.33691406]
[114.99979401 -1564.20104980]
[129.99467468 -1563.79370117]
[144.97972107 -1563.11486816]
[159.95001221 -1562.16491699]
[174.90066528 -1560.94396973]
[189.82673645 -1559.45263672]
[204.72337341 -1557.69116211]
[219.58567810 -1555.66027832]
[234.40876770 -1553.36071777]
[249.18778992 -1550.79309082]
[263.91790771 -1547.95825195]
[278.59426880 -1544.85717773]
[293.21209717 -1541.49096680]
[307.76657104 -1537.86047363]
[322.25289917 -1533.96716309]
[336.66638184 -1529.81225586]
[351.00228882 -1525.39697266]
[365.25588989 -1520.72290039]
[379.42251587 -1515.79138184]
[393.49752808 -1510.60424805]
[407.47631836 -1505.16320801]
[421.35430908 -1499.46984863]
[435.12692261 -1493.52624512]
[448.78967285 -1487.33410645]
[462.33807373 -1480.89575195]
[475.76766968 -1474.21301270]
[489.07406616 -1467.28820801]
[502.25289917 -1460.12377930]
[515.29986572 -1452.72180176]
[528.21063232 -1445.08471680]
[540.98101807 -1437.21520996]
[553.60687256 -1429.11584473]
[566.08398438 -1420.78906250]
[578.40826416 -1412.23779297]
[590.57568359 -1403.46472168]
[602.58227539 -1394.47290039]
[614.42407227 -1385.26513672]
[626.09729004 -1375.84436035]
[637.59796143 -1366.21386719]
[648.92236328 -1356.37670898]
[660.06683350 -1346.33605957]
[671.02764893 -1336.09533691]
[681.80120850 -1325.65783691]
[692.38409424 -1315.02697754]
[702.77270508 -1304.20617676]
[712.96374512 -1293.19921875]
[722.95379639 -1282.00939941]
[732.73956299 -1270.64050293]
[742.31793213 -1259.09643555]
[751.68572998 -1247.38073730]
[760.83978271 -1235.49731445]
[769.77722168 -1223.45019531]
[778.49511719 -1211.24316406]
[786.99047852 -1198.88024902]
[795.26062012 -1186.36560059]
[803.30285645 -1173.70324707]
[811.11444092 -1160.89733887]
[818.69293213 -1147.95214844]
[826.03576660 -1134.87182617]
[833.14062500 -1121.66064453]
[840.00500488 -1108.32299805]
[846.62683105 -1094.86328125]
[853.00390625 -1081.28588867]
[859.13403320 -1067.59533691]
[865.01531982 -1053.79589844]
[870.64575195 -1039.89233398]
[876.02349854 -1025.88903809]
[881.14685059 -1011.79064941]
[886.01409912 -997.60180664]
[890.62365723 -983.32720947]
[894.97399902 -968.97149658]
[899.06365967 -954.53936768]
[902.89135742 -940.03552246]
[906.45581055 -925.46478271]
[909.75592041 -910.83184814]
[912.79046631 -896.14160156]
[915.55859375 -881.39880371]
[918.05926514 -866.60833740]
[920.29174805 -851.77496338]
[922.25531006 -836.90362549]
[923.94927979 -821.99914551]
[925.37310791 -807.06646729]
[926.52636719 -792.11047363]
[927.40856934 -777.13604736]
[928.01953125 -762.14807129]
[928.35900879 -747.15148926]
[928.42694092 -732.15124512]
[928.22320557 -717.15222168]
[927.74798584 -702.15930176]
[927.00134277 -687.17749023]
[925.98358154 -672.21166992]
[924.69500732 -657.26672363]
[923.13604736 -642.34753418]
[921.30718994 -627.45904541]
[919.20904541 -612.60607910]
[916.84234619 -597.79351807]
[914.20788574 -583.02630615]
[911.30639648 -568.30914307]
[908.13891602 -553.64697266]
[904.70654297 -539.04455566]
[901.01031494 -524.50665283]
[897.05145264 -510.03808594]
[892.83123779 -495.64355469]
[888.35113525 -481.32778931]
[883.61254883 -467.09552002]
[878.61700439 -452.95135498]
[873.36627197 -438.89996338]
[867.86193848 -424.94595337]
[862.10583496 -411.09387207]
[856.09985352 -397.34829712]
[849.84600830 -383.71371460]
[843.34631348 -370.19461060]
[836.60290527 -356.79541016]
[829.61798096 -343.52047729]
[822.39385986 -330.37423706]
[814.93292236 -317.36090088]
[807.23754883 -304.48483276]
[799.31030273 -291.75018311]
[791.15374756 -279.16116333]
[782.77062988 -266.72189331]
[774.16369629 -254.43643188]
[765.33569336 -242.30882263]
[756.28955078 -230.34306335]
[747.02819824 -218.54304504]
[737.55474854 -206.91264343]
[727.87231445 -195.45568848]
[717.98394775 -184.17591858]
[707.89300537 -173.07704163]
[697.60278320 -162.16268921]
[687.11657715 -151.43643188]
[676.43792725 -140.90180969]
[665.57025146 -130.56227112]
[654.51715088 -120.42118835]
[643.28222656 -110.48190308]
[631.86926270 -100.74766541]
[620.28186035 -91.22166443]
[608.52386475 -81.90703583]
[596.59918213 -72.80682373]
[584.51165771 -63.92401123]
[572.26525879 -55.26151657]
[559.86407471 -46.82217789]
[547.31213379 -38.60876083]
[534.61346436 -30.62395477]
[521.77233887 -22.87038422]
[508.79293823 -15.35058784]
[495.67950439 -8.06703186]
[482.43634033 -1.02210367]
[469.06781006 5.78188658]
[455.57824707 12.34270859]
[441.97213745 18.65821075]
[428.25387573 24.72632217]
[414.42800903 30.54505348]
[400.49905396 36.11249924]
[386.47155762 41.42683029]
[372.35015869 46.48630524]
[358.13946533 51.28926849]
[343.84414673 55.83414459]
[329.46887207 60.11943817]
[315.01834106 64.14375305]
[300.49734497 67.90575409]
[285.91061401 71.40422821]
[271.26290894 74.63801575]
[256.55905151 77.60606384]
[241.80389404 80.30738831]
[227.00222778 82.74111176]
[212.15892029 84.90644073]
[197.27883911 86.80265045]
[182.36686707 88.42913055]
[167.42790222 89.78534698]
[152.46681213 90.87085724]
[137.48852539 91.68529510]
[122.49795532 92.22840118]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
