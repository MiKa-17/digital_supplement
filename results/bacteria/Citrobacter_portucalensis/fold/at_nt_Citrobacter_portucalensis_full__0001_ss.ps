%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 17:37:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_____A_AGUUAGGGAGAGUUUCCCCUCCCCCUGGUGU_CUUAGUAAACCGCGAAGCCAAUGUCCGAGAGUAUCAC_CAGUAUGAU___C_GCU_C___A___C_C____CU_A______CC_C___C__G_G_GG___UUU\
) } def
/len { sequence length } bind def

/coor [
[2.82995391 387.19723511]
[-11.25411129 382.04043579]
[-25.06591988 376.19338989]
[-38.57167053 369.67047119]
[-51.73831558 362.48764038]
[-64.53363037 354.66244507]
[-76.92630768 346.21405029]
[-88.88600922 337.16314697]
[-100.38348389 327.53182983]
[-111.39058685 317.34371948]
[-121.88037872 306.62374878]
[-131.82719421 295.39813232]
[-141.20669556 283.69433594]
[-153.36128235 292.48443604]
[-165.51588440 301.27453613]
[-177.67047119 310.06463623]
[-189.82507324 318.85473633]
[-201.97967529 327.64483643]
[-214.13426208 336.43490601]
[-220.33982849 351.61462402]
[-236.62295532 353.56188965]
[-246.23295593 340.27355957]
[-239.28388977 325.41949463]
[-222.92436218 324.28033447]
[-210.76976013 315.49023438]
[-198.61517334 306.70013428]
[-186.46057129 297.91003418]
[-174.30598450 289.11993408]
[-162.15138245 280.32983398]
[-149.99679565 271.53973389]
[-158.17416382 258.96658325]
[-165.71975708 246.00440979]
[-172.61508179 232.68495178]
[-178.84327698 219.04077148]
[-184.38908386 205.10530090]
[-189.23895264 190.91259766]
[-193.38101196 176.49743652]
[-196.80511475 161.89506531]
[-199.50289917 147.14122009]
[-201.46772766 132.27201843]
[-202.69483948 117.32384491]
[-203.18118286 102.33327484]
[-202.92561340 87.33699036]
[-201.92872620 72.37170410]
[-200.19296265 57.47402191]
[-197.72259521 42.68040848]
[-194.52363586 28.02706528]
[-190.60394287 13.54985237]
[-185.97308350 -0.71580344]
[-180.64241028 -14.73499107]
[-174.62495422 -28.47340202]
[-167.93544006 -41.89741898]
[-160.59025574 -54.97418976]
[-152.60734558 -67.67171478]
[-144.00628662 -79.95891571]
[-134.80809021 -91.80573273]
[-125.03528595 -103.18316650]
[-114.71177673 -114.06337738]
[-103.86283875 -124.41973877]
[-92.51501465 -134.22691345]
[-80.69607544 -143.46089172]
[-68.43494415 -152.09907532]
[-55.76161957 -160.12034607]
[-42.70712662 -167.50505066]
[-29.30340195 -174.23513794]
[-15.58325195 -180.29411316]
[-1.58025134 -185.66716003]
[12.67133331 -190.34114075]
[27.13662529 -194.30461121]
[41.78022385 -197.54786682]
[56.56629944 -200.06297302]
[71.45866394 -201.84378052]
[86.42086792 -202.88592529]
[101.41631317 -203.18685913]
[116.40827942 -202.74584961]
[131.36010742 -201.56396484]
[146.23518372 -199.64410400]
[160.99710083 -196.99096680]
[175.60977173 -193.61103821]
[190.03739929 -189.51260376]
[204.24468994 -184.70567322]
[218.19688416 -179.20202637]
[231.85983276 -173.01513672]
[245.20008850 -166.16012573]
[258.18502808 -158.65377808]
[270.78286743 -150.51446533]
[282.96273804 -141.76208496]
[294.69491577 -132.41809082]
[305.95062256 -122.50533295]
[316.70233154 -112.04806519]
[326.92373657 -101.07187653]
[336.58981323 -89.60363770]
[345.67691040 -77.67140198]
[354.16281128 -65.30438232]
[362.02673340 -52.53283310]
[369.24945068 -39.38800812]
[375.81323242 -25.90208054]
[381.70208740 -12.10805035]
[386.90155029 1.96032774]
[391.39892578 16.26862526]
[395.18319702 30.78182602]
[398.24511719 45.46441650]
[400.57717896 60.28046417]
[402.17367554 75.19371033]
[403.03070068 90.16766357]
[403.14614868 105.16567230]
[402.51977539 120.15104675]
[401.15307617 135.08711243]
[399.04940796 149.93730164]
[396.21389771 164.66529846]
[392.65353394 179.23504639]
[388.37698364 193.61088562]
[383.39471436 207.75764465]
[377.71896362 221.64070129]
[371.36355591 235.22608948]
[364.34408569 248.48056030]
[356.67773438 261.37167358]
[348.38323975 273.86788940]
[339.48092651 285.93859863]
[329.99255371 297.55429077]
[319.94134521 308.68655396]
[309.35192871 319.30813599]
[298.25015259 329.39300537]
[286.66326904 338.91653442]
[274.61956787 347.85537720]
[262.14852905 356.18768311]
[249.28071594 363.89306641]
[236.04757690 370.95263672]
[222.48150635 377.34915161]
[208.61570740 383.06695557]
[194.48410034 388.09204102]
[180.12127686 392.41213989]
[165.56239319 396.01663208]
[150.84304810 398.89672852]
[135.99929810 401.04537964]
[121.06745148 402.45733643]
[106.08404541 403.12911987]
[91.08574677 403.05908203]
[76.10926819 402.24743652]
[61.19125366 400.69613647]
[46.36820602 398.40896606]
[31.67640877 395.39154053]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 30]
[14 29]
[15 28]
[16 27]
[17 26]
[18 25]
[19 24]
] def

init

% Start Annotations
13 30 0.16 0.2 colorpair
14 29 0.16 0.2 colorpair
15 28 0.0 0.6 colorpair
16 27 0.16 0.2 colorpair
17 26 0.0 0.2 colorpair
18 25 0.16 0.2 colorpair
19 24 0.16 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
13 30 2 gmark
13 cmark
30 cmark
14 29 2 gmark
29 cmark
15 28 1 gmark
16 27 2 gmark
16 cmark
27 cmark
17 26 2 gmark
18 25 2 gmark
18 cmark
25 cmark
19 24 2 gmark
19 cmark
24 cmark

% End Annotations
showpage
end
%%EOF
