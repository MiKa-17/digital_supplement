%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 17:37:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_______________________________________________________________________________________________________________________________________________________________________________________AUGACCCUCGU_GAU_U_GGCGU__UCUU_____AUCAUCAAGCUCAUCGCCACAACGCUGCAACCAUUAGA\
AGCC__GCUUAGGAACUCGCUAAGUAA_______________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[138.04872131 886.89764404]
[123.06024170 887.47937012]
[108.06339264 887.77569580]
[93.06362152 887.78643799]
[78.06636810 887.51159668]
[63.07706451 886.95123291]
[48.10114670 886.10565186]
[33.14404297 884.97509766]
[18.21117401 883.55993652]
[3.30795479 881.86071777]
[-11.56021309 879.87811279]
[-26.38793945 877.61279297]
[-41.16984940 875.06555176]
[-55.90058136 872.23736572]
[-70.57479858 869.12927246]
[-85.18718719 865.74230957]
[-99.73243713 862.07775879]
[-114.20528412 858.13696289]
[-128.60047913 853.92132568]
[-142.91281128 849.43243408]
[-157.13706970 844.67181396]
[-171.26812744 839.64123535]
[-185.30084229 834.34259033]
[-199.23013306 828.77764893]
[-213.05094910 822.94860840]
[-226.75828552 816.85742188]
[-240.34716797 810.50640869]
[-253.81268311 803.89782715]
[-267.14993286 797.03405762]
[-280.35406494 789.91766357]
[-293.42031860 782.55108643]
[-306.34399414 774.93713379]
[-319.12033081 767.07849121]
[-331.74472046 758.97802734]
[-344.21264648 750.63867188]
[-356.51950073 742.06347656]
[-368.66088867 733.25555420]
[-380.63235474 724.21801758]
[-392.42959595 714.95422363]
[-404.04833984 705.46746826]
[-415.48434448 695.76123047]
[-426.73348999 685.83905029]
[-437.79171753 675.70446777]
[-448.65496826 665.36120605]
[-459.31930542 654.81298828]
[-469.78091431 644.06365967]
[-480.03594971 633.11712646]
[-490.08071899 621.97729492]
[-499.91159058 610.64825439]
[-509.52499390 599.13409424]
[-518.91741943 587.43902588]
[-528.08551025 575.56719971]
[-537.02587891 563.52301025]
[-545.73535156 551.31079102]
[-554.21075439 538.93493652]
[-562.44897461 526.40002441]
[-570.44702148 513.71051025]
[-578.20202637 500.87097168]
[-585.71124268 487.88616943]
[-592.97186279 474.76074219]
[-599.98120117 461.49945068]
[-606.73687744 448.10711670]
[-613.23632812 434.58862305]
[-619.47717285 420.94879150]
[-625.45727539 407.19262695]
[-631.17437744 393.32513428]
[-636.62640381 379.35125732]
[-641.81140137 365.27615356]
[-646.72747803 351.10485840]
[-651.37286377 336.84255981]
[-655.74584961 322.49438477]
[-659.84490967 308.06555176]
[-663.66851807 293.56130981]
[-667.21527100 278.98687744]
[-670.48388672 264.34759521]
[-673.47320557 249.64869690]
[-676.18218994 234.89556885]
[-678.60974121 220.09353638]
[-680.75506592 205.24797058]
[-682.61730957 190.36425781]
[-684.19592285 175.44778442]
[-685.49017334 160.50395203]
[-686.49975586 145.53819275]
[-687.22418213 130.55592346]
[-687.66326904 115.56257629]
[-687.81677246 100.56359100]
[-687.68469238 85.56439972]
[-687.26708984 70.57044220]
[-686.56408691 55.58715057]
[-685.57598877 40.61996078]
[-684.30303955 25.67429733]
[-682.74578857 10.75557709]
[-680.90484619 -4.13079166]
[-678.78076172 -18.97941208]
[-676.37438965 -33.78490067]
[-673.68652344 -48.54189301]
[-670.71826172 -63.24503326]
[-667.47058105 -77.88899994]
[-663.94464111 -92.46847534]
[-660.14184570 -106.97818756]
[-656.06341553 -121.41286469]
[-651.71093750 -135.76727295]
[-647.08599854 -150.03622437]
[-642.19018555 -164.21452332]
[-637.02532959 -178.29704285]
[-631.59332275 -192.27868652]
[-625.89605713 -206.15437317]
[-619.93566895 -219.91906738]
[-613.71429443 -233.56779480]
[-607.23419189 -247.09559631]
[-600.49774170 -260.49758911]
[-593.50732422 -273.76889038]
[-586.26550293 -286.90469360]
[-578.77490234 -299.90023804]
[-571.03826904 -312.75079346]
[-563.05834961 -325.45175171]
[-554.83807373 -337.99847412]
[-546.38043213 -350.38641357]
[-537.68841553 -362.61111450]
[-528.76531982 -374.66809082]
[-519.61419678 -386.55297852]
[-510.23852539 -398.26150513]
[-500.64160156 -409.78939819]
[-490.82696533 -421.13250732]
[-480.79812622 -432.28668213]
[-470.55874634 -443.24789429]
[-460.11254883 -454.01220703]
[-449.46328735 -464.57565308]
[-438.61486816 -474.93444824]
[-427.57116699 -485.08480835]
[-416.33621216 -495.02310181]
[-404.91409302 -504.74566650]
[-393.30895996 -514.24902344]
[-381.52496338 -523.52966309]
[-369.56643677 -532.58435059]
[-357.43768311 -541.40966797]
[-345.14309692 -550.00244141]
[-332.68713379 -558.35961914]
[-320.07434082 -566.47814941]
[-307.30923462 -574.35504150]
[-294.39651489 -581.98754883]
[-281.34078979 -589.37274170]
[-268.14682007 -596.50805664]
[-254.81942749 -603.39086914]
[-241.36338806 -610.01873779]
[-227.78361511 -616.38922119]
[-214.08500671 -622.49993896]
[-200.27253723 -628.34881592]
[-186.35122681 -633.93359375]
[-172.32609558 -639.25238037]
[-158.20225525 -644.30316162]
[-143.98481750 -649.08410645]
[-129.67892456 -653.59350586]
[-115.28977966 -657.82971191]
[-100.82258606 -661.79119873]
[-86.28259277 -665.47656250]
[-71.67507172 -668.88439941]
[-57.00531387 -672.01354980]
[-42.27864075 -674.86279297]
[-27.50039101 -677.43115234]
[-12.67592049 -679.71771240]
[2.18939519 -681.72161865]
[17.09016800 -683.44207764]
[32.02099609 -684.87860107]
[46.97646713 -686.03057861]
[61.95116043 -686.89764404]
[76.93965149 -687.47937012]
[91.93649292 -687.77569580]
[106.93626404 -687.78643799]
[121.93351746 -687.51159668]
[136.92282104 -686.95123291]
[151.89874268 -686.10565186]
[166.85585022 -684.97509766]
[181.78871155 -683.55993652]
[196.69192505 -681.86077881]
[211.56010437 -679.87817383]
[226.38783264 -677.61279297]
[241.16973877 -675.06561279]
[255.90046692 -672.23742676]
[270.57467651 -669.12927246]
[285.18707275 -665.74230957]
[299.73233032 -662.07781982]
[314.20516968 -658.13702393]
[328.60037231 -653.92138672]
[342.91268921 -649.43243408]
[357.13696289 -644.67181396]
[371.26803589 -639.64129639]
[385.30075073 -634.34259033]
[399.23004150 -628.77770996]
[413.05084229 -622.94866943]
[426.75817871 -616.85748291]
[440.34707642 -610.50646973]
[453.81256104 -603.89788818]
[467.14981079 -597.03411865]
[480.35397339 -589.91772461]
[493.42022705 -582.55114746]
[506.34387207 -574.93719482]
[519.12023926 -567.07855225]
[531.74462891 -558.97808838]
[544.21252441 -550.63873291]
[556.51940918 -542.06353760]
[568.66076660 -533.25561523]
[580.63226318 -524.21807861]
[592.42950439 -514.95428467]
[604.04827881 -505.46752930]
[615.48425293 -495.76132202]
[626.73339844 -485.83911133]
[637.79162598 -475.70455933]
[648.65484619 -465.36129761]
[659.31921387 -454.81311035]
[669.78082275 -444.06378174]
[680.03588867 -433.11721802]
[690.08062744 -421.97738647]
[699.91149902 -410.64834595]
[709.52490234 -399.13418579]
[718.91735840 -387.43908691]
[728.08544922 -375.56729126]
[737.02581787 -363.52310181]
[745.73529053 -351.31088257]
[754.21069336 -338.93505859]
[762.44891357 -326.40011597]
[770.44696045 -313.71057129]
[778.20202637 -300.87109375]
[785.71118164 -287.88626099]
[792.97180176 -274.76083374]
[799.98120117 -261.49957275]
[806.73681641 -248.10723877]
[813.23626709 -234.58871460]
[819.47717285 -220.94889832]
[825.45721436 -207.19274902]
[831.17431641 -193.32522583]
[836.62634277 -179.35137939]
[841.81134033 -165.27626038]
[846.72741699 -151.10496521]
[851.37280273 -136.84266663]
[855.74584961 -122.49449158]
[859.84490967 -108.06566620]
[863.66845703 -93.56141663]
[867.21527100 -78.98699951]
[870.48388672 -64.34769440]
[873.47320557 -49.64881516]
[888.22656250 -52.35779190]
[902.97991943 -55.06676865]
[917.73327637 -57.77574921]
[932.48663330 -60.48472595]
[947.23999023 -63.19370270]
[956.00585938 -76.34417725]
[971.51922607 -79.36259460]
[984.57629395 -70.45818329]
[987.43054199 -54.91376495]
[978.38854980 -41.95157242]
[962.81481934 -39.26184464]
[949.94897461 -48.44034958]
[935.19561768 -45.73137283]
[920.44226074 -43.02239227]
[905.68890381 -40.31341553]
[890.93554688 -37.60443878]
[876.18218994 -34.89546204]
[878.60974121 -20.09342957]
[880.75506592 -5.24786282]
[882.61730957 9.63585663]
[884.19592285 24.55233383]
[885.49023438 39.49616241]
[886.49975586 54.46192169]
[887.22418213 69.44419098]
[887.66326904 84.43753815]
[887.81677246 99.43652344]
[887.68469238 114.43571472]
[887.26708984 129.42967224]
[886.56408691 144.41296387]
[885.57592773 159.38015747]
[884.30303955 174.32582092]
[882.74578857 189.24453735]
[880.90478516 204.13090515]
[878.78076172 218.97952271]
[876.37438965 233.78501892]
[873.68652344 248.54200745]
[870.71826172 263.24514771]
[867.47052002 277.88909912]
[863.94464111 292.46859741]
[860.14178467 306.97830200]
[856.06341553 321.41296387]
[851.71093750 335.76739502]
[847.08593750 350.03631592]
[842.19012451 364.21463013]
[837.02526855 378.29714966]
[831.59326172 392.27877808]
[825.89599609 406.15447998]
[819.93560791 419.91915894]
[813.71423340 433.56790161]
[807.23413086 447.09570312]
[800.49768066 460.49768066]
[793.50726318 473.76898193]
[786.26544189 486.90478516]
[778.77484131 499.90032959]
[771.03820801 512.75091553]
[763.05828857 525.45184326]
[754.83801270 537.99859619]
[746.38037109 550.38653564]
[737.68835449 562.61120605]
[728.76519775 574.66815186]
[719.61413574 586.55310059]
[710.23846436 598.26159668]
[700.64154053 609.78948975]
[690.82690430 621.13256836]
[680.79803467 632.28674316]
[670.55865479 643.24798584]
[660.11248779 654.01226807]
[649.46319580 664.57574463]
[638.61474609 674.93450928]
[627.57110596 685.08489990]
[616.33612061 695.02319336]
[604.91400146 704.74572754]
[593.30883789 714.24908447]
[581.52490234 723.52978516]
[569.56634521 732.58441162]
[557.43756104 741.40972900]
[545.14300537 750.00250244]
[532.68701172 758.35968018]
[520.07421875 766.47821045]
[507.30914307 774.35510254]
[494.39639282 781.98754883]
[481.34069824 789.37280273]
[468.14672852 796.50811768]
[454.81933594 803.39093018]
[441.36328125 810.01879883]
[427.78350830 816.38922119]
[414.08489990 822.50000000]
[400.27243042 828.34881592]
[386.35110474 833.93365479]
[372.32598877 839.25244141]
[358.20214844 844.30316162]
[343.98471069 849.08410645]
[329.67883301 853.59350586]
[315.28967285 857.82977295]
[300.82247925 861.79125977]
[286.28247070 865.47656250]
[271.67495728 868.88446045]
[257.00518799 872.01354980]
[242.27853394 874.86285400]
[227.50027466 877.43121338]
[212.67581177 879.71771240]
[197.81048584 881.72161865]
[182.90971375 883.44213867]
[167.97889709 884.87860107]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[241 258]
[242 257]
[243 256]
[244 255]
[245 254]
[246 253]
] def

init

% Start Annotations
241 258 0.16 0.6 colorpair
242 257 0.0 0.2 colorpair
243 256 0.16 0.2 colorpair
244 255 0.16 0.2 colorpair
245 254 0.16 0.6 colorpair
246 253 0.32 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
241 258 1 gmark
258 cmark
242 257 2 gmark
243 256 2 gmark
243 cmark
256 cmark
244 255 2 gmark
255 cmark
245 254 1 gmark
245 cmark
254 cmark
246 253 1 gmark
246 cmark
253 cmark

% End Annotations
showpage
end
%%EOF
