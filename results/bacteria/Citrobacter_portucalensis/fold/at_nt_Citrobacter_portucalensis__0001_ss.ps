%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 17:37:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_______AGCCAGGGAGAAUUUUCCCACCAUCUAGUGU_CUUAGUAUAACGCGAAGCCAAUGUUCGAGGACAUUAC_CAGUGUG_U________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[-12.72815037 371.14077759]
[-26.42570114 365.03112793]
[-39.79342270 358.23004150]
[-52.79643631 350.75527954]
[-65.40082550 342.62631226]
[-77.57369995 333.86434937]
[-89.28330994 324.49227905]
[-100.49909973 314.53454590]
[-111.19181061 304.01708984]
[-121.33354950 292.96740723]
[-130.89785767 281.41427612]
[-139.85977173 269.38784790]
[-148.19593811 256.91952515]
[-161.07507324 264.60897827]
[-173.95422363 272.29843140]
[-186.83337402 279.98788452]
[-199.71250916 287.67733765]
[-212.59165955 295.36676025]
[-225.47080994 303.05621338]
[-238.34994507 310.74566650]
[-241.97288513 326.12908936]
[-255.45619202 334.37387085]
[-270.80044556 330.58850098]
[-278.90219116 317.01876831]
[-274.95480347 301.71539307]
[-261.30020142 293.75756836]
[-246.03939819 297.86651611]
[-233.16024780 290.17706299]
[-220.28111267 282.48764038]
[-207.40196228 274.79818726]
[-194.52281189 267.10873413]
[-181.64367676 259.41928101]
[-168.76452637 251.72984314]
[-155.88537598 244.04039001]
[-162.90637207 230.78684998]
[-169.24147034 217.19210815]
[-174.87416077 203.29161072]
[-179.78973389 189.12165833]
[-183.97535706 174.71917725]
[-187.42013550 160.12178040]
[-190.11506653 145.36752319]
[-192.05311584 130.49490356]
[-193.22923279 115.54273987]
[-193.64035034 100.55001831]
[-193.28540039 85.55586243]
[-192.16529846 70.59938812]
[-190.28297424 55.71961975]
[-187.64334106 40.95537186]
[-184.25328064 26.34516716]
[-180.12162781 11.92711735]
[-175.25918579 -2.26116109]
[-169.67860413 -16.18265152]
[-163.39448547 -29.80103683]
[-156.42318726 -43.08078384]
[-148.78291321 -55.98725510]
[-140.49359131 -68.48677063]
[-131.57685852 -80.54672241]
[-122.05596924 -92.13565063]
[-111.95575714 -103.22332001]
[-101.30257416 -113.78080750]
[-90.12422180 -123.78056335]
[-78.44985962 -133.19650269]
[-66.30994415 -142.00405884]
[-53.73614120 -150.18025208]
[-40.76126099 -157.70376587]
[-27.41914940 -164.55494690]
[-13.74461842 -170.71594238]
[0.22665900 -176.17066956]
[14.45823383 -180.90490723]
[28.91297531 -184.90629578]
[43.55317688 -188.16439819]
[58.34064102 -190.67070007]
[73.23678589 -192.41868591]
[88.20275879 -193.40379333]
[103.19950104 -193.62344360]
[118.18790436 -193.07705688]
[133.12886047 -191.76606750]
[147.98338318 -189.69389343]
[162.71270752 -186.86595154]
[177.27844238 -183.28961182]
[191.64256287 -178.97419739]
[205.76759338 -173.93096924]
[219.61668396 -168.17309570]
[233.15371704 -161.71557617]
[246.34336853 -154.57528687]
[259.15124512 -146.77084351]
[271.54388428 -138.32258606]
[283.48898315 -129.25259399]
[294.95541382 -119.58449554]
[305.91320801 -109.34352875]
[316.33380127 -98.55641174]
[326.19000244 -87.25128174]
[335.45611572 -75.45764160]
[344.10794067 -63.20624924]
[352.12289429 -50.52906799]
[359.48013306 -37.45917892]
[366.16040039 -24.03067589]
[372.14627075 -10.27858925]
[377.42214966 3.76120067]
[381.97427368 18.05206680]
[385.79077148 32.55672455]
[388.86166382 47.23733139]
[391.17895508 62.05559540]
[392.73660278 76.97284698]
[393.53051758 91.95017242]
[393.55865479 106.94850159]
[392.82092285 121.92870331]
[391.31927490 136.85169983]
[389.05758667 151.67854309]
[386.04177856 166.37057495]
[382.27975464 180.88945007]
[377.78128052 195.19729614]
[372.55810547 209.25677490]
[366.62384033 223.03121948]
[359.99401855 236.48469543]
[352.68588257 249.58210754]
[344.71853638 262.28924561]
[336.11273193 274.57302856]
[326.89093018 286.40133667]
[317.07720947 297.74337769]
[306.69717407 308.56951904]
[295.77786255 318.85153198]
[284.34780884 328.56256104]
[272.43679810 337.67730713]
[260.07592773 346.17199707]
[247.29745483 354.02444458]
[234.13468933 361.21417236]
[220.62197876 367.72244263]
[206.79457092 373.53222656]
[192.68856812 378.62841797]
[178.34074402 382.99768066]
[163.78852844 386.62866211]
[149.06990051 389.51184082]
[134.22326660 391.63970947]
[119.28733826 393.00674438]
[104.30109406 393.60937500]
[89.30362701 393.44598389]
[74.33406830 392.51702881]
[59.43146515 390.82495117]
[44.63470459 388.37414551]
[29.98238373 385.17098999]
[15.51272964 381.22387695]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 34]
[14 33]
[15 32]
[16 31]
[17 30]
[18 29]
[19 28]
[20 27]
] def

init

% Start Annotations
13 34 0.16 0.2 colorpair
14 33 0.32 1 colorpair
15 32 0.16 0.6 colorpair
16 31 0.16 0.2 colorpair
17 30 0.32 0.6 colorpair
18 29 0.16 0.2 colorpair
19 28 0.16 0.2 colorpair
20 27 0.32 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
13 34 2 gmark
13 cmark
34 cmark
14 cmark
33 cmark
15 32 1 gmark
15 cmark
32 cmark
16 31 2 gmark
16 cmark
31 cmark
17 30 1 gmark
17 cmark
30 cmark
18 29 2 gmark
18 cmark
29 cmark
19 28 2 gmark
19 cmark
28 cmark
20 27 1 gmark
20 cmark
27 cmark

% End Annotations
showpage
end
%%EOF
