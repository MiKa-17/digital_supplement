%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 03:29:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___UGAUUUACUGUGUAUUGAUCGUCUGUCUAACGCUACUGGCGUUUAUCAGGAUCACACAUGGAUAUCUGUGUGAGAUACAAAUUAAAA__ACGGAAAUAAAGAAGUUGCCGCGGUUUUAGCCUACGCAUCUAAAC___AAG_UGACUUAACGGCGAGGUGU__________AC_CC_C_____________________________________________\
) } def
/len { sequence length } bind def

/coor [
[42.84355545 602.87493896]
[27.96680069 600.96038818]
[13.15331364 598.60577393]
[-1.58389258 595.81329346]
[-16.23187447 592.58526611]
[-30.77776909 588.92462158]
[-45.20879745 584.83447266]
[-59.51228333 580.31854248]
[-73.67566681 575.38073730]
[-87.68650055 570.02539062]
[-101.53249359 564.25720215]
[-115.20146942 558.08123779]
[-128.68142700 551.50292969]
[-141.96054077 544.52807617]
[-155.02711487 537.16271973]
[-167.86970520 529.41345215]
[-180.47700500 521.28698730]
[-192.83796692 512.79052734]
[-204.94172668 503.93145752]
[-216.77763367 494.71765137]
[-228.33531189 485.15713501]
[-239.60459900 475.25830078]
[-250.57560730 465.02990723]
[-261.23870850 454.48086548]
[-271.58450317 443.62048340]
[-281.60394287 432.45831299]
[-291.28817749 421.00411987]
[-300.62878418 409.26797485]
[-309.61746216 397.26019287]
[-318.24639893 384.99130249]
[-326.50793457 372.47210693]
[-334.39489746 359.71362305]
[-341.90029907 346.72698975]
[-349.01757812 333.52365112]
[-355.74047852 320.11523438]
[-362.06307983 306.51345825]
[-367.97982788 292.73028564]
[-373.48553467 278.77786255]
[-378.57537842 264.66839600]
[-383.24487305 250.41430664]
[-387.48992920 236.02809143]
[-391.30682373 221.52241516]
[-394.69216919 206.90998840]
[-397.64300537 192.20367432]
[-400.15676880 177.41635132]
[-402.23123169 162.56105042]
[-403.86456299 147.65080261]
[-405.05532837 132.69868469]
[-405.80249023 117.71786499]
[-406.10540771 102.72147369]
[-405.96377563 87.72269440]
[-405.37777710 72.73469543]
[-404.34786987 57.77064896]
[-402.87496948 42.84369278]
[-400.96038818 27.96693611]
[-398.60580444 13.15345001]
[-395.81329346 -1.58375740]
[-392.58529663 -16.23174095]
[-388.92462158 -30.77763557]
[-384.83453369 -45.20866394]
[-399.13854980 -49.72477341]
[-413.44256592 -54.24088669]
[-427.74658203 -58.75699615]
[-440.14309692 -49.42396927]
[-455.65847778 -49.19355392]
[-468.32669067 -58.15435791]
[-473.27658081 -72.86076355]
[-468.60476685 -87.65785980]
[-456.10772705 -96.85585785]
[-440.59075928 -96.91794586]
[-428.02050781 -87.82024384]
[-423.23046875 -73.06100464]
[-408.92645264 -68.54489899]
[-394.62243652 -64.02878571]
[-380.31842041 -59.51267624]
[-375.38058472 -73.67605591]
[-370.02523804 -87.68688965]
[-364.25701904 -101.53287506]
[-358.08105469 -115.20184326]
[-351.50274658 -128.68179321]
[-344.52786255 -141.96089172]
[-337.16253662 -155.02748108]
[-329.41323853 -167.87005615]
[-321.28677368 -180.47735596]
[-312.79028320 -192.83830261]
[-303.93121338 -204.94204712]
[-294.71737671 -216.77795410]
[-285.15686035 -228.33563232]
[-275.25802612 -239.60490417]
[-265.02960205 -250.57591248]
[-254.48057556 -261.23898315]
[-243.62019348 -271.58477783]
[-232.45799255 -281.60421753]
[-221.00378418 -291.28845215]
[-209.26763916 -300.62902832]
[-197.25984192 -309.61770630]
[-184.99096680 -318.24661255]
[-172.47177124 -326.50817871]
[-159.71325684 -334.39511108]
[-146.72663879 -341.90051270]
[-133.52330017 -349.01776123]
[-120.11485291 -355.74063110]
[-106.51307678 -362.06323242]
[-92.72991943 -367.97998047]
[-78.77747345 -373.48568726]
[-64.66800690 -378.57553101]
[-50.41390991 -383.24499512]
[-36.02769852 -387.49005127]
[-21.52201080 -391.30691528]
[-6.90958595 -394.69226074]
[7.79674006 -397.64309692]
[22.58405113 -400.15682983]
[37.43935776 -402.23126221]
[52.34961319 -403.86459351]
[67.30171967 -405.05535889]
[82.28254700 -405.80252075]
[97.27893829 -406.10540771]
[112.27771759 -405.96377563]
[127.26571655 -405.37774658]
[142.22976685 -404.34783936]
[157.15672302 -402.87493896]
[172.03347778 -400.96032715]
[186.84695435 -398.60574341]
[201.58416748 -395.81320190]
[216.23214722 -392.58520508]
[230.77803040 -388.92453003]
[245.20906067 -384.83441162]
[259.51254272 -380.31848145]
[273.67593384 -375.38064575]
[287.68676758 -370.02526855]
[301.53274536 -364.25708008]
[315.20172119 -358.08111572]
[328.68167114 -351.50280762]
[341.96078491 -344.52792358]
[355.02734375 -337.16259766]
[367.86993408 -329.41329956]
[380.47723389 -321.28683472]
[392.83819580 -312.79034424]
[404.94192505 -303.93130493]
[416.77786255 -294.71746826]
[428.33551025 -285.15695190]
[439.60479736 -275.25811768]
[450.57580566 -265.02969360]
[461.23889160 -254.48066711]
[471.58468628 -243.62028503]
[481.60412598 -232.45809937]
[491.28836060 -221.00389099]
[500.62893677 -209.26774597]
[509.61761475 -197.25996399]
[518.24652100 -184.99108887]
[526.50811768 -172.47189331]
[534.39501953 -159.71337891]
[541.90045166 -146.72674561]
[549.01770020 -133.52342224]
[555.74060059 -120.11498260]
[562.06317139 -106.51320648]
[567.97991943 -92.73004150]
[573.48565674 -78.77760315]
[578.57550049 -64.66813660]
[583.24499512 -50.41404343]
[587.48999023 -36.02783203]
[591.30688477 -21.52214432]
[594.69219971 -6.90972042]
[597.64306641 7.79660463]
[600.15679932 22.58391380]
[602.23126221 37.43922043]
[603.86456299 52.34947586]
[605.05535889 67.30158234]
[605.80249023 82.28240967]
[606.10540771 97.27880096]
[605.96380615 112.27758026]
[605.37774658 127.26557922]
[604.34783936 142.22962952]
[602.87493896 157.15658569]
[600.96038818 172.03334045]
[598.60577393 186.84681702]
[595.81323242 201.58403015]
[592.58520508 216.23200989]
[588.92456055 230.77790833]
[584.83447266 245.20892334]
[580.31854248 259.51242065]
[575.38067627 273.67578125]
[570.02532959 287.68664551]
[564.25714111 301.53262329]
[558.08117676 315.20159912]
[551.50286865 328.68154907]
[544.52795410 341.96066284]
[537.16265869 355.02722168]
[529.41339111 367.86981201]
[521.28692627 380.47711182]
[512.79040527 392.83807373]
[503.93139648 404.94183350]
[494.71755981 416.77774048]
[485.15704346 428.33541870]
[475.25820923 439.60470581]
[465.02978516 450.57571411]
[454.48077393 461.23880005]
[443.62039185 471.58459473]
[432.45819092 481.60403442]
[421.00399780 491.28826904]
[409.26785278 500.62884521]
[397.26007080 509.61755371]
[384.99118042 518.24645996]
[372.47201538 526.50799561]
[359.71350098 534.39495850]
[346.72686768 541.90039062]
[333.52352905 549.01763916]
[320.11511230 555.74053955]
[306.51333618 562.06311035]
[292.73016357 567.97985840]
[278.77774048 573.48559570]
[264.66827393 578.57543945]
[250.41416931 583.24493408]
[236.02796936 587.48999023]
[221.52227783 591.30682373]
[206.90985107 594.69219971]
[192.20353699 597.64306641]
[177.41622925 600.15679932]
[162.56091309 602.23126221]
[147.65066528 603.86456299]
[132.69854736 605.05535889]
[117.71772766 605.80249023]
[102.72133636 606.10540771]
[87.72255707 605.96380615]
[72.73455811 605.37774658]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[60 75]
[61 74]
[62 73]
[63 72]
] def

init

% Start Annotations
60 75 0.16 0.2 colorpair
61 74 0.16 1 colorpair
62 73 0.48 1 colorpair
63 72 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
60 75 2 gmark
60 cmark
75 cmark
61 cmark
62 cmark
73 cmark
72 cmark

% End Annotations
showpage
end
%%EOF
