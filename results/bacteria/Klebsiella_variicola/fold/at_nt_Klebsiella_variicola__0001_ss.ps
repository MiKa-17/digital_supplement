%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 06:42:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
____CUGUUCUGGUGCGUAUUAAUAGUGUGCUUCACACUGUUGAUAUUCACCUACCUGACCCGGAAAUCGCUAUGUGAAAUCCGGCUCAGGGACGGAAACAGGGAGGUGGCGGCAUUCUUGGCUUACGAAUC___CGAUAAGUAGC_AACCCCGGCGGGGGGCAACCCCCGCCAUUCAGGGGCUG_______UCU_GACAUGCCUGAAGCGCCUUUAUGAAG__________\
) } def
/len { sequence length } bind def

/coor [
[504.10018921 785.35900879]
[489.38204956 782.45874023]
[474.75872803 779.11309814]
[460.24368286 775.32519531]
[445.85028076 771.09851074]
[431.59179688 766.43701172]
[417.48132324 761.34484863]
[403.53192139 755.82684326]
[389.75637817 749.88800049]
[376.16744995 743.53387451]
[362.77758789 736.77020264]
[349.59921265 729.60333252]
[336.64437866 722.03979492]
[323.92504883 714.08654785]
[311.45297241 705.75097656]
[299.23959351 697.04077148]
[287.29620361 687.96386719]
[275.63378906 678.52868652]
[264.26309204 668.74389648]
[253.19459534 658.61853027]
[242.43849182 648.16192627]
[232.00468445 637.38366699]
[221.90278625 626.29376221]
[212.14212036 614.90234375]
[202.73165894 603.21997070]
[193.68008423 591.25738525]
[184.99572754 579.02557373]
[176.68658447 566.53588867]
[168.76033020 553.79974365]
[161.22424316 540.82891846]
[154.08528137 527.63537598]
[147.35002136 514.23120117]
[141.02467346 500.62884521]
[135.11503601 486.84075928]
[129.62658691 472.87966919]
[124.56436920 458.75848389]
[119.93304443 444.49014282]
[115.73688507 430.08779907]
[111.97975159 415.56475830]
[108.66510010 400.93438721]
[105.79599762 386.21017456]
[103.37508392 371.40563965]
[101.40457916 356.53445435]
[99.88630676 341.61035156]
[98.82167053 326.64700317]
[98.21163940 311.65826416]
[98.05678558 296.65789795]
[98.35724640 281.65975952]
[99.11274719 266.67764282]
[100.32258606 251.72534180]
[101.98565674 236.81666565]
[104.10042572 221.96531677]
[106.66493988 207.18498230]
[109.67684174 192.48930359]
[113.13334656 177.89179993]
[117.03128815 163.40591431]
[121.36705780 149.04499817]
[126.13666534 134.82228088]
[131.33572388 120.75087738]
[117.42965698 115.12761688]
[103.52358246 109.50434875]
[95.47758484 109.64334106]
[89.46875000 103.71038055]
[75.63975525 97.90013123]
[61.81076813 92.08988190]
[51.29499054 103.03442383]
[37.53404617 109.43761444]
[22.38899231 110.43348694]
[7.90807009 105.88735199]
[-3.95029306 96.41403961]
[-11.58235168 83.29473114]
[-13.95593166 68.30371857]
[-10.75002670 53.46840286]
[-2.39820910 40.79513931]
[9.97000694 31.99788666]
[24.68192101 28.26639748]
[39.74786758 30.10532761]
[53.13030243 37.26597595]
[63.01935959 48.77992249]
[68.07762909 63.09000397]
[67.62101746 78.26089478]
[81.45000458 84.07114410]
[95.27899933 89.88138580]
[109.14684296 95.59827423]
[123.05291748 101.22154236]
[136.95899963 106.84481049]
[143.00215149 93.11473083]
[149.45922852 79.57438660]
[156.32424927 66.23624420]
[163.59091187 53.11258698]
[171.25251770 40.21551514]
[179.30201721 27.55690384]
[187.73196411 15.14841652]
[196.53462219 3.00148463]
[205.70187378 -8.87270069]
[215.22526550 -20.46320152]
[225.09602356 -31.75933647]
[235.30506897 -42.75070190]
[245.84298706 -53.42717361]
[256.70007324 -63.77891159]
[267.86633301 -73.79637909]
[279.33145142 -83.47035217]
[291.08486938 -92.79190826]
[303.11578369 -101.75247192]
[315.41311646 -110.34378052]
[327.96551514 -118.55792999]
[340.76141357 -126.38733673]
[353.78903198 -133.82479858]
[367.03637695 -140.86344910]
[380.49121094 -147.49682617]
[394.14120483 -153.71881104]
[407.97369385 -159.52366638]
[421.97601318 -164.90603638]
[436.13522339 -169.86097717]
[450.43829346 -174.38392639]
[464.87203979 -178.47070312]
[479.42315674 -182.11755371]
[494.07824707 -185.32110596]
[508.82382202 -188.07841492]
[523.64630127 -190.38694763]
[538.53198242 -192.24458313]
[553.46722412 -193.64958191]
[568.43817139 -194.60066223]
[583.43115234 -195.09696960]
[598.43225098 -195.13801575]
[613.42767334 -194.72378540]
[628.40362549 -193.85464478]
[643.34631348 -192.53140259]
[658.24194336 -190.75526428]
[673.07684326 -188.52789307]
[687.83728027 -185.85131836]
[702.50970459 -182.72801208]
[717.08056641 -179.16085815]
[731.53643799 -175.15313721]
[745.86401367 -170.70854187]
[760.05017090 -165.83116150]
[774.08172607 -160.52549744]
[787.94580078 -154.79644775]
[801.62963867 -148.64926147]
[815.12054443 -142.08961487]
[828.40625000 -135.12356567]
[841.47436523 -127.75751495]
[854.31292725 -119.99826050]
[866.91009521 -111.85293579]
[879.25421143 -103.32905579]
[891.33398438 -94.43447113]
[903.13830566 -85.17737579]
[914.65618896 -75.56629944]
[925.87707520 -65.61009216]
[936.79064941 -55.31792450]
[947.38684082 -44.69928741]
[957.65588379 -33.76396179]
[967.58831787 -22.52201462]
[977.17504883 -10.98380947]
[986.40710449 0.84002668]
[995.27612305 12.93860054]
[1003.77386475 25.30076599]
[1011.89251709 37.91513443]
[1019.62457275 50.77008438]
[1026.96301270 63.85377121]
[1033.90087891 77.15414429]
[1040.43200684 90.65895081]
[1046.55017090 104.35574341]
[1052.24987793 118.23191071]
[1057.52587891 132.27465820]
[1062.37316895 146.47106934]
[1066.78747559 160.80804443]
[1070.76464844 175.27238464]
[1074.30090332 189.85076904]
[1077.39318848 204.52975464]
[1080.03845215 219.29583740]
[1082.23449707 234.13539124]
[1083.97912598 249.03475952]
[1085.27062988 263.98019409]
[1086.10815430 278.95797729]
[1086.49060059 293.95425415]
[1086.41784668 308.95523071]
[1085.88977051 323.94708252]
[1084.90710449 338.91601562]
[1083.47045898 353.84823608]
[1081.58129883 368.72994995]
[1079.24145508 383.54751587]
[1076.45288086 398.28720093]
[1073.21838379 412.93548584]
[1069.54077148 427.47888184]
[1065.42346191 441.90393066]
[1060.87023926 456.19738770]
[1055.88537598 470.34609985]
[1050.47338867 484.33697510]
[1044.63928223 498.15719604]
[1038.38842773 511.79394531]
[1031.72656250 525.23474121]
[1024.65991211 538.46716309]
[1017.19488525 551.47900391]
[1009.33837891 564.25830078]
[1001.09771729 576.79327393]
[992.48040771 589.07238770]
[983.49438477 601.08435059]
[974.14801025 612.81805420]
[964.44976807 624.26263428]
[954.40869141 635.40765381]
[944.03399658 646.24279785]
[933.33526611 656.75811768]
[922.32232666 666.94390869]
[911.00531006 676.79071045]
[899.39471436 686.28955078]
[887.50115967 695.43170166]
[875.33563232 704.20861816]
[862.90930176 712.61230469]
[850.23370361 720.63494873]
[837.32043457 728.26928711]
[824.18145752 735.50817871]
[810.82879639 742.34497070]
[797.27484131 748.77337646]
[783.53198242 754.78741455]
[769.61297607 760.38165283]
[755.53057861 765.55090332]
[741.29779053 770.29040527]
[726.92773438 774.59570312]
[712.43359375 778.46295166]
[697.82879639 781.88854980]
[683.12677002 784.86932373]
[668.34106445 787.40252686]
[653.48529053 789.48583984]
[638.57312012 791.11730957]
[623.61828613 792.29547119]
[608.63458252 793.01922607]
[593.63586426 793.28790283]
[578.63586426 793.10125732]
[563.64843750 792.45947266]
[548.68737793 791.36315918]
[533.76647949 789.81329346]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 86]
[60 85]
[61 84]
[63 83]
[64 82]
[65 81]
] def

init

% Start Annotations
61 84 0.32 0.6 colorpair
63 83 0.0 0.6 colorpair
65 81 0.32 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
59 86 7 gmark
59 cmark
86 cmark
60 85 4 gmark
60 cmark
61 84 1 gmark
61 cmark
84 cmark
63 83 1 gmark
64 82 6 gmark
64 cmark
82 cmark
65 81 1 gmark
65 cmark
81 cmark

% End Annotations
showpage
end
%%EOF
