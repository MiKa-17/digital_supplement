%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 06:48:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_____________________________________________________________________________________________________________AGCCAUGAUGGCUAAC___CCCGGUAAAUAGCGACC____GCAAGGAGC_______________GGUGCGAGGAUGUUGCAGCA_CAUCCCCAUCGAGCG________________\
) } def
/len { sequence length } bind def

/coor [
[149.56135559 410.74749756]
[139.96226501 412.12713623]
[130.32522583 413.21032715]
[120.65938568 413.99606323]
[110.97392273 414.48355103]
[101.27803040 414.67236328]
[91.58093262 414.56231689]
[81.89182281 414.15350342]
[72.21991730 413.44631958]
[62.57439804 412.44146729]
[52.96442032 411.13983154]
[43.39911652 409.54269409]
[33.88756943 407.65155029]
[24.43881416 405.46823120]
[15.06182289 402.99478149]
[5.76550388 400.23358154]
[-3.44131470 397.18719482]
[-12.54988861 393.85858154]
[-21.55156708 390.25085449]
[-30.43779945 386.36746216]
[-39.20014572 382.21206665]
[-47.83028793 377.78866577]
[-56.32002640 373.10140991]
[-64.66129303 368.15478516]
[-72.84617615 362.95349121]
[-80.86688995 357.50244141]
[-88.71582794 351.80682373]
[-96.38552856 345.87203979]
[-103.86871338 339.70373535]
[-111.15826416 333.30780029]
[-118.24726868 326.69024658]
[-125.12899017 319.85739136]
[-131.79689026 312.81573486]
[-138.24464417 305.57196045]
[-144.46612549 298.13293457]
[-150.45541382 290.50570679]
[-156.20681763 282.69757080]
[-161.71490479 274.71591187]
[-166.97441101 266.56829834]
[-171.98036194 258.26251221]
[-176.72799683 249.80638123]
[-181.21279907 241.20799255]
[-185.43052673 232.47547913]
[-189.37715149 223.61715698]
[-193.04895020 214.64141846]
[-196.44239807 205.55679321]
[-199.55432129 196.37191772]
[-202.38172913 187.09552002]
[-204.92193604 177.73640442]
[-207.17254639 168.30343628]
[-209.13142395 158.80561829]
[-210.79669189 149.25193787]
[-212.16677856 139.65148926]
[-213.24037170 130.01336670]
[-214.01647949 120.34674835]
[-214.49432373 110.66079712]
[-214.67349243 100.96472931]
[-214.55378723 91.26774597]
[-214.13533020 81.57904816]
[-213.41851807 71.90785217]
[-212.40403748 62.26333618]
[-211.09283447 52.65465927]
[-209.48617554 43.09095001]
[-207.58558655 33.58129120]
[-205.39285278 24.13471413]
[-202.91007996 14.76019001]
[-200.13960266 5.46662521]
[-197.08406067 -3.73715591]
[-193.74636841 -12.84241104]
[-190.12968445 -21.84049225]
[-186.23744202 -30.72285461]
[-182.07334900 -39.48106003]
[-177.64134216 -48.10679245]
[-172.94564819 -56.59185791]
[-167.99072266 -64.92819977]
[-162.78126526 -73.10789490]
[-157.32223511 -81.12318420]
[-151.61880493 -88.96644592]
[-145.67639160 -96.63023376]
[-139.50064087 -104.10726929]
[-133.09742737 -111.39045715]
[-126.47283173 -118.47286987]
[-119.63313293 -125.34777832]
[-112.58483887 -132.00866699]
[-105.33464050 -138.44920349]
[-97.88941956 -144.66326904]
[-90.25625610 -150.64495850]
[-82.44239044 -156.38859558]
[-74.45524597 -161.88873291]
[-66.30240631 -167.14012146]
[-57.99162674 -172.13780212]
[-49.53078842 -176.87701416]
[-40.92793274 -181.35325623]
[-32.19123077 -185.56228638]
[-23.32897568 -189.50009155]
[-14.34958649 -193.16293335]
[-5.26159382 -196.54734802]
[3.92637253 -199.65011597]
[13.20558643 -202.46829224]
[22.56723404 -204.99919128]
[32.00242615 -207.24040222]
[41.50219727 -209.18981934]
[51.05752945 -210.84558105]
[60.65934372 -212.20610046]
[70.29852295 -213.27011108]
[79.96591187 -214.03657532]
[89.65232849 -214.50479126]
[99.34857178 -214.67430115]
[109.04543304 -214.54493713]
[118.73371124 -214.11683655]
[119.98333740 -229.06469727]
[121.23296356 -244.01254272]
[110.00620270 -254.89804077]
[108.45450592 -270.45843506]
[117.31052399 -283.34661865]
[132.39273071 -287.47714233]
[146.57974243 -280.89974976]
[153.17291260 -266.72003174]
[149.05914307 -251.63325500]
[136.18081665 -242.76292419]
[134.93119812 -227.81506348]
[133.68156433 -212.86720276]
[153.55009460 -210.08502197]
[173.20097351 -206.04240417]
[192.55429077 -200.75578308]
[211.53138733 -194.24664307]
[230.05513000 -186.54144287]
[248.05023193 -177.67150879]
[265.44354248 -167.67289734]
[282.16433716 -156.58622742]
[298.14468384 -144.45658875]
[313.31958008 -131.33329773]
[327.62741089 -117.26966095]
[341.00994873 -102.32286835]
[353.41284180 -86.55366516]
[364.78564453 -70.02616119]
[375.08215332 -52.80753326]
[384.26049805 -34.96776962]
[392.28338623 -16.57938957]
[399.11819458 2.28286576]
[413.48361206 -2.03397703]
[420.79205322 -7.49499702]
[428.07876587 -6.30948830]
[442.50280762 -10.42622948]
[456.92681885 -14.54296970]
[471.35083008 -18.65970993]
[485.77487183 -22.77645111]
[491.08303833 -29.33296204]
[498.28912354 -31.63098717]
[504.72708130 -29.79075241]
[518.35577393 -36.05644226]
[525.25030518 -50.54246902]
[540.90667725 -54.04352570]
[553.31469727 -43.87389755]
[552.95593262 -27.83485794]
[540.10565186 -18.23018074]
[524.62145996 -22.42775536]
[510.99276733 -16.16206551]
[525.81408691 -13.85380459]
[538.52685547 -5.89222002]
[547.07391357 6.43445635]
[550.07244873 21.13169479]
[547.03723145 35.82139587]
[538.45935059 48.12668228]
[525.72680664 56.05648422]
[510.89971924 58.32770920]
[496.37728882 54.57286453]
[484.50930786 45.39950562]
[477.21603394 32.29193497]
[475.67761230 17.37103462]
[480.14297485 3.05109382]
[489.89160156 -8.35242844]
[475.46759033 -4.23568726]
[461.04354858 -0.11894666]
[446.61953735 3.99779415]
[432.19552612 8.11453438]
[417.80044556 12.33142853]
[403.43505859 16.64827156]
[409.69058228 44.21395111]
[413.44720459 72.22976685]
[414.67462158 100.46966553]
[413.36291504 128.70578003]
[409.52267456 156.71025085]
[403.18487549 184.25714111]
[394.40069580 211.12414551]
[383.24096680 237.09449768]
[369.79574585 261.95861816]
[354.17355347 285.51589966]
[336.50039673 307.57623291]
[316.91894531 327.96163940]
[326.99716187 339.07153320]
[337.07537842 350.18142700]
[351.37365723 345.02124023]
[366.55801392 345.73056030]
[380.31298828 352.20120239]
[390.54101562 363.44647217]
[395.68237305 377.75152588]
[394.95309448 392.93496704]
[388.46435547 406.68139648]
[377.20562744 416.89462280]
[362.89382935 422.01718140]
[347.71136475 421.26791382]
[333.97348022 414.76107788]
[323.77508545 403.48895264]
[318.67135620 389.17041016]
[319.44058228 373.98895264]
[325.96548462 360.25964355]
[315.88726807 349.14974976]
[305.80905151 338.03985596]
[298.37622070 344.26873779]
[290.75497437 350.26559448]
[282.95257568 356.02478027]
[274.97637939 361.54080200]
[266.83404541 366.80844116]
[258.53320312 371.82266235]
[250.08183289 376.57870483]
[241.48791504 381.07208252]
[232.75959778 385.29849243]
[223.90521240 389.25393677]
[214.93313599 392.93466187]
[205.85189819 396.33715820]
[196.67012024 399.45822144]
[187.39654541 402.29486084]
[178.03994751 404.84439087]
[168.60923767 407.10440063]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[110 122]
[111 121]
[112 120]
[140 178]
[141 177]
[143 176]
[144 175]
[145 174]
[146 173]
[147 172]
[150 158]
[151 157]
[190 209]
[191 208]
[192 207]
] def

init

% Start Annotations
110 122 0.16 1 colorpair
111 121 0.0 1 colorpair
112 120 0.32 1 colorpair
140 178 0.0 1 colorpair
141 177 0.16 1 colorpair
143 176 0.0 1 colorpair
144 175 0.16 1 colorpair
145 174 0.16 1 colorpair
150 158 0.0 1 colorpair
151 157 0.16 1 colorpair
190 209 0.16 1 colorpair
191 208 0.0 1 colorpair
192 207 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
110 cmark
112 cmark
120 cmark
141 cmark
144 cmark
145 cmark
146 173 4 gmark
147 172 4 gmark
151 cmark
190 cmark
209 cmark

% End Annotations
showpage
end
%%EOF
