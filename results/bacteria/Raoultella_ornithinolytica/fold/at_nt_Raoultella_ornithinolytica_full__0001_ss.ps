%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 07:30:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_____________________________________AGUCAUAAUUGCUAUUCCCUACAAAUAGUGAUUGUGAUGAGCGAUGCGGACGUGCUGG_AGCACGGCCGUAUCGCGCU___________________________________________________________________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50466156 92.09026337]
[62.52610779 91.27108765]
[47.57551956 90.04308319]
[32.66405106 88.40715790]
[17.80283165 86.36454010]
[3.00295115 83.91675568]
[-11.72454643 81.06563568]
[-26.36867142 77.81329346]
[-40.91849518 74.16216278]
[-55.36315918 70.11496735]
[-69.69188690 65.67472839]
[-83.89398193 60.84476471]
[-97.95884705 55.62867355]
[-111.87599182 50.03034973]
[-125.63502502 44.05397034]
[-139.22567749 37.70399475]
[-152.63781738 30.98516464]
[-165.86141968 23.90249062]
[-178.88664246 16.46125793]
[-191.70373535 8.66702080]
[-204.30314636 0.52559507]
[-216.67549133 -7.95694304]
[-228.81150818 -16.77426338]
[-240.70214844 -25.91978836]
[-252.33856201 -35.38669205]
[-263.71203613 -45.16790771]
[-274.81408691 -55.25613785]
[-285.63644409 -65.64385986]
[-296.17102051 -76.32331085]
[-306.40997314 -87.28652954]
[-316.34564209 -98.52532959]
[-325.97061157 -110.03132629]
[-335.27770996 -121.79593658]
[-344.25997925 -133.81037903]
[-352.91073608 -146.06568909]
[-361.22351074 -158.55271912]
[-369.19210815 -171.26214600]
[-376.81054688 -184.18449402]
[-384.07321167 -197.31011963]
[-390.97460938 -210.62922668]
[-397.50964355 -224.13188171]
[-403.67343140 -237.80799866]
[-409.46133423 -251.64736938]
[-414.86904907 -265.63967896]
[-419.89257812 -279.77447510]
[-424.52813721 -294.04119873]
[-428.77224731 -308.42922974]
[-432.62179565 -322.92782593]
[-436.07388306 -337.52615356]
[-439.12591553 -352.21331787]
[-441.77563477 -366.97839355]
[-444.02105713 -381.81033325]
[-445.86050415 -396.69805908]
[-447.29263306 -411.63046265]
[-448.31634521 -426.59643555]
[-448.93087769 -441.58477783]
[-449.13577271 -456.58432007]
[-448.93087769 -471.58386230]
[-448.31637573 -486.57220459]
[-447.29266357 -501.53817749]
[-445.86056519 -516.47058105]
[-444.02111816 -531.35833740]
[-441.77569580 -546.19024658]
[-439.12600708 -560.95532227]
[-436.07397461 -575.64251709]
[-432.62191772 -590.24084473]
[-428.77236938 -604.73944092]
[-424.52825928 -619.12744141]
[-419.89273071 -633.39422607]
[-414.86923218 -647.52899170]
[-409.46151733 -661.52130127]
[-403.67361450 -675.36065674]
[-397.50985718 -689.03680420]
[-390.97482300 -702.53942871]
[-384.07342529 -715.85858154]
[-376.81079102 -728.98419189]
[-369.19235229 -741.90655518]
[-361.22375488 -754.61596680]
[-352.91101074 -767.10302734]
[-344.26025391 -779.35833740]
[-335.27798462 -791.37280273]
[-325.97091675 -803.13739014]
[-316.34594727 -814.64343262]
[-306.41027832 -825.88226318]
[-296.17135620 -836.84545898]
[-285.63677979 -847.52490234]
[-274.81442261 -857.91265869]
[-263.71237183 -868.00091553]
[-252.33891296 -877.78210449]
[-240.70251465 -887.24902344]
[-228.81187439 -896.39459229]
[-216.67587280 -905.21191406]
[-204.30354309 -913.69445801]
[-191.70413208 -921.83587646]
[-178.88703918 -929.63012695]
[-165.86183167 -937.07135010]
[-152.63822937 -944.15405273]
[-139.22610474 -950.87292480]
[-125.63545227 -957.22290039]
[-111.87642670 -963.19927979]
[-97.95928192 -968.79760742]
[-83.89442444 -974.01373291]
[-69.69232941 -978.84368896]
[-55.36360931 -983.28393555]
[-40.91894531 -987.33117676]
[-26.36912727 -990.98229980]
[-11.72500515 -994.23461914]
[3.00249004 -997.08575439]
[17.80236816 -999.53356934]
[32.66358566 -1001.57623291]
[47.57505035 -1003.21215820]
[62.52563858 -1004.44018555]
[77.50418854 -1005.25933838]
[92.49953461 -1005.66912842]
[107.50046539 -1005.66912842]
[122.49581146 -1005.25933838]
[137.47436523 -1004.44018555]
[152.42494202 -1003.21215820]
[167.33641052 -1001.57623291]
[182.19763184 -999.53356934]
[196.99751282 -997.08575439]
[211.72500610 -994.23461914]
[226.36912537 -990.98229980]
[240.91894531 -987.33117676]
[255.36360168 -983.28393555]
[269.69232178 -978.84368896]
[283.89440918 -974.01373291]
[297.95928955 -968.79760742]
[311.87643433 -963.19927979]
[325.63543701 -957.22290039]
[339.22610474 -950.87292480]
[352.63824463 -944.15405273]
[365.86184692 -937.07135010]
[378.88705444 -929.63012695]
[391.70413208 -921.83587646]
[404.30352783 -913.69445801]
[416.67587280 -905.21191406]
[428.81188965 -896.39459229]
[440.70251465 -887.24902344]
[452.33892822 -877.78210449]
[463.71237183 -868.00091553]
[474.81442261 -857.91265869]
[485.63677979 -847.52490234]
[496.17135620 -836.84545898]
[506.41027832 -825.88226318]
[516.34594727 -814.64343262]
[525.97088623 -803.13739014]
[535.27801514 -791.37280273]
[544.26025391 -779.35833740]
[552.91101074 -767.10302734]
[561.22375488 -754.61596680]
[569.19232178 -741.90655518]
[576.81079102 -728.98419189]
[584.07342529 -715.85858154]
[590.97485352 -702.53942871]
[597.50982666 -689.03680420]
[603.67358398 -675.36065674]
[609.46148682 -661.52130127]
[614.86920166 -647.52899170]
[619.89270020 -633.39422607]
[624.52825928 -619.12744141]
[628.77239990 -604.73944092]
[632.62188721 -590.24084473]
[636.07397461 -575.64251709]
[639.12597656 -560.95532227]
[641.77569580 -546.19024658]
[644.02111816 -531.35833740]
[645.86059570 -516.47058105]
[647.29266357 -501.53817749]
[648.31634521 -486.57220459]
[648.93090820 -471.58386230]
[649.13580322 -456.58432007]
[648.93084717 -441.58477783]
[648.31634521 -426.59643555]
[647.29266357 -411.63046265]
[645.86053467 -396.69805908]
[644.02105713 -381.81033325]
[641.77563477 -366.97839355]
[639.12591553 -352.21331787]
[636.07385254 -337.52615356]
[632.62176514 -322.92782593]
[628.77227783 -308.42922974]
[624.52813721 -294.04119873]
[619.89257812 -279.77447510]
[614.86907959 -265.63967896]
[609.46130371 -251.64736938]
[603.67340088 -237.80799866]
[597.50964355 -224.13188171]
[590.97460938 -210.62922668]
[584.07318115 -197.31011963]
[576.81054688 -184.18449402]
[569.19207764 -171.26214600]
[561.22351074 -158.55271912]
[552.91070557 -146.06568909]
[544.26000977 -133.81037903]
[535.27770996 -121.79593658]
[525.97058105 -110.03132629]
[516.34564209 -98.52532959]
[506.40997314 -87.28652954]
[496.17102051 -76.32331085]
[485.63644409 -65.64385986]
[474.81408691 -55.25613785]
[463.71203613 -45.16790771]
[452.33856201 -35.38669205]
[440.70214844 -25.91978836]
[428.81149292 -16.77426338]
[416.67547607 -7.95694304]
[404.30316162 0.52559507]
[391.70373535 8.66702080]
[378.88662720 16.46125793]
[365.86141968 23.90249062]
[352.63781738 30.98516464]
[339.22567749 37.70399475]
[325.63504028 44.05397034]
[311.87600708 50.03034973]
[297.95886230 55.62867355]
[283.89398193 60.84476471]
[269.69189453 65.67472839]
[255.36315918 70.11496735]
[240.91848755 74.16216278]
[226.36866760 77.81329346]
[211.72454834 81.06563568]
[196.99705505 83.91675568]
[182.19717407 86.36454010]
[167.33595276 88.40715790]
[152.42448425 90.04308319]
[137.47389221 91.27108765]
[122.49533844 92.09026337]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
