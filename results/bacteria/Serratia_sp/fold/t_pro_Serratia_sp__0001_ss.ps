%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 23:15:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_______________________________________________________________________________________________________AUGCCGAACAAACGGAG______________CCUGUUAAAACUGGUGGUUAUUUGUGCCACGGUAAUA________UCACUGGCAUGGAUAACCC______GCAGCACGCUGUGUGAGCUGCGCAUCCGAUCGGGCAAUACGGAGGUU_GCG\
GCCAUU________UUGGCUUACGAAUCCGAACGG__________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[238.89369202 824.48944092]
[224.13427734 827.16375732]
[209.32353210 829.53741455]
[194.46759033 831.60937500]
[179.57260132 833.37890625]
[164.64469910 834.84521484]
[149.69006348 836.00769043]
[134.71490479 836.86590576]
[119.72537231 837.41937256]
[104.72769165 837.66802979]
[89.72805786 837.61163330]
[74.73267365 837.25030518]
[59.74773026 836.58416748]
[44.77943039 835.61346436]
[29.83396530 834.33862305]
[14.91750813 832.76013184]
[0.03622898 830.87872314]
[-14.80371952 828.69512939]
[-29.59620285 826.21020508]
[-44.33510208 823.42504883]
[-59.01432800 820.34082031]
[-73.62780762 816.95874023]
[-88.16949463 813.28021240]
[-102.63339233 809.30682373]
[-117.01350403 805.04016113]
[-131.30389404 800.48193359]
[-145.49864197 795.63415527]
[-159.59188843 790.49871826]
[-173.57781982 785.07781982]
[-187.45062256 779.37365723]
[-201.20458984 773.38861084]
[-214.83401489 767.12518311]
[-228.33328247 760.58587646]
[-241.69677734 753.77349854]
[-254.91900635 746.69073486]
[-267.99450684 739.34069824]
[-280.91784668 731.72625732]
[-293.68368530 723.85064697]
[-306.28677368 715.71704102]
[-318.72186279 707.32891846]
[-330.98382568 698.68969727]
[-343.06762695 689.80297852]
[-354.96820068 680.67236328]
[-366.68069458 671.30163574]
[-378.20022583 661.69476318]
[-389.52203369 651.85559082]
[-400.64147949 641.78833008]
[-411.55389404 631.49700928]
[-422.25482178 620.98596191]
[-432.73983765 610.25946045]
[-443.00454712 599.32202148]
[-453.04476929 588.17816162]
[-462.85635376 576.83245850]
[-472.43521118 565.28955078]
[-481.77737427 553.55432129]
[-490.87902832 541.63153076]
[-499.73635864 529.52618408]
[-508.34573364 517.24322510]
[-516.70355225 504.78778076]
[-524.80645752 492.16494751]
[-532.65100098 479.37997437]
[-540.23394775 466.43817139]
[-547.55224609 453.34481812]
[-554.60272217 440.10540771]
[-561.38262939 426.72537231]
[-567.88903809 413.21023560]
[-574.11932373 399.56561279]
[-580.07092285 385.79714966]
[-585.74127197 371.91049194]
[-591.12817383 357.91143799]
[-596.22930908 343.80572510]
[-601.04254150 329.59921265]
[-605.56597900 315.29779053]
[-609.79766846 300.90734863]
[-613.73583984 286.43383789]
[-617.37896729 271.88323975]
[-620.72552490 257.26156616]
[-623.77404785 242.57487488]
[-626.52331543 227.82925415]
[-628.97222900 213.03076172]
[-631.11968994 198.18554688]
[-632.96496582 183.29974365]
[-634.50708008 168.37948608]
[-635.74560547 153.43095398]
[-636.67987061 138.46034241]
[-637.30957031 123.47382355]
[-637.63446045 108.47760773]
[-637.65435791 93.47787476]
[-637.36920166 78.48084259]
[-636.77923584 63.49271393]
[-635.88464355 48.51967239]
[-634.68579102 33.56791687]
[-633.18316650 18.64362907]
[-631.37744141 3.75297832]
[-629.26928711 -11.09787941]
[-626.85961914 -25.90280151]
[-624.14947510 -40.65567017]
[-621.13989258 -55.35038376]
[-617.83209229 -69.98086548]
[-614.22760010 -84.54106903]
[-610.32775879 -99.02497864]
[-606.13421631 -113.42658997]
[-601.64874268 -127.73996735]
[-596.87316895 -141.95918274]
[-591.80944824 -156.07835388]
[-586.45971680 -170.09165955]
[-580.82617188 -183.99328613]
[-574.91113281 -197.77749634]
[-568.71704102 -211.43858337]
[-562.24645996 -224.97091675]
[-555.50207520 -238.36888123]
[-548.48663330 -251.62693787]
[-541.20312500 -264.73962402]
[-533.65447998 -277.70150757]
[-525.84387207 -290.50723267]
[-517.77447510 -303.15148926]
[-509.44970703 -315.62905884]
[-500.87292480 -327.93478394]
[-492.04769897 -340.06359863]
[-482.97769165 -352.01046753]
[-473.66665649 -363.77041626]
[-464.11843872 -375.33865356]
[-454.33697510 -386.71032715]
[-444.32635498 -397.88079834]
[-434.09063721 -408.84539795]
[-423.63412476 -419.59960938]
[-412.96109009 -430.13900757]
[-402.07598877 -440.45919800]
[-390.98327637 -450.55596924]
[-379.68759155 -460.42507935]
[-368.19357300 -470.06250000]
[-356.50595093 -479.46420288]
[-344.62960815 -488.62634277]
[-332.56942749 -497.54507446]
[-320.33041382 -506.21679688]
[-307.91760254 -514.63787842]
[-295.33612061 -522.80480957]
[-282.59118652 -530.71423340]
[-269.68807983 -538.36285400]
[-256.63214111 -545.74761963]
[-243.42872620 -552.86535645]
[-230.08331299 -559.71313477]
[-216.60144043 -566.28820801]
[-202.98866272 -572.58776855]
[-189.25062561 -578.60925293]
[-175.39297485 -584.35015869]
[-161.42147827 -589.80810547]
[-147.34188843 -594.98089600]
[-133.16003418 -599.86633301]
[-118.88178253 -604.46234131]
[-104.51303101 -608.76715088]
[-90.05972290 -612.77886963]
[-75.52783966 -616.49591064]
[-60.92337418 -619.91674805]
[-46.25237656 -623.03991699]
[-31.52091217 -625.86407471]
[-16.73506927 -628.38818359]
[-1.90096223 -630.61114502]
[12.97527695 -632.53198242]
[27.88749695 -634.15002441]
[42.82953262 -635.46447754]
[57.79520416 -636.47485352]
[72.77832794 -637.18072510]
[87.77270508 -637.58184814]
[102.77214050 -637.67797852]
[117.77042389 -637.46911621]
[132.76136780 -636.95532227]
[147.73875427 -636.13684082]
[162.69641113 -635.01403809]
[177.62814331 -633.58728027]
[192.52778625 -631.85723877]
[207.38916016 -629.82464600]
[222.20614624 -627.49029541]
[236.97261047 -624.85510254]
[251.68243408 -621.92028809]
[266.32952881 -618.68695068]
[280.90786743 -615.15649414]
[295.41140747 -611.33032227]
[309.83416748 -607.21008301]
[324.17016602 -602.79742432]
[338.41345215 -598.09417725]
[352.55819702 -593.10229492]
[366.59851074 -587.82385254]
[380.52859497 -582.26104736]
[394.34271240 -576.41613770]
[408.03509521 -570.29156494]
[421.60015869 -563.88989258]
[435.03222656 -557.21368408]
[448.32577515 -550.26580811]
[461.47534180 -543.04901123]
[474.47540283 -535.56634521]
[487.32067871 -527.82092285]
[500.00579834 -519.81597900]
[512.52551270 -511.55468750]
[524.87469482 -503.04058838]
[537.04821777 -494.27713013]
[549.04101562 -485.26797485]
[560.84814453 -476.01684570]
[572.46478271 -466.52755737]
[583.88604736 -456.80404663]
[595.10723877 -446.85031128]
[606.12371826 -436.67047119]
[616.93096924 -426.26876831]
[627.52447510 -415.64944458]
[637.89990234 -404.81692505]
[648.05291748 -393.77572632]
[657.97930908 -382.53033447]
[667.67504883 -371.08544922]
[677.13604736 -359.44580078]
[686.35839844 -347.61618042]
[695.33837891 -335.60150146]
[704.07220459 -323.40670776]
[712.55621338 -311.03686523]
[720.78704834 -298.49707031]
[728.76116943 -285.79251099]
[736.47528076 -272.92846680]
[743.92633057 -259.91021729]
[751.11108398 -246.74314880]
[758.02661133 -233.43273926]
[764.67016602 -219.98446655]
[771.03881836 -206.40388489]
[777.13006592 -192.69662476]
[782.94134521 -178.86834717]
[788.47027588 -164.92477417]
[793.71453857 -150.87165833]
[798.67199707 -136.71482849]
[803.34057617 -122.46012878]
[807.71832275 -108.11344147]
[811.80352783 -93.68071747]
[815.59436035 -79.16790771]
[819.08935547 -64.58102417]
[822.28704834 -49.92609787]
[825.18615723 -35.20917892]
[827.78533936 -20.43635941]
[830.08367920 -5.61374283]
[832.08013916 9.25253868]
[833.77392578 24.15634155]
[835.16430664 39.09149933]
[836.25079346 54.05184555]
[837.03283691 69.03118134]
[837.51013184 84.02333069]
[837.68249512 99.02207947]
[837.54992676 114.02123260]
[837.11236572 129.01458740]
[852.09393311 129.75692749]
[867.07556152 130.49926758]
[882.05718994 131.24160767]
[885.39532471 116.57776642]
[891.22924805 102.71643066]
[899.38165283 90.07884216]
[909.60491943 79.04902649]
[921.58825684 69.96217346]
[934.96752930 63.09442520]
[949.33618164 58.65447998]
[964.25750732 56.77726746]
[979.27819824 57.51982880]
[993.94165039 60.85960388]
[1007.80230713 66.69509125]
[1020.43896484 74.84897614]
[1031.46765137 85.07344818]
[1040.55310059 97.05780792]
[1047.41931152 110.43786621]
[1051.85766602 124.80702209]
[1053.73315430 139.72860718]
[1052.98889160 154.74916077]
[1049.64746094 169.41223145]
[1043.81042480 183.27224731]
[1035.65515137 195.90798950]
[1025.42932129 206.93548584]
[1013.44396973 216.01962280]
[1000.06317139 222.88433838]
[985.69348145 227.32101440]
[970.77172852 229.19485474]
[955.75122070 228.44888306]
[941.08850098 225.10577393]
[927.22918701 219.26713562]
[914.59436035 211.11039734]
[903.56805420 200.88342285]
[894.48522949 188.89700317]
[887.62207031 175.51538086]
[883.18701172 161.14523315]
[881.31488037 146.22322083]
[866.33325195 145.48088074]
[851.35162354 144.73854065]
[836.36999512 143.99621582]
[835.32324219 158.95938110]
[833.97241211 173.89817810]
[832.31817627 188.80641174]
[830.36108398 203.67793274]
[828.10205078 218.50659180]
[825.54199219 233.28625488]
[822.68200684 248.01080322]
[819.52313232 262.67416382]
[816.06683350 277.27026367]
[812.31445312 291.79306030]
[808.26757812 306.23657227]
[803.92779541 320.59481812]
[799.29705811 334.86184692]
[794.37713623 349.03176880]
[789.17016602 363.09872437]
[783.67822266 377.05691528]
[777.90362549 390.90054321]
[771.84875488 404.62390137]
[765.51605225 418.22131348]
[758.90826416 431.68716431]
[752.02801514 445.01586914]
[744.87817383 458.20190430]
[737.46166992 471.23986816]
[729.78167725 484.12432861]
[721.84124756 496.84997559]
[713.64373779 509.41152954]
[705.19250488 521.80383301]
[696.49102783 534.02172852]
[687.54296875 546.06018066]
[678.35198975 557.91418457]
[668.92187500 569.57891846]
[659.25653076 581.04943848]
[649.35998535 592.32110596]
[639.23626709 603.38922119]
[628.88964844 614.24920654]
[618.32427979 624.89654541]
[607.54467773 635.32684326]
[596.55517578 645.53588867]
[585.36041260 655.51928711]
[573.96496582 665.27307129]
[562.37353516 674.79315186]
[550.59094238 684.07550049]
[538.62207031 693.11645508]
[526.47186279 701.91210938]
[514.14526367 710.45892334]
[501.64749146 718.75335693]
[488.98364258 726.79199219]
[476.15896606 734.57141113]
[463.17877197 742.08850098]
[450.04840088 749.34008789]
[436.77331543 756.32324219]
[423.35897827 763.03503418]
[409.81094360 769.47265625]
[396.13482666 775.63348389]
[382.33627319 781.51501465]
[368.42098999 787.11468506]
[354.39471436 792.43035889]
[340.26327515 797.45965576]
[326.03247070 802.20068359]
[311.70822144 806.65130615]
[297.29644775 810.80981445]
[282.80310059 814.67437744]
[268.23416138 818.24346924]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[244 285]
[245 284]
[246 283]
[247 282]
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
244 285 15 gmark
244 cmark
285 cmark
245 284 12 gmark
245 cmark
284 cmark
246 283 12 gmark
246 cmark
283 cmark
247 282 13 gmark
247 cmark
282 cmark

% End Annotations
showpage
end
%%EOF
