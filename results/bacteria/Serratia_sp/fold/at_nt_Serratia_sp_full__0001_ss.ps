%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 23:15:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__________________U_AAACUGGUGGUUAUCUGUGCCACGGUAAUAUCACUGGCAUGGAUAACCCGCAGCACGCUGUGUGAGCUGCGCAUCCGAUCGGGCAACACGGAGGUU_GCGGCCAUUUUGGCUUACGAAUCCGAACGGUAAGGCAACCCG_ACGGCGGGG____UUU_CCCCCGCCCGUUGGUUGUUGG_____G_G__GAUCCAUGAGCACCC________________________\
) } def
/len { sequence length } bind def

/coor [
[86.33197021 665.63073730]
[71.34291077 665.06964111]
[56.37399292 664.11138916]
[41.43572998 662.75671387]
[26.53863144 661.00653076]
[11.69316006 658.86206055]
[-3.09024858 656.32482910]
[-17.80120468 653.39660645]
[-32.42936707 650.07940674]
[-46.96445847 646.37567139]
[-61.39626312 642.28790283]
[-75.71463776 637.81903076]
[-89.90951538 632.97210693]
[-103.97092438 627.75067139]
[-117.88897705 622.15832520]
[-131.65390015 616.19897461]
[-145.25601196 609.87683105]
[-158.68576050 603.19635010]
[-171.93368530 596.16223145]
[-184.99050903 588.77941895]
[-197.84704590 581.05303955]
[-210.49423218 572.98864746]
[-222.92321777 564.59179688]
[-235.12524414 555.86840820]
[-247.09173584 546.82464600]
[-258.81430054 537.46679688]
[-270.28466797 527.80157471]
[-281.49481201 517.83563232]
[-292.43682861 507.57604980]
[-303.10302734 497.03002930]
[-313.48596191 486.20498657]
[-323.57824707 475.10848999]
[-333.37286377 463.74835205]
[-342.86288452 452.13259888]
[-352.04168701 440.26934814]
[-360.90277100 428.16696167]
[-369.43994141 415.83392334]
[-377.64715576 403.27893066]
[-385.51870728 390.51077271]
[-393.04901123 377.53845215]
[-400.23278809 364.37106323]
[-407.06503296 351.01788330]
[-413.54086304 337.48828125]
[-419.65579224 323.79177856]
[-425.40551758 309.93798828]
[-430.78598022 295.93664551]
[-435.79339600 281.79757690]
[-440.42422485 267.53079224]
[-444.67526245 253.14622498]
[-448.54348755 238.65403748]
[-452.02621460 224.06439209]
[-455.12094116 209.38757324]
[-457.82556152 194.63385010]
[-460.13809204 179.81364441]
[-462.05697632 164.93733215]
[-463.58084106 150.01538086]
[-464.70861816 135.05827332]
[-465.43951416 120.07653046]
[-465.77301025 105.08068085]
[-465.70886230 90.08126068]
[-465.24716187 75.08881378]
[-464.38818359 60.11386871]
[-463.13253784 45.16695786]
[-461.48110962 30.25858307]
[-459.43508911 15.39922523]
[-456.99588013 0.59932470]
[-454.16522217 -14.13071632]
[-450.94506836 -28.78054428]
[-447.33773804 -43.33986282]
[-443.34570312 -57.79844284]
[-438.97183228 -72.14611816]
[-434.21914673 -86.37281036]
[-429.09100342 -100.46852112]
[-423.59100342 -114.42333984]
[-417.72302246 -128.22744751]
[-411.49121094 -141.87117004]
[-404.89990234 -155.34489441]
[-397.95373535 -168.63916016]
[-390.65759277 -181.74462891]
[-383.01663208 -194.65208435]
[-375.03619385 -207.35246277]
[-366.72189331 -219.83682251]
[-358.07958984 -232.09638977]
[-349.11532593 -244.12257385]
[-339.83541870 -255.90689087]
[-330.24639893 -267.44107056]
[-320.35501099 -278.71701050]
[-310.16818237 -289.72680664]
[-299.69308472 -300.46267700]
[-288.93707275 -310.91711426]
[-277.90771484 -321.08273315]
[-266.61276245 -330.95242310]
[-255.06015015 -340.51925659]
[-243.25799561 -349.77645874]
[-231.21459961 -358.71755981]
[-218.93841553 -367.33627319]
[-206.43809509 -375.62655640]
[-193.72239685 -383.58255005]
[-180.80026245 -391.19866943]
[-167.68078613 -398.46957397]
[-154.37318420 -405.39013672]
[-140.88679504 -411.95553589]
[-127.23111725 -418.16110229]
[-113.41574097 -424.00250244]
[-99.45037079 -429.47564697]
[-85.34482574 -434.57666016]
[-71.10901642 -439.30197144]
[-56.75295258 -443.64825439]
[-42.28672028 -447.61245728]
[-27.72048759 -451.19180298]
[-13.06449223 -454.38372803]
[1.67096579 -457.18606567]
[16.47553062 -459.59680176]
[31.33879852 -461.61422729]
[46.25032043 -463.23696899]
[61.19961929 -464.46386719]
[76.17618561 -465.29403687]
[91.16949463 -465.72689819]
[106.16901398 -465.76217651]
[121.16419983 -465.39984131]
[121.92393494 -480.38058472]
[122.68367004 -495.36135864]
[111.10666656 -505.87356567]
[109.04653168 -521.37487793]
[117.47599792 -534.54595947]
[132.41493225 -539.16790771]
[146.80961609 -533.05834961]
[153.86334229 -519.10198975]
[150.24552917 -503.88867188]
[137.66441345 -494.60159302]
[136.90467834 -479.62084961]
[136.14494324 -464.64010620]
[151.09985352 -463.48355103]
[166.01884460 -461.93096924]
[180.89143372 -459.98345947]
[195.70716858 -457.64239502]
[210.45564270 -454.90942383]
[225.12649536 -451.78643799]
[239.70939636 -448.27566528]
[254.19412231 -444.37954712]
[268.57046509 -440.10083008]
[282.82833862 -435.44253540]
[296.95773315 -430.40792847]
[310.94869995 -425.00054932]
[324.79138184 -419.22418213]
[338.47610474 -413.08288574]
[351.99322510 -406.58102417]
[365.33322144 -399.72311401]
[378.48675537 -392.51400757]
[391.44458008 -384.95874023]
[404.19754028 -377.06265259]
[416.73672485 -368.83126831]
[429.05331421 -360.27038574]
[441.13864136 -351.38601685]
[452.98419189 -342.18441772]
[464.58166504 -332.67205811]
[475.92294312 -322.85562134]
[486.99996948 -312.74197388]
[497.80505371 -302.33825684]
[508.33053589 -291.65176392]
[518.56903076 -280.69000244]
[528.51336670 -269.46072388]
[538.15649414 -257.97177124]
[547.49176025 -246.23121643]
[556.51245117 -234.24734497]
[565.21234131 -222.02854919]
[573.58526611 -209.58343506]
[581.62536621 -196.92074585]
[589.32696533 -184.04937744]
[596.68463135 -170.97836304]
[603.69323730 -157.71691895]
[610.34790039 -144.27433777]
[616.64379883 -130.66007996]
[622.57666016 -116.88372040]
[628.14221191 -102.95493317]
[633.33660889 -88.88349915]
[638.15612793 -74.67932129]
[642.59747314 -60.35237503]
[646.65747070 -45.91273117]
[650.33325195 -31.37054062]
[653.62225342 -16.73602104]
[656.52215576 -2.01945758]
[659.03100586 12.76880646]
[661.14685059 27.61837578]
[662.86840820 42.51881790]
[664.19433594 57.45965576]
[665.12371826 72.43039703]
[665.65594482 87.42050934]
[665.79064941 102.41946411]
[665.52770996 117.41671753]
[664.86724854 132.40173340]
[663.80987549 147.36396790]
[662.35620117 162.29292297]
[660.50732422 177.17810059]
[658.26452637 192.00903320]
[655.62933350 206.77529907]
[652.60363770 221.46652222]
[649.18957520 236.07237244]
[645.38958740 250.58259583]
[641.20623779 264.98699951]
[636.64257812 279.27542114]
[631.70172119 293.43786621]
[626.38714600 307.46435547]
[620.70269775 321.34503174]
[614.65222168 335.07015991]
[608.24011230 348.63006592]
[601.47076416 362.01525879]
[594.34899902 375.21627808]
[586.87976074 388.22387695]
[579.06835938 401.02890015]
[570.92028809 413.62237549]
[562.44122314 425.99542236]
[553.63714600 438.13937378]
[544.51428223 450.04565430]
[535.07897949 461.70593262]
[525.33795166 473.11199951]
[515.29791260 484.25582886]
[504.96606445 495.12960815]
[494.34954834 505.72570801]
[483.45590210 516.03662109]
[472.29278564 526.05517578]
[460.86798096 535.77429199]
[449.18957520 545.18707275]
[437.26574707 554.28704834]
[425.10488892 563.06774902]
[412.71554565 571.52294922]
[400.10641479 579.64678955]
[387.28637695 587.43353271]
[374.26443481 594.87768555]
[361.04971313 601.97406006]
[347.65155029 608.71765137]
[334.07931519 615.10363770]
[320.34259033 621.12768555]
[306.45098877 626.78546143]
[292.41430664 632.07299805]
[278.24237061 636.98657227]
[263.94519043 641.52276611]
[249.53276062 645.67834473]
[235.01525879 649.45043945]
[220.40284729 652.83636475]
[205.70584106 655.83380127]
[190.93452454 658.44055176]
[176.09930420 660.65478516]
[161.21060181 662.47503662]
[146.27886963 663.89996338]
[131.31462097 664.92858887]
[116.32836914 665.56018066]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[120 132]
[121 131]
[122 130]
] def

init

% Start Annotations
121 131 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
120 132 6 gmark
120 cmark
132 cmark
122 130 6 gmark
122 cmark
130 cmark

% End Annotations
showpage
end
%%EOF
