%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 03:47:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___________________________________________________GUCAUGUUCGCGAUUCGCUG_U_CGA__UACG_UUGUGAGGAGGGGAGCAGACAGGUUGCAGCACUUUUCUCUUG_G_______________________________________________________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50462341 92.09204102]
[62.52588272 91.27640533]
[47.57486725 90.05370331]
[32.66263580 88.42483521]
[17.80021858 86.39100647]
[2.99861264 83.95372772]
[-11.73123169 81.11479187]
[-26.37841797 77.87631226]
[-40.93211365 74.24066925]
[-55.38154602 70.21056366]
[-69.71602631 65.78897095]
[-83.92495728 60.97917175]
[-97.99781799 55.78470993]
[-111.92420197 50.20943832]
[-125.69380951 44.25748062]
[-139.29644775 37.93323517]
[-152.72206116 31.24138451]
[-165.96070862 24.18687820]
[-179.00259399 16.77493668]
[-191.83808899 9.01103973]
[-204.45767212 0.90093452]
[-216.85203552 -7.54938126]
[-229.01197815 -16.33365440]
[-240.92852783 -25.44538879]
[-252.59286499 -34.87784195]
[-263.99636841 -44.62403488]
[-275.13055420 -54.67676163]
[-285.98724365 -65.02857971]
[-296.55838013 -75.67183685]
[-306.83615112 -86.59865570]
[-316.81295776 -97.80094910]
[-326.48138428 -109.27043152]
[-335.83432007 -120.99862671]
[-344.86483765 -132.97685242]
[-353.56622314 -145.19624329]
[-361.93209839 -157.64776611]
[-369.95620728 -170.32218933]
[-377.63265991 -183.21017456]
[-384.95578003 -196.30215454]
[-391.92010498 -209.58845520]
[-398.52053833 -223.05924988]
[-404.75213623 -236.70457458]
[-410.61035156 -250.51432800]
[-416.09082031 -264.47830200]
[-421.18948364 -278.58615112]
[-425.90255737 -292.82745361]
[-430.22659302 -307.19165039]
[-434.15838623 -321.66815186]
[-437.69497681 -336.24624634]
[-440.83380127 -350.91510010]
[-443.57254028 -365.66390991]
[-445.90911865 -380.48175049]
[-447.84185791 -395.35763550]
[-449.36932373 -410.28060913]
[-450.49032593 -425.23959351]
[-451.20413208 -440.22351074]
[-451.51013184 -455.22131348]
[-451.40811157 -470.22192383]
[-450.89819336 -485.21417236]
[-449.98071289 -500.18701172]
[-448.65637207 -515.12939453]
[-446.92614746 -530.03015137]
[-444.79129028 -544.87841797]
[-442.25341797 -559.66308594]
[-439.31436157 -574.37329102]
[-435.97634888 -588.99810791]
[-432.24182129 -603.52679443]
[-428.11355591 -617.94848633]
[-423.59457397 -632.25256348]
[-418.68826294 -646.42840576]
[-413.39822388 -660.46563721]
[-407.72839355 -674.35382080]
[-401.68292236 -688.08258057]
[-395.26632690 -701.64190674]
[-388.48333740 -715.02172852]
[-381.33895874 -728.21209717]
[-373.83850098 -741.20324707]
[-365.98748779 -753.98565674]
[-357.79174805 -766.54980469]
[-349.25735474 -778.88641357]
[-340.39059448 -790.98632812]
[-331.19802856 -802.84063721]
[-321.68646240 -814.44061279]
[-311.86294556 -825.77752686]
[-301.73474121 -836.84313965]
[-291.30932617 -847.62915039]
[-280.59445190 -858.12768555]
[-269.59799194 -868.33093262]
[-258.32809448 -878.23126221]
[-246.79313660 -887.82153320]
[-235.00160217 -897.09448242]
[-222.96224976 -906.04333496]
[-210.68397522 -914.66143799]
[-198.17584229 -922.94238281]
[-185.44714355 -930.88012695]
[-172.50726318 -938.46875000]
[-159.36578369 -945.70269775]
[-146.03242493 -952.57647705]
[-132.51705933 -959.08514404]
[-118.82966614 -965.22387695]
[-104.98040009 -970.98803711]
[-90.97948456 -976.37341309]
[-76.83728790 -981.37597656]
[-62.56426239 -985.99212646]
[-48.17097855 -990.21838379]
[-33.66807556 -994.05163574]
[-19.06628990 -997.48901367]
[-4.37641811 -1000.52801514]
[10.39067078 -1003.16638184]
[25.22405052 -1005.40216064]
[40.11275101 -1007.23370361]
[55.04575348 -1008.65960693]
[70.01201630 -1009.67889404]
[85.00045776 -1010.29077148]
[100.00000000 -1010.49475098]
[114.99954224 -1010.29077148]
[129.98799133 -1009.67889404]
[144.95423889 -1008.65960693]
[159.88725281 -1007.23370361]
[174.77595520 -1005.40216064]
[189.60932922 -1003.16638184]
[204.37641907 -1000.52801514]
[219.06628418 -997.48901367]
[233.66807556 -994.05163574]
[248.17097473 -990.21838379]
[262.56427002 -985.99212646]
[276.83728027 -981.37597656]
[290.97949219 -976.37341309]
[304.98040771 -970.98803711]
[318.82968140 -965.22387695]
[332.51705933 -959.08514404]
[346.03240967 -952.57647705]
[359.36578369 -945.70269775]
[372.50726318 -938.46875000]
[385.44714355 -930.88012695]
[398.17584229 -922.94238281]
[410.68395996 -914.66143799]
[422.96224976 -906.04333496]
[435.00161743 -897.09448242]
[446.79312134 -887.82153320]
[458.32809448 -878.23126221]
[469.59799194 -868.33093262]
[480.59445190 -858.12768555]
[491.30932617 -847.62915039]
[501.73474121 -836.84313965]
[511.86294556 -825.77752686]
[521.68646240 -814.44061279]
[531.19805908 -802.84063721]
[540.39056396 -790.98632812]
[549.25732422 -778.88641357]
[557.79174805 -766.54980469]
[565.98748779 -753.98565674]
[573.83850098 -741.20324707]
[581.33892822 -728.21209717]
[588.48333740 -715.02172852]
[595.26629639 -701.64190674]
[601.68292236 -688.08258057]
[607.72839355 -674.35382080]
[613.39825439 -660.46563721]
[618.68829346 -646.42840576]
[623.59460449 -632.25256348]
[628.11358643 -617.94848633]
[632.24182129 -603.52679443]
[635.97637939 -588.99810791]
[639.31439209 -574.37329102]
[642.25341797 -559.66308594]
[644.79125977 -544.87841797]
[646.92614746 -530.03015137]
[648.65637207 -515.12939453]
[649.98071289 -500.18701172]
[650.89819336 -485.21417236]
[651.40814209 -470.22192383]
[651.51013184 -455.22131348]
[651.20410156 -440.22351074]
[650.49035645 -425.23959351]
[649.36932373 -410.28060913]
[647.84185791 -395.35763550]
[645.90911865 -380.48175049]
[643.57250977 -365.66390991]
[640.83380127 -350.91510010]
[637.69500732 -336.24624634]
[634.15838623 -321.66815186]
[630.22662354 -307.19165039]
[625.90258789 -292.82745361]
[621.18945312 -278.58615112]
[616.09082031 -264.47830200]
[610.61035156 -250.51432800]
[604.75213623 -236.70457458]
[598.52050781 -223.05924988]
[591.92010498 -209.58845520]
[584.95574951 -196.30215454]
[577.63269043 -183.21017456]
[569.95623779 -170.32218933]
[561.93206787 -157.64776611]
[553.56622314 -145.19624329]
[544.86480713 -132.97685242]
[535.83435059 -120.99862671]
[526.48138428 -109.27043152]
[516.81292725 -97.80094910]
[506.83615112 -86.59865570]
[496.55838013 -75.67183685]
[485.98724365 -65.02857971]
[475.13055420 -54.67676163]
[463.99636841 -44.62403488]
[452.59286499 -34.87784195]
[440.92852783 -25.44538879]
[429.01199341 -16.33365440]
[416.85202026 -7.54938126]
[404.45767212 0.90093452]
[391.83807373 9.01103973]
[379.00259399 16.77493668]
[365.96069336 24.18687820]
[352.72204590 31.24138451]
[339.29644775 37.93323517]
[325.69381714 44.25748062]
[311.92419434 50.20943832]
[297.99783325 55.78470993]
[283.92495728 60.97917175]
[269.71603394 65.78897095]
[255.38154602 70.21056366]
[240.93211365 74.24066925]
[226.37841797 77.87631226]
[211.73123169 81.11479187]
[197.00138855 83.95372772]
[182.19978333 86.39100647]
[167.33737183 88.42483521]
[152.42514038 90.05370331]
[137.47412109 91.27640533]
[122.49537659 92.09204102]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
