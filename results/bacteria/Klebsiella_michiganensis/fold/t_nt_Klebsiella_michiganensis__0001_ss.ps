%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 03:47:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
________________________________________________________________________________________________________________________________________UGGCUGGCAGC_GC_GGUUUUGCGACCGGCACC_GAAUGGAUAUGACGGUAAUGGAGGUCUGCCUGGUGCUGAGGGCCGAUCAG_CCG_______________GAUCCGGAGCUGGAGG\
GCGCGCUGCGCAGGAUGAAGAAGCUCUCGGCGAGGAAGCA__GAAGCAG_____________________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50222015 92.21698761]
[62.51245499 91.65105438]
[47.53603745 90.80240631]
[32.57829285 89.67134857]
[17.64455032 88.25827789]
[2.74012923 86.56369781]
[-12.12966728 84.58821106]
[-26.95954514 82.33252716]
[-41.74422455 79.79743958]
[-56.47844315 76.98386383]
[-71.15695190 73.89279175]
[-85.77452850 70.52532196]
[-100.32596588 66.88265991]
[-114.80609131 62.96609879]
[-129.20974731 58.77703476]
[-143.53178406 54.31695938]
[-157.76713562 49.58745575]
[-171.91072083 44.59021378]
[-185.95750427 39.32701111]
[-199.90248108 33.79972076]
[-213.74069214 28.01030731]
[-227.46720886 21.96083450]
[-241.07714844 15.65345860]
[-254.56565857 9.09042072]
[-267.92794800 2.27406025]
[-281.15924072 -4.79319763]
[-294.25485229 -12.10883617]
[-307.21008301 -19.67025185]
[-320.02035522 -27.47475052]
[-332.68112183 -35.51955795]
[-345.18783569 -43.80180740]
[-357.53604126 -52.31854630]
[-369.72137451 -61.06674957]
[-381.73947144 -70.04330444]
[-393.58609009 -79.24500275]
[-405.25698853 -88.66857910]
[-416.74798584 -98.31068420]
[-428.05502319 -108.16786957]
[-439.17407227 -118.23663330]
[-450.10119629 -128.51339722]
[-460.83245850 -138.99449158]
[-471.36404419 -149.67619324]
[-481.69226074 -160.55468750]
[-491.81335449 -171.62611389]
[-501.72378540 -182.88653564]
[-511.41998291 -194.33193970]
[-520.89849854 -205.95823669]
[-530.15600586 -217.76129150]
[-539.18914795 -229.73692322]
[-547.99475098 -241.88085938]
[-556.56964111 -254.18875122]
[-564.91076660 -266.65625000]
[-573.01519775 -279.27890015]
[-580.88006592 -292.05221558]
[-588.50250244 -304.97164917]
[-595.87988281 -318.03259277]
[-603.00946045 -331.23040771]
[-609.88879395 -344.56039429]
[-616.51538086 -358.01779175]
[-622.88690186 -371.59780884]
[-629.00103760 -385.29565430]
[-634.85565186 -399.10638428]
[-640.44866943 -413.02514648]
[-645.77807617 -427.04693604]
[-650.84197998 -441.16677856]
[-655.63861084 -455.37966919]
[-660.16619873 -469.68051147]
[-664.42315674 -484.06423950]
[-668.40802002 -498.52572632]
[-672.11926270 -513.05981445]
[-675.55566406 -527.66137695]
[-678.71594238 -542.32513428]
[-681.59899902 -557.04589844]
[-684.20379639 -571.81848145]
[-686.52941895 -586.63751221]
[-688.57501221 -601.49786377]
[-690.33990479 -616.39410400]
[-691.82342529 -631.32098389]
[-693.02502441 -646.27325439]
[-693.94433594 -661.24548340]
[-694.58093262 -676.23242188]
[-694.93469238 -691.22869873]
[-695.00549316 -706.22900391]
[-694.79321289 -721.22790527]
[-694.29797363 -736.22021484]
[-693.52001953 -751.20043945]
[-692.45947266 -766.16339111]
[-691.11688232 -781.10357666]
[-689.49261475 -796.01586914]
[-687.58728027 -810.89477539]
[-685.40161133 -825.73516846]
[-682.93627930 -840.53161621]
[-680.19226074 -855.27893066]
[-677.17041016 -869.97186279]
[-673.87194824 -884.60516357]
[-670.29797363 -899.17364502]
[-666.44976807 -913.67205811]
[-662.32867432 -928.09533691]
[-657.93621826 -942.43823242]
[-653.27392578 -956.69573975]
[-648.34344482 -970.86273193]
[-643.14654541 -984.93420410]
[-637.68511963 -998.90509033]
[-631.96099854 -1012.77044678]
[-625.97637939 -1026.52539062]
[-619.73327637 -1040.16491699]
[-613.23388672 -1053.68420410]
[-606.48065186 -1067.07849121]
[-599.47589111 -1080.34301758]
[-592.22210693 -1093.47302246]
[-584.72186279 -1106.46374512]
[-576.97790527 -1119.31066895]
[-568.99291992 -1132.00927734]
[-560.76971436 -1144.55480957]
[-552.31134033 -1156.94311523]
[-543.62072754 -1169.16955566]
[-534.70092773 -1181.22985840]
[-525.55523682 -1193.11975098]
[-516.18682861 -1204.83496094]
[-506.59899902 -1216.37133789]
[-496.79525757 -1227.72473145]
[-486.77905273 -1238.89123535]
[-476.55395508 -1249.86669922]
[-466.12359619 -1260.64721680]
[-455.49169922 -1271.22912598]
[-444.66204834 -1281.60852051]
[-433.63845825 -1291.78173828]
[-422.42492676 -1301.74511719]
[-411.02539062 -1311.49523926]
[-399.44393921 -1321.02844238]
[-387.68466187 -1330.34155273]
[-375.75177002 -1339.43103027]
[-363.64953613 -1348.29382324]
[-351.38220215 -1356.92675781]
[-338.95419312 -1365.32653809]
[-326.36990356 -1373.49047852]
[-313.63381958 -1381.41552734]
[-300.75048828 -1389.09875488]
[-287.72448730 -1396.53759766]
[-274.56045532 -1403.72937012]
[-261.26309204 -1410.67150879]
[-247.83708191 -1417.36157227]
[-234.28726196 -1423.79699707]
[-220.61842346 -1429.97570801]
[-206.83544922 -1435.89550781]
[-192.94323730 -1441.55407715]
[-178.94673157 -1446.94958496]
[-164.85093689 -1452.07995605]
[-150.66082764 -1456.94360352]
[-136.38150024 -1461.53857422]
[-122.01801300 -1465.86340332]
[-107.57548523 -1469.91638184]
[-93.05905914 -1473.69616699]
[-78.47389984 -1477.20141602]
[-63.82520676 -1480.43078613]
[-49.11818695 -1483.38330078]
[-34.35808563 -1486.05773926]
[-19.55014610 -1488.45324707]
[-4.69964933 -1490.56884766]
[10.18812180 -1492.40405273]
[25.10786629 -1493.95788574]
[40.05427551 -1495.22998047]
[55.02202225 -1496.21997070]
[70.00578308 -1496.92724609]
[85.00022125 -1497.35168457]
[100.00000000 -1497.49328613]
[114.99977875 -1497.35168457]
[129.99421692 -1496.92724609]
[144.97798157 -1496.21997070]
[159.94572449 -1495.22998047]
[174.89213562 -1493.95788574]
[189.81187439 -1492.40405273]
[204.69964600 -1490.56884766]
[219.55014038 -1488.45324707]
[234.35807800 -1486.05773926]
[249.11819458 -1483.38330078]
[263.82519531 -1480.43078613]
[278.47390747 -1477.20141602]
[293.05905151 -1473.69616699]
[307.57546997 -1469.91638184]
[322.01800537 -1465.86340332]
[336.38150024 -1461.53857422]
[350.66082764 -1456.94360352]
[364.85092163 -1452.07995605]
[378.94674683 -1446.94958496]
[392.94323730 -1441.55407715]
[406.83544922 -1435.89550781]
[420.61843872 -1429.97570801]
[434.28726196 -1423.79699707]
[447.83709717 -1417.36157227]
[461.26309204 -1410.67150879]
[474.56045532 -1403.72937012]
[487.72448730 -1396.53759766]
[500.75048828 -1389.09875488]
[513.63385010 -1381.41552734]
[526.36993408 -1373.49047852]
[538.95416260 -1365.32653809]
[551.38220215 -1356.92675781]
[563.64953613 -1348.29382324]
[575.75177002 -1339.43103027]
[587.68469238 -1330.34155273]
[599.44390869 -1321.02844238]
[611.02539062 -1311.49523926]
[622.42492676 -1301.74511719]
[633.63848877 -1291.78173828]
[644.66204834 -1281.60852051]
[655.49169922 -1271.22912598]
[666.12359619 -1260.64721680]
[676.55395508 -1249.86669922]
[686.77905273 -1238.89123535]
[696.79528809 -1227.72473145]
[706.59899902 -1216.37133789]
[716.18682861 -1204.83496094]
[725.55523682 -1193.11975098]
[734.70092773 -1181.22985840]
[743.62072754 -1169.16955566]
[752.31134033 -1156.94311523]
[760.76971436 -1144.55480957]
[768.99291992 -1132.00927734]
[776.97790527 -1119.31066895]
[784.72186279 -1106.46374512]
[792.22210693 -1093.47302246]
[799.47589111 -1080.34301758]
[806.48065186 -1067.07849121]
[813.23388672 -1053.68420410]
[819.73327637 -1040.16491699]
[825.97637939 -1026.52539062]
[831.96099854 -1012.77044678]
[837.68511963 -998.90509033]
[843.14654541 -984.93420410]
[848.34344482 -970.86273193]
[853.27392578 -956.69573975]
[857.93621826 -942.43823242]
[862.32867432 -928.09533691]
[866.44976807 -913.67205811]
[870.29797363 -899.17364502]
[873.87194824 -884.60516357]
[877.17041016 -869.97186279]
[880.19226074 -855.27893066]
[882.93627930 -840.53161621]
[885.40161133 -825.73516846]
[887.58728027 -810.89477539]
[889.49261475 -796.01586914]
[891.11688232 -781.10357666]
[892.45947266 -766.16339111]
[893.52001953 -751.20043945]
[894.29797363 -736.22021484]
[894.79321289 -721.22790527]
[895.00549316 -706.22900391]
[894.93469238 -691.22869873]
[894.58093262 -676.23242188]
[893.94433594 -661.24548340]
[893.02502441 -646.27325439]
[891.82342529 -631.32098389]
[890.33990479 -616.39410400]
[888.57501221 -601.49786377]
[886.52941895 -586.63751221]
[884.20379639 -571.81848145]
[881.59899902 -557.04589844]
[878.71594238 -542.32513428]
[875.55566406 -527.66137695]
[872.11926270 -513.05981445]
[868.40802002 -498.52572632]
[864.42315674 -484.06423950]
[860.16619873 -469.68051147]
[855.63861084 -455.37966919]
[850.84197998 -441.16677856]
[845.77807617 -427.04693604]
[840.44866943 -413.02514648]
[834.85565186 -399.10638428]
[829.00103760 -385.29565430]
[822.88690186 -371.59780884]
[816.51538086 -358.01779175]
[809.88879395 -344.56039429]
[803.00946045 -331.23040771]
[795.87988281 -318.03259277]
[788.50250244 -304.97164917]
[780.88006592 -292.05221558]
[773.01519775 -279.27890015]
[764.91076660 -266.65625000]
[756.56964111 -254.18875122]
[747.99475098 -241.88085938]
[739.18914795 -229.73692322]
[730.15600586 -217.76129150]
[720.89849854 -205.95823669]
[711.41998291 -194.33193970]
[701.72375488 -182.88653564]
[691.81335449 -171.62611389]
[681.69226074 -160.55468750]
[671.36407471 -149.67619324]
[660.83245850 -138.99449158]
[650.10119629 -128.51339722]
[639.17407227 -118.23663330]
[628.05505371 -108.16786957]
[616.74798584 -98.31068420]
[605.25695801 -88.66857910]
[593.58605957 -79.24500275]
[581.73950195 -70.04330444]
[569.72137451 -61.06674957]
[557.53607178 -52.31854630]
[545.18780518 -43.80180740]
[532.68109131 -35.51955795]
[520.02038574 -27.47475052]
[507.21008301 -19.67025185]
[494.25485229 -12.10883617]
[481.15924072 -4.79319763]
[467.92794800 2.27406025]
[454.56567383 9.09042072]
[441.07714844 15.65345860]
[427.46722412 21.96083450]
[413.74069214 28.01030731]
[399.90249634 33.79972076]
[385.95751953 39.32701111]
[371.91073608 44.59021378]
[357.76715088 49.58745575]
[343.53179932 54.31695938]
[329.20974731 58.77703476]
[314.80609131 62.96609879]
[300.32595825 66.88265991]
[285.77453613 70.52532196]
[271.15695190 73.89279175]
[256.47845459 76.98386383]
[241.74421692 79.79743958]
[226.95954895 82.33252716]
[212.12966919 84.58821106]
[197.25987244 86.56369781]
[182.35545349 88.25827789]
[167.42170715 89.67134857]
[152.46395874 90.80240631]
[137.48754883 91.65105438]
[122.49777985 92.21698761]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
