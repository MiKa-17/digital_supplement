%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Mar  9 06:27:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUACCAAAAAGACACAAGUGCUGAUAACACUUGUGCCAUAGUAAGCCCGUUAAAAAGACGGUGACUUUUCGGAUAUUACUUAAUAACCAUUCUUCCUACUCUGUCAAAAGUUGGGAUGGUUAUUUUUU\
) } def
/len { sequence length } bind def

/coor [
[269.97033691 188.63050842]
[269.20263672 174.46684265]
[255.14840698 169.22488403]
[241.09416199 163.98292542]
[227.03990173 158.74095154]
[219.60112000 159.35699463]
[212.71606445 153.20339966]
[198.79054260 147.62846375]
[184.09928894 150.08126831]
[174.16331482 137.76921082]
[160.23779297 132.19427490]
[146.31227112 126.61933136]
[132.38674927 121.04439545]
[118.46123505 115.46945953]
[95.59502411 129.56106567]
[67.15039825 113.95072174]
[52.75800323 118.17671204]
[38.36560822 122.40270233]
[23.97321320 126.62869263]
[9.58081818 130.85467529]
[-4.81157684 135.08067322]
[-19.20397186 139.30665588]
[-33.59636688 143.53263855]
[-39.69977951 157.92994690]
[-53.65308762 164.98963928]
[-68.86796570 161.37834167]
[-78.16041565 148.80119324]
[-77.14282227 133.19676208]
[-66.29566956 121.93296051]
[-50.74064255 120.32821655]
[-37.82235336 129.14024353]
[-23.42996025 124.91426086]
[-9.03756523 120.68827057]
[5.35482931 116.46228027]
[19.74722481 112.23629761]
[34.13961792 108.01030731]
[48.53201294 103.78431702]
[62.92440796 99.55832672]
[66.04002380 92.73609161]
[51.38346100 89.54466248]
[36.72689819 86.35323334]
[21.73675156 85.80962372]
[11.51906776 74.82786560]
[12.05601501 59.83747864]
[23.03322411 49.61491394]
[38.02384949 50.14519119]
[48.25139236 61.11811066]
[60.26131821 70.10485840]
[72.27124786 79.09160614]
[75.38685608 72.26937103]
[69.15563202 58.62488937]
[62.92440796 44.98041153]
[56.69318390 31.33592987]
[50.46195602 17.69145012]
[35.99340057 10.76032829]
[32.53192902 -4.90484858]
[42.73288345 -17.28709602]
[58.77096558 -16.88781548]
[68.34313202 -4.01329947]
[64.10643768 11.46022511]
[70.33766174 25.10470390]
[76.56888580 38.74918365]
[82.80010986 52.39366531]
[89.03134155 66.03814697]
[105.69061279 67.70926666]
[118.35456085 76.41249847]
[124.61148071 88.92973328]
[124.03617096 101.54393768]
[137.96170044 107.11887360]
[151.88720703 112.69380951]
[165.81272888 118.26875305]
[179.73825073 123.84368896]
[195.42555237 121.78963470]
[204.36547852 133.70294189]
[218.29100037 139.27787781]
[232.28187561 144.68670654]
[246.33612061 149.92868042]
[260.39035034 155.17063904]
[274.44461060 160.41259766]
[286.04931641 149.07360840]
[301.37478638 143.92645264]
[317.35629272 145.94728088]
[330.82092285 154.68406677]
[339.11755371 168.35647583]
[340.63888550 184.21850586]
[354.81387329 189.12452698]
[368.98889160 194.03053284]
[383.16390991 198.93655396]
[397.33892822 203.84257507]
[411.51394653 208.74859619]
[425.68893433 213.65461731]
[439.86395264 218.56063843]
[444.31011963 217.51896667]
[448.42169189 217.96304321]
[451.75735474 219.59020996]
[454.02651978 221.98197937]
[455.11468506 224.66610718]
[468.75915527 230.89732361]
[482.40365601 237.12855530]
[496.04812622 243.35978699]
[509.69259644 249.59100342]
[522.09277344 245.81707764]
[533.36145020 251.36325073]
[537.65032959 262.73910522]
[551.14270020 269.29327393]
[565.99389648 263.88800049]
[580.28186035 270.64291382]
[585.52984619 285.55044556]
[578.62426758 299.76620483]
[563.66204834 304.85626221]
[549.52008057 297.80075073]
[544.58850098 282.78558350]
[531.09619141 276.23141479]
[513.73187256 278.46496582]
[503.46136475 263.23547363]
[489.81689453 257.00427246]
[476.17242432 250.77304077]
[462.52795410 244.54180908]
[448.88345337 238.31059265]
[434.95794678 232.73564148]
[420.78292847 227.82963562]
[406.60791016 222.92361450]
[392.43289185 218.01759338]
[378.25790405 213.11157227]
[364.08288574 208.20555115]
[349.90786743 203.29953003]
[335.73284912 198.39350891]
[326.41235352 208.73762512]
[313.80572510 214.75073242]
[299.81448364 215.48901367]
[286.56311035 210.80714417]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 79]
[3 78]
[4 77]
[5 76]
[7 75]
[8 74]
[10 72]
[11 71]
[12 70]
[13 69]
[14 68]
[16 38]
[17 37]
[18 36]
[19 35]
[20 34]
[21 33]
[22 32]
[23 31]
[50 64]
[51 63]
[52 62]
[53 61]
[54 60]
[85 127]
[86 126]
[87 125]
[88 124]
[89 123]
[90 122]
[91 121]
[92 120]
[97 119]
[98 118]
[99 117]
[100 116]
[101 115]
[104 113]
[105 112]
] def

init

% Start Annotations
2 79 0.0 1 colorpair
3 78 0.0 1 colorpair
4 77 0.0 1 colorpair
5 76 0.0 1 colorpair
7 75 0.0 1 colorpair
8 74 0.0 1 colorpair
10 72 0.0 1 colorpair
11 71 0.0 1 colorpair
12 70 0.0 1 colorpair
13 69 0.0 1 colorpair
14 68 0.0 1 colorpair
16 38 0.0 1 colorpair
17 37 0.0 1 colorpair
18 36 0.0 1 colorpair
19 35 0.0 1 colorpair
20 34 0.0 1 colorpair
21 33 0.0 1 colorpair
22 32 0.0 1 colorpair
23 31 0.0 1 colorpair
50 64 0.0 1 colorpair
51 63 0.0 1 colorpair
52 62 0.0 1 colorpair
53 61 0.0 1 colorpair
54 60 0.0 1 colorpair
85 127 0.0 1 colorpair
86 126 0.0 1 colorpair
87 125 0.0 1 colorpair
88 124 0.0 1 colorpair
89 123 0.0 1 colorpair
90 122 0.0 1 colorpair
91 121 0.0 1 colorpair
92 120 0.0 1 colorpair
97 119 0.0 1 colorpair
98 118 0.0 1 colorpair
99 117 0.0 1 colorpair
100 116 0.0 1 colorpair
101 115 0.0 1 colorpair
104 113 0.0 1 colorpair
105 112 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
