%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 06:31:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_______________________________________________________________________________________________A__AGGGAGCUGGAGGCUUUCUUGGCCUGUGAU______AUUAAGCAG__AACCCAGACAGAGGGAAGCCCCAGCC_______G______________________________________________\
) } def
/len { sequence length } bind def

/coor [
[110.88401794 591.66833496]
[95.88495636 591.77154541]
[80.88972473 591.41735840]
[65.91226959 590.60595703]
[50.96651840 589.33825684]
[36.06638718 587.61529541]
[21.22572708 585.43878174]
[6.45834446 582.81066895]
[-8.22202206 579.73345947]
[-22.80171776 576.20996094]
[-37.26717758 572.24346924]
[-51.60494614 567.83770752]
[-65.80168915 562.99676514]
[-79.84420013 557.72509766]
[-93.71941376 552.02764893]
[-107.41442108 545.90966797]
[-120.91648102 539.37695312]
[-134.21304321 532.43548584]
[-147.29173279 525.09173584]
[-160.14038086 517.35260010]
[-172.74703979 509.22518921]
[-185.09997559 500.71710205]
[-197.18769836 491.83627319]
[-208.99897766 482.59094238]
[-220.52281189 472.98971558]
[-231.74848938 463.04150391]
[-242.66557312 452.75558472]
[-253.26388550 442.14154053]
[-263.53356934 431.20919800]
[-273.46508789 419.96878052]
[-283.04922485 408.43069458]
[-292.27700806 396.60571289]
[-301.13989258 384.50482178]
[-309.62960815 372.13925171]
[-317.73831177 359.52053833]
[-325.45837402 346.66043091]
[-332.78268433 333.57086182]
[-339.70440674 320.26400757]
[-346.21710205 306.75225830]
[-352.31472778 293.04818726]
[-357.99157715 279.16452026]
[-363.24237061 265.11419678]
[-368.06225586 250.91029358]
[-372.44674683 236.56599426]
[-376.39175415 222.09466553]
[-379.89358521 207.50975037]
[-382.94900513 192.82484436]
[-385.55517578 178.05357361]
[-387.70968628 163.20970154]
[-389.41049194 148.30702209]
[-390.65603638 133.35940552]
[-391.44515991 118.38076782]
[-391.77713013 103.38502502]
[-391.65161133 88.38613129]
[-391.06875610 73.39804840]
[-390.02911377 58.43470383]
[-388.53359985 43.51002884]
[-386.58364868 28.63790321]
[-384.18106079 13.83215904]
[-381.32806396 -0.89342833]
[-378.02734375 -15.52516174]
[-374.28192139 -30.04942894]
[-370.09530640 -44.45272064]
[-365.47140503 -58.72163773]
[-360.41452026 -72.84291077]
[-354.92932129 -86.80339050]
[-349.02093506 -100.59010315]
[-342.69485474 -114.19022369]
[-335.95697021 -127.59109497]
[-328.81356812 -140.78025818]
[-321.27124023 -153.74543762]
[-313.33703613 -166.47457886]
[-305.01834106 -178.95582581]
[-296.32287598 -191.17758179]
[-287.25872803 -203.12847900]
[-277.83435059 -214.79739380]
[-268.05850220 -226.17347717]
[-257.94027710 -237.24613953]
[-247.48907471 -248.00508118]
[-236.71463013 -258.44030762]
[-225.62696838 -268.54208374]
[-214.23638916 -278.30105591]
[-202.55349731 -287.70809937]
[-190.58917236 -296.75448608]
[-178.35452271 -305.43182373]
[-165.86094666 -313.73199463]
[-153.12004089 -321.64730835]
[-140.14369202 -329.17037964]
[-126.94394684 -336.29421997]
[-113.53308868 -343.01220703]
[-99.92359924 -349.31808472]
[-86.12812805 -355.20602417]
[-72.15952301 -360.67050171]
[-58.03076553 -365.70642090]
[-43.75500107 -370.30914307]
[-29.34551239 -374.47436523]
[-14.81570339 -378.19824219]
[-0.17908888 -381.47726440]
[14.55071545 -384.30838013]
[29.36000824 -386.68899536]
[44.23501205 -388.61688232]
[59.16189194 -390.09024048]
[74.12675476 -391.10769653]
[89.11569214 -391.66830444]
[104.11475372 -391.77154541]
[119.10998535 -391.41735840]
[134.08744812 -390.60598755]
[149.03318787 -389.33828735]
[163.93331909 -387.61535645]
[178.77398682 -385.43884277]
[193.54136658 -382.81072998]
[208.22174072 -379.73352051]
[222.80143738 -376.21005249]
[237.26689148 -372.24359131]
[251.60467529 -367.83782959]
[265.80142212 -362.99685669]
[279.84393311 -357.72518921]
[293.71914673 -352.02777100]
[307.41415405 -345.90982056]
[320.91622925 -339.37707520]
[334.21279907 -332.43563843]
[347.29147339 -325.09188843]
[355.03094482 -337.94104004]
[362.77041626 -350.79019165]
[370.50988770 -363.63934326]
[361.45309448 -375.84768677]
[357.76251221 -390.59378052]
[360.00088501 -405.62902832]
[367.82690430 -418.66061401]
[380.04711914 -427.70129395]
[394.79809570 -431.37249756]
[409.83035278 -429.11434937]
[422.85162354 -421.27120972]
[431.87625122 -409.03909302]
[435.52804565 -394.28332520]
[433.25012207 -379.25402832]
[425.38986206 -366.24307251]
[413.14587402 -357.23455811]
[398.38531494 -353.60220337]
[383.35903931 -355.89987183]
[375.61956787 -343.05072021]
[367.88009644 -330.20156860]
[360.14062500 -317.35244751]
[372.74728394 -309.22503662]
[385.10021973 -300.71694946]
[397.18792725 -291.83609009]
[408.99920654 -282.59075928]
[420.52304077 -272.98950195]
[431.74871826 -263.04132080]
[442.66577148 -252.75538635]
[453.26406860 -242.14132690]
[463.53378296 -231.20898438]
[473.46530151 -219.96855164]
[483.04940796 -208.43046570]
[492.27719116 -196.60548401]
[501.14004517 -184.50457764]
[509.62979126 -172.13900757]
[517.73846436 -159.52029419]
[525.45855713 -146.66017151]
[532.78283691 -133.57058716]
[539.70452881 -120.26374054]
[546.21722412 -106.75198364]
[552.31481934 -93.04791260]
[557.99169922 -79.16425323]
[563.24249268 -65.11392975]
[568.06237793 -50.91001511]
[572.44683838 -36.56571579]
[576.39178467 -22.09438133]
[579.89367676 -7.50947046]
[582.94909668 7.17544937]
[585.55523682 21.94671822]
[587.70971680 36.79059601]
[589.41052246 51.69327164]
[590.65606689 66.64088440]
[591.44519043 81.61952972]
[591.77709961 96.61526489]
[591.65161133 111.61415863]
[591.06872559 126.60224915]
[590.02905273 141.56558228]
[588.53356934 156.49026489]
[586.58361816 171.36238098]
[584.18103027 186.16812134]
[581.32800293 200.89370728]
[578.02728271 215.52545166]
[574.28186035 230.04971313]
[570.09521484 244.45300293]
[565.47131348 258.72192383]
[560.41442871 272.84317017]
[554.92919922 286.80364990]
[549.02081299 300.59036255]
[542.69476318 314.19049072]
[535.95684814 327.59136963]
[528.81341553 340.78051758]
[521.27105713 353.74569702]
[513.33685303 366.47482300]
[505.01815796 378.95605469]
[496.32269287 391.17782593]
[487.25854492 403.12872314]
[477.83416748 414.79760742]
[468.05831909 426.17370605]
[457.94006348 437.24633789]
[447.48886108 448.00527954]
[436.71441650 458.44052124]
[425.62673950 468.54229736]
[414.23617554 478.30123901]
[402.55328369 487.70828247]
[390.58892822 496.75466919]
[378.35427856 505.43197632]
[365.86068726 513.73217773]
[353.11978149 521.64746094]
[340.14343262 529.17053223]
[326.94369507 536.29437256]
[313.53283691 543.01232910]
[299.92333984 549.31823730]
[286.12786865 555.20611572]
[272.15924072 560.67059326]
[258.03048706 565.70654297]
[243.75471497 570.30926514]
[229.34523010 574.47442627]
[214.81541443 578.19830322]
[200.17880249 581.47729492]
[185.44898987 584.30847168]
[170.63970947 586.68902588]
[155.76469421 588.61694336]
[140.83781433 590.09027100]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[122 143]
[123 142]
[124 141]
[125 140]
] def

init

% Start Annotations
122 143 0.16 1 colorpair
123 142 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
122 cmark
123 142 1 gmark
142 cmark
124 141 3 gmark
124 cmark
141 cmark
125 140 4 gmark
125 cmark
140 cmark

% End Annotations
showpage
end
%%EOF
