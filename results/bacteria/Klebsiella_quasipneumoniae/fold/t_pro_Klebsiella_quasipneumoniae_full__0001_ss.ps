%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 06:31:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___________________________________AGGC_AGGAAUGCCGCAAAAGUAUCU______GUUGUUUGGC__UUAAUAG_UGAUUUGCUUCACU_AUUUUAUUAUUGACCUGGAUGGUUCGUGAUUCGCUAUGUGAAUUACAGAUCAGGCAGGGAAAUAUUGAGCUGGUGG__CAUUCUUAGCCUGUGAUAUUAAA__A_________________________________________________\
_____________________________________________________________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[44.90301895 753.19390869]
[33.01170349 752.08172607]
[21.14262199 750.75299072]
[9.29971981 749.20831299]
[-2.51307535 747.44812012]
[-14.29184055 745.47296143]
[-26.03266525 743.28356934]
[-37.73165512 740.88061523]
[-49.38492203 738.26495361]
[-60.98859787 735.43737793]
[-72.53883362 732.39886475]
[-84.03179932 729.15045166]
[-95.46366882 725.69317627]
[-106.83065796 722.02819824]
[-118.12898254 718.15673828]
[-129.35490417 714.08001709]
[-140.50468445 709.79956055]
[-151.57463074 705.31658936]
[-162.56106567 700.63269043]
[-173.46034241 695.74945068]
[-184.26884460 690.66845703]
[-194.98298645 685.39135742]
[-205.59919739 679.91992188]
[-216.11396790 674.25598145]
[-226.52380371 668.40142822]
[-236.82524109 662.35821533]
[-247.01487732 656.12829590]
[-257.08932495 649.71374512]
[-267.04522705 643.11676025]
[-276.87927246 636.33941650]
[-286.58822632 629.38409424]
[-296.16885376 622.25305176]
[-305.61795044 614.94860840]
[-314.93240356 607.47320557]
[-324.10913086 599.82940674]
[-333.14508057 592.01965332]
[-342.03723145 584.04656982]
[-350.78265381 575.91278076]
[-359.37844849 567.62103271]
[-367.82171631 559.17407227]
[-376.10971069 550.57464600]
[-384.23965454 541.82568359]
[-392.20886230 532.93005371]
[-400.01464844 523.89068604]
[-407.65447998 514.71063232]
[-415.12579346 505.39291382]
[-422.42608643 495.94061279]
[-429.55297852 486.35687256]
[-436.50405884 476.64486694]
[-443.27706909 466.80786133]
[-449.86972046 456.84909058]
[-456.27984619 446.77185059]
[-462.50531006 436.57949829]
[-468.54403687 426.27539062]
[-474.39407349 415.86300659]
[-480.05340576 405.34576416]
[-485.52017212 394.72717285]
[-490.79260254 384.01071167]
[-495.86889648 373.20001221]
[-500.74737549 362.29858398]
[-514.56195068 368.14306641]
[-500.90863037 374.35482788]
[-495.57174683 388.37332153]
[-501.63745117 402.09219360]
[-515.59820557 407.57836914]
[-529.38098145 401.65945435]
[-535.01586914 387.75808716]
[-529.24371338 373.91217041]
[-537.30627441 387.78207397]
[-553.19757080 389.98358154]
[-564.72711182 378.82791138]
[-563.05047607 362.87271118]
[-549.45373535 354.35745239]
[-534.36724854 359.81433105]
[-520.40643311 354.32849121]
[-506.59185791 348.48403931]
[-511.54339600 336.03527832]
[-516.23950195 323.48794556]
[-520.67816162 310.84729004]
[-524.85760498 298.11853027]
[-528.77600098 285.30700684]
[-532.43182373 272.41809082]
[-535.82342529 259.45715332]
[-538.94940186 246.42961121]
[-541.80853271 233.34089661]
[-544.39953613 220.19648743]
[-546.72137451 207.00187683]
[-548.77313232 193.76257324]
[-550.55383301 180.48410034]
[-552.06280518 167.17199707]
[-553.29937744 153.83184814]
[-554.26312256 140.46920776]
[-554.95355225 127.08966827]
[-555.37036133 113.69880676]
[-555.51342773 100.30223083]
[-555.38275146 86.90551758]
[-554.97821045 73.51428223]
[-554.30017090 60.13410950]
[-553.34875488 46.77058792]
[-552.12445068 33.42930222]
[-550.62774658 20.11582184]
[-548.85931396 6.83570957]
[-546.81982422 -6.40548658]
[-544.51013184 -19.60223579]
[-541.93121338 -32.74902725]
[-539.08416748 -45.84036636]
[-535.97015381 -58.87078857]
[-532.59051514 -71.83484650]
[-528.94665527 -84.72712708]
[-525.04003906 -97.54225159]
[-520.87231445 -110.27485657]
[-516.44531250 -122.91962433]
[-511.76077271 -135.47128296]
[-506.82070923 -147.92457581]
[-501.62716675 -160.27430725]
[-496.18234253 -172.51533508]
[-490.48846436 -184.64251709]
[-484.54791260 -196.65080261]
[-478.36322021 -208.53517151]
[-471.93695068 -220.29066467]
[-465.27175903 -231.91238403]
[-458.37045288 -243.39544678]
[-451.23590088 -254.73506165]
[-443.87109375 -265.92651367]
[-436.27911377 -276.96511841]
[-428.46310425 -287.84625244]
[-420.42639160 -298.56536865]
[-412.17224121 -309.11801147]
[-403.70419312 -319.49978638]
[-395.02572632 -329.70629883]
[-386.14050293 -339.73333740]
[-377.05218506 -349.57669067]
[-367.76461792 -359.23223877]
[-358.28164673 -368.69598389]
[-348.60723877 -377.96392822]
[-338.74548340 -387.03222656]
[-328.70040894 -395.89709473]
[-318.47628784 -404.55480957]
[-308.07739258 -413.00177002]
[-297.50799561 -421.23446655]
[-286.77258301 -429.24942017]
[-275.87557983 -437.04330444]
[-264.82159424 -444.61285400]
[-253.61523438 -451.95492554]
[-242.26113892 -459.06643677]
[-230.76408386 -465.94442749]
[-219.12887573 -472.58599854]
[-207.36035156 -478.98840332]
[-195.46345520 -485.14898682]
[-183.44313049 -491.06512451]
[-171.30441284 -496.73434448]
[-159.05236816 -502.15432739]
[-146.69210815 -507.32278442]
[-134.22880554 -512.23754883]
[-121.66767120 -516.89660645]
[-109.01393890 -521.29797363]
[-96.27289581 -525.43975830]
[-100.60013580 -539.80206299]
[-104.92736816 -554.16436768]
[-120.01269531 -556.48718262]
[-132.59138489 -565.13238525]
[-140.16593933 -578.38342285]
[-141.23240662 -593.60919189]
[-135.57907104 -607.78674316]
[-124.32836914 -618.10101318]
[-109.71416473 -622.50415039]
[-94.63809967 -620.12194824]
[-82.09355164 -611.42724609]
[-74.57124329 -598.14654541]
[-73.56473541 -582.91662598]
[-79.27386475 -568.76147461]
[-90.56509399 -558.49157715]
[-86.23785400 -544.12927246]
[-81.91062164 -529.76702881]
[-19.07998848 -544.60681152]
[44.90567398 -553.19415283]
[109.42572784 -555.44573975]
[109.81300354 -570.44073486]
[107.04415131 -576.32287598]
[107.53761292 -581.89825439]
[110.33821869 -585.68994141]
[98.68128967 -596.11346436]
[96.50285339 -611.59857178]
[104.83150482 -624.83361816]
[119.73471832 -629.56951904]
[134.17562866 -623.57000732]
[141.33570862 -609.66796875]
[137.83416748 -594.42742920]
[125.32433319 -585.04455566]
[124.80800629 -570.05346680]
[124.42073059 -555.05847168]
[136.35110474 -554.50482178]
[148.26942444 -553.73394775]
[160.17170715 -552.74597168]
[172.05401611 -551.54138184]
[183.91241455 -550.12054443]
[195.74296570 -548.48382568]
[207.54171753 -546.63183594]
[219.30477905 -544.56524658]
[231.02822876 -542.28466797]
[242.70819092 -539.79089355]
[254.34077454 -537.08471680]
[265.92211914 -534.16705322]
[277.44839478 -531.03887939]
[288.91577148 -527.70123291]
[300.32043457 -524.15521240]
[311.65859985 -520.40197754]
[322.92648315 -516.44281006]
[334.12039185 -512.27905273]
[345.23657227 -507.91198730]
[356.27133179 -503.34317017]
[367.22103882 -498.57403564]
[378.08203125 -493.60623169]
[388.85073853 -488.44134521]
[399.52352905 -483.08114624]
[410.09689331 -477.52740479]
[420.56732178 -471.78192139]
[430.93136597 -465.84664917]
[441.18551636 -459.72351074]
[451.32641602 -453.41461182]
[461.35070801 -446.92196655]
[471.25503540 -440.24777222]
[481.03613281 -433.39425659]
[490.69073486 -426.36367798]
[500.21563721 -419.15835571]
[509.60769653 -411.78073120]
[518.86376953 -404.23318481]
[527.98083496 -396.51824951]
[536.95581055 -388.63851929]
[545.78570557 -380.59655762]
[554.46765137 -372.39508057]
[562.99871826 -364.03677368]
[571.37615967 -355.52444458]
[579.59704590 -346.86090088]
[587.65875244 -338.04901123]
[595.55859375 -329.09170532]
[603.29388428 -319.99194336]
[610.86212158 -310.75280762]
[618.26080322 -301.37728882]
[625.48742676 -291.86853027]
[632.53961182 -282.22970581]
[639.41503906 -272.46398926]
[646.11138916 -262.57461548]
[652.62640381 -252.56491089]
[658.95800781 -242.43815613]
[665.10412598 -232.19772339]
[671.06256104 -221.84703064]
[676.83148193 -211.38948059]
[682.40893555 -200.82858276]
[687.79302979 -190.16780090]
[692.98199463 -179.41072083]
[697.97412109 -168.56086731]
[702.76776123 -157.62187195]
[707.36126709 -146.59736633]
[711.75317383 -135.49099731]
[715.94201660 -124.30644226]
[719.92639160 -113.04743958]
[723.70501709 -101.71771240]
[727.27655029 -90.32102966]
[730.63989258 -78.86116028]
[733.79388428 -67.34191895]
[736.73742676 -55.76713181]
[739.46966553 -44.14063263]
[741.98962402 -32.46628571]
[744.29644775 -20.74796677]
[746.38940430 -8.98956585]
[748.26776123 2.80501556]
[749.93096924 14.63186073]
[751.37841797 26.48704529]
[752.60961914 38.36663437]
[753.62420654 50.26667786]
[754.42175293 62.18323517]
[755.00213623 74.11234283]
[755.36505127 86.05004883]
[755.51043701 97.99237823]
[755.43823242 109.93537903]
[755.14843750 121.87508392]
[754.64117432 133.80752563]
[753.91656494 145.72874451]
[752.97491455 157.63478088]
[751.81646729 169.52168274]
[750.44165039 181.38551331]
[748.85095215 193.22232056]
[747.04486084 205.02818298]
[745.02398682 216.79919434]
[742.78894043 228.53141785]
[740.34057617 240.22097778]
[737.67962646 251.86399841]
[734.80700684 263.45660400]
[731.72363281 274.99493408]
[728.43054199 286.47518921]
[724.92889404 297.89355469]
[721.21978760 309.24621582]
[717.30444336 320.52941895]
[713.18414307 331.73941040]
[708.86035156 342.87246704]
[704.33447266 353.92489624]
[699.60791016 364.89306641]
[694.68231201 375.77328491]
[689.55932617 386.56195068]
[684.24066162 397.25549316]
[678.72802734 407.85037231]
[673.02325439 418.34304810]
[667.12829590 428.73007202]
[661.04510498 439.00793457]
[654.77563477 449.17327881]
[648.32202148 459.22271729]
[641.68634033 469.15292358]
[634.87091064 478.96057129]
[627.87786865 488.64242554]
[620.70965576 498.19525146]
[613.36853027 507.61590576]
[605.85699463 516.90124512]
[598.17761230 526.04821777]
[590.33276367 535.05371094]
[582.32519531 543.91485596]
[574.15753174 552.62860107]
[565.83239746 561.19207764]
[557.35272217 569.60247803]
[548.72119141 577.85699463]
[539.94067383 585.95288086]
[531.01409912 593.88745117]
[521.94451904 601.65808105]
[512.73480225 609.26214600]
[503.38815308 616.69720459]
[493.90753174 623.96069336]
[484.29617310 631.05029297]
[474.55725098 637.96362305]
[464.69400024 644.69830322]
[454.70965576 651.25225830]
[444.60760498 657.62316895]
[434.39114380 663.80895996]
[424.06365967 669.80761719]
[413.62860107 675.61712646]
[403.08944702 681.23553467]
[392.44970703 686.66101074]
[381.71286011 691.89178467]
[370.88247681 696.92602539]
[359.96218872 701.76208496]
[348.95562744 706.39843750]
[337.86639404 710.83349609]
[326.69821167 715.06579590]
[315.45477295 719.09387207]
[304.13983154 722.91644287]
[292.75708008 726.53228760]
[281.31039429 729.94006348]
[269.80349731 733.13879395]
[258.24023438 736.12738037]
[246.62443542 738.90472412]
[234.95996094 741.47003174]
[223.25070190 743.82238770]
[211.50051880 745.96099854]
[199.71331787 747.88519287]
[187.89303589 749.59429932]
[176.04356384 751.08782959]
[164.16885376 752.36517334]
[152.27282715 753.42596436]
[140.35946655 754.26989746]
[128.43270874 754.89660645]
[116.49649811 755.30590820]
[104.55482483 755.49768066]
[92.61163330 755.47186279]
[80.67089081 755.22845459]
[68.73657227 754.76757812]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[60 76]
[61 75]
[68 74]
[157 174]
[158 173]
[159 172]
[177 191]
[178 190]
[181 189]
] def

init

% Start Annotations
61 75 0.16 1 colorpair
68 74 0.48 1 colorpair
158 173 0.16 1 colorpair
159 172 0.32 1 colorpair
177 191 0.32 1 colorpair
178 190 0.0 0.2 colorpair
181 189 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
60 76 14 gmark
60 cmark
76 cmark
61 cmark
68 cmark
74 cmark
157 174 8 gmark
157 cmark
174 cmark
158 cmark
173 cmark
159 cmark
172 cmark
177 cmark
191 cmark
178 190 2 gmark

% End Annotations
showpage
end
%%EOF
