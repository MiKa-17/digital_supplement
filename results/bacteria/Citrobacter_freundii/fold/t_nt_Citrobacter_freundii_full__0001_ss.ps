%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 17:13:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___________________________________________________________________________________________________________________________________________________________________AUGACGCUCGUG_____A___GGCAUCGCUUUUC______GCAUGAUGAAACGCAUC_AUUGUACCGCUGGCAC_____UCUUAGCCGCUAG\
AUUGGGAACUGAUUAA_U__________________________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[165.60662842 851.53625488]
[150.65147400 852.69207764]
[135.67630005 853.55035400]
[120.68701935 854.11071777]
[105.68955994 854.37298584]
[90.68984985 854.33697510]
[75.69382477 854.00274658]
[60.70740128 853.37048340]
[45.73651886 852.44030762]
[30.78708458 851.21270752]
[15.86501598 849.68811035]
[0.97620761 847.86712646]
[-13.87345219 845.75048828]
[-28.67809296 843.33905029]
[-43.43186188 840.63366699]
[-58.12892914 837.63555908]
[-72.76348114 834.34576416]
[-87.32972717 830.76568604]
[-101.82191467 826.89672852]
[-116.23432159 822.74041748]
[-130.56123352 818.29833984]
[-144.79699707 813.57226562]
[-158.93598938 808.56414795]
[-172.97261047 803.27581787]
[-186.90132141 797.70953369]
[-200.71659851 791.86737061]
[-214.41299438 785.75170898]
[-227.98507690 779.36492920]
[-241.42750549 772.70959473]
[-254.73495483 765.78833008]
[-267.90216064 758.60382080]
[-280.92391968 751.15893555]
[-293.79507446 743.45660400]
[-306.51055908 735.49987793]
[-319.06533813 727.29193115]
[-331.45443726 718.83599854]
[-343.67297363 710.13543701]
[-355.71609497 701.19366455]
[-367.57907104 692.01416016]
[-379.25717163 682.60064697]
[-390.74581909 672.95678711]
[-402.04043579 663.08642578]
[-413.13659668 652.99346924]
[-424.02987671 642.68188477]
[-434.71600342 632.15576172]
[-445.19070435 621.41925049]
[-455.44989014 610.47662354]
[-465.48950195 599.33215332]
[-475.30554199 587.99029541]
[-484.89413452 576.45544434]
[-494.25149536 564.73229980]
[-503.37390137 552.82543945]
[-512.25781250 540.73950195]
[-520.89965820 528.47937012]
[-529.29602051 516.04986572]
[-537.44360352 503.45581055]
[-545.33917236 490.70230103]
[-552.97961426 477.79431152]
[-560.36193848 464.73696899]
[-567.48315430 451.53543091]
[-574.34051514 438.19491577]
[-580.93127441 424.72070312]
[-587.25286865 411.11810303]
[-593.30273438 397.39251709]
[-599.07849121 383.54937744]
[-604.57788086 369.59411621]
[-609.79870605 355.53228760]
[-614.73895264 341.36941528]
[-619.39660645 327.11111450]
[-623.76989746 312.76306152]
[-627.85699463 298.33087158]
[-631.65637207 283.82028198]
[-635.16650391 269.23699951]
[-638.38598633 254.58683777]
[-641.31353760 239.87556458]
[-643.94805908 225.10897827]
[-646.28845215 210.29292297]
[-648.33380127 195.43328857]
[-650.08325195 180.53590393]
[-651.53625488 165.60668945]
[-652.69207764 150.65153503]
[-653.55035400 135.67636108]
[-654.11071777 120.68708038]
[-654.37298584 105.68962097]
[-654.33697510 90.68991089]
[-654.00274658 75.69388580]
[-653.37048340 60.70746613]
[-652.44030762 45.73657990]
[-651.21270752 30.78714752]
[-649.68811035 15.86507702]
[-647.86712646 0.97626907]
[-645.75048828 -13.87339115]
[-643.33905029 -28.67803192]
[-640.63372803 -43.43180084]
[-637.63555908 -58.12886810]
[-634.34582520 -72.76342010]
[-630.76574707 -87.32966614]
[-626.89672852 -101.82186127]
[-622.74041748 -116.23426056]
[-618.29833984 -130.56117249]
[-613.57226562 -144.79695129]
[-608.56414795 -158.93592834]
[-603.27587891 -172.97254944]
[-597.70953369 -186.90126038]
[-591.86743164 -200.71653748]
[-585.75177002 -214.41293335]
[-579.36499023 -227.98503113]
[-572.70965576 -241.42745972]
[-565.78833008 -254.73490906]
[-558.60382080 -267.90209961]
[-551.15893555 -280.92385864]
[-543.45660400 -293.79504395]
[-535.49993896 -306.51052856]
[-527.29199219 -319.06530762]
[-518.83605957 -331.45440674]
[-510.13546753 -343.67291260]
[-501.19369507 -355.71603394]
[-492.01422119 -367.57901001]
[-482.60070801 -379.25711060]
[-472.95684814 -390.74575806]
[-463.08648682 -402.04040527]
[-452.99353027 -413.13653564]
[-442.68194580 -424.02984619]
[-432.15582275 -434.71594238]
[-421.41931152 -445.19067383]
[-410.47665405 -455.44985962]
[-399.33218384 -465.48947144]
[-387.99032593 -475.30548096]
[-376.45550537 -484.89407349]
[-364.73236084 -494.25143433]
[-352.82546997 -503.37387085]
[-340.73959351 -512.25775146]
[-328.47943115 -520.89959717]
[-316.04989624 -529.29595947]
[-303.45587158 -537.44360352]
[-290.70236206 -545.33917236]
[-277.79437256 -552.97961426]
[-264.73703003 -560.36193848]
[-251.53549194 -567.48315430]
[-238.19497681 -574.34051514]
[-224.72076416 -580.93127441]
[-211.11817932 -587.25280762]
[-197.39259338 -593.30267334]
[-183.54942322 -599.07843018]
[-169.59417725 -604.57781982]
[-155.53233337 -609.79870605]
[-141.36947632 -614.73895264]
[-127.11118317 -619.39660645]
[-112.76311493 -623.76983643]
[-98.33093262 -627.85699463]
[-83.82033539 -631.65637207]
[-69.23707581 -635.16650391]
[-54.58690262 -638.38598633]
[-39.87561798 -641.31353760]
[-25.10903549 -643.94805908]
[-10.29299164 -646.28845215]
[4.56665611 -648.33380127]
[19.46403122 -650.08325195]
[34.39324570 -651.53625488]
[49.34840012 -652.69207764]
[64.32357788 -653.55035400]
[79.31285858 -654.11071777]
[94.31031799 -654.37298584]
[109.31002808 -654.33697510]
[124.30605316 -654.00274658]
[139.29248047 -653.37048340]
[154.26335144 -652.44030762]
[169.21278381 -651.21270752]
[184.13485718 -649.68811035]
[199.02366638 -647.86712646]
[213.87333679 -645.75048828]
[228.67797852 -643.33905029]
[243.43174744 -640.63372803]
[258.12881470 -637.63555908]
[272.76336670 -634.34582520]
[287.32962036 -630.76574707]
[301.82180786 -626.89678955]
[316.23419189 -622.74041748]
[330.56112671 -618.29833984]
[344.79687500 -613.57232666]
[358.93588257 -608.56414795]
[372.97250366 -603.27587891]
[386.90121460 -597.70959473]
[400.71649170 -591.86743164]
[414.41287231 -585.75177002]
[427.98495483 -579.36499023]
[441.42739868 -572.70965576]
[454.73483276 -565.78839111]
[467.90206909 -558.60388184]
[480.92382812 -551.15899658]
[493.79498291 -543.45666504]
[506.51046753 -535.49993896]
[519.06524658 -527.29199219]
[531.45434570 -518.83612061]
[543.67285156 -510.13549805]
[555.71600342 -501.19372559]
[567.57897949 -492.01425171]
[579.25708008 -482.60073853]
[590.74572754 -472.95687866]
[602.04034424 -463.08654785]
[613.13647461 -452.99356079]
[624.02978516 -442.68197632]
[634.71588135 -432.15585327]
[645.19061279 -421.41934204]
[655.44982910 -410.47668457]
[665.48944092 -399.33221436]
[675.30548096 -387.99035645]
[684.89404297 -376.45556641]
[694.25140381 -364.73242188]
[703.37384033 -352.82553101]
[712.25775146 -340.73962402]
[720.89959717 -328.47949219]
[729.29595947 -316.04995728]
[737.44354248 -303.45593262]
[745.33911133 -290.70239258]
[752.97955322 -277.79443359]
[766.03710938 -285.17684937]
[779.09466553 -292.55926514]
[774.56622314 -306.91845703]
[773.12249756 -321.90545654]
[774.82672119 -336.86502075]
[779.60437012 -351.14328003]
[787.24652100 -364.11596680]
[797.41918945 -375.21600342]
[809.67761230 -383.95816040]
[823.48590088 -389.96023560]
[838.24041748 -392.95986938]
[853.29614258 -392.82592773]
[867.99499512 -389.56427002]
[881.69427490 -383.31744385]
[893.79522705 -374.35858154]
[903.76873779 -363.07931519]
[911.17889404 -349.97268677]
[915.70172119 -335.61172485]
[917.13952637 -320.62417603]
[915.42944336 -305.66525269]
[910.64617920 -291.38891602]
[902.99890137 -278.41921997]
[892.82189941 -267.32318115]
[880.56005859 -258.58584595]
[866.74938965 -252.58918762]
[851.99371338 -249.59536743]
[836.93798828 -249.73522949]
[822.24047852 -253.00268555]
[808.54364014 -259.25488281]
[796.44622803 -268.21850586]
[786.47711182 -279.50170898]
[773.41955566 -272.11929321]
[760.36199951 -264.73687744]
[767.48321533 -251.53532410]
[774.34057617 -238.19480896]
[780.93133545 -224.72059631]
[787.25286865 -211.11801147]
[793.30273438 -197.39241028]
[799.07849121 -183.54925537]
[804.57794189 -169.59399414]
[809.79876709 -155.53215027]
[814.73901367 -141.36929321]
[819.39666748 -127.11100769]
[823.76989746 -112.76293945]
[827.85705566 -98.33074951]
[831.65643311 -83.82015991]
[835.16650391 -69.23689270]
[838.38598633 -54.58672333]
[841.31359863 -39.87543488]
[843.94805908 -25.10885239]
[846.28845215 -10.29280758]
[848.33380127 4.56684065]
[850.08331299 19.46421623]
[851.53625488 34.39343262]
[852.69207764 49.34858322]
[853.55035400 64.32376099]
[854.11071777 79.31304169]
[854.37298584 94.31050110]
[854.33697510 109.31021118]
[854.00274658 124.30623627]
[853.37048340 139.29266357]
[852.44030762 154.26354980]
[851.21270752 169.21298218]
[849.68811035 184.13504028]
[847.86712646 199.02384949]
[845.75048828 213.87351990]
[843.33898926 228.67816162]
[840.63366699 243.43193054]
[837.63555908 258.12899780]
[834.34576416 272.76354980]
[830.76568604 287.32977295]
[826.89672852 301.82199097]
[822.74035645 316.23437500]
[818.29827881 330.56130981]
[813.57226562 344.79705811]
[808.56408691 358.93603516]
[803.27581787 372.97265625]
[797.70953369 386.90136719]
[791.86737061 400.71664429]
[785.75170898 414.41305542]
[779.36492920 427.98513794]
[772.70959473 441.42755127]
[765.78826904 454.73501587]
[758.60375977 467.90222168]
[751.15887451 480.92398071]
[743.45654297 493.79513550]
[735.49987793 506.51062012]
[727.29193115 519.06536865]
[718.83599854 531.45446777]
[710.13537598 543.67303467]
[701.19360352 555.71612549]
[692.01416016 567.57910156]
[682.60058594 579.25720215]
[672.95678711 590.74584961]
[663.08642578 602.04046631]
[652.99346924 613.13665771]
[642.68188477 624.02990723]
[632.15570068 634.71606445]
[621.41918945 645.19073486]
[610.47656250 655.44995117]
[599.33209229 665.48956299]
[587.99023438 675.30560303]
[576.45544434 684.89416504]
[564.73223877 694.25152588]
[552.82537842 703.37396240]
[540.73950195 712.25781250]
[528.47930908 720.89965820]
[516.04980469 729.29608154]
[503.45578003 737.44366455]
[490.70223999 745.33923340]
[477.79425049 752.97967529]
[464.73690796 760.36199951]
[451.53536987 767.48321533]
[438.19485474 774.34057617]
[424.72064209 780.93133545]
[411.11807251 787.25286865]
[397.39248657 793.30273438]
[383.54931641 799.07849121]
[369.59405518 804.57788086]
[355.53222656 809.79870605]
[341.36935425 814.73895264]
[327.11105347 819.39660645]
[312.76300049 823.76989746]
[298.33081055 827.85699463]
[283.82022095 831.65637207]
[269.23693848 835.16650391]
[254.58677673 838.38598633]
[239.87550354 841.31353760]
[225.10891724 843.94805908]
[210.29286194 846.28845215]
[195.43322754 848.33380127]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[216 249]
[217 248]
[218 247]
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
216 249 6 gmark
216 cmark
249 cmark
217 248 42 gmark
217 cmark
248 cmark
218 247 37 gmark
218 cmark
247 cmark

% End Annotations
showpage
end
%%EOF
