%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 17:38:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
________________G__U__A_A____U_CC__A_ACUCCUGGUGU___CUUACUGAACCCGUAUACUUAUUGCG____________AUGAGCGAAAACAGUGUG_UUGGCGGCCUUCAUCA_UCACGCU_C_G__AA__A_C_C_C__CG_CGGGG_____U_____________________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50450134 92.09726715]
[62.52522278 91.29208374]
[47.57295990 90.08502197]
[32.65849304 88.47695923]
[17.79257774 86.46905518]
[2.98592877 84.06275177]
[-11.75077820 81.25978851]
[-26.40691948 78.06217957]
[-40.97192764 74.47223663]
[-55.43530273 70.49255371]
[-69.78662109 66.12598419]
[-84.01552582 61.37569046]
[-98.11177063 56.24508667]
[-112.06518555 50.73788071]
[-125.86571503 44.85803604]
[-139.50340271 38.60979462]
[-152.96842957 31.99765968]
[-166.25108337 25.02640152]
[-179.34176636 17.70104218]
[-192.23107910 10.02686596]
[-204.90969849 2.00940299]
[-217.36849976 -6.34556532]
[-229.59848022 -15.03201580]
[-241.59085083 -24.04368591]
[-253.33695984 -33.37407684]
[-264.82833862 -43.01646805]
[-276.05667114 -52.96390152]
[-287.01388550 -63.20920563]
[-297.69210815 -73.74499512]
[-308.08361816 -84.56368256]
[-318.18090820 -95.65745544]
[-327.97671509 -107.01832581]
[-337.46395874 -118.63809204]
[-346.63583374 -130.50839233]
[-355.48571777 -142.62065125]
[-364.00720215 -154.96615601]
[-372.19418335 -167.53598022]
[-380.04071045 -180.32109070]
[-387.54116821 -193.31224060]
[-394.69015503 -206.50009155]
[-401.48248291 -219.87512207]
[-407.91326904 -233.42770386]
[-413.97787476 -247.14804077]
[-419.67190552 -261.02624512]
[-424.99133301 -275.05233765]
[-429.93222046 -289.21618652]
[-434.49108887 -303.50756836]
[-438.66461182 -317.91622925]
[-442.44979858 -332.43173218]
[-445.84387207 -347.04360962]
[-448.84445190 -361.74136353]
[-451.44934082 -376.51434326]
[-453.65667725 -391.35195923]
[-455.46481323 -406.24349976]
[-456.87252808 -421.17822266]
[-457.87875366 -436.14532471]
[-458.48278809 -451.13406372]
[-458.68420410 -466.13363647]
[-458.48281860 -481.13317871]
[-457.87878418 -496.12191772]
[-456.87255859 -511.08905029]
[-455.46487427 -526.02374268]
[-453.65670776 -540.91528320]
[-451.44940186 -555.75286865]
[-448.84454346 -570.52587891]
[-445.84396362 -585.22363281]
[-442.44989014 -599.83557129]
[-438.66473389 -614.35101318]
[-434.49121094 -628.75970459]
[-429.93237305 -643.05108643]
[-424.99148560 -657.21490479]
[-419.67208862 -671.24102783]
[-413.97802734 -685.11926270]
[-407.91345215 -698.83959961]
[-401.48266602 -712.39215088]
[-394.69036865 -725.76721191]
[-387.54141235 -738.95507812]
[-380.04095459 -751.94622803]
[-372.19442749 -764.73132324]
[-364.00744629 -777.30114746]
[-355.48599243 -789.64666748]
[-346.63610840 -801.75897217]
[-337.46426392 -813.62927246]
[-327.97698975 -825.24902344]
[-318.18121338 -836.60992432]
[-308.08392334 -847.70367432]
[-297.69244385 -858.52239990]
[-287.01422119 -869.05816650]
[-276.05700684 -879.30346680]
[-264.82867432 -889.25091553]
[-253.33731079 -898.89331055]
[-241.59121704 -908.22375488]
[-229.59884644 -917.23541260]
[-217.36886597 -925.92187500]
[-204.91007996 -934.27685547]
[-192.23146057 -942.29431152]
[-179.34216309 -949.96850586]
[-166.25148010 -957.29388428]
[-152.96882629 -964.26513672]
[-139.50381470 -970.87731934]
[-125.86612701 -977.12554932]
[-112.06560516 -983.00543213]
[-98.11219788 -988.51263428]
[-84.01595306 -993.64324951]
[-69.78704834 -998.39355469]
[-55.43573761 -1002.76013184]
[-40.97236633 -1006.73980713]
[-26.40736008 -1010.32977295]
[-11.75122166 -1013.52740479]
[2.98548317 -1016.33038330]
[17.79212952 -1018.73669434]
[32.65804291 -1020.74462891]
[47.57250977 -1022.35266113]
[62.52476883 -1023.55975342]
[77.50405121 -1024.36499023]
[92.49954987 -1024.76770020]
[107.50045013 -1024.76770020]
[122.49594879 -1024.36499023]
[137.47523499 -1023.55975342]
[152.42749023 -1022.35266113]
[167.34194946 -1020.74462891]
[182.20787048 -1018.73669434]
[197.01451111 -1016.33038330]
[211.75122070 -1013.52740479]
[226.40736389 -1010.32977295]
[240.97236633 -1006.73980713]
[255.43574524 -1002.76013184]
[269.78704834 -998.39355469]
[284.01596069 -993.64324951]
[298.11218262 -988.51263428]
[312.06561279 -983.00543213]
[325.86611938 -977.12554932]
[339.50381470 -970.87731934]
[352.96884155 -964.26513672]
[366.25146484 -957.29388428]
[379.34216309 -949.96850586]
[392.23144531 -942.29431152]
[404.91006470 -934.27685547]
[417.36886597 -925.92187500]
[429.59884644 -917.23541260]
[441.59121704 -908.22375488]
[453.33731079 -898.89331055]
[464.82867432 -889.25091553]
[476.05700684 -879.30346680]
[487.01422119 -869.05816650]
[497.69244385 -858.52239990]
[508.08392334 -847.70367432]
[518.18121338 -836.60992432]
[527.97698975 -825.24902344]
[537.46423340 -813.62927246]
[546.63610840 -801.75897217]
[555.48596191 -789.64666748]
[564.00744629 -777.30114746]
[572.19439697 -764.73132324]
[580.04095459 -751.94622803]
[587.54138184 -738.95507812]
[594.69036865 -725.76721191]
[601.48266602 -712.39215088]
[607.91345215 -698.83959961]
[613.97802734 -685.11926270]
[619.67205811 -671.24102783]
[624.99145508 -657.21490479]
[629.93237305 -643.05108643]
[634.49121094 -628.75970459]
[638.66473389 -614.35101318]
[642.44989014 -599.83557129]
[645.84399414 -585.22363281]
[648.84454346 -570.52587891]
[651.44940186 -555.75286865]
[653.65673828 -540.91528320]
[655.46490479 -526.02374268]
[656.87255859 -511.08905029]
[657.87878418 -496.12191772]
[658.48278809 -481.13317871]
[658.68420410 -466.13363647]
[658.48278809 -451.13406372]
[657.87878418 -436.14532471]
[656.87255859 -421.17822266]
[655.46484375 -406.24349976]
[653.65667725 -391.35195923]
[651.44934082 -376.51434326]
[648.84448242 -361.74136353]
[645.84387207 -347.04360962]
[642.44976807 -332.43173218]
[638.66461182 -317.91622925]
[634.49108887 -303.50756836]
[629.93225098 -289.21618652]
[624.99133301 -275.05233765]
[619.67193604 -261.02624512]
[613.97784424 -247.14804077]
[607.91326904 -233.42770386]
[601.48248291 -219.87512207]
[594.69012451 -206.50009155]
[587.54119873 -193.31224060]
[580.04071045 -180.32109070]
[572.19415283 -167.53598022]
[564.00720215 -154.96615601]
[555.48571777 -142.62065125]
[546.63586426 -130.50839233]
[537.46398926 -118.63809204]
[527.97668457 -107.01832581]
[518.18090820 -95.65745544]
[508.08361816 -84.56368256]
[497.69210815 -73.74499512]
[487.01388550 -63.20920563]
[476.05667114 -52.96390152]
[464.82833862 -43.01646805]
[453.33697510 -33.37407684]
[441.59085083 -24.04368591]
[429.59848022 -15.03201580]
[417.36849976 -6.34556532]
[404.90969849 2.00940299]
[392.23107910 10.02686596]
[379.34176636 17.70104218]
[366.25106812 25.02640152]
[352.96844482 31.99765968]
[339.50341797 38.60979462]
[325.86572266 44.85803604]
[312.06518555 50.73788071]
[298.11178589 56.24508667]
[284.01553345 61.37569046]
[269.78662109 66.12598419]
[255.43530273 70.49255371]
[240.97192383 74.47223663]
[226.40692139 78.06217957]
[211.75077820 81.25978851]
[197.01406860 84.06275177]
[182.20742798 86.46905518]
[167.34150696 88.47695923]
[152.42704773 90.08502197]
[137.47477722 91.29208374]
[122.49549866 92.09726715]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
