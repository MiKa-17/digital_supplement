%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 17:38:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_________________________________________________________________________________________________________________________________________________________________________________________________________AGG__AUGAUGCUGGACUUCA_UCAUACUGAUC_CUACA_____CUCACUG___\
__CAGUAGCA____CCGCGGCUUACUGA_UGUCGCUGCGCAACAUGU_AA______________________GCA______________________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50189972 92.23821259]
[62.51065826 91.71470642]
[47.53083420 90.92964935]
[32.56699371 89.88327789]
[17.62369156 88.57591248]
[2.70548272 87.00794983]
[-12.18308926 85.17987061]
[-27.03748894 83.09222412]
[-41.85319138 80.74565125]
[-56.62568283 78.14086151]
[-71.35046387 75.27865601]
[-86.02305603 72.15990448]
[-100.63897705 68.78555298]
[-115.19378662 65.15663910]
[-129.68304443 61.27425766]
[-144.10234070 57.13959503]
[-158.44728088 52.75391006]
[-172.71348572 48.11854172]
[-186.89662170 43.23489761]
[-200.99237061 38.10446548]
[-214.99644470 32.72881317]
[-228.90455627 27.10957336]
[-242.71247864 21.24846077]
[-256.41601562 15.14725780]
[-270.01098633 8.80782604]
[-283.49322510 2.23209357]
[-296.85867310 -4.57793474]
[-310.10321045 -11.62018490]
[-323.22283936 -18.89251137]
[-336.21356201 -26.39270020]
[-349.07141113 -34.11846542]
[-361.79244995 -42.06745529]
[-374.37283325 -50.23724747]
[-386.80871582 -58.62535095]
[-399.09631348 -67.22921753]
[-411.23187256 -76.04621887]
[-423.21170044 -85.07366943]
[-435.03216553 -94.30882263]
[-446.68966675 -103.74887085]
[-458.18063354 -113.39092255]
[-469.50155640 -123.23205566]
[-480.64901733 -133.26927185]
[-491.61959839 -143.49951172]
[-502.40997314 -153.91964722]
[-513.01684570 -164.52651978]
[-523.43701172 -175.31687927]
[-533.66723633 -186.28746033]
[-543.70446777 -197.43492126]
[-553.54559326 -208.75585938]
[-563.18762207 -220.24681091]
[-572.62768555 -231.90429688]
[-581.86285400 -243.72476196]
[-590.89031982 -255.70458984]
[-599.70733643 -267.84014893]
[-608.31115723 -280.12774658]
[-616.69927979 -292.56362915]
[-624.86907959 -305.14401245]
[-632.81805420 -317.86505127]
[-640.54382324 -330.72286987]
[-648.04406738 -343.71359253]
[-655.31634521 -356.83322144]
[-662.35864258 -370.07775879]
[-669.16864014 -383.44320679]
[-675.74438477 -396.92547607]
[-682.08386230 -410.52041626]
[-688.18505859 -424.22393799]
[-694.04614258 -438.03189087]
[-699.66540527 -451.94000244]
[-705.04107666 -465.94406128]
[-710.17150879 -480.03979492]
[-715.05511475 -494.22293091]
[-719.69049072 -508.48913574]
[-724.07623291 -522.83410645]
[-728.21087646 -537.25335693]
[-732.09326172 -551.74261475]
[-735.72216797 -566.29742432]
[-739.09655762 -580.91333008]
[-742.21527100 -595.58593750]
[-745.07751465 -610.31072998]
[-747.68231201 -625.08319092]
[-750.02886963 -639.89892578]
[-752.11651611 -654.75329590]
[-753.94464111 -669.64190674]
[-755.51257324 -684.56011963]
[-756.81994629 -699.50341797]
[-757.86633301 -714.46722412]
[-758.65136719 -729.44708252]
[-759.17486572 -744.43829346]
[-759.43670654 -759.43640137]
[-759.43670654 -774.43676758]
[-759.17492676 -789.43487549]
[-758.65136719 -804.42614746]
[-757.86633301 -819.40594482]
[-756.81994629 -834.36981201]
[-755.51257324 -849.31311035]
[-753.94464111 -864.23132324]
[-752.11657715 -879.11987305]
[-750.02893066 -893.97430420]
[-747.68231201 -908.78997803]
[-745.07751465 -923.56250000]
[-742.21533203 -938.28723145]
[-739.09655762 -952.95983887]
[-735.72222900 -967.57574463]
[-732.09332275 -982.13055420]
[-728.21093750 -996.61981201]
[-724.07623291 -1011.03912354]
[-719.69055176 -1025.38403320]
[-715.05517578 -1039.65026855]
[-710.17156982 -1053.83337402]
[-705.04113770 -1067.92919922]
[-699.66546631 -1081.93322754]
[-694.04620361 -1095.84130859]
[-688.18511963 -1109.64929199]
[-682.08392334 -1123.35278320]
[-675.74450684 -1136.94775391]
[-669.16876221 -1150.43005371]
[-662.35870361 -1163.79541016]
[-655.31646729 -1177.04003906]
[-648.04412842 -1190.15966797]
[-640.54394531 -1203.15039062]
[-632.81817627 -1216.00817871]
[-624.86920166 -1228.72924805]
[-616.69940186 -1241.30957031]
[-608.31127930 -1253.74548340]
[-599.70739746 -1266.03308105]
[-590.89044189 -1278.16870117]
[-581.86297607 -1290.14843750]
[-572.62780762 -1301.96899414]
[-563.18774414 -1313.62646484]
[-553.54571533 -1325.11743164]
[-543.70458984 -1336.43835449]
[-533.66735840 -1347.58581543]
[-523.43713379 -1358.55639648]
[-513.01696777 -1369.34667969]
[-502.41009521 -1379.95361328]
[-491.61975098 -1390.37377930]
[-480.64916992 -1400.60400391]
[-469.50170898 -1410.64123535]
[-458.18075562 -1420.48229980]
[-446.68981934 -1430.12438965]
[-435.03231812 -1439.56445312]
[-423.21185303 -1448.79956055]
[-411.23202515 -1457.82702637]
[-399.09646606 -1466.64404297]
[-386.80886841 -1475.24792480]
[-374.37298584 -1483.63598633]
[-361.79260254 -1491.80578613]
[-349.07156372 -1499.75476074]
[-336.21371460 -1507.48059082]
[-323.22302246 -1514.98083496]
[-310.10339355 -1522.25305176]
[-296.85882568 -1529.29541016]
[-283.49340820 -1536.10534668]
[-270.01113892 -1542.68115234]
[-256.41616821 -1549.02050781]
[-242.71264648 -1555.12182617]
[-228.90472412 -1560.98291016]
[-214.99661255 -1566.60217285]
[-200.99255371 -1571.97778320]
[-186.89680481 -1577.10827637]
[-172.71366882 -1581.99182129]
[-158.44744873 -1586.62719727]
[-144.10252380 -1591.01293945]
[-129.68322754 -1595.14758301]
[-115.19396973 -1599.03002930]
[-100.63916779 -1602.65893555]
[-86.02323914 -1606.03320312]
[-71.35065460 -1609.15197754]
[-56.62587357 -1612.01416016]
[-41.85337830 -1614.61901855]
[-27.03767776 -1616.96557617]
[-12.18327808 -1619.05322266]
[2.70529294 -1620.88134766]
[17.62350082 -1622.44934082]
[32.56680298 -1623.75659180]
[47.53064346 -1624.80297852]
[62.51046753 -1625.58813477]
[77.50170898 -1626.11157227]
[92.49980927 -1626.37341309]
[107.50019073 -1626.37341309]
[122.49829102 -1626.11157227]
[137.48953247 -1625.58813477]
[152.46936035 -1624.80297852]
[167.43319702 -1623.75659180]
[182.37649536 -1622.44934082]
[197.29470825 -1620.88134766]
[212.18327332 -1619.05322266]
[227.03767395 -1616.96557617]
[241.85337830 -1614.61901855]
[256.62588501 -1612.01416016]
[271.35064697 -1609.15197754]
[286.02325439 -1606.03320312]
[300.63916016 -1602.65893555]
[315.19396973 -1599.03002930]
[329.68322754 -1595.14758301]
[344.10250854 -1591.01293945]
[358.44744873 -1586.62719727]
[372.71365356 -1581.99182129]
[386.89682007 -1577.10827637]
[400.99255371 -1571.97778320]
[414.99661255 -1566.60217285]
[428.90472412 -1560.98291016]
[442.71264648 -1555.12182617]
[456.41616821 -1549.02050781]
[470.01113892 -1542.68115234]
[483.49340820 -1536.10534668]
[496.85882568 -1529.29541016]
[510.10339355 -1522.25305176]
[523.22302246 -1514.98083496]
[536.21374512 -1507.48059082]
[549.07159424 -1499.75476074]
[561.79260254 -1491.80578613]
[574.37298584 -1483.63598633]
[586.80883789 -1475.24792480]
[599.09643555 -1466.64404297]
[611.23199463 -1457.82702637]
[623.21185303 -1448.79956055]
[635.03234863 -1439.56445312]
[646.68981934 -1430.12438965]
[658.18078613 -1420.48229980]
[669.50170898 -1410.64123535]
[680.64916992 -1400.60400391]
[691.61975098 -1390.37377930]
[702.41009521 -1379.95361328]
[713.01696777 -1369.34667969]
[723.43713379 -1358.55639648]
[733.66735840 -1347.58581543]
[743.70458984 -1336.43835449]
[753.54571533 -1325.11743164]
[763.18774414 -1313.62646484]
[772.62780762 -1301.96899414]
[781.86297607 -1290.14843750]
[790.89044189 -1278.16870117]
[799.70739746 -1266.03308105]
[808.31127930 -1253.74548340]
[816.69940186 -1241.30957031]
[824.86920166 -1228.72924805]
[832.81817627 -1216.00817871]
[840.54394531 -1203.15039062]
[848.04412842 -1190.15966797]
[855.31646729 -1177.04003906]
[862.35870361 -1163.79541016]
[869.16876221 -1150.43005371]
[875.74450684 -1136.94775391]
[882.08392334 -1123.35278320]
[888.18511963 -1109.64929199]
[894.04620361 -1095.84130859]
[899.66546631 -1081.93322754]
[905.04113770 -1067.92919922]
[910.17156982 -1053.83337402]
[915.05517578 -1039.65026855]
[919.69055176 -1025.38403320]
[924.07623291 -1011.03912354]
[928.21093750 -996.61981201]
[932.09332275 -982.13055420]
[935.72222900 -967.57574463]
[939.09655762 -952.95983887]
[942.21533203 -938.28723145]
[945.07751465 -923.56250000]
[947.68231201 -908.78997803]
[950.02893066 -893.97430420]
[952.11657715 -879.11987305]
[953.94464111 -864.23132324]
[955.51257324 -849.31311035]
[956.81994629 -834.36981201]
[957.86633301 -819.40594482]
[958.65136719 -804.42614746]
[959.17492676 -789.43487549]
[959.43670654 -774.43676758]
[959.43670654 -759.43640137]
[959.17486572 -744.43829346]
[958.65136719 -729.44708252]
[957.86633301 -714.46722412]
[956.81994629 -699.50341797]
[955.51257324 -684.56011963]
[953.94464111 -669.64190674]
[952.11651611 -654.75329590]
[950.02886963 -639.89892578]
[947.68231201 -625.08319092]
[945.07751465 -610.31072998]
[942.21527100 -595.58593750]
[939.09655762 -580.91333008]
[935.72216797 -566.29742432]
[932.09326172 -551.74261475]
[928.21087646 -537.25335693]
[924.07623291 -522.83410645]
[919.69049072 -508.48913574]
[915.05511475 -494.22293091]
[910.17150879 -480.03979492]
[905.04107666 -465.94406128]
[899.66540527 -451.94000244]
[894.04614258 -438.03189087]
[888.18505859 -424.22393799]
[882.08386230 -410.52041626]
[875.74438477 -396.92547607]
[869.16864014 -383.44320679]
[862.35864258 -370.07775879]
[855.31634521 -356.83322144]
[848.04406738 -343.71359253]
[840.54382324 -330.72286987]
[832.81805420 -317.86505127]
[824.86907959 -305.14401245]
[816.69927979 -292.56362915]
[808.31115723 -280.12774658]
[799.70733643 -267.84014893]
[790.89031982 -255.70458984]
[781.86285400 -243.72476196]
[772.62768555 -231.90429688]
[763.18762207 -220.24681091]
[753.54559326 -208.75585938]
[743.70446777 -197.43492126]
[733.66723633 -186.28746033]
[723.43701172 -175.31687927]
[713.01684570 -164.52651978]
[702.40997314 -153.91964722]
[691.61962891 -143.49951172]
[680.64898682 -133.26927185]
[669.50158691 -123.23205566]
[658.18060303 -113.39092255]
[646.68963623 -103.74887085]
[635.03216553 -94.30882263]
[623.21173096 -85.07366943]
[611.23187256 -76.04621887]
[599.09631348 -67.22921753]
[586.80871582 -58.62535095]
[574.37280273 -50.23724747]
[561.79241943 -42.06745529]
[549.07141113 -34.11846542]
[536.21356201 -26.39270020]
[523.22283936 -18.89251137]
[510.10321045 -11.62018490]
[496.85867310 -4.57793474]
[483.49322510 2.23209357]
[470.01098633 8.80782604]
[456.41601562 15.14725780]
[442.71246338 21.24846077]
[428.90454102 27.10957336]
[414.99642944 32.72881317]
[400.99237061 38.10446548]
[386.89663696 43.23489761]
[372.71347046 48.11854172]
[358.44726562 52.75391006]
[344.10232544 57.13959503]
[329.68304443 61.27425766]
[315.19378662 65.15663910]
[300.63897705 68.78555298]
[286.02304077 72.15990448]
[271.35046387 75.27865601]
[256.62567139 78.14086151]
[241.85319519 80.74565125]
[227.03749084 83.09222412]
[212.18309021 85.17987061]
[197.29450989 87.00794983]
[182.37631226 88.57591248]
[167.43301392 89.88327789]
[152.46916199 90.92964935]
[137.48933411 91.71470642]
[122.49810028 92.23821259]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
