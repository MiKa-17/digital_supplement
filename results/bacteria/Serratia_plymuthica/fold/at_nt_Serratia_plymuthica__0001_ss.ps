%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 23:13:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGUUCUGAGGCUGAUGAUUAUCUGCAUGACGCUGAUUGCGUUCAUGU_UGAUCACUCGCGGUUCGCUAUGUGAACUGCGCAUCAAACUGGGAGACACGGAGGUUGCGGCCAUUUUGGCUUACGAAUCCGAAGGGUAAGGCAACCCAACGGCGGGG__UUCGC_CCCGCCCGUUGGUUGUUAGACAGAGGAUCCAUGAGCACCCUCUU_____________\
) } def
/len { sequence length } bind def

/coor [
[61.53750229 393.25305176]
[51.27278519 391.72311401]
[41.06806564 389.83398438]
[30.93590164 387.58801270]
[20.88877487 384.98794556]
[10.93905354 382.03698730]
[1.09898758 378.73876953]
[-8.61930752 375.09738159]
[-18.20386505 371.11724854]
[-27.64288521 366.80331421]
[-36.92474747 362.16088867]
[-46.03802109 357.19567871]
[-54.97148514 351.91378784]
[-63.71414185 346.32174683]
[-72.25522614 340.42639160]
[-80.58422852 334.23504639]
[-88.69087982 327.75527954]
[-96.56520844 320.99511719]
[-104.19752502 313.96282959]
[-111.57841492 306.66711426]
[-118.69880676 299.11694336]
[-125.54991913 291.32159424]
[-132.12333679 283.29067993]
[-138.41094971 275.03411865]
[-144.40501404 266.56204224]
[-150.09815979 257.88485718]
[-162.98110962 265.56793213]
[-175.86405945 273.25100708]
[-188.74700928 280.93408203]
[-201.62995911 288.61715698]
[-200.22276306 303.81527710]
[-205.55718994 318.11584473]
[-216.57408142 328.67950439]
[-231.08601379 333.40884399]
[-246.21163940 331.36480713]
[-258.94775391 322.95327759]
[-266.76559448 309.84432983]
[-268.11294556 294.64080811]
[-262.72222900 280.36132812]
[-251.66383362 269.84112549]
[-237.13339233 265.16900635]
[-222.01593018 267.27258301]
[-209.31303406 275.73422241]
[-196.43008423 268.05114746]
[-183.54713440 260.36807251]
[-170.66418457 252.68498230]
[-157.78123474 245.00190735]
[-167.59819031 225.96798706]
[-176.01203918 206.27355957]
[-182.97869873 186.02192688]
[-188.46163940 165.31924438]
[-192.43208313 144.27409363]
[-194.86923218 122.99679565]
[-195.76031494 101.59891510]
[-195.10064697 80.19264984]
[-192.89367676 58.89024734]
[-189.15100098 37.80339050]
[-183.89222717 17.04264641]
[-177.14492798 -3.28313088]
[-191.06326294 -8.87597847]
[-204.98159790 -14.46882534]
[-218.89993286 -20.06167221]
[-232.81828308 -25.65452003]
[-244.42982483 -15.68302631]
[-259.34790039 -12.26116276]
[-274.14447021 -16.17524719]
[-285.41940308 -26.52585411]
[-290.58175659 -40.93448639]
[-288.44528198 -56.09014893]
[-279.50091553 -68.51017761]
[-265.80404663 -75.34054565]
[-250.50205994 -75.01168060]
[-237.11128235 -67.59915161]
[-228.70878601 -54.80631256]
[-227.22543335 -39.57285690]
[-213.30709839 -33.98000717]
[-199.38876343 -28.38716125]
[-185.47042847 -22.79431343]
[-171.55209351 -17.20146561]
[-166.21742249 -28.86041451]
[-160.38246155 -40.27720261]
[-154.05818176 -51.43037415]
[-147.25646973 -62.29897690]
[-139.99009705 -72.86257935]
[-132.27273560 -83.10132599]
[-124.11887360 -92.99598694]
[-115.54383850 -102.52796173]
[-106.56374359 -111.67933655]
[-97.19546509 -120.43291473]
[-87.45660400 -128.77224731]
[-77.36547852 -136.68165588]
[-66.94103241 -144.14628601]
[-56.20286560 -151.15211487]
[-45.17115784 -157.68595886]
[-33.86663818 -163.73554993]
[-22.31054878 -169.28952026]
[-10.52461052 -174.33743286]
[1.46903002 -178.86979675]
[13.64783478 -182.87811279]
[25.98891449 -186.35481262]
[38.46908188 -189.29339600]
[51.06487656 -191.68830872]
[63.75263596 -193.53509521]
[76.50850677 -194.83024597]
[89.30853271 -195.57133484]
[102.12864685 -195.75697327]
[114.94475555 -195.38682556]
[127.73278809 -194.46156311]
[140.46870422 -192.98294067]
[153.12855530 -190.95373535]
[165.68858337 -188.37776184]
[178.12515259 -185.25984192]
[190.41491699 -181.60586548]
[202.53475952 -177.42268372]
[214.46191406 -172.71815491]
[226.17398071 -167.50111389]
[237.64892578 -161.78138733]
[237.62443542 -177.60256958]
[250.58622742 -184.94021606]
[257.90164185 -198.03543091]
[265.21707153 -211.13064575]
[272.53250122 -224.22584534]
[279.84793091 -237.32106018]
[271.43206787 -250.10511780]
[269.93276978 -265.33700562]
[275.69461060 -279.51657104]
[287.39349365 -289.38546753]
[302.34112549 -292.67584229]
[317.10266113 -288.63162231]
[328.28601074 -278.18215942]
[333.32128906 -263.72863770]
[331.05148315 -248.59237671]
[321.99810791 -236.25157166]
[308.24160767 -229.54206848]
[292.94314575 -230.00564575]
[285.62771606 -216.91043091]
[278.31228638 -203.81521606]
[270.99685669 -190.72000122]
[263.68142700 -177.62478638]
[264.22918701 -162.74026489]
[250.74414062 -154.46595764]
[273.44885254 -139.56672668]
[294.69125366 -122.64779663]
[314.29226685 -103.85177612]
[332.08663940 -83.33714294]
[347.92437744 -61.27685165]
[361.67193604 -37.85688400]
[373.21340942 -13.27468300]
[382.45150757 12.26250267]
[389.30831909 38.53937531]
[404.05520630 35.79541016]
[418.80209351 33.05144119]
[433.54898071 30.30747223]
[448.29586792 27.56350517]
[463.04275513 24.81953621]
[477.76986694 21.97129440]
[486.31726074 8.67777634]
[501.77862549 5.40344810]
[514.98101807 14.09090996]
[518.09173584 29.58604622]
[509.26516724 42.69586563]
[493.73800659 45.64254761]
[480.72222900 36.67787552]
[474.78775024 41.07265091]
[465.78674316 39.56642151]
[451.03985596 42.31039047]
[436.29296875 45.05435944]
[421.54608154 47.79832458]
[406.79919434 50.54229355]
[392.05230713 53.28626251]
[393.51138306 63.56128693]
[394.60910034 73.88117981]
[395.34408569 84.23323059]
[395.71542358 94.60469055]
[395.72265625 104.98279572]
[395.36578369 115.35476685]
[394.64526367 125.70783234]
[393.56195068 136.02923584]
[392.11718750 146.30628967]
[390.31274414 156.52632141]
[388.15087891 166.67677307]
[385.63421631 176.74511719]
[382.76586914 186.71896362]
[379.54937744 196.58604431]
[375.98867798 206.33419800]
[372.08819580 215.95143127]
[367.85269165 225.42590332]
[363.28738403 234.74595642]
[358.39791870 243.90008545]
[353.19030762 252.87704468]
[347.67092896 261.66577148]
[341.84664917 270.25546265]
[335.72457886 278.63552856]
[329.31225586 286.79562378]
[322.61761475 294.72573853]
[315.64886475 302.41610718]
[308.41461182 309.85726929]
[300.92373657 317.04000854]
[293.18548584 323.95553589]
[285.20938110 330.59533691]
[277.00521851 336.95120239]
[268.58312988 343.01531982]
[259.95349121 348.78021240]
[251.12689209 354.23883057]
[242.11422729 359.38439941]
[232.92657471 364.21060181]
[223.57527161 368.71151733]
[214.07180786 372.88156128]
[204.42788696 376.71560669]
[194.65539551 380.20898438]
[184.76637268 383.35733032]
[174.77296448 386.15682983]
[164.68750000 388.60397339]
[154.52239990 390.69577026]
[144.29016113 392.42965698]
[134.00338745 393.80349731]
[123.67474365 394.81558228]
[113.31695557 395.46469116]
[102.94277191 395.75000000]
[92.56496429 395.67117310]
[82.19630432 395.22830200]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 47]
[27 46]
[28 45]
[29 44]
[30 43]
[59 79]
[60 78]
[61 77]
[62 76]
[63 75]
[117 141]
[119 139]
[120 138]
[121 137]
[122 136]
[123 135]
[150 170]
[151 169]
[152 168]
[153 167]
[154 166]
[155 165]
[156 163]
] def

init

% Start Annotations
30 43 0.16 0.6 colorpair
59 79 0.16 0.2 colorpair
60 78 0.16 0.2 colorpair
61 77 0.16 0.2 colorpair
63 75 0.32 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
26 47 5 gmark
26 cmark
47 cmark
27 46 4 gmark
27 cmark
28 45 4 gmark
28 cmark
45 cmark
29 44 3 gmark
29 cmark
44 cmark
30 43 1 gmark
30 cmark
43 cmark
59 79 2 gmark
79 cmark
60 78 2 gmark
60 cmark
61 77 2 gmark
61 cmark
62 76 3 gmark
76 cmark
63 cmark
75 cmark
117 141 4 gmark
119 139 4 gmark
120 138 4 gmark
121 137 5 gmark
122 136 4 gmark
123 135 4 gmark
150 170 4 gmark
151 169 4 gmark
169 cmark
152 168 4 gmark
153 167 4 gmark
154 166 4 gmark
155 165 4 gmark
156 163 4 gmark

% End Annotations
showpage
end
%%EOF
