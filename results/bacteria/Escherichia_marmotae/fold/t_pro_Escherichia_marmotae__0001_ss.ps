%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 03:23:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
________________________________________________A__GA_A_G____C_AUGAAGCACCCGAAGGCGACGUUA__C_CCCUGAUCAUCAUCUGUUUCACCGCCGU_AGUGACGGCACUCGUAACCAGG__CAAGCCCUCUAUGAGGUUCGCAUCCGGACCGGCCAGACG___GAGGUCGCUGUCUUCACGGCCUACAAAUCCGAG____________________________________\
________________________________________________________________________________________________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[57.45235443 1030.08374023]
[42.47419357 1029.27758789]
[27.51096725 1028.23022461]
[12.56655312 1026.94201660]
[-2.35516763 1025.41308594]
[-17.25032234 1023.64410400]
[-32.11504364 1021.63531494]
[-46.94547653 1019.38732910]
[-61.73776627 1016.90075684]
[-76.48807526 1014.17614746]
[-91.19258118 1011.21429443]
[-105.84746552 1008.01586914]
[-120.44892120 1004.58184814]
[-134.99314880 1000.91302490]
[-149.47639465 997.01037598]
[-163.89488220 992.87487793]
[-178.24488831 988.50762939]
[-192.52265930 983.90979004]
[-206.72451782 979.08251953]
[-220.84677124 974.02709961]
[-234.88574219 968.74481201]
[-248.83778381 963.23706055]
[-262.69927979 957.50524902]
[-276.46667480 951.55090332]
[-290.13632202 945.37548828]
[-303.70471191 938.98065186]
[-317.16833496 932.36810303]
[-330.52368164 925.53948975]
[-343.76727295 918.49658203]
[-356.89569092 911.24127197]
[-369.90551758 903.77539062]
[-382.79339600 896.10089111]
[-395.55593872 888.21972656]
[-408.18988037 880.13403320]
[-420.69192505 871.84582520]
[-433.05880737 863.35729980]
[-445.28735352 854.67065430]
[-457.37435913 845.78808594]
[-469.31668091 836.71197510]
[-481.11126709 827.44470215]
[-492.75500488 817.98852539]
[-504.24490356 808.34606934]
[-515.57794189 798.51971436]
[-526.75128174 788.51208496]
[-537.76184082 778.32574463]
[-548.60693359 767.96337891]
[-559.28369141 757.42761230]
[-569.78930664 746.72119141]
[-580.12109375 735.84692383]
[-590.27636719 724.80767822]
[-600.25244141 713.60620117]
[-610.04675293 702.24548340]
[-619.65686035 690.72845459]
[-629.08007812 679.05810547]
[-638.31414795 667.23742676]
[-647.35650635 655.26953125]
[-656.20495605 643.15753174]
[-664.85711670 630.90460205]
[-673.31072998 618.51379395]
[-681.56365967 605.98846436]
[-689.61370850 593.33178711]
[-697.45880127 580.54705811]
[-705.09698486 567.63757324]
[-712.52612305 554.60675049]
[-719.74444580 541.45794678]
[-726.74993896 528.19451904]
[-733.54089355 514.82000732]
[-740.11547852 501.33779907]
[-746.47204590 487.75143433]
[-752.60888672 474.06442261]
[-758.52441406 460.28030396]
[-764.21710205 446.40270996]
[-769.68554688 432.43518066]
[-774.92822266 418.38137817]
[-779.94378662 404.24493408]
[-784.73101807 390.02954102]
[-789.28857422 375.73883057]
[-793.61529541 361.37658691]
[-797.71014404 346.94650269]
[-801.57196045 332.45230103]
[-805.19976807 317.89779663]
[-808.59265137 303.28671265]
[-811.74969482 288.62286377]
[-814.67004395 273.91006470]
[-817.35308838 259.15213013]
[-819.79797363 244.35289001]
[-822.00415039 229.51618958]
[-823.97100830 214.64585876]
[-825.69799805 199.74577332]
[-827.18481445 184.81980896]
[-828.43090820 169.87181091]
[-829.43609619 154.90570068]
[-830.20001221 139.92532349]
[-830.72247314 124.93458557]
[-831.00335693 109.93737793]
[-831.04266357 94.93759918]
[-830.84027100 79.93912506]
[-830.39630127 64.94586182]
[-829.71081543 49.96169281]
[-828.78405762 34.99051285]
[-827.61621094 20.03620529]
[-826.20764160 5.10265398]
[-824.55859375 -9.80626678]
[-822.66967773 -24.68668747]
[-820.54119873 -39.53474426]
[-818.17382812 -54.34658813]
[-815.56811523 -69.11837006]
[-812.72485352 -83.84626007]
[-809.64459229 -98.52642822]
[-806.32830811 -113.15506744]
[-802.77673340 -127.72838593]
[-798.99084473 -142.24259949]
[-794.97167969 -156.69393921]
[-790.72015381 -171.07864380]
[-786.23748779 -185.39299011]
[-781.52478027 -199.63327026]
[-776.58331299 -213.79579163]
[-771.41424561 -227.87684631]
[-766.01904297 -241.87281799]
[-760.39910889 -255.78004456]
[-754.55578613 -269.59494019]
[-768.27490234 -275.66009521]
[-781.99401855 -281.72525024]
[-795.71313477 -287.79040527]
[-811.95104980 -285.49652100]
[-821.84210205 -298.57699585]
[-815.21124268 -313.57577515]
[-798.87969971 -315.06338501]
[-789.64801025 -301.50949097]
[-775.92889404 -295.44433594]
[-762.20977783 -289.37918091]
[-748.49066162 -283.31402588]
[-742.20532227 -296.93350220]
[-735.70141602 -310.44995117]
[-728.98059082 -323.85986328]
[-722.04461670 -337.15975952]
[-714.89532471 -350.34619141]
[-707.53448486 -363.41574097]
[-699.96398926 -376.36502075]
[-692.18591309 -389.19064331]
[-684.20227051 -401.88931274]
[-676.01501465 -414.45770264]
[-667.62640381 -426.89254761]
[-659.03851318 -439.19067383]
[-650.25366211 -451.34881592]
[-641.27404785 -463.36389160]
[-632.10198975 -475.23272705]
[-622.73999023 -486.95227051]
[-613.19036865 -498.51947021]
[-603.45562744 -509.93130493]
[-593.53833008 -521.18487549]
[-583.44104004 -532.27716064]
[-573.16632080 -543.20538330]
[-562.71691895 -553.96661377]
[-552.09545898 -564.55816650]
[-541.30480957 -574.97717285]
[-530.34765625 -585.22100830]
[-519.22692871 -595.28704834]
[-507.94546509 -605.17254639]
[-496.50622559 -614.87506104]
[-484.91213989 -624.39202881]
[-473.16625977 -633.72100830]
[-461.27160645 -642.85949707]
[-449.23129272 -651.80517578]
[-437.04840088 -660.55578613]
[-424.72610474 -669.10894775]
[-412.26763916 -677.46246338]
[-399.67623901 -685.61425781]
[-386.95510864 -693.56207275]
[-374.10760498 -701.30395508]
[-361.13702393 -708.83782959]
[-348.04678345 -716.16180420]
[-334.84024048 -723.27398682]
[-321.52084351 -730.17242432]
[-308.09204102 -736.85540771]
[-294.55731201 -743.32116699]
[-280.92016602 -749.56805420]
[-267.18417358 -755.59442139]
[-253.35285950 -761.39874268]
[-239.42984009 -766.97949219]
[-225.41871643 -772.33520508]
[-211.32313538 -777.46447754]
[-197.14675903 -782.36602783]
[-182.89324951 -787.03857422]
[-168.56631470 -791.48089600]
[-154.16967773 -795.69183350]
[-139.70706177 -799.67028809]
[-125.18223572 -803.41522217]
[-110.59896088 -806.92565918]
[-95.96102905 -810.20068359]
[-81.27223206 -813.23950195]
[-66.53638458 -816.04132080]
[-51.75731659 -818.60534668]
[-36.93886185 -820.93096924]
[-22.08485985 -823.01751709]
[-7.19917250 -824.86450195]
[7.71433830 -826.47149658]
[22.65180206 -827.83795166]
[37.60934067 -828.96362305]
[52.58307266 -829.84820557]
[67.56911469 -830.49139404]
[82.56356812 -830.89312744]
[97.56255341 -831.05322266]
[112.56217194 -830.97167969]
[127.55852509 -830.64849854]
[142.54772949 -830.08374023]
[157.52587891 -829.27758789]
[172.48912048 -828.23022461]
[187.43353271 -826.94195557]
[202.35525513 -825.41314697]
[217.25039673 -823.64410400]
[232.11512756 -821.63531494]
[246.94555664 -819.38732910]
[261.73785400 -816.90069580]
[276.48815918 -814.17614746]
[291.19265747 -811.21423340]
[305.84753418 -808.01586914]
[320.44900513 -804.58184814]
[334.99322510 -800.91302490]
[349.47647095 -797.01031494]
[363.89495850 -792.87487793]
[378.24496460 -788.50762939]
[392.52273560 -783.90979004]
[406.72460938 -779.08251953]
[420.84683228 -774.02709961]
[434.88580322 -768.74481201]
[448.83786011 -763.23706055]
[462.69937134 -757.50524902]
[476.46673584 -751.55084229]
[490.13638306 -745.37542725]
[503.70480347 -738.98065186]
[517.16839600 -732.36804199]
[530.52374268 -725.53942871]
[543.76733398 -718.49652100]
[556.89575195 -711.24121094]
[569.90557861 -703.77532959]
[582.79345703 -696.10083008]
[595.55603027 -688.21966553]
[608.18994141 -680.13397217]
[620.69195557 -671.84576416]
[633.05889893 -663.35723877]
[645.28741455 -654.67059326]
[657.37438965 -645.78802490]
[669.31677246 -636.71197510]
[681.11132812 -627.44464111]
[692.75506592 -617.98852539]
[704.24493408 -608.34600830]
[715.57800293 -598.51971436]
[726.75128174 -588.51202393]
[737.76190186 -578.32574463]
[748.60699463 -567.96331787]
[759.28375244 -557.42755127]
[769.78936768 -546.72113037]
[780.12115479 -535.84686279]
[790.27642822 -524.80761719]
[800.25250244 -513.60614014]
[810.04681396 -502.24542236]
[819.65686035 -490.72839355]
[829.08013916 -479.05801392]
[838.31414795 -467.23736572]
[847.35656738 -455.26950073]
[856.20501709 -443.15750122]
[864.85711670 -430.90451050]
[873.31079102 -418.51373291]
[881.56372070 -405.98840332]
[889.61376953 -393.33169556]
[897.45886230 -380.54696655]
[905.09698486 -367.63751221]
[912.52618408 -354.60668945]
[919.74444580 -341.45788574]
[926.75000000 -328.19448853]
[933.54095459 -314.81994629]
[940.11553955 -301.33773804]
[946.47204590 -287.75134277]
[952.60888672 -274.06433105]
[958.52441406 -260.28024292]
[964.21716309 -246.40263367]
[969.68554688 -232.43510437]
[974.92822266 -218.38130188]
[979.94378662 -204.24485779]
[984.73101807 -190.02944946]
[989.28857422 -175.73876953]
[993.61535645 -161.37651062]
[997.71014404 -146.94641113]
[1001.57196045 -132.45222473]
[1005.19976807 -117.89770508]
[1008.59265137 -103.28662872]
[1011.74969482 -88.62278748]
[1014.67010498 -73.90998840]
[1017.35308838 -59.15205765]
[1019.79797363 -44.35281372]
[1022.00415039 -29.51610184]
[1023.97100830 -14.64577675]
[1025.69799805 0.25430614]
[1027.18481445 15.18027782]
[1028.43090820 30.12826347]
[1029.43603516 45.09438705]
[1030.19995117 60.07475662]
[1030.72253418 75.06549072]
[1031.00341797 90.06269836]
[1031.04260254 105.06248474]
[1030.84020996 120.06095886]
[1030.39624023 135.05422974]
[1029.71081543 150.03839111]
[1028.78405762 165.00956726]
[1027.61621094 179.96388245]
[1026.20764160 194.89743042]
[1024.55859375 209.80635071]
[1022.66961670 224.68676758]
[1020.54119873 239.53482056]
[1018.17382812 254.34666443]
[1015.56811523 269.11843872]
[1012.72479248 283.84634399]
[1009.64459229 298.52651978]
[1006.32824707 313.15515137]
[1002.77673340 327.72845459]
[998.99084473 342.24267578]
[994.97161865 356.69400024]
[990.72015381 371.07873535]
[986.23748779 385.39306641]
[981.52478027 399.63336182]
[976.58325195 413.79586792]
[971.41424561 427.87692261]
[966.01904297 441.87289429]
[960.39904785 455.78012085]
[954.55578613 469.59500122]
[948.49072266 483.31396484]
[942.20538330 496.93344116]
[935.70147705 510.44989014]
[928.98065186 523.85980225]
[922.04467773 537.15966797]
[914.89532471 550.34613037]
[907.53448486 563.41564941]
[899.96405029 576.36492920]
[892.18597412 589.19055176]
[884.20233154 601.88922119]
[876.01507568 614.45764160]
[867.62646484 626.89251709]
[859.03857422 639.19061279]
[850.25366211 651.34875488]
[841.27404785 663.36383057]
[832.10205078 675.23266602]
[822.74005127 686.95220947]
[813.19042969 698.51940918]
[803.45568848 709.93127441]
[793.53839111 721.18481445]
[783.44110107 732.27709961]
[773.16638184 743.20532227]
[762.71697998 753.96655273]
[752.09552002 764.55810547]
[741.30487061 774.97711182]
[730.34771729 785.22100830]
[719.22698975 795.28698730]
[707.94555664 805.17254639]
[696.50628662 814.87500000]
[684.91223145 824.39196777]
[673.16632080 833.72094727]
[661.27166748 842.85943604]
[649.23132324 851.80517578]
[637.04846191 860.55572510]
[624.72619629 869.10888672]
[612.26770020 877.46246338]
[599.67626953 885.61419678]
[586.95520020 893.56201172]
[574.10766602 901.30389404]
[561.13708496 908.83782959]
[548.04687500 916.16180420]
[534.84033203 923.27392578]
[521.52093506 930.17236328]
[508.09210205 936.85534668]
[494.55737305 943.32110596]
[480.92025757 949.56799316]
[467.18423462 955.59442139]
[453.35293579 961.39874268]
[439.42990112 966.97943115]
[425.41879272 972.33520508]
[411.32321167 977.46447754]
[397.14682007 982.36602783]
[382.89331055 987.03857422]
[368.56637573 991.48089600]
[354.16973877 995.69177246]
[339.70715332 999.67022705]
[325.18231201 1003.41516113]
[310.59902954 1006.92565918]
[295.96112061 1010.20068359]
[281.27230835 1013.23950195]
[266.53646851 1016.04132080]
[251.75740051 1018.60534668]
[236.93893433 1020.93090820]
[222.08494568 1023.01751709]
[207.19924927 1024.86450195]
[192.28573608 1026.47143555]
[177.34828186 1027.83801270]
[162.39074707 1028.96362305]
[147.41700745 1029.84814453]
[132.43096924 1030.49145508]
[117.43650818 1030.89318848]
[102.43753052 1031.05322266]
[87.43791199 1030.97167969]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[121 132]
[122 131]
[123 130]
[124 129]
] def

init

% Start Annotations
121 132 0.32 1 colorpair
122 131 0.0 0.2 colorpair
123 130 0.32 0.6 colorpair
124 129 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
121 cmark
132 cmark
122 131 2 gmark
123 130 1 gmark
123 cmark
130 cmark
124 129 1 gmark
124 cmark
129 cmark

% End Annotations
showpage
end
%%EOF
