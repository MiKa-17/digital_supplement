%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 03:23:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
________________________________________________________________AUGAAGCAGCAAAAGGCGAUGUUAGUCGCCCUGAUCGUCAUCUGUUUAACCGUCAUAG__UGACGGCACUGGUAACGAGAAAAGACCUCUG_CGAGGUACGAAUCCGAACCGGCCAGACG___GAGGUCGCUGUCUUCACAGCUUACGAACCUGAG___________________________________\
_________________________________________________________________________________________________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50154114 92.26438904]
[62.50863266 91.79322052]
[47.52497864 91.08660889]
[32.55426788 90.14473724]
[17.60019875 88.96782684]
[2.66646123 87.55617523]
[-12.24326038 85.91012573]
[-27.12528801 84.03009033]
[-41.97594833 81.91653442]
[-56.79158020 79.56996918]
[-71.56852722 76.99098206]
[-86.30313873 74.18020630]
[-100.99178314 71.13833618]
[-115.63083649 67.86612701]
[-130.21669006 64.36437225]
[-144.74572754 60.63394928]
[-159.21440125 56.67577744]
[-173.61909485 52.49082565]
[-187.95628357 48.08013153]
[-202.22242737 43.44478226]
[-216.41400146 38.58592224]
[-230.52751160 33.50475311]
[-244.55946350 28.20252228]
[-258.50640869 22.68054199]
[-272.36486816 16.94017410]
[-286.13146973 10.98283482]
[-299.80279541 4.80999422]
[-313.37548828 -1.57682478]
[-326.84619141 -8.17604637]
[-340.21154785 -14.98604202]
[-353.46832275 -22.00513268]
[-366.61318970 -29.23158455]
[-379.64294434 -36.66361618]
[-392.55432129 -44.29939270]
[-405.34420776 -52.13703156]
[-418.00936890 -60.17459869]
[-430.54675293 -68.41011047]
[-442.95321655 -76.84152985]
[-455.22570801 -85.46678925]
[-467.36123657 -94.28374481]
[-479.35675049 -103.29022980]
[-491.20932007 -112.48402405]
[-502.91601562 -121.86285400]
[-514.47393799 -131.42440796]
[-525.88024902 -141.16633606]
[-537.13220215 -151.08621216]
[-548.22686768 -161.18161011]
[-559.16162109 -171.45002747]
[-569.93371582 -181.88893127]
[-580.54058838 -192.49574280]
[-590.97949219 -203.26786804]
[-601.24786377 -214.20262146]
[-611.34326172 -225.29731750]
[-621.26318359 -236.54920959]
[-631.00512695 -247.95553589]
[-640.56665039 -259.51345825]
[-649.94549561 -271.22015381]
[-659.13928223 -283.07272339]
[-668.14575195 -295.06823730]
[-676.96276855 -307.20376587]
[-685.58801270 -319.47625732]
[-694.01940918 -331.88272095]
[-702.25494385 -344.42007446]
[-710.29248047 -357.08526611]
[-718.13012695 -369.87512207]
[-725.76593018 -382.78652954]
[-733.19793701 -395.81625366]
[-740.42443848 -408.96112061]
[-747.44348145 -422.21789551]
[-754.25347900 -435.58325195]
[-760.85272217 -449.05395508]
[-767.23956299 -462.62664795]
[-773.41241455 -476.29797363]
[-779.36975098 -490.06457520]
[-785.11010742 -503.92303467]
[-790.63208008 -517.86999512]
[-795.93432617 -531.90191650]
[-801.01550293 -546.01544189]
[-805.87438965 -560.20703125]
[-810.50970459 -574.47314453]
[-814.92041016 -588.81036377]
[-819.10534668 -603.21502686]
[-823.06353760 -617.68371582]
[-826.79400635 -632.21276855]
[-830.29571533 -646.79858398]
[-833.56793213 -661.43762207]
[-836.60980225 -676.12628174]
[-839.42059326 -690.86090088]
[-841.99957275 -705.63787842]
[-844.34613037 -720.45349121]
[-846.45971680 -735.30413818]
[-848.33978271 -750.18615723]
[-849.98583984 -765.09588623]
[-851.39746094 -780.02960205]
[-852.57440186 -794.98370361]
[-853.51623535 -809.95440674]
[-854.22283936 -824.93804932]
[-854.69403076 -839.93096924]
[-854.92962646 -854.92944336]
[-854.92968750 -869.92974854]
[-854.69403076 -884.92822266]
[-854.22290039 -899.92108154]
[-853.51623535 -914.90478516]
[-852.57440186 -929.87548828]
[-851.39746094 -944.82952881]
[-849.98583984 -959.76324463]
[-848.33978271 -974.67297363]
[-846.45971680 -989.55505371]
[-844.34619141 -1004.40570068]
[-841.99963379 -1019.22131348]
[-839.42065430 -1033.99829102]
[-836.60986328 -1048.73291016]
[-833.56799316 -1063.42150879]
[-830.29577637 -1078.06054688]
[-826.79400635 -1092.64636230]
[-823.06359863 -1107.17541504]
[-819.10540771 -1121.64416504]
[-814.92047119 -1136.04882812]
[-810.50976562 -1150.38598633]
[-805.87438965 -1164.65222168]
[-801.01556396 -1178.84375000]
[-795.93438721 -1192.95727539]
[-790.63214111 -1206.98913574]
[-785.11016846 -1220.93615723]
[-779.36981201 -1234.79455566]
[-773.41247559 -1248.56115723]
[-767.23962402 -1262.23254395]
[-760.85278320 -1275.80517578]
[-754.25360107 -1289.27587891]
[-747.44360352 -1302.64123535]
[-740.42449951 -1315.89807129]
[-733.19805908 -1329.04296875]
[-725.76599121 -1342.07263184]
[-718.13024902 -1354.98400879]
[-710.29260254 -1367.77392578]
[-702.25500488 -1380.43908691]
[-694.01953125 -1392.97644043]
[-685.58807373 -1405.38293457]
[-676.96282959 -1417.65539551]
[-668.14587402 -1429.79089355]
[-659.13940430 -1441.78649902]
[-649.94555664 -1453.63903809]
[-640.56677246 -1465.34570312]
[-631.00518799 -1476.90368652]
[-621.26330566 -1488.30993652]
[-611.34338379 -1499.56188965]
[-601.24798584 -1510.65661621]
[-590.97955322 -1521.59130859]
[-580.54064941 -1532.36340332]
[-569.93383789 -1542.97033691]
[-559.16174316 -1553.40917969]
[-548.22698975 -1563.67761230]
[-537.13226318 -1573.77294922]
[-525.88037109 -1583.69287109]
[-514.47406006 -1593.43481445]
[-502.91613770 -1602.99633789]
[-491.20944214 -1612.37524414]
[-479.35687256 -1621.56896973]
[-467.36135864 -1630.57543945]
[-455.22583008 -1639.39245605]
[-442.95333862 -1648.01770020]
[-430.54687500 -1656.44909668]
[-418.00952148 -1664.68469238]
[-405.34432983 -1672.72216797]
[-392.55447388 -1680.55981445]
[-379.64306641 -1688.19567871]
[-366.61334229 -1695.62768555]
[-353.46844482 -1702.85412598]
[-340.21170044 -1709.87316895]
[-326.84631348 -1716.68322754]
[-313.37564087 -1723.28247070]
[-299.80294800 -1729.66918945]
[-286.13162231 -1735.84204102]
[-272.36502075 -1741.79943848]
[-258.50653076 -1747.53979492]
[-244.55960083 -1753.06176758]
[-230.52764893 -1758.36401367]
[-216.41415405 -1763.44519043]
[-202.22257996 -1768.30407715]
[-187.95643616 -1772.93945312]
[-173.61924744 -1777.35009766]
[-159.21453857 -1781.53503418]
[-144.74588013 -1785.49328613]
[-130.21684265 -1789.22363281]
[-115.63098907 -1792.72546387]
[-100.99193573 -1795.99768066]
[-86.30329132 -1799.03955078]
[-71.56867981 -1801.85021973]
[-56.79173279 -1804.42932129]
[-41.97610092 -1806.77587891]
[-27.12544060 -1808.88940430]
[-12.24341393 -1810.76940918]
[2.66630745 -1812.41552734]
[17.60004425 -1813.82714844]
[32.55411148 -1815.00402832]
[47.52482224 -1815.94592285]
[62.50848007 -1816.65258789]
[77.50138855 -1817.12365723]
[92.49984741 -1817.35937500]
[107.50015259 -1817.35937500]
[122.49861145 -1817.12365723]
[137.49151611 -1816.65258789]
[152.47517395 -1815.94592285]
[167.44589233 -1815.00402832]
[182.39994812 -1813.82714844]
[197.33369446 -1812.41552734]
[212.24340820 -1810.76940918]
[227.12544250 -1808.88940430]
[241.97610474 -1806.77587891]
[256.79174805 -1804.42932129]
[271.56866455 -1801.85021973]
[286.30328369 -1799.03955078]
[300.99194336 -1795.99768066]
[315.63098145 -1792.72546387]
[330.21682739 -1789.22363281]
[344.74588013 -1785.49328613]
[359.21453857 -1781.53503418]
[373.61923218 -1777.35009766]
[387.95645142 -1772.93945312]
[402.22256470 -1768.30407715]
[416.41415405 -1763.44519043]
[430.52764893 -1758.36401367]
[444.55960083 -1753.06176758]
[458.50653076 -1747.53979492]
[472.36502075 -1741.79943848]
[486.13162231 -1735.84204102]
[499.80294800 -1729.66918945]
[513.37561035 -1723.28247070]
[526.84631348 -1716.68322754]
[540.21166992 -1709.87316895]
[553.46844482 -1702.85412598]
[566.61334229 -1695.62768555]
[579.64306641 -1688.19567871]
[592.55444336 -1680.55981445]
[605.34436035 -1672.72216797]
[618.00952148 -1664.68469238]
[630.54687500 -1656.44909668]
[642.95336914 -1648.01770020]
[655.22583008 -1639.39245605]
[667.36132812 -1630.57543945]
[679.35687256 -1621.56896973]
[691.20941162 -1612.37524414]
[702.91613770 -1602.99633789]
[714.47406006 -1593.43481445]
[725.88037109 -1583.69287109]
[737.13226318 -1573.77294922]
[748.22698975 -1563.67761230]
[759.16174316 -1553.40917969]
[769.93383789 -1542.97033691]
[780.54064941 -1532.36340332]
[790.97955322 -1521.59130859]
[801.24798584 -1510.65661621]
[811.34338379 -1499.56188965]
[821.26330566 -1488.30993652]
[831.00518799 -1476.90368652]
[840.56677246 -1465.34570312]
[849.94555664 -1453.63903809]
[859.13940430 -1441.78649902]
[868.14587402 -1429.79089355]
[876.96282959 -1417.65539551]
[885.58807373 -1405.38293457]
[894.01953125 -1392.97644043]
[902.25500488 -1380.43908691]
[910.29260254 -1367.77392578]
[918.13024902 -1354.98400879]
[925.76599121 -1342.07263184]
[933.19805908 -1329.04296875]
[940.42449951 -1315.89807129]
[947.44360352 -1302.64123535]
[954.25360107 -1289.27587891]
[960.85278320 -1275.80517578]
[967.23962402 -1262.23254395]
[973.41247559 -1248.56115723]
[979.36981201 -1234.79455566]
[985.11016846 -1220.93615723]
[990.63214111 -1206.98913574]
[995.93438721 -1192.95727539]
[1001.01556396 -1178.84375000]
[1005.87438965 -1164.65222168]
[1010.50976562 -1150.38598633]
[1014.92047119 -1136.04882812]
[1019.10540771 -1121.64416504]
[1023.06359863 -1107.17541504]
[1026.79406738 -1092.64636230]
[1030.29577637 -1078.06054688]
[1033.56799316 -1063.42150879]
[1036.60986328 -1048.73291016]
[1039.42065430 -1033.99829102]
[1041.99963379 -1019.22131348]
[1044.34619141 -1004.40570068]
[1046.45971680 -989.55505371]
[1048.33972168 -974.67297363]
[1049.98583984 -959.76324463]
[1051.39746094 -944.82952881]
[1052.57434082 -929.87548828]
[1053.51623535 -914.90478516]
[1054.22290039 -899.92108154]
[1054.69409180 -884.92822266]
[1054.92968750 -869.92974854]
[1054.92968750 -854.92944336]
[1054.69409180 -839.93096924]
[1054.22290039 -824.93804932]
[1053.51623535 -809.95440674]
[1052.57434082 -794.98370361]
[1051.39746094 -780.02960205]
[1049.98583984 -765.09588623]
[1048.33972168 -750.18615723]
[1046.45971680 -735.30413818]
[1044.34619141 -720.45349121]
[1041.99963379 -705.63787842]
[1039.42065430 -690.86090088]
[1036.60986328 -676.12628174]
[1033.56799316 -661.43762207]
[1030.29577637 -646.79858398]
[1026.79394531 -632.21276855]
[1023.06353760 -617.68371582]
[1019.10534668 -603.21502686]
[1014.92041016 -588.81036377]
[1010.50970459 -574.47314453]
[1005.87438965 -560.20703125]
[1001.01550293 -546.01544189]
[995.93432617 -531.90191650]
[990.63208008 -517.86999512]
[985.11010742 -503.92303467]
[979.36975098 -490.06457520]
[973.41241455 -476.29797363]
[967.23956299 -462.62664795]
[960.85272217 -449.05395508]
[954.25347900 -435.58325195]
[947.44348145 -422.21789551]
[940.42443848 -408.96112061]
[933.19793701 -395.81625366]
[925.76593018 -382.78652954]
[918.13012695 -369.87512207]
[910.29248047 -357.08526611]
[902.25494385 -344.42007446]
[894.01940918 -331.88272095]
[885.58801270 -319.47625732]
[876.96276855 -307.20376587]
[868.14575195 -295.06823730]
[859.13928223 -283.07272339]
[849.94549561 -271.22015381]
[840.56665039 -259.51345825]
[831.00512695 -247.95553589]
[821.26318359 -236.54920959]
[811.34326172 -225.29731750]
[801.24786377 -214.20262146]
[790.97949219 -203.26786804]
[780.54058838 -192.49574280]
[769.93371582 -181.88893127]
[759.16162109 -171.45002747]
[748.22686768 -161.18161011]
[737.13220215 -151.08621216]
[725.88024902 -141.16633606]
[714.47393799 -131.42440796]
[702.91601562 -121.86285400]
[691.20928955 -112.48402405]
[679.35675049 -103.29022980]
[667.36120605 -94.28374481]
[655.22570801 -85.46678925]
[642.95324707 -76.84152985]
[630.54675293 -68.41011047]
[618.00939941 -60.17459869]
[605.34417725 -52.13703156]
[592.55432129 -44.29939270]
[579.64294434 -36.66361618]
[566.61322021 -29.23158455]
[553.46832275 -22.00513268]
[540.21154785 -14.98604202]
[526.84619141 -8.17604637]
[513.37548828 -1.57682478]
[499.80279541 4.80999422]
[486.13146973 10.98283482]
[472.36486816 16.94017410]
[458.50640869 22.68054199]
[444.55944824 28.20252228]
[430.52749634 33.50475311]
[416.41400146 38.58592224]
[402.22244263 43.44478226]
[387.95629883 48.08013153]
[373.61911011 52.49082565]
[359.21438599 56.67577744]
[344.74572754 60.63394928]
[330.21667480 64.36437225]
[315.63082886 67.86612701]
[300.99179077 71.13833618]
[286.30313110 74.18020630]
[271.56851196 76.99098206]
[256.79159546 79.56996918]
[241.97595215 81.91653442]
[227.12528992 84.03009033]
[212.24325562 85.91012573]
[197.33354187 87.55617523]
[182.39979553 88.96782684]
[167.44573975 90.14473724]
[152.47502136 91.08660889]
[137.49136353 91.79322052]
[122.49845886 92.26438904]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
