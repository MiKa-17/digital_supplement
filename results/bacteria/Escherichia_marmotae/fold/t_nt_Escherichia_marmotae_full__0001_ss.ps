%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 03:23:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGGACACGCAG______UU__AGGCAUGGCCUGCUGGAACUAGUUAGCGGCCCGG_GUUAUUGCUGGCACUCU_C_GACAGUUUGAUGAUUAGCUGACUGAA_____________________________________________________________________________________________________________________________________________________\
____________________________________________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[9.55339336 882.60778809]
[-5.33012962 880.74395752]
[-20.17547035 878.59710693]
[-34.97724533 876.16796875]
[-49.73009109 873.45745850]
[-64.42865753 870.46661377]
[-79.06761169 867.19641113]
[-93.64166260 863.64813232]
[-108.14550781 859.82299805]
[-122.57390594 855.72247314]
[-136.92161560 851.34796143]
[-151.18344116 846.70104980]
[-165.35420227 841.78344727]
[-179.42877197 836.59698486]
[-193.40205383 831.14349365]
[-207.26896667 825.42492676]
[-221.02450562 819.44342041]
[-234.66366577 813.20111084]
[-248.18150330 806.70025635]
[-261.57312012 799.94317627]
[-274.83364868 792.93237305]
[-287.95831299 785.67041016]
[-300.94235229 778.15985107]
[-313.78103638 770.40350342]
[-326.46969604 762.40405273]
[-339.00378418 754.16455078]
[-351.37872314 745.68786621]
[-363.59002686 736.97711182]
[-375.63330078 728.03546143]
[-387.50411987 718.86614990]
[-399.19824219 709.47247314]
[-410.71139526 699.85784912]
[-422.03939819 690.02581787]
[-433.17816162 679.97985840]
[-444.12362671 669.72363281]
[-454.87185669 659.26092529]
[-465.41894531 648.59545898]
[-475.76107788 637.73114014]
[-485.89447021 626.67187500]
[-495.81549072 615.42169189]
[-505.52050781 603.98461914]
[-515.00598145 592.36486816]
[-524.26855469 580.56665039]
[-533.30480957 568.59423828]
[-542.11151123 556.45196533]
[-550.68542480 544.14416504]
[-559.02349854 531.67541504]
[-567.12261963 519.05010986]
[-574.97991943 506.27294922]
[-582.59252930 493.34851074]
[-589.95764160 480.28146362]
[-597.07269287 467.07656860]
[-603.93505859 453.73861694]
[-610.54223633 440.27239990]
[-616.89184570 426.68286133]
[-622.98150635 412.97488403]
[-628.80914307 399.15344238]
[-634.37255859 385.22357178]
[-639.66979980 371.19030762]
[-644.69885254 357.05871582]
[-649.45794678 342.83395386]
[-653.94537354 328.52114868]
[-658.15948486 314.12551880]
[-662.09875488 299.65225220]
[-665.76177979 285.10659790]
[-669.14721680 270.49386597]
[-672.25378418 255.81932068]
[-686.98504639 258.64599609]
[-701.71630859 261.47268677]
[-716.44757080 264.29937744]
[-731.17883301 267.12603760]
[-736.13824463 281.66220093]
[-747.71185303 291.75906372]
[-762.78643799 294.70062256]
[-777.30700684 289.69564819]
[-787.36749268 278.09042358]
[-790.26184082 263.00671387]
[-785.21136475 248.50193787]
[-773.57464600 238.47782898]
[-758.48193359 235.63081360]
[-743.99310303 240.72673035]
[-734.00549316 252.39479065]
[-719.27423096 249.56811523]
[-704.54296875 246.74142456]
[-689.81170654 243.91474915]
[-675.08044434 241.08807373]
[-677.62615967 226.30589294]
[-679.88989258 211.47792053]
[-681.87097168 196.60954285]
[-683.56854248 181.70614624]
[-684.98211670 166.77313232]
[-686.11114502 151.81590271]
[-686.95513916 136.83990479]
[-687.51391602 121.85054016]
[-687.78717041 106.85325623]
[-687.77484131 91.85348511]
[-687.47698975 76.85667419]
[-686.89361572 61.86824799]
[-686.02496338 46.89364624]
[-684.87145996 31.93829536]
[-683.43334961 17.00761795]
[-681.71130371 2.10702682]
[-679.70581055 -12.75807762]
[-677.41772461 -27.58230591]
[-674.84777832 -42.36028671]
[-671.99700928 -57.08665848]
[-668.86633301 -71.75608826]
[-665.45690918 -86.36325073]
[-661.77008057 -100.90285492]
[-657.80700684 -115.36962891]
[-653.56927490 -129.75833130]
[-649.05841064 -144.06375122]
[-644.27593994 -158.28068542]
[-639.22369385 -172.40399170]
[-633.90344238 -186.42855835]
[-628.31713867 -200.34928894]
[-622.46685791 -214.16113281]
[-616.35467529 -227.85910034]
[-609.98278809 -241.43820190]
[-603.35351562 -254.89353943]
[-596.46929932 -268.22021484]
[-589.33258057 -281.41342163]
[-581.94598389 -294.46835327]
[-574.31213379 -307.38027954]
[-566.43389893 -320.14456177]
[-558.31402588 -332.75650024]
[-549.95556641 -345.21157837]
[-541.36145020 -357.50524902]
[-532.53485107 -369.63308716]
[-523.47894287 -381.59066772]
[-514.19702148 -393.37368774]
[-504.69247437 -404.97781372]
[-494.96868896 -416.39892578]
[-485.02923584 -427.63281250]
[-474.87768555 -438.67544556]
[-464.51776123 -449.52276611]
[-453.95318604 -460.17092896]
[-443.18777466 -470.61599731]
[-432.22549438 -480.85421753]
[-421.07025146 -490.88186646]
[-409.72610474 -500.69531250]
[-398.19720459 -510.29101562]
[-386.48770142 -519.66546631]
[-374.60183716 -528.81530762]
[-362.54391479 -537.73718262]
[-350.31832886 -546.42785645]
[-337.92947388 -554.88421631]
[-325.38189697 -563.10314941]
[-312.68008423 -571.08172607]
[-299.82870483 -578.81701660]
[-286.83236694 -586.30627441]
[-273.69580078 -593.54669189]
[-260.42376709 -600.53570557]
[-247.02107239 -607.27075195]
[-233.49258423 -613.74945068]
[-219.84320068 -619.96936035]
[-206.07788086 -625.92828369]
[-192.20159912 -631.62408447]
[-178.21937561 -637.05462646]
[-164.13632202 -642.21801758]
[-149.95748901 -647.11230469]
[-135.68806458 -651.73577881]
[-121.33319092 -656.08679199]
[-106.89808655 -660.16363525]
[-92.38797760 -663.96496582]
[-77.80812836 -667.48931885]
[-63.16382217 -670.73547363]
[-48.46036911 -673.70220947]
[-33.70309448 -676.38848877]
[-18.89735222 -678.79327393]
[-4.04850817 -680.91577148]
[10.83805466 -682.75518799]
[25.75693893 -684.31085205]
[40.70273590 -685.58221436]
[55.67002869 -686.56878662]
[70.65339661 -687.27020264]
[85.64739990 -687.68621826]
[100.64659882 -687.81671143]
[115.64556885 -687.66162109]
[130.63887024 -687.22094727]
[145.62106323 -686.49493408]
[160.58671570 -685.48382568]
[175.53041077 -684.18792725]
[190.44671631 -682.60778809]
[205.33024597 -680.74395752]
[220.17558289 -678.59704590]
[234.97735596 -676.16796875]
[249.73019409 -673.45745850]
[264.42877197 -670.46661377]
[279.06771851 -667.19641113]
[293.64178467 -663.64813232]
[308.14562988 -659.82299805]
[322.57400513 -655.72241211]
[336.92172241 -651.34790039]
[351.18353271 -646.70098877]
[365.35430908 -641.78344727]
[379.42889404 -636.59698486]
[393.40216064 -631.14343262]
[407.26907349 -625.42492676]
[421.02459717 -619.44335938]
[434.66375732 -613.20104980]
[448.18161011 -606.70019531]
[461.57321167 -599.94311523]
[474.83377075 -592.93231201]
[487.95843506 -585.67034912]
[500.94244385 -578.15979004]
[513.78112793 -570.40344238]
[526.46978760 -562.40399170]
[539.00390625 -554.16448975]
[551.37884521 -545.68780518]
[563.59014893 -536.97705078]
[575.63336182 -528.03540039]
[587.50421143 -518.86608887]
[599.19830322 -509.47241211]
[610.71148682 -499.85778809]
[622.03948975 -490.02572632]
[633.17822266 -479.97976685]
[644.12371826 -469.72357178]
[654.87194824 -459.26083374]
[665.41900635 -448.59536743]
[675.76116943 -437.73104858]
[685.89453125 -426.67178345]
[695.81555176 -415.42156982]
[705.52056885 -403.98452759]
[715.00610352 -392.36480713]
[724.26861572 -380.56658936]
[733.30493164 -368.59414673]
[742.11157227 -356.45184326]
[750.68548584 -344.14407349]
[759.02355957 -331.67529297]
[767.12268066 -319.05001831]
[774.97998047 -306.27285767]
[782.59259033 -293.34841919]
[789.95770264 -280.28137207]
[797.07275391 -267.07647705]
[803.93511963 -253.73851013]
[810.54229736 -240.27230835]
[816.89184570 -226.68275452]
[822.98156738 -212.97477722]
[828.80920410 -199.15335083]
[834.37261963 -185.22346497]
[839.66979980 -171.19018555]
[844.69891357 -157.05860901]
[849.45800781 -142.83383179]
[853.94543457 -128.52104187]
[858.15954590 -114.12539673]
[862.09881592 -99.65213776]
[865.76184082 -85.10649872]
[869.14721680 -70.49375916]
[872.25378418 -55.81921387]
[875.08044434 -41.08818054]
[877.62609863 -26.30600166]
[879.88989258 -11.47803783]
[881.87091064 3.39033890]
[883.56854248 18.29373741]
[884.98211670 33.22675323]
[886.11108398 48.18397903]
[886.95513916 63.15998459]
[887.51391602 78.14934540]
[887.78717041 93.14662933]
[887.77484131 108.14640045]
[887.47698975 123.14321136]
[886.89361572 138.13163757]
[886.02502441 153.10624695]
[884.87145996 168.06158447]
[883.43334961 182.99226379]
[881.71130371 197.89286804]
[879.70587158 212.75796509]
[877.41772461 227.58219910]
[874.84783936 242.36016846]
[871.99700928 257.08654785]
[868.86633301 271.75598145]
[865.45697021 286.36312866]
[861.77008057 300.90274048]
[857.80706787 315.36950684]
[853.56933594 329.75823975]
[849.05841064 344.06362915]
[844.27593994 358.28057861]
[839.22369385 372.40390015]
[833.90350342 386.42843628]
[828.31719971 400.34918213]
[822.46691895 414.16104126]
[816.35467529 427.85897827]
[809.98278809 441.43811035]
[803.35357666 454.89343262]
[796.46929932 468.22012329]
[789.33264160 481.41333008]
[781.94604492 494.46826172]
[774.31219482 507.38018799]
[766.43395996 520.14447021]
[758.31408691 532.75640869]
[749.95562744 545.21148682]
[741.36151123 557.50518799]
[732.53491211 569.63299561]
[723.47900391 581.59057617]
[714.19708252 593.37359619]
[704.69250488 604.97772217]
[694.96875000 616.39880371]
[685.02929688 627.63275146]
[674.87774658 638.67535400]
[664.51782227 649.52270508]
[653.95324707 660.17083740]
[643.18786621 670.61590576]
[632.22558594 680.85412598]
[621.07031250 690.88177490]
[609.72619629 700.69525146]
[598.19726562 710.29095459]
[586.48779297 719.66540527]
[574.60192871 728.81524658]
[562.54400635 737.73712158]
[550.31842041 746.42779541]
[537.92956543 754.88415527]
[525.38201904 763.10308838]
[512.68017578 771.08166504]
[499.82879639 778.81701660]
[486.83245850 786.30621338]
[473.69589233 793.54663086]
[460.42385864 800.53564453]
[447.02117920 807.27075195]
[433.49270630 813.74938965]
[419.84332275 819.96929932]
[406.07797241 825.92828369]
[392.20169067 831.62402344]
[378.21948242 837.05462646]
[364.13641357 842.21795654]
[349.95761108 847.11230469]
[335.68817139 851.73577881]
[321.33331299 856.08673096]
[306.89819336 860.16363525]
[292.38809204 863.96490479]
[277.80822754 867.48925781]
[263.16394043 870.73541260]
[248.46047974 873.70214844]
[233.70320129 876.38842773]
[218.89746094 878.79327393]
[204.04861450 880.91577148]
[189.16206360 882.75518799]
[174.24317932 884.31085205]
[159.29737854 885.58221436]
[144.33007812 886.56878662]
[129.34672546 887.27020264]
[114.35271454 887.68621826]
[99.35351562 887.81671143]
[84.35453796 887.66162109]
[69.36124420 887.22094727]
[54.37905121 886.49493408]
[39.41339493 885.48382568]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[67 86]
[68 85]
[69 84]
[70 83]
[71 82]
] def

init

% Start Annotations
67 86 0.32 1 colorpair
69 84 0.32 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
67 cmark
86 cmark
68 85 3 gmark
68 cmark
69 84 1 gmark
69 cmark
84 cmark
70 83 3 gmark
83 cmark
71 82 4 gmark
71 cmark
82 cmark

% End Annotations
showpage
end
%%EOF
