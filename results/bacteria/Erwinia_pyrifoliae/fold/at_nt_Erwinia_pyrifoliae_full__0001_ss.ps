%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 20:16:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__________________________________________________________________________________________________________AGCCAUGAUUA__ACUACCUCGUUUAGUUGCUUAUGGUGAGCGGCGUUAAGGUGUUCCAG_CACCUCAGCGCCGCGCU_______________________\
) } def
/len { sequence length } bind def

/coor [
[217.56230164 505.87313843]
[203.08349609 509.78979492]
[188.47480774 513.19012451]
[173.75463867 516.06988525]
[158.94154358 518.42535400]
[144.05416870 520.25366211]
[129.11129761 521.55236816]
[114.13174438 522.32000732]
[99.13438416 522.55548096]
[84.13812256 522.25854492]
[69.16183472 521.42956543]
[54.22441101 520.06964111]
[39.34465790 518.18035889]
[24.54133415 515.76422119]
[9.83308601 512.82421875]
[-4.76155186 509.36401367]
[-19.22419167 505.38806152]
[-33.53660965 500.90130615]
[-47.68077469 495.90942383]
[-61.63885880 490.41870117]
[-75.39328766 484.43606567]
[-88.92671204 477.96902466]
[-102.22209930 471.02575684]
[-115.26268005 463.61499023]
[-128.03204346 455.74609375]
[-140.51408386 447.42892456]
[-152.69306946 438.67404175]
[-164.55368042 429.49240112]
[-176.08094788 419.89559937]
[-187.26034546 409.89575195]
[-198.07780457 399.50543213]
[-208.51969910 388.73773193]
[-218.57286072 377.60623169]
[-228.22460938 366.12496948]
[-237.46279907 354.30834961]
[-246.27580261 342.17132568]
[-254.65249634 329.72918701]
[-262.58233643 316.99755859]
[-270.05529785 303.99255371]
[-277.06201172 290.73046875]
[-283.59365845 277.22811890]
[-289.64193726 263.50244141]
[-295.19931030 249.57073975]
[-300.25869751 235.45057678]
[-304.81378174 221.15975952]
[-308.85879517 206.71629333]
[-312.38867188 192.13835144]
[-315.39892578 177.44432068]
[-317.88577271 162.65270996]
[-319.84609985 147.78215027]
[-321.27743530 132.85139465]
[-322.17794800 117.87924194]
[-322.54653931 102.88455963]
[-322.38269043 87.88624573]
[-321.68667603 72.90319824]
[-320.45932007 57.95428848]
[-318.70220947 43.05835724]
[-316.41751099 28.23417473]
[-313.60815430 13.50041294]
[-310.27764893 -1.12435937]
[-306.43020630 -15.62171555]
[-302.07064819 -29.97339058]
[-297.20449829 -44.16130066]
[-291.83786011 -58.16756439]
[-285.97750854 -71.97454071]
[-279.63085938 -85.56483459]
[-272.80584717 -98.92131805]
[-265.51110840 -112.02716064]
[-257.75582886 -124.86584473]
[-249.54978943 -137.42120361]
[-240.90332031 -149.67741394]
[-231.82731628 -161.61904907]
[-222.33320618 -173.23101807]
[-212.43296814 -184.49873352]
[-202.13905334 -195.40798950]
[-191.46446228 -205.94502258]
[-180.42260742 -216.09657288]
[-169.02743530 -225.84985352]
[-157.29330444 -235.19255066]
[-145.23497009 -244.11291504]
[-132.86764526 -252.59970093]
[-120.20690918 -260.64221191]
[-107.26871490 -268.23031616]
[-94.06935883 -275.35446167]
[-80.62548828 -282.00564575]
[-66.95402527 -288.17553711]
[-53.07219696 -293.85629272]
[-38.99750519 -299.04083252]
[-24.74767685 -303.72256470]
[-10.34066772 -307.89559937]
[4.20537043 -311.55471802]
[18.87210846 -314.69525146]
[33.64106750 -317.31329346]
[48.49363708 -319.40551758]
[63.41110611 -320.96929932]
[78.37467194 -322.00265503]
[93.36549377 -322.50427246]
[108.36466980 -322.47357178]
[123.35330200 -321.91055298]
[138.31251526 -320.81591797]
[153.22344971 -319.19107056]
[168.06733704 -317.03805542]
[182.82545471 -314.35955811]
[197.47920227 -311.15896606]
[212.01013184 -307.44033813]
[226.39993286 -303.20831299]
[240.63046265 -298.46826172]
[254.68380737 -293.22616577]
[268.54226685 -287.48858643]
[282.18832397 -281.26275635]
[295.60485840 -274.55657959]
[308.77493286 -267.37844849]
[321.68194580 -259.73742676]
[334.30963135 -251.64311218]
[346.64208984 -243.10575867]
[358.66378784 -234.13609314]
[370.35958862 -224.74540710]
[381.71472168 -214.94555664]
[392.71490479 -204.74887085]
[403.34625244 -194.16821289]
[413.59539795 -183.21690369]
[423.44943237 -171.90873718]
[432.89590454 -160.25796509]
[441.92294312 -148.27928162]
[450.51913452 -135.98776245]
[458.67370605 -123.39890289]
[466.37634277 -110.52855682]
[473.61734009 -97.39295197]
[480.38757324 -84.00863647]
[486.67855835 -70.39247131]
[492.48229980 -56.56160736]
[497.79153442 -42.53348160]
[502.59954834 -28.32576370]
[506.90026855 -13.95635700]
[510.68832397 0.55663425]
[513.95892334 15.19492245]
[516.70794678 29.94006538]
[518.93188477 44.77348328]
[520.62799072 59.67648315]
[521.79412842 74.63029480]
[522.42877197 89.61606598]
[522.53118896 104.61492920]
[522.10119629 119.60797119]
[521.13934326 134.57630920]
[519.64691162 149.50108337]
[517.62573242 164.36347961]
[515.07830811 179.14479065]
[512.00787354 193.82637024]
[526.57202148 197.41610718]
[541.13616943 201.00582886]
[555.70025635 204.59556580]
[570.26440430 208.18530273]
[584.82855225 211.77503967]
[599.39263916 215.36477661]
[613.95678711 218.95451355]
[628.52093506 222.54425049]
[643.08502197 226.13398743]
[652.39526367 214.08245850]
[665.80548096 206.86537170]
[680.99224854 205.73312378]
[695.32440186 210.88189697]
[706.31872559 221.41963196]
[712.07049561 235.52058411]
[711.58312988 250.74171448]
[704.94110107 264.44583130]
[693.29510498 274.25863647]
[678.66296387 278.47998047]
[663.57971191 276.37854004]
[650.65869141 268.31832886]
[642.13848877 255.69589233]
[639.49530029 240.69810486]
[624.93115234 237.10836792]
[610.36706543 233.51863098]
[595.80291748 229.92890930]
[581.23876953 226.33917236]
[566.67468262 222.74943542]
[552.11053467 219.15969849]
[537.54638672 215.56996155]
[522.98229980 211.98022461]
[508.41815186 208.39048767]
[504.31399536 222.81727600]
[499.70040894 237.08930969]
[494.58319092 251.18861389]
[488.96881104 265.09741211]
[482.86431885 278.79821777]
[476.27743530 292.27371216]
[469.21643066 305.50695801]
[461.69024658 318.48126221]
[453.70831299 331.18026733]
[445.28070068 343.58801270]
[436.41806030 355.68881226]
[427.13153076 367.46746826]
[417.43283081 378.90911865]
[407.33413696 389.99932861]
[396.84823608 400.72415161]
[385.98828125 411.07006836]
[374.76800537 421.02404785]
[363.20150757 430.57351685]
[351.30340576 439.70648193]
[339.08862305 448.41140747]
[326.57263184 456.67733765]
[313.77114868 464.49386597]
[300.70028687 471.85113525]
[287.37658691 478.73989868]
[273.81677246 485.15142822]
[260.03796387 491.07766724]
[246.05747986 496.51116943]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[148 180]
[149 179]
[150 178]
[151 177]
[152 176]
[153 175]
[154 174]
[155 173]
[156 172]
[157 171]
] def

init

% Start Annotations
148 180 0.0 1 colorpair
149 179 0.32 1 colorpair
150 178 0.16 1 colorpair
151 177 0.32 1 colorpair
152 176 0.32 1 colorpair
154 174 0.16 1 colorpair
157 171 0.32 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
149 cmark
179 cmark
178 cmark
151 cmark
177 cmark
152 cmark
176 cmark
153 175 3 gmark
153 cmark
175 cmark
154 cmark
174 cmark
155 173 6 gmark
155 cmark
173 cmark
156 172 3 gmark
156 cmark
172 cmark
157 cmark
171 cmark

% End Annotations
showpage
end
%%EOF
