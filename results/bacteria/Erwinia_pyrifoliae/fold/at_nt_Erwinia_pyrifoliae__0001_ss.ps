%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 20:16:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_____________________________________________________________________________________________________________AGCCAUAAUCAACU_CCUCGU_UAGUUGCUUAUGGUUAGCGGCGUUAAGGUGUGCCAG_CACCUCAGCCCCGCGCU_______________________\
) } def
/len { sequence length } bind def

/coor [
[-35.35078049 505.60375977]
[-48.26883316 513.22766113]
[-61.51211929 520.27148438]
[-75.05461121 526.72137451]
[-88.86968994 532.56463623]
[-102.93019867 537.78979492]
[-117.20848846 542.38653564]
[-131.67649841 546.34588623]
[-146.30580139 549.66003418]
[-161.06762695 552.32250977]
[-175.93295288 554.32800293]
[-190.87255859 555.67266846]
[-205.85708618 556.35369873]
[-220.85708618 556.36993408]
[-235.84304810 555.72125244]
[-250.78553772 554.40893555]
[-265.65515137 552.43560791]
[-280.42269897 549.80511475]
[-295.05914307 546.52258301]
[-309.53567505 542.59454346]
[-323.82388306 538.02862549]
[-337.89566040 532.83392334]
[-351.72335815 527.02056885]
[-365.27975464 520.59997559]
[-378.53823853 513.58483887]
[-391.47274780 505.98889160]
[-404.05786133 497.82705688]
[-416.26879883 489.11541748]
[-428.08160400 479.87109375]
[-439.47302246 470.11221313]
[-450.42071533 459.85803223]
[-460.90307617 449.12863159]
[-470.89956665 437.94515991]
[-480.39053345 426.32958984]
[-489.35726929 414.30471802]
[-497.78219604 401.89419556]
[-505.64874268 389.12246704]
[-512.94146729 376.01458740]
[-519.64593506 362.59631348]
[-525.74908447 348.89407349]
[-531.23889160 334.93478394]
[-536.10455322 320.74584961]
[-540.33648682 306.35519409]
[-543.92633057 291.79110718]
[-546.86712646 277.08221436]
[-549.15307617 262.25741577]
[-550.77960205 247.34587097]
[-551.74359131 232.37687683]
[-552.04315186 217.37986755]
[-551.67767334 202.38432312]
[-550.64782715 187.41970825]
[-548.95568848 172.51547241]
[-546.60455322 157.70086670]
[-543.59906006 143.00505066]
[-539.94512939 128.45689392]
[-535.64996338 114.08499908]
[-530.72192383 99.91761780]
[-525.17077637 85.98260498]
[-519.00738525 72.30733490]
[-512.24395752 58.91871262]
[-504.89364624 45.84303665]
[-496.97097778 33.10602570]
[-488.49154663 20.73270607]
[-479.47198486 8.74740696]
[-469.93002319 -2.82631445]
[-459.88442993 -13.96570683]
[-449.35494995 -24.64887238]
[-438.36227417 -34.85481262]
[-426.92800903 -44.56346130]
[-415.07464600 -53.75573730]
[-402.82550049 -62.41357422]
[-390.20462036 -70.51994324]
[-377.23681641 -78.05892181]
[-363.94760132 -85.01567841]
[-350.36306763 -91.37654877]
[-336.50994873 -97.12902069]
[-322.41543579 -102.26178741]
[-308.10729980 -106.76477051]
[-293.61361694 -110.62909698]
[-278.96289062 -113.84719086]
[-264.18389893 -116.41271973]
[-249.30574036 -118.32063293]
[-234.35762024 -119.56718445]
[-219.36895752 -120.14993286]
[-204.36917114 -120.06771851]
[-189.38778687 -119.32071686]
[-174.45423889 -117.91038513]
[-159.59786987 -115.83950043]
[-144.84791565 -113.11212921]
[-130.23333740 -109.73364258]
[-115.78288269 -105.71067047]
[-101.52494812 -101.05112457]
[-87.48756409 -95.76417542]
[-73.69832611 -89.86019897]
[-60.18434143 -83.35080719]
[-46.97216797 -76.24879456]
[-34.08778381 -68.56813049]
[-21.55651474 -60.32390213]
[-9.40299320 -51.53232193]
[2.34889126 -42.21067047]
[13.67603588 -32.37726593]
[24.55617523 -22.05144691]
[34.96792221 -11.25350571]
[44.89080811 -0.00467036]
[54.30533218 11.67294788]
[63.19298172 23.75639343]
[71.53629303 36.22191620]
[79.31885529 49.04500580]
[86.52538300 62.20046234]
[93.14169312 75.66242218]
[99.16384125 89.42640686]
[108.90127563 78.01665497]
[118.63871002 66.60691071]
[128.37614441 55.19715881]
[138.11357117 43.78741074]
[147.85101318 32.37765884]
[157.58843994 20.96791077]
[160.66162109 5.44804716]
[174.80906677 0.78981143]
[184.54649353 -10.61993790]
[194.28392029 -22.02968788]
[204.02136230 -33.43943787]
[213.75878906 -44.84918594]
[209.20292664 -59.58850861]
[213.36099243 -74.44496155]
[224.90614319 -84.67790222]
[240.15437317 -87.02203369]
[254.24003601 -80.72935486]
[262.66842651 -67.80783844]
[262.75009155 -52.38068771]
[254.45898438 -39.37065887]
[240.44073486 -32.92919540]
[225.16854858 -35.11175156]
[215.43110657 -23.70200348]
[205.69367981 -12.29225349]
[195.95623779 -0.88250428]
[186.21881104 10.52724552]
[183.84211731 25.23100662]
[168.99819946 30.70534515]
[159.26075745 42.11509323]
[149.52333069 53.52484512]
[139.78588867 64.93459320]
[130.04846191 76.34434509]
[120.31102753 87.75408936]
[110.57359314 99.16384125]
[112.84828949 106.31056976]
[117.39768982 120.60403442]
[119.67238617 127.75076294]
[134.21339417 131.43304443]
[148.75439453 135.11532593]
[163.29539490 138.79760742]
[177.83639526 142.47988892]
[192.37741089 146.16217041]
[206.91841125 149.84445190]
[221.45941162 153.52673340]
[236.00041199 157.20901489]
[250.54142761 160.89129639]
[265.08242798 164.57357788]
[279.62344360 168.25585938]
[294.16442871 171.93815613]
[308.70544434 175.62043762]
[321.28353882 166.32928467]
[336.88787842 167.34849548]
[348.15054321 178.19680786]
[349.75369263 193.75199890]
[340.94030762 206.66937256]
[325.87185669 210.84974670]
[311.66317749 204.31927490]
[305.02316284 190.16143799]
[290.48214722 186.47915649]
[275.94113159 182.79687500]
[261.40014648 179.11459351]
[246.85914612 175.43231201]
[232.31813049 171.75003052]
[217.77713013 168.06774902]
[203.23612976 164.38545227]
[188.69512939 160.70317078]
[174.15411377 157.02088928]
[159.61311340 153.33860779]
[145.07211304 149.65632629]
[130.53111267 145.97404480]
[115.99010468 142.29176331]
[119.02735901 156.98104858]
[121.41051483 171.79052734]
[123.13488770 186.69108582]
[124.19709015 201.65342712]
[124.59503174 216.64814758]
[124.32793427 231.64576721]
[123.39631653 246.61680603]
[121.80200958 261.53182983]
[119.54815674 276.36154175]
[116.63918304 291.07678223]
[113.08080292 305.64859009]
[108.88001251 320.04837036]
[104.04507446 334.24777222]
[98.58548737 348.21893311]
[92.51198578 361.93432617]
[85.83650970 375.36706543]
[78.57218170 388.49069214]
[70.73327637 401.27941895]
[62.33521271 413.70809937]
[53.39448929 425.75231934]
[43.92868423 437.38842773]
[33.95640182 448.59350586]
[23.49725342 459.34552002]
[12.57179260 469.62338257]
[1.20149672 479.40686035]
[-10.59128284 488.67672729]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[111 145]
[112 144]
[113 143]
[114 142]
[115 141]
[116 140]
[117 139]
[119 137]
[120 136]
[121 135]
[122 134]
[123 133]
[148 182]
[149 181]
[150 180]
[151 179]
[152 178]
[153 177]
[154 176]
[155 175]
[156 174]
[157 173]
[158 172]
[159 171]
[160 170]
[161 169]
] def

init

% Start Annotations
111 145 0.16 1 colorpair
112 144 0.0 1 colorpair
113 143 0.0 0.6 colorpair
114 142 0.0 0.6 colorpair
115 141 0.16 1 colorpair
116 140 0.32 1 colorpair
117 139 0.0 1 colorpair
119 137 0.16 0.6 colorpair
120 136 0.16 1 colorpair
121 135 0.0 0.6 colorpair
122 134 0.16 0.2 colorpair
123 133 0.0 1 colorpair
148 182 0.0 0.6 colorpair
149 181 0.0 1 colorpair
150 180 0.32 1 colorpair
151 179 0.16 1 colorpair
152 178 0.32 1 colorpair
153 177 0.32 1 colorpair
154 176 0.16 0.6 colorpair
155 175 0.16 1 colorpair
157 173 0.16 0.6 colorpair
158 172 0.32 1 colorpair
159 171 0.0 0.6 colorpair
160 170 0.16 0.6 colorpair
161 169 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
145 cmark
113 143 1 gmark
114 142 1 gmark
141 cmark
116 cmark
140 cmark
119 137 1 gmark
119 cmark
120 cmark
136 cmark
121 135 1 gmark
122 134 2 gmark
122 cmark
134 cmark
148 182 1 gmark
150 cmark
180 cmark
179 cmark
152 cmark
178 cmark
153 cmark
177 cmark
154 176 1 gmark
154 cmark
176 cmark
155 cmark
175 cmark
156 174 3 gmark
156 cmark
174 cmark
157 173 1 gmark
157 cmark
173 cmark
158 cmark
172 cmark
159 171 1 gmark
160 170 1 gmark
160 cmark
170 cmark
161 169 1 gmark

% End Annotations
showpage
end
%%EOF
