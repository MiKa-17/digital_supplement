%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 18:59:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_____________AUGAAGCCACUGCAAUAUACUCUGGCCUGGU___UAUUUAUGGUUUGUGUCACGAUAUUAAUUUUCACAUUAAUUAACCAGGAUACGCUAUGCGAGCUCACCAUGAAGGACGGAAAUAAGGAGGUGGCGGCUUUGCUGGCCUGU_GAAUCCGGUAA____________\
) } def
/len { sequence length } bind def

/coor [
[91.92353058 517.70367432]
[76.93476105 517.14453125]
[61.97572708 516.04772949]
[47.06570435 514.41467285]
[32.22391129 512.24743652]
[17.46947670 509.54888916]
[2.82142091 506.32238770]
[-11.70137691 502.57220459]
[-26.08019638 498.30310059]
[-40.29650497 493.52059937]
[-54.33197784 488.23086548]
[-68.16852570 482.44073486]
[-81.78830719 476.15765381]
[-95.17378235 469.38970947]
[-108.30767822 462.14566040]
[-121.17308044 454.43481445]
[-133.75340271 446.26712036]
[-146.03242493 437.65310669]
[-157.99432373 428.60388184]
[-169.62367249 419.13107300]
[-180.90550232 409.24694824]
[-191.82525635 398.96420288]
[-202.36885071 388.29611206]
[-212.52272034 377.25640869]
[-222.27375793 365.85937500]
[-231.60939026 354.11962891]
[-240.51760864 342.05233765]
[-248.98690796 329.67303467]
[-257.00637817 316.99774170]
[-264.56570435 304.04272461]
[-271.65509033 290.82467651]
[-278.26544189 277.36071777]
[-284.38824463 263.66812134]
[-290.01556396 249.76455688]
[-295.14019775 235.66796875]
[-299.75549316 221.39649963]
[-303.85552979 206.96856689]
[-307.43502808 192.40275574]
[-310.48934937 177.71783447]
[-313.01458740 162.93273926]
[-315.00744629 148.06652832]
[-316.46539307 133.13836670]
[-317.38653564 118.16748810]
[-317.76968384 103.17319489]
[-317.61434937 88.17481232]
[-316.92071533 73.19166565]
[-315.68969727 58.24307632]
[-313.92288208 43.34831238]
[-311.62255859 28.52656746]
[-308.79162598 13.79694843]
[-305.43380737 -0.82155895]
[-301.55340576 -15.31011200]
[-297.15542603 -29.65003586]
[-292.24554443 -43.82284546]
[-286.83004761 -57.81027603]
[-280.91595459 -71.59429932]
[-274.51089478 -85.15714264]
[-267.62307739 -98.48132324]
[-260.26144409 -111.54968262]
[-252.43542480 -124.34535217]
[-244.15515137 -136.85185242]
[-235.43127441 -149.05307007]
[-226.27503967 -160.93327332]
[-216.69824219 -172.47714233]
[-206.71325684 -183.66978455]
[-196.33291626 -194.49681091]
[-185.57063293 -204.94424438]
[-174.44024658 -214.99861145]
[-162.95613098 -224.64695740]
[-151.13307190 -233.87684631]
[-138.98631287 -242.67639160]
[-126.53150940 -251.03425598]
[-113.78472137 -258.93963623]
[-100.76238251 -266.38235474]
[-87.48126221 -273.35284424]
[-73.95848846 -279.84210205]
[-60.21149445 -285.84173584]
[-46.25799179 -291.34405518]
[-32.11597061 -296.34194946]
[-17.80365753 -300.82897949]
[-3.33950305 -304.79934692]
[11.25785160 -308.24795532]
[25.96959114 -311.17037964]
[40.77675247 -313.56277466]
[55.66024780 -315.42214966]
[70.60089874 -316.74603271]
[85.57943726 -317.53277588]
[100.57656860 -317.78134155]
[115.57295990 -317.49139404]
[130.54927063 -316.66329956]
[145.48620605 -315.29818726]
[160.36451721 -313.39773560]
[175.16502380 -310.96447754]
[189.86863708 -308.00146484]
[204.45642090 -304.51257324]
[218.90956116 -300.50228882]
[233.20942688 -295.97576904]
[247.33760071 -290.93887329]
[261.27587891 -285.39807129]
[267.31378174 -299.12918091]
[273.35168457 -312.86029053]
[274.19250488 -329.79339600]
[290.69659424 -333.67297363]
[298.99334717 -318.88784790]
[287.08279419 -306.82238770]
[281.04489136 -293.09127808]
[275.00698853 -279.36013794]
[288.51177979 -272.83358765]
[301.77359009 -265.82644653]
[314.77532959 -258.34777832]
[327.50024414 -250.40721130]
[339.93191528 -242.01498413]
[352.05432129 -233.18193054]
[363.85183716 -223.91940308]
[375.30926514 -214.23937988]
[386.41183472 -204.15429688]
[397.14520264 -193.67718506]
[407.49560547 -182.82153320]
[417.44964600 -171.60134888]
[426.99450684 -160.03106689]
[436.11788940 -148.12562561]
[444.80804443 -135.90036011]
[453.05374146 -123.37104034]
[460.84439087 -110.55379486]
[468.16992188 -97.46516418]
[475.02087402 -84.12200165]
[481.38845825 -70.54151917]
[487.26446533 -56.74121475]
[492.64129639 -42.73888016]
[497.51202393 -28.55256271]
[501.87039185 -14.20054531]
[505.71075439 0.29867083]
[509.02816772 14.92639637]
[511.81838989 29.66377831]
[514.07775879 44.49182129]
[515.80346680 59.39141083]
[516.99316406 74.34333801]
[517.64538574 89.32834625]
[517.75933838 104.32710266]
[517.33477783 119.32028198]
[516.37225342 134.28855896]
[514.87310791 149.21263123]
[512.83917236 164.07328796]
[510.27313232 178.85134888]
[507.17825317 193.52777100]
[503.55853271 208.08364868]
[499.41867065 222.50019836]
[494.76394653 236.75886536]
[489.60043335 250.84124756]
[483.93472290 264.72921753]
[477.77410889 278.40484619]
[471.12658691 291.85049438]
[464.00070190 305.04888916]
[456.40563965 317.98297119]
[448.35119629 330.63610840]
[439.84774780 342.99194336]
[430.90621948 355.03457642]
[421.53820801 366.74850464]
[411.75570679 378.11859131]
[401.57141113 389.13018799]
[390.99838257 399.76910400]
[380.05026245 410.02163696]
[368.74118042 419.87457275]
[357.08569336 429.31521606]
[345.09884644 438.33139038]
[332.79608154 446.91143799]
[320.19326782 455.04437256]
[307.30661011 462.71963501]
[294.15274048 469.92739868]
[280.74862671 476.65832520]
[267.11154175 482.90377808]
[253.25906372 488.65567017]
[239.20903015 493.90661621]
[224.97956848 498.64981079]
[210.58900452 502.87918091]
[196.05590820 506.58926392]
[181.39900208 509.77526855]
[166.63716125 512.43310547]
[151.78944397 514.55932617]
[136.87496948 516.15118408]
[121.91295624 517.20666504]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[99 107]
[100 106]
[101 105]
] def

init

% Start Annotations
99 107 0.0 1 colorpair
100 106 0.16 1 colorpair
101 105 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
106 cmark
101 cmark

% End Annotations
showpage
end
%%EOF
