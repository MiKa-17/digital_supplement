%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 18:59:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUUUUCUGG__UGCGUAUUAAUGGUUUGUAUAACGCUAUUAAUGUUCACAUUCCUGACUCGGGAUUCGCUGUGCGAACUGCGCUUGAAGGACGGGAAUAGGGAGGUUGCUGCUUUUCUGGCUUACGAAUCCGGUAAGUAGCG_UCUGACGGGCGGGGGCAACCCCGCCUUUUCAG___AGGCGAGGC_______GGUUUUAUGGCUGCAAGCGCCUUUAUUAAG_GUCG_\
) } def
/len { sequence length } bind def

/coor [
[148.75570679 201.54682922]
[148.46907043 191.93077087]
[148.69363403 182.31295776]
[149.42878723 172.72052002]
[150.67248535 163.18057251]
[152.42118835 153.72004700]
[154.67001343 144.36566162]
[157.41258240 135.14381409]
[143.35995483 129.89755249]
[129.30731201 124.65127563]
[115.25466919 119.40500641]
[125.07182312 130.74623108]
[138.28260803 137.85083008]
[150.69770813 146.26896667]
[162.18701172 155.91242981]
[172.63005066 166.68009949]
[181.91738892 178.45912170]
[189.95164490 191.12603760]
[196.64862061 204.54804993]
[201.93812561 218.58447266]
[205.76469421 233.08818054]
[208.08822632 247.90711975]
[208.88435364 262.88598633]
[208.14474487 277.86773682]
[205.87713623 292.69534302]
[202.10531616 307.21337891]
[196.86882019 321.26965332]
[190.22253418 334.71685791]
[182.23611450 347.41397095]
[172.99328613 359.22796631]
[162.59094238 370.03497314]
[151.13812256 379.72171021]
[138.75486755 388.18661499]
[125.57098389 395.34100342]
[111.72467041 401.10986328]
[97.36107635 405.43270874]
[82.63075256 408.26425171]
[67.68811035 409.57479858]
[52.68978882 409.35058594]
[37.79299545 407.59402466]
[23.15388680 404.32345581]
[8.92591381 399.57324219]
[-4.74178314 393.39309692]
[-17.70593452 385.84783936]
[-29.83064842 377.01657104]
[-40.98882675 366.99185181]
[-51.06351089 355.87875366]
[-59.94909286 343.79379272]
[-67.55242920 330.86361694]
[-73.79382324 317.22381592]
[-78.60785675 303.01727295]
[-81.94405365 288.39300537]
[-83.76745605 273.50424194]
[-84.05893707 258.50708008]
[-82.81545258 243.55870056]
[-80.05004120 228.81582642]
[-75.79167175 214.43296814]
[-70.08499908 200.56091309]
[-62.98983765 187.34506226]
[-54.58055878 174.92395020]
[-44.94530869 163.42778015]
[-34.18508911 152.97705078]
[-22.41269493 143.68132019]
[-9.75152302 135.63801575]
[3.66570711 128.93145752]
[17.69835281 123.63194275]
[32.19932175 119.79502869]
[47.01147842 117.46146393]
[61.93314362 115.93046570]
[48.10414886 110.12021637]
[34.27515793 104.30996704]
[17.33049393 103.74900055]
[13.17878723 87.31124878]
[27.82483864 78.77136993]
[40.08540726 90.48097229]
[53.91439819 96.29122162]
[67.74339294 102.10147095]
[74.07259369 98.07765198]
[64.72209167 86.34870148]
[55.37159348 74.61975861]
[46.02109146 62.89081573]
[36.67059326 51.16187286]
[27.32009125 39.43292999]
[17.96958923 27.70398521]
[8.61908817 15.97504044]
[-0.73141289 4.24609613]
[-10.08191395 -7.48284769]
[-19.43241501 -19.21179199]
[-28.78291702 -30.94073677]
[-38.13341904 -42.66968155]
[-50.80451202 -50.69733810]
[-58.76319885 -63.41187286]
[-60.44696426 -78.31707001]
[-55.52524567 -92.48664093]
[-44.96430969 -103.13871002]
[-30.83754921 -108.18198395]
[-15.91843414 -106.62634277]
[-3.13599205 -98.77719116]
[5.00023794 -86.17553711]
[6.89288759 -71.29536438]
[13.54606438 -57.85158539]
[20.19924164 -44.40780258]
[26.85241699 -30.96402168]
[33.50559616 -17.52024269]
[40.15877151 -4.07646084]
[46.81194687 9.36732006]
[53.46512604 22.81110001]
[60.11830139 36.25488281]
[66.77147675 49.69866180]
[73.42465210 63.14244080]
[80.07783508 76.58621979]
[86.73101044 90.03000641]
[93.06021118 86.00617981]
[93.66679382 71.01844788]
[81.98294830 60.62509918]
[79.76448059 45.14567947]
[88.05888367 31.88910103]
[102.94979858 27.11471558]
[117.40618134 33.07683945]
[124.60218048 46.96034241]
[121.14006042 62.20985794]
[108.65452576 71.62503052]
[108.04794312 86.61276245]
[110.56206512 71.82495880]
[120.95085907 61.00493240]
[135.62425232 57.89179230]
[149.51152039 63.56135178]
[157.81359863 76.05436707]
[157.66152954 91.05359650]
[149.10786438 103.37571716]
[135.10850525 108.76255035]
[120.50093842 105.35237122]
[134.55357361 110.59864044]
[148.60621643 115.84490967]
[162.65885925 121.09117889]
[173.20771790 100.02359772]
[186.40245056 80.50520325]
[202.01933289 62.86636734]
[219.79368591 47.40561295]
[239.42431641 34.38454437]
[260.57861328 24.02343369]
[282.89819336 16.49748039]
[306.00500488 11.93386364]
[329.50762939 10.40957737]
[353.00811768 11.95014763]
[376.10842896 16.52919197]
[398.41744995 24.06887817]
[419.55746460 34.44124603]
[439.17059326 47.47037506]
[456.92486572 62.93538284]
[472.51980591 80.57414246]
[485.69149780 100.08774567]
[496.21716309 121.14557648]
[510.26980591 115.89930725]
[522.40319824 99.78890991]
[541.31634521 103.85359192]
[555.22241211 98.23032379]
[561.16180420 83.58451843]
[575.75006104 77.50516510]
[590.33221436 83.59902954]
[596.25701904 98.25074005]
[590.00933838 112.76768494]
[575.29577637 118.53723145]
[560.84570312 112.13639832]
[546.93963623 117.75966644]
[543.82037354 127.47049713]
[535.70550537 134.00514221]
[525.11614990 135.02407837]
[515.51605225 129.95195007]
[501.46343994 135.19821167]
[504.20755005 144.41110229]
[506.45843506 153.75686646]
[508.20971680 163.20910645]
[509.45645142 172.74114990]
[510.19506836 182.32608032]
[510.42352295 191.93682861]
[510.14108276 201.54626465]
[509.34863281 211.12724304]
[508.04830933 220.65270996]
[506.24380493 230.09576416]
[503.94021606 239.42974854]
[501.14401245 248.62831116]
[497.86312866 257.66543579]
[494.10675049 266.51565552]
[489.88549805 275.15393066]
[485.21127319 283.55587769]
[480.09729004 291.69778442]
[474.55795288 299.55661011]
[468.60891724 307.11019897]
[462.26693726 314.33718872]
[455.54995728 321.21719360]
[448.47689819 327.73071289]
[441.06774902 333.85943604]
[433.34338379 339.58596802]
[425.32565308 344.89416504]
[417.03717041 349.76904297]
[408.50131226 354.19680786]
[399.74221802 358.16491699]
[390.78457642 361.66220093]
[381.65371704 364.67877197]
[372.37539673 367.20605469]
[362.97579956 369.23693848]
[353.48147583 370.76565552]
[343.91925049 371.78790283]
[334.31610107 372.30078125]
[324.69912720 372.30279541]
[315.09555054 371.79394531]
[305.53240967 370.77566528]
[296.03677368 369.25079346]
[286.63540649 367.22366333]
[277.35491943 364.69995117]
[268.22146606 361.68679810]
[259.26083374 358.19268799]
[250.49838257 354.22747803]
[241.95881653 349.80233765]
[233.66627502 344.92974854]
[225.64418030 339.62350464]
[217.91519165 333.89852905]
[210.50112915 327.77102661]
[203.42294312 321.25823975]
[196.70062256 314.37857056]
[190.35316467 307.15142822]
[184.39851379 299.59725952]
[178.85346985 291.73730469]
[173.73371887 283.59381104]
[169.05372620 275.18975830]
[164.82670593 266.54888916]
[161.06460571 257.69552612]
[157.77807617 248.65473938]
[154.97639465 239.45201111]
[152.66749573 230.11335754]
[150.85791016 220.66511536]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 135]
[9 134]
[10 133]
[11 132]
[69 77]
[70 76]
[71 75]
[113 123]
[114 122]
[153 170]
[154 169]
[156 165]
[157 164]
] def

init

% Start Annotations
8 135 0.16 0.2 colorpair
9 134 0.16 0.2 colorpair
11 132 0.0 0.2 colorpair
69 77 0.0 0.2 colorpair
70 76 0.16 0.2 colorpair
71 75 0.16 0.2 colorpair
113 123 0.0 0.2 colorpair
114 122 0.0 0.2 colorpair
154 169 0.16 0.2 colorpair
156 165 0.16 0.2 colorpair
157 164 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
8 135 2 gmark
8 cmark
9 134 2 gmark
134 cmark
10 133 3 gmark
11 132 2 gmark
69 77 2 gmark
70 76 2 gmark
76 cmark
71 75 2 gmark
71 cmark
113 123 2 gmark
114 122 2 gmark
153 170 3 gmark
153 cmark
170 cmark
154 169 2 gmark
154 cmark
169 cmark
156 165 2 gmark
165 cmark
157 164 2 gmark

% End Annotations
showpage
end
%%EOF
