%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 20:08:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___AAGACGCU__UCCACAGGUGGCCAGCACAUACGGGCACCAAAUUGACGCGAAAACCA_UCGCGGCUAUUAUC_ACCAGCCU___GAUCAUACCCGAGACAGAAAGCAGAAAGCAA_\
) } def
/len { sequence length } bind def

/coor [
[104.45117188 173.37590027]
[89.46276093 172.78634644]
[76.10411072 165.96385193]
[66.83949280 154.16694641]
[63.37794495 139.57182312]
[66.35802460 124.87083435]
[75.22998810 112.77587128]
[88.35430908 105.51895905]
[73.60548401 102.78542328]
[58.85665894 100.05188751]
[44.10783386 97.31835938]
[37.56603622 99.21836853]
[31.93480301 97.67304230]
[28.66747284 94.03640747]
[14.08192444 90.53472900]
[-0.50362426 87.03304291]
[-15.08917332 83.53136444]
[-29.67472267 80.02968597]
[-44.26026917 76.52800751]
[-58.84582138 73.02632141]
[-73.43136597 69.52464294]
[-84.63441467 81.60549927]
[-100.30094910 86.39550018]
[-116.16231537 82.68769836]
[-127.94593811 71.57730865]
[-132.52618408 56.14043427]
[-147.19839478 53.02175903]
[-161.87062073 49.90308380]
[-176.58239746 46.97672653]
[-187.74496460 57.75526047]
[-203.11578369 59.88073730]
[-216.78445435 52.53586960]
[-223.49508667 38.54491425]
[-220.66732788 23.28767395]
[-209.38848877 12.63086987]
[-193.99552917 10.67226124]
[-180.40733337 18.16497421]
[-173.84886169 32.22790527]
[-166.60958862 30.32965088]
[-158.75193787 35.23086929]
[-144.07972717 38.34954453]
[-129.40751648 41.46821976]
[-120.90787506 30.69457626]
[-108.52449036 24.62876892]
[-94.66932678 24.51624107]
[-82.06883240 30.43658829]
[-73.22740173 41.27659225]
[-69.92968750 54.93909454]
[-55.34413910 58.44077682]
[-40.75859070 61.94245529]
[-26.17304230 65.44413757]
[-11.58749294 68.94581604]
[2.99805617 72.44749451]
[17.58360481 75.94918060]
[32.16915512 79.45085907]
[46.84136963 82.56953430]
[61.59019089 85.30307007]
[76.33901215 88.03659821]
[91.08783722 90.77013397]
[100.38027191 87.29709625]
[109.26903534 91.48447418]
[124.18685913 89.91654968]
[139.10469055 88.34861755]
[154.02252197 86.78069305]
[168.94035339 85.21276855]
[183.85816956 83.64483643]
[198.77600098 82.07691193]
[213.69383240 80.50898743]
[228.61166382 78.94105530]
[243.17626953 67.76761627]
[258.93124390 75.37663269]
[273.80291748 73.41873932]
[288.67459106 71.46084595]
[303.54626465 69.50295258]
[318.41793823 67.54505920]
[333.28961182 65.58716583]
[348.13436890 63.43477631]
[362.94970703 61.08825684]
[377.76501465 58.74174118]
[392.58035278 56.39522552]
[407.39566040 54.04870605]
[422.21099854 51.70219040]
[428.32443237 37.53782272]
[441.13796997 28.94614220]
[456.56283569 28.66872787]
[469.67703247 36.79410172]
[476.29583740 50.72948074]
[474.30725098 66.02814484]
[464.34579468 77.80833435]
[449.59014893 82.31104279]
[434.74877930 78.09947205]
[424.55749512 66.51751709]
[409.74218750 68.86402893]
[394.92684937 71.21054840]
[380.11154175 73.55706787]
[365.29620361 75.90358734]
[350.48089600 78.25009918]
[344.29049683 82.45599365]
[335.24749756 80.45883942]
[320.37582397 82.41673279]
[305.50415039 84.37462616]
[290.63247681 86.33251953]
[275.76080322 88.29041290]
[260.88912964 90.24829865]
[253.21342468 99.69728088]
[240.75137329 101.38775635]
[230.17958069 93.85888672]
[215.26176453 95.42681122]
[200.34393311 96.99474335]
[185.42610168 98.56266785]
[170.50827026 100.13059235]
[155.59043884 101.69852448]
[140.67262268 103.26644897]
[125.75479126 104.83437347]
[110.83695984 106.40230560]
[123.35357666 114.66876221]
[131.24812317 127.42321777]
[133.06427002 142.31286621]
[128.46702576 156.59100342]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 59]
[9 58]
[10 57]
[11 56]
[14 55]
[15 54]
[16 53]
[17 52]
[18 51]
[19 50]
[20 49]
[21 48]
[26 42]
[27 41]
[28 40]
[29 38]
[61 115]
[62 114]
[63 113]
[64 112]
[65 111]
[66 110]
[67 109]
[68 108]
[69 107]
[71 104]
[72 103]
[73 102]
[74 101]
[75 100]
[76 99]
[77 97]
[78 96]
[79 95]
[80 94]
[81 93]
[82 92]
] def

init

% Start Annotations
8 59 0.0 0.6 colorpair
9 58 0.16 1 colorpair
10 57 0.0 0.6 colorpair
11 56 0.16 1 colorpair
14 55 0.0 0.6 colorpair
15 54 0.0 0.6 colorpair
16 53 0.0 0.6 colorpair
17 52 0.0 0.6 colorpair
18 51 0.0 1 colorpair
19 50 0.0 0.6 colorpair
20 49 0.16 1 colorpair
21 48 0.0 0.6 colorpair
26 42 0.16 1 colorpair
27 41 0.0 0.6 colorpair
28 40 0.16 1 colorpair
29 38 0.0 1 colorpair
61 115 0.0 0.6 colorpair
62 114 0.16 1 colorpair
63 113 0.0 0.6 colorpair
64 112 0.0 0.6 colorpair
65 111 0.16 1 colorpair
66 110 0.0 0.6 colorpair
67 109 0.0 1 colorpair
68 108 0.0 1 colorpair
69 107 0.0 1 colorpair
71 104 0.0 1 colorpair
72 103 0.0 0.6 colorpair
73 102 0.0 0.6 colorpair
74 101 0.0 0.6 colorpair
75 100 0.0 1 colorpair
76 99 0.0 0.6 colorpair
77 97 0.16 1 colorpair
78 96 0.0 0.6 colorpair
79 95 0.0 0.6 colorpair
80 94 0.16 1 colorpair
81 93 0.0 1 colorpair
82 92 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
8 59 1 gmark
58 cmark
10 57 1 gmark
56 cmark
14 55 1 gmark
15 54 1 gmark
16 53 1 gmark
17 52 1 gmark
19 50 1 gmark
20 cmark
49 cmark
21 48 1 gmark
26 cmark
42 cmark
27 41 1 gmark
28 cmark
40 cmark
61 115 1 gmark
114 cmark
63 113 1 gmark
64 112 1 gmark
65 cmark
111 cmark
66 110 1 gmark
72 103 1 gmark
73 102 1 gmark
74 101 1 gmark
76 99 1 gmark
77 cmark
97 cmark
78 96 1 gmark
79 95 1 gmark
80 cmark
94 cmark
82 92 1 gmark

% End Annotations
showpage
end
%%EOF
