%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 20:08:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
________________________________________GGUUGCUAGAGGCUAACUG_UCUGAGGUAUG_ACCUAGAAACAGACAGAUGGAAGUCACAGG__U______U______________________________________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50628662 92.02406311]
[62.53522491 91.07263947]
[47.60188293 89.64669800]
[32.72130203 87.74767303]
[17.90846825 85.37747192]
[3.17829227 82.53848267]
[-11.45439243 79.23355865]
[-25.97485161 75.46604156]
[-40.36846542 71.23971558]
[-54.62073898 66.55883789]
[-68.71732330 61.42811584]
[-82.64402008 55.85272598]
[-96.38681793 49.83827591]
[-109.93186188 43.39082718]
[-123.26552582 36.51686478]
[-136.37438965 29.22331238]
[-149.24522400 21.51751518]
[-161.86509705 13.40723324]
[-174.22129822 4.90063143]
[-186.30139160 -3.99372458]
[-198.09318542 -13.26687908]
[-209.58482361 -22.90949440]
[-220.76475525 -32.91186142]
[-231.62168884 -43.26390839]
[-242.14471436 -53.95521164]
[-252.32321167 -64.97500610]
[-262.14697266 -76.31219482]
[-271.60607910 -87.95536804]
[-280.69097900 -99.89279175]
[-289.39257812 -112.11244965]
[-297.70211792 -124.60204315]
[-305.61117554 -137.34899902]
[-313.11181641 -150.34046936]
[-320.19647217 -163.56336975]
[-326.85806274 -177.00440979]
[-333.08981323 -190.65003967]
[-338.88549805 -204.48651123]
[-344.23925781 -218.49990845]
[-349.14569092 -232.67611694]
[-353.59988403 -247.00085449]
[-357.59735107 -261.45968628]
[-361.13403320 -276.03808594]
[-364.20642090 -290.72137451]
[-366.81137085 -305.49472046]
[-368.94628906 -320.34329224]
[-370.60900879 -335.25213623]
[-371.79785156 -350.20620728]
[-372.51165771 -365.19049072]
[-372.74966431 -380.18984985]
[-372.51168823 -395.18923950]
[-371.79791260 -410.17352295]
[-370.60906982 -425.12759399]
[-368.94635010 -440.03643799]
[-366.81146240 -454.88500977]
[-364.20651245 -469.65838623]
[-361.13418579 -484.34164429]
[-357.59750366 -498.92004395]
[-353.60006714 -513.37890625]
[-349.14590454 -527.70367432]
[-344.23947144 -541.87988281]
[-338.88574219 -555.89324951]
[-333.09005737 -569.72973633]
[-326.85833740 -583.37536621]
[-320.19677734 -596.81640625]
[-313.11212158 -610.03936768]
[-305.61148071 -623.03082275]
[-297.70245361 -635.77777100]
[-289.39294434 -648.26739502]
[-280.69137573 -660.48706055]
[-271.60644531 -672.42449951]
[-262.14736938 -684.06768799]
[-252.32363892 -695.40490723]
[-242.14514160 -706.42468262]
[-231.62213135 -717.11602783]
[-220.76521301 -727.46807861]
[-209.58531189 -737.47045898]
[-198.09367371 -747.11309814]
[-186.30189514 -756.38623047]
[-174.22181702 -765.28063965]
[-161.86563110 -773.78723145]
[-149.24575806 -781.89752197]
[-136.37492371 -789.60333252]
[-123.26608276 -796.89691162]
[-109.93243408 -803.77093506]
[-96.38739014 -810.21838379]
[-82.64460754 -816.23284912]
[-68.71791840 -821.80822754]
[-54.62133789 -826.93896484]
[-40.36906815 -831.61987305]
[-25.97546196 -835.84625244]
[-11.45500755 -839.61376953]
[3.17767310 -842.91870117]
[17.90784454 -845.75775146]
[32.72067642 -848.12792969]
[47.60125351 -850.02697754]
[62.53459167 -851.45294189]
[77.50565338 -852.40441895]
[92.49936676 -852.88037109]
[107.50063324 -852.88037109]
[122.49434662 -852.40441895]
[137.46540833 -851.45294189]
[152.39874268 -850.02697754]
[167.27932739 -848.12792969]
[182.09214783 -845.75775146]
[196.82232666 -842.91870117]
[211.45500183 -839.61376953]
[225.97546387 -835.84625244]
[240.36906433 -831.61987305]
[254.62133789 -826.93896484]
[268.71792603 -821.80822754]
[282.64459229 -816.23284912]
[296.38739014 -810.21838379]
[309.93243408 -803.77093506]
[323.26608276 -796.89691162]
[336.37493896 -789.60333252]
[349.24575806 -781.89752197]
[361.86563110 -773.78723145]
[374.22183228 -765.28063965]
[386.30187988 -756.38623047]
[398.09368896 -747.11309814]
[409.58529663 -737.47045898]
[420.76522827 -727.46807861]
[431.62213135 -717.11602783]
[442.14514160 -706.42468262]
[452.32363892 -695.40490723]
[462.14736938 -684.06768799]
[471.60644531 -672.42449951]
[480.69137573 -660.48706055]
[489.39294434 -648.26739502]
[497.70245361 -635.77777100]
[505.61148071 -623.03082275]
[513.11212158 -610.03936768]
[520.19677734 -596.81640625]
[526.85833740 -583.37536621]
[533.09008789 -569.72973633]
[538.88574219 -555.89324951]
[544.23944092 -541.87988281]
[549.14587402 -527.70367432]
[553.60003662 -513.37890625]
[557.59747314 -498.92004395]
[561.13415527 -484.34164429]
[564.20654297 -469.65838623]
[566.81146240 -454.88500977]
[568.94635010 -440.03643799]
[570.60906982 -425.12759399]
[571.79791260 -410.17352295]
[572.51165771 -395.18923950]
[572.74969482 -380.18984985]
[572.51165771 -365.19049072]
[571.79785156 -350.20620728]
[570.60900879 -335.25213623]
[568.94628906 -320.34329224]
[566.81134033 -305.49472046]
[564.20642090 -290.72137451]
[561.13403320 -276.03808594]
[557.59735107 -261.45968628]
[553.59991455 -247.00085449]
[549.14569092 -232.67611694]
[544.23925781 -218.49990845]
[538.88549805 -204.48651123]
[533.08984375 -190.65003967]
[526.85803223 -177.00440979]
[520.19647217 -163.56336975]
[513.11181641 -150.34046936]
[505.61117554 -137.34899902]
[497.70211792 -124.60204315]
[489.39257812 -112.11244965]
[480.69097900 -99.89279175]
[471.60607910 -87.95536804]
[462.14697266 -76.31219482]
[452.32321167 -64.97500610]
[442.14471436 -53.95521164]
[431.62167358 -43.26390839]
[420.76473999 -32.91186142]
[409.58483887 -22.90949440]
[398.09320068 -13.26687908]
[386.30139160 -3.99372458]
[374.22131348 4.90063143]
[361.86511230 13.40723324]
[349.24523926 21.51751518]
[336.37438965 29.22331238]
[323.26553345 36.51686478]
[309.93185425 43.39082718]
[296.38681030 49.83827591]
[282.64401245 55.85272598]
[268.71731567 61.42811584]
[254.62074280 66.55883789]
[240.36846924 71.23971558]
[225.97485352 75.46604156]
[211.45439148 79.23355865]
[196.82170105 82.53848267]
[182.09153748 85.37747192]
[167.27870178 87.74767303]
[152.39811707 89.64669800]
[137.46478271 91.07263947]
[122.49371338 92.02406311]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
