%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 20:08:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______A_GCA____AUGAAGCUGACAAAGUAUGCCGUCGUCGCAAUCAUCGCGCUCUGUAUUACCGCGCUGAGAGUCGCGCUAAUUAUACGAAAAGCCCUCUGUGAGGUGAGCAUUCGAAAGCGCCAGAUGGAAGUCAAAGCCGUCACAGCUUACGAACCGAAGAA_____________\
) } def
/len { sequence length } bind def

/coor [
[56.33119965 514.83911133]
[47.88373566 515.06805420]
[39.43560791 514.86907959]
[31.00847816 514.24273682]
[22.62395287 513.19067383]
[14.30352116 511.71560669]
[6.06851578 509.82125854]
[-2.05995440 507.51257324]
[-10.06105328 504.79541016]
[-17.91427231 501.67678833]
[-25.59947968 498.16470337]
[-33.09698105 494.26818848]
[-40.38755417 489.99719238]
[-47.45251846 485.36270142]
[-54.27376556 480.37658691]
[-60.83380890 475.05169678]
[-67.11584473 469.40161133]
[-73.10376740 463.44088745]
[-78.78224182 457.18478394]
[-84.13670349 450.64935303]
[-89.15345001 443.85131836]
[-93.81961060 436.80819702]
[-98.12324524 429.53796387]
[-102.05331421 422.05932617]
[-105.59976959 414.39141846]
[-108.75351715 406.55395508]
[-111.50647736 398.56695557]
[-113.85160828 390.45095825]
[-115.78290558 382.22677612]
[-117.29543304 373.91546631]
[-118.38531494 365.53833008]
[-119.04976654 357.11688232]
[-134.04919434 357.24703979]
[-149.04862976 357.37722778]
[-164.04806519 357.50741577]
[-179.04750061 357.63757324]
[-194.04693604 357.76776123]
[-209.04637146 357.89791870]
[-222.77888489 365.75469971]
[-235.57281494 358.12814331]
[-250.57225037 358.25830078]
[-265.57168579 358.38848877]
[-277.79721069 368.77673340]
[-293.51327515 365.55413818]
[-300.66384888 351.19274902]
[-293.76361084 336.70944214]
[-278.10586548 333.21453857]
[-265.70187378 343.38906860]
[-250.70243835 343.25888062]
[-235.70300293 343.12869263]
[-223.04335022 335.28125000]
[-209.17654419 342.89849854]
[-194.17710876 342.76831055]
[-179.17767334 342.63815308]
[-164.17825317 342.50796509]
[-149.17881775 342.37777710]
[-134.17938232 342.24761963]
[-119.17993927 342.11743164]
[-115.10486603 310.95306396]
[-105.25657654 281.10247803]
[-89.98328400 253.62530518]
[-69.82578278 229.49719238]
[-45.49833298 209.57518005]
[-17.86333084 194.56716919]
[12.09925270 185.00689697]
[43.32662582 181.23483276]
[74.71086884 183.38616943]
[77.81256866 168.71035767]
[80.91426086 154.03454590]
[84.01596069 139.35873413]
[72.65775299 132.51155090]
[63.96457291 122.49548340]
[58.78373337 110.28681183]
[57.62021637 97.07549286]
[60.58741760 84.14921570]
[67.39613342 72.76790619]
[77.38272095 64.04089355]
[89.57379150 58.81877518]
[102.78110504 57.61056137]
[106.39028168 43.05123901]
[109.99945831 28.49191856]
[113.60863495 13.93259811]
[117.09132385 -0.65749699]
[120.44726562 -15.27726650]
[110.63427734 -24.97863960]
[106.93245697 -38.15930176]
[110.20743561 -51.34085083]
[119.49816895 -61.09943008]
[132.29560852 -64.95500946]
[135.90478516 -79.51433563]
[139.51396179 -94.07365417]
[143.12313843 -108.63298035]
[132.00497437 -119.22929382]
[127.68992615 -133.96957397]
[131.33871460 -148.88876343]
[141.96983337 -159.97364807]
[156.72355652 -164.24247742]
[171.63122559 -160.54695129]
[182.68275452 -149.88113403]
[186.90530396 -135.11410522]
[183.16307068 -120.21808624]
[172.46267700 -109.20005798]
[157.68246460 -105.02380371]
[154.07328796 -90.46447754]
[150.46411133 -75.90515900]
[146.85493469 -61.34583664]
[157.81672668 -49.14291000]
[159.37022400 -32.64644241]
[150.70744324 -18.32748795]
[135.06703186 -11.92132473]
[131.71109009 2.69844484]
[133.28332520 9.94073772]
[128.16795349 17.54177475]
[124.55877686 32.10109711]
[120.94960022 46.66041946]
[117.34042358 61.21973801]
[130.87362671 70.82093048]
[139.69639587 84.87401581]
[142.46261597 101.23490143]
[138.75025940 117.40737152]
[129.12570190 130.92396545]
[115.05740356 139.72245789]
[98.69177246 142.46041870]
[95.59007263 157.13623047]
[92.48838043 171.81204224]
[89.38668823 186.48785400]
[97.51633453 188.81460571]
[105.51769257 191.54983521]
[113.37026215 194.68653870]
[121.05390167 198.21662903]
[128.54891968 202.13108826]
[135.83612061 206.41984558]
[142.89680481 211.07189941]
[149.71289062 216.07531738]
[156.26690674 221.41728210]
[162.54206848 227.08407593]
[168.52226257 233.06115723]
[174.19219971 239.33320618]
[179.53732300 245.88412476]
[184.54396057 252.69712830]
[189.19927979 259.75473022]
[193.49133301 267.03884888]
[197.40914917 274.53076172]
[200.94268799 282.21133423]
[204.08290100 290.06079102]
[206.82173157 298.05905151]
[209.15217590 306.18560791]
[211.06828308 314.41958618]
[212.56513977 322.73992920]
[213.63891602 331.12527466]
[214.28686523 339.55410767]
[214.50733948 348.00482178]
[214.29978943 356.45578003]
[213.66474915 364.88531494]
[212.60386658 373.27178955]
[211.11985779 381.59371948]
[209.21655273 389.82977295]
[206.89881897 397.95883179]
[204.17263794 405.96008301]
[201.04498291 413.81298828]
[197.52389526 421.49740601]
[193.61839294 428.99368286]
[189.33851624 436.28256226]
[184.69525146 443.34539795]
[179.70048523 450.16406250]
[174.36705017 456.72109985]
[168.70861816 462.99969482]
[162.73971558 468.98376465]
[156.47563171 474.65798950]
[149.93244934 480.00778198]
[143.12695312 485.01947021]
[136.07656860 489.68020630]
[128.79940796 493.97805786]
[121.31411743 497.90200806]
[113.63988495 501.44201660]
[105.79640198 504.58898926]
[97.80377960 507.33489990]
[89.68251038 509.67269897]
[81.45340729 511.59640503]
[73.13758087 513.10107422]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 58]
[33 57]
[34 56]
[35 55]
[36 54]
[37 53]
[38 52]
[40 50]
[41 49]
[42 48]
[67 126]
[68 125]
[69 124]
[70 123]
[79 116]
[80 115]
[81 114]
[82 113]
[83 111]
[84 110]
[89 106]
[90 105]
[91 104]
[92 103]
] def

init

% Start Annotations
32 58 0.16 0.2 colorpair
33 57 0.16 0.6 colorpair
34 56 0.16 0.6 colorpair
35 55 0.16 0.2 colorpair
36 54 0.16 1 colorpair
37 53 0.16 0.6 colorpair
38 52 0.0 0.6 colorpair
40 50 0.0 1 colorpair
41 49 0.0 0.6 colorpair
42 48 0.16 0.6 colorpair
67 126 0.16 0.6 colorpair
68 125 0.16 0.6 colorpair
69 124 0.16 1 colorpair
70 123 0.16 1 colorpair
79 116 0.32 1 colorpair
80 115 0.16 0.2 colorpair
81 114 0.16 0.6 colorpair
82 113 0.0 0.6 colorpair
83 111 0.32 1 colorpair
84 110 0.16 0.6 colorpair
89 106 0.16 0.6 colorpair
90 105 0.16 0.6 colorpair
91 104 0.0 0.2 colorpair
92 103 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
32 58 2 gmark
32 cmark
58 cmark
33 57 1 gmark
33 cmark
57 cmark
34 56 1 gmark
34 cmark
35 55 2 gmark
35 cmark
55 cmark
36 cmark
54 cmark
37 53 1 gmark
53 cmark
38 52 1 gmark
41 49 1 gmark
42 48 1 gmark
42 cmark
48 cmark
67 126 1 gmark
126 cmark
68 125 1 gmark
68 cmark
69 cmark
124 cmark
70 cmark
123 cmark
79 cmark
116 cmark
80 115 2 gmark
80 cmark
115 cmark
81 114 1 gmark
114 cmark
82 113 1 gmark
83 cmark
111 cmark
84 110 1 gmark
84 cmark
89 106 1 gmark
89 cmark
90 105 1 gmark
90 cmark
105 cmark
91 104 2 gmark
103 cmark

% End Annotations
showpage
end
%%EOF
