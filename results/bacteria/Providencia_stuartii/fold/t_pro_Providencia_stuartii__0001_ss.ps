%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 07:29:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
________________________________________________________AAAAACACAGAAAAAUAAACAAGAA__GGCCAAAAUAAGACAGAAUACAGUGGGUUAAACCCC__ACCGCGGUAAACCCAACC__AACCCACAACAGACCAUCAGCGAUAAGUG__UGAAUAAU___GGAAAUACAGUAG___GCAACGCAACACUCACUCACCAAGUCGGA___________________________\
_______\
) } def
/len { sequence length } bind def

/coor [
[356.35293579 751.51287842]
[346.60754395 762.91583252]
[336.36199951 773.87158203]
[325.63674927 784.35821533]
[314.45333862 794.35473633]
[302.83404541 803.84118652]
[290.80218506 812.79852295]
[278.38180542 821.20892334]
[265.59774780 829.05541992]
[252.47558594 836.32238770]
[239.04159546 842.99536133]
[225.32264709 849.06085205]
[211.34617615 854.50677490]
[197.14016724 859.32232666]
[182.73301697 863.49774170]
[168.15356445 867.02471924]
[153.43098450 869.89617920]
[138.59471130 872.10644531]
[123.67445374 873.65106201]
[108.70005035 874.52691650]
[93.70145416 874.73223877]
[78.70867920 874.26666260]
[63.75172424 873.13110352]
[48.86051178 871.32788086]
[34.06483078 868.86053467]
[19.39428902 865.73394775]
[4.87823534 861.95452881]
[-9.45428848 857.52972412]
[-23.57460594 852.46844482]
[-37.45446777 846.78082275]
[-51.06610489 840.47814941]
[-64.38227844 833.57312012]
[-77.37635803 826.07952881]
[-90.02233887 818.01239014]
[-102.29492188 809.38775635]
[-114.16954803 800.22296143]
[-125.62246704 790.53637695]
[-136.63076782 780.34729004]
[-147.17240906 769.67608643]
[-157.22631836 758.54425049]
[-166.77236938 746.97387695]
[-175.79147339 734.98822021]
[-184.26556396 722.61126709]
[-192.17771912 709.86767578]
[-199.51208496 696.78308105]
[-206.25399780 683.38360596]
[-212.38996887 669.69604492]
[-217.90773010 655.74774170]
[-222.79621887 641.56665039]
[-227.04566956 627.18121338]
[-230.64756775 612.62005615]
[-233.59472656 597.91241455]
[-235.88125610 583.08770752]
[-237.50254822 568.17559814]
[-238.45538330 553.20593262]
[-238.73783875 538.20855713]
[-238.34936523 523.21362305]
[-237.29074097 508.25100708]
[-235.56407166 493.35070801]
[-233.17282104 478.54254150]
[-230.12176514 463.85610962]
[-226.41702271 449.32083130]
[-222.06597900 434.96572876]
[-217.07737732 420.81958008]
[-211.46116638 406.91064453]
[-205.22859192 393.26678467]
[-198.39212036 379.91528320]
[-190.96543884 366.88284302]
[-182.96340942 354.19555664]
[-174.40202332 341.87878418]
[-165.29841614 329.95718384]
[-155.67082214 318.45462036]
[-145.53846741 307.39407349]
[-134.92166138 296.79769897]
[-123.84160614 286.68667603]
[-112.32050323 277.08126831]
[-100.38138580 268.00064087]
[-88.04814911 259.46301270]
[-75.34545898 251.48544312]
[-62.29873276 244.08389282]
[-48.93407822 237.27316284]
[-35.27822876 231.06689453]
[-21.35850716 225.47749329]
[-7.20276451 220.51615906]
[7.14418268 216.19735718]
[-5.20839977 207.68772888]
[-17.56098175 199.17810059]
[-29.91356468 190.66848755]
[-45.88815308 192.14904785]
[-56.90136719 180.48333740]
[-54.50481415 164.62030029]
[-40.53692245 156.72868347]
[-25.71266365 162.86227417]
[-21.40394020 178.31590271]
[-9.05135727 186.82551575]
[3.30122495 195.33514404]
[15.65380764 203.84477234]
[30.30840874 200.64434814]
[37.98870850 187.75975037]
[45.66901016 174.87515259]
[53.34931183 161.99055481]
[54.07228088 154.65965271]
[61.19908905 148.99868774]
[69.03274536 136.20674133]
[76.86640930 123.41480255]
[65.58454132 105.53027344]
[67.23796844 83.24324799]
[82.59660339 65.38883209]
[76.18074036 51.83019257]
[69.76488495 38.27155304]
[63.34902954 24.71290970]
[51.10890961 12.98193073]
[58.99303436 -2.02729678]
[75.59824371 1.39374650]
[76.90766907 18.29705238]
[83.32352448 31.85569382]
[89.73938751 45.41433716]
[96.15524292 58.97297668]
[111.09508514 60.31501770]
[119.82466125 48.11688614]
[122.26200867 39.34777069]
[128.73208618 35.82602310]
[137.60675049 23.73303413]
[146.48141479 11.64004517]
[155.35606384 -0.45294404]
[164.23072815 -12.54593277]
[173.10539246 -24.63892174]
[181.98005676 -36.73191071]
[182.54498291 -41.85692978]
[184.77961731 -45.86650085]
[187.98742676 -48.31433487]
[191.39567566 -49.09152222]
[200.69790649 -60.85878754]
[210.00013733 -72.62605286]
[219.30236816 -84.39331818]
[209.36564636 -98.02557373]
[203.66949463 -113.88983917]
[202.66677856 -130.70234680]
[206.43087769 -147.10485840]
[214.65042114 -161.77439880]
[226.65493774 -173.52996826]
[241.46963501 -181.42762756]
[257.89447021 -184.83625793]
[274.60147095 -183.48800659]
[290.24194336 -177.49935913]
[299.11660767 -189.59236145]
[307.99127197 -201.68534851]
[316.86593628 -213.77833557]
[325.66821289 -225.92411804]
[334.39779663 -238.12223816]
[343.12738037 -250.32037354]
[351.85693359 -262.51852417]
[360.58651733 -274.71664429]
[355.55825806 -289.39642334]
[360.15103149 -304.21823120]
[372.59881592 -313.48278809]
[388.11523438 -313.62765503]
[400.73385620 -304.59716797]
[405.60256958 -289.86370850]
[400.84930420 -275.09259033]
[388.30172729 -265.96362305]
[372.78466797 -265.98706055]
[364.05508423 -253.78894043]
[355.32550049 -241.59080505]
[346.59591675 -229.39266968]
[337.86633301 -217.19453430]
[336.53363037 -209.94964600]
[328.95892334 -204.90367126]
[320.08425903 -192.81068420]
[311.20959473 -180.71769714]
[302.33493042 -168.62471008]
[310.85671997 -158.51469421]
[316.91351318 -146.75180054]
[320.19708252 -133.92662048]
[320.53863525 -120.68395233]
[317.91726685 -107.69046783]
[312.46136475 -95.60108948]
[304.44232178 -85.02600098]
[294.26092529 -76.49985504]
[282.42749023 -70.45474243]
[269.53613281 -67.19827271]
[256.23501587 -66.89796448]
[243.19372559 -69.57259369]
[231.06964111 -75.09108734]
[221.76741028 -63.32382202]
[212.46517944 -51.55655670]
[203.16294861 -39.78929138]
[194.07304382 -27.85725021]
[185.19837952 -15.76426125]
[176.32371521 -3.67127204]
[167.44905090 8.42171764]
[158.57440186 20.51470566]
[149.69973755 32.60769653]
[140.82507324 44.70068359]
[132.02279663 56.84646225]
[123.29322052 69.04459381]
[131.92640686 79.36920166]
[136.37165833 91.80224609]
[136.24589539 104.75084686]
[131.74020386 116.61896515]
[123.57482147 126.00412750]
[112.89022064 131.86291504]
[101.09021759 133.62574768]
[89.65834808 131.24845886]
[81.82469177 144.04040527]
[73.99103546 156.83235168]
[66.23391724 169.67085266]
[58.55361176 182.55545044]
[50.87331009 195.44004822]
[43.19301224 208.32466125]
[58.05121994 206.26708984]
[72.98657990 204.87600708]
[87.96920013 204.15420532]
[102.96911621 204.10311890]
[117.95630646 204.72283936]
[132.90078735 206.01214600]
[147.77267456 207.96846008]
[162.54220581 210.58784485]
[177.17980957 213.86508179]
[191.65623474 217.79359436]
[205.94248962 222.36555481]
[220.01000977 227.57177734]
[233.83065796 233.40187073]
[247.37675476 239.84416199]
[260.62121582 246.88577271]
[273.53753662 254.51258850]
[286.09988403 262.70938110]
[298.28314209 271.45974731]
[310.06289673 280.74615479]
[321.41558838 290.55004883]
[332.31851196 300.85180664]
[342.74984741 311.63079834]
[352.68875122 322.86550903]
[362.11532593 334.53338623]
[371.01068115 346.61117554]
[379.35705566 359.07464600]
[387.13772583 371.89886475]
[394.33715820 385.05822754]
[400.94091797 398.52633667]
[406.93579102 412.27630615]
[412.30981445 426.28057861]
[417.05221558 440.51116943]
[421.15350342 454.93960571]
[424.60546875 469.53698730]
[427.40124512 484.27413940]
[429.53518677 499.12158203]
[431.00302124 514.04956055]
[431.80187988 529.02832031]
[431.93008423 544.02777100]
[431.38742065 559.01794434]
[430.17498779 573.96887207]
[428.29516602 588.85058594]
[425.75177002 603.63336182]
[422.54983521 618.28765869]
[418.69580078 632.78411865]
[414.19738770 647.09368896]
[409.06356812 661.18780518]
[403.30459595 675.03820801]
[396.93203735 688.61724854]
[389.95864868 701.89776611]
[382.39831543 714.85314941]
[374.26623535 727.45745850]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[85 97]
[86 96]
[87 95]
[88 94]
[98 210]
[99 209]
[100 208]
[101 207]
[103 206]
[104 205]
[105 204]
[108 118]
[109 117]
[110 116]
[111 115]
[119 196]
[120 195]
[122 194]
[123 193]
[124 192]
[125 191]
[126 190]
[127 189]
[128 188]
[132 187]
[133 186]
[134 185]
[135 184]
[145 171]
[146 170]
[147 169]
[148 168]
[149 166]
[150 165]
[151 164]
[152 163]
[153 162]
] def

init

% Start Annotations
85 97 0.0 1 colorpair
86 96 0.16 1 colorpair
87 95 0.0 1 colorpair
88 94 0.0 0.2 colorpair
98 210 0.16 1 colorpair
99 209 0.0 1 colorpair
100 208 0.0 0.2 colorpair
101 207 0.0 0.2 colorpair
103 206 0.16 1 colorpair
104 205 0.0 1 colorpair
105 204 0.0 0.2 colorpair
108 118 0.16 1 colorpair
109 117 0.16 1 colorpair
110 116 0.0 1 colorpair
111 115 0.16 1 colorpair
119 196 0.16 1 colorpair
120 195 0.0 0.2 colorpair
122 194 0.0 1 colorpair
123 193 0.0 1 colorpair
124 192 0.16 1 colorpair
125 191 0.0 1 colorpair
126 190 0.0 0.2 colorpair
127 189 0.0 1 colorpair
128 188 0.16 1 colorpair
132 187 0.16 1 colorpair
133 186 0.16 1 colorpair
134 185 0.16 1 colorpair
135 184 0.0 1 colorpair
145 171 0.0 0.2 colorpair
146 170 0.0 1 colorpair
147 169 0.16 1 colorpair
148 168 0.0 1 colorpair
149 166 0.0 0.2 colorpair
150 165 0.0 1 colorpair
151 164 0.16 1 colorpair
152 163 0.16 1 colorpair
153 162 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
86 cmark
96 cmark
88 94 2 gmark
98 cmark
210 cmark
100 208 2 gmark
101 207 2 gmark
103 cmark
206 cmark
105 204 2 gmark
108 cmark
118 cmark
109 cmark
117 cmark
115 cmark
119 cmark
120 195 2 gmark
124 cmark
192 cmark
126 190 2 gmark
128 cmark
188 cmark
132 cmark
187 cmark
133 cmark
186 cmark
134 cmark
145 171 2 gmark
147 cmark
149 166 2 gmark
151 cmark
164 cmark
152 cmark
163 cmark
162 cmark

% End Annotations
showpage
end
%%EOF
