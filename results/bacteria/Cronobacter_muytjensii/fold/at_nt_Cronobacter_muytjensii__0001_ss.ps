%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 18:59:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
C__U__UCUGGUGCGU__U_A___UCUG__U_ACG_U_UUA_U_UU_A_CA______C_CG__A__CGCU_UGCGA_CU__G__UG__GG_CG_G___A_GGAAGUUGAAGCCUUUCUGGCUUAAGAAUCCGGAAAGUA_____C_GCAGAGAGGAGAAAACCCCGCG_UUU___G_C_GGCG____U_UGC_U___________C__A_GC_CC_UU_U__________\
) } def
/len { sequence length } bind def

/coor [
[-87.87247467 968.03485107]
[-102.76199341 969.86651611]
[-117.70959473 971.14013672]
[-132.69436646 971.85394287]
[-147.69534302 972.00695801]
[-162.69154358 971.59893799]
[-177.66201782 970.63055420]
[-192.58580017 969.10302734]
[-207.44203186 967.01855469]
[-222.20994568 964.38000488]
[-236.86886597 961.19116211]
[-251.39830017 957.45642090]
[-265.77792358 953.18103027]
[-279.98764038 948.37097168]
[-294.00756836 943.03295898]
[-307.81808472 937.17443848]
[-321.39990234 930.80358887]
[-334.73397827 923.92938232]
[-347.80172729 916.56140137]
[-360.58480835 908.70996094]
[-373.06539917 900.38604736]
[-385.22601318 891.60125732]
[-397.04965210 882.36791992]
[-408.51977539 872.69897461]
[-419.62036133 862.60791016]
[-430.33584595 852.10876465]
[-440.65127563 841.21636963]
[-450.55218506 829.94586182]
[-460.02478027 818.31304932]
[-469.05578613 806.33410645]
[-477.63253784 794.02593994]
[-485.74310303 781.40563965]
[-493.37609863 768.49090576]
[-500.52087402 755.29980469]
[-507.16741943 741.85076904]
[-513.30639648 728.16265869]
[-518.92932129 714.25451660]
[-524.02825928 700.14587402]
[-528.59606934 685.85644531]
[-532.62640381 671.40625000]
[-536.11358643 656.81542969]
[-539.05279541 642.10443115]
[-541.43988037 627.29376221]
[-543.27148438 612.40423584]
[-544.54510498 597.45666504]
[-545.25891113 582.47186279]
[-545.41192627 567.47088623]
[-545.00390625 552.47467041]
[-544.03546143 537.50421143]
[-542.50793457 522.58044434]
[-540.42340088 507.72421265]
[-537.78491211 492.95629883]
[-534.59600830 478.29739380]
[-530.86126709 463.76797485]
[-526.58587646 449.38833618]
[-521.77575684 435.17861938]
[-516.43774414 421.15872192]
[-510.57919312 407.34820557]
[-504.20834351 393.76641846]
[-497.33413696 380.43231201]
[-489.96615601 367.36459351]
[-482.11468506 354.58151245]
[-473.79074097 342.10092163]
[-465.00598145 329.94030762]
[-455.77264404 318.11669922]
[-446.10363770 306.64657593]
[-436.01254272 295.54602051]
[-425.51342773 284.83053589]
[-414.62100220 274.51513672]
[-403.35049438 264.61419678]
[-391.71762085 255.14163208]
[-379.73873901 246.11065674]
[-367.43054199 237.53388977]
[-354.81024170 229.42335510]
[-341.89550781 221.79035950]
[-328.70440674 214.64561462]
[-315.25537109 207.99909973]
[-301.56719971 201.86009216]
[-287.65908813 196.23721313]
[-273.55044556 191.13829041]
[-259.26101685 186.57048035]
[-244.81077576 182.54017639]
[-230.21994019 179.05297852]
[-215.50892639 176.11380005]
[-200.69830322 173.72674561]
[-185.80877686 171.89514160]
[-170.86117554 170.62155151]
[-155.87640381 169.90777588]
[-140.87542725 169.75479126]
[-125.87921906 170.16281128]
[-110.90875244 171.13127136]
[-95.98497009 172.65882874]
[-81.12873840 174.74333191]
[-66.36083984 177.38186646]
[-51.70192337 180.57075500]
[-37.17249680 184.30552673]
[-22.79287529 188.58094788]
[-8.58317471 193.39105225]
[5.43673372 198.72912598]
[19.24724007 204.58767700]
[32.82903290 210.95852661]
[39.70243073 197.62599182]
[36.31920242 186.02139282]
[41.92486191 174.86186218]
[54.00477600 170.36732483]
[61.05885696 157.12950134]
[68.11293793 143.89167786]
[75.16701508 130.65385437]
[74.32395935 115.78312683]
[87.64212799 107.24281311]
[87.35881042 93.26384735]
[99.12004852 85.70310974]
[106.17413330 72.46528625]
[113.22821045 59.22746277]
[120.28228760 45.98963928]
[127.33636475 32.75181580]
[134.39044189 19.51399040]
[141.44451904 6.27616739]
[148.49859619 -6.96165657]
[154.72982788 -20.60613632]
[160.11486816 -34.60618591]
[165.49990845 -48.60623169]
[170.88494873 -62.60628128]
[168.61773682 -78.26419830]
[180.40837097 -87.36531067]
[172.67861938 -100.95887756]
[175.54589844 -116.33134460]
[187.65637207 -126.22430420]
[203.29182434 -125.96659851]
[215.06970215 -115.67991638]
[217.42881775 -100.22131348]
[209.25531006 -86.88986206]
[194.40841675 -81.98027039]
[197.06080627 -67.32373047]
[184.88499451 -57.22124100]
[179.49995422 -43.22119141]
[174.11491394 -29.22114372]
[168.72987366 -15.22109604]
[181.57997131 -22.95899773]
[196.57611084 -22.61858940]
[209.06184387 -14.30557060]
[215.16024780 -0.60121119]
[212.97770691 14.23915672]
[203.19190979 25.60745811]
[188.84146118 29.97373199]
[174.38227844 25.98220825]
[164.30410767 14.87229156]
[161.73641968 0.09242223]
[154.68234253 13.33024597]
[147.62826538 26.56806946]
[140.57418823 39.80589294]
[133.52011108 53.04371643]
[126.46603394 66.28153992]
[119.41195679 79.51936340]
[112.35787201 92.75718689]
[112.64118958 106.73615265]
[100.87995148 114.29689026]
[101.21845245 130.11447144]
[88.40483856 137.70793152]
[81.35076141 150.94575500]
[74.29667664 164.18357849]
[67.24259949 177.42140198]
[68.28981781 195.81227112]
[53.03496170 204.49938965]
[46.16156387 217.83192444]
[59.22931671 225.19987488]
[72.01243591 233.05128479]
[84.49303436 241.37518311]
[96.65367126 250.15992737]
[108.47733307 259.39321899]
[119.94747925 269.06216431]
[131.04806519 279.15322876]
[141.76358032 289.65231323]
[152.07902527 300.54470825]
[161.97998047 311.81518555]
[171.45259094 323.44799805]
[180.48361206 335.42687988]
[189.06040955 347.73507690]
[197.17100525 360.35531616]
[204.80403137 373.27005005]
[211.94882202 386.46112061]
[218.59538269 399.91012573]
[224.73442078 413.59826660]
[230.35736084 427.50637817]
[235.45632935 441.61499023]
[240.02418518 455.90441895]
[244.05453491 470.35464478]
[247.54177856 484.94546509]
[250.48100281 499.65646362]
[252.86810303 514.46710205]
[254.69976807 529.35662842]
[255.97338867 544.30419922]
[256.68722534 559.28894043]
[256.84027100 574.28991699]
[256.43228149 589.28613281]
[255.46386719 604.25659180]
[253.93637085 619.18041992]
[251.85191345 634.03662109]
[249.21342468 648.80456543]
[246.02459717 663.46350098]
[242.28987122 677.99291992]
[238.01449585 692.37255859]
[233.20442200 706.58227539]
[227.86640930 720.60217285]
[222.00790405 734.41271973]
[215.63710022 747.99450684]
[208.76290894 761.32861328]
[201.39494324 774.39636230]
[193.54351807 787.17950439]
[185.21960449 799.66009521]
[176.43486023 811.82073975]
[167.20153809 823.64434814]
[157.53257751 835.11450195]
[147.44149780 846.21508789]
[136.94241333 856.93060303]
[126.05001068 867.24603271]
[114.77951050 877.14697266]
[103.14668274 886.61956787]
[91.16780090 895.65057373]
[78.85961151 904.22735596]
[66.23933411 912.33789062]
[53.32462311 919.97094727]
[40.13352966 927.11572266]
[26.68450928 933.76226807]
[12.99637318 939.90130615]
[-0.91173774 945.52423096]
[-15.02037048 950.62316895]
[-29.30979347 955.19097900]
[-43.76002121 959.22131348]
[-58.35084152 962.70855713]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[101 165]
[102 164]
[105 162]
[106 161]
[107 160]
[108 159]
[110 157]
[112 155]
[113 154]
[114 153]
[115 152]
[116 151]
[117 150]
[118 149]
[119 148]
[120 138]
[121 137]
[122 136]
[123 135]
[125 133]
] def

init

% Start Annotations
101 165 0.0 1 colorpair
102 164 0.0 1 colorpair
105 162 0.0 0.6 colorpair
106 161 0.16 0.6 colorpair
107 160 0.0 1 colorpair
108 159 0.16 0.6 colorpair
110 157 0.16 0.6 colorpair
112 155 0.16 1 colorpair
113 154 0.16 0.6 colorpair
114 153 0.16 0.6 colorpair
115 152 0.32 1 colorpair
116 151 0.16 0.6 colorpair
117 150 0.0 1 colorpair
118 149 0.0 0.6 colorpair
119 148 0.0 0.6 colorpair
120 138 0.16 1 colorpair
121 137 0.0 1 colorpair
122 136 0.16 1 colorpair
123 135 0.16 1 colorpair
125 133 0.32 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
105 162 1 gmark
106 161 1 gmark
106 cmark
161 cmark
108 159 1 gmark
108 cmark
159 cmark
110 157 1 gmark
110 cmark
112 cmark
155 cmark
113 154 1 gmark
113 cmark
114 153 1 gmark
153 cmark
115 cmark
152 cmark
116 151 1 gmark
151 cmark
118 149 1 gmark
119 148 1 gmark
120 cmark
138 cmark
136 cmark
135 cmark
125 cmark
133 cmark

% End Annotations
showpage
end
%%EOF
