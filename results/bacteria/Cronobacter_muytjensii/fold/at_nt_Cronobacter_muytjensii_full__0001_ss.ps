%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 18:59:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_________________________________________________________________________________________GACGGGCAAAGGGAAUUUGCUGCGUUUCUGGCUUACGAAUCCGGUAAGUAGCAACCCGCAGGGCGGAGGAAACCCCGCCCUUUCAGG______________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[-63.73675919 954.02337646]
[-78.58721161 956.15063477]
[-93.51128387 957.67816162]
[-108.48475647 958.60357666]
[-123.48334503 958.92529297]
[-138.48272705 958.64282227]
[-153.45857239 957.75659180]
[-168.38658142 956.26806641]
[-183.24255371 954.17968750]
[-198.00238037 951.49481201]
[-212.64212036 948.21777344]
[-227.13804626 944.35388184]
[-241.46664429 939.90948486]
[-255.60464478 934.89172363]
[-269.52914429 929.30871582]
[-283.21752930 923.16961670]
[-296.64764404 916.48425293]
[-309.79763794 909.26354980]
[-322.64624023 901.51922607]
[-335.17260742 893.26385498]
[-347.35638428 884.51074219]
[-359.17782593 875.27416992]
[-370.61776733 865.56903076]
[-381.65762329 855.41119385]
[-392.27954102 844.81701660]
[-402.46624756 833.80371094]
[-412.20123291 822.38922119]
[-421.46868896 810.59197998]
[-430.25363159 798.43109131]
[-438.54177856 785.92639160]
[-446.31967163 773.09808350]
[-453.57470703 759.96697998]
[-460.29513550 746.55438232]
[-466.47003174 732.88214111]
[-472.08941650 718.97229004]
[-477.14413452 704.84741211]
[-481.62600708 690.53051758]
[-485.52774048 676.04473877]
[-488.84304810 661.41363525]
[-491.56652832 646.66082764]
[-493.69375610 631.81036377]
[-495.22128296 616.88629150]
[-496.14666748 601.91284180]
[-496.46835327 586.91424561]
[-496.18585205 571.91485596]
[-495.29962158 556.93902588]
[-493.81109619 542.01104736]
[-491.72268677 527.15502930]
[-489.03775024 512.39520264]
[-485.76071167 497.75549316]
[-481.89682007 483.25958252]
[-477.45239258 468.93099976]
[-472.43460083 454.79299927]
[-466.85162354 440.86849976]
[-460.71246338 427.18011475]
[-454.02709961 413.75003052]
[-446.80639648 400.60000610]
[-439.06204224 387.75143433]
[-430.80664062 375.22509766]
[-422.05349731 363.04132080]
[-412.81689453 351.21987915]
[-403.11178589 339.77996826]
[-392.95388794 328.74011230]
[-382.35971069 318.11822510]
[-371.34643555 307.93151855]
[-359.93188477 298.19656372]
[-348.13461304 288.92910767]
[-335.97375488 280.14419556]
[-323.46902466 271.85607910]
[-310.64071655 264.07818604]
[-297.50961304 256.82315063]
[-284.09701538 250.10275269]
[-270.42471313 243.92787170]
[-256.51486206 238.30851746]
[-242.39001465 233.25382996]
[-228.07308960 228.77197266]
[-213.58731079 224.87023926]
[-198.95617676 221.55496216]
[-184.20341492 218.83151245]
[-169.35296631 216.70429993]
[-154.42889404 215.17677307]
[-139.45541382 214.25143433]
[-124.45682526 213.92976379]
[-109.45744324 214.21228027]
[-94.48160553 215.09852600]
[-79.55359650 216.58708191]
[-64.69763184 218.67552185]
[-49.93780899 221.36044312]
[-35.29806900 224.63752747]
[-20.80215454 228.50141907]
[-6.47358084 232.94587708]
[7.66441154 237.96368408]
[21.58889198 243.54670715]
[27.72719002 229.86016846]
[33.86548996 216.17362976]
[40.00379181 202.48709106]
[39.10675049 199.09085083]
[39.80144882 195.09262085]
[42.35248566 191.24127197]
[46.68175888 188.37547302]
[53.37320709 174.95069885]
[60.06465149 161.52592468]
[56.52392197 149.96839905]
[61.97729492 138.73367310]
[73.99497223 134.07527161]
[80.86837006 120.74273682]
[87.74176788 107.41020203]
[87.26837158 93.43638611]
[98.92570496 85.71640015]
[105.79910278 72.38386536]
[105.24551392 56.57234955]
[117.95467377 48.80533218]
[124.82807159 35.47280121]
[125.97560120 26.42526245]
[131.88668823 22.00663567]
[138.94076538 8.76881313]
[145.99484253 -4.46901083]
[153.04891968 -17.70683479]
[160.10299683 -30.94465828]
[166.33422852 -44.58913803]
[171.71926880 -58.58918762]
[177.10430908 -72.58923340]
[182.48934937 -86.58927917]
[187.87438965 -100.58933258]
[193.25942993 -114.58937836]
[185.52967834 -128.18293762]
[188.39695740 -143.55540466]
[200.50741577 -153.44836426]
[216.14288330 -153.19067383]
[227.92074585 -142.90397644]
[230.27987671 -127.44537354]
[222.10635376 -114.11392975]
[207.25947571 -109.20433807]
[201.87443542 -95.20429230]
[196.48939514 -81.20423889]
[191.10435486 -67.20419312]
[185.71931458 -53.20414734]
[180.33427429 -39.20409775]
[193.18435669 -46.94200134]
[208.18049622 -46.60159302]
[220.66624451 -38.28857040]
[226.76464844 -24.58421326]
[224.58210754 -9.74384594]
[214.79631042 1.62445724]
[200.44584656 5.99073076]
[185.98667908 1.99920630]
[175.90849304 -9.11071014]
[173.34082031 -23.89057922]
[166.28674316 -10.65275574]
[159.23266602 2.58506775]
[152.17858887 15.82289124]
[145.12451172 29.06071472]
[138.16061401 42.34619904]
[131.28721619 55.67873001]
[132.33242798 70.53662109]
[119.13162994 79.25726318]
[112.25823212 92.58979797]
[112.73162842 106.56361389]
[101.07429504 114.28359985]
[94.20089722 127.61613464]
[87.32749939 140.94866943]
[88.62473297 159.32359314]
[73.48942566 168.21736145]
[66.79798126 181.64213562]
[60.10653305 195.06690979]
[53.69032669 208.62539673]
[47.55202866 222.31192017]
[41.41372681 235.99845886]
[35.27542877 249.68499756]
[48.70554352 256.37030029]
[61.85557938 263.59094238]
[74.70420074 271.33523560]
[87.23057556 279.59060669]
[99.41437531 288.34368896]
[111.23584747 297.58023071]
[122.67581177 307.28530884]
[133.71571350 317.44314575]
[144.33764648 328.03729248]
[154.52438354 339.05053711]
[164.25939941 350.46502686]
[173.52690125 362.26226807]
[182.31185913 374.42309570]
[190.60003662 386.92779541]
[198.37796021 399.75607300]
[205.63304138 412.88714600]
[212.35351562 426.29971313]
[218.52845764 439.97198486]
[224.14785767 453.88180542]
[229.20262146 468.00665283]
[233.68452454 482.32354736]
[237.58630371 496.80929565]
[240.90165710 511.44042969]
[243.62516785 526.19317627]
[245.75244141 541.04364014]
[247.28001404 555.96771240]
[248.20542908 570.94116211]
[248.52716064 585.93975830]
[248.24470520 600.93914795]
[247.35852051 615.91497803]
[245.87002563 630.84301758]
[243.78164673 645.69897461]
[241.09678650 660.45880127]
[237.81976318 675.09857178]
[233.95593262 689.59448242]
[229.51153564 703.92309570]
[224.49377441 718.06109619]
[218.91082764 731.98559570]
[212.77171326 745.67401123]
[206.08639526 759.10412598]
[198.86572266 772.25415039]
[191.12141418 785.10272217]
[182.86601257 797.62908936]
[174.11293030 809.81292725]
[164.87635803 821.63433838]
[155.17126465 833.07427979]
[145.01341248 844.11419678]
[134.41926575 854.73608398]
[123.40599823 864.92285156]
[111.99149323 874.65783691]
[100.19425201 883.92529297]
[88.03340912 892.71026611]
[75.52870178 900.99841309]
[62.70040512 908.77630615]
[49.56932449 916.03137207]
[36.15676117 922.75183105]
[22.48447037 928.92675781]
[8.57462788 934.54614258]
[-5.55020237 939.60089111]
[-19.86711121 944.08276367]
[-34.35287857 947.98455811]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[93 169]
[94 168]
[95 167]
[96 166]
[100 165]
[101 164]
[102 163]
[105 161]
[106 160]
[107 159]
[109 157]
[110 156]
[112 154]
[113 153]
[115 152]
[116 151]
[117 150]
[118 149]
[119 148]
[120 138]
[121 137]
[122 136]
[123 135]
[124 134]
[125 133]
] def

init

% Start Annotations
93 169 0.0 0.2 colorpair
94 168 0.16 0.6 colorpair
95 167 0.0 0.6 colorpair
96 166 0.0 0.2 colorpair
100 165 0.0 0.6 colorpair
101 164 0.0 1 colorpair
102 163 0.0 1 colorpair
105 161 0.32 1 colorpair
106 160 0.0 1 colorpair
107 159 0.0 0.2 colorpair
109 157 0.16 0.6 colorpair
110 156 0.0 0.2 colorpair
112 154 0.0 1 colorpair
113 153 0.16 0.6 colorpair
115 152 0.32 1 colorpair
116 151 0.16 0.6 colorpair
117 150 0.0 1 colorpair
118 149 0.0 0.6 colorpair
119 148 0.0 0.6 colorpair
120 138 0.16 1 colorpair
121 137 0.0 1 colorpair
122 136 0.16 1 colorpair
123 135 0.16 1 colorpair
124 134 0.0 0.2 colorpair
125 133 0.32 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
93 169 2 gmark
94 168 1 gmark
94 cmark
168 cmark
95 167 1 gmark
96 166 2 gmark
100 165 1 gmark
105 cmark
161 cmark
107 159 2 gmark
109 157 1 gmark
109 cmark
110 156 2 gmark
113 153 1 gmark
113 cmark
153 cmark
115 cmark
152 cmark
116 151 1 gmark
151 cmark
118 149 1 gmark
119 148 1 gmark
120 cmark
138 cmark
136 cmark
135 cmark
124 134 2 gmark
125 cmark
133 cmark

% End Annotations
showpage
end
%%EOF
