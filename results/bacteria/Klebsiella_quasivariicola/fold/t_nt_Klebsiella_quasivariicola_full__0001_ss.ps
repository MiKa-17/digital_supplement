%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 06:35:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAGAGGCUAUCCUGAUGU_UGUC__UAGGCAUACAGGUGGCCUCGUGGGUUAAUGAA__AAUUAACUACGGGGCUU____UCUGCUUUCUGCCACACAACAC_GGUAACAAACCACCU______UCACGUCAUGAGGCAAAAAGCCUCAAGCGCCA\
) } def
/len { sequence length } bind def

/coor [
[108.30844116 180.59747314]
[93.24234772 184.78636169]
[79.02996826 178.26391602]
[72.38195801 164.10983276]
[76.43730164 149.00724792]
[89.28118896 140.08712769]
[90.47293854 125.13454437]
[91.66469574 110.18196106]
[86.27061462 96.18539429]
[75.35243225 85.89980316]
[64.43424988 75.61421967]
[53.51606750 65.32863617]
[35.52160263 61.54033661]
[31.08164597 44.58634567]
[19.96112251 34.51987076]
[4.53762197 30.99478531]
[0.29451674 16.71734428]
[-10.82600689 6.65086794]
[-21.94653130 -3.41560864]
[-35.07892990 4.06754446]
[-49.86129379 7.12108946]
[-64.84339905 5.45830679]
[-78.55939484 -0.74545515]
[-89.67120361 -10.87117672]
[-97.09909821 -23.91791344]
[-100.12657166 -38.60173416]
[-98.46945953 -53.48205948]
[-92.30255890 -67.10301208]
[-103.42308044 -77.16948700]
[-114.54360199 -87.23596191]
[-125.66413116 -97.30243683]
[-136.78465271 -107.36891174]
[-150.19677734 -100.34464264]
[-165.17475891 -98.33668518]
[-179.90829468 -101.56824493]
[-192.62329102 -109.63044739]
[-201.79544067 -121.53394318]
[-206.33302307 -135.83026123]
[-205.70678711 -150.78810120]
[-200.01158142 -164.60295105]
[-211.13211060 -174.66941833]
[-222.25262451 -184.73590088]
[-233.37315369 -194.80238342]
[-244.49368286 -204.86885071]
[-255.61419678 -214.93533325]
[-266.73474121 -225.00180054]
[-277.85525513 -235.06828308]
[-288.97576904 -245.13475037]
[-300.09631348 -255.20123291]
[-308.60821533 -258.66668701]
[-311.33529663 -265.58010864]
[-322.25347900 -275.86569214]
[-333.17166138 -286.15127563]
[-344.08984375 -296.43685913]
[-355.00802612 -306.72247314]
[-370.79583740 -306.00070190]
[-382.41336060 -316.71557617]
[-382.96817017 -332.51010132]
[-372.13107300 -344.01373291]
[-356.33154297 -344.40148926]
[-344.94317627 -333.44338989]
[-344.72244263 -317.64065552]
[-333.80426025 -307.35504150]
[-322.88607788 -297.06945801]
[-311.96789551 -286.78387451]
[-301.04971313 -276.49829102]
[-290.02981567 -266.32174683]
[-278.90930176 -256.25527954]
[-267.78878784 -246.18881226]
[-256.66824341 -236.12232971]
[-245.54772949 -226.05584717]
[-234.42720032 -215.98937988]
[-223.30667114 -205.92289734]
[-212.18615723 -195.85643005]
[-201.06562805 -185.78994751]
[-189.94511414 -175.72346497]
[-176.76374817 -182.76173401]
[-161.94192505 -184.86949158]
[-147.26582336 -181.77328491]
[-134.51074219 -173.82788086]
[-125.22633362 -161.97589111]
[-120.54837036 -147.63584900]
[-121.05979156 -132.53251648]
[-126.71817780 -118.48944092]
[-115.59764862 -108.42296600]
[-104.47712708 -98.35648346]
[-93.35660553 -88.29000854]
[-82.23607635 -78.22353363]
[-69.29447937 -85.71191406]
[-54.65209961 -88.83777618]
[-39.74029922 -87.28267670]
[-26.02074051 -81.18639374]
[-14.84212780 -71.13446808]
[-7.30763483 -58.10195541]
[-4.16603184 -43.35886383]
[-5.73729277 -28.34641647]
[-11.88005447 -14.53613281]
[-0.75953072 -4.46965599]
[10.36099339 5.59682035]
[24.98907852 8.40188408]
[30.02759933 23.39934731]
[41.14812088 33.46582413]
[53.27563858 33.18693924]
[62.62709427 41.53007126]
[63.80165482 54.41044998]
[74.71984100 64.69603729]
[85.63802338 74.98162079]
[96.55619812 85.26721191]
[91.90576935 71.00630188]
[84.80275726 57.79467010]
[80.67528534 43.37371445]
[79.71260834 28.40463829]
[81.95885468 13.57377911]
[87.31103516 -0.43886334]
[95.52375031 -12.99080563]
[106.22045135 -23.50653839]
[118.91068268 -31.50391006]
[133.01260376 -36.61624146]
[147.87962341 -38.60912704]
[162.83009338 -37.39119720]
[177.17854309 -33.01829147]
[190.26705933 -25.69090652]
[201.49555969 -15.74501038]
[210.34919739 -3.63662267]
[216.42204285 10.07908440]
[219.43563843 24.77323914]
[219.25183105 39.77211380]
[215.87902832 54.38800049]
[209.47187805 67.95075989]
[200.32415771 79.83853912]
[188.85528564 89.50627899]
[175.59112549 96.51069641]
[161.13322449 100.53175354]
[147.52717590 94.21706390]
[156.44018555 106.28181458]
[165.35319519 118.34656525]
[174.26622009 130.41131592]
[183.17922974 142.47605896]
[192.09225464 154.54080200]
[207.67976379 158.33671570]
[214.29968262 172.95027161]
[206.87377930 187.17121887]
[191.09855652 190.09045410]
[179.07542419 179.46859741]
[180.02749634 163.45382690]
[171.11448669 151.38906860]
[162.20146179 139.32432556]
[153.28845215 127.25957489]
[144.37544250 115.19483185]
[135.46241760 103.13008118]
[128.25112915 105.19098663]
[124.60947418 119.74221802]
[113.82855988 109.31280518]
[106.61727142 111.37371063]
[105.42552185 126.32629395]
[104.23377228 141.27888489]
[115.50257874 152.12083435]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 156]
[7 155]
[8 154]
[9 108]
[10 107]
[11 106]
[12 105]
[14 102]
[15 101]
[17 99]
[18 98]
[19 97]
[28 88]
[29 87]
[30 86]
[31 85]
[32 84]
[40 76]
[41 75]
[42 74]
[43 73]
[44 72]
[45 71]
[46 70]
[47 69]
[48 68]
[49 67]
[51 66]
[52 65]
[53 64]
[54 63]
[55 62]
[134 150]
[135 149]
[136 148]
[137 147]
[138 146]
[139 145]
] def

init

% Start Annotations
6 156 0.16 1 colorpair
7 155 0.16 1 colorpair
8 154 0.0 1 colorpair
9 108 0.0 0.6 colorpair
10 107 0.16 1 colorpair
11 106 0.16 1 colorpair
12 105 0.0 0.6 colorpair
14 102 0.16 1 colorpair
15 101 0.0 0.6 colorpair
17 99 0.0 1 colorpair
18 98 0.0 0.6 colorpair
19 97 0.0 1 colorpair
28 88 0.16 1 colorpair
29 87 0.0 1 colorpair
30 86 0.0 1 colorpair
31 85 0.0 1 colorpair
32 84 0.0 0.6 colorpair
40 76 0.0 1 colorpair
41 75 0.16 1 colorpair
42 74 0.16 1 colorpair
43 73 0.16 1 colorpair
44 72 0.0 0.6 colorpair
45 71 0.0 0.6 colorpair
46 70 0.16 1 colorpair
47 69 0.16 1 colorpair
48 68 0.0 0.6 colorpair
49 67 0.0 0.6 colorpair
51 66 0.0 0.6 colorpair
52 65 0.0 1 colorpair
53 64 0.0 1 colorpair
54 63 0.0 0.6 colorpair
55 62 0.0 0.6 colorpair
134 150 0.0 1 colorpair
135 149 0.16 1 colorpair
136 148 0.0 1 colorpair
137 147 0.16 1 colorpair
138 146 0.0 0.6 colorpair
139 145 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
6 cmark
156 cmark
155 cmark
9 108 1 gmark
10 cmark
107 cmark
11 cmark
12 105 1 gmark
14 cmark
102 cmark
15 101 1 gmark
18 98 1 gmark
28 cmark
88 cmark
32 84 1 gmark
41 cmark
75 cmark
42 cmark
43 cmark
44 72 1 gmark
45 71 1 gmark
46 cmark
70 cmark
69 cmark
48 68 1 gmark
49 67 1 gmark
51 66 1 gmark
54 63 1 gmark
55 62 1 gmark
135 cmark
149 cmark
147 cmark
138 146 1 gmark
139 145 1 gmark

% End Annotations
showpage
end
%%EOF
