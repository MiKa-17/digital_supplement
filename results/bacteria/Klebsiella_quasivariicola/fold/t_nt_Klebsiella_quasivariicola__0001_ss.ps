%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 06:35:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAAGGCCACAAAAAUAU_UGUC__UAGGCAUACAAGUGACCUCCUGCACUAAUGAA__AAUUAACUACAGGGCUC____UCCGCUAUCUGAAACACAACAC_GGCAACAAAACACCG______UCACAUCAUGAGCCAAAAAGACUAAACAGCAA\
) } def
/len { sequence length } bind def

/coor [
[267.89447021 406.46945190]
[261.54019165 392.88183594]
[255.18589783 379.29421997]
[248.83161926 365.70663452]
[242.47732544 352.11901855]
[236.12304688 338.53140259]
[229.76875305 324.94381714]
[223.41447449 311.35620117]
[217.06018066 297.76858521]
[210.70590210 284.18099976]
[204.35160828 270.59338379]
[185.87596130 268.16613770]
[172.44435120 255.03559875]
[169.55342102 236.32507324]
[178.53604126 219.48997498]
[171.38302612 206.30534363]
[164.23001099 193.12071228]
[157.07699585 179.93608093]
[149.92398071 166.75146484]
[141.13136292 154.59869385]
[130.84576416 143.68051147]
[120.56018066 132.76232910]
[110.27459717 121.84414673]
[100.27568054 124.13831329]
[90.22698212 122.07311249]
[81.94328308 116.02152252]
[76.92061615 107.07645416]
[76.06607056 96.85337830]
[79.53398132 87.19858551]
[69.91757965 75.68664551]
[60.30117035 64.17470551]
[50.68476868 52.66276550]
[37.89731598 50.72242737]
[30.12651253 40.89022827]
[31.12788391 28.80090523]
[21.74226379 17.10004616]
[12.35664177 5.39918709]
[2.97102070 -6.30167294]
[-6.41460037 -18.00253296]
[-16.70018768 -28.92071533]
[-27.82071114 -38.98719025]
[-38.94123459 -49.05366898]
[-50.06175995 -59.12014389]
[-61.18228149 -69.18662262]
[-72.30281067 -79.25309753]
[-83.42333221 -89.31957245]
[-94.54385376 -99.38604736]
[-105.66437531 -109.45252228]
[-116.78490448 -119.51900482]
[-130.03079224 -112.18244171]
[-144.94158936 -109.54678345]
[-159.89990234 -111.89792633]
[-173.28314209 -118.98083496]
[-183.63960266 -130.02720642]
[-189.84590149 -143.83882141]
[-191.22880554 -158.91749573]
[-187.63833618 -173.62759399]
[-179.46392822 -186.37348938]
[-167.59231567 -195.77261353]
[-153.31120300 -200.80538940]
[-138.16973877 -200.92591858]
[-123.81032562 -196.12112427]
[-111.79058075 -186.91220093]
[-103.41430664 -174.29804993]
[-99.59010315 -159.64695740]
[-100.73279572 -144.54818726]
[-106.71842957 -130.63952637]
[-95.59790039 -120.57305145]
[-84.47737885 -110.50657654]
[-73.35685730 -100.44009399]
[-62.23633194 -90.37361908]
[-51.11580658 -80.30714417]
[-39.99528122 -70.24066925]
[-28.87475967 -60.17419052]
[-17.75423431 -50.10771561]
[-6.63371086 -40.04123688]
[-7.92686224 -54.98539352]
[-0.32101992 -67.91408539]
[13.36951351 -74.04346466]
[28.07898712 -71.10554504]
[38.36462402 -60.18740845]
[40.42054367 -45.32897186]
[33.48602295 -32.02812958]
[20.12696075 -25.20643997]
[5.28625917 -27.38815308]
[14.67188072 -15.68729401]
[24.05750084 -3.98643422]
[33.44312286 7.71442556]
[42.82874298 19.41528511]
[59.48789215 24.85806084]
[62.19670868 43.04636002]
[71.81311035 54.55830002]
[81.42951965 66.07024384]
[91.04592133 77.58218384]
[110.20994568 78.12555695]
[122.93412781 92.46607971]
[121.19277954 111.55856323]
[131.47836304 122.47674561]
[141.76394653 133.39492798]
[152.04954529 144.31311035]
[149.65202332 129.50595093]
[153.37956238 114.97648621]
[162.60934448 103.15231323]
[175.79925537 96.00904846]
[190.74549866 94.74019623]
[204.95082092 99.55775452]
[216.04176331 109.65680695]
[222.16525269 123.34998322]
[222.29815674 138.34939575]
[216.41825867 152.14891052]
[205.50799561 162.44290161]
[191.39025879 167.51139832]
[176.42388916 166.50758362]
[163.10861206 159.59844971]
[170.26162720 172.78306580]
[177.41464233 185.96769714]
[184.56765747 199.15232849]
[191.72067261 212.33695984]
[203.26618958 211.83865356]
[214.10627747 215.69255066]
[222.66914368 223.29878235]
[227.72860718 233.51652527]
[228.57969666 244.83483887]
[225.13650513 255.59617615]
[217.93920898 264.23910522]
[224.29350281 277.82669067]
[230.64778137 291.41430664]
[237.00207520 305.00192261]
[243.35636902 318.58950806]
[249.71064758 332.17712402]
[256.06494141 345.76473999]
[262.41921997 359.35232544]
[268.77349854 372.93994141]
[275.12780762 386.52755737]
[281.48208618 400.11514282]
[296.30136108 397.31521606]
[311.35134888 398.28945923]
[325.68594360 402.97668457]
[338.40411377 411.08218384]
[348.70632935 422.09649658]
[355.94503784 435.32720947]
[359.66516113 449.94268799]
[359.63287354 465.02410889]
[355.85021973 479.62350464]
[348.55496216 492.82312012]
[338.20565796 503.79321289]
[325.45294189 511.84423828]
[311.09838867 516.47003174]
[296.04440308 517.37982178]
[281.23724365 514.51647949]
[267.60769653 508.05996704]
[256.01257324 498.41613770]
[247.18070984 486.19119263]
[241.66729736 472.15362549]
[239.81892395 457.18585205]
[241.75178528 442.22875977]
[247.34434509 428.22253418]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 135]
[2 134]
[3 133]
[4 132]
[5 131]
[6 130]
[7 129]
[8 128]
[9 127]
[10 126]
[11 125]
[15 118]
[16 117]
[17 116]
[18 115]
[19 114]
[20 100]
[21 99]
[22 98]
[23 97]
[29 94]
[30 93]
[31 92]
[32 91]
[35 89]
[36 88]
[37 87]
[38 86]
[39 85]
[40 76]
[41 75]
[42 74]
[43 73]
[44 72]
[45 71]
[46 70]
[47 69]
[48 68]
[49 67]
] def

init

% Start Annotations
1 135 0.16 1 colorpair
2 134 0.16 1 colorpair
3 133 0.0 0.6 colorpair
4 132 0.16 1 colorpair
5 131 0.0 1 colorpair
6 130 0.0 0.6 colorpair
7 129 0.0 1 colorpair
8 128 0.0 0.6 colorpair
9 127 0.0 0.6 colorpair
10 126 0.16 1 colorpair
11 125 0.0 0.6 colorpair
15 118 0.16 1 colorpair
16 117 0.0 0.6 colorpair
17 116 0.0 1 colorpair
18 115 0.16 1 colorpair
19 114 0.0 0.6 colorpair
20 100 0.0 0.6 colorpair
21 99 0.0 1 colorpair
22 98 0.0 1 colorpair
23 97 0.0 1 colorpair
29 94 0.0 0.6 colorpair
30 93 0.0 0.6 colorpair
31 92 0.0 1 colorpair
32 91 0.0 0.6 colorpair
35 89 0.0 0.6 colorpair
36 88 0.16 1 colorpair
37 87 0.16 1 colorpair
38 86 0.0 1 colorpair
39 85 0.0 1 colorpair
40 76 0.0 1 colorpair
41 75 0.16 1 colorpair
42 74 0.16 1 colorpair
43 73 0.16 1 colorpair
44 72 0.0 0.6 colorpair
45 71 0.0 0.6 colorpair
46 70 0.16 1 colorpair
47 69 0.16 1 colorpair
48 68 0.0 0.6 colorpair
49 67 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
1 cmark
135 cmark
2 cmark
3 133 1 gmark
4 cmark
132 cmark
6 130 1 gmark
8 128 1 gmark
9 127 1 gmark
10 cmark
11 125 1 gmark
15 cmark
118 cmark
16 117 1 gmark
18 cmark
115 cmark
19 114 1 gmark
20 100 1 gmark
29 94 1 gmark
30 93 1 gmark
32 91 1 gmark
35 89 1 gmark
36 cmark
88 cmark
37 cmark
41 cmark
75 cmark
42 cmark
43 cmark
44 72 1 gmark
45 71 1 gmark
46 cmark
70 cmark
69 cmark
48 68 1 gmark
49 67 1 gmark

% End Annotations
showpage
end
%%EOF
