%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 06:35:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__________________C_AGAAAUGCCGCAAAAGUAUCUGCUGGUGGGCUUAGUAGUAAUUUGCUUCACUAUUUUAUUAUUUACCUGGAUGGUUCGUAAUUCACUAUGUGAAUUACAGCUCAGGCAGGGAAAUAUUGAGCUGGUGGCAUUCUUAGCCUACGAAACUAAA_A_____________\
) } def
/len { sequence length } bind def

/coor [
[80.94889069 531.59564209]
[67.64492798 524.64227295]
[55.06217957 516.45568848]
[43.31459808 507.11016846]
[32.50856781 496.69027710]
[22.74195862 485.29034424]
[14.10321712 473.01367188]
[6.67057943 459.97140503]
[0.51135874 446.28167725]
[-4.31866503 432.06845093]
[-7.77574968 417.46047974]
[-9.82858658 402.58999634]
[-10.45858383 387.59173584]
[-9.66003609 372.60150146]
[-7.44017649 357.75506592]
[-3.81910777 343.18685913]
[1.17037630 329.02883911]
[7.48308897 315.40921021]
[15.06186008 302.45129395]
[23.83805275 290.27249146]
[33.73218918 278.98309326]
[44.65465927 268.68530273]
[56.50654984 259.47241211]
[69.18052673 251.42784119]
[82.56180573 244.62445068]
[96.52919769 239.12385559]
[110.95622253 234.97586060]
[108.19998169 220.23126221]
[105.44373322 205.48666382]
[102.68749237 190.74208069]
[99.93125153 175.99748230]
[90.99543762 170.98889160]
[86.20097351 161.68835449]
[87.35193634 151.06710815]
[94.30766296 142.67073059]
[92.04830170 127.84186554]
[89.78893280 113.01300049]
[84.66237640 127.10974884]
[83.55084991 142.06851196]
[77.59765625 155.83656311]
[67.46054840 166.89274597]
[54.25953674 174.01547241]
[39.45315933 176.41780090]
[24.67731857 173.83427429]
[11.56455040 166.55036926]
[1.56363821 155.37084961]
[-4.22045040 141.53089905]
[-5.14865112 126.55964661]
[-1.11841011 112.11121368]
[7.42498446 99.78195953]
[19.53760338 90.93411255]
[33.88116074 86.54522705]
[48.87089157 87.10021973]
[62.85358047 92.53954315]
[77.78394318 93.98328400]
[65.37348175 85.55828094]
[52.96302795 77.13328552]
[40.55257034 68.70829010]
[28.14211464 60.28329468]
[15.73165894 51.85829544]
[3.32120252 43.43330002]
[-12.15261459 46.64834976]
[-25.32163048 37.91035080]
[-28.37290001 22.40340805]
[-19.49616051 9.32751274]
[-3.95782447 6.44036150]
[9.02348995 15.45485020]
[11.74619961 31.02284241]
[24.15665627 39.44784164]
[36.56711197 47.87283707]
[48.97756958 56.29783249]
[61.38802338 64.72283173]
[73.79848480 73.14782715]
[86.20893860 81.57282257]
[93.48751068 79.76384735]
[85.54824066 67.03717804]
[95.19866943 55.55374527]
[109.10220337 61.18329620]
[108.04464722 76.14588165]
[115.32321930 74.33690643]
[122.34550476 61.08218765]
[129.36779785 47.82747269]
[136.39007568 34.57275772]
[143.41236877 21.31804276]
[144.66970825 12.24898529]
[150.66558838 7.90110493]
[157.90954590 -5.23377132]
[165.15351868 -18.36864853]
[157.76512146 -33.57295227]
[160.85670471 -50.02331161]
[173.01718140 -61.28223419]
[189.32637024 -63.06387711]
[196.34866333 -76.31859589]
[203.37094116 -89.57331085]
[202.99447632 -105.39003754]
[215.78984070 -113.01422119]
[215.41337585 -128.83094788]
[228.20872498 -136.45513916]
[235.23101807 -149.70985413]
[242.25329590 -162.96456909]
[249.27558899 -176.21928406]
[256.29788208 -189.47399902]
[263.32015991 -202.72871399]
[270.34243774 -215.98342896]
[277.36474609 -229.23814392]
[284.38702393 -242.49285889]
[286.45932007 -259.31967163]
[303.20220947 -261.98651123]
[310.39968872 -246.63616943]
[297.64175415 -235.47056580]
[290.61944580 -222.21585083]
[283.59716797 -208.96113586]
[276.57489014 -195.70642090]
[269.55258179 -182.45170593]
[262.53030396 -169.19699097]
[255.50801086 -155.94227600]
[248.48573303 -142.68756104]
[241.46343994 -129.43284607]
[242.34217834 -114.56418610]
[229.04455566 -105.99193573]
[229.92329407 -91.12327576]
[216.62565613 -82.55101776]
[209.60337830 -69.29630280]
[202.58108521 -56.04159164]
[209.54286194 -44.63615417]
[209.95790100 -31.17197037]
[203.61059570 -19.16788101]
[192.06668091 -11.81412125]
[178.28839111 -11.12468243]
[171.04443359 2.01019335]
[163.80046082 15.14507008]
[156.66708374 28.34033012]
[149.64480591 41.59504700]
[142.62251282 54.84976196]
[135.60021973 68.10447693]
[128.57794189 81.35919189]
[128.86067200 93.26246643]
[124.97455597 102.99343109]
[118.44805908 109.32284546]
[111.08350372 111.79664612]
[104.61780548 110.75363159]
[106.87716675 125.58250427]
[109.13652802 140.41136169]
[122.43466187 155.54319763]
[114.67584991 173.24124146]
[117.43209076 187.98582458]
[120.18833160 202.73042297]
[122.94457245 217.47502136]
[125.70082092 232.21961975]
[140.65203857 230.87586975]
[155.66329956 230.95941162]
[170.59863281 232.46951294]
[185.32279968 235.39248657]
[199.70243835 239.70185852]
[213.60733032 245.35859680]
[226.91154480 252.31149292]
[239.49458313 260.49755859]
[251.24250793 269.84268188]
[262.04891968 280.26217651]
[271.81594849 291.66174316]
[280.45513916 303.93811035]
[287.88824463 316.98010254]
[294.04797363 330.66961670]
[298.87850952 344.88265991]
[302.33612061 359.49050903]
[304.38949585 374.36090088]
[305.02005005 389.35913086]
[304.22204590 404.34939575]
[302.00271606 419.19592285]
[298.38220215 433.76425171]
[293.39321899 447.92248535]
[287.08102417 461.54232788]
[279.50271606 474.50051880]
[270.72695923 486.67962646]
[260.83325195 497.96939087]
[249.91114807 508.26757812]
[238.05958557 517.48089600]
[225.38591003 525.52593994]
[212.00486755 532.32983398]
[198.03767395 537.83093262]
[183.61080933 541.97943115]
[168.85491943 544.73779297]
[153.90364075 546.08099365]
[138.89239502 545.99694824]
[123.95711517 544.48626709]
[109.23305511 541.56274414]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 149]
[28 148]
[29 147]
[30 146]
[31 145]
[35 143]
[36 142]
[37 141]
[55 74]
[56 73]
[57 72]
[58 71]
[59 70]
[60 69]
[61 68]
[80 136]
[81 135]
[82 134]
[83 133]
[84 132]
[86 131]
[87 130]
[88 129]
[92 124]
[93 123]
[94 122]
[96 120]
[98 118]
[99 117]
[100 116]
[101 115]
[102 114]
[103 113]
[104 112]
[105 111]
[106 110]
] def

init

% Start Annotations
27 149 0.0 1 colorpair
28 148 0.0 1 colorpair
29 147 0.16 1 colorpair
30 146 0.16 0.2 colorpair
31 145 0.0 0.2 colorpair
35 143 0.0 1 colorpair
36 142 0.32 1 colorpair
37 141 0.0 0.2 colorpair
55 74 0.16 0.2 colorpair
56 73 0.16 0.2 colorpair
57 72 0.16 0.2 colorpair
58 71 0.0 0.2 colorpair
59 70 0.0 1 colorpair
60 69 0.16 0.2 colorpair
61 68 0.16 0.2 colorpair
80 136 0.0 0.2 colorpair
81 135 0.0 0.2 colorpair
82 134 0.0 1 colorpair
83 133 0.0 1 colorpair
84 132 0.16 0.2 colorpair
86 131 0.0 0.2 colorpair
87 130 0.32 1 colorpair
88 129 0.16 0.2 colorpair
92 124 0.0 1 colorpair
93 123 0.16 0.2 colorpair
94 122 0.0 0.2 colorpair
96 120 0.32 1 colorpair
98 118 0.0 0.2 colorpair
99 117 0.32 1 colorpair
100 116 0.16 1 colorpair
101 115 0.16 0.2 colorpair
102 114 0.16 0.2 colorpair
103 113 0.0 1 colorpair
104 112 0.0 1 colorpair
105 111 0.16 0.2 colorpair
106 110 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
29 cmark
147 cmark
30 146 2 gmark
146 cmark
31 145 2 gmark
36 cmark
142 cmark
37 141 2 gmark
55 74 2 gmark
55 cmark
56 73 2 gmark
73 cmark
57 72 2 gmark
57 cmark
72 cmark
58 71 2 gmark
60 69 2 gmark
60 cmark
69 cmark
61 68 2 gmark
61 cmark
80 136 2 gmark
81 135 2 gmark
84 132 2 gmark
84 cmark
132 cmark
86 131 2 gmark
87 cmark
130 cmark
88 129 2 gmark
88 cmark
93 123 2 gmark
123 cmark
94 122 2 gmark
96 cmark
120 cmark
98 118 2 gmark
99 cmark
117 cmark
100 cmark
101 115 2 gmark
101 cmark
115 cmark
102 114 2 gmark
102 cmark
114 cmark
105 111 2 gmark
105 cmark

% End Annotations
showpage
end
%%EOF
