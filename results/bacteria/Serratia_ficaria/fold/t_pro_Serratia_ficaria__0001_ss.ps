%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 22:53:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___________CAUGCAUAAAAAACAGACCCUAUAAAAACUAACCGUUAUAUGUACCACGGUUAUAACAUUGGCAUGGAUAACAAAAAACCACCUUUGCGAGCUGCAAAUCCAACAGGGCAACACGGAGGUUGCGGCUAUUCUGGCUUAC____________\
) } def
/len { sequence length } bind def

/coor [
[-141.80220032 247.15980530]
[-145.81025696 232.70521545]
[-148.23437500 217.90238953]
[-149.04621887 202.92437744]
[-148.23628235 187.94625854]
[-145.81405640 173.14312744]
[-141.80784607 158.68800354]
[-136.26446533 144.74989319]
[-129.24873352 131.49171448]
[-120.84265900 119.06842804]
[-111.14450073 107.62527466]
[-100.26762390 97.29602051]
[-88.33917236 88.20140076]
[-75.49858856 80.44773102]
[-61.89596939 74.12564850]
[-47.69032288 69.30905151]
[-33.04770660 66.05425262]
[-18.13928223 64.39928436]
[-3.13932443 64.36350250]
[11.77682495 65.94731903]
[26.43480492 69.13222504]
[40.66326904 73.88098907]
[54.29589844 80.13809967]
[67.17333221 87.83042145]
[79.13569641 96.86014557]
[68.68352509 86.10134125]
[58.23134232 75.34252930]
[47.77916336 64.58372498]
[37.32698441 53.82491302]
[26.87480736 43.06610489]
[16.42262840 32.30729675]
[9.63992786 33.99164963]
[2.72234464 33.47379303]
[-3.63831592 30.83797646]
[-8.81610584 26.37862778]
[-12.31251049 20.56781006]
[-13.80436230 14.00539112]
[-13.17350006 7.35717201]
[-10.51546383 1.28733814]
[-19.65643883 -10.60562515]
[-28.79741478 -22.49858856]
[-37.93838882 -34.39155197]
[-53.34051514 -34.10736084]
[-65.81090546 -42.84479523]
[-70.68751526 -57.08145905]
[-66.29843903 -71.28969574]
[-75.43941498 -83.18266296]
[-84.58039093 -95.07562256]
[-93.72136688 -106.96858978]
[-102.86234283 -118.86154938]
[-112.00331879 -130.75451660]
[-121.14429474 -142.64747620]
[-130.28526306 -154.54043579]
[-139.42623901 -166.43339539]
[-148.56721497 -178.32637024]
[-157.70819092 -190.21932983]
[-166.84916687 -202.11228943]
[-175.99014282 -214.00524902]
[-190.91833496 -210.82533264]
[-205.74584961 -214.44575500]
[-217.52868652 -224.14768982]
[-223.92733765 -238.00482178]
[-223.67135620 -253.26579285]
[-216.81156921 -266.90054321]
[-204.70999146 -276.20184326]
[-189.76939392 -279.32296753]
[-174.95625305 -275.64416504]
[-163.21171570 -265.89590454]
[-156.86767578 -252.01368713]
[-157.18374634 -236.75384521]
[-164.09718323 -223.14622498]
[-154.95620728 -211.25326538]
[-145.81523132 -199.36030579]
[-136.67425537 -187.46734619]
[-127.53327942 -175.57437134]
[-118.39230347 -163.68141174]
[-109.25132751 -151.78845215]
[-100.11035156 -139.89549255]
[-90.96937561 -128.00251770]
[-81.82839966 -116.10956573]
[-72.68743134 -104.21659851]
[-63.54645157 -92.32363892]
[-54.40547943 -80.43067169]
[-39.54631805 -81.01670074]
[-27.04344940 -72.64160156]
[-21.80834007 -58.34310532]
[-26.04542732 -43.53252792]
[-16.90445137 -31.63956261]
[-7.76347637 -19.74660110]
[1.37749898 -7.85363722]
[23.69555664 -1.74305868]
[27.18143654 21.85511971]
[37.63361740 32.61392593]
[48.08579254 43.37273788]
[58.53797150 54.13154602]
[68.99015045 64.89035034]
[79.44232941 75.64916229]
[89.89450836 86.40797424]
[104.77695465 88.28223419]
[117.57032776 80.45092010]
[130.36370850 72.61960602]
[143.15708923 64.78828430]
[155.95046997 56.95697403]
[156.18551636 41.53139877]
[164.74195862 28.69431877]
[178.88949585 22.54199600]
[194.11366272 25.03761292]
[205.55650330 35.38483047]
[209.56665039 50.28188705]
[204.86447144 64.97518921]
[192.95040894 74.77615356]
[177.62622070 76.55732727]
[163.78178406 69.75035095]
[150.98840332 77.58166504]
[138.19502258 85.41297913]
[125.40164185 93.24429321]
[112.60826874 101.07560730]
[114.04485321 108.43673706]
[118.35460663 130.52012634]
[133.15376282 132.96653748]
[147.95292664 135.41293335]
[162.75209045 137.85932922]
[177.55123901 140.30574036]
[190.25199890 130.90007019]
[205.87104797 133.31265259]
[215.14190674 146.11213684]
[212.56433105 161.70481873]
[199.66755676 170.83982849]
[184.10299683 168.09754944]
[175.10484314 155.10490417]
[160.30567932 152.65849304]
[145.50653076 150.21209717]
[130.70736694 147.76568604]
[115.90820312 145.31929016]
[121.38858032 159.28228760]
[125.32947540 173.75534058]
[127.68483734 188.56927490]
[128.42710876 203.55088806]
[127.54764557 218.52508545]
[125.05670166 233.31681824]
[120.98340607 247.75315857]
[115.37537384 261.66537476]
[108.29815674 274.89086914]
[99.83448029 287.27496338]
[90.08329010 298.67297363]
[79.15856934 308.95159912]
[67.18801880 317.99072266]
[54.31156540 325.68469238]
[40.67973709 331.94354248]
[26.45187759 336.69412231]
[11.79430485 339.88088989]
[-3.12164283 341.46661377]
[-18.12160492 341.43276978]
[-33.03023911 339.77969360]
[-47.67327118 336.52676392]
[-61.87953186 331.71197510]
[-75.48295593 325.39163208]
[-88.32453156 317.63958740]
[-100.25414276 308.54650879]
[-111.13233948 298.21862793]
[-120.83196259 286.77670288]
[-129.23962402 274.35452271]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 98]
[26 97]
[27 96]
[28 95]
[29 94]
[30 93]
[31 92]
[39 90]
[40 89]
[41 88]
[42 87]
[46 83]
[47 82]
[48 81]
[49 80]
[50 79]
[51 78]
[52 77]
[53 76]
[54 75]
[55 74]
[56 73]
[57 72]
[58 71]
[99 117]
[100 116]
[101 115]
[102 114]
[103 113]
[119 134]
[120 133]
[121 132]
[122 131]
[123 130]
] def

init

% Start Annotations
25 98 0.0 1 colorpair
26 97 0.16 1 colorpair
27 96 0.0 0.2 colorpair
28 95 0.16 1 colorpair
29 94 0.0 0.2 colorpair
30 93 0.16 1 colorpair
31 92 0.0 0.2 colorpair
39 90 0.0 0.2 colorpair
40 89 0.16 1 colorpair
41 88 0.16 1 colorpair
42 87 0.0 0.2 colorpair
46 83 0.16 1 colorpair
47 82 0.0 1 colorpair
48 81 0.16 1 colorpair
49 80 0.16 1 colorpair
50 79 0.0 1 colorpair
51 78 0.0 0.2 colorpair
52 77 0.0 1 colorpair
53 76 0.0 1 colorpair
54 75 0.0 1 colorpair
55 74 0.0 0.2 colorpair
56 73 0.16 1 colorpair
57 72 0.0 0.2 colorpair
58 71 0.0 1 colorpair
99 117 0.0 0.6 colorpair
100 116 0.0 0.2 colorpair
101 115 0.16 1 colorpair
102 114 0.0 0.2 colorpair
103 113 0.16 1 colorpair
119 134 0.16 0.6 colorpair
120 133 0.0 0.2 colorpair
121 132 0.16 0.6 colorpair
122 131 0.0 0.6 colorpair
123 130 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
26 cmark
27 96 2 gmark
28 cmark
29 94 2 gmark
30 cmark
93 cmark
31 92 2 gmark
39 90 2 gmark
40 cmark
89 cmark
88 cmark
42 87 2 gmark
83 cmark
81 cmark
49 cmark
51 78 2 gmark
55 74 2 gmark
56 cmark
57 72 2 gmark
99 117 1 gmark
100 116 2 gmark
101 cmark
115 cmark
102 114 2 gmark
103 cmark
113 cmark
119 134 1 gmark
119 cmark
134 cmark
120 133 2 gmark
121 132 1 gmark
121 cmark
132 cmark
122 131 1 gmark
123 130 1 gmark
123 cmark

% End Annotations
showpage
end
%%EOF
