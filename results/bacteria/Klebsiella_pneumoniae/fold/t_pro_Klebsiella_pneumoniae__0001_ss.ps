%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 04:39:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_______________________________________________________AGG___________CAAGAAAUGCCGCCAAAAUAUCUCCUUGUGGGCAUAAUAGUACUCUGUAUCACGGUACUGGGAUUUACGUUGUUGGUGCGCAACUCACUAUGCGAACUGCGGAUUAAGGAGGGUAAUAUUGAGGUGGAGGCUUUUCUCGCUUACGAAUCGAAGAAG______________________________\
____________________________________________________________________________________________________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[85.81737518 1038.11120605]
[70.82154083 1037.76452637]
[55.83316040 1037.17822266]
[40.85607529 1036.35241699]
[25.89410400 1035.28710938]
[10.95107651 1033.98291016]
[-3.96918988 1032.43994141]
[-18.86288261 1030.65856934]
[-33.72619247 1028.63940430]
[-48.55532074 1026.38281250]
[-63.34648132 1023.88940430]
[-78.09588623 1021.15991211]
[-92.79977417 1018.19494629]
[-107.45437622 1014.99530029]
[-122.05595398 1011.56176758]
[-136.60076904 1007.89526367]
[-151.08511353 1003.99670410]
[-165.50529480 999.86706543]
[-179.85758972 995.50738525]
[-194.13836670 990.91882324]
[-208.34394836 986.10253906]
[-222.47071838 981.05981445]
[-236.51507568 975.79187012]
[-250.47340393 970.30004883]
[-264.34216309 964.58575439]
[-278.11779785 958.65051270]
[-291.79678345 952.49578857]
[-305.37561035 946.12310791]
[-318.85083008 939.53424072]
[-332.21899414 932.73077393]
[-345.47668457 925.71441650]
[-358.62048340 918.48699951]
[-371.64709473 911.05041504]
[-384.55313110 903.40649414]
[-397.33532715 895.55725098]
[-409.99038696 887.50463867]
[-422.51510620 879.25073242]
[-434.90625000 870.79766846]
[-447.16067505 862.14758301]
[-459.27526855 853.30267334]
[-471.24688721 844.26525879]
[-483.07250977 835.03753662]
[-494.74908447 825.62200928]
[-506.27362061 816.02099609]
[-517.64324951 806.23693848]
[-528.85491943 796.27233887]
[-539.90594482 786.12982178]
[-550.79333496 775.81195068]
[-561.51440430 765.32128906]
[-572.06640625 754.66058350]
[-582.44665527 743.83251953]
[-592.65240479 732.83990479]
[-602.68115234 721.68554688]
[-612.53027344 710.37231445]
[-622.19726562 698.90301514]
[-631.67968750 687.28070068]
[-640.97503662 675.50823975]
[-650.08105469 663.58862305]
[-658.99530029 651.52502441]
[-667.71557617 639.32043457]
[-676.23962402 626.97796631]
[-684.56524658 614.50085449]
[-692.69036865 601.89215088]
[-700.61279297 589.15527344]
[-708.33068848 576.29327393]
[-715.84191895 563.30957031]
[-723.14459229 550.20745850]
[-730.23687744 536.99023438]
[-737.11694336 523.66131592]
[-743.78308105 510.22415161]
[-750.23352051 496.68209839]
[-756.46667480 483.03866577]
[-762.48083496 469.29733276]
[-768.27459717 455.46157837]
[-773.84643555 441.53500366]
[-779.19488525 427.52108765]
[-784.31866455 413.42349243]
[-789.21636963 399.24578857]
[-793.88677979 384.99157715]
[-798.32873535 370.66452026]
[-802.54101562 356.26828003]
[-806.52264404 341.80654907]
[-810.27258301 327.28302002]
[-813.78985596 312.70138550]
[-817.07354736 298.06536865]
[-820.12280273 283.37875366]
[-822.93688965 268.64523315]
[-825.51507568 253.86863708]
[-827.85675049 239.05270386]
[-829.96118164 224.20121765]
[-831.82794189 209.31799316]
[-833.45654297 194.40682983]
[-834.84649658 179.47152710]
[-835.99755859 164.51591492]
[-836.90936279 149.54380798]
[-837.58166504 134.55905151]
[-838.01434326 119.56545258]
[-838.20727539 104.56685638]
[-838.16040039 89.56708527]
[-837.87371826 74.56998444]
[-837.34729004 59.57938766]
[-836.58129883 44.59911728]
[-835.57586670 29.63301086]
[-834.33135986 14.68488884]
[-832.84802246 -0.24142596]
[-831.12622070 -15.14211845]
[-829.16644287 -30.01338196]
[-826.96917725 -44.85140991]
[-824.53491211 -59.65241623]
[-821.86437988 -74.41261292]
[-818.95825195 -89.12823486]
[-815.81719971 -103.79550934]
[-812.44207764 -118.41069794]
[-808.83367920 -132.97006226]
[-804.99304199 -147.46986389]
[-800.92108154 -161.90643311]
[-796.61883545 -176.27604675]
[-792.08740234 -190.57504272]
[-787.32794189 -204.79975891]
[-782.34167480 -218.94657898]
[-777.12988281 -233.01187134]
[-771.69390869 -246.99205017]
[-766.03509521 -260.88354492]
[-760.15496826 -274.68276978]
[-754.05493164 -288.38623047]
[-747.73663330 -301.99044800]
[-741.20166016 -315.49188232]
[-734.45166016 -328.88714600]
[-727.48834229 -342.17276001]
[-720.31353760 -355.34536743]
[-712.92907715 -368.40158081]
[-705.33685303 -381.33807373]
[-697.53869629 -394.15151978]
[-689.53674316 -406.83868408]
[-681.33300781 -419.39627075]
[-672.92950439 -431.82113647]
[-664.32849121 -444.11001587]
[-655.53204346 -456.25985718]
[-646.54254150 -468.26751709]
[-637.36218262 -480.12991333]
[-627.99340820 -491.84402466]
[-618.43853760 -503.40686035]
[-608.70001221 -514.81549072]
[-598.78033447 -526.06695557]
[-588.68200684 -537.15838623]
[-578.40771484 -548.08697510]
[-567.96002197 -558.84985352]
[-557.34155273 -569.44439697]
[-546.55511475 -579.86779785]
[-535.60339355 -590.11743164]
[-524.48919678 -600.19067383]
[-513.21539307 -610.08496094]
[-501.78485107 -619.79772949]
[-490.20050049 -629.32647705]
[-478.46527100 -638.66888428]
[-466.58218384 -647.82238770]
[-454.55429077 -656.78485107]
[-442.38464355 -665.55383301]
[-430.07638550 -674.12713623]
[-417.63259888 -682.50256348]
[-405.05651855 -690.67797852]
[-392.35134888 -698.65130615]
[-379.52035522 -706.42047119]
[-366.56677246 -713.98352051]
[-353.49392700 -721.33856201]
[-340.30517578 -728.48364258]
[-327.00387573 -735.41693115]
[-313.59344482 -742.13671875]
[-300.07730103 -748.64123535]
[-286.45886230 -754.92883301]
[-272.74166870 -760.99792480]
[-258.92919922 -766.84692383]
[-245.02499390 -772.47436523]
[-231.03259277 -777.87878418]
[-216.95558167 -783.05883789]
[-202.79756165 -788.01318359]
[-188.56213379 -792.74053955]
[-174.25294495 -797.23968506]
[-159.87367249 -801.50952148]
[-145.42796326 -805.54895020]
[-130.91952515 -809.35687256]
[-116.35206604 -812.93237305]
[-101.72930145 -816.27453613]
[-87.05497742 -819.38250732]
[-72.33284760 -822.25543213]
[-57.56665802 -824.89270020]
[-42.76020050 -827.29351807]
[-27.91725159 -829.45733643]
[-13.04160690 -831.38354492]
[1.86293197 -833.07171631]
[16.79255486 -834.52142334]
[31.74344635 -835.73223877]
[46.71178436 -836.70385742]
[61.69374084 -837.43603516]
[76.68549347 -837.92864990]
[91.68319702 -838.18151855]
[106.68302917 -838.19458008]
[121.68115997 -837.96783447]
[122.14765930 -852.96057129]
[122.61415100 -867.95330811]
[110.83369446 -878.23706055]
[108.47067261 -893.69506836]
[116.64083862 -907.02856445]
[131.48648071 -911.94189453]
[145.99795532 -906.11511230]
[153.32337952 -892.29949951]
[150.00390625 -877.01824951]
[137.60690308 -867.48681641]
[137.14039612 -852.49407959]
[136.67390442 -837.50134277]
[151.65711975 -836.79522705]
[166.62712097 -835.84967041]
[181.58009338 -834.66485596]
[196.51222229 -833.24121094]
[211.41967773 -831.57897949]
[226.29864502 -829.67864990]
[241.14533997 -827.54071045]
[255.95596313 -825.16564941]
[270.72671509 -822.55413818]
[285.45382690 -819.70678711]
[300.13354492 -816.62438965]
[314.76211548 -813.30773926]
[329.33578491 -809.75756836]
[343.85083008 -805.97491455]
[358.30352783 -801.96063232]
[372.69021606 -797.71588135]
[387.00723267 -793.24163818]
[401.25085449 -788.53906250]
[415.41748047 -783.60937500]
[429.50350952 -778.45385742]
[443.50527954 -773.07379150]
[457.41928101 -767.47058105]
[471.24191284 -761.64562988]
[484.96966553 -755.60046387]
[498.59899902 -749.33654785]
[512.12646484 -742.85559082]
[525.54858398 -736.15917969]
[538.86193848 -729.24902344]
[552.06311035 -722.12695312]
[565.14874268 -714.79467773]
[578.11547852 -707.25421143]
[590.95996094 -699.50738525]
[603.67901611 -691.55621338]
[616.26928711 -683.40264893]
[628.72760010 -675.04895020]
[641.05084229 -666.49707031]
[653.23571777 -657.74926758]
[665.27917480 -648.80786133]
[677.17822266 -639.67498779]
[688.92968750 -630.35308838]
[700.53057861 -620.84448242]
[711.97802734 -611.15161133]
[723.26904297 -601.27697754]
[734.40075684 -591.22314453]
[745.37030029 -580.99255371]
[756.17492676 -570.58795166]
[766.81176758 -560.01196289]
[777.27819824 -549.26721191]
[787.57153320 -538.35656738]
[797.68914795 -527.28271484]
[807.62835693 -516.04858398]
[817.38671875 -504.65692139]
[826.96173096 -493.11074829]
[836.35095215 -481.41296387]
[845.55194092 -469.56655884]
[854.56231689 -457.57458496]
[863.37988281 -445.44009399]
[872.00231934 -433.16616821]
[880.42742920 -420.75598145]
[888.65301514 -408.21267700]
[896.67706299 -395.53948975]
[904.49749756 -382.73962402]
[912.11224365 -369.81637573]
[919.51947021 -356.77304077]
[926.71716309 -343.61294556]
[933.70361328 -330.33947754]
[940.47692871 -316.95599365]
[947.03540039 -303.46594238]
[953.37738037 -289.87277222]
[959.50122070 -276.17993164]
[965.40539551 -262.39096069]
[971.08837891 -248.50935364]
[976.54870605 -234.53866577]
[981.78497314 -220.48246765]
[986.79583740 -206.34434509]
[991.58007812 -192.12792969]
[996.13641357 -177.83685303]
[1000.46368408 -163.47474670]
[1004.56079102 -149.04530334]
[1008.42669678 -134.55220032]
[1012.06036377 -119.99914551]
[1015.46093750 -105.38985443]
[1018.62756348 -90.72807312]
[1021.55932617 -76.01753998]
[1024.25549316 -61.26200867]
[1026.71557617 -46.46526718]
[1028.93859863 -31.63108253]
[1030.92431641 -16.76325607]
[1032.67199707 -1.86558378]
[1034.18139648 13.05812550]
[1035.45190430 28.00405693]
[1036.48339844 42.96839142]
[1037.27551270 57.94730377]
[1037.82800293 72.93696594]
[1038.14074707 87.93354034]
[1038.21374512 102.93320465]
[1038.04699707 117.93211365]
[1037.64038086 132.92645264]
[1036.99426270 147.91235352]
[1036.10852051 162.88603210]
[1034.98352051 177.84361267]
[1033.61950684 192.78131104]
[1032.01684570 207.69529724]
[1030.17602539 222.58174133]
[1028.09741211 237.43687439]
[1025.78161621 252.25685120]
[1023.22918701 267.03793335]
[1020.44073486 281.77630615]
[1017.41699219 296.46823120]
[1014.15881348 311.10992432]
[1010.66693115 325.69766235]
[1006.94232178 340.22772217]
[1002.98590088 354.69635010]
[998.79864502 369.09991455]
[994.38165283 383.43466187]
[989.73608398 397.69699097]
[984.86303711 411.88320923]
[979.76385498 425.98971558]
[974.43981934 440.01290894]
[968.89227295 453.94918823]
[963.12255859 467.79498291]
[957.13232422 481.54678345]
[950.92297363 495.20104980]
[944.49609375 508.75430298]
[937.85339355 522.20306396]
[930.99652100 535.54394531]
[923.92724609 548.77349854]
[916.64739990 561.88830566]
[909.15875244 574.88507080]
[901.46331787 587.76043701]
[893.56304932 600.51116943]
[885.45996094 613.13391113]
[877.15606689 625.62554932]
[868.65350342 637.98284912]
[859.95452881 650.20257568]
[851.06127930 662.28173828]
[841.97601318 674.21710205]
[832.70117188 686.00573730]
[823.23901367 697.64459229]
[813.59197998 709.13067627]
[803.76257324 720.46112061]
[793.75329590 731.63287354]
[783.56665039 742.64324951]
[773.20532227 753.48937988]
[762.67193604 764.16839600]
[751.96911621 774.67773438]
[741.09967041 785.01458740]
[730.06634521 795.17633057]
[718.87200928 805.16040039]
[707.51947021 814.96423340]
[696.01165771 824.58532715]
[684.35150146 834.02117920]
[672.54193115 843.26940918]
[660.58605957 852.32769775]
[648.48693848 861.19366455]
[636.24755859 869.86511230]
[623.87115479 878.33972168]
[611.36083984 886.61541748]
[598.71978760 894.69006348]
[585.95129395 902.56158447]
[573.05859375 910.22790527]
[560.04498291 917.68719482]
[546.91375732 924.93750000]
[533.66833496 931.97686768]
[520.31201172 938.80364990]
[506.84829712 945.41601562]
[493.28057861 951.81225586]
[479.61233521 957.99078369]
[465.84707642 963.95001221]
[451.98828125 969.68847656]
[438.03952026 975.20458984]
[424.00436401 980.49694824]
[409.88638306 985.56433105]
[395.68920898 990.40533447]
[381.41644287 995.01873779]
[367.07177734 999.40338135]
[352.65881348 1003.55810547]
[338.18127441 1007.48193359]
[323.64285278 1011.17376709]
[309.04727173 1014.63269043]
[294.39828491 1017.85784912]
[279.69958496 1020.84838867]
[264.95495605 1023.60357666]
[250.16815186 1026.12268066]
[235.34297180 1028.40515137]
[220.48320007 1030.45019531]
[205.59263611 1032.25744629]
[190.67507935 1033.82641602]
[175.73434448 1035.15673828]
[160.77424622 1036.24792480]
[145.79861450 1037.09985352]
[130.81129456 1037.71228027]
[115.81607819 1038.08508301]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[198 210]
[199 209]
[200 208]
] def

init

% Start Annotations
199 209 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
198 210 5 gmark
198 cmark
210 cmark
199 209 1 gmark
200 208 3 gmark
200 cmark
208 cmark

% End Annotations
showpage
end
%%EOF
