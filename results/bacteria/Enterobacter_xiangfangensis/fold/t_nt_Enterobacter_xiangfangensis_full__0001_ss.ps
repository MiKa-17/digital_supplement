%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 20:13:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_______________________________AUGAGCGUCGUGGAUAUGGUCAUACUUGUCCUCAAACUCAUUGUUGCUGUAUUGCAAC__UGCUUGAUGCUG___UCCUGAAAUAC__\
) } def
/len { sequence length } bind def

/coor [
[164.85763550 396.14126587]
[155.69825745 394.44570923]
[146.70599365 392.01348877]
[137.94000244 388.86056519]
[129.45793152 385.00762939]
[121.31558228 380.47988892]
[113.56652832 375.30712891]
[106.26175690 369.52328491]
[99.44933319 363.16632080]
[93.17411041 356.27804565]
[87.47738647 348.90362549]
[82.39666748 341.09161377]
[77.96542358 332.89324951]
[74.21284485 324.36245728]
[71.16365814 315.55532837]
[68.83798218 306.52969360]
[67.25115967 297.34494019]
[66.41369629 288.06140137]
[66.33116150 278.74017334]
[67.00415039 269.44250488]
[68.42831421 260.22952271]
[70.59433746 251.16186523]
[73.48805237 242.29914856]
[77.09047699 233.69966125]
[81.37799835 225.41998291]
[86.32246399 217.51457214]
[91.89142609 210.03546143]
[98.04830933 203.03186035]
[104.75268555 196.54985046]
[111.96051025 190.63212585]
[119.62442017 185.31761169]
[127.69406891 180.64134216]
[121.59301758 166.93815613]
[115.49196625 153.23498535]
[109.39092255 139.53179932]
[103.28987122 125.82862091]
[90.10120392 124.08224487]
[79.49682617 116.04869080]
[74.24523163 103.82528687]
[75.71747589 90.60321045]
[83.52918243 79.83436584]
[71.09974670 70.04560852]
[73.37756348 55.32620239]
[67.63731384 41.46800995]
[61.89706421 27.60981750]
[56.15681076 13.75162411]
[50.41656113 -0.10656929]
[37.98712921 -9.89532948]
[40.26494598 -24.61473274]
[25.56961060 -30.43045616]
[19.36753654 -44.96695709]
[25.33830261 -59.59998322]
[39.93956375 -65.64802551]
[54.50864410 -59.52288055]
[60.40197372 -44.85849380]
[54.12313843 -30.35498428]
[66.14199066 -21.55745506]
[64.27474976 -5.84682083]
[70.01500702 8.01137257]
[75.75525665 21.86956596]
[81.49550629 35.72775650]
[87.23575592 49.58595276]
[99.25460815 58.38348007]
[97.38737488 74.09411621]
[113.21319580 77.56448364]
[123.92283630 89.72193909]
[125.36950684 105.85907745]
[116.99304962 119.72756958]
[123.09410095 133.43075562]
[129.19514465 147.13392639]
[135.29620361 160.83711243]
[141.39724731 174.54029846]
[167.69441223 168.25311279]
[194.72550964 168.27944946]
[220.99638367 174.61451721]
[245.05570984 186.90486145]
[265.57510376 204.46813965]
[281.42257690 226.33097839]
[291.72482300 251.28295898]
[295.91552734 277.94354248]
[310.91040039 278.33621216]
[325.90524292 278.72885132]
[340.90011597 279.12149048]
[358.02923584 268.64990234]
[374.16940308 279.16522217]
[389.16424561 278.77258301]
[404.15911865 278.37991333]
[417.85134888 269.35470581]
[432.39035034 276.94085693]
[432.81964111 293.33438110]
[418.69760132 301.67102051]
[404.55175781 293.37478638]
[389.55691528 293.76742554]
[374.56204224 294.16009521]
[368.11346436 302.27966309]
[358.02923584 305.51318359]
[347.63619995 302.53601074]
[340.50744629 294.11636353]
[325.51260376 293.72372437]
[310.51773071 293.33105469]
[295.52288818 292.93841553]
[294.30148315 302.16513062]
[292.33642578 311.26290894]
[289.64059448 320.17196655]
[286.23165894 328.83364868]
[282.13195801 337.19104004]
[277.36840820 345.18908691]
[271.97225952 352.77520752]
[265.97894287 359.89947510]
[259.42785645 366.51501465]
[252.36199951 372.57824707]
[244.82778931 378.04931641]
[236.87475586 382.89212036]
[228.55513000 387.07482910]
[219.92359924 390.56985474]
[211.03691101 393.35412598]
[201.95346069 395.40933228]
[192.73298645 396.72186279]
[183.43608093 397.28305054]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 72]
[33 71]
[34 70]
[35 69]
[36 68]
[41 64]
[43 62]
[44 61]
[45 60]
[46 59]
[47 58]
[49 56]
[80 101]
[81 100]
[82 99]
[83 98]
[85 94]
[86 93]
[87 92]
] def

init

% Start Annotations
32 72 0.16 1 colorpair
33 71 0.16 1 colorpair
34 70 0.16 1 colorpair
35 69 0.0 1 colorpair
36 68 0.16 1 colorpair
41 64 0.16 1 colorpair
43 62 0.0 0.6 colorpair
44 61 0.0 1 colorpair
45 60 0.16 1 colorpair
46 59 0.16 1 colorpair
47 58 0.0 0.6 colorpair
49 56 0.0 0.6 colorpair
80 101 0.0 1 colorpair
81 100 0.16 1 colorpair
82 99 0.16 1 colorpair
83 98 0.0 0.6 colorpair
85 94 0.0 0.6 colorpair
86 93 0.0 1 colorpair
87 92 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
32 cmark
33 cmark
71 cmark
70 cmark
68 cmark
41 cmark
64 cmark
43 62 1 gmark
45 cmark
60 cmark
46 cmark
59 cmark
47 58 1 gmark
49 56 1 gmark
100 cmark
82 cmark
99 cmark
83 98 1 gmark
85 94 1 gmark

% End Annotations
showpage
end
%%EOF
