%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 20:13:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_______________________________AGGAGCAGCCUCGAGAAAAUCAAAAUUGCCCGCAAACUCAUACUUGCUGUACCGCAAC__UGCUCAAGACAG___GCCUGAAACACC_\
) } def
/len { sequence length } bind def

/coor [
[100.64599609 185.24870300]
[93.38649750 184.99423218]
[86.17501831 184.12269592]
[79.06391144 182.64041138]
[72.10480499 180.55815125]
[65.34821320 177.89102173]
[58.84320831 174.65840149]
[52.63700104 170.88372803]
[46.77466202 166.59445190]
[41.29874420 161.82167053]
[36.24900436 156.60006714]
[31.66210938 150.96754456]
[27.57135582 144.96498108]
[24.00644684 138.63595581]
[20.99326324 132.02644348]
[18.55367851 125.18440247]
[16.70540810 118.15952301]
[15.46186829 111.00280762]
[14.83208847 103.76620483]
[14.82064056 96.50225830]
[15.42760754 89.26371002]
[16.64858437 82.10310364]
[18.47470284 75.07243347]
[20.89270973 68.22274780]
[23.88504601 61.60375977]
[27.42998886 55.26353836]
[31.50180054 49.24811172]
[36.07091904 43.60115051]
[41.10417557 38.36365128]
[46.56502151 33.57364655]
[52.41381454 29.26590347]
[58.60808945 25.47170067]
[52.50704193 11.76851940]
[46.40599060 -1.93466282]
[40.30494308 -15.63784504]
[34.20389175 -29.34102631]
[22.39781380 -34.73202133]
[17.63077736 -46.36972046]
[21.97598076 -57.74155807]
[16.23572922 -71.59975433]
[10.49547768 -85.45794678]
[4.75522661 -99.31613922]
[-0.98502493 -113.17433167]
[-6.72527647 -127.03252411]
[-12.46552753 -140.89071655]
[-18.20578003 -154.74891663]
[-23.94603157 -168.60710144]
[-29.68628311 -182.46530151]
[-35.42653275 -196.32348633]
[-50.12186813 -202.13920593]
[-56.32394409 -216.67572021]
[-50.35317612 -231.30874634]
[-35.75191879 -237.35678101]
[-21.18283463 -231.23164368]
[-15.28950691 -216.56724548]
[-21.56834030 -202.06373596]
[-15.82808971 -188.20555115]
[-10.08783817 -174.34735107]
[-4.34758663 -160.48916626]
[1.39266503 -146.63096619]
[7.13291645 -132.77278137]
[12.87316799 -118.91458130]
[18.61341858 -105.05638885]
[24.35367012 -91.19819641]
[30.09392166 -77.34000397]
[35.83417511 -63.48181152]
[50.30125427 -53.64211655]
[47.90707397 -35.44207764]
[54.00812531 -21.73889351]
[60.10917282 -8.03571224]
[66.21022034 5.66746950]
[72.31127167 19.37065125]
[103.16597748 14.80766392]
[133.59689331 21.64818954]
[159.53065491 38.97657776]
[177.49589539 64.47332764]
[185.08782959 94.72553253]
[200.08268738 95.11818695]
[215.07754517 95.51084137]
[230.07240295 95.90349579]
[245.06726074 96.29615021]
[260.06213379 96.68880463]
[275.05697632 97.08145905]
[292.18612671 86.60984039]
[308.32626343 97.12518311]
[323.32113647 96.73252869]
[338.31597900 96.33987427]
[352.00820923 87.31465912]
[366.54721069 94.90080261]
[366.97650146 111.29432678]
[352.85446167 119.63098907]
[338.70864868 111.33473969]
[323.71377563 111.72739410]
[308.71890259 112.12004852]
[302.27032471 120.23963165]
[292.18612671 123.47312927]
[281.79306030 120.49597931]
[274.66433716 112.07631683]
[259.66946411 111.68366241]
[244.67460632 111.29100800]
[229.67974854 110.89835358]
[214.68489075 110.50569916]
[199.69003296 110.11304474]
[184.69517517 109.72039032]
[183.56022644 116.89513397]
[181.81863403 123.94721985]
[179.48301697 130.82543945]
[176.57034302 137.47985840]
[173.10176086 143.86218262]
[169.10244751 149.92604065]
[164.60142517 155.62744141]
[159.63140869 160.92497253]
[154.22843933 165.78018188]
[148.43177795 170.15782166]
[142.28349304 174.02610779]
[135.82821655 177.35693359]
[129.11282349 180.12615967]
[122.18607330 182.31364441]
[115.09824371 183.90351868]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 72]
[33 71]
[34 70]
[35 69]
[36 68]
[39 66]
[40 65]
[41 64]
[42 63]
[43 62]
[44 61]
[45 60]
[46 59]
[47 58]
[48 57]
[49 56]
[77 104]
[78 103]
[79 102]
[80 101]
[81 100]
[82 99]
[83 98]
[85 94]
[86 93]
[87 92]
] def

init

% Start Annotations
32 72 0.16 1 colorpair
33 71 0.16 1 colorpair
34 70 0.16 1 colorpair
35 69 0.0 1 colorpair
36 68 0.16 1 colorpair
39 66 0.0 0.6 colorpair
40 65 0.0 0.6 colorpair
41 64 0.16 1 colorpair
42 63 0.0 0.6 colorpair
43 62 0.0 0.6 colorpair
44 61 0.0 1 colorpair
45 60 0.16 1 colorpair
46 59 0.16 1 colorpair
47 58 0.0 0.6 colorpair
48 57 0.0 0.6 colorpair
49 56 0.0 0.6 colorpair
77 104 0.0 0.6 colorpair
78 103 0.0 1 colorpair
79 102 0.0 0.6 colorpair
80 101 0.0 1 colorpair
81 100 0.16 1 colorpair
82 99 0.16 1 colorpair
83 98 0.0 0.6 colorpair
85 94 0.0 0.6 colorpair
86 93 0.0 1 colorpair
87 92 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
32 cmark
33 cmark
71 cmark
70 cmark
68 cmark
39 66 1 gmark
40 65 1 gmark
41 cmark
64 cmark
42 63 1 gmark
43 62 1 gmark
45 cmark
60 cmark
46 cmark
59 cmark
47 58 1 gmark
48 57 1 gmark
49 56 1 gmark
77 104 1 gmark
79 102 1 gmark
100 cmark
82 cmark
99 cmark
83 98 1 gmark
85 94 1 gmark

% End Annotations
showpage
end
%%EOF
