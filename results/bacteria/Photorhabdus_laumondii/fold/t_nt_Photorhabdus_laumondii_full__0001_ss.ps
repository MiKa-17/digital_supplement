%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 07:10:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__________GGUAAGAGGCUAGCCUUACGUUGCU_AAACAUAGGAGUAGCCUCAUUUCGAUUUA__UAGUCGGAUGGGGCUUUUCUCU_____UUCUGCAUGAAACAUAAU___U_C__AG________GCUCAAGACAGAAAGUCUCAAGCACC_____\
) } def
/len { sequence length } bind def

/coor [
[39.57119751 209.28829956]
[27.69859314 218.85783386]
[14.64073277 226.73057556]
[0.63842058 232.76181030]
[-14.05018806 236.84078979]
[-29.15434456 238.89279175]
[-44.39570618 238.88041687]
[-59.49344635 236.80430603]
[-74.16945648 232.70310974]
[-88.15344238 226.65281677]
[-101.18791962 218.76527405]
[-113.03294373 209.18618774]
[-123.47053528 198.09234619]
[-132.30870056 185.68844604]
[-139.38491821 172.20329285]
[-144.56919861 157.88551331]
[-159.22921753 161.06106567]
[-173.88922119 164.23663330]
[-188.54922485 167.41218567]
[-203.20922852 170.58775330]
[-217.86924744 173.76330566]
[-232.52925110 176.93885803]
[-244.37861633 187.42233276]
[-258.45541382 182.55482483]
[-273.11541748 185.73037720]
[-287.77542114 188.90594482]
[-302.43545532 192.08149719]
[-317.09545898 195.25706482]
[-328.94482422 205.74053955]
[-343.02160645 200.87301636]
[-357.68164062 204.04858398]
[-372.34164429 207.22413635]
[-382.20101929 219.88003540]
[-398.24404907 219.91839600]
[-408.16384888 207.30976868]
[-404.35079956 191.72644043]
[-389.72998047 185.12258911]
[-375.51718140 192.56413269]
[-360.85717773 189.38856506]
[-346.19717407 186.21301270]
[-335.39639282 175.95668030]
[-320.27099609 180.59704590]
[-305.61099243 177.42149353]
[-290.95098877 174.24594116]
[-276.29098511 171.07037354]
[-261.63098145 167.89482117]
[-250.83020020 157.63847351]
[-235.70480347 162.27885437]
[-221.04479980 159.10330200]
[-206.38479614 155.92773438]
[-191.72477722 152.75218201]
[-177.06477356 149.57662964]
[-162.40476990 146.40106201]
[-147.74476624 143.22550964]
[-148.94354248 128.51919556]
[-148.20178223 113.78133392]
[-145.53193665 99.26689911]
[-140.97982788 85.22703552]
[-134.62384033 71.90476227]
[-126.57360077 59.53069305]
[-116.96805573 48.31910324]
[-105.97308350 38.46419907]
[-93.77865601 30.13673973]
[-80.59550476 23.48109818]
[-66.65151978 18.61274719]
[-52.18781662 15.61626339]
[-37.45452499 14.54385281]
[-22.70649529 15.41444206]
[-8.19888496 18.21334457]
[5.81726122 22.89251328]
[19.09934998 29.37135315]
[31.41744614 37.53812408]
[42.55824280 47.25185776]
[52.32876205 58.34479141]
[60.55969620 70.62527466]
[67.10834503 83.88107300]
[71.86107635 97.88303375]
[86.57991028 94.99234772]
[97.23960114 85.94454956]
[110.52940369 90.28881836]
[125.24823761 87.39813995]
[139.96707153 84.50745392]
[154.68589783 81.61676788]
[159.73455811 67.17868042]
[171.25610352 57.27159119]
[186.09101868 54.48023224]
[200.23666382 59.45585632]
[209.92724609 70.76772308]
[224.64607239 67.87703705]
[214.03855896 57.27134323]
[215.51902771 42.34458160]
[228.00317383 34.02917099]
[242.34756470 38.41534424]
[248.04631042 52.29065704]
[240.92620850 65.49234772]
[255.85575867 64.04018402]
[270.78530884 62.58802414]
[285.71484375 61.13586044]
[300.64437866 59.68369675]
[315.55914307 58.08684158]
[330.45773315 56.34545135]
[345.35629272 54.60405731]
[360.25488281 52.86266327]
[375.15344238 51.12126923]
[376.54742432 36.12958908]
[381.02825928 21.75545311]
[388.40008545 8.62724018]
[398.34060669 -2.68114066]
[410.41531372 -11.67533684]
[424.09631348 -17.96216011]
[438.78552246 -21.26677895]
[453.84082031 -21.44472694]
[468.60403442 -18.48822784]
[482.42980957 -12.52652454]
[494.71371460 -3.82023883]
[504.91876221 7.25002813]
[512.59881592 20.20033264]
[517.41815186 34.46454239]
[519.16607666 49.41908646]
[517.76623535 64.41021729]
[513.27972412 78.78258514]
[505.90274048 91.90789795]
[495.95773315 103.21237183]
[483.87951660 112.20181274]
[470.19604492 118.48325348]
[455.50552368 121.78209686]
[440.45016479 121.95411682]
[425.68811035 118.99181366]
[411.86468506 113.02467346]
[399.58422852 104.31355286]
[389.38351440 93.23927307]
[381.70855713 80.28594971]
[376.89483643 66.01984406]
[361.99627686 67.76123810]
[347.09768677 69.50263214]
[332.19912720 71.24402618]
[317.30053711 72.98542023]
[310.99093628 76.90471649]
[302.09655762 74.61323547]
[287.16699219 76.06539917]
[272.23745728 77.51756287]
[257.30792236 78.96972656]
[242.37837219 80.42189026]
[227.53675842 82.59587097]
[212.81791687 85.48654938]
[208.12527466 99.62319183]
[196.91209412 109.57912445]
[182.12336731 112.60565948]
[167.71072388 107.79187775]
[157.57658386 96.33560181]
[142.85774231 99.22628021]
[128.13891602 102.11696625]
[113.42008972 105.00765228]
[102.76039886 114.05545044]
[89.47059631 109.71118164]
[74.75176239 112.60186005]
[75.64397430 127.83566284]
[74.46504211 143.04841614]
[71.23710632 157.95985413]
[66.02006531 172.29531860]
[58.91041565 185.79083252]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 54]
[17 53]
[18 52]
[19 51]
[20 50]
[21 49]
[22 48]
[24 46]
[25 45]
[26 44]
[27 43]
[28 42]
[30 40]
[31 39]
[32 38]
[77 156]
[78 155]
[80 153]
[81 152]
[82 151]
[83 150]
[88 145]
[89 144]
[95 143]
[96 142]
[97 141]
[98 140]
[99 139]
[100 137]
[101 136]
[102 135]
[103 134]
[104 133]
] def

init

% Start Annotations
16 54 0.16 1 colorpair
17 53 0.0 0.2 colorpair
18 52 0.0 0.2 colorpair
19 51 0.0 1 colorpair
20 50 0.0 0.2 colorpair
21 49 0.0 0.2 colorpair
22 48 0.0 1 colorpair
24 46 0.16 0.2 colorpair
25 45 0.16 1 colorpair
26 44 0.0 0.2 colorpair
27 43 0.0 0.2 colorpair
28 42 0.0 1 colorpair
30 40 0.0 0.2 colorpair
31 39 0.16 0.2 colorpair
32 38 0.16 0.2 colorpair
77 156 0.0 0.2 colorpair
78 155 0.0 1 colorpair
80 153 0.0 0.2 colorpair
81 152 0.16 1 colorpair
82 151 0.16 1 colorpair
83 150 0.0 1 colorpair
88 145 0.0 0.2 colorpair
89 144 0.16 1 colorpair
95 143 0.0 0.2 colorpair
96 142 0.0 1 colorpair
97 141 0.0 0.2 colorpair
98 140 0.0 0.2 colorpair
99 139 0.0 0.2 colorpair
100 137 0.16 1 colorpair
101 136 0.16 0.2 colorpair
102 135 0.0 1 colorpair
103 134 0.16 0.2 colorpair
104 133 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
16 cmark
54 cmark
17 53 2 gmark
18 52 2 gmark
20 50 2 gmark
21 49 2 gmark
24 46 2 gmark
24 cmark
46 cmark
25 cmark
26 44 2 gmark
27 43 2 gmark
30 40 2 gmark
31 39 2 gmark
39 cmark
32 38 2 gmark
38 cmark
77 156 2 gmark
80 153 2 gmark
81 cmark
152 cmark
151 cmark
88 145 2 gmark
144 cmark
95 143 2 gmark
97 141 2 gmark
98 140 2 gmark
99 139 2 gmark
100 cmark
101 136 2 gmark
101 cmark
136 cmark
103 134 2 gmark
134 cmark

% End Annotations
showpage
end
%%EOF
