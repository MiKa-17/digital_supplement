%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 07:10:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______AAC_U_CCA__ACCGCUAACCACAACC_ACUA____AGG___U_A__UAUGGCU_A_CGCGAUUGUAAUG_A_AUU_AG__A_UUC_AAAGC_C______GCUAUAA_____GAUAUGCCAGCAGACGCCACCCAGACCGCAGCACAGG__CACGACCC_CUAUUACAACCAGCAUCCCAGUUUCCAUCUUAAAGGCAACUGGCUGGAAGAAGCGGGCUUUG__ACCGGGAAGCCAGUACAGGUCAGUG\
UUGAACACGGGCAGUUGAUUAUCCGGCUCGCUGAAAACAACUGACGG_UAAAA_____AAG_UCCC_GC_C_______GGGA_________\
) } def
/len { sequence length } bind def

/coor [
[242.20251465 680.72070312]
[230.15977478 683.53796387]
[218.06132507 686.10546875]
[205.91236877 688.42218018]
[193.71807861 690.48712158]
[181.48368835 692.29937744]
[169.21443176 693.85815430]
[156.91555786 695.16278076]
[144.59231567 696.21276855]
[132.25000000 697.00756836]
[119.89389038 697.54693604]
[107.52926636 697.83062744]
[95.16141510 697.85845947]
[82.79563141 697.63043213]
[70.43721771 697.14666748]
[58.09144974 696.40740967]
[45.76361465 695.41290283]
[33.45899200 694.16363525]
[21.18284035 692.66009521]
[8.94041824 690.90295410]
[-3.26303768 688.89294434]
[-15.42230511 686.63092041]
[-27.53218079 684.11785889]
[-39.58748245 681.35485840]
[-51.58304977 678.34307861]
[-63.51375198 675.08380127]
[-75.37448883 671.57843018]
[-87.16017151 667.82849121]
[-98.86576843 663.83557129]
[-110.48625946 659.60131836]
[-122.01668549 655.12768555]
[-133.45210266 650.41644287]
[-144.78761292 645.46966553]
[-156.01838684 640.28948975]
[-167.13960266 634.87805176]
[-178.14649963 629.23779297]
[-189.03436279 623.37103271]
[-199.79855347 617.28033447]
[-210.43444824 610.96826172]
[-220.93750000 604.43756104]
[-231.30322266 597.69097900]
[-241.52717590 590.73138428]
[-251.60496521 583.56182861]
[-261.53231812 576.18536377]
[-271.30493164 568.60510254]
[-280.91867065 560.82434082]
[-290.36941528 552.84637451]
[-299.65310669 544.67462158]
[-308.76577759 536.31256104]
[-317.70352173 527.76385498]
[-326.46252441 519.03204346]
[-335.03903198 510.12091064]
[-343.42938232 501.03430176]
[-351.62997437 491.77606201]
[-359.63729858 482.35018921]
[-367.44793701 472.76071167]
[-375.05856323 463.01168823]
[-382.46588135 453.10736084]
[-389.66674805 443.05191040]
[-396.65808105 432.84963989]
[-403.43685913 422.50497437]
[-410.00021362 412.02227783]
[-416.34533691 401.40606689]
[-422.46951294 390.66088867]
[-428.37008667 379.79129028]
[-434.04458618 368.80200195]
[-439.49053955 357.69769287]
[-444.70562744 346.48306274]
[-449.68762207 335.16299438]
[-454.43441772 323.74227905]
[-458.94393921 312.22583008]
[-463.21426392 300.61856079]
[-467.24359131 288.92544556]
[-471.03018188 277.15148926]
[-474.57241821 265.30172729]
[-477.86877441 253.38121033]
[-480.91784668 241.39506531]
[-483.71835327 229.34841919]
[-486.26904297 217.24641418]
[-488.56887817 205.09423828]
[-490.61685181 192.89709473]
[-492.41207886 180.66020203]
[-493.95379639 168.38879395]
[-495.24133301 156.08810425]
[-496.27416992 143.76342773]
[-497.05184937 131.42001343]
[-497.57403564 119.06316376]
[-497.84048462 106.69815826]
[-497.85113525 94.33027649]
[-497.60592651 81.96482849]
[-497.10501099 69.60709381]
[-496.34857178 57.26236725]
[-495.33694458 44.93592834]
[-494.07055664 32.63305283]
[-492.54995728 20.35900497]
[-490.77578735 8.11903763]
[-488.74880981 -4.08161259]
[-486.46987915 -16.23772240]
[-483.94000244 -28.34409332]
[-481.16024780 -40.39554214]
[-478.13177490 -52.38691330]
[-474.85592651 -64.31307220]
[-471.33407593 -76.16892242]
[-467.56774902 -87.94937897]
[-463.55856323 -99.64941406]
[-459.30819702 -111.26400757]
[-454.81848145 -122.78820038]
[-450.09133911 -134.21705627]
[-445.12881470 -145.54568481]
[-439.93304443 -156.76924133]
[-434.50619507 -167.88291931]
[-428.85061646 -178.88197327]
[-422.96871948 -189.76167297]
[-416.86306763 -200.51737976]
[-410.53622437 -211.14450073]
[-403.99090576 -221.63845825]
[-397.22991943 -231.99479675]
[-390.25613403 -242.20904541]
[-383.07260132 -252.27687073]
[-375.68231201 -262.19393921]
[-368.08850098 -271.95602417]
[-360.29437256 -281.55895996]
[-352.30325317 -290.99859619]
[-344.11859131 -300.27090454]
[-335.74389648 -309.37194824]
[-327.18273926 -318.29779053]
[-318.43875122 -327.04464722]
[-309.51571655 -335.60876465]
[-300.41744995 -343.98648071]
[-291.14782715 -352.17419434]
[-281.71084595 -360.16839600]
[-272.11050415 -367.96569824]
[-262.35092163 -375.56274414]
[-252.43629456 -382.95629883]
[-242.37083435 -390.14318848]
[-232.15887451 -397.12030029]
[-221.80477905 -403.88470459]
[-211.31297302 -410.43350220]
[-200.68795776 -416.76385498]
[-189.93426514 -422.87307739]
[-179.05650330 -428.75854492]
[-168.05932617 -434.41775513]
[-156.94743347 -439.84826660]
[-145.72558594 -445.04776001]
[-134.39860535 -450.01400757]
[-122.97130585 -454.74490356]
[-111.44859314 -459.23843384]
[-99.83539581 -463.49261475]
[-88.13668823 -467.50570679]
[-76.35747528 -471.27590942]
[-64.50279236 -474.80166626]
[-52.57770920 -478.08145142]
[-40.58734131 -481.11386108]
[-28.53680992 -483.89761353]
[-16.43127632 -486.43148804]
[-4.27591801 -488.71441650]
[7.92406225 -490.74542236]
[20.16344452 -492.52362061]
[32.43698883 -494.04827881]
[44.73944473 -495.31872559]
[57.06555176 -496.33444214]
[69.41002655 -497.09494019]
[81.76759338 -497.59994507]
[94.13296509 -497.84924316]
[106.50084686 -497.84268188]
[118.86594391 -497.58029175]
[131.22296143 -497.06219482]
[143.56663513 -496.28857422]
[155.89164734 -495.25982666]
[168.19274902 -493.97631836]
[180.46467590 -492.43865967]
[192.70216370 -490.64746094]
[204.89997864 -488.60354614]
[217.05291748 -486.30770874]
[229.15576172 -483.76101685]
[241.20332336 -480.96450806]
[253.19047546 -477.91937256]
[265.11206055 -474.62695312]
[276.96301270 -471.08862305]
[288.73822021 -467.30590820]
[300.43267822 -463.28045654]
[312.04135132 -459.01394653]
[323.55929565 -454.50820923]
[334.98156738 -449.76519775]
[341.04953003 -463.48309326]
[347.11746216 -477.20095825]
[353.18542480 -490.91882324]
[353.78402710 -499.96832275]
[359.37088013 -504.73303223]
[365.56277466 -518.39538574]
[371.75466919 -532.05780029]
[377.94656372 -545.72015381]
[369.48239136 -558.61828613]
[369.35800171 -574.04510498]
[377.61303711 -587.07806396]
[391.61337280 -593.55834961]
[406.89154053 -591.41815186]
[418.57235718 -581.34033203]
[422.92849731 -566.54077148]
[418.56994629 -551.74188232]
[406.88748169 -541.66601562]
[391.60894775 -539.52825928]
[385.41705322 -525.86590576]
[379.22515869 -512.20349121]
[373.03326416 -498.54113770]
[366.90328979 -484.85089111]
[360.83532715 -471.13299561]
[354.76739502 -457.41513062]
[348.69943237 -443.69726562]
[373.51483154 -431.64627075]
[397.74792480 -418.46340942]
[421.34707642 -404.17672729]
[444.26211548 -388.81665039]
[466.44418335 -372.41589355]
[487.84609985 -355.00936890]
[508.42230225 -336.63409424]
[528.12896729 -317.32925415]
[546.92413330 -297.13589478]
[564.76782227 -276.09704590]
[581.62200928 -254.25747681]
[597.45080566 -231.66369629]
[612.22052002 -208.36380005]
[625.89978027 -184.40740967]
[638.45935059 -159.84550476]
[649.87249756 -134.73037720]
[660.11499023 -109.11551666]
[669.16503906 -83.05545044]
[677.00329590 -56.60565186]
[683.61309814 -29.82244301]
[688.98040771 -2.76284027]
[693.09375000 24.51554489]
[695.94445801 51.95463562]
[710.90985107 50.93688965]
[725.87530518 49.91914368]
[740.84075928 48.90140152]
[755.80615234 47.88365555]
[769.04956055 39.22784805]
[782.27246094 46.08377457]
[797.23791504 45.06602859]
[810.48132324 36.41022110]
[823.70422363 43.26615143]
[838.66967773 42.24840546]
[853.63507080 41.23065948]
[868.60052490 40.21291351]
[871.19854736 25.36320496]
[877.27545166 11.56702518]
[886.47796631 -0.37353379]
[898.27105713 -9.76426315]
[911.96917725 -16.05919838]
[926.77581787 -18.89236069]
[941.83013916 -18.09903336]
[956.25701904 -13.72533798]
[969.21759033 -6.02555752]
[979.95843506 4.55265379]
[987.85498047 17.39429283]
[992.44818115 31.75276184]
[993.47106934 46.79328156]
[990.86407471 61.64141464]
[984.77880859 75.43390656]
[975.56903076 87.36888123]
[963.77020264 96.75246429]
[950.06829834 103.03909302]
[935.25994873 105.86327362]
[920.20611572 105.06082153]
[905.78186035 100.67838287]
[892.82598877 92.97074890]
[882.09155273 82.38602448]
[874.20281982 69.53960419]
[869.61828613 55.17834854]
[854.65283203 56.19609451]
[839.68737793 57.21384048]
[824.72198486 58.23158264]
[812.54901123 66.81459808]
[798.25567627 60.03146362]
[783.29022217 61.04920959]
[771.11724854 69.63221741]
[756.82391357 62.84908676]
[741.85845947 63.86683273]
[726.89306641 64.88457489]
[711.92761230 65.90232086]
[696.96215820 66.92006683]
[697.51873779 79.27542114]
[697.81958008 91.63964844]
[697.86456299 104.00744629]
[697.65374756 116.37352753]
[697.18719482 128.73260498]
[696.46508789 141.07939148]
[695.48773193 153.40859985]
[694.25555420 165.71495056]
[692.76910400 177.99317932]
[691.02893066 190.23802185]
[689.03588867 202.44425964]
[686.79077148 214.60665894]
[684.29455566 226.72001648]
[681.54833984 238.77914429]
[678.55322266 250.77890015]
[675.31054688 262.71411133]
[671.82171631 274.57971191]
[668.08813477 286.37060547]
[664.11145020 298.08172607]
[659.89343262 309.70809937]
[655.43579102 321.24472046]
[650.74041748 332.68670654]
[645.80944824 344.02908325]
[640.64483643 355.26702881]
[635.24896240 366.39575195]
[629.62396240 377.41049194]
[623.77233887 388.30648804]
[617.69659424 399.07913208]
[611.39935303 409.72381592]
[604.88323975 420.23593140]
[598.15106201 430.61102295]
[591.20574951 440.84463501]
[584.05017090 450.93237305]
[576.68750000 460.86996460]
[569.12084961 470.65313721]
[561.35345459 480.27767944]
[553.38861084 489.73950195]
[545.22979736 499.03454590]
[536.88043213 508.15881348]
[528.34411621 517.10845947]
[519.62451172 525.87957764]
[510.72531128 534.46844482]
[501.65036011 542.87145996]
[492.40353394 551.08489990]
[482.98880005 559.10534668]
[473.41018677 566.92926025]
[463.67175293 574.55346680]
[453.77774048 581.97454834]
[443.73229980 589.18939209]
[433.53976440 596.19488525]
[423.20452881 602.98803711]
[412.73098755 609.56597900]
[402.12359619 615.92584229]
[391.38693237 622.06494141]
[380.52557373 627.98059082]
[369.54415894 633.67034912]
[358.44741821 639.13177490]
[347.24008179 644.36242676]
[335.92694092 649.36016846]
[324.51284790 654.12280273]
[313.00268555 658.64837646]
[301.40133667 662.93481445]
[289.71383667 666.98040771]
[277.94515991 670.78338623]
[266.10031128 674.34204102]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[184 209]
[185 208]
[186 207]
[187 206]
[189 205]
[190 204]
[191 203]
[192 202]
[232 281]
[233 280]
[234 279]
[235 278]
[236 277]
[238 275]
[239 274]
[241 272]
[242 271]
[243 270]
[244 269]
] def

init

% Start Annotations
184 209 0.16 0.2 colorpair
185 208 0.32 0.6 colorpair
186 207 0.32 0.6 colorpair
187 206 0.32 0.6 colorpair
189 205 0.32 0.6 colorpair
190 204 0.32 0.2 colorpair
192 202 0.16 0.6 colorpair
232 281 0.0 0.6 colorpair
233 280 0.16 0.6 colorpair
234 279 0.16 1 colorpair
235 278 0.32 0.6 colorpair
236 277 0.32 0.6 colorpair
238 275 0.16 0.2 colorpair
239 274 0.16 0.6 colorpair
241 272 0.16 0.6 colorpair
242 271 0.32 0.2 colorpair
243 270 0.32 0.6 colorpair
244 269 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
184 209 2 gmark
184 cmark
185 208 1 gmark
185 cmark
208 cmark
186 207 1 gmark
186 cmark
207 cmark
187 206 1 gmark
187 cmark
206 cmark
189 205 1 gmark
189 cmark
205 cmark
190 204 2 gmark
190 cmark
204 cmark
191 203 3 gmark
191 cmark
203 cmark
192 202 1 gmark
192 cmark
202 cmark
232 281 1 gmark
233 280 1 gmark
233 cmark
279 cmark
235 278 1 gmark
235 cmark
278 cmark
236 277 1 gmark
236 cmark
277 cmark
238 275 2 gmark
238 cmark
239 274 1 gmark
239 cmark
241 272 1 gmark
241 cmark
242 271 2 gmark
242 cmark
271 cmark
243 270 1 gmark
243 cmark
270 cmark
244 cmark

% End Annotations
showpage
end
%%EOF
