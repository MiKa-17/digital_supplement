%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 07:10:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______________________________________________________UAUGGCUAAACGCGAUUGUAAUGCAGAUUCAGCAAAUUCCAAAGCUCAGCGCCGCUAUAAGGUGGGCUAUAUCAGCCGCCGUCACGCAGACCGCAACAC_GGUAUGACCCGCUAUUACAGCCAGCAUCCCAGGUUGCAUCUUAAAGGUAACUGGCUGGAAGAAGCGGGCUUUGAAACCGGGCAGCCAGU_CAGGUCAGUGU\
UGAGCACGG_CAGUUGAUUAUCCGGCUCGUUGAG_ACA__UGACGG_U________________________________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50209808 92.22523499]
[62.51174164 91.67579651]
[47.53396606 90.85186768]
[32.57379532 89.75372314]
[17.63624954 88.38173676]
[2.72634149 86.73635864]
[-12.15092659 84.81815338]
[-26.99056244 82.62775421]
[-41.78758621 80.16590881]
[-56.53703308 77.43342590]
[-71.23395538 74.43123627]
[-85.87341309 71.16033936]
[-100.45050812 67.62183380]
[-114.96033478 63.81691360]
[-129.39804077 59.74684906]
[-143.75875854 55.41300583]
[-158.03768921 50.81684113]
[-172.23004150 45.95989990]
[-186.33103943 40.84380341]
[-200.33596802 35.47027588]
[-214.24011230 29.84111404]
[-228.03880310 23.95821190]
[-241.72743225 17.82354355]
[-255.30139160 11.43916416]
[-268.75613403 4.80721760]
[-282.08712769 -2.07007027]
[-295.28991699 -9.19039249]
[-308.36004639 -16.55135918]
[-321.29318237 -24.15050125]
[-334.08493042 -31.98526764]
[-346.73104858 -40.05303192]
[-359.22723389 -48.35108185]
[-371.56933594 -56.87663651]
[-383.75320435 -65.62683868]
[-395.77474976 -74.59874725]
[-407.62994385 -83.78934479]
[-419.31478882 -93.19556427]
[-430.82537842 -102.81423950]
[-442.15783691 -112.64214325]
[-453.30841064 -122.67597961]
[-464.27328491 -132.91236877]
[-475.04882812 -143.34790039]
[-485.63140869 -153.97906494]
[-496.01748657 -164.80227661]
[-506.20358276 -175.81391907]
[-516.18621826 -187.01029968]
[-525.96215820 -198.38766479]
[-535.52801514 -209.94218445]
[-544.88061523 -221.66998291]
[-554.01684570 -233.56712341]
[-562.93359375 -245.62962341]
[-571.62792969 -257.85342407]
[-580.09686279 -270.23446655]
[-588.33764648 -282.76852417]
[-596.34741211 -295.45141602]
[-604.12347412 -308.27893066]
[-611.66333008 -321.24670410]
[-618.96435547 -334.35043335]
[-626.02416992 -347.58569336]
[-632.84033203 -360.94802856]
[-639.41058350 -374.43301392]
[-645.73272705 -388.03604126]
[-651.80468750 -401.75262451]
[-657.62432861 -415.57812500]
[-663.18975830 -429.50790405]
[-668.49908447 -443.53726196]
[-673.55059814 -457.66156006]
[-678.34246826 -471.87597656]
[-682.87322998 -486.17581177]
[-687.14123535 -500.55624390]
[-691.14514160 -515.01245117]
[-694.88360596 -529.53955078]
[-698.35528564 -544.13269043]
[-701.55914307 -558.78698730]
[-704.49401855 -573.49749756]
[-707.15887451 -588.25927734]
[-709.55297852 -603.06744385]
[-711.67541504 -617.91693115]
[-713.52545166 -632.80279541]
[-715.10253906 -647.72009277]
[-716.40612793 -662.66375732]
[-717.43572998 -677.62884521]
[-718.19104004 -692.61022949]
[-718.67187500 -707.60290527]
[-718.87792969 -722.60192871]
[-718.80926514 -737.60217285]
[-718.46582031 -752.59869385]
[-717.84771729 -767.58636475]
[-716.95520020 -782.56024170]
[-715.78857422 -797.51519775]
[-714.34814453 -812.44628906]
[-712.63452148 -827.34851074]
[-710.64819336 -842.21685791]
[-708.38989258 -857.04626465]
[-705.86029053 -871.83190918]
[-703.06030273 -886.56866455]
[-699.99084473 -901.25170898]
[-696.65289307 -915.87603760]
[-693.04766846 -930.43676758]
[-689.17633057 -944.92901611]
[-685.04022217 -959.34790039]
[-680.64062500 -973.68865967]
[-675.97912598 -987.94635010]
[-671.05725098 -1002.11633301]
[-665.87664795 -1016.19372559]
[-660.43902588 -1030.17395020]
[-654.74621582 -1044.05212402]
[-648.80023193 -1057.82373047]
[-642.60290527 -1071.48413086]
[-636.15643311 -1085.02868652]
[-629.46295166 -1098.45288086]
[-622.52465820 -1111.75231934]
[-615.34393311 -1124.92236328]
[-607.92321777 -1137.95861816]
[-600.26495361 -1150.85681152]
[-592.37164307 -1163.61254883]
[-584.24609375 -1176.22155762]
[-575.89086914 -1188.67968750]
[-567.30889893 -1200.98254395]
[-558.50299072 -1213.12622070]
[-549.47613525 -1225.10656738]
[-540.23132324 -1236.91955566]
[-530.77166748 -1248.56115723]
[-521.10040283 -1260.02758789]
[-511.22067261 -1271.31494141]
[-501.13589478 -1282.41943359]
[-490.84939575 -1293.33728027]
[-480.36462402 -1304.06494141]
[-469.68511963 -1314.59875488]
[-458.81442261 -1324.93518066]
[-447.75625610 -1335.07067871]
[-436.51428223 -1345.00195312]
[-425.09225464 -1354.72570801]
[-413.49404907 -1364.23852539]
[-401.72354126 -1373.53735352]
[-389.78469849 -1382.61901855]
[-377.68148804 -1391.48034668]
[-365.41796875 -1400.11865234]
[-352.99832153 -1408.53076172]
[-340.42663574 -1416.71411133]
[-327.70718384 -1424.66564941]
[-314.84420776 -1432.38293457]
[-301.84201050 -1439.86328125]
[-288.70501709 -1447.10424805]
[-275.43756104 -1454.10339355]
[-262.04412842 -1460.85827637]
[-248.52922058 -1467.36669922]
[-234.89735413 -1473.62646484]
[-221.15312195 -1479.63549805]
[-207.30111694 -1485.39184570]
[-193.34600830 -1490.89343262]
[-179.29244995 -1496.13842773]
[-165.14518738 -1501.12512207]
[-150.90895081 -1505.85192871]
[-136.58853149 -1510.31713867]
[-122.18871307 -1514.51928711]
[-107.71434021 -1518.45690918]
[-93.17026520 -1522.12878418]
[-78.56137848 -1525.53356934]
[-63.89257431 -1528.67028809]
[-49.16877365 -1531.53771973]
[-34.39491653 -1534.13500977]
[-19.57596779 -1536.46130371]
[-4.71689367 -1538.51562500]
[10.17731857 -1540.29748535]
[25.10167122 -1541.80627441]
[40.05115509 -1543.04138184]
[55.02075577 -1544.00244141]
[70.00544739 -1544.68920898]
[85.00020599 -1545.10131836]
[100.00000000 -1545.23876953]
[114.99979401 -1545.10131836]
[129.99455261 -1544.68920898]
[144.97924805 -1544.00244141]
[159.94883728 -1543.04138184]
[174.89833069 -1541.80627441]
[189.82267761 -1540.29748535]
[204.71688843 -1538.51562500]
[219.57597351 -1536.46130371]
[234.39491272 -1534.13500977]
[249.16877747 -1531.53771973]
[263.89257812 -1528.67028809]
[278.56137085 -1525.53356934]
[293.17025757 -1522.12878418]
[307.71432495 -1518.45690918]
[322.18872070 -1514.51928711]
[336.58853149 -1510.31713867]
[350.90896606 -1505.85192871]
[365.14520264 -1501.12512207]
[379.29244995 -1496.13842773]
[393.34600830 -1490.89343262]
[407.30111694 -1485.39184570]
[421.15310669 -1479.63549805]
[434.89736938 -1473.62646484]
[448.52920532 -1467.36669922]
[462.04412842 -1460.85827637]
[475.43756104 -1454.10339355]
[488.70501709 -1447.10424805]
[501.84201050 -1439.86328125]
[514.84417725 -1432.38293457]
[527.70715332 -1424.66564941]
[540.42663574 -1416.71411133]
[552.99829102 -1408.53076172]
[565.41796875 -1400.11865234]
[577.68145752 -1391.48034668]
[589.78466797 -1382.61901855]
[601.72357178 -1373.53735352]
[613.49407959 -1364.23852539]
[625.09228516 -1354.72570801]
[636.51428223 -1345.00195312]
[647.75628662 -1335.07067871]
[658.81445312 -1324.93518066]
[669.68511963 -1314.59875488]
[680.36462402 -1304.06494141]
[690.84936523 -1293.33728027]
[701.13586426 -1282.41943359]
[711.22070312 -1271.31494141]
[721.10040283 -1260.02758789]
[730.77166748 -1248.56115723]
[740.23132324 -1236.91955566]
[749.47613525 -1225.10656738]
[758.50299072 -1213.12622070]
[767.30889893 -1200.98254395]
[775.89086914 -1188.67968750]
[784.24609375 -1176.22155762]
[792.37164307 -1163.61254883]
[800.26495361 -1150.85681152]
[807.92321777 -1137.95861816]
[815.34393311 -1124.92236328]
[822.52465820 -1111.75231934]
[829.46295166 -1098.45288086]
[836.15643311 -1085.02868652]
[842.60290527 -1071.48413086]
[848.80023193 -1057.82373047]
[854.74621582 -1044.05212402]
[860.43902588 -1030.17395020]
[865.87664795 -1016.19372559]
[871.05725098 -1002.11633301]
[875.97912598 -987.94635010]
[880.64062500 -973.68865967]
[885.04022217 -959.34790039]
[889.17633057 -944.92901611]
[893.04766846 -930.43676758]
[896.65289307 -915.87603760]
[899.99084473 -901.25170898]
[903.06030273 -886.56866455]
[905.86029053 -871.83190918]
[908.38989258 -857.04626465]
[910.64819336 -842.21685791]
[912.63452148 -827.34851074]
[914.34814453 -812.44628906]
[915.78857422 -797.51519775]
[916.95520020 -782.56024170]
[917.84771729 -767.58636475]
[918.46582031 -752.59869385]
[918.80926514 -737.60217285]
[918.87792969 -722.60192871]
[918.67187500 -707.60290527]
[918.19104004 -692.61022949]
[917.43572998 -677.62884521]
[916.40612793 -662.66375732]
[915.10253906 -647.72009277]
[913.52545166 -632.80279541]
[911.67541504 -617.91693115]
[909.55297852 -603.06744385]
[907.15887451 -588.25927734]
[904.49401855 -573.49749756]
[901.55914307 -558.78698730]
[898.35528564 -544.13269043]
[894.88360596 -529.53955078]
[891.14514160 -515.01245117]
[887.14123535 -500.55624390]
[882.87322998 -486.17581177]
[878.34246826 -471.87597656]
[873.55059814 -457.66156006]
[868.49908447 -443.53726196]
[863.18975830 -429.50790405]
[857.62432861 -415.57812500]
[851.80468750 -401.75262451]
[845.73272705 -388.03604126]
[839.41058350 -374.43301392]
[832.84033203 -360.94802856]
[826.02416992 -347.58569336]
[818.96435547 -334.35043335]
[811.66333008 -321.24670410]
[804.12347412 -308.27893066]
[796.34741211 -295.45141602]
[788.33764648 -282.76852417]
[780.09686279 -270.23446655]
[771.62792969 -257.85342407]
[762.93359375 -245.62962341]
[754.01684570 -233.56712341]
[744.88061523 -221.66998291]
[735.52801514 -209.94218445]
[725.96215820 -198.38766479]
[716.18621826 -187.01029968]
[706.20355225 -175.81391907]
[696.01751709 -164.80227661]
[685.63140869 -153.97906494]
[675.04882812 -143.34790039]
[664.27331543 -132.91236877]
[653.30841064 -122.67597961]
[642.15783691 -112.64214325]
[630.82537842 -102.81423950]
[619.31475830 -93.19556427]
[607.62994385 -83.78934479]
[595.77471924 -74.59874725]
[583.75323486 -65.62683868]
[571.56933594 -56.87663651]
[559.22723389 -48.35108185]
[546.73101807 -40.05303192]
[534.08496094 -31.98526764]
[521.29315186 -24.15050125]
[508.36004639 -16.55135918]
[495.28991699 -9.19039249]
[482.08712769 -2.07007027]
[468.75613403 4.80721760]
[455.30139160 11.43916416]
[441.72741699 17.82354355]
[428.03881836 23.95821190]
[414.24011230 29.84111404]
[400.33596802 35.47027588]
[386.33105469 40.84380341]
[372.23004150 45.95989990]
[358.03768921 50.81684113]
[343.75875854 55.41300583]
[329.39804077 59.74684906]
[314.96032715 63.81691360]
[300.45050049 67.62183380]
[285.87341309 71.16033936]
[271.23394775 74.43123627]
[256.53701782 77.43342590]
[241.78758240 80.16590881]
[226.99055481 82.62775421]
[212.15092468 84.81815338]
[197.27365112 86.73635864]
[182.36375427 88.38173676]
[167.42620850 89.75372314]
[152.46603394 90.85186768]
[137.48826599 91.67579651]
[122.49790192 92.22523499]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
