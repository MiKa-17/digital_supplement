%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 07:25:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_____________________________________________________AG_GGUAGUU_ACUAUGGCUAAGGCGCAUUCUAAAGCAGAAGCCGCUAUAAAUAAAGCAGCAAAAACAGAACGUUAUUACACGGUGGGCUAUGUGCCGAACGGGAAUAGGGUCAGCAACGCCCCCCCGGCGAUACAUCUGAAAGGGCAGUGGCUGAAGCAGGCGGGGUUUAAUACUGGUUGCCAGAUUACGGUGAAGAUUAU\
GGACGGCUGUCUGGUGCUGAU_CCUGACAGUGAAGCCAC_CAACA__A_CA_CAGCAGUACCAGCGGCA_CA_G_CCAACU__G_GAGAUUAAGC__________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[265.23269653 1401.09387207]
[250.61224365 1397.73803711]
[236.07109070 1394.05371094]
[221.61657715 1390.04296875]
[207.25605774 1385.70776367]
[192.99679565 1381.05017090]
[178.84602356 1376.07275391]
[164.81092834 1370.77795410]
[150.89862061 1365.16845703]
[137.11616516 1359.24707031]
[123.47054291 1353.01672363]
[109.96868134 1346.48083496]
[96.61741638 1339.64245605]
[83.42352295 1332.50524902]
[70.39369965 1325.07263184]
[57.53455353 1317.34863281]
[44.85260010 1309.33691406]
[32.35427475 1301.04162598]
[20.04591179 1292.46716309]
[7.93375683 1283.61755371]
[-3.97604752 1274.49743652]
[-15.67746162 1265.11157227]
[-27.16455269 1255.46447754]
[-38.43149185 1245.56115723]
[-49.47256851 1235.40661621]
[-60.28218079 1225.00610352]
[-70.85485077 1214.36474609]
[-81.18520355 1203.48803711]
[-91.26802063 1192.38146973]
[-101.09817505 1181.05065918]
[-110.67068481 1169.50146484]
[-119.98069000 1157.73950195]
[-129.02348328 1145.77087402]
[-137.79446411 1133.60168457]
[-146.28918457 1121.23815918]
[-154.50334167 1108.68640137]
[-162.43276978 1095.95288086]
[-170.07345581 1083.04394531]
[-177.42150879 1069.96630859]
[-184.47320557 1056.72644043]
[-191.22499084 1043.33117676]
[-197.67340088 1029.78735352]
[-203.81520081 1016.10168457]
[-209.64726257 1002.28118896]
[-215.16662598 988.33282471]
[-220.37049866 974.26379395]
[-225.25624084 960.08111572]
[-229.82136536 945.79199219]
[-234.06356812 931.40368652]
[-237.98068237 916.92352295]
[-241.57073975 902.35882568]
[-244.83190918 887.71697998]
[-247.76254272 873.00537109]
[-250.36114502 858.23156738]
[-252.62641907 843.40295410]
[-254.55718994 828.52709961]
[-256.15249634 813.61151123]
[-257.41149902 798.66381836]
[-258.33358765 783.69152832]
[-258.91830444 768.70233154]
[-259.16534424 753.70373535]
[-259.07458496 738.70336914]
[-258.64602661 723.70880127]
[-257.87994385 708.72778320]
[-256.77670288 693.76776123]
[-255.33686829 678.83636475]
[-253.56115723 663.94122314]
[-251.45048523 649.08984375]
[-249.00592041 634.28973389]
[-246.22869873 619.54840088]
[-243.12023926 604.87335205]
[-239.68208313 590.27203369]
[-235.91601562 575.75189209]
[-231.82392883 561.32019043]
[-227.40791321 546.98431396]
[-222.67018127 532.75146484]
[-217.61314392 518.62896729]
[-212.23937988 504.62390137]
[-206.55160522 490.74337769]
[-200.55270386 476.99447632]
[-194.24571228 463.38415527]
[-187.63385010 449.91931152]
[-180.72044373 436.60675049]
[-173.50901794 423.45327759]
[-166.00321960 410.46548462]
[-158.20686340 397.65005493]
[-150.12390137 385.01339722]
[-141.75843811 372.56198120]
[-133.11470032 360.30209351]
[-124.19707489 348.23995972]
[-115.01009369 336.38168335]
[-105.55841827 324.73330688]
[-95.84683228 313.30068970]
[-85.88025665 302.08969116]
[-75.66376495 291.10595703]
[-65.20252228 280.35510254]
[-54.50183868 269.84249878]
[-43.56713867 259.57354736]
[-32.40397263 249.55342102]
[-21.01799965 239.78723145]
[-9.41499329 230.27989197]
[2.39916134 221.03625488]
[14.41847324 212.06100464]
[26.63684654 203.35867310]
[39.04808426 194.93370056]
[51.64589310 186.79034424]
[64.42388153 178.93272400]
[77.37557220 171.36485291]
[90.49440002 164.09054565]
[103.77369690 157.11349487]
[117.20674896 150.43724060]
[110.83495331 136.85784912]
[104.46315002 123.27844238]
[98.09135437 109.69903564]
[92.41913605 116.03158569]
[83.73346710 119.74456787]
[73.07151794 119.81089783]
[61.77148819 115.57440948]
[47.71444321 110.33995819]
[33.65739822 105.10550690]
[18.52839088 110.44335938]
[4.99919939 101.82125854]
[3.44826198 85.85334778]
[15.06532574 74.78884125]
[30.93877220 77.11547852]
[38.89185333 91.04846191]
[52.94889832 96.28291321]
[67.00594330 101.51737213]
[72.93965912 96.93032074]
[63.11297226 85.59735107]
[53.28628922 74.26438141]
[43.45960236 62.93140793]
[33.63291550 51.59843445]
[23.80623245 40.26546097]
[13.97954655 28.93249130]
[4.15286112 17.59951782]
[-5.67382431 6.26654625]
[-15.50050926 -5.06642580]
[-25.32719421 -16.39939690]
[-35.15388107 -27.73237038]
[-44.98056412 -39.06534195]
[-54.80725098 -50.39831543]
[-64.63393402 -61.73128510]
[-74.46062469 -73.06425476]
[-84.28730774 -84.39723206]
[-94.11399078 -95.73020172]
[-103.94068146 -107.06317139]
[-113.76736450 -118.39614868]
[-123.59404755 -129.72911072]
[-133.42073059 -141.06208801]
[-146.34344482 -148.67810059]
[-154.19017029 -161.46202087]
[-155.13093567 -176.43249512]
[-148.94635010 -190.09817505]
[-137.07875061 -199.27204895]
[-122.29580688 -201.81462097]
[-108.04512024 -197.13294983]
[-97.65016174 -186.31884766]
[-93.53520203 -171.89550781]
[-85.04271698 -159.53114319]
[-76.55022430 -147.16677856]
[-68.05773163 -134.80239868]
[-59.56524277 -122.43803406]
[-51.07275391 -110.07366943]
[-42.58026123 -97.70929718]
[-34.08777237 -85.34493256]
[-25.59528160 -72.98056030]
[-17.10279083 -60.61619186]
[-8.61030006 -48.25182343]
[-0.11781006 -35.88745499]
[8.37468052 -23.52308846]
[16.86717033 -11.15871906]
[25.35966110 1.20564950]
[33.85214996 13.57001781]
[42.34464264 25.93438721]
[50.83713150 38.29875565]
[59.32962418 50.66312408]
[67.82211304 63.02749252]
[76.31460571 75.39186096]
[84.80709076 87.75622559]
[90.74081421 83.16918182]
[89.21574402 68.24691010]
[87.69067383 53.32463837]
[73.17225647 48.90974808]
[61.48171616 39.29859543]
[54.38072205 25.97982979]
[52.92388153 10.99766636]
[57.30219650 -3.36183214]
[66.81869507 -14.91958618]
[79.99916840 -21.93416595]
[78.47409821 -36.85643768]
[76.94903564 -51.77870941]
[69.32364655 -66.92102814]
[81.76327515 -78.44022369]
[96.27593231 -69.67556763]
[91.87130737 -53.30377579]
[93.39636993 -38.38150406]
[94.92144012 -23.45923424]
[109.24839020 -19.25593376]
[120.90614319 -9.86220455]
[128.09870911 3.31474257]
[129.70269775 18.28186607]
[125.44274902 32.76173019]
[115.93812561 44.53904343]
[102.61294556 51.79957199]
[104.13801575 66.72183990]
[105.66307831 81.64411163]
[106.23670959 66.65509033]
[110.44841003 52.25850677]
[118.04386139 39.32370377]
[128.56442261 28.63175392]
[141.37480164 20.82828331]
[155.70144653 16.38450623]
[170.67926025 15.56875896]
[185.40377808 18.43029976]
[198.98588562 24.79633522]
[210.60542297 34.28245163]
[219.56072998 46.31583405]
[225.31106567 60.16984558]
[227.50918579 75.00791168]
[226.02236938 89.93404388]
[220.94036865 104.04692078]
[212.57008362 116.49434662]
[201.41694641 126.52467346]
[188.15443420 133.53222656]
[173.58341980 137.09387207]
[158.58374023 136.99450684]
[144.06117249 133.24015808]
[130.89266968 126.05751801]
[119.87338257 115.88031769]
[111.67075348 103.32723999]
[118.04255676 116.90663910]
[124.41435242 130.48603821]
[130.78614807 144.06544495]
[144.50617981 138.00079346]
[158.35928345 132.24661255]
[172.33845520 126.80586243]
[186.43659973 121.68127441]
[200.64656067 116.87545013]
[214.96115112 112.39083862]
[229.37309265 108.22970581]
[243.87507629 104.39415741]
[258.45974731 100.88614655]
[273.11975098 97.70745087]
[287.84759521 94.85968018]
[302.63580322 92.34428406]
[317.47692871 90.16253662]
[332.36343384 88.31553650]
[347.28775024 86.80422211]
[362.24230957 85.62937164]
[377.21951294 84.79157257]
[392.21182251 84.29124451]
[407.21157837 84.12864685]
[422.21118164 84.30387115]
[437.20303345 84.81681061]
[452.17956543 85.66721344]
[467.13311768 86.85465240]
[482.05615234 88.37852478]
[496.94110107 90.23805237]
[511.78036499 92.43228912]
[526.56646729 94.96013641]
[541.29193115 97.82029724]
[555.94921875 101.01132965]
[570.53094482 104.53160858]
[585.02972412 108.37935638]
[599.43811035 112.55261993]
[613.74896240 117.04928589]
[627.95483398 121.86705780]
[642.04870605 127.00350952]
[656.02325439 132.45603943]
[669.87152100 138.22186279]
[683.58642578 144.29806519]
[697.16107178 150.68156433]
[710.58850098 157.36912537]
[723.86187744 164.35736084]
[736.97460938 171.64271545]
[749.91992188 179.22151184]
[762.69128418 187.08987427]
[775.28222656 195.24385071]
[787.68634033 203.67929077]
[799.89739990 212.39190674]
[811.90911865 221.37727356]
[823.71551514 230.63087463]
[835.31048584 240.14796448]
[846.68823242 249.92376709]
[857.84295654 259.95327759]
[868.76898193 270.23144531]
[879.46081543 280.75305176]
[889.91296387 291.51275635]
[900.12023926 302.50506592]
[910.07733154 313.72445679]
[919.77929688 325.16525269]
[929.22113037 336.82159424]
[938.39813232 348.68759155]
[947.30560303 360.75723267]
[955.93902588 373.02441406]
[964.29400635 385.48287964]
[972.36627197 398.12631226]
[980.15185547 410.94833374]
[987.64666748 423.94241333]
[994.84704590 437.10198975]
[1001.74920654 450.42034912]
[1008.34973145 463.89077759]
[1014.64526367 477.50640869]
[1020.63256836 491.26037598]
[1026.30859375 505.14566040]
[1031.67065430 519.15521240]
[1036.71569824 533.28198242]
[1041.44152832 547.51879883]
[1045.84545898 561.85839844]
[1049.92541504 576.29357910]
[1053.67919922 590.81689453]
[1057.10498047 605.42114258]
[1060.20117188 620.09875488]
[1062.96594238 634.84240723]
[1065.39807129 649.64459229]
[1067.49621582 664.49774170]
[1069.25939941 679.39440918]
[1070.68664551 694.32696533]
[1071.77722168 709.28790283]
[1072.53063965 724.26959229]
[1072.94665527 739.26446533]
[1073.02478027 754.26489258]
[1072.76513672 769.26330566]
[1072.16772461 784.25201416]
[1071.23303223 799.22351074]
[1069.96142578 814.17016602]
[1068.35351562 829.08441162]
[1066.41027832 843.95861816]
[1064.13244629 858.78533936]
[1061.52148438 873.55694580]
[1058.57836914 888.26605225]
[1055.30493164 902.90515137]
[1051.70251465 917.46685791]
[1047.77319336 931.94366455]
[1043.51892090 946.32843018]
[1038.94177246 960.61364746]
[1034.04406738 974.79223633]
[1028.82836914 988.85693359]
[1023.29724121 1002.80059814]
[1017.45355225 1016.61614990]
[1011.30023193 1030.29663086]
[1004.84039307 1043.83508301]
[998.07733154 1057.22460938]
[991.01446533 1070.45849609]
[983.65539551 1083.53002930]
[976.00384521 1096.43237305]
[968.06365967 1109.15930176]
[959.83892822 1121.70410156]
[951.33380127 1134.06054688]
[942.55261230 1146.22229004]
[933.49969482 1158.18334961]
[924.17980957 1169.93737793]
[914.59759521 1181.47863770]
[904.75787354 1192.80114746]
[894.66571045 1203.89916992]
[884.32617188 1214.76721191]
[873.74456787 1225.39965820]
[862.92620850 1235.79101562]
[851.87658691 1245.93627930]
[840.60125732 1255.83007812]
[829.10607910 1265.46740723]
[817.39672852 1274.84350586]
[805.47924805 1283.95349121]
[793.35968018 1292.79284668]
[781.04406738 1301.35705566]
[768.53875732 1309.64172363]
[755.85003662 1317.64282227]
[742.98443604 1325.35607910]
[729.94830322 1332.77758789]
[716.74841309 1339.90368652]
[703.39141846 1346.73083496]
[689.88403320 1353.25537109]
[676.23315430 1359.47412109]
[662.44573975 1365.38391113]
[648.52868652 1370.98168945]
[634.48913574 1376.26477051]
[620.33422852 1381.23022461]
[606.07104492 1385.87573242]
[591.70684814 1390.19885254]
[577.24896240 1394.19750977]
[562.70471191 1397.86950684]
[548.08142090 1401.21301270]
[533.38659668 1404.22644043]
[518.62762451 1406.90820312]
[503.81201172 1409.25695801]
[488.94726562 1411.27136230]
[474.04089355 1412.95068359]
[459.10052490 1414.29382324]
[444.13369751 1415.30017090]
[429.14797974 1415.96936035]
[414.15100098 1416.30078125]
[399.15036011 1416.29443359]
[384.15368652 1415.95031738]
[369.16854858 1415.26867676]
[354.20254517 1414.24963379]
[339.26330566 1412.89392090]
[324.35839844 1411.20202637]
[309.49533081 1409.17504883]
[294.68170166 1406.81384277]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[111 234]
[112 233]
[113 232]
[114 231]
[118 128]
[119 127]
[120 126]
[181 207]
[182 206]
[183 205]
[190 198]
[191 197]
[192 196]
] def

init

% Start Annotations
111 234 0.0 1 colorpair
112 233 0.16 1 colorpair
113 232 0.32 1 colorpair
114 231 0.16 1 colorpair
118 128 0.0 1 colorpair
119 127 0.0 1 colorpair
120 126 0.32 1 colorpair
182 206 0.0 1 colorpair
183 205 0.16 1 colorpair
190 198 0.16 1 colorpair
191 197 0.16 1 colorpair
192 196 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
112 cmark
233 cmark
113 cmark
232 cmark
114 cmark
120 cmark
126 cmark
181 207 6 gmark
207 cmark
183 cmark
205 cmark
190 cmark
191 cmark
196 cmark

% End Annotations
showpage
end
%%EOF
