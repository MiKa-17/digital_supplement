%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Mar  7 16:54:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___________________________________________G_G_____GUGCUUAAGAUUA_G_CCC_C_CG_UCAUG____________UUGU_AAG_______GUGC_GA_AGCUGAAACG____UAAGGGCGUCAC_C___UC_UUU____G_U_____G________________A______________________________________________________C_______C_________\
_________G_____________________U_______________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50210571 92.22443390]
[62.51181030 91.67338562]
[47.53416443 90.84705353]
[32.57422638 89.74570465]
[17.63704681 88.36971283]
[2.72766590 86.71955109]
[-12.14888382 84.79576111]
[-26.98758125 82.59900665]
[-41.78342056 80.13002014]
[-56.53140259 77.38964081]
[-71.22655487 74.37879181]
[-85.86391449 71.09848785]
[-100.43853760 67.54983521]
[-114.94551849 63.73403168]
[-129.37994385 59.65236664]
[-143.73695374 55.30621719]
[-158.01170349 50.69705582]
[-172.19935608 45.82642746]
[-186.29515076 40.69598389]
[-200.29429626 35.30745316]
[-214.19210815 29.66265869]
[-227.98387146 23.76350021]
[-241.66493225 17.61197090]
[-255.23066711 11.21014595]
[-268.67651367 4.56018829]
[-281.99792480 -2.33565927]
[-295.19039917 -9.47506905]
[-308.24951172 -16.85563087]
[-321.17080688 -24.47485352]
[-333.94995117 -32.33016586]
[-346.58264160 -40.41891861]
[-359.06460571 -48.73837662]
[-371.39163208 -57.28573608]
[-383.55953979 -66.05811310]
[-395.56423950 -75.05253601]
[-407.40167236 -84.26599121]
[-419.06787109 -93.69534302]
[-430.55886841 -103.33742523]
[-441.87078857 -113.18898773]
[-452.99981689 -123.24668884]
[-463.94219971 -133.50714111]
[-474.69424438 -143.96688843]
[-485.25231934 -154.62239075]
[-495.61285400 -165.47006226]
[-505.77236938 -176.50622559]
[-515.72741699 -187.72717285]
[-525.47467041 -199.12910461]
[-535.01080322 -210.70817566]
[-544.33258057 -222.46047974]
[-553.43688965 -234.38206482]
[-562.32067871 -246.46887207]
[-570.98095703 -258.71685791]
[-579.41467285 -271.12185669]
[-587.61914062 -283.67971802]
[-595.59155273 -296.38616943]
[-603.32910156 -309.23693848]
[-610.82934570 -322.22769165]
[-618.08966064 -335.35403442]
[-625.10754395 -348.61151123]
[-631.88073730 -361.99572754]
[-638.40692139 -375.50207520]
[-644.68389893 -389.12603760]
[-650.70947266 -402.86303711]
[-656.48168945 -416.70840454]
[-661.99859619 -430.65747070]
[-667.25830078 -444.70553589]
[-672.25909424 -458.84783936]
[-676.99920654 -473.07965088]
[-681.47705078 -487.39611816]
[-685.69110107 -501.79244995]
[-689.64001465 -516.26373291]
[-693.32238770 -530.80517578]
[-696.73706055 -545.41180420]
[-699.88275146 -560.07867432]
[-702.75848389 -574.80084229]
[-705.36328125 -589.57336426]
[-707.69628906 -604.39129639]
[-709.75665283 -619.24951172]
[-711.54370117 -634.14312744]
[-713.05682373 -649.06701660]
[-714.29559326 -664.01623535]
[-715.25946045 -678.98565674]
[-715.94818115 -693.97021484]
[-716.36151123 -708.96496582]
[-716.49932861 -723.96478271]
[-716.36151123 -738.96453857]
[-715.94818115 -753.95928955]
[-715.25946045 -768.94384766]
[-714.29559326 -783.91326904]
[-713.05688477 -798.86248779]
[-711.54370117 -813.78637695]
[-709.75665283 -828.67999268]
[-707.69628906 -843.53826904]
[-705.36334229 -858.35614014]
[-702.75854492 -873.12866211]
[-699.88281250 -887.85083008]
[-696.73706055 -902.51770020]
[-693.32244873 -917.12432861]
[-689.64007568 -931.66577148]
[-685.69116211 -946.13708496]
[-681.47711182 -960.53338623]
[-676.99926758 -974.84985352]
[-672.25915527 -989.08166504]
[-667.25842285 -1003.22399902]
[-661.99871826 -1017.27203369]
[-656.48181152 -1031.22106934]
[-650.70959473 -1045.06652832]
[-644.68395996 -1058.80346680]
[-638.40704346 -1072.42749023]
[-631.88085938 -1085.93383789]
[-625.10766602 -1099.31799316]
[-618.08972168 -1112.57556152]
[-610.82946777 -1125.70190430]
[-603.32922363 -1138.69262695]
[-595.59161377 -1151.54333496]
[-587.61926270 -1164.24987793]
[-579.41479492 -1176.80761719]
[-570.98107910 -1189.21264648]
[-562.32080078 -1201.46069336]
[-553.43701172 -1213.54748535]
[-544.33270264 -1225.46911621]
[-535.01092529 -1237.22131348]
[-525.47479248 -1248.80041504]
[-515.72753906 -1260.20239258]
[-505.77252197 -1271.42333984]
[-495.61300659 -1282.45947266]
[-485.25247192 -1293.30712891]
[-474.69439697 -1303.96264648]
[-463.94235229 -1314.42248535]
[-452.99996948 -1324.68286133]
[-441.87094116 -1334.74060059]
[-430.55902100 -1344.59216309]
[-419.06802368 -1354.23425293]
[-407.40185547 -1363.66357422]
[-395.56442261 -1372.87707520]
[-383.55969238 -1381.87145996]
[-371.39178467 -1390.64379883]
[-359.06478882 -1399.19116211]
[-346.58282471 -1407.51074219]
[-333.95013428 -1415.59948730]
[-321.17098999 -1423.45471191]
[-308.24969482 -1431.07397461]
[-295.19058228 -1438.45458984]
[-281.99810791 -1445.59399414]
[-268.67669678 -1452.48986816]
[-255.23085022 -1459.13977051]
[-241.66511536 -1465.54162598]
[-227.98405457 -1471.69311523]
[-214.19230652 -1477.59228516]
[-200.29449463 -1483.23706055]
[-186.29534912 -1488.62561035]
[-172.19955444 -1493.75610352]
[-158.01190186 -1498.62670898]
[-143.73715210 -1503.23583984]
[-129.38014221 -1507.58203125]
[-114.94571686 -1511.66369629]
[-100.43874359 -1515.47949219]
[-85.86412048 -1519.02819824]
[-71.22676086 -1522.30847168]
[-56.53160858 -1525.31933594]
[-41.78362656 -1528.05969238]
[-26.98779106 -1530.52868652]
[-12.14909363 -1532.72546387]
[2.72745585 -1534.64929199]
[17.63683701 -1536.29943848]
[32.57401657 -1537.67541504]
[47.53395462 -1538.77673340]
[62.51159668 -1539.60314941]
[77.50189972 -1540.15417480]
[92.49978638 -1540.42968750]
[107.50021362 -1540.42968750]
[122.49810028 -1540.15417480]
[137.48840332 -1539.60314941]
[152.46604919 -1538.77673340]
[167.42597961 -1537.67541504]
[182.36315918 -1536.29943848]
[197.27253723 -1534.64929199]
[212.14909363 -1532.72546387]
[226.98779297 -1530.52868652]
[241.78363037 -1528.05969238]
[256.53161621 -1525.31933594]
[271.22677612 -1522.30847168]
[285.86410522 -1519.02819824]
[300.43875122 -1515.47949219]
[314.94570923 -1511.66369629]
[329.38015747 -1507.58203125]
[343.73715210 -1503.23583984]
[358.01190186 -1498.62670898]
[372.19955444 -1493.75610352]
[386.29534912 -1488.62561035]
[400.29449463 -1483.23706055]
[414.19229126 -1477.59228516]
[427.98406982 -1471.69311523]
[441.66513062 -1465.54162598]
[455.23086548 -1459.13977051]
[468.67669678 -1452.48986816]
[481.99810791 -1445.59399414]
[495.19058228 -1438.45458984]
[508.24969482 -1431.07397461]
[521.17095947 -1423.45471191]
[533.95013428 -1415.59948730]
[546.58282471 -1407.51074219]
[559.06475830 -1399.19116211]
[571.39178467 -1390.64379883]
[583.55969238 -1381.87145996]
[595.56439209 -1372.87707520]
[607.40185547 -1363.66357422]
[619.06805420 -1354.23425293]
[630.55902100 -1344.59216309]
[641.87097168 -1334.74060059]
[652.99993896 -1324.68286133]
[663.94232178 -1314.42248535]
[674.69439697 -1303.96264648]
[685.25244141 -1293.30712891]
[695.61297607 -1282.45947266]
[705.77252197 -1271.42333984]
[715.72753906 -1260.20239258]
[725.47479248 -1248.80041504]
[735.01092529 -1237.22131348]
[744.33270264 -1225.46911621]
[753.43701172 -1213.54748535]
[762.32080078 -1201.46069336]
[770.98107910 -1189.21264648]
[779.41479492 -1176.80761719]
[787.61926270 -1164.24987793]
[795.59161377 -1151.54333496]
[803.32922363 -1138.69262695]
[810.82946777 -1125.70190430]
[818.08972168 -1112.57556152]
[825.10766602 -1099.31799316]
[831.88085938 -1085.93383789]
[838.40704346 -1072.42749023]
[844.68395996 -1058.80346680]
[850.70959473 -1045.06652832]
[856.48181152 -1031.22106934]
[861.99871826 -1017.27203369]
[867.25842285 -1003.22399902]
[872.25915527 -989.08166504]
[876.99926758 -974.84985352]
[881.47711182 -960.53338623]
[885.69116211 -946.13708496]
[889.64007568 -931.66577148]
[893.32244873 -917.12432861]
[896.73706055 -902.51770020]
[899.88281250 -887.85083008]
[902.75854492 -873.12866211]
[905.36334229 -858.35614014]
[907.69628906 -843.53826904]
[909.75665283 -828.67999268]
[911.54370117 -813.78637695]
[913.05688477 -798.86248779]
[914.29559326 -783.91326904]
[915.25946045 -768.94384766]
[915.94818115 -753.95928955]
[916.36151123 -738.96453857]
[916.49932861 -723.96478271]
[916.36151123 -708.96496582]
[915.94818115 -693.97021484]
[915.25946045 -678.98565674]
[914.29559326 -664.01623535]
[913.05682373 -649.06701660]
[911.54370117 -634.14312744]
[909.75665283 -619.24951172]
[907.69628906 -604.39129639]
[905.36328125 -589.57336426]
[902.75848389 -574.80084229]
[899.88275146 -560.07867432]
[896.73706055 -545.41180420]
[893.32238770 -530.80517578]
[889.64001465 -516.26373291]
[885.69110107 -501.79244995]
[881.47705078 -487.39611816]
[876.99920654 -473.07965088]
[872.25909424 -458.84783936]
[867.25830078 -444.70553589]
[861.99859619 -430.65747070]
[856.48168945 -416.70840454]
[850.70947266 -402.86303711]
[844.68389893 -389.12603760]
[838.40692139 -375.50207520]
[831.88073730 -361.99572754]
[825.10754395 -348.61151123]
[818.08966064 -335.35403442]
[810.82934570 -322.22769165]
[803.32910156 -309.23693848]
[795.59155273 -296.38616943]
[787.61914062 -283.67971802]
[779.41467285 -271.12185669]
[770.98095703 -258.71685791]
[762.32067871 -246.46887207]
[753.43688965 -234.38206482]
[744.33258057 -222.46047974]
[735.01080322 -210.70817566]
[725.47467041 -199.12910461]
[715.72741699 -187.72717285]
[705.77233887 -176.50622559]
[695.61285400 -165.47006226]
[685.25231934 -154.62239075]
[674.69421387 -143.96688843]
[663.94219971 -133.50714111]
[652.99981689 -123.24668884]
[641.87078857 -113.18898773]
[630.55883789 -103.33742523]
[619.06787109 -93.69534302]
[607.40167236 -84.26599121]
[595.56427002 -75.05253601]
[583.55950928 -66.05811310]
[571.39160156 -57.28573608]
[559.06457520 -48.73837662]
[546.58264160 -40.41891861]
[533.94995117 -32.33016586]
[521.17077637 -24.47485352]
[508.24951172 -16.85563087]
[495.19039917 -9.47506905]
[481.99792480 -2.33565927]
[468.67651367 4.56018829]
[455.23068237 11.21014595]
[441.66491699 17.61197090]
[427.98385620 23.76350021]
[414.19210815 29.66265869]
[400.29431152 35.30745316]
[386.29513550 40.69598389]
[372.19937134 45.82642746]
[358.01168823 50.69705582]
[343.73693848 55.30621719]
[329.37994385 59.65236664]
[314.94552612 63.73403168]
[300.43853760 67.54983521]
[285.86392212 71.09848785]
[271.22656250 74.37879181]
[256.53140259 77.38964081]
[241.78341675 80.13002014]
[226.98757935 82.59900665]
[212.14888000 84.79576111]
[197.27233887 86.71955109]
[182.36294556 88.36971283]
[167.42576599 89.74570465]
[152.46583557 90.84705353]
[137.48818970 91.67338562]
[122.49789429 92.22443390]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
