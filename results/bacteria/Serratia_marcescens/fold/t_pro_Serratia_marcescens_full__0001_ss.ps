%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 22:54:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__________________UA_AUGCCGAAAAAACGGGUCCUGUUAAAACUGGUGGUUAUUUGUGUCACGGUAAUAUCACUGAUAUGGAUAACCCGCAGCUCGCUGUGCGAGCUGCGGAUCCGAUCGGGAAAUACGGAGGUUGCGGCCAUUUUGGCUUACGAAUCCGAACG_____________________________________________________________________________________\
______________________________________________________________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[431.64852905 396.32025146]
[422.77282715 391.16522217]
[414.00698853 385.82546997]
[405.35488892 380.30337524]
[396.82028198 374.60131836]
[388.40692139 368.72186279]
[380.11846924 362.66751099]
[371.95861816 356.44097900]
[363.93090820 350.04495239]
[356.03887939 343.48223877]
[348.28594971 336.75576782]
[340.67556763 329.86840820]
[333.21102905 322.82324219]
[325.89562988 315.62335205]
[318.73257446 308.27185059]
[311.72497559 300.77197266]
[304.87597656 293.12704468]
[298.18850708 285.34039307]
[291.66552734 277.41543579]
[285.30990601 269.35565186]
[279.12438965 261.16455078]
[273.11175537 252.84573364]
[267.27456665 244.40284729]
[261.61544800 235.83961487]
[256.13684082 227.15975952]
[250.84117126 218.36711121]
[245.73072815 209.46549988]
[240.80778503 200.45884705]
[236.07447815 191.35110474]
[231.53289795 182.14624023]
[227.18501282 172.84831238]
[223.03276062 163.46138000]
[219.07794189 153.98957825]
[215.32229614 144.43704224]
[211.76747131 134.80796814]
[208.41502380 125.10656738]
[205.26641846 115.33709717]
[202.32304382 105.50385284]
[199.58618164 95.61112976]
[197.05703735 85.66326904]
[182.42904663 88.98315430]
[167.80104065 92.30303192]
[153.17303467 95.62290955]
[153.65872192 102.44411469]
[153.26705933 109.31748962]
[151.99273682 116.12989807]
[149.84509277 122.76773834]
[146.84811401 129.11878967]
[143.04020691 135.07417297]
[138.47378540 140.53016663]
[133.21455383 145.38996887]
[127.34056854 149.56552124]
[120.94110107 152.97897339]
[114.11527252 155.56414795]
[106.97055817 157.26780701]
[99.62105560 158.05070496]
[92.18568420 157.88836670]
[84.78627014 156.77171326]
[77.54553223 154.70742798]
[70.58503723 151.71797180]
[64.02320862 147.84143066]
[57.97325516 143.13107300]
[52.54126740 137.65463257]
[47.82435608 131.49336243]
[33.53482437 136.05508423]
[19.24529266 140.61680603]
[18.00948524 155.76742554]
[11.06541157 169.28956604]
[-0.52800995 179.12120056]
[-15.00286484 183.76307678]
[-30.15184402 182.50733948]
[-43.66483688 175.54548645]
[-53.48121262 163.93913269]
[-58.10404205 149.45819092]
[-56.82838058 134.31088257]
[-49.84875488 120.80705261]
[-38.22950745 111.00595093]
[-23.74248886 106.40217590]
[-8.59686565 107.69776154]
[4.89776516 114.69514465]
[14.68356991 126.32727814]
[28.97310066 121.76555634]
[43.26263046 117.20383453]
[42.97300720 109.70942688]
[27.98419571 110.28867340]
[12.99538422 110.86791992]
[-1.99342692 111.44717407]
[-16.98223877 112.02642059]
[-31.97105026 112.60566711]
[-46.95986176 113.18491364]
[-61.94867325 113.76416016]
[-75.21913147 106.77167511]
[-62.52791977 98.77535248]
[-47.53910828 98.19610596]
[-32.55029678 97.61685944]
[-17.56148720 97.03760529]
[-2.57267499 96.45835876]
[12.41613674 95.87911224]
[27.40494728 95.29986572]
[42.39376068 94.72061920]
[42.10413742 87.22621155]
[27.50517082 83.78089142]
[12.90620422 80.33557892]
[-3.89822888 82.58220673]
[-10.70899200 67.05642700]
[2.32462740 56.21387100]
[16.35152054 65.73661041]
[30.95048714 69.18193054]
[45.54945374 72.62724304]
[64.38417816 52.43000793]
[89.61250305 43.03192520]
[115.68943787 45.83743286]
[137.17153931 59.63777924]
[149.85316467 80.99491119]
[164.48115540 77.67503357]
[179.10916138 74.35514832]
[193.73716736 71.03527069]
[187.81170654 37.04118729]
[184.29226685 2.71472597]
[183.19624329 -31.77403641]
[184.52903748 -66.25421906]
[188.28401184 -100.55500031]
[194.44253540 -134.50642395]
[202.97404480 -167.94030762]
[213.83624268 -200.69097900]
[226.97529602 -232.59619141]
[242.32604980 -263.49789429]
[259.81243896 -293.24298096]
[279.34780884 -321.68414307]
[300.83529663 -348.68041992]
[324.16848755 -374.09811401]
[349.23165894 -397.81130981]
[375.90069580 -419.70254517]
[404.04339600 -439.66336060]
[395.99295044 -452.32000732]
[387.94250488 -464.97662354]
[379.89205933 -477.63327026]
[365.65661621 -472.68865967]
[350.66455078 -471.16085815]
[335.72433472 -473.13226318]
[321.64166260 -478.49655151]
[309.17602539 -486.96438599]
[298.99966431 -498.07919312]
[291.66140747 -511.24151611]
[287.55694580 -525.74151611]
[286.90768433 -540.79724121]
[289.74859619 -555.59680176]
[295.92648315 -569.34197998]
[305.10818481 -581.29156494]
[316.79852295 -590.80114746]
[330.36709595 -597.35791016]
[345.08215332 -600.60815430]
[360.15008545 -600.37670898]
[374.75836182 -596.67602539]
[388.11914062 -589.70562744]
[399.51190186 -579.84143066]
[408.32223511 -567.61547852]
[414.07501221 -553.68701172]
[416.46002197 -538.80718994]
[415.34860229 -523.77850342]
[410.80072021 -509.41140747]
[403.06164551 -496.48068237]
[392.54870605 -485.68371582]
[400.59915161 -473.02706909]
[408.64959717 -460.37045288]
[416.70004272 -447.71380615]
[425.49874878 -452.99722290]
[434.40615845 -458.09527588]
[443.41833496 -463.00570679]
[452.53137207 -467.72640991]
[461.74124146 -472.25527954]
[471.04391479 -476.59030151]
[480.43533325 -480.72964478]
[489.91134644 -484.67144775]
[499.46780396 -488.41400146]
[509.10052490 -491.95562744]
[518.80529785 -495.29483032]
[528.57788086 -498.43011475]
[538.41394043 -501.36010742]
[548.30920410 -504.08352661]
[558.25933838 -506.59918213]
[568.25994873 -508.90597534]
[578.30664062 -511.00286865]
[588.39508057 -512.88897705]
[598.52075195 -514.56341553]
[608.67932129 -516.02551270]
[618.86627197 -517.27465820]
[629.07714844 -518.31018066]
[639.30743408 -519.13171387]
[649.55267334 -519.73889160]
[659.80847168 -520.13146973]
[670.07012939 -520.30920410]
[680.33337402 -520.27203369]
[690.59350586 -520.02001953]
[700.84619141 -519.55322266]
[711.08679199 -518.87188721]
[721.31097412 -517.97631836]
[731.51409912 -516.86688232]
[741.69177246 -515.54406738]
[751.83953857 -514.00848389]
[761.95294189 -512.26074219]
[772.02752686 -510.30163574]
[782.05889893 -508.13204956]
[792.04266357 -505.75289917]
[801.97442627 -503.16525269]
[811.84985352 -500.37023926]
[821.66455078 -497.36907959]
[831.41430664 -494.16308594]
[841.09484863 -490.75366211]
[850.70184326 -487.14230347]
[860.23114014 -483.33062744]
[869.67852783 -479.32025146]
[879.03991699 -475.11294556]
[888.31115723 -470.71060181]
[897.48815918 -466.11508179]
[906.56701660 -461.32843018]
[915.54364014 -456.35278320]
[924.41412354 -451.19024658]
[933.17456055 -445.84313965]
[941.82116699 -440.31378174]
[950.35009766 -434.60461426]
[958.75762939 -428.71810913]
[967.04010010 -422.65689087]
[975.19384766 -416.42358398]
[983.21533203 -410.02090454]
[991.10095215 -403.45172119]
[998.84735107 -396.71884155]
[1006.45111084 -389.82528687]
[1013.90881348 -382.77401733]
[1021.21734619 -375.56817627]
[1028.37329102 -368.21087646]
[1035.37377930 -360.70535278]
[1042.21557617 -353.05493164]
[1048.89562988 -345.26293945]
[1055.41113281 -337.33276367]
[1061.75915527 -329.26794434]
[1067.93688965 -321.07196045]
[1073.94177246 -312.74844360]
[1079.77099609 -304.30102539]
[1085.42211914 -295.73339844]
[1090.89270020 -287.04934692]
[1096.18017578 -278.25265503]
[1101.28234863 -269.34716797]
[1106.19689941 -260.33682251]
[1110.92187500 -251.22555542]
[1115.45495605 -242.01734924]
[1119.79431152 -232.71624756]
[1123.93786621 -223.32633972]
[1127.88403320 -213.85173035]
[1131.63098145 -204.29656982]
[1135.17700195 -194.66505432]
[1138.52062988 -184.96139526]
[1141.66040039 -175.18986511]
[1144.59484863 -165.35473633]
[1147.32275391 -155.46031189]
[1149.84289551 -145.51095581]
[1152.15417480 -135.51100159]
[1154.25561523 -125.46484375]
[1156.14624023 -115.37688446]
[1157.82519531 -105.25155640]
[1159.29187012 -95.09328461]
[1160.54553223 -84.90653229]
[1161.58557129 -74.69575500]
[1162.41174316 -64.46543884]
[1163.02343750 -54.22005844]
[1163.42053223 -43.96411514]
[1163.60278320 -33.70210266]
[1163.57019043 -23.43851471]
[1163.32275391 -13.17785645]
[1162.86047363 -2.92462373]
[1162.18371582 7.31668901]
[1161.29260254 17.54159164]
[1160.18762207 27.74560165]
[1158.86926270 37.92424774]
[1157.33813477 48.07306290]
[1155.59472656 58.18760300]
[1153.64001465 68.26342773]
[1151.47485352 78.29612732]
[1149.09997559 88.28130341]
[1146.51672363 98.21456909]
[1143.72595215 108.09158325]
[1140.72900391 117.90800476]
[1137.52722168 127.65953064]
[1134.12194824 137.34188843]
[1130.51477051 146.95085144]
[1126.70715332 156.48217773]
[1122.70080566 165.93170166]
[1118.49743652 175.29527283]
[1114.09899902 184.56880188]
[1109.50744629 193.74821472]
[1104.72460938 202.82948303]
[1099.75280762 211.80863953]
[1094.59399414 220.68173218]
[1089.25061035 229.44487000]
[1083.72485352 238.09422302]
[1078.01916504 246.62600708]
[1072.13623047 255.03645325]
[1066.07849121 263.32189941]
[1059.84851074 271.47869873]
[1053.44921875 279.50329590]
[1046.88317871 287.39215088]
[1040.15356445 295.14178467]
[1033.26306152 302.74887085]
[1026.21484375 310.20999146]
[1019.01196289 317.52194214]
[1011.65759277 324.68148804]
[1004.15490723 331.68548584]
[996.50720215 338.53088379]
[988.71789551 345.21466064]
[980.79034424 351.73388672]
[972.72802734 358.08569336]
[964.53448486 364.26736450]
[956.21331787 370.27609253]
[947.76818848 376.10931396]
[939.20275879 381.76443481]
[930.52075195 387.23901367]
[921.72607422 392.53060913]
[912.82257080 397.63690186]
[903.81408691 402.55569458]
[894.70452881 407.28479004]
[885.49798584 411.82214355]
[876.19848633 416.16574097]
[866.81005859 420.31369019]
[857.33685303 424.26416016]
[847.78302002 428.01544189]
[838.15270996 431.56585693]
[828.45019531 434.91390991]
[818.67968750 438.05807495]
[808.84552002 440.99697876]
[798.95196533 443.72937012]
[789.00329590 446.25399780]
[779.00402832 448.56982422]
[768.95843506 450.67575073]
[758.87097168 452.57092285]
[748.74597168 454.25448608]
[738.58801270 455.72567749]
[728.40142822 456.98388672]
[718.19073486 458.02856445]
[707.96038818 458.85922241]
[697.71490479 459.47549438]
[687.45880127 459.87716675]
[677.19647217 460.06399536]
[666.93249512 460.03591919]
[656.67138672 459.79296875]
[646.41754150 459.33523560]
[636.17559814 458.66293335]
[625.94989014 457.77633667]
[615.74505615 456.67584229]
[605.56542969 455.36193848]
[595.41558838 453.83520508]
[585.29986572 452.09631348]
[575.22283936 450.14599609]
[565.18878174 447.98510742]
[555.20220947 445.61462402]
[545.26745605 443.03558350]
[535.38885498 440.24911499]
[525.57073975 437.25643921]
[515.81744385 434.05883789]
[506.13320923 430.65774536]
[496.52230835 427.05462646]
[486.98895264 423.25109863]
[477.53729248 419.24880981]
[468.17150879 415.04949951]
[458.89572144 410.65502930]
[449.71392822 406.06729126]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 117]
[41 116]
[42 115]
[43 114]
[64 83]
[65 82]
[66 81]
[101 109]
[102 108]
[103 107]
[134 166]
[135 165]
[136 164]
[137 163]
] def

init

% Start Annotations
41 116 0.32 0.6 colorpair
101 109 0.16 1 colorpair
137 163 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
40 117 71 gmark
40 cmark
117 cmark
41 116 1 gmark
41 cmark
116 cmark
42 115 47 gmark
42 cmark
115 cmark
43 114 3 gmark
43 cmark
114 cmark
64 83 14 gmark
64 cmark
83 cmark
65 82 12 gmark
65 cmark
82 cmark
66 81 80 gmark
66 cmark
81 cmark
101 cmark
102 108 14 gmark
102 cmark
108 cmark
103 107 4 gmark
103 cmark
134 166 53 gmark
134 cmark
166 cmark
135 165 51 gmark
135 cmark
165 cmark
136 164 51 gmark
136 cmark
164 cmark
137 163 1 gmark
137 cmark
163 cmark

% End Annotations
showpage
end
%%EOF
