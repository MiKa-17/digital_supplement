%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 17:12:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__________________________UGCUUAACAGUGUUGA_AUUCACGU________CGAAA______UUGCGAGUUC____UCA_AGA_CG_G_A_____________________GCUUACGAAUCAAAUAAGUAGCCGUUAUGUUGGCGGGUAUCCACCAAAUAACGCGGGGAAGAUCUCGAUGCGA_CGGCACCUUUU___________\
) } def
/len { sequence length } bind def

/coor [
[-376.42660522 636.40197754]
[-391.27389526 638.54656982]
[-406.18395996 640.19915771]
[-421.14053345 641.35784912]
[-436.12722778 642.02136230]
[-451.12765503 642.18902588]
[-466.12542725 641.86065674]
[-481.10415649 641.03656006]
[-496.04745483 639.71771240]
[-510.93896484 637.90545654]
[-525.76239014 635.60180664]
[-540.50158691 632.80938721]
[-555.14038086 629.53112793]
[-569.66278076 625.77062988]
[-584.05285645 621.53204346]
[-598.29498291 616.81994629]
[-612.37353516 611.63958740]
[-626.27307129 605.99658203]
[-639.97845459 599.89709473]
[-653.47467041 593.34777832]
[-666.74694824 586.35577393]
[-679.78082275 578.92883301]
[-692.56195068 571.07495117]
[-705.07647705 562.80285645]
[-717.31060791 554.12145996]
[-729.25103760 545.04028320]
[-740.88470459 535.56933594]
[-752.19885254 525.71887207]
[-763.18115234 515.49969482]
[-773.81951904 504.92303467]
[-784.10241699 494.00042725]
[-794.01849365 482.74377441]
[-803.55700684 471.16543579]
[-812.70745850 459.27804565]
[-821.45989990 447.09460449]
[-829.80474854 434.62844849]
[-837.73278809 421.89318848]
[-845.23547363 408.90277100]
[-852.30456543 395.67138672]
[-858.93231201 382.21350098]
[-865.11145020 368.54385376]
[-870.83520508 354.67736816]
[-876.09741211 340.62921143]
[-880.89227295 326.41476440]
[-885.21453857 312.04953003]
[-889.05944824 297.54928589]
[-892.42279053 282.92980957]
[-895.30096436 268.20712280]
[-897.69079590 253.39733887]
[-899.58966064 238.51661682]
[-900.99548340 223.58126831]
[-901.90667725 208.60758972]
[-902.32232666 193.61196899]
[-902.24194336 178.61080933]
[-901.66564941 163.62051392]
[-900.59399414 148.65747070]
[-899.02819824 133.73803711]
[-896.96997070 118.87852478]
[-894.42156982 104.09519196]
[-891.38580322 89.40420532]
[-887.86590576 74.82162476]
[-883.86584473 60.36338806]
[-879.38989258 46.04531860]
[-874.44299316 31.88306618]
[-869.03051758 17.89211845]
[-863.15844727 4.08777285]
[-856.83319092 -9.51487446]
[-850.06158447 -22.90094757]
[-842.85113525 -36.05581284]
[-835.20965576 -48.96508408]
[-827.14556885 -61.61464310]
[-818.66760254 -73.99066162]
[-809.78515625 -86.07959747]
[-800.50781250 -97.86824036]
[-790.84576416 -109.34370422]
[-780.80957031 -120.49343109]
[-770.41021729 -131.30522156]
[-759.65911865 -141.76727295]
[-748.56793213 -151.86814880]
[-737.14886475 -161.59677124]
[-725.41442871 -170.94253540]
[-713.37731934 -179.89518738]
[-701.05084229 -188.44497681]
[-688.44842529 -196.58253479]
[-675.58380127 -204.29896545]
[-662.47113037 -211.58581543]
[-649.12463379 -218.43515015]
[-635.55902100 -224.83944702]
[-621.78906250 -230.79171753]
[-607.82983398 -236.28546143]
[-593.69659424 -241.31465149]
[-579.40478516 -245.87380981]
[-564.97009277 -249.95793152]
[-550.40820312 -253.56256104]
[-535.73516846 -256.68377686]
[-520.96685791 -259.31811523]
[-506.11959839 -261.46273804]
[-491.20953369 -263.11526489]
[-476.25296021 -264.27392578]
[-461.26626587 -264.93746948]
[-446.26583862 -265.10510254]
[-431.26806641 -264.77667236]
[-416.28933716 -263.95257568]
[-401.34603882 -262.63366699]
[-386.45455933 -260.82141113]
[-371.63110352 -258.51776123]
[-356.89193726 -255.72528076]
[-342.25314331 -252.44699097]
[-327.73074341 -248.68647766]
[-313.34063721 -244.44787598]
[-299.09854126 -239.73579407]
[-285.02001953 -234.55540466]
[-271.12048340 -228.91236877]
[-257.41510010 -222.81283569]
[-243.91889954 -216.26350403]
[-230.64662170 -209.27151489]
[-217.61277771 -201.84452820]
[-204.83163452 -193.99066162]
[-192.31713867 -185.71849060]
[-180.08299255 -177.03707886]
[-168.14257812 -167.95591736]
[-156.50894165 -158.48490906]
[-145.19480896 -148.63444519]
[-134.21255493 -138.41528320]
[-123.57418060 -127.83860779]
[-113.29132843 -116.91596222]
[-103.37522888 -105.65930176]
[-93.83674622 -94.08094025]
[-84.68629456 -82.19353485]
[-75.93387604 -70.01008606]
[-67.58908081 -57.54390717]
[-59.66101456 -44.80864334]
[-52.15835571 -31.81820869]
[-45.08930969 -18.58681679]
[-38.46159744 -5.12893009]
[-32.28247452 8.54073238]
[-26.55869865 22.40722275]
[-21.29652214 36.45537949]
[-16.50170326 50.66984177]
[-12.17948341 65.03506470]
[-8.33458996 79.53533936]
[-4.97122622 94.15481567]
[-2.09307146 108.87750244]
[12.71536541 106.48789978]
[27.52380180 104.09829712]
[42.33223724 101.70869446]
[57.14067459 99.31909180]
[71.94911194 96.92948914]
[86.75754547 94.53988647]
[97.71809387 85.85898590]
[110.85285187 90.65167999]
[125.66128540 88.26207733]
[140.46972656 85.87247467]
[155.27815247 83.48287201]
[167.64395142 72.71165466]
[183.06504822 78.29034424]
[185.67755127 94.48005676]
[172.79393005 104.62621307]
[157.66775513 98.29130554]
[142.85932922 100.68090820]
[128.05088806 103.07051086]
[113.24245453 105.46011353]
[102.28190613 114.14101410]
[89.14714813 109.34832001]
[74.33871460 111.73792267]
[59.53027725 114.12752533]
[44.72183990 116.51712799]
[29.91340446 118.90673065]
[15.10496807 121.29633331]
[0.29653147 123.68593597]
[2.19540739 138.56665039]
[3.60123849 153.50199890]
[4.51248741 168.47567749]
[4.92815828 183.47128296]
[4.84779549 198.47244263]
[4.27148819 213.46275330]
[3.19986558 228.42579651]
[1.63409972 243.34523010]
[-0.42409700 258.20474243]
[-2.97247410 272.98806763]
[-6.00824499 287.67907715]
[-9.52809048 302.26165771]
[-13.52816105 316.71990967]
[-18.00408173 331.03796387]
[-22.95096207 345.20022583]
[-28.36338806 359.19119263]
[-34.23544312 372.99554443]
[-40.56070709 386.59820557]
[-47.33226395 399.98428345]
[-54.54270554 413.13916016]
[-62.18415070 426.04843140]
[-70.24823761 438.69802856]
[-78.72615814 451.07403564]
[-87.60863495 463.16299438]
[-96.88596344 474.95166016]
[-106.54798889 486.42712402]
[-116.58414459 497.57687378]
[-126.98346710 508.38870239]
[-137.73457336 518.85076904]
[-148.82571411 528.95166016]
[-160.24476624 538.68029785]
[-171.97923279 548.02606201]
[-184.01629639 556.97875977]
[-196.34277344 565.52856445]
[-208.94519043 573.66613770]
[-221.80978394 581.38256836]
[-234.92247009 588.66943359]
[-248.26892090 595.51879883]
[-261.83453369 601.92309570]
[-275.60449219 607.87542725]
[-289.56369019 613.36914062]
[-303.69692993 618.39837646]
[-317.98870850 622.95758057]
[-332.42343140 627.04168701]
[-346.98529053 630.64636230]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[143 170]
[144 169]
[145 168]
[146 167]
[147 166]
[148 165]
[149 164]
[151 162]
[152 161]
[153 160]
[154 159]
] def

init

% Start Annotations
143 170 0.16 0.2 colorpair
144 169 0.16 0.6 colorpair
145 168 0.16 0.2 colorpair
146 167 0.16 1 colorpair
147 166 0.16 0.6 colorpair
148 165 0.32 0.6 colorpair
149 164 0.16 0.2 colorpair
151 162 0.16 0.6 colorpair
152 161 0.16 0.6 colorpair
153 160 0.0 0.2 colorpair
154 159 0.16 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
143 170 2 gmark
170 cmark
144 169 1 gmark
144 cmark
169 cmark
145 168 2 gmark
145 cmark
168 cmark
146 cmark
167 cmark
147 166 1 gmark
147 cmark
166 cmark
148 165 1 gmark
148 cmark
165 cmark
149 164 2 gmark
149 cmark
164 cmark
151 162 1 gmark
151 cmark
162 cmark
152 161 1 gmark
152 cmark
161 cmark
153 160 2 gmark
154 159 2 gmark
154 cmark
159 cmark

% End Annotations
showpage
end
%%EOF
