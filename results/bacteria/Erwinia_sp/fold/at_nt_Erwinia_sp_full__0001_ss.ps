%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 20:16:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
____________________________________________________________________________________________________________AGCCAUGAUUAACU__CUCGUUUAGUUGCUU__GUGGUGAGCGG_GCUGGCGGUGUUCCAGCA_CCCCCGCACCGCGCU_______________________\
) } def
/len { sequence length } bind def

/coor [
[-29.29689789 506.88302612]
[-42.13764954 514.63641357]
[-55.31176376 521.80877686]
[-68.79296875 528.38580322]
[-82.55437469 534.35437012]
[-96.56853485 539.70257568]
[-110.80750275 544.41973877]
[-125.24288177 548.49645996]
[-139.84588623 551.92462158]
[-154.58738708 554.69744873]
[-169.43797302 556.80926514]
[-184.36804199 558.25598145]
[-199.34782410 559.03466797]
[-214.34742737 559.14373779]
[-229.33694458 558.58306885]
[-244.28646851 557.35363770]
[-259.16622925 555.45806885]
[-273.94647217 552.89996338]
[-288.59780884 549.68457031]
[-303.09094238 545.81823730]
[-317.39703369 541.30865479]
[-331.48748779 536.16485596]
[-345.33425903 530.39709473]
[-358.90969849 524.01690674]
[-372.18676758 517.03692627]
[-385.13891602 509.47109985]
[-397.74038696 501.33456421]
[-409.96600342 492.64355469]
[-421.79141235 483.41534424]
[-433.19302368 473.66836548]
[-444.14807129 463.42205811]
[-454.63473511 452.69683838]
[-464.63208008 441.51412964]
[-474.12017822 429.89624023]
[-483.08013916 417.86630249]
[-491.49401855 405.44830322]
[-499.34512329 392.66705322]
[-506.61773682 379.54800415]
[-513.29736328 366.11737061]
[-519.37066650 352.40185547]
[-524.82556152 338.42889404]
[-529.65118408 324.22631836]
[-533.83789062 309.82244873]
[-537.37731934 295.24600220]
[-540.26245117 280.52609253]
[-542.48748779 265.69201660]
[-544.04797363 250.77342224]
[-544.94085693 235.80001831]
[-545.16436768 220.80168152]
[-544.71795654 205.80831909]
[-543.60260010 190.84985352]
[-541.82049561 175.95608521]
[-539.37524414 161.15673828]
[-536.27166748 146.48132324]
[-532.51593018 131.95912170]
[-528.11560059 117.61907196]
[-523.07940674 103.48978424]
[-517.41741943 89.59943390]
[-511.14086914 75.97573853]
[-504.26232910 62.64585114]
[-496.79553223 49.63636398]
[-488.75534058 36.97322083]
[-480.15777588 24.68167686]
[-471.02001953 12.78624725]
[-461.36026001 1.31065500]
[-451.19778442 -9.72221375]
[-440.55285645 -20.29035378]
[-429.44671631 -30.37269211]
[-417.90148926 -39.94911575]
[-405.94024658 -49.00053024]
[-393.58676147 -57.50888062]
[-380.86575317 -65.45719910]
[-367.80255127 -72.82963562]
[-354.42321777 -79.61148834]
[-340.75445557 -85.78923035]
[-326.82348633 -91.35053253]
[-312.65811157 -96.28431702]
[-298.28659058 -100.58073425]
[-283.73754883 -104.23121643]
[-269.04006958 -107.22849274]
[-254.22340393 -109.56657410]
[-239.31713867 -111.24079895]
[-224.35098267 -112.24783325]
[-209.35478210 -112.58567047]
[-194.35845947 -112.25363159]
[-179.39190674 -111.25238037]
[-164.48500061 -109.58391571]
[-149.66743469 -107.25155640]
[-134.96878052 -104.25996399]
[-120.41835022 -100.61510468]
[-106.04516602 -96.32424164]
[-91.87788391 -91.39593506]
[-77.94477081 -85.84001160]
[-64.27359772 -79.66755676]
[-50.89165115 -72.89088440]
[-37.82560349 -65.52349091]
[-25.10151672 -57.58009338]
[-12.74476910 -49.07651520]
[-0.78000522 -40.02972412]
[10.76891422 -30.45776367]
[21.87895584 -20.37971878]
[32.52796555 -9.81569290]
[42.69469833 1.21324646]
[52.35888290 12.68510437]
[61.50124741 24.57700157]
[70.10355377 36.86521912]
[78.14864349 49.52525330]
[85.62048340 62.53185654]
[92.50415802 75.85908508]
[98.77881622 89.46393585]
[108.09369659 77.70668030]
[117.40858459 65.94943237]
[126.72346497 54.19218063]
[136.03834534 42.43492889]
[145.17715454 30.54029465]
[154.13784790 18.51091766]
[156.17678833 2.82164478]
[169.98480225 -2.76299286]
[178.94549561 -14.79237080]
[187.90618896 -26.82174873]
[196.86689758 -38.85112762]
[205.82759094 -50.88050461]
[200.30590820 -65.28587341]
[203.47128296 -80.38500977]
[214.31364441 -91.35984039]
[229.37322998 -94.70832825]
[243.84458923 -89.36198425]
[253.10995483 -77.02680969]
[254.21279907 -61.63891983]
[246.80119324 -48.10852432]
[233.24015808 -40.75312424]
[217.85696411 -41.91980743]
[208.89627075 -29.89043045]
[199.93557739 -17.86105156]
[190.97488403 -5.83167458]
[182.01417542 6.19770336]
[180.61616516 21.02655411]
[166.16722107 27.47161293]
[157.20652771 39.50099182]
[156.99874878 44.27235031]
[153.79142761 48.96384048]
[147.79559326 51.74980927]
[138.48071289 63.50706100]
[129.16583252 75.26431274]
[119.85095215 87.02156067]
[110.53606415 98.77881622]
[112.94906616 105.88004303]
[117.77506256 120.08249664]
[120.18806458 127.18372345]
[134.73768616 130.83181763]
[149.28730774 134.47990417]
[163.83692932 138.12799072]
[172.92199707 137.17964172]
[178.57519531 141.94021606]
[193.06889343 145.80451965]
[207.56259155 149.66882324]
[222.05627441 153.53312683]
[236.54997253 157.39744568]
[244.97250366 144.81413269]
[257.02600098 135.64939880]
[271.40295410 130.89736938]
[286.54388428 131.07350159]
[300.80639648 136.15867615]
[312.64343262 145.60131836]
[320.77096558 158.37715149]
[324.30740356 173.10034180]
[322.86914062 188.17382812]
[316.61215210 201.96257019]
[306.21520996 212.97084045]
[292.80606079 220.00454712]
[277.83920288 222.30075073]
[262.93820190 219.61036682]
[249.71932983 212.22520447]
[239.61651611 200.94638062]
[233.72563171 186.99732971]
[232.68566895 171.89112854]
[218.19197083 168.02682495]
[203.69828796 164.16252136]
[189.20458984 160.29821777]
[174.71089172 156.43391418]
[160.18884277 152.67761230]
[145.63922119 149.02952576]
[131.08959961 145.38143921]
[116.53997803 141.73335266]
[119.85669708 156.36206055]
[122.51698303 171.12428284]
[124.51552582 185.99053955]
[125.84833527 200.93121338]
[126.51275635 215.91648865]
[126.50746918 230.91648865]
[125.83247375 245.90129089]
[124.48912811 260.84100342]
[122.48010254 275.70587158]
[119.80941010 290.46618652]
[116.48236847 305.09259033]
[112.50562286 319.55581665]
[107.88710022 333.82708740]
[102.63600159 347.87792969]
[96.76281738 361.68029785]
[90.27925110 375.20669556]
[83.19823456 388.43014526]
[75.53388977 401.32424927]
[67.30150604 413.86328125]
[58.51749802 426.02227783]
[49.19937897 437.77697754]
[39.36574173 449.10391235]
[29.03619576 459.98052979]
[18.23133850 470.38510132]
[6.97272110 480.29687500]
[-4.71720219 489.69610596]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[110 146]
[111 145]
[112 144]
[113 143]
[114 142]
[115 139]
[116 138]
[118 136]
[119 135]
[120 134]
[121 133]
[122 132]
[149 184]
[150 183]
[151 182]
[152 181]
[154 180]
[155 179]
[156 178]
[157 177]
[158 176]
] def

init

% Start Annotations
110 146 0.16 1 colorpair
111 145 0.16 0.6 colorpair
112 144 0.16 1 colorpair
113 143 0.16 0.6 colorpair
114 142 0.16 0.2 colorpair
115 139 0.32 0.6 colorpair
118 136 0.16 0.2 colorpair
119 135 0.0 0.2 colorpair
120 134 0.0 0.2 colorpair
121 133 0.0 0.2 colorpair
122 132 0.0 0.2 colorpair
149 184 0.0 0.2 colorpair
150 183 0.0 0.6 colorpair
151 182 0.32 0.6 colorpair
152 181 0.16 0.6 colorpair
156 178 0.0 0.2 colorpair
158 176 0.16 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
146 cmark
111 145 1 gmark
111 cmark
145 cmark
112 cmark
144 cmark
113 143 1 gmark
113 cmark
114 142 2 gmark
142 cmark
115 139 1 gmark
115 cmark
139 cmark
116 138 3 gmark
116 cmark
138 cmark
118 136 2 gmark
118 cmark
119 135 2 gmark
120 134 2 gmark
121 133 2 gmark
122 132 2 gmark
149 184 2 gmark
150 183 1 gmark
151 182 1 gmark
151 cmark
182 cmark
152 181 1 gmark
181 cmark
154 180 3 gmark
154 cmark
180 cmark
155 179 3 gmark
155 cmark
179 cmark
156 178 2 gmark
157 177 3 gmark
157 cmark
177 cmark
158 176 2 gmark
158 cmark
176 cmark

% End Annotations
showpage
end
%%EOF
