%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 07:09:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__________GGUAAGAGGCUAAACUUAUGUUGAUAAGCAUUAGAGG_GGCCUCAAUUAGAUUCA__UAGAUCACAUGGGGCUUUCUUCUU____UCCGC_U__AA_____U_UAUACAAAGCUAGAGACAGACA_GGCUCAAGCACC_________\
) } def
/len { sequence length } bind def

/coor [
[109.68255615 176.20419312]
[102.43373871 176.77830505]
[95.16310883 176.66442871]
[87.93582153 175.86360168]
[80.81663513 174.38299561]
[73.86933899 172.23587036]
[67.15619659 169.44145203]
[60.73735428 166.02481079]
[54.67032623 162.01654053]
[49.00948334 157.45257568]
[43.80554199 152.37379456]
[39.10513687 146.82571411]
[34.95038986 140.85804749]
[31.37852478 134.52426147]
[28.42155075 127.88111877]
[26.10596085 120.98814392]
[11.34549809 123.65811157]
[-3.41496468 126.32807922]
[-18.17542839 128.99804688]
[-32.93589020 131.66801453]
[-47.69635391 134.33798218]
[-61.43567276 146.56022644]
[-77.71027374 140.05728149]
[-92.41473389 143.02018738]
[-107.11919403 145.98309326]
[-121.82365417 148.94601440]
[-133.82359314 159.25677490]
[-147.82844543 154.18591309]
[-162.53289795 157.14881897]
[-177.23736572 160.11172485]
[-191.94181824 163.07464600]
[-206.64628601 166.03755188]
[-218.58442688 177.28088379]
[-234.21055603 172.30531311]
[-237.44982910 156.22927856]
[-224.96998596 145.59042358]
[-209.60919189 151.33308411]
[-194.90473938 148.37017822]
[-180.20027161 145.40727234]
[-165.49580383 142.44435120]
[-150.79135132 139.48144531]
[-139.84317017 129.38261414]
[-124.78656769 134.24154663]
[-110.08210754 131.27864075]
[-95.37764740 128.31573486]
[-80.67318726 125.35281372]
[-73.69131470 115.43273926]
[-61.42414856 112.86870575]
[-50.36632156 119.57752228]
[-35.60585785 116.90755463]
[-20.84539604 114.23758698]
[-6.08493280 111.56761932]
[8.67553043 108.89765167]
[23.43599319 106.22768402]
[23.83386230 90.02249146]
[27.62344170 74.26160431]
[34.63597870 59.64685822]
[44.55920410 46.82905579]
[56.95123291 36.37897491]
[49.79821777 23.19434738]
[42.64520645 10.00971985]
[35.49219513 -3.17490816]
[28.33918190 -16.35953522]
[21.18616867 -29.54416466]
[6.93118048 -37.65140152]
[7.09534931 -54.04972839]
[21.50979233 -61.86994934]
[35.34616852 -53.06729126]
[34.37079620 -36.69717789]
[41.52381134 -23.51254845]
[48.67682266 -10.32792091]
[55.82983398 2.85670710]
[62.98284912 16.04133415]
[70.13585663 29.22596359]
[98.41024017 23.19958496]
[126.90978241 28.05074883]
[151.59799194 43.09236526]
[168.97816467 66.19403076]
[183.02766418 60.93936920]
[197.07717896 55.68470764]
[211.12667847 50.43004608]
[225.17617798 45.17538071]
[239.17274475 39.78130341]
[249.14576721 27.49922752]
[263.82955933 29.99628830]
[277.77182007 24.46332932]
[291.71408081 18.93037033]
[305.60061646 13.25907707]
[319.43011475 7.45000887]
[333.25961304 1.64094138]
[347.08908081 -4.16812611]
[343.75796509 -18.83355331]
[343.02426147 -33.85463333]
[344.91027832 -48.77489090]
[349.35870361 -63.14091492]
[356.23437500 -76.51613617]
[365.32827759 -88.49410248]
[376.36413574 -98.71081543]
[389.00653076 -106.85580444]
[402.87130737 -112.68154144]
[417.53710938 -116.01099396]
[432.55825806 -116.74298859]
[447.47830200 -114.85527802]
[461.84384155 -110.40522766]
[475.21829224 -103.52806091]
[487.19522095 -94.43278503]
[497.41067505 -83.39577484]
[505.55422974 -70.75244904]
[511.37838745 -56.88701630]
[514.70617676 -42.22083664]
[515.43646240 -27.19959068]
[513.54705811 -12.27976227]
[509.09539795 2.08525276]
[502.21670532 15.45891762]
[493.12005615 27.43482208]
[482.08190918 37.64903259]
[469.43765259 45.79114914]
[455.57156372 51.61373901]
[440.90499878 54.93986893]
[425.88366699 55.66845703]
[410.96405029 53.77735901]
[396.59954834 49.32404709]
[383.22665405 42.44385529]
[371.25180054 33.34585571]
[361.03884888 22.30653572]
[352.89816284 9.66136169]
[339.06866455 15.47042942]
[325.23916626 21.27949715]
[311.40969849 27.08856392]
[306.43356323 32.60856247]
[297.24703979 32.87261963]
[283.30477905 38.40557861]
[269.36251831 43.93853760]
[260.38674927 55.82486343]
[244.70570374 53.72355652]
[239.62080383 59.14352417]
[230.43084717 59.22488403]
[216.38133240 64.47954559]
[202.33183289 69.73420715]
[188.28233337 74.98887634]
[174.23283386 80.24353790]
[175.76831055 87.35108948]
[176.62484741 94.57198334]
[176.79478455 101.84152222]
[176.27659607 109.09455109]
[175.07493591 116.26609802]
[173.20054626 123.29188538]
[170.67022705 130.10896301]
[167.50666809 136.65625000]
[163.73822021 142.87506104]
[159.39862061 148.70970154]
[154.52677917 154.10786438]
[149.16635132 159.02119446]
[143.36535645 163.40565491]
[137.17578125 167.22195435]
[130.65309143 170.43591309]
[123.85573578 173.01873779]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 54]
[17 53]
[18 52]
[19 51]
[20 50]
[21 49]
[23 46]
[24 45]
[25 44]
[26 43]
[28 41]
[29 40]
[30 39]
[31 38]
[32 37]
[59 74]
[60 73]
[61 72]
[62 71]
[63 70]
[64 69]
[78 141]
[79 140]
[80 139]
[81 138]
[82 137]
[83 135]
[85 133]
[86 132]
[87 131]
[88 129]
[89 128]
[90 127]
[91 126]
] def

init

% Start Annotations
16 54 0.16 1 colorpair
17 53 0.0 0.2 colorpair
18 52 0.16 1 colorpair
19 51 0.0 1 colorpair
20 50 0.0 0.2 colorpair
21 49 0.16 0.2 colorpair
23 46 0.16 0.6 colorpair
24 45 0.32 1 colorpair
25 44 0.16 1 colorpair
26 43 0.0 0.2 colorpair
28 41 0.0 1 colorpair
29 40 0.0 0.2 colorpair
30 39 0.0 0.2 colorpair
31 38 0.0 0.2 colorpair
32 37 0.0 1 colorpair
59 74 0.16 0.2 colorpair
60 73 0.16 1 colorpair
61 72 0.0 1 colorpair
62 71 0.0 0.6 colorpair
63 70 0.0 1 colorpair
64 69 0.16 0.2 colorpair
78 141 0.16 1 colorpair
79 140 0.0 1 colorpair
80 139 0.0 1 colorpair
81 138 0.16 0.2 colorpair
82 137 0.0 1 colorpair
83 135 0.0 1 colorpair
85 133 0.16 1 colorpair
86 132 0.16 0.2 colorpair
87 131 0.0 0.6 colorpair
88 129 0.16 1 colorpair
89 128 0.16 1 colorpair
90 127 0.16 1 colorpair
91 126 0.16 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
16 cmark
54 cmark
17 53 2 gmark
18 cmark
52 cmark
20 50 2 gmark
21 49 2 gmark
49 cmark
23 46 1 gmark
23 cmark
46 cmark
24 cmark
45 cmark
25 cmark
26 43 2 gmark
29 40 2 gmark
30 39 2 gmark
31 38 2 gmark
59 74 2 gmark
59 cmark
74 cmark
60 cmark
73 cmark
62 71 1 gmark
64 69 2 gmark
64 cmark
69 cmark
141 cmark
81 138 2 gmark
138 cmark
85 cmark
133 cmark
86 132 2 gmark
86 cmark
87 131 1 gmark
88 cmark
129 cmark
89 cmark
90 cmark
127 cmark
91 126 2 gmark
126 cmark

% End Annotations
showpage
end
%%EOF
