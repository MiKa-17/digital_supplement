%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 07:09:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______________________UGAAGCCGCAAAAAAUCGCAAUAUUUAGUUUGAUUAUUAUUUGUGUGACGUUACUCAUAUUCACGUGGAUAACAAGGGGCUCACUCUGUAAGCUCCACAUCAAACGAGGUAAUACAGAGGUUGCGGCAAUCAUGGCUUACGAAUCCAG_______\
) } def
/len { sequence length } bind def

/coor [
[87.53028107 775.21691895]
[72.91449738 771.78021240]
[58.74682999 766.80938721]
[45.18779755 760.36071777]
[32.39104462 752.50738525]
[20.50156212 743.33831787]
[9.65406990 732.95733643]
[-0.02852268 721.48217773]
[-8.43650436 709.04278564]
[-15.47460556 695.78021240]
[-21.06307983 681.84460449]
[-25.13860512 667.39392090]
[-27.65500450 652.59185791]
[-28.58376122 637.60626221]
[-27.91435623 622.60675049]
[-25.65437126 607.76342773]
[-21.82941437 593.24444580]
[-16.48282623 579.21423340]
[-9.67518711 565.83184814]
[-1.48363245 553.24890137]
[7.99902058 541.60797119]
[18.66532707 531.04095459]
[30.39442825 521.66754150]
[43.05342484 513.59405518]
[56.49888229 506.91183472]
[70.57845306 501.69668579]
[85.13259888 498.00765991]
[99.99641418 495.88656616]
[99.46704865 480.89593506]
[98.93767548 465.90527344]
[98.40830231 450.91461182]
[97.87892914 435.92395020]
[97.34955597 420.93328857]
[87.48724365 415.12774658]
[81.60312653 405.17236328]
[81.26580811 393.49291992]
[86.67554474 383.00109863]
[96.58534241 376.36871338]
[96.58534241 361.36871338]
[82.40769958 353.64480591]
[74.00401306 339.74948120]
[73.74427795 323.41885376]
[81.79372406 309.09979248]
[96.04212189 300.73901367]
[95.77739716 285.74133301]
[95.51266479 270.74368286]
[95.24794006 255.74601746]
[94.98321533 240.74835205]
[87.02249908 228.15960693]
[94.51504517 214.22503662]
[94.25032043 199.22737122]
[93.98558807 184.22970581]
[93.72086334 169.23204041]
[93.45613861 154.23437500]
[93.19140625 139.23670959]
[92.92668152 124.23905182]
[75.35696411 115.91835022]
[66.90170288 95.34214783]
[75.33176422 71.74046326]
[68.92591858 58.17708588]
[62.52006912 44.61371231]
[56.11422348 31.05033684]
[49.70837784 17.48696136]
[43.30253220 3.92358685]
[36.89668274 -9.63978767]
[30.49083710 -23.20316315]
[24.08499146 -36.76653671]
[17.67914391 -50.32991028]
[11.27329731 -63.89328766]
[4.86745119 -77.45665741]
[-10.39553261 -77.52059174]
[-24.11550713 -84.20827484]
[-33.56835938 -96.19185638]
[-36.87722397 -111.09199524]
[-33.38511658 -125.95025635]
[-23.78540421 -137.81652832]
[-9.98411179 -144.33473206]
[5.27850151 -144.21069336]
[18.97203255 -137.46903992]
[28.37762260 -125.44832611]
[31.62778473 -110.53527069]
[28.07719421 -95.69087982]
[18.43082619 -83.86251068]
[24.83667183 -70.29913330]
[31.24251938 -56.73575974]
[37.64836502 -43.17238235]
[44.05421066 -29.60900879]
[50.46006012 -16.04563522]
[56.86590576 -2.48225975]
[63.27175140 11.08111477]
[69.67759705 24.64448929]
[76.08344269 38.20786285]
[82.48928833 51.77124023]
[88.89514160 65.33460999]
[96.34584045 66.19313812]
[105.28351593 54.14664841]
[111.24723816 67.91017914]
[118.69793701 68.76869965]
[128.02069092 57.01768494]
[137.34344482 45.26667023]
[146.66618347 33.51565552]
[155.98893738 21.76463890]
[165.31167603 10.01362419]
[167.82731628 -5.60630512]
[181.79893494 -10.76800251]
[191.12167358 -22.51901817]
[196.22924805 -38.68531036]
[213.17767334 -38.25261688]
[217.45368958 -21.84676170]
[202.87269592 -13.19626999]
[193.54994202 -1.44525445]
[191.70114136 13.33416367]
[177.06269836 19.33637238]
[167.73994446 31.08738708]
[158.41720581 42.83840179]
[149.09445190 54.58942032]
[139.77169800 66.34043121]
[130.44895935 78.09144592]
[133.42440796 100.04631042]
[123.76604462 117.20023346]
[107.92434692 123.97432709]
[108.18907166 138.97198486]
[108.45379639 153.96965027]
[108.71852875 168.96731567]
[108.98325348 183.96498108]
[109.24797821 198.96264648]
[109.51271057 213.96031189]
[117.49235535 227.62178040]
[109.98088074 240.48362732]
[110.24560547 255.48127747]
[110.51033020 270.47894287]
[110.77505493 285.47662354]
[111.03978729 300.47427368]
[123.62412262 306.61886597]
[132.28681946 317.53805542]
[135.37857056 331.06100464]
[132.35043335 344.53048706]
[123.85030365 355.32492065]
[111.58534241 361.36871338]
[111.58534241 376.36871338]
[125.47904205 389.21353149]
[125.60154724 407.81607056]
[112.34020996 420.40393066]
[112.86958313 435.39459229]
[113.39895630 450.38522339]
[113.92832947 465.37588501]
[114.45770264 480.36654663]
[114.98707581 495.35720825]
[129.96348572 496.42453003]
[144.74159241 499.07772827]
[159.15396118 503.28674316]
[173.03729248 509.00384521]
[186.23425293 516.16430664]
[198.59532166 524.68701172]
[209.98045349 534.47528076]
[220.26062012 545.41833496]
[229.31935120 557.39215088]
[237.05401611 570.26098633]
[243.37696838 583.87908936]
[248.21655273 598.09210205]
[251.51792908 612.73907471]
[253.24371338 627.65393066]
[253.37434387 642.66778564]
[251.90834045 657.61041260]
[248.86230469 672.31256104]
[244.27075195 686.60766602]
[238.18571472 700.33374023]
[230.67613220 713.33520508]
[221.82710266 725.46478271]
[211.73889160 736.58502197]
[200.52580261 746.56994629]
[188.31489563 755.30645752]
[175.24452209 762.69543457]
[161.46278381 768.65325928]
[147.12582397 773.11242676]
[132.39611816 776.02233887]
[117.44054413 777.35009766]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 148]
[29 147]
[30 146]
[31 145]
[32 144]
[33 143]
[38 140]
[39 139]
[44 133]
[45 132]
[46 131]
[47 130]
[48 129]
[50 127]
[51 126]
[52 125]
[53 124]
[54 123]
[55 122]
[56 121]
[59 94]
[60 93]
[61 92]
[62 91]
[63 90]
[64 89]
[65 88]
[66 87]
[67 86]
[68 85]
[69 84]
[70 83]
[98 118]
[99 117]
[100 116]
[101 115]
[102 114]
[103 113]
[105 111]
[106 110]
] def

init

% Start Annotations
28 148 0.0 1 colorpair
29 147 0.0 1 colorpair
30 146 0.0 1 colorpair
31 145 0.0 1 colorpair
32 144 0.0 1 colorpair
33 143 0.0 1 colorpair
38 140 0.0 1 colorpair
39 139 0.0 1 colorpair
44 133 0.0 1 colorpair
45 132 0.0 1 colorpair
46 131 0.0 1 colorpair
47 130 0.0 1 colorpair
48 129 0.0 1 colorpair
50 127 0.0 1 colorpair
51 126 0.0 1 colorpair
52 125 0.0 1 colorpair
53 124 0.0 1 colorpair
54 123 0.0 1 colorpair
55 122 0.0 1 colorpair
56 121 0.0 0.2 colorpair
59 94 0.0 1 colorpair
60 93 0.0 1 colorpair
61 92 0.0 1 colorpair
62 91 0.0 1 colorpair
63 90 0.0 1 colorpair
64 89 0.0 1 colorpair
65 88 0.0 1 colorpair
66 87 0.16 1 colorpair
67 86 0.0 1 colorpair
68 85 0.0 1 colorpair
69 84 0.0 1 colorpair
70 83 0.0 1 colorpair
98 118 0.0 1 colorpair
99 117 0.0 0.2 colorpair
100 116 0.0 1 colorpair
101 115 0.0 1 colorpair
102 114 0.16 1 colorpair
103 113 0.0 1 colorpair
105 111 0.0 1 colorpair
106 110 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
56 121 2 gmark
87 cmark
99 117 2 gmark
102 cmark
114 cmark

% End Annotations
showpage
end
%%EOF
