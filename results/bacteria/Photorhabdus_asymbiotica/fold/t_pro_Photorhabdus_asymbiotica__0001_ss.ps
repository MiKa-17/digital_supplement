%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 07:09:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______________________UGAAGCCGCAAAAAAUCGUAAUAUUUAGUUUGAUCGUUAUUUGUGUGACGUUACUCUUAUUCACAUGGAUAACAAGAGGUUCACUCUGUAAACUCCAUUUCAAACAAGGUAAUACGGAGGUUGCGGCAAUCAUGGCUUACGAAUCCAGCAAU___\
) } def
/len { sequence length } bind def

/coor [
[110.81414795 777.75665283]
[96.23010254 774.18328857]
[82.12768555 769.02728271]
[68.67807770 762.35107422]
[56.04455566 754.23583984]
[44.38047028 744.78002930]
[33.82741928 734.09844971]
[24.51350021 722.32073975]
[16.55178070 709.58990479]
[10.03890705 696.06048584]
[5.05393934 681.89666748]
[1.65739083 667.27044678]
[-0.10950746 652.35931396]
[-0.22530705 637.34436035]
[1.31139767 622.40777588]
[4.48195267 607.73089600]
[9.24787045 593.49188232]
[15.55129623 579.86358643]
[23.31571388 567.01147461]
[32.44686890 555.09149170]
[42.83391571 544.24841309]
[54.35077286 534.61383057]
[66.85762787 526.30468750]
[80.20265961 519.42187500]
[94.22387695 514.04895020]
[108.75106812 510.25106812]
[123.60789490 508.07437134]
[123.07852173 493.08370972]
[122.54914856 478.09304810]
[122.01978302 463.10241699]
[121.49040985 448.11175537]
[120.96103668 433.12109375]
[120.43166351 418.13043213]
[108.70294189 411.71762085]
[101.62423706 400.25082397]
[101.13972473 386.67538452]
[107.48329926 374.54107666]
[119.08941650 367.07385254]
[118.82469177 352.07620239]
[118.55996704 337.07852173]
[118.29523468 322.08087158]
[118.03050995 307.08319092]
[110.06979370 294.49447632]
[117.56233978 280.55990601]
[117.29761505 265.56222534]
[117.03288269 250.56455994]
[116.76815796 235.56689453]
[116.50343323 220.56924438]
[108.54271698 207.98049927]
[116.03526306 194.04592896]
[115.77053833 179.04826355]
[115.50580597 164.05059814]
[115.24108124 149.05293274]
[114.97635651 134.05526733]
[114.71162415 119.05760193]
[92.87429810 121.14662170]
[80.15425110 105.35079956]
[85.85901642 87.62077332]
[79.45317078 74.05739594]
[73.04732513 60.49402237]
[66.64147949 46.93064880]
[60.23563004 33.36727142]
[53.82978439 19.80389786]
[47.42393875 6.24052334]
[41.01809311 -7.32285118]
[34.61224365 -20.88622665]
[28.20639801 -34.44960022]
[21.80055237 -48.01297379]
[15.39470482 -61.57635117]
[8.98885822 -75.13972473]
[-6.27412510 -75.20365906]
[-19.99409866 -81.89133453]
[-29.44695282 -93.87492371]
[-32.75581741 -108.77506256]
[-29.26371002 -123.63332367]
[-19.66399765 -135.49958801]
[-5.86270475 -142.01780701]
[9.39990902 -141.89376831]
[23.09344101 -135.15211487]
[32.49903107 -123.13139343]
[35.74919128 -108.21833801]
[32.19860077 -93.37393951]
[22.55223274 -81.54557037]
[28.95808029 -67.98219299]
[35.36392593 -54.41882324]
[41.76977158 -40.85544586]
[48.17562103 -27.29207230]
[54.58146667 -13.72869778]
[60.98731232 -0.16532335]
[67.39315796 13.39805126]
[73.79900360 26.96142578]
[80.20484924 40.52479935]
[86.61070251 54.08817673]
[93.01654816 67.65155029]
[99.42239380 81.21492767]
[111.23285675 81.74436951]
[121.81436920 89.81385040]
[128.92906189 76.60849762]
[136.04374695 63.40315247]
[143.15843201 50.19780731]
[139.94807434 34.47924423]
[150.34587097 22.26181984]
[166.37551880 22.91769218]
[175.74043274 35.94373322]
[171.25666809 51.34748077]
[156.36378479 57.31249619]
[149.24909973 70.51784515]
[142.13439941 83.72319031]
[135.01971436 96.92853546]
[145.59739685 86.29309845]
[159.66079712 81.07572937]
[174.61563110 82.23889160]
[187.70318604 89.56800079]
[196.50920105 101.71106720]
[199.40922546 116.42806244]
[195.86831665 131.00413513]
[186.53962708 142.75044250]
[173.14405823 149.50013733]
[158.15266418 150.00811768]
[144.33090210 144.18066406]
[134.22850037 133.09277344]
[129.70928955 118.79287720]
[129.97401428 133.79054260]
[130.23873901 148.78820801]
[130.50347900 163.78587341]
[130.76820374 178.78353882]
[131.03292847 193.78120422]
[139.01257324 207.44267273]
[131.50109863 220.30450439]
[131.76582336 235.30216980]
[132.03054810 250.29983521]
[132.29527283 265.29751587]
[132.55999756 280.29516602]
[140.53965759 293.95663452]
[133.02816772 306.81848145]
[133.29290771 321.81613159]
[133.55763245 336.81381226]
[133.82235718 351.81146240]
[134.08708191 366.80914307]
[148.06668091 376.30548096]
[153.58721924 392.10260010]
[148.66409302 407.92221069]
[135.42231750 417.60107422]
[135.95169067 432.59173584]
[136.48106384 447.58236694]
[137.01043701 462.57302856]
[137.53981018 477.56369019]
[138.06918335 492.55435181]
[138.59855652 507.54501343]
[153.57191467 508.66827393]
[168.33081055 511.43194580]
[182.69610596 515.80249023]
[196.49340820 521.72680664]
[209.55522156 529.13305664]
[221.72300720 537.93121338]
[232.84904480 548.01464844]
[242.79826355 559.26080322]
[251.44992065 571.53320312]
[258.69897461 584.68286133]
[264.45742798 598.55023193]
[268.65536499 612.96691895]
[271.24185181 627.75787354]
[272.18548584 642.74365234]
[271.47479248 657.74224854]
[269.11843872 672.57165527]
[265.14498901 687.05175781]
[259.60269165 701.00695801]
[252.55882263 714.26770020]
[244.09889221 726.67303467]
[234.32559204 738.07238770]
[223.35755920 748.32745361]
[211.32795715 757.31359863]
[198.38278198 764.92187500]
[184.67919922 771.05987549]
[170.38354492 775.65307617]
[155.66935730 778.64575195]
[140.71525574 780.00152588]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 149]
[28 148]
[29 147]
[30 146]
[31 145]
[32 144]
[33 143]
[38 139]
[39 138]
[40 137]
[41 136]
[42 135]
[44 133]
[45 132]
[46 131]
[47 130]
[48 129]
[50 127]
[51 126]
[52 125]
[53 124]
[54 123]
[55 122]
[58 95]
[59 94]
[60 93]
[61 92]
[62 91]
[63 90]
[64 89]
[65 88]
[66 87]
[67 86]
[68 85]
[69 84]
[70 83]
[97 109]
[98 108]
[99 107]
[100 106]
] def

init

% Start Annotations
27 149 0.0 0.6 colorpair
28 148 0.0 1 colorpair
29 147 0.0 1 colorpair
30 146 0.0 1 colorpair
31 145 0.0 1 colorpair
32 144 0.0 1 colorpair
33 143 0.0 1 colorpair
38 139 0.0 1 colorpair
39 138 0.0 0.6 colorpair
40 137 0.0 1 colorpair
41 136 0.0 0.6 colorpair
42 135 0.0 1 colorpair
44 133 0.0 1 colorpair
45 132 0.0 1 colorpair
46 131 0.0 1 colorpair
47 130 0.0 1 colorpair
48 129 0.0 1 colorpair
50 127 0.0 1 colorpair
51 126 0.0 1 colorpair
52 125 0.0 1 colorpair
53 124 0.0 1 colorpair
54 123 0.0 1 colorpair
55 122 0.0 1 colorpair
58 95 0.0 0.6 colorpair
59 94 0.0 1 colorpair
60 93 0.0 1 colorpair
61 92 0.0 1 colorpair
62 91 0.0 1 colorpair
63 90 0.0 1 colorpair
64 89 0.0 1 colorpair
65 88 0.0 1 colorpair
66 87 0.16 1 colorpair
67 86 0.0 1 colorpair
68 85 0.0 1 colorpair
69 84 0.0 1 colorpair
70 83 0.0 1 colorpair
97 109 0.0 1 colorpair
98 108 0.0 1 colorpair
99 107 0.16 1 colorpair
100 106 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
27 149 1 gmark
39 138 1 gmark
41 136 1 gmark
58 95 1 gmark
87 cmark
99 cmark

% End Annotations
showpage
end
%%EOF
