%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 07:09:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__________GGUAAGAGGCUAAACUUAUGUUGAUAAGCAUUAGAAG_GGCCUCAAUUAGAUUCA__UAGAUCACAUGGGGCUUUCUUCUU____UCCGC_U__AA_____U_UAUACAAAGCUAGAGACAGAAA_GCCUCAAGCACC_________\
) } def
/len { sequence length } bind def

/coor [
[125.81902313 263.20501709]
[110.82028198 263.01098633]
[96.12071991 260.02383423]
[82.23586273 254.34838867]
[69.65264893 246.18367004]
[58.81237793 235.81599426]
[50.09521866 223.60899353]
[43.80688477 209.99073792]
[40.16790390 195.43882751]
[39.30590057 180.46362305]
[41.25110626 165.59028625]
[45.93529892 151.34042358]
[53.19420242 138.21380615]
[62.77325058 126.67076111]
[74.33650208 117.11611176]
[87.47152710 109.88794708]
[72.71106720 112.55791473]
[57.95060349 115.22788239]
[43.19013977 117.89785004]
[28.42967606 120.56781769]
[13.66921234 123.23778534]
[-0.07010534 135.46002197]
[-16.34470749 128.95707703]
[-31.04916954 131.91998291]
[-45.75362778 134.88290405]
[-60.45809174 137.84580994]
[-72.45803070 148.15657043]
[-86.46287537 143.08570862]
[-101.16733551 146.04861450]
[-115.87179565 149.01152039]
[-130.57624817 151.97444153]
[-145.28071594 154.93734741]
[-157.21887207 166.18069458]
[-172.84498596 161.20510864]
[-176.08427429 145.12907410]
[-163.60441589 134.49021912]
[-148.24362183 140.23289490]
[-133.53916931 137.26997375]
[-118.83470917 134.30706787]
[-104.13024139 131.34416199]
[-89.42578125 128.38124084]
[-78.47760010 118.28240204]
[-63.42100143 123.14134979]
[-48.71654129 120.17843628]
[-34.01208115 117.21552277]
[-19.30761909 114.25261688]
[-12.32574844 104.33254242]
[-0.05858372 101.76850891]
[10.99924374 108.47732544]
[25.75970650 105.80735779]
[40.52016830 103.13738251]
[55.28063202 100.46741486]
[70.04109955 97.79744720]
[84.80155945 95.12747955]
[88.04608917 88.36560059]
[74.52242279 81.87633514]
[81.01189423 68.35277557]
[94.53514099 74.84183502]
[97.77967072 68.07995605]
[90.62665558 54.89532852]
[83.47364807 41.71070099]
[76.32063293 28.52607155]
[69.16761780 15.34144402]
[62.01460648 2.15681577]
[47.75962067 -5.95042324]
[47.92378616 -22.34874916]
[62.33823013 -30.16897011]
[76.17460632 -21.36631203]
[75.19923401 -4.99619675]
[82.35224915 8.18843079]
[89.50526428 21.37305832]
[96.65827179 34.55768585]
[103.81128693 47.74231339]
[110.96429443 60.92694092]
[109.21752167 70.74358368]
[106.86358643 80.40113068]
[103.91112518 89.87109375]
[117.96062469 84.61643219]
[132.01013184 79.36177063]
[146.05963135 74.10710907]
[160.10913086 68.85244751]
[174.15863037 63.59778214]
[188.15519714 58.20370483]
[198.12821960 45.92162704]
[212.81202698 48.41868973]
[226.75427246 42.88573074]
[240.69651794 37.35277176]
[254.58308411 31.68147659]
[268.41256714 25.87240982]
[282.24206543 20.06334114]
[296.07153320 14.25427437]
[292.74041748 -0.41115332]
[292.00671387 -15.43223190]
[293.89276123 -30.35248756]
[298.34118652 -44.71851349]
[305.21682739 -58.09373856]
[314.31072998 -70.07170105]
[325.34658813 -80.28841400]
[337.98898315 -88.43340302]
[351.85375977 -94.25914001]
[366.51956177 -97.58859253]
[381.54074097 -98.32058716]
[396.46078491 -96.43287659]
[410.82629395 -91.98282623]
[424.20074463 -85.10565948]
[436.17767334 -76.01038361]
[446.39312744 -64.97337341]
[454.53668213 -52.33005142]
[460.36083984 -38.46461868]
[463.68862915 -23.79843521]
[464.41891479 -8.77718925]
[462.52951050 6.14263868]
[458.07785034 20.50765419]
[451.19915771 33.88131714]
[442.10253906 45.85722351]
[431.06436157 56.07143021]
[418.42010498 64.21354675]
[404.55401611 70.03614044]
[389.88745117 73.36226654]
[374.86611938 74.09085846]
[359.94653320 72.19976044]
[345.58200073 67.74645233]
[332.20913696 60.86625290]
[320.23425293 51.76825714]
[310.02130127 40.72893524]
[301.88061523 28.08376312]
[288.05111694 33.89282990]
[274.22164917 39.70189667]
[260.39215088 45.51096344]
[255.41600037 51.03096008]
[246.22947693 51.29502106]
[232.28723145 56.82798004]
[218.34498596 62.36093903]
[209.36920166 74.24726105]
[193.68815613 72.14595795]
[188.60325623 77.56592560]
[179.41329956 77.64728546]
[165.36380005 82.90194702]
[151.31428528 88.15660858]
[137.26478577 93.41127014]
[123.21528625 98.66593933]
[109.16578674 103.92060089]
[124.15724945 103.41465759]
[138.98016357 105.71270752]
[153.11470032 110.73415375]
[166.06515503 118.30290222]
[177.37733459 128.15351868]
[186.65454102 139.94052124]
[193.57139587 153.25054932]
[197.88536072 167.61682129]
[199.44511414 182.53550720]
[198.19596863 197.48339844]
[194.18171692 211.93629456]
[187.54315186 225.38729858]
[178.51309204 237.36468506]
[167.40823364 247.44842529]
[154.61799622 255.28488159]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 54]
[17 53]
[18 52]
[19 51]
[20 50]
[21 49]
[23 46]
[24 45]
[25 44]
[26 43]
[28 41]
[29 40]
[30 39]
[31 38]
[32 37]
[59 74]
[60 73]
[61 72]
[62 71]
[63 70]
[64 69]
[77 142]
[78 141]
[79 140]
[80 139]
[81 138]
[82 137]
[83 135]
[85 133]
[86 132]
[87 131]
[88 129]
[89 128]
[90 127]
[91 126]
] def

init

% Start Annotations
16 54 0.16 1 colorpair
17 53 0.0 0.6 colorpair
18 52 0.16 1 colorpair
19 51 0.0 1 colorpair
20 50 0.0 0.6 colorpair
21 49 0.16 0.6 colorpair
23 46 0.16 0.6 colorpair
24 45 0.32 1 colorpair
25 44 0.16 1 colorpair
26 43 0.0 0.6 colorpair
28 41 0.0 1 colorpair
29 40 0.0 0.6 colorpair
30 39 0.0 0.6 colorpair
31 38 0.0 0.6 colorpair
32 37 0.0 1 colorpair
59 74 0.16 0.6 colorpair
60 73 0.16 1 colorpair
61 72 0.0 1 colorpair
62 71 0.0 0.6 colorpair
63 70 0.0 1 colorpair
64 69 0.16 0.6 colorpair
77 142 0.0 0.6 colorpair
78 141 0.16 1 colorpair
79 140 0.0 1 colorpair
80 139 0.0 1 colorpair
81 138 0.16 0.6 colorpair
82 137 0.0 1 colorpair
83 135 0.0 1 colorpair
85 133 0.16 1 colorpair
86 132 0.16 0.6 colorpair
87 131 0.0 0.6 colorpair
88 129 0.16 1 colorpair
89 128 0.16 1 colorpair
90 127 0.16 1 colorpair
91 126 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
16 cmark
54 cmark
17 53 1 gmark
18 cmark
52 cmark
20 50 1 gmark
21 49 1 gmark
49 cmark
23 46 1 gmark
23 cmark
46 cmark
24 cmark
45 cmark
25 cmark
26 43 1 gmark
29 40 1 gmark
30 39 1 gmark
31 38 1 gmark
59 74 1 gmark
59 cmark
74 cmark
60 cmark
73 cmark
62 71 1 gmark
64 69 1 gmark
64 cmark
69 cmark
77 142 1 gmark
141 cmark
81 138 1 gmark
138 cmark
85 cmark
133 cmark
86 132 1 gmark
86 cmark
87 131 1 gmark
88 cmark
129 cmark
89 cmark
90 cmark
127 cmark
91 126 1 gmark
126 cmark

% End Annotations
showpage
end
%%EOF
