%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 17:09:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___GAGUUGACUAUGGCUGACGCCAAUCUUAAAGCACGUCCAACCGUCACGGAACGAUUCGUGACCAUUCAGCAGUCAAUGCGCUACCGGCGCAGCUGGCGAAGUCCCACCAUCCCGCCGCUUUAUCCGUGGAUGAAGCUCGCCGGACGAUGGAUCGAGCAUGCAGGGUUUGAAGCAGGGCAGCGCGUCAAGAUCACCGUUGAACACGAGCGGCUUGUGAUUACCGCUGAA________\
) } def
/len { sequence length } bind def

/coor [
[135.35183716 359.35455322]
[140.87298584 345.40762329]
[150.72305298 334.09497070]
[163.77789307 326.70773315]
[178.54753113 324.08898926]
[193.34631348 326.53762817]
[206.48724365 333.77578735]
[198.64976501 320.98617554]
[190.81228638 308.19659424]
[182.97480774 295.40698242]
[175.13732910 282.61737061]
[167.63877869 282.76461792]
[152.64167786 283.05914307]
[145.14311218 283.20639038]
[137.81379700 296.29382324]
[130.48448181 309.38125610]
[123.15515900 322.46871948]
[123.91074371 338.85043335]
[109.95747375 347.46661377]
[95.64928436 339.45364380]
[95.70520782 323.05459595]
[110.06771851 315.13937378]
[117.39704132 302.05194092]
[124.72635651 288.96450806]
[132.05567932 275.87707520]
[120.50149536 285.44268799]
[105.56892395 286.86334229]
[92.41824341 279.64810181]
[85.59397125 266.29034424]
[87.45438385 251.40617371]
[97.35657501 240.13911438]
[111.87862396 236.38276672]
[126.00210571 241.43522644]
[134.84645081 253.55081177]
[130.96417236 239.06192017]
[120.19644928 228.77088928]
[124.09835815 213.43838501]
[120.12133026 198.97521973]
[116.04972076 184.53839111]
[111.97811127 170.10156250]
[107.90650940 155.66473389]
[91.54454803 155.58399963]
[75.89870453 150.79570007]
[62.29406357 141.70536804]
[51.88284683 129.08288574]
[45.54680634 113.99730682]
[30.65077782 115.76036835]
[15.75475216 117.52342987]
[0.85872501 119.28649139]
[-14.03730202 121.04955292]
[-28.93332863 122.81261444]
[-43.82935715 124.57567596]
[-58.72538376 126.33873749]
[-71.53436279 136.57894897]
[-86.70651245 130.35498047]
[-88.63402557 114.06950378]
[-75.33404541 104.47562408]
[-60.48844528 111.44271088]
[-45.59241486 109.67964935]
[-30.69639015 107.91658783]
[-15.80036259 106.15352631]
[-0.90433598 104.39046478]
[13.99169064 102.62740326]
[28.88771820 100.86434174]
[43.78374481 99.10128021]
[44.77340698 89.45967102]
[47.40428162 80.13129425]
[51.59818268 71.39337158]
[39.81843185 62.10696030]
[28.03867722 52.82055283]
[12.55089283 54.48377609]
[0.73683590 44.89823151]
[-0.75335068 30.12274742]
[-12.53310490 20.83633804]
[-24.31285858 11.54992867]
[-36.09261322 2.26351929]
[-41.21977615 1.51987159]
[-45.16394806 -0.86770004]
[-47.49866104 -4.17827845]
[-48.14308167 -7.62604427]
[-59.54917145 -17.36776543]
[-70.95526123 -27.10948563]
[-82.36135101 -36.85120773]
[-93.76744080 -46.59292603]
[-105.17353058 -56.33464813]
[-121.14448547 -62.02367020]
[-120.09899139 -78.94535065]
[-103.54919434 -82.62510681]
[-95.43180847 -67.74073792]
[-84.02571869 -57.99901581]
[-72.61962891 -48.25729752]
[-61.21353912 -38.51557541]
[-49.80744934 -28.77385521]
[-38.40135956 -19.03213310]
[-26.80620384 -9.51623440]
[-15.02644920 -0.22982535]
[-3.24669552 9.05658436]
[8.53305817 18.34299278]
[23.24817276 16.34273720]
[35.32680511 25.59267044]
[37.32508469 41.04079819]
[49.10483932 50.32720566]
[60.88459396 59.61361694]
[70.84993744 51.92350769]
[82.27640533 46.64318848]
[94.59124756 44.03733063]
[107.17720032 44.23654556]
[111.05948639 29.74765778]
[114.94177246 15.25877094]
[111.03986359 -0.07373271]
[121.80757904 -10.36477280]
[117.90567017 -25.69727707]
[128.67338562 -35.98831558]
[132.55567932 -50.47720337]
[136.43795776 -64.96608734]
[132.53604126 -80.29859161]
[143.30377197 -90.58963776]
[147.18605042 -105.07852173]
[142.01417542 -122.76091003]
[154.91911316 -134.66563416]
[158.61140442 -149.20410156]
[162.30371094 -163.74255371]
[165.99600220 -178.28102112]
[169.68830872 -192.81948853]
[173.38059998 -207.35795593]
[177.07290649 -221.89640808]
[180.76519775 -236.43487549]
[175.79547119 -252.06285095]
[187.04325867 -263.99679565]
[202.93782043 -259.96011353]
[207.12818909 -244.10536194]
[195.30366516 -232.74258423]
[191.61137390 -218.20411682]
[187.91906738 -203.66564941]
[184.22676086 -189.12718201]
[180.53446960 -174.58872986]
[176.84216309 -160.05026245]
[173.14987183 -145.51179504]
[169.45756531 -130.97332764]
[175.36787415 -120.43308258]
[172.42512512 -108.30009460]
[161.67494202 -101.19623566]
[157.79264832 -86.70735168]
[161.97225952 -72.41118622]
[150.92684937 -61.08380508]
[147.04455566 -46.59491730]
[143.16227722 -32.10602951]
[147.34187317 -17.80986977]
[136.29646301 -6.48248720]
[140.47605896 7.81367445]
[129.43066406 19.14105606]
[125.54837799 33.62994385]
[121.66609192 48.11883163]
[136.51420593 57.24736023]
[147.85310364 70.48465729]
[161.55628967 64.38360596]
[175.25946045 58.28255463]
[188.96264648 52.18150330]
[202.66583252 46.08045578]
[216.36901855 39.97940445]
[220.50509644 24.89873123]
[233.39653015 16.04746056]
[248.95637512 17.60489464]
[259.83773804 28.83565903]
[260.90277100 44.43693161]
[251.64860535 57.04226685]
[236.44477844 60.69981384]
[222.47006226 53.68258667]
[208.76687622 59.78363800]
[195.06369019 65.88468933]
[181.36051941 71.98573303]
[167.65733337 78.08678436]
[153.95414734 84.18783569]
[156.22290039 100.24486542]
[153.81437683 116.28152466]
[146.92892456 130.96369934]
[136.13938904 143.06994629]
[122.34333801 151.59312439]
[126.41493988 166.02995300]
[130.48655701 180.46678162]
[134.55815125 194.90361023]
[139.88938904 202.29609680]
[138.58724976 209.55609131]
[149.63264465 220.88348389]
[145.45304871 235.17964172]
[149.33534241 249.66853333]
[187.92694092 274.77990723]
[195.76441956 287.56948853]
[203.60189819 300.35910034]
[211.43937683 313.14871216]
[219.27685547 325.93829346]
[226.79266357 329.17593384]
[230.92820740 335.25070190]
[231.09672546 341.76702881]
[241.13368225 352.91421509]
[251.17063904 364.06137085]
[266.15469360 369.13964844]
[268.92095947 383.77511597]
[278.95791626 394.92230225]
[293.94198608 400.00054932]
[296.70825195 414.63601685]
[306.74520874 425.78320312]
[316.78216553 436.93035889]
[331.76623535 442.00863647]
[334.53250122 456.64410400]
[344.56945801 467.79125977]
[354.60641479 478.93844604]
[364.64337158 490.08560181]
[374.68032837 501.23278809]
[384.71728516 512.37994385]
[399.80905151 520.10491943]
[396.56378174 536.74536133]
[379.67526245 538.23345947]
[373.57012939 522.41693115]
[363.53317261 511.26974487]
[353.49618530 500.12258911]
[343.45922852 488.97540283]
[333.42227173 477.82821655]
[323.38531494 466.68106079]
[309.11917114 462.40011597]
[305.63500977 446.96731567]
[295.59805298 435.82015991]
[285.56106567 424.67297363]
[271.29495239 420.39202881]
[267.81076050 404.95925903]
[257.77380371 393.81207275]
[243.50765991 389.53112793]
[240.02346802 374.09832764]
[229.98651123 362.95117188]
[219.94955444 351.80398560]
[223.15728760 366.45700073]
[221.30287170 381.34191895]
[214.59793091 394.75997925]
[203.80772400 405.17971802]
[190.16371155 411.41198730]
[175.22309875 412.74548340]
[160.69105530 409.02798462]
[148.22612000 400.68380737]
[139.25091553 388.66525269]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 191]
[8 190]
[9 189]
[10 188]
[11 187]
[14 25]
[15 24]
[16 23]
[17 22]
[34 186]
[35 185]
[37 183]
[38 181]
[39 180]
[40 179]
[41 178]
[46 65]
[47 64]
[48 63]
[49 62]
[50 61]
[51 60]
[52 59]
[53 58]
[68 103]
[69 102]
[70 101]
[73 98]
[74 97]
[75 96]
[76 95]
[80 94]
[81 93]
[82 92]
[83 91]
[84 90]
[85 89]
[107 153]
[108 152]
[109 151]
[111 149]
[113 147]
[114 146]
[115 145]
[117 143]
[118 142]
[120 139]
[121 138]
[122 137]
[123 136]
[124 135]
[125 134]
[126 133]
[127 132]
[155 173]
[156 172]
[157 171]
[158 170]
[159 169]
[160 168]
[194 230]
[195 229]
[196 228]
[198 226]
[199 225]
[201 223]
[202 222]
[203 221]
[205 219]
[206 218]
[207 217]
[208 216]
[209 215]
[210 214]
] def

init

% Start Annotations
7 191 0.0 1 colorpair
8 190 0.0 1 colorpair
9 189 0.0 1 colorpair
10 188 0.0 1 colorpair
11 187 0.0 1 colorpair
14 25 0.0 1 colorpair
15 24 0.0 1 colorpair
16 23 0.0 1 colorpair
17 22 0.0 1 colorpair
34 186 0.0 1 colorpair
35 185 0.0 1 colorpair
37 183 0.0 1 colorpair
38 181 0.0 1 colorpair
39 180 0.0 1 colorpair
40 179 0.0 1 colorpair
41 178 0.0 1 colorpair
46 65 0.0 1 colorpair
47 64 0.0 1 colorpair
48 63 0.0 1 colorpair
49 62 0.0 1 colorpair
50 61 0.0 1 colorpair
51 60 0.0 1 colorpair
52 59 0.0 1 colorpair
53 58 0.0 1 colorpair
68 103 0.0 1 colorpair
69 102 0.0 1 colorpair
70 101 0.0 1 colorpair
73 98 0.0 1 colorpair
74 97 0.0 1 colorpair
75 96 0.0 1 colorpair
76 95 0.0 1 colorpair
80 94 0.0 1 colorpair
81 93 0.0 1 colorpair
82 92 0.0 1 colorpair
83 91 0.0 1 colorpair
84 90 0.0 1 colorpair
85 89 0.0 1 colorpair
107 153 0.0 1 colorpair
108 152 0.0 1 colorpair
109 151 0.0 1 colorpair
111 149 0.0 1 colorpair
113 147 0.0 1 colorpair
114 146 0.0 1 colorpair
115 145 0.0 1 colorpair
117 143 0.0 1 colorpair
118 142 0.0 1 colorpair
120 139 0.0 1 colorpair
121 138 0.0 1 colorpair
122 137 0.0 1 colorpair
123 136 0.0 1 colorpair
124 135 0.0 1 colorpair
125 134 0.0 1 colorpair
126 133 0.0 1 colorpair
127 132 0.0 1 colorpair
155 173 0.0 1 colorpair
156 172 0.0 1 colorpair
157 171 0.0 1 colorpair
158 170 0.0 1 colorpair
159 169 0.0 1 colorpair
160 168 0.0 1 colorpair
194 230 0.0 1 colorpair
195 229 0.0 1 colorpair
196 228 0.0 1 colorpair
198 226 0.0 1 colorpair
199 225 0.0 1 colorpair
201 223 0.0 1 colorpair
202 222 0.0 1 colorpair
203 221 0.0 1 colorpair
205 219 0.0 1 colorpair
206 218 0.0 1 colorpair
207 217 0.0 1 colorpair
208 216 0.0 1 colorpair
209 215 0.0 1 colorpair
210 214 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
