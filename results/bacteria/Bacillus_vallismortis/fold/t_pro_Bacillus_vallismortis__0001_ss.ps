%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 17:08:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCUUGAGAAGGUGGGUAUCUUAGUUGCUUUCCUUAUCUCAUUAACAGUUCUUACUAUCAACUGCCUCACAAUAGUUGAGAAGGUAAGAAACUUAAUGAAUGGGACAAGC\
) } def
/len { sequence length } bind def

/coor [
[94.37495422 200.16328430]
[81.42154694 189.22500610]
[88.34648132 173.74981689]
[89.18753815 158.77342224]
[90.02859497 143.79701233]
[90.86965179 128.82061768]
[91.71070862 113.84420776]
[85.84696960 109.16803741]
[74.11949921 99.81568909]
[68.25576019 95.13951874]
[53.84200287 99.29205322]
[39.42824554 103.44458008]
[25.01448441 107.59711456]
[13.89561939 118.85240173]
[-0.47619635 114.94085693]
[-14.88995647 119.09338379]
[-29.30371666 123.24591827]
[-43.71747589 127.39845276]
[-58.13123703 131.55097961]
[-64.30799103 145.91697693]
[-78.29712677 152.90541077]
[-93.49339294 149.21656799]
[-102.72157288 136.59219360]
[-101.62441254 120.99314880]
[-90.71995544 109.78481293]
[-75.15694427 108.25942993]
[-62.28376770 117.13722229]
[-47.87001038 112.98469543]
[-33.45624924 108.83216095]
[-19.04248810 104.67962646]
[-4.62872887 100.52709198]
[5.45916748 89.56882477]
[20.86195183 93.18335724]
[35.27571106 89.03082275]
[49.68947220 84.87828827]
[64.10323334 80.72575378]
[91.19814301 75.56783295]
[104.21949005 89.63111115]
[115.94696045 80.27876282]
[127.67443848 70.92641449]
[139.40190125 61.57406998]
[151.12937927 52.22172165]
[162.85685730 42.86937714]
[174.58432007 33.51702881]
[173.17272949 15.56123161]
[182.64506531 0.42500669]
[199.12205505 -6.04143810]
[216.06086731 -1.46903586]
[227.24549866 -11.46423435]
[238.43013000 -21.45943260]
[249.61476135 -31.45463181]
[260.65811157 -41.60570526]
[271.55801392 -51.91065979]
[282.45791626 -62.21561432]
[293.35781860 -72.52056885]
[304.25772095 -82.82552338]
[315.15765381 -93.13047791]
[319.87863159 -112.62960815]
[338.71179199 -116.61843109]
[349.01675415 -127.51834106]
[359.32171631 -138.41824341]
[369.62667847 -149.31814575]
[379.93161011 -160.21804810]
[390.23657227 -171.11795044]
[400.54153442 -182.01786804]
[397.55297852 -197.24443054]
[404.11566162 -211.30538940]
[417.70611572 -218.79403687]
[433.09848022 -216.83081055]
[444.37411499 -206.17062378]
[447.19732666 -190.91253662]
[440.48248291 -176.92359924]
[426.81161499 -169.58282471]
[411.44143677 -171.71290588]
[401.13647461 -160.81300354]
[390.83151245 -149.91310120]
[380.52658081 -139.01319885]
[370.22161865 -128.11329651]
[359.91665649 -117.21338654]
[349.61169434 -106.31347656]
[350.81192017 -95.98929596]
[345.96057129 -86.54763794]
[336.48101807 -81.29720306]
[325.46258545 -82.23056793]
[314.56268311 -71.92562103]
[303.66278076 -61.62066269]
[292.76287842 -51.31570816]
[281.86297607 -41.01075745]
[270.96307373 -30.70580101]
[268.22537231 -23.72380829]
[259.60995483 -20.26999855]
[248.42532349 -10.27480030]
[237.24069214 -0.27960211]
[226.05606079 9.71559620]
[229.07600403 21.63988113]
[226.66940308 33.77706909]
[219.24124146 43.76359558]
[208.18052673 49.62743378]
[195.60087585 50.17737579]
[183.93667603 45.24450302]
[172.20919800 54.59684753]
[160.48171997 63.94919586]
[148.75425720 73.30154419]
[137.02677917 82.65389252]
[125.29930878 92.00623322]
[113.57183838 101.35858154]
[106.68711090 114.68526459]
[105.84605408 129.66166687]
[105.00499725 144.63807678]
[104.16394043 159.61447144]
[103.32288361 174.59088135]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 111]
[4 110]
[5 109]
[6 108]
[7 107]
[10 36]
[11 35]
[12 34]
[13 33]
[15 31]
[16 30]
[17 29]
[18 28]
[19 27]
[38 106]
[39 105]
[40 104]
[41 103]
[42 102]
[43 101]
[44 100]
[48 94]
[49 93]
[50 92]
[51 91]
[52 89]
[53 88]
[54 87]
[55 86]
[56 85]
[57 84]
[59 80]
[60 79]
[61 78]
[62 77]
[63 76]
[64 75]
[65 74]
] def

init

% Start Annotations
3 111 0.0 1 colorpair
4 110 0.0 1 colorpair
5 109 0.0 1 colorpair
6 108 0.0 1 colorpair
7 107 0.0 1 colorpair
10 36 0.0 1 colorpair
11 35 0.0 1 colorpair
12 34 0.0 1 colorpair
13 33 0.0 1 colorpair
15 31 0.0 1 colorpair
16 30 0.0 1 colorpair
17 29 0.0 1 colorpair
18 28 0.0 1 colorpair
19 27 0.0 1 colorpair
38 106 0.0 1 colorpair
39 105 0.0 1 colorpair
40 104 0.0 1 colorpair
41 103 0.0 1 colorpair
42 102 0.0 1 colorpair
43 101 0.0 1 colorpair
44 100 0.0 1 colorpair
48 94 0.0 1 colorpair
49 93 0.0 1 colorpair
50 92 0.0 1 colorpair
51 91 0.0 1 colorpair
52 89 0.0 1 colorpair
53 88 0.0 1 colorpair
54 87 0.0 1 colorpair
55 86 0.0 1 colorpair
56 85 0.0 1 colorpair
57 84 0.0 1 colorpair
59 80 0.0 1 colorpair
60 79 0.0 1 colorpair
61 78 0.0 1 colorpair
62 77 0.0 1 colorpair
63 76 0.0 1 colorpair
64 75 0.0 1 colorpair
65 74 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
