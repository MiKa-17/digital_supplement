%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Mar  9 03:50:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_________________________________________________________________________________GUGGGCUUAAGACUAGCACCCGUGGGA____UG________AUGAGCUCCAUAAUUCCGACGUACGA_________________GGGCC_CUCUC______UCU______________________________________________________________________\
_____________________________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50289154 92.17725372]
[62.51620102 91.53189850]
[47.54686356 90.56423950]
[32.60181046 89.27472687]
[17.68796349 87.66394806]
[2.81222749 85.73265839]
[-12.01851177 83.48174286]
[-26.79738617 80.91225433]
[-41.51755524 78.02537537]
[-56.17219925 74.82244110]
[-70.75453949 71.30493927]
[-85.25782013 67.47450256]
[-99.67532349 63.33288956]
[-114.00038147 58.88203049]
[-128.22636414 54.12398148]
[-142.34666443 49.06094742]
[-156.35476685 43.69527054]
[-170.24418640 38.02943802]
[-184.00846863 32.06607056]
[-197.64126587 25.80792809]
[-211.13626099 19.25791168]
[-224.48718262 12.41905117]
[-237.68788147 5.29451370]
[-250.73223877 -2.11240172]
[-263.61419678 -9.79826641]
[-276.32778931 -17.75952148]
[-288.86715698 -25.99247932]
[-301.22650146 -34.49333191]
[-313.40005493 -43.25813675]
[-325.38220215 -52.28284454]
[-337.16741943 -61.56327057]
[-348.75021362 -71.09512329]
[-360.12524414 -80.87397766]
[-371.28726196 -90.89532471]
[-382.23104858 -101.15451050]
[-392.95156860 -111.64678955]
[-403.44384766 -122.36730194]
[-413.70303345 -133.31108093]
[-423.72439575 -144.47306824]
[-433.50323486 -155.84809875]
[-443.03509521 -167.43089294]
[-452.31555176 -179.21609497]
[-461.34024048 -191.19824219]
[-470.10507202 -203.37179565]
[-478.60592651 -215.73112488]
[-486.83889771 -228.27047729]
[-494.80017090 -240.98408508]
[-502.48602295 -253.86604309]
[-509.89294434 -266.91040039]
[-517.01751709 -280.11108398]
[-523.85638428 -293.46200562]
[-530.40637207 -306.95700073]
[-536.66455078 -320.58978271]
[-542.62792969 -334.35406494]
[-548.29376221 -348.24346924]
[-553.65942383 -362.25158691]
[-558.72247314 -376.37188721]
[-563.48052979 -390.59783936]
[-567.93139648 -404.92291260]
[-572.07305908 -419.34042358]
[-575.90350342 -433.84368896]
[-579.42102051 -448.42602539]
[-582.62396240 -463.08065796]
[-585.51080322 -477.80084229]
[-588.08032227 -492.57971191]
[-590.33123779 -507.41046143]
[-592.26257324 -522.28619385]
[-593.87335205 -537.20001221]
[-595.16284180 -552.14508057]
[-596.13055420 -567.11444092]
[-596.77587891 -582.10113525]
[-597.09863281 -597.09820557]
[-597.09863281 -612.09881592]
[-596.77587891 -627.09588623]
[-596.13055420 -642.08258057]
[-595.16290283 -657.05194092]
[-593.87335205 -671.99700928]
[-592.26257324 -686.91082764]
[-590.33129883 -701.78656006]
[-588.08038330 -716.61730957]
[-585.51086426 -731.39617920]
[-582.62402344 -746.11633301]
[-579.42108154 -760.77099609]
[-575.90356445 -775.35333252]
[-572.07312012 -789.85662842]
[-567.93151855 -804.27410889]
[-563.48065186 -818.59918213]
[-558.72259521 -832.82513428]
[-553.65954590 -846.94543457]
[-548.29388428 -860.95355225]
[-542.62805176 -874.84295654]
[-536.66467285 -888.60723877]
[-530.40649414 -902.24005127]
[-523.85650635 -915.73504639]
[-517.01763916 -929.08593750]
[-509.89309692 -942.28668213]
[-502.48617554 -955.33099365]
[-494.80032349 -968.21295166]
[-486.83905029 -980.92657471]
[-478.60607910 -993.46594238]
[-470.10522461 -1005.82525635]
[-461.34042358 -1017.99884033]
[-452.31570435 -1029.98095703]
[-443.03527832 -1041.76623535]
[-433.50344849 -1053.34899902]
[-423.72457886 -1064.72399902]
[-413.70321655 -1075.88598633]
[-403.44403076 -1086.82983398]
[-392.95175171 -1097.55029297]
[-382.23126221 -1108.04260254]
[-371.28747559 -1118.30175781]
[-360.12545776 -1128.32312012]
[-348.75045776 -1138.10205078]
[-337.16766357 -1147.63378906]
[-325.38244629 -1156.91430664]
[-313.40029907 -1165.93896484]
[-301.22674561 -1174.70385742]
[-288.86740112 -1183.20471191]
[-276.32803345 -1191.43762207]
[-263.61444092 -1199.39892578]
[-250.73248291 -1207.08471680]
[-237.68814087 -1214.49169922]
[-224.48744202 -1221.61621094]
[-211.13652039 -1228.45507812]
[-197.64152527 -1235.00512695]
[-184.00874329 -1241.26330566]
[-170.24444580 -1247.22668457]
[-156.35504150 -1252.89245605]
[-142.34693909 -1258.25817871]
[-128.22663879 -1263.32116699]
[-114.00065613 -1268.07922363]
[-99.67560577 -1272.53015137]
[-85.25810242 -1276.67175293]
[-70.75482178 -1280.50219727]
[-56.17248154 -1284.01965332]
[-41.51783752 -1287.22265625]
[-26.79767227 -1290.10949707]
[-12.01879787 -1292.67895508]
[2.81193995 -1294.92993164]
[17.68767548 -1296.86120605]
[32.60152054 -1298.47204590]
[47.54657364 -1299.76147461]
[62.51591110 -1300.72912598]
[77.50260162 -1301.37451172]
[92.49971008 -1301.69726562]
[107.50028992 -1301.69726562]
[122.49739838 -1301.37451172]
[137.48408508 -1300.72912598]
[152.45343018 -1299.76147461]
[167.39848328 -1298.47204590]
[182.31231689 -1296.86120605]
[197.18806458 -1294.92993164]
[212.01879883 -1292.67895508]
[226.79766846 -1290.10949707]
[241.51783752 -1287.22265625]
[256.17248535 -1284.01965332]
[270.75482178 -1280.50219727]
[285.25808716 -1276.67175293]
[299.67559814 -1272.53015137]
[314.00067139 -1268.07922363]
[328.22662354 -1263.32116699]
[342.34695435 -1258.25817871]
[356.35504150 -1252.89245605]
[370.24444580 -1247.22668457]
[384.00872803 -1241.26330566]
[397.64154053 -1235.00512695]
[411.13650513 -1228.45507812]
[424.48745728 -1221.61621094]
[437.68814087 -1214.49169922]
[450.73248291 -1207.08471680]
[463.61444092 -1199.39892578]
[476.32803345 -1191.43762207]
[488.86740112 -1183.20471191]
[501.22674561 -1174.70385742]
[513.40026855 -1165.93896484]
[525.38244629 -1156.91430664]
[537.16766357 -1147.63378906]
[548.75042725 -1138.10205078]
[560.12548828 -1128.32312012]
[571.28747559 -1118.30175781]
[582.23126221 -1108.04260254]
[592.95178223 -1097.55029297]
[603.44403076 -1086.82983398]
[613.70324707 -1075.88598633]
[623.72454834 -1064.72399902]
[633.50341797 -1053.34899902]
[643.03527832 -1041.76623535]
[652.31573486 -1029.98095703]
[661.34045410 -1017.99884033]
[670.10522461 -1005.82525635]
[678.60607910 -993.46594238]
[686.83905029 -980.92657471]
[694.80029297 -968.21295166]
[702.48620605 -955.33099365]
[709.89306641 -942.28668213]
[717.01763916 -929.08593750]
[723.85650635 -915.73504639]
[730.40649414 -902.24005127]
[736.66467285 -888.60723877]
[742.62805176 -874.84295654]
[748.29388428 -860.95355225]
[753.65954590 -846.94543457]
[758.72259521 -832.82513428]
[763.48065186 -818.59918213]
[767.93151855 -804.27410889]
[772.07312012 -789.85662842]
[775.90356445 -775.35333252]
[779.42108154 -760.77099609]
[782.62402344 -746.11633301]
[785.51086426 -731.39617920]
[788.08038330 -716.61730957]
[790.33129883 -701.78656006]
[792.26257324 -686.91082764]
[793.87335205 -671.99700928]
[795.16290283 -657.05194092]
[796.13055420 -642.08258057]
[796.77587891 -627.09588623]
[797.09863281 -612.09881592]
[797.09863281 -597.09820557]
[796.77587891 -582.10113525]
[796.13055420 -567.11444092]
[795.16284180 -552.14508057]
[793.87335205 -537.20001221]
[792.26257324 -522.28619385]
[790.33123779 -507.41046143]
[788.08032227 -492.57971191]
[785.51080322 -477.80084229]
[782.62396240 -463.08065796]
[779.42102051 -448.42602539]
[775.90350342 -433.84368896]
[772.07305908 -419.34042358]
[767.93139648 -404.92291260]
[763.48052979 -390.59783936]
[758.72247314 -376.37188721]
[753.65942383 -362.25158691]
[748.29376221 -348.24346924]
[742.62792969 -334.35406494]
[736.66455078 -320.58978271]
[730.40637207 -306.95700073]
[723.85638428 -293.46200562]
[717.01751709 -280.11108398]
[709.89294434 -266.91040039]
[702.48602295 -253.86604309]
[694.80017090 -240.98408508]
[686.83886719 -228.27047729]
[678.60595703 -215.73112488]
[670.10504150 -203.37179565]
[661.34027100 -191.19824219]
[652.31555176 -179.21609497]
[643.03509521 -167.43089294]
[633.50323486 -155.84809875]
[623.72436523 -144.47306824]
[613.70300293 -133.31108093]
[603.44384766 -122.36730194]
[592.95153809 -111.64678955]
[582.23101807 -101.15451050]
[571.28723145 -90.89532471]
[560.12524414 -80.87397766]
[548.75024414 -71.09512329]
[537.16741943 -61.56327057]
[525.38220215 -52.28284454]
[513.40008545 -43.25813675]
[501.22650146 -34.49333191]
[488.86715698 -25.99247932]
[476.32778931 -17.75952148]
[463.61419678 -9.79826641]
[450.73223877 -2.11240172]
[437.68789673 5.29451370]
[424.48718262 12.41905117]
[411.13626099 19.25791168]
[397.64126587 25.80792809]
[384.00848389 32.06607056]
[370.24417114 38.02943802]
[356.35476685 43.69527054]
[342.34667969 49.06094742]
[328.22634888 54.12398148]
[314.00039673 58.88203049]
[299.67532349 63.33288956]
[285.25781250 67.47450256]
[270.75454712 71.30493927]
[256.17221069 74.82244110]
[241.51754761 78.02537537]
[226.79737854 80.91225433]
[212.01850891 83.48174286]
[197.18777466 85.73265839]
[182.31204224 87.66394806]
[167.39819336 89.27472687]
[152.45314026 90.56423950]
[137.48379517 91.53189850]
[122.49710846 92.17725372]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
