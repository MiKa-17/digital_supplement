%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Dec 16 19:22:37 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__UG____U_A___UU_UC_UUUAA_UAAG_AAAU__GCAU___AA___AA_U__AA_A__A_____A_____GACC_A__GGGUGCUG_CC_AACACC_C_CGG_CUC______U_G_UAC_AA_A_AA_GC_UG_CCCAUC__AAA_GG_____G_CU_U__GCU_C___A_____________U___GU_U___U_____U_________U__UCA___UG____A_U__AGAC_CUAUC_C_C_UUC____\
A_G__GUUC_C___C_A_GG_C_UC____AA_GGG__A_G_GUCUAUUU__\
) } def
/len { sequence length } bind def

/coor [
[697.21313477 994.06250000]
[682.30596924 992.39123535]
[667.43859863 990.39630127]
[652.61816406 988.07861328]
[637.85156250 985.43927002]
[623.14587402 982.47961426]
[608.50793457 979.20086670]
[593.94482422 975.60473633]
[579.46325684 971.69287109]
[565.07019043 967.46704102]
[550.77239990 962.92938232]
[536.57659912 958.08190918]
[522.48956299 952.92700195]
[508.51791382 947.46710205]
[494.66827393 941.70471191]
[480.94717407 935.64263916]
[467.36108398 929.28369141]
[453.91644287 922.63085938]
[440.61962891 915.68737793]
[427.47689819 908.45642090]
[414.49447632 900.94152832]
[401.67846680 893.14611816]
[389.03497314 885.07397461]
[376.56994629 876.72882080]
[364.28930664 868.11468506]
[352.19879150 859.23565674]
[340.30419922 850.09582520]
[328.61108398 840.69958496]
[317.12503052 831.05139160]
[305.85140991 821.15576172]
[294.79559326 811.01739502]
[283.96279907 800.64105225]
[273.35812378 790.03167725]
[262.98660278 779.19427490]
[252.85311890 768.13397217]
[242.96249390 756.85595703]
[233.31936646 745.36566162]
[223.92832947 733.66839600]
[214.79379272 721.76971436]
[205.92007446 709.67529297]
[197.31140137 697.39080811]
[188.97180176 684.92211914]
[180.90524292 672.27502441]
[173.11553955 659.45556641]
[165.60635376 646.46984863]
[158.38124084 633.32385254]
[151.44363403 620.02398682]
[144.79678345 606.57641602]
[138.44386292 592.98748779]
[132.38784790 579.26373291]
[126.63161469 565.41149902]
[121.17787933 551.43743896]
[116.02922058 537.34814453]
[111.18807220 523.15020752]
[106.65672302 508.85037231]
[102.43730927 494.45544434]
[98.53183746 479.97216797]
[94.94214630 465.40744019]
[91.66992950 450.76809692]
[88.71673584 436.06106567]
[86.08396912 421.29330444]
[83.77285767 406.47183228]
[81.78450775 391.60360718]
[80.11985779 376.69564819]
[78.77968597 361.75503540]
[77.76463318 346.78884888]
[77.07517242 331.80410767]
[76.71163940 316.80792236]
[76.67419434 301.80737305]
[76.96286774 286.80953979]
[77.57751465 271.82156372]
[78.51784515 256.85046387]
[79.78341675 241.90335083]
[81.37363434 226.98728943]
[83.28774261 212.10931396]
[85.52483368 197.27647400]
[88.08385468 182.49577332]
[90.96359253 167.77420044]
[94.16268921 153.11869812]
[97.67963409 138.53620911]
[101.51275635 124.03363037]
[105.66025543 109.61780548]
[91.31593323 105.23141479]
[76.94935608 100.91847229]
[67.04859924 112.48976898]
[53.29454422 119.02780151]
[38.07017136 119.39983368]
[24.01319695 113.54138947]
[13.55907154 102.46749878]
[8.51903820 88.09676361]
[9.76631260 72.91901398]
[17.08479691 59.56387329]
[29.20652008 50.34521103]
[44.03131866 46.86021423]
[58.99070740 49.71267700]
[71.49288177 58.40839386]
[79.37176514 71.44078064]
[81.26229858 86.55189514]
[95.62887573 90.86483765]
[103.59655762 89.98264313]
[110.11998749 95.29611206]
[114.89018250 81.07419586]
[119.96843719 66.95933533]
[125.35233307 52.95821381]
[131.03933716 39.07744598]
[137.02674866 25.32358742]
[143.31175232 11.70314217]
[149.89137268 -1.77745104]
[156.76249695 -15.11182117]
[163.92189026 -28.29366684]
[171.36613464 -41.31675339]
[179.09175110 -54.17493057]
[187.09506226 -66.86212158]
[195.37229919 -79.37232208]
[203.91954041 -91.69963074]
[212.73275757 -103.83820343]
[221.80776978 -115.78231812]
[231.14030457 -127.52632904]
[240.72592163 -139.06468201]
[250.56013489 -150.39190674]
[260.63824463 -161.50268555]
[270.95553589 -172.39172363]
[281.50711060 -183.05390930]
[292.28796387 -193.48419189]
[303.29302979 -203.67764282]
[314.51708984 -213.62944031]
[325.95486450 -223.33486938]
[337.60089111 -232.78936768]
[349.44973755 -241.98844910]
[361.49572754 -250.92776489]
[373.73324585 -259.60308838]
[386.15643311 -268.01034546]
[398.75949097 -276.14553833]
[411.53637695 -284.00482178]
[424.48114014 -291.58447266]
[437.58761597 -298.88095093]
[450.84957886 -305.89074707]
[464.26083374 -312.61059570]
[477.81500244 -319.03729248]
[491.50567627 -325.16781616]
[505.32638550 -330.99926758]
[519.27056885 -336.52886963]
[533.33172607 -341.75405884]
[547.50311279 -346.67230225]
[561.77807617 -351.28131104]
[576.14990234 -355.57891846]
[590.61169434 -359.56304932]
[605.15673828 -363.23187256]
[619.77807617 -366.58361816]
[634.46881104 -369.61669922]
[649.22204590 -372.32971191]
[664.03076172 -374.72137451]
[678.88793945 -376.79049683]
[693.78662109 -378.53616333]
[708.71972656 -379.95755005]
[723.68017578 -381.05392456]
[738.66094971 -381.82482910]
[753.65496826 -382.26989746]
[768.65509033 -382.38885498]
[783.65423584 -382.18173218]
[798.64532471 -381.64855957]
[813.62133789 -380.78961182]
[828.57507324 -379.60531616]
[843.49957275 -378.09622192]
[858.38775635 -376.26300049]
[873.23254395 -374.10659790]
[888.02691650 -371.62796021]
[902.76391602 -368.82827759]
[917.43658447 -365.70889282]
[932.03802490 -362.27127075]
[946.56121826 -358.51702881]
[960.99938965 -354.44796753]
[975.34564209 -350.06597900]
[989.59326172 -345.37313843]
[1003.73553467 -340.37167358]
[1017.76568604 -335.06396484]
[1031.67712402 -329.45248413]
[1045.46337891 -323.53988647]
[1059.11779785 -317.32901001]
[1072.63391113 -310.82275391]
[1086.00549316 -304.02420044]
[1099.22607422 -296.93658447]
[1112.28942871 -289.56320190]
[1125.18933105 -281.90759277]
[1137.91979980 -273.97335815]
[1150.47485352 -265.76425171]
[1162.84838867 -257.28411865]
[1175.03466797 -248.53701782]
[1187.02795410 -239.52705383]
[1198.82250977 -230.25849915]
[1210.41284180 -220.73571777]
[1221.79333496 -210.96322632]
[1232.95874023 -200.94563293]
[1243.90368652 -190.68768311]
[1254.62304688 -180.19421387]
[1265.11181641 -169.47019958]
[1275.36486816 -158.52070618]
[1285.37756348 -147.35089111]
[1295.14501953 -135.96604919]
[1304.66259766 -124.37156677]
[1313.92602539 -112.57291412]
[1322.93066406 -100.57566833]
[1331.67236328 -88.38549805]
[1340.14697266 -76.00817108]
[1348.35058594 -63.44953918]
[1356.27917480 -50.71553040]
[1363.92907715 -37.81217194]
[1371.29663086 -24.74555397]
[1378.37841797 -11.52185917]
[1385.17114258 1.85266507]
[1391.67138672 15.37169647]
[1397.87622070 29.02884483]
[1403.78271484 42.81765366]
[1409.38806152 56.73160934]
[1414.68957520 70.76413727]
[1419.68469238 84.90859222]
[1424.37121582 99.15830231]
[1428.74694824 113.50652313]
[1432.80957031 127.94647980]
[1436.55737305 142.47134399]
[1439.98852539 157.07424927]
[1443.10144043 171.74830627]
[1445.89465332 186.48655701]
[1448.36669922 201.28204346]
[1450.51660156 216.12777710]
[1452.34313965 231.01673889]
[1453.84570312 245.94189453]
[1455.02343750 260.89617920]
[1455.87573242 275.87255859]
[1456.40222168 290.86389160]
[1456.60278320 305.86315918]
[1456.47717285 320.86322021]
[1456.02539062 335.85702515]
[1455.24792480 350.83743286]
[1454.14489746 365.79742432]
[1452.71691895 380.72988892]
[1450.96472168 395.62780762]
[1448.88891602 410.48406982]
[1446.49072266 425.29171753]
[1443.77124023 440.04373169]
[1440.73168945 454.73315430]
[1437.37341309 469.35299683]
[1433.69824219 483.89639282]
[1429.70764160 498.35647583]
[1425.40368652 512.72637939]
[1420.78833008 526.99926758]
[1415.86389160 541.16851807]
[1410.63244629 555.22729492]
[1405.09667969 569.16906738]
[1399.25915527 582.98724365]
[1393.12255859 596.67517090]
[1386.68981934 610.22650146]
[1379.96411133 623.63476562]
[1372.94836426 636.89367676]
[1365.64611816 649.99688721]
[1358.06079102 662.93829346]
[1350.19580078 675.71173096]
[1342.05505371 688.31115723]
[1333.64233398 700.73065186]
[1324.96154785 712.96429443]
[1316.01684570 725.00634766]
[1306.81262207 736.85113525]
[1297.35290527 748.49298096]
[1287.64245605 759.92645264]
[1277.68566895 771.14611816]
[1267.48742676 782.14666748]
[1257.05236816 792.92291260]
[1246.38549805 803.46972656]
[1235.49182129 813.78222656]
[1224.37658691 823.85540771]
[1213.04504395 833.68463135]
[1201.50244141 843.26513672]
[1189.75439453 852.59246826]
[1177.80615234 861.66223145]
[1165.66369629 870.47003174]
[1153.33264160 879.01184082]
[1140.81884766 887.28356934]
[1128.12805176 895.28125000]
[1115.26647949 903.00115967]
[1102.24011230 910.43963623]
[1089.05505371 917.59320068]
[1075.71765137 924.45843506]
[1062.23413086 931.03210449]
[1048.61096191 937.31109619]
[1034.85449219 943.29241943]
[1020.97113037 948.97326660]
[1006.96765137 954.35095215]
[992.85052490 959.42297363]
[978.62652588 964.18688965]
[964.30230713 968.64044189]
[949.88464355 972.78155518]
[935.38037109 976.60827637]
[920.79632568 980.11871338]
[906.13940430 983.31134033]
[891.41656494 986.18457031]
[876.63470459 988.73699951]
[861.80084229 990.96752930]
[846.92205811 992.87506104]
[832.00531006 994.45867920]
[817.05761719 995.71759033]
[802.08612061 996.65130615]
[787.09783936 997.25933838]
[772.09991455 997.54132080]
[757.09936523 997.49725342]
[742.10333252 997.12707520]
[727.11889648 996.43096924]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[82 101]
[83 99]
[84 98]
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
82 101 44 gmark
82 cmark
101 cmark
83 99 21 gmark
83 cmark
99 cmark
84 98 11 gmark
84 cmark
98 cmark

% End Annotations
showpage
end
%%EOF
