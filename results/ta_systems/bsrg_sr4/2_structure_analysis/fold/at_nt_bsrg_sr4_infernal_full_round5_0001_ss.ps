%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Dec 16 19:22:38 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
____UG____U_AUUUC_UUUAA_UAAGA_AA_U__G_CAUA___AA_A___U_A_____A_AA____A___GAC_CA__GGGUGCUG_CC_AA__CACC_C_CGG_CU_C______U_G_U_A___C_AA_A_AA_GC_UG___CCCAUC_AA_A_GG_G_C_U_U_GCU_C___G___A_U___GU_U___G____________U_______U_U__C_A_AG_A_U__AGA_____CCUAUC_C_C_UU__C\
____A__G_GUUU___C___C__A_GG__C_UCAAGGG__A_G_GUCUAUUU__\
) } def
/len { sequence length } bind def

/coor [
[-144.54067993 253.64756775]
[-159.42361450 258.62936401]
[-174.43452454 263.21105957]
[-189.56265259 267.38934326]
[-204.79718018 271.16128540]
[-220.12719727 274.52416992]
[-235.54170227 277.47555542]
[-251.02966309 280.01333618]
[-266.57998657 282.13571167]
[-282.18151855 283.84115601]
[-297.82308960 285.12844849]
[-313.49349976 285.99667358]
[-329.18151855 286.44519043]
[-344.87591553 286.47369385]
[-360.56542969 286.08215332]
[-376.23883057 285.27084351]
[-391.88491821 284.04040527]
[-407.49243164 282.39163208]
[-423.05023193 280.32577515]
[-438.54714966 277.84426880]
[-453.97210693 274.94894409]
[-469.31402588 271.64181519]
[-484.56192017 267.92529297]
[-499.70486450 263.80203247]
[-514.73205566 259.27496338]
[-529.63269043 254.34736633]
[-544.39605713 249.02275085]
[-559.01165771 243.30494690]
[-573.46899414 237.19802856]
[-587.75769043 230.70639038]
[-601.86755371 223.83467102]
[-615.78839111 216.58779907]
[-629.51031494 208.97096252]
[-643.02343750 200.98963928]
[-656.31811523 192.64952087]
[-669.38482666 183.95658875]
[-682.21423340 174.91708374]
[-694.79705811 165.53747559]
[-707.12432861 155.82447815]
[-719.18725586 145.78506470]
[-730.97717285 135.42640686]
[-742.48565674 124.75592804]
[-753.70440674 113.78129578]
[-764.62542725 102.51035309]
[-775.24084473 90.95117950]
[-785.54315186 79.11205292]
[-795.52484131 67.00146484]
[-805.17889404 54.62808609]
[-814.49829102 42.00077438]
[-823.47644043 29.12858582]
[-832.10687256 16.02073860]
[-840.38336182 2.68662167]
[-848.30004883 -10.86421108]
[-855.85125732 -24.62205124]
[-863.03149414 -38.57704163]
[-869.83569336 -52.71918869]
[-876.25903320 -67.03836060]
[-882.29675293 -81.52429199]
[-887.94470215 -96.16661072]
[-893.19866943 -110.95483398]
[-898.05505371 -125.87834930]
[-902.51025391 -140.92648315]
[-906.56115723 -156.08845520]
[-910.20477295 -171.35337830]
[-913.43859863 -186.71035767]
[-916.26025391 -202.14836121]
[-918.66772461 -217.65632629]
[-920.65930176 -233.22315979]
[-922.23358154 -248.83770752]
[-923.38934326 -264.48880005]
[-924.12585449 -280.16516113]
[-924.44256592 -295.85565186]
[-924.33923340 -311.54895020]
[-923.81591797 -327.23388672]
[-922.87304688 -342.89913940]
[-921.51129150 -358.53356934]
[-919.73156738 -374.12594604]
[-917.53521729 -389.66506958]
[-914.92370605 -405.13983154]
[-911.89904785 -420.53915405]
[-908.46331787 -435.85202026]
[-904.61907959 -451.06741333]
[-919.06103516 -455.12072754]
[-933.50299072 -459.17404175]
[-943.19360352 -447.42620850]
[-956.82757568 -440.64132690]
[-972.04278564 -439.99499512]
[-986.20306396 -445.59912109]
[-996.85504150 -456.48281860]
[-1002.15325928 -470.76037598]
[-1001.17974854 -485.95816040]
[-994.10314941 -499.44302368]
[-982.14953613 -508.87863159]
[-967.38995361 -512.63024902]
[-952.38159180 -510.04785156]
[-939.72473145 -501.57888794]
[-931.61224365 -488.69061279]
[-929.44970703 -473.61602783]
[-915.00769043 -469.56271362]
[-900.56573486 -465.50939941]
[-896.30249023 -479.35281372]
[-891.69860840 -493.08666992]
[-886.75689697 -506.70263672]
[-881.48034668 -520.19238281]
[-875.87213135 -533.54766846]
[-869.93572998 -546.76037598]
[-863.67474365 -559.82238770]
[-857.09301758 -572.72583008]
[-850.19458008 -585.46270752]
[-842.98358154 -598.02526855]
[-835.46447754 -610.40588379]
[-827.64184570 -622.59704590]
[-819.52038574 -634.59118652]
[-811.10516357 -646.38110352]
[-802.40130615 -657.95953369]
[-793.41400146 -669.31945801]
[-784.14886475 -680.45391846]
[-774.61151123 -691.35607910]
[-764.80773926 -702.01934814]
[-754.74359131 -712.43719482]
[-744.42510986 -722.60327148]
[-733.85864258 -732.51135254]
[-723.05065918 -742.15539551]
[-712.00775146 -751.52954102]
[-700.73663330 -760.62799072]
[-689.24420166 -769.44531250]
[-677.53747559 -777.97601318]
[-665.62353516 -786.21496582]
[-653.50976562 -794.15710449]
[-641.20349121 -801.79760742]
[-628.71221924 -809.13177490]
[-616.04351807 -816.15509033]
[-603.20526123 -822.86340332]
[-590.20520020 -829.25250244]
[-577.05120850 -835.31848145]
[-563.75146484 -841.05773926]
[-550.31396484 -846.46673584]
[-536.74694824 -851.54211426]
[-523.05865479 -856.28082275]
[-509.25750732 -860.67993164]
[-495.35189819 -864.73681641]
[-481.35028076 -868.44891357]
[-467.26126099 -871.81402588]
[-453.09341431 -874.83013916]
[-438.85534668 -877.49530029]
[-424.55581665 -879.80798340]
[-410.20349121 -881.76666260]
[-395.80712891 -883.37023926]
[-381.37557983 -884.61773682]
[-366.91760254 -885.50836182]
[-352.44201660 -886.04156494]
[-337.95767212 -886.21697998]
[-323.47341919 -886.03460693]
[-308.99807739 -885.49444580]
[-294.54046631 -884.59692383]
[-280.10943604 -883.34252930]
[-265.71380615 -881.73199463]
[-251.36233521 -879.76641846]
[-237.06379700 -877.44689941]
[-222.82690430 -874.77484131]
[-208.66033936 -871.75195312]
[-194.57278442 -868.38006592]
[-180.57279968 -864.66113281]
[-166.66894531 -860.59759521]
[-152.86972046 -856.19177246]
[-139.18351746 -851.44641113]
[-125.61870575 -846.36444092]
[-112.18355560 -840.94897461]
[-98.88628387 -835.20324707]
[-85.73498535 -829.13079834]
[-72.73770142 -822.73535156]
[-59.90235519 -816.02075195]
[-47.23678207 -808.99114990]
[-34.74871445 -801.65081787]
[-22.44577408 -794.00427246]
[-10.33546734 -786.05609131]
[1.57481456 -777.81121826]
[13.27780151 -769.27465820]
[24.76635170 -760.45159912]
[36.03345490 -751.34741211]
[47.07223129 -741.96765137]
[57.87594604 -732.31811523]
[68.43800354 -722.40466309]
[78.75196075 -712.23327637]
[88.81152344 -701.81024170]
[98.61054230 -691.14184570]
[108.14305115 -680.23468018]
[117.40322113 -669.09533691]
[126.38540649 -657.73065186]
[135.08412170 -646.14758301]
[143.49406433 -634.35308838]
[151.61009216 -622.35449219]
[159.42726135 -610.15905762]
[166.94079590 -597.77423096]
[174.14610291 -585.20758057]
[181.03878784 -572.46679688]
[187.61465454 -559.55957031]
[193.86967468 -546.49389648]
[199.80004883 -533.27764893]
[205.40214539 -519.91894531]
[210.67253113 -506.42596436]
[215.60801697 -492.80685425]
[220.20558167 -479.06997681]
[224.46240234 -465.22372437]
[228.37590027 -451.27655029]
[231.94369507 -437.23693848]
[235.16357422 -423.11346436]
[238.03359985 -408.91476440]
[240.55200195 -394.64950562]
[242.71726990 -380.32635498]
[244.52804565 -365.95410156]
[245.98326111 -351.54147339]
[247.08200073 -337.09729004]
[247.82360840 -322.63040161]
[248.20761108 -308.14956665]
[248.23379517 -293.66366577]
[247.90214539 -279.18151855]
[247.21286011 -264.71197510]
[246.16633606 -250.26388550]
[244.76324463 -235.84602356]
[243.00442505 -221.46723938]
[240.89094543 -207.13626099]
[238.42411804 -192.86186218]
[235.60542297 -178.65274048]
[232.43658447 -164.51759338]
[228.91955566 -150.46501160]
[225.05645752 -136.50358582]
[220.84967041 -122.64185333]
[216.30174255 -108.88825226]
[211.41545105 -95.25118256]
[206.19378662 -81.73897552]
[200.63992310 -68.35986328]
[194.75726318 -55.12202454]
[188.54939270 -42.03352737]
[182.02009583 -29.10236931]
[175.17337036 -16.33643532]
[168.01336670 -3.74351907]
[160.54447937 8.66869354]
[152.77125549 20.89262772]
[144.69844055 32.92082214]
[136.33096313 44.74593735]
[127.67393494 56.36075592]
[118.73262787 67.75818634]
[109.51249695 78.93128204]
[100.01918030 89.87320709]
[107.58145905 92.53011322]
[111.15866089 100.14430237]
[119.52433777 103.67782593]
[122.19348907 110.52775574]
[134.02108765 101.25814819]
[147.07235718 93.80950928]
[161.06910706 88.34061432]
[175.71299744 84.96803284]
[190.69189453 83.76365662]
[205.68652344 84.75315094]
[220.37725830 87.91542053]
[234.45098877 93.18307495]
[247.60771179 100.44381714]
[259.56698608 109.54290009]
[270.07394409 120.28636932]
[278.90457153 132.44522095]
[285.87069702 145.76029968]
[290.82376099 159.94778442]
[293.65826416 174.70527649]
[294.31378174 189.71820068]
[292.77630615 204.66658020]
[289.07861328 219.23178101]
[283.29953003 233.10333252]
[275.56222534 245.98558044]
[266.03167725 257.60391235]
[254.91094971 267.71072388]
[242.43711853 276.09057617]
[228.87606812 282.56481934]
[214.51686096 286.99545288]
[199.66554260 289.28808594]
[184.63867188 289.39382935]
[169.75656128 287.31042480]
[155.33641052 283.08227539]
[141.68559265 276.79949951]
[129.09509277 268.59603882]
[117.83324432 258.64672852]
[108.14011383 247.16365051]
[100.22230530 234.39157104]
[94.24859619 220.60270691]
[90.34630585 206.09098816]
[88.59861755 191.16572571]
[89.04278564 176.14505005]
[91.66933441 161.34913635]
[96.42228699 147.09335327]
[103.20032501 133.68156433]
[111.85898590 121.39965057]
[100.93486786 111.12036896]
[89.90713501 100.95231628]
[79.02659607 112.26341248]
[67.84725189 123.27925110]
[56.37710190 133.99194336]
[44.62436676 144.39382935]
[32.59746933 154.47743225]
[20.30502129 164.23553467]
[7.75583315 173.66116333]
[-5.04110622 182.74755859]
[-18.07662773 191.48820496]
[-31.34139442 199.87684631]
[-44.82590485 207.90747070]
[-58.52049255 215.57432556]
[-72.41535187 222.87193298]
[-86.50052643 229.79504395]
[-100.76593018 236.33871460]
[-115.20133209 242.49826050]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[82 100]
[83 99]
[84 98]
[245 293]
[247 292]
[249 291]
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
82 100 8 gmark
82 cmark
100 cmark
83 99 20 gmark
83 cmark
99 cmark
84 98 30 gmark
98 cmark
245 293 23 gmark
245 cmark
247 292 26 gmark
247 cmark
249 291 78 gmark
249 cmark
291 cmark

% End Annotations
showpage
end
%%EOF
