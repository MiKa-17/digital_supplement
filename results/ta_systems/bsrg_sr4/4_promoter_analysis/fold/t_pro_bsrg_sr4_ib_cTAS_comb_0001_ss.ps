%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Dec 16 19:57:58 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACUGUUUACGAAUCAUUAAUGAUAAUGAUCAAUUUUGGCGGGUUGAUAUUAAAUACCGUCUUGUUGAUCUUCAAUAUAAUGAUGAUUGUAACGUCAAGCCAAAAGAAAAAA\
) } def
/len { sequence length } bind def

/coor [
[162.79394531 349.10415649]
[174.25975037 339.21408081]
[168.66175842 325.29779053]
[163.06378174 311.38153076]
[157.46578979 297.46527100]
[151.97576904 292.36508179]
[151.91069031 283.09161377]
[146.69491577 269.02761841]
[141.47914124 254.96365356]
[136.13047791 249.71542358]
[136.31872559 240.44363403]
[131.48905945 226.24243164]
[126.28574371 220.85006714]
[126.72717285 211.58686829]
[122.28720093 197.25904846]
[117.84723663 182.93121338]
[113.40726471 168.60339355]
[108.96729279 154.27555847]
[104.52732086 139.94773865]
[100.08735657 125.61990356]
[95.64738464 111.29207611]
[90.81771088 97.09086609]
[85.60193634 83.02688599]
[80.38615417 68.96289825]
[65.23702240 67.45789337]
[52.29633713 59.55690002]
[44.10290527 46.87274551]
[42.23685074 31.95031548]
[47.01514435 17.75604439]
[57.43927765 7.08820009]
[52.22350311 -6.97578526]
[47.00772476 -21.03977013]
[41.79195023 -35.10375595]
[36.57617188 -49.16773987]
[31.36039734 -63.23172760]
[26.14462090 -77.29570770]
[13.26564217 -81.50742340]
[5.31526327 -92.23777008]
[5.04434013 -105.39427948]
[12.32679653 -116.11939240]
[7.49712181 -130.32060242]
[2.66744685 -144.52180481]
[-2.16222835 -158.72300720]
[-6.99190331 -172.92420959]
[-20.89091492 -179.95666504]
[-25.58658981 -194.42750549]
[-18.79657555 -207.63475037]
[-33.65761185 -212.09896851]
[-43.02962875 -224.46604919]
[-43.30889511 -239.98062134]
[-34.38803101 -252.67698669]
[-19.69728470 -257.67315674]
[-4.88555241 -253.04797363]
[4.35175419 -240.57994080]
[4.46270227 -225.06326294]
[-4.59537029 -212.46441650]
[8.83878422 -206.13519287]
[13.93906307 -191.80195618]
[7.20930195 -177.75389099]
[12.03897762 -163.55268860]
[16.86865234 -149.35148621]
[21.69832802 -135.15026855]
[26.52800179 -120.94907379]
[41.87924957 -114.23252106]
[47.80106354 -98.19892120]
[40.20860672 -82.51148987]
[45.42438126 -68.44750214]
[50.64015961 -54.38351822]
[55.85593414 -40.31953049]
[61.07170868 -26.25554657]
[66.28748322 -12.19156075]
[71.50326538 1.87242401]
[86.36254120 3.16365004]
[99.24061584 10.80987358]
[107.55583191 23.34056091]
[109.61429596 38.29993820]
[104.95465088 52.72819901]
[94.45014191 63.74712372]
[99.66591644 77.81111145]
[104.88169098 91.87509155]
[109.15485382 95.16523743]
[111.20861053 100.65087128]
[109.97521210 106.85210419]
[114.41518402 121.17993164]
[118.85515594 135.50776672]
[123.29512024 149.83558655]
[127.73509216 164.16342163]
[132.17506409 178.49124146]
[136.61503601 192.81907654]
[141.05500793 207.14689636]
[145.69026184 221.41275024]
[150.51992798 235.61395264]
[155.54312134 249.74786377]
[160.75889587 263.81185913]
[165.97468567 277.87585449]
[171.38206482 291.86727905]
[176.98004150 305.78353882]
[182.57803345 319.69979858]
[188.17602539 333.61608887]
[203.29658508 332.81149292]
[217.85842896 336.96255493]
[230.28201294 345.61895752]
[239.21971130 357.84173584]
[243.70201111 372.30505371]
[243.24273682 387.44003296]
[237.89169312 401.60494995]
[228.22930908 413.26330566]
[215.30371094 421.15048218]
[200.51695251 424.41094971]
[185.47300720 422.69100952]
[171.80371094 416.17724609]
[160.99180603 405.57623291]
[154.21011353 392.03784180]
[152.19424438 377.03070068]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 99]
[3 98]
[4 97]
[5 96]
[7 95]
[8 94]
[9 93]
[11 92]
[12 91]
[14 90]
[15 89]
[16 88]
[17 87]
[18 86]
[19 85]
[20 84]
[21 83]
[22 80]
[23 79]
[24 78]
[30 72]
[31 71]
[32 70]
[33 69]
[34 68]
[35 67]
[36 66]
[40 63]
[41 62]
[42 61]
[43 60]
[44 59]
[47 56]
] def

init

% Start Annotations
2 99 0.16 1 colorpair
3 98 0.0 1 colorpair
4 97 0.0 1 colorpair
5 96 0.0 1 colorpair
7 95 0.0 1 colorpair
8 94 0.0 1 colorpair
9 93 0.0 1 colorpair
11 92 0.0 1 colorpair
12 91 0.0 1 colorpair
14 90 0.0 1 colorpair
15 89 0.0 1 colorpair
16 88 0.0 0.6 colorpair
17 87 0.0 1 colorpair
18 86 0.0 1 colorpair
19 85 0.0 1 colorpair
20 84 0.16 1 colorpair
21 83 0.0 1 colorpair
22 80 0.0 1 colorpair
23 79 0.0 1 colorpair
24 78 0.0 1 colorpair
30 72 0.0 1 colorpair
31 71 0.0 1 colorpair
32 70 0.0 1 colorpair
33 69 0.0 0.6 colorpair
34 68 0.0 1 colorpair
35 67 0.0 1 colorpair
36 66 0.0 1 colorpair
40 63 0.16 1 colorpair
41 62 0.0 1 colorpair
42 61 0.0 1 colorpair
43 60 0.0 1 colorpair
44 59 0.0 1 colorpair
47 56 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
99 cmark
16 88 1 gmark
84 cmark
33 69 1 gmark
63 cmark

% End Annotations
showpage
end
%%EOF
