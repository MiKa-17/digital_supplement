%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Dec 16 19:57:58 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACUGUUUACGAAUCAUUAAUGAUAAUGAUCAAUUUUGGCGGAUUGAUAUUAAAUACCGUCUUGUUGAUCUUCAAUAUAAUGAUGAUUGUAACGUCAAGCCAAAAGAAAAAAUAG\
) } def
/len { sequence length } bind def

/coor [
[152.23185730 269.38140869]
[163.41438293 259.22622681]
[156.85476685 245.73655701]
[150.29516602 232.24687195]
[143.73554993 218.75718689]
[137.90615845 214.05784607]
[137.18624878 204.81996155]
[130.98806763 191.16043091]
[124.78987885 177.50091553]
[119.08766174 172.64805603]
[118.61392212 163.39427185]
[112.78155518 149.57460022]
[106.94919586 135.75491333]
[101.11682892 121.93523407]
[87.45730591 115.73705292]
[73.21634674 120.44820404]
[58.97537994 125.15935516]
[44.73441696 129.87049866]
[30.49345207 134.58164978]
[16.25248909 139.29280090]
[2.01152420 144.00395203]
[-8.48663425 156.60240173]
[-24.59800911 153.54370117]
[-29.74860001 137.97438049]
[-18.63991928 125.91083527]
[-2.69962668 129.76298523]
[11.54133797 125.05184174]
[25.78230095 120.34069061]
[40.02326584 115.62953949]
[54.26422882 110.91838837]
[68.50519562 106.20723724]
[82.74615479 101.49608612]
[85.84525299 94.66632843]
[71.30134583 98.33713531]
[59.36330795 89.25510406]
[59.02051163 74.25901794]
[70.53107452 64.64096832]
[85.22752380 67.64336395]
[92.04343414 81.00680542]
[95.14252472 74.17704010]
[89.31015778 60.35736465]
[83.47779846 46.53768539]
[77.64543915 32.71800613]
[71.81307220 18.89832497]
[65.79726410 5.15750694]
[59.59908295 -8.50201416]
[53.40090179 -22.16153526]
[38.29124069 -26.19045639]
[29.34867096 -39.01872253]
[30.79559708 -54.58922195]
[41.94882584 -65.55004120]
[57.54214478 -66.72580719]
[70.21286774 -57.56137466]
[73.97825623 -42.38389587]
[67.06042480 -28.35971832]
[73.25860596 -14.70019722]
[79.45678711 -1.04067564]
[85.15901184 3.81217813]
[85.63275146 13.06596279]
[91.46511841 26.88564301]
[97.29747772 40.70532227]
[103.12983704 54.52500153]
[108.96220398 68.34468079]
[108.30008698 76.42546082]
[106.67192078 84.26999664]
[116.24558258 72.72248840]
[125.81924438 61.17498016]
[135.39289856 49.62746811]
[144.96656799 38.07995987]
[154.54023743 26.53244972]
[159.99478149 10.47990608]
[176.92996216 11.27750969]
[180.85165405 27.77165031]
[166.08773804 36.10611343]
[156.51408386 47.65362167]
[146.94041443 59.20112991]
[137.36676025 70.74864197]
[127.79309082 82.29615021]
[118.21942902 93.84365845]
[129.33622742 83.77306366]
[144.06379700 80.92729187]
[158.13209534 86.13143158]
[167.46218872 97.87660980]
[169.34895325 112.75747681]
[163.24534607 126.45951080]
[150.92100525 135.00999451]
[135.94923401 135.92984009]
[122.67089081 128.95233154]
[114.93650818 116.10287476]
[120.76887512 129.92254639]
[126.60123444 143.74223328]
[132.43359375 157.56190491]
[138.44940186 171.30273438]
[144.64758301 184.96224976]
[150.84576416 198.62176514]
[157.22523499 212.19757080]
[163.78483582 225.68725586]
[170.34445190 239.17694092]
[176.90405273 252.66662598]
[191.79711914 250.14205933]
[206.79800415 251.91699219]
[220.69062805 257.84753418]
[232.34881592 267.45291138]
[240.82746887 279.95449829]
[245.43927002 294.33877563]
[245.81036377 309.43972778]
[241.91064453 324.03320312]
[234.05627441 336.93612671]
[222.88395691 347.10253906]
[209.29937744 353.70828247]
[194.40377808 356.21789551]
[179.40469360 354.42788696]
[165.51802063 348.48339844]
[153.86949158 338.86630249]
[145.40341187 326.35623169]
[140.80606079 311.96728516]
[140.45014954 296.86596680]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 99]
[3 98]
[4 97]
[5 96]
[7 95]
[8 94]
[9 93]
[11 92]
[12 91]
[13 90]
[14 89]
[15 32]
[16 31]
[17 30]
[18 29]
[19 28]
[20 27]
[21 26]
[40 63]
[41 62]
[42 61]
[43 60]
[44 59]
[45 57]
[46 56]
[47 55]
[65 79]
[66 78]
[67 77]
[68 76]
[69 75]
[70 74]
] def

init

% Start Annotations
2 99 0.16 0.6 colorpair
3 98 0.0 0.6 colorpair
4 97 0.0 0.6 colorpair
5 96 0.0 0.6 colorpair
7 95 0.0 0.6 colorpair
8 94 0.0 0.6 colorpair
9 93 0.0 0.6 colorpair
11 92 0.0 0.6 colorpair
12 91 0.0 0.6 colorpair
13 90 0.0 0.6 colorpair
14 89 0.0 0.6 colorpair
15 32 0.0 0.6 colorpair
16 31 0.0 0.6 colorpair
17 30 0.0 0.6 colorpair
18 29 0.0 0.6 colorpair
19 28 0.0 0.6 colorpair
20 27 0.0 0.6 colorpair
21 26 0.0 0.6 colorpair
40 63 0.16 0.6 colorpair
41 62 0.0 0.6 colorpair
42 61 0.0 0.6 colorpair
43 60 0.0 0.6 colorpair
44 59 0.0 0.6 colorpair
45 57 0.16 0.6 colorpair
46 56 0.0 0.6 colorpair
47 55 0.0 0.6 colorpair
65 79 0.0 0.6 colorpair
66 78 0.0 0.6 colorpair
67 77 0.0 0.6 colorpair
68 76 0.0 0.6 colorpair
69 75 0.16 0.6 colorpair
70 74 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
2 99 1 gmark
99 cmark
3 98 1 gmark
4 97 1 gmark
5 96 1 gmark
7 95 1 gmark
8 94 1 gmark
9 93 1 gmark
11 92 1 gmark
12 91 1 gmark
13 90 1 gmark
14 89 1 gmark
15 32 1 gmark
16 31 1 gmark
17 30 1 gmark
18 29 1 gmark
19 28 1 gmark
20 27 1 gmark
21 26 1 gmark
40 63 1 gmark
63 cmark
41 62 1 gmark
42 61 1 gmark
43 60 1 gmark
44 59 1 gmark
45 57 1 gmark
45 cmark
46 56 1 gmark
47 55 1 gmark
65 79 1 gmark
66 78 1 gmark
67 77 1 gmark
68 76 1 gmark
69 75 1 gmark
69 cmark
75 cmark
70 74 1 gmark

% End Annotations
showpage
end
%%EOF
