%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Dec 16 19:57:57 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
____AUACAA____AUA__AUUAUUUUUUGCAUUUUG_UUUA_AGAAAUGCAUAAAAUAA__AAA__GACCAGGGUGUUGGUAGCACC__CCGGC_____UCUGUACAAAAAGCUGCCCAUCAAAGGG_CUUGCUCGAUGU__UAAAU_CUGCGUAGACCUAACCCUUCAGGGUUCC_AAACUCAAGGGAAGGUCUAUUU\
) } def
/len { sequence length } bind def

/coor [
[235.49305725 310.66864014]
[225.87934875 316.55029297]
[216.01078796 321.99356079]
[205.90736389 326.98736572]
[195.58952332 331.52166748]
[185.07817078 335.58721924]
[174.39456177 339.17584229]
[163.56034851 342.28024292]
[152.59745789 344.89416504]
[141.52807617 347.01226807]
[130.37463379 348.63027954]
[119.15968323 349.74496460]
[107.90594482 350.35403442]
[96.63620758 350.45623779]
[85.37327576 350.05139160]
[74.13995361 349.14031982]
[62.95898819 347.72485352]
[51.85301208 345.80786133]
[40.84451294 343.39324951]
[29.95577431 340.48583984]
[19.20884132 337.09161377]
[8.62547112 333.21734619]
[-1.77290988 328.87094116]
[-11.96525002 324.06118774]
[-21.93091393 318.79782104]
[-31.64972687 313.09149170]
[-41.10201263 306.95376587]
[-50.26863480 300.39703369]
[-59.13103485 293.43463135]
[-67.67127228 286.08059692]
[-75.87205505 278.34982300]
[-83.71678162 270.25799561]
[-91.18957520 261.82147217]
[-98.27529144 253.05732727]
[-104.95960236 243.98333740]
[-111.22897339 234.61782837]
[-117.07070160 224.97979736]
[-122.47296906 215.08874512]
[-127.42483521 204.96467590]
[-131.91627502 194.62812805]
[-135.93820190 184.09999084]
[-139.48245239 173.40158081]
[-142.54188538 162.55458069]
[-145.11027527 151.58094788]
[-147.18243408 140.50286865]
[-148.75418091 129.34280396]
[-149.82231140 118.12332916]
[-150.38467407 106.86715698]
[-150.44012451 95.59709167]
[-149.98855591 84.33593750]
[-149.03088379 73.10649109]
[-147.56904602 61.93149948]
[-145.60598755 50.83357239]
[-143.14570618 39.83518600]
[-140.19317627 28.95860291]
[-136.75436401 18.22584343]
[-132.83624268 7.65863943]
[-128.44673157 -2.72161865]
[-123.59473419 -12.89391518]
[-118.29006195 -22.83765602]
[-112.54345703 -32.53271103]
[-106.36655426 -41.95944977]
[-99.77185822 -51.09878922]
[-92.77272034 -59.93222427]
[-85.38331604 -68.44187927]
[-77.61859894 -76.61051178]
[-69.49428558 -84.42160034]
[-61.02682877 -91.85932159]
[-52.23337173 -98.90862274]
[-43.13171387 -105.55522919]
[-51.33077240 -118.11609650]
[-65.35314941 -125.44300842]
[-65.83077240 -140.32995605]
[-74.22514343 -152.76113892]
[-82.81278229 -165.05961609]
[-97.98832703 -163.06930542]
[-112.34653473 -168.37028503]
[-122.58799744 -179.74443054]
[-126.35929871 -194.57803345]
[-122.79382324 -209.46244812]
[-112.71088409 -220.97735596]
[-98.42747498 -226.47669983]
[-83.22581482 -224.69677734]
[-70.59913635 -216.04660034]
[-63.44895554 -202.51391602]
[-63.41833115 -187.20843506]
[-70.51430511 -173.64724731]
[-61.92666626 -161.34878540]
[-57.45700073 -159.64543152]
[-54.01345825 -155.11167908]
[-53.26990128 -148.52900696]
[-39.83398056 -142.10054016]
[-38.76990128 -126.31515503]
[-30.57084465 -113.75428772]
[-15.57983494 -122.21823120]
[-0.04285058 -129.63246155]
[15.96671486 -135.96195984]
[32.37323761 -141.17681885]
[49.09921265 -145.25242615]
[66.06562805 -148.16949463]
[83.19235229 -149.91427612]
[100.39846802 -150.47850037]
[117.60269928 -149.85952759]
[134.72377014 -148.06027222]
[151.68083191 -145.08923340]
[168.39375305 -140.96043396]
[184.78359985 -135.69340515]
[200.77294922 -129.31300354]
[216.28627014 -121.84937286]
[231.25027466 -113.33777618]
[245.59426880 -103.81841278]
[259.25051880 -93.33625793]
[269.12969971 -104.62351227]
[279.00885010 -115.91076660]
[282.15942383 -134.04962158]
[298.97369385 -139.06221008]
[308.58554077 -150.57795715]
[318.10711670 -162.16845703]
[327.62866211 -173.75897217]
[325.83801270 -189.46148682]
[335.74044800 -201.77885437]
[351.46102905 -203.40339661]
[363.67300415 -193.37129211]
[365.13122559 -177.63441467]
[354.97058105 -165.52919006]
[339.21917725 -164.23741150]
[329.69760132 -152.64689636]
[320.17605591 -141.05639648]
[318.35784912 -133.88658142]
[310.41397095 -129.36065674]
[311.09149170 -117.27801514]
[303.09555054 -107.66664886]
[290.29611206 -106.03160095]
[280.41693115 -94.74434662]
[270.53778076 -83.45709229]
[285.19775391 -68.64586639]
[298.57580566 -52.66725159]
[310.57928467 -35.63187027]
[321.12512207 -17.65763664]
[330.14031982 1.13103187]
[337.56246948 20.60407829]
[343.34020996 40.62670898]
[347.43350220 61.06032181]
[349.81405640 81.76348114]
[350.46539307 102.59287262]
[349.38299561 123.40431976]
[346.57434082 144.05375671]
[342.05889893 164.39825439]
[335.86788940 184.29698181]
[328.04418945 203.61219788]
[318.64196777 222.21020508]
[307.72628784 239.96226501]
[295.37268066 256.74548340]
[281.66671753 272.44372559]
[292.23181152 283.09170532]
[302.79687500 293.73965454]
[313.36196899 304.38763428]
[323.92703247 315.03558350]
[334.49212646 325.68356323]
[345.05718994 336.33151245]
[355.62225342 346.97949219]
[368.49887085 347.81164551]
[377.07968140 356.90466309]
[377.15838623 369.00604248]
[387.55575562 379.81781006]
[397.95312500 390.62960815]
[408.35049438 401.44140625]
[418.74786377 412.25317383]
[431.60986328 413.28649902]
[440.04751587 422.51251221]
[439.93710327 434.61364746]
[450.16421509 445.58660889]
[465.32635498 442.73822021]
[479.61288452 448.56042480]
[488.46505737 461.19540405]
[489.05816650 476.61135864]
[481.20294189 489.88912964]
[467.40597534 496.79180908]
[452.06982422 495.11679077]
[440.08816528 485.39859009]
[435.28436279 470.73818970]
[439.19125366 455.81372070]
[428.96411133 444.84075928]
[411.93338013 440.62179565]
[407.93606567 422.65054321]
[397.53869629 411.83877563]
[387.14132690 401.02697754]
[376.74395752 390.21517944]
[366.34658813 379.40341187]
[349.25198364 375.45114136]
[344.97430420 357.54455566]
[334.40921021 346.89660645]
[323.84414673 336.24862671]
[313.27908325 325.60067749]
[302.71398926 314.95269775]
[292.14892578 304.30471802]
[281.58383179 293.65676880]
[271.01876831 283.00878906]
[262.61331177 290.51654053]
[253.87866211 297.63854980]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 94]
[71 93]
[73 91]
[74 88]
[75 87]
[112 135]
[113 134]
[114 133]
[116 130]
[117 128]
[118 127]
[119 126]
[154 198]
[155 197]
[156 196]
[157 195]
[158 194]
[159 193]
[160 192]
[161 191]
[164 189]
[165 188]
[166 187]
[167 186]
[168 185]
[171 183]
[172 182]
] def

init

% Start Annotations
70 94 0.16 1 colorpair
71 93 0.0 1 colorpair
73 91 0.0 1 colorpair
74 88 0.0 1 colorpair
75 87 0.0 1 colorpair
112 135 0.0 1 colorpair
113 134 0.0 1 colorpair
114 133 0.0 1 colorpair
116 130 0.0 1 colorpair
117 128 0.0 1 colorpair
118 127 0.0 1 colorpair
119 126 0.0 1 colorpair
154 198 0.16 1 colorpair
155 197 0.0 0.6 colorpair
156 196 0.0 0.6 colorpair
157 195 0.0 0.6 colorpair
158 194 0.16 1 colorpair
159 193 0.0 0.6 colorpair
160 192 0.16 1 colorpair
161 191 0.0 0.6 colorpair
164 189 0.0 1 colorpair
165 188 0.0 1 colorpair
166 187 0.0 1 colorpair
167 186 0.0 0.6 colorpair
168 185 0.0 0.6 colorpair
171 183 0.16 1 colorpair
172 182 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
70 cmark
94 cmark
154 cmark
155 197 1 gmark
156 196 1 gmark
157 195 1 gmark
158 cmark
159 193 1 gmark
160 cmark
161 191 1 gmark
167 186 1 gmark
168 185 1 gmark
171 cmark

% End Annotations
showpage
end
%%EOF
