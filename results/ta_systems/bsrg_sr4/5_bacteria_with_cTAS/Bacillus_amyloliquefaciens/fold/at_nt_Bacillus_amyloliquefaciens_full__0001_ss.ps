%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Dec 16 19:58:07 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUAUUUCUUUCAUAAGAAAUGCAUAAAAUAAAAAGACCAGGGUGUUGGUAGCACCCCGGCUCUGUACAAAAAGCUGCCCAUCAAAGGGCUUGCUCGAUGUUGAAUCUGCGUAGACCUAACCCUUUAAGGUUCCUAAGCUCAAGGGAAGGUCUAUUU\
) } def
/len { sequence length } bind def

/coor [
[72.72512817 166.00143433]
[65.57211304 179.18606567]
[58.41910172 192.37068176]
[51.26608658 205.55531311]
[44.11307526 218.73994446]
[36.96006393 231.92457581]
[29.80705070 245.10919189]
[22.65403748 258.29382324]
[15.50102520 271.47845459]
[8.34801292 284.66308594]
[9.32338333 301.03320312]
[-4.51299143 309.83584595]
[-18.92743492 302.01562500]
[-19.09160423 285.61730957]
[-4.83661509 277.51007080]
[2.31639767 264.32543945]
[9.46940994 251.14080811]
[16.62242317 237.95619202]
[23.77543449 224.77156067]
[30.92844772 211.58692932]
[38.08145905 198.40229797]
[45.23447418 185.21768188]
[52.38748550 172.03305054]
[59.54049683 158.84841919]
[53.07489395 153.83439636]
[47.22523117 148.11373901]
[42.06829453 141.76153564]
[37.67177963 134.86116028]
[34.09338760 127.50319672]
[31.38009071 119.78422546]
[29.56750488 111.80556488]
[28.67942429 103.67194366]
[28.72750282 95.49012756]
[29.71111107 87.36750793]
[31.61733818 79.41069794]
[17.78785133 73.60163116]
[3.95836258 67.79256439]
[-9.92819309 62.12126923]
[-23.87044334 56.58831024]
[-39.55148697 58.68961716]
[-48.52726364 46.80329132]
[-62.46951294 41.27033234]
[-76.41176605 35.73737335]
[-90.35401917 30.20441628]
[-104.29626465 24.67145729]
[-118.23851776 19.13849831]
[-132.18077087 13.60553932]
[-149.13325500 13.38302708]
[-153.61235046 -2.96854758]
[-139.13973999 -11.79916859]
[-126.64781189 -0.33671147]
[-112.70555878 5.19624758]
[-98.76330566 10.72920609]
[-84.82106018 16.26216507]
[-70.87880707 21.79512405]
[-56.93655396 27.32808304]
[-42.99430466 32.86104202]
[-28.31050491 30.36398125]
[-18.33748436 42.64605713]
[-4.39523411 48.17901611]
[3.02246547 47.72068787]
[9.76743031 53.96307373]
[23.59691811 59.77214050]
[37.42640686 65.58120728]
[42.37654877 57.81415558]
[48.28515244 50.74878311]
[55.05393982 44.50261688]
[62.57032394 39.17955017]
[70.70928192 34.86812210]
[79.33544159 31.64004326]
[88.30531311 29.54900932]
[97.46971130 28.62980080]
[106.67619324 28.89770508]
[109.63909912 14.19324493]
[112.60201263 -0.51121551]
[106.30958557 -17.79002571]
[118.35707855 -30.51829720]
[121.02704620 -45.27875900]
[123.69701385 -60.03922272]
[126.36698151 -74.79968262]
[117.15450287 -87.64125061]
[119.80304718 -103.22203064]
[132.74128723 -112.29822540]
[148.29319763 -109.48509979]
[157.23210144 -96.45161438]
[154.25469971 -80.93032074]
[141.12744141 -72.12971497]
[138.45747375 -57.36925507]
[135.78750610 -42.60879135]
[133.11753845 -27.84832764]
[139.76272583 -17.69963646]
[137.62103271 -5.35173178]
[127.30647278 2.45169544]
[124.34355927 17.15615654]
[121.38065338 31.86061668]
[137.73710632 39.36981964]
[151.69677734 50.72981262]
[163.58192444 41.57868576]
[175.46708679 32.42755890]
[178.95231628 16.76765060]
[193.43136597 9.85848999]
[207.79714966 17.00019073]
[211.02946472 32.71425247]
[200.64874268 44.94618988]
[184.61820984 44.31270981]
[172.73304749 53.46383667]
[160.84790039 62.61496353]
[168.32270813 79.21260071]
[171.35858154 97.16078949]
[169.75828552 115.29344177]
[163.62579346 132.43247986]
[176.20043945 140.61039734]
[188.77508545 148.78831482]
[201.34971619 156.96624756]
[213.92436218 165.14416504]
[226.49900818 173.32208252]
[239.07363892 181.50001526]
[251.64828491 189.67793274]
[264.44134521 187.77500916]
[274.75830078 194.88967896]
[277.35357666 206.73953247]
[289.76312256 215.16584778]
[302.17269897 223.59216309]
[314.58224487 232.01847839]
[326.99182129 240.44479370]
[337.60742188 237.77702332]
[347.72082520 241.34817505]
[354.04214478 249.73858643]
[354.65844727 260.00500488]
[366.72320557 268.91799927]
[378.78796387 277.83102417]
[390.85269165 286.74404907]
[407.19982910 288.04922485]
[413.99777222 302.97302246]
[404.25338745 316.16314697]
[387.99084473 314.05068970]
[381.93969727 298.80880737]
[369.87493896 289.89578247]
[357.81018066 280.98275757]
[345.74545288 272.06973267]
[326.45388794 271.36627197]
[318.56549072 252.85435486]
[306.15594482 244.42803955]
[293.74636841 236.00172424]
[281.33682251 227.57540894]
[268.92724609 219.14909363]
[251.40422058 218.84190369]
[243.47036743 202.25256348]
[230.89572144 194.07464600]
[218.32107544 185.89672852]
[205.74644470 177.71881104]
[193.17179871 169.54087830]
[180.59715271 161.36296082]
[168.02252197 153.18504333]
[155.44787598 145.00712585]
[138.46279907 160.17242432]
[117.56758118 169.22058105]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 24]
[2 23]
[3 22]
[4 21]
[5 20]
[6 19]
[7 18]
[8 17]
[9 16]
[10 15]
[35 64]
[36 63]
[37 62]
[38 60]
[39 59]
[41 57]
[42 56]
[43 55]
[44 54]
[45 53]
[46 52]
[47 51]
[73 95]
[74 94]
[75 93]
[77 90]
[78 89]
[79 88]
[80 87]
[97 107]
[98 106]
[99 105]
[111 155]
[112 154]
[113 153]
[114 152]
[115 151]
[116 150]
[117 149]
[118 148]
[121 146]
[122 145]
[123 144]
[124 143]
[125 142]
[129 140]
[130 139]
[131 138]
[132 137]
] def

init

% Start Annotations
1 24 0.0 1 colorpair
2 23 0.0 1 colorpair
3 22 0.0 1 colorpair
4 21 0.0 1 colorpair
5 20 0.0 1 colorpair
6 19 0.0 1 colorpair
7 18 0.0 1 colorpair
8 17 0.0 1 colorpair
9 16 0.0 1 colorpair
10 15 0.0 1 colorpair
35 64 0.0 1 colorpair
36 63 0.0 1 colorpair
37 62 0.0 1 colorpair
38 60 0.0 1 colorpair
39 59 0.0 1 colorpair
41 57 0.0 1 colorpair
42 56 0.0 1 colorpair
43 55 0.0 1 colorpair
44 54 0.0 1 colorpair
45 53 0.0 1 colorpair
46 52 0.0 1 colorpair
47 51 0.0 1 colorpair
73 95 0.0 1 colorpair
74 94 0.0 1 colorpair
75 93 0.0 1 colorpair
77 90 0.0 1 colorpair
78 89 0.0 1 colorpair
79 88 0.0 1 colorpair
80 87 0.0 1 colorpair
97 107 0.0 1 colorpair
98 106 0.0 1 colorpair
99 105 0.0 1 colorpair
111 155 0.0 1 colorpair
112 154 0.0 1 colorpair
113 153 0.0 1 colorpair
114 152 0.0 1 colorpair
115 151 0.0 1 colorpair
116 150 0.0 1 colorpair
117 149 0.0 1 colorpair
118 148 0.0 1 colorpair
121 146 0.0 1 colorpair
122 145 0.0 1 colorpair
123 144 0.0 1 colorpair
124 143 0.0 1 colorpair
125 142 0.0 1 colorpair
129 140 0.0 1 colorpair
130 139 0.0 1 colorpair
131 138 0.0 1 colorpair
132 137 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
