%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Dec 16 19:59:00 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACUGUUUACGAAUCAUUAAUGAUAAUGAUCAAUUUUGGCGGAUUGAUAUUAAAUACCGUCUUGUUGAUCUUCAAUAUAAUGAUGAUUGUAACGUCAAGCCAAAAGAAAAAA\
) } def
/len { sequence length } bind def

/coor [
[136.92169189 262.67089844]
[148.38749695 252.78080750]
[142.78950500 238.86453247]
[137.19152832 224.94827271]
[131.59353638 211.03199768]
[126.10352325 205.93182373]
[126.03844452 196.65835571]
[120.82266235 182.59437561]
[115.60688782 168.53038025]
[110.25823212 163.28216553]
[110.44647217 154.01037598]
[105.61679840 139.80915833]
[100.78712463 125.60795593]
[95.95745087 111.40675354]
[90.74167633 97.34276581]
[85.14369202 83.42649841]
[79.54570007 69.51023102]
[73.94771576 55.59395981]
[68.34973145 41.67768860]
[62.75174713 27.76141930]
[57.15376282 13.84514904]
[42.77927399 14.64882946]
[28.88522339 10.95997620]
[16.83859825 3.15534377]
[7.82032490 -7.98406315]
[2.70951653 -21.35112762]
[1.99778855 -35.62264633]
[5.74199772 -49.39031219]
[13.55994987 -61.29969025]
[24.66937065 -70.18345642]
[19.45359421 -84.24743652]
[14.23781776 -98.31142426]
[9.02204227 -112.37541199]
[3.80626583 -126.43939209]
[-1.40951025 -140.50337219]
[-6.62528658 -154.56736755]
[-19.50426483 -158.77908325]
[-27.45464325 -169.50941467]
[-27.72556686 -182.66593933]
[-20.44310951 -193.39105225]
[-25.27278519 -207.59225464]
[-30.10246086 -221.79345703]
[-34.93213654 -235.99465942]
[-39.76181030 -250.19587708]
[-44.78500366 -264.32977295]
[-50.00078201 -278.39376831]
[-55.21655655 -292.45776367]
[-70.00313568 -297.54608154]
[-78.01525879 -310.97515869]
[-75.46983337 -326.40417480]
[-63.56874466 -336.54803467]
[-47.93131256 -336.61712646]
[-35.94106293 -326.57879639]
[-33.25941849 -311.17288208]
[-41.15257263 -297.67352295]
[-35.93679428 -283.60955811]
[-30.72101974 -269.54556274]
[-25.37236023 -264.29733276]
[-25.56060410 -255.02554321]
[-20.73093033 -240.82434082]
[-15.90125465 -226.62313843]
[-11.07157993 -212.42193604]
[-6.24190474 -198.22071838]
[9.10934162 -191.50416565]
[15.03115463 -175.47058105]
[7.43869877 -159.78314209]
[12.65447521 -145.71916199]
[17.87025070 -131.65516663]
[23.08602715 -117.59118652]
[28.30180359 -103.52719879]
[33.51757812 -89.46321106]
[38.73335648 -75.39923096]
[54.41236496 -75.70545197]
[69.28146362 -70.63854218]
[81.55261230 -60.78856277]
[89.74365234 -47.32188034]
[92.85726929 -31.84309578]
[90.50242615 -16.20384216]
[82.94335175 -2.28129292]
[71.07003021 8.24716377]
[76.66802216 22.16343307]
[82.26600647 36.07970428]
[87.86399078 49.99597168]
[93.46197510 63.91224289]
[99.05995941 77.82851410]
[104.65794373 91.74478149]
[109.01937866 94.91697693]
[111.22220612 100.34446716]
[110.15865326 106.57707977]
[114.98832703 120.77828217]
[119.81800842 134.97949219]
[124.64768219 149.18069458]
[129.67086792 163.31460571]
[134.88665771 177.37858582]
[140.10243225 191.44258118]
[145.50981140 205.43400574]
[151.10780334 219.35028076]
[156.70578003 233.26655579]
[162.30377197 247.18281555]
[177.42433167 246.37823486]
[191.98617554 250.52928162]
[204.40975952 259.18569946]
[213.34745789 271.40847778]
[217.82975769 285.87179565]
[217.37048340 301.00677490]
[212.01943970 315.17169189]
[202.35705566 326.83004761]
[189.43145752 334.71722412]
[174.64469910 337.97769165]
[159.60075378 336.25775146]
[145.93145752 329.74398804]
[135.11956787 319.14294434]
[128.33786011 305.60458374]
[126.32198334 290.59741211]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 99]
[3 98]
[4 97]
[5 96]
[7 95]
[8 94]
[9 93]
[11 92]
[12 91]
[13 90]
[14 89]
[15 86]
[16 85]
[17 84]
[18 83]
[19 82]
[20 81]
[21 80]
[30 72]
[31 71]
[32 70]
[33 69]
[34 68]
[35 67]
[36 66]
[40 63]
[41 62]
[42 61]
[43 60]
[44 59]
[45 57]
[46 56]
[47 55]
] def

init

% Start Annotations
2 99 0.0 1 colorpair
3 98 0.0 1 colorpair
4 97 0.0 1 colorpair
5 96 0.0 1 colorpair
7 95 0.0 1 colorpair
8 94 0.0 1 colorpair
9 93 0.0 1 colorpair
11 92 0.0 1 colorpair
12 91 0.0 1 colorpair
13 90 0.0 1 colorpair
14 89 0.0 1 colorpair
15 86 0.0 1 colorpair
16 85 0.0 1 colorpair
17 84 0.0 1 colorpair
18 83 0.0 1 colorpair
19 82 0.0 1 colorpair
20 81 0.0 1 colorpair
21 80 0.0 1 colorpair
30 72 0.0 1 colorpair
31 71 0.0 1 colorpair
32 70 0.0 1 colorpair
33 69 0.0 1 colorpair
34 68 0.0 1 colorpair
35 67 0.0 1 colorpair
36 66 0.0 1 colorpair
40 63 0.0 1 colorpair
41 62 0.0 1 colorpair
42 61 0.0 1 colorpair
43 60 0.0 1 colorpair
44 59 0.0 1 colorpair
45 57 0.0 1 colorpair
46 56 0.0 1 colorpair
47 55 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
