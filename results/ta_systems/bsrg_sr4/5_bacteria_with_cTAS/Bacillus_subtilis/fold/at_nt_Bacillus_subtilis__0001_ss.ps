%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Dec 16 19:58:20 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
A___A_ACAA____AUAAUUAUUUUUUGCAUUUUG_UUUAUG_GAAAUGCAUAAAAUAA__AAA__GACCAGGGUGUUGGUAGCACC__CCGGC_____UCUGUACAAAAAGCUGCCCAUCAAAGGG_CUUGCUCGUUGU__UAAAUCUGCGUAGACCUAACCCUUCAGGUGUCC_AAACUCAAGGGAAGGUCUAUUU\
) } def
/len { sequence length } bind def

/coor [
[198.30142212 282.79260254]
[186.23052979 288.78717041]
[173.79602051 293.98568726]
[161.05033875 298.36621094]
[148.04722595 301.91030884]
[134.84150696 304.60296631]
[121.48886871 306.43286133]
[108.04561615 307.39230347]
[94.56844330 307.47723389]
[81.11416626 306.68728638]
[67.73953247 305.02575684]
[54.50093079 302.49972534]
[41.45418549 299.11978149]
[28.65431595 294.90020752]
[16.15529060 289.85879517]
[4.00981569 284.01681519]
[-7.73089361 277.39886475]
[-19.01733017 270.03286743]
[-29.80190086 261.94989014]
[-40.03913116 253.18402100]
[-49.68585205 243.77220154]
[-58.70138931 233.75415039]
[-67.04772186 223.17207336]
[-74.68965912 212.07061768]
[-81.59497833 200.49659729]
[-87.73455811 188.49880981]
[-93.08251190 176.12783813]
[-107.22673798 181.12191772]
[-121.37096405 186.11599731]
[-135.51519775 191.11007690]
[-149.65942383 196.10415649]
[-163.80364990 201.09823608]
[-177.94787598 206.09231567]
[-192.09210205 211.08639526]
[-195.53576660 226.12449646]
[-206.57896423 236.89723206]
[-221.69781494 239.96702576]
[-236.06797791 234.35435486]
[-245.10395813 221.85017395]
[-245.92243958 206.44454956]
[-238.26222229 193.05332947]
[-224.56767273 185.94961548]
[-209.20864868 187.40019226]
[-197.08618164 196.94216919]
[-182.94195557 191.94808960]
[-168.79772949 186.95401001]
[-154.65350342 181.95993042]
[-140.50927734 176.96585083]
[-126.36504364 171.97177124]
[-112.22081757 166.97769165]
[-98.07659149 161.98361206]
[-101.91030121 148.04719543]
[-104.76474762 133.87774658]
[-106.62607574 119.54399109]
[-107.48526764 105.11544800]
[-107.33814240 90.66209412]
[-106.18543243 76.25403595]
[-104.03271484 61.96113968]
[-100.89043427 47.85273361]
[-96.77382660 33.99724197]
[-91.70286560 20.46186638]
[-85.70214081 7.31225252]
[-78.80075073 -5.38782358]
[-71.03218079 -17.57676697]
[-62.43409729 -29.19545937]
[-53.04820633 -40.18754959]
[-42.92002869 -50.49972916]
[-32.09868240 -60.08198166]
[-20.63665581 -68.88783264]
[-28.90857887 -81.40084076]
[-42.97330093 -88.64612579]
[-43.53744507 -103.53003693]
[-52.00586700 -115.91090393]
[-60.66868591 -128.15653992]
[-75.83175659 -126.07329559]
[-90.22217560 -131.28620911]
[-100.53311920 -142.59739685]
[-104.39522552 -157.40762329]
[-100.92099762 -172.31361389]
[-90.90879059 -183.89006042]
[-76.65933990 -189.47680664]
[-61.44706345 -187.79005432]
[-48.76762772 -179.21739197]
[-41.53467560 -165.72875977]
[-41.41028976 -150.42375183]
[-48.42304993 -136.81935120]
[-39.76023483 -124.57372284]
[-35.27860260 -122.89764404]
[-31.80656052 -118.38295746]
[-31.02443886 -111.80196381]
[-17.55138016 -105.45169067]
[-16.39557457 -89.67276001]
[-8.12365150 -77.15975189]
[4.30728149 -84.17167664]
[17.19071579 -90.31270599]
[30.46573257 -95.55380249]
[44.06955719 -99.87017822]
[57.93785858 -103.24143219]
[72.00505829 -105.65161133]
[86.20463562 -107.08933258]
[100.46945190 -107.54778290]
[114.73204803 -107.02480316]
[128.92498779 -105.52286530]
[142.98114014 -103.04907227]
[156.83404541 -99.61511230]
[170.41819763 -95.23723602]
[183.66937256 -89.93614197]
[196.52488708 -83.73690033]
[208.92398071 -76.66881561]
[220.80799866 -68.76531219]
[232.12074280 -60.06377411]
[242.08120728 -71.27935028]
[252.04167175 -82.49491882]
[255.32235718 -100.60988617]
[272.17117310 -105.50251770]
[281.86328125 -116.95079041]
[291.46472168 -128.47520447]
[301.06616211 -139.99963379]
[299.38409424 -155.71415710]
[309.37142944 -167.96278381]
[325.10284424 -169.47862244]
[337.24520874 -159.36236572]
[338.59463501 -143.61578369]
[328.35055542 -131.58106995]
[312.59060669 -130.39819336]
[302.98916626 -118.87377167]
[293.38769531 -107.34934998]
[291.51971436 -100.19101715]
[283.54260254 -95.72034454]
[284.13442993 -83.63212585]
[276.06927490 -74.07733154]
[263.25726318 -72.53445435]
[253.29678345 -61.31887817]
[243.33631897 -50.10330582]
[255.74348450 -37.18698120]
[266.99090576 -23.24908638]
[276.99484253 -8.39341354]
[285.68075562 7.26941586]
[292.98397827 23.62276649]
[298.85015869 40.54486465]
[303.23559570 57.90969849]
[306.10763550 75.58795929]
[307.44485474 93.44799805]
[307.23736572 111.35683441]
[305.48666382 129.18110657]
[302.20578003 146.78807068]
[297.41918945 164.04663086]
[291.16247559 180.82826233]
[283.48229980 197.00799561]
[274.43579102 212.46536255]
[264.09033203 227.08525085]
[252.52299500 240.75880432]
[263.17138672 251.32345581]
[273.81976318 261.88812256]
[284.46813965 272.45275879]
[295.11651611 283.01742554]
[305.76489258 293.58209229]
[316.41326904 304.14675903]
[327.06164551 314.71139526]
[339.94549561 315.44268799]
[348.59753418 324.46948242]
[348.76971436 336.57095337]
[359.25000000 347.30239868]
[369.73028564 358.03384399]
[380.21054077 368.76528931]
[390.69082642 379.49670410]
[405.86828613 383.96383667]
[409.22515869 398.47521973]
[419.70544434 409.20666504]
[434.56695557 405.32974243]
[449.37161255 409.41842651]
[460.13705444 420.37295532]
[463.96737671 435.24655151]
[459.83227539 450.03833008]
[448.84408569 460.76934814]
[433.95855713 464.55303955]
[419.17980957 460.37161255]
[408.48327637 449.34982300]
[404.74624634 434.45251465]
[408.97399902 419.68695068]
[398.49371338 408.95550537]
[384.06588745 405.25598145]
[379.95938110 389.97698975]
[369.47912598 379.24554443]
[358.99884033 368.51412964]
[348.51855469 357.78268433]
[338.03826904 347.05123901]
[320.91427612 343.23162842]
[316.49700928 325.35977173]
[305.84860229 314.79513550]
[295.20022583 304.23046875]
[284.55184937 293.66580200]
[273.90347290 283.10116577]
[263.25509644 272.53649902]
[252.60671997 261.97183228]
[241.95832825 251.40718079]
[231.83238220 260.30136108]
[221.15051270 268.51959229]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 51]
[28 50]
[29 49]
[30 48]
[31 47]
[32 46]
[33 45]
[34 44]
[69 93]
[70 92]
[72 90]
[73 87]
[74 86]
[111 134]
[112 133]
[113 132]
[115 129]
[116 127]
[117 126]
[118 125]
[152 196]
[153 195]
[154 194]
[155 193]
[156 192]
[157 191]
[158 190]
[159 189]
[162 187]
[163 186]
[164 185]
[165 184]
[166 183]
[168 181]
[169 180]
] def

init

% Start Annotations
27 51 0.0 0.6 colorpair
28 50 0.0 1 colorpair
29 49 0.16 1 colorpair
30 48 0.0 1 colorpair
31 47 0.16 1 colorpair
32 46 0.0 0.6 colorpair
33 45 0.0 0.6 colorpair
34 44 0.16 0.2 colorpair
69 93 0.0 1 colorpair
70 92 0.0 1 colorpair
72 90 0.0 1 colorpair
73 87 0.0 1 colorpair
74 86 0.0 1 colorpair
111 134 0.0 1 colorpair
112 133 0.0 1 colorpair
113 132 0.0 1 colorpair
115 129 0.0 1 colorpair
116 127 0.0 1 colorpair
117 126 0.0 1 colorpair
118 125 0.0 1 colorpair
152 196 0.16 1 colorpair
153 195 0.0 1 colorpair
154 194 0.0 1 colorpair
155 193 0.0 1 colorpair
156 192 0.16 1 colorpair
157 191 0.0 1 colorpair
158 190 0.0 1 colorpair
159 189 0.0 1 colorpair
162 187 0.0 1 colorpair
163 186 0.0 1 colorpair
164 185 0.0 1 colorpair
165 184 0.0 1 colorpair
166 183 0.0 0.6 colorpair
168 181 0.16 1 colorpair
169 180 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
27 51 1 gmark
29 cmark
47 cmark
32 46 1 gmark
33 45 1 gmark
34 44 2 gmark
34 cmark
152 cmark
156 cmark
166 183 1 gmark
168 cmark
169 180 2 gmark

% End Annotations
showpage
end
%%EOF
