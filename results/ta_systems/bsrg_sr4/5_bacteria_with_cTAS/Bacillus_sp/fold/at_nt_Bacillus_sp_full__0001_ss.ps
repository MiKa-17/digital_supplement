%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Dec 16 19:58:14 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__________________________UGCAUUUUGUUUAAUGAAAUGCAUAAAAU_AAAAAGACCAGGGUGCUACCAACACCCCGACUCUGUAC_AAAAGCUGCCCAUCAAAGGGCUUGCUCAAAGGCAAAU_CUGCGUAGGCCUAACCCUUCAGGUGUCCAAACUCAAGGGAAGGUCUAUUU\
) } def
/len { sequence length } bind def

/coor [
[166.87301636 260.14813232]
[156.58230591 264.06665039]
[146.06382751 267.32467651]
[135.35989380 269.90908813]
[124.51361847 271.80950928]
[113.56865692 273.01824951]
[102.56906128 273.53045654]
[91.55913544 273.34408569]
[80.58318329 272.45986938]
[69.68540192 270.88137817]
[58.90965652 268.61495972]
[48.29933167 265.66973877]
[37.89714050 262.05758667]
[27.74496269 257.79299927]
[17.88366318 252.89320374]
[8.35294437 247.37788391]
[-0.80882591 241.26925659]
[-9.56476498 234.59191895]
[-17.87962341 227.37275696]
[-25.71992874 219.64080811]
[-33.05411530 211.42721558]
[-39.85266113 202.76506042]
[-46.08819199 193.68917847]
[-51.73561096 184.23614502]
[-56.77217865 174.44398499]
[-61.17761993 164.35214233]
[-64.93420410 154.00122070]
[-79.37796021 158.04817200]
[-93.82172394 162.09512329]
[-108.26548004 166.14207458]
[-122.70923615 170.18904114]
[-137.15299988 174.23599243]
[-151.59675598 178.28294373]
[-156.02821350 193.06013489]
[-167.76020813 203.07832336]
[-183.04910278 205.14070129]
[-197.01625061 198.58920288]
[-205.20480347 185.51437378]
[-205.00181580 170.08834839]
[-196.47206116 157.23350525]
[-182.33735657 151.05178833]
[-167.10803223 153.51576233]
[-155.64370728 163.83917236]
[-141.19995117 159.79222107]
[-126.75619507 155.74526978]
[-112.31243134 151.69831848]
[-97.86867523 147.65136719]
[-83.42491150 143.60441589]
[-68.98115540 139.55746460]
[-72.07499695 122.57472992]
[-73.46643066 105.36865234]
[-73.14167023 88.10945892]
[-71.10395050 70.96790314]
[-67.37341309 54.11357880]
[-61.98698044 37.71322632]
[-54.99793243 21.92910576]
[-46.47542191 6.91737604]
[-36.50376129 -7.17344427]
[-25.18160629 -20.20394897]
[-12.62097263 -32.04521942]
[1.05387104 -42.58010864]
[-6.95756531 -55.26146698]
[-14.96900177 -67.94282532]
[-23.08840561 -80.55533600]
[-31.31518364 -93.09806824]
[-45.35370636 -100.39398956]
[-45.86420822 -115.27983856]
[-54.09098816 -127.82257080]
[-62.31776428 -140.36531067]
[-70.54454041 -152.90803528]
[-78.77132416 -165.45075989]
[-94.32105255 -167.10601807]
[-105.13156891 -178.40498352]
[-106.09848022 -194.01264954]
[-96.76522827 -206.55953979]
[-81.53870392 -210.12141418]
[-67.60839844 -203.01643372]
[-61.55177307 -188.59939575]
[-66.22859192 -173.67755127]
[-58.00181198 -161.13481140]
[-49.77503204 -148.59208679]
[-41.54825592 -136.04934692]
[-33.32147598 -123.50661469]
[-19.87138939 -117.10783386]
[-18.77245140 -101.32484436]
[-10.54567242 -88.78211212]
[-4.23302603 -84.90414429]
[-2.28764176 -75.95426178]
[5.72379446 -63.27290344]
[13.73523140 -50.59154510]
[32.59000778 -59.92284775]
[52.43531418 -66.90423584]
[72.97953033 -71.43312836]
[93.92079163 -73.44297791]
[114.95137787 -72.90425110]
[135.76226807 -69.82485962]
[156.04766846 -64.25006104]
[175.50950623 -56.26176071]
[193.86180115 -45.97734833]
[202.51200867 -58.23189545]
[211.16221619 -70.48644257]
[212.39973450 -88.84792328]
[228.58761597 -95.59796906]
[237.02734375 -107.99841309]
[245.46705627 -120.39885712]
[253.90678406 -132.79930115]
[250.71009827 -148.27693176]
[259.46371460 -161.43556213]
[274.97427368 -164.46842957]
[288.03964233 -155.57617188]
[290.90832520 -140.03442383]
[281.87844849 -127.06381226]
[266.30722046 -124.35958862]
[257.86749268 -111.95913696]
[249.42778015 -99.55869293]
[240.98806763 -87.15824127]
[242.93608093 -75.20442200]
[235.98594666 -64.79954529]
[223.41676331 -61.83623886]
[214.76655579 -49.58169174]
[206.11634827 -37.32714462]
[216.88572693 -28.28542709]
[226.88775635 -18.40152359]
[236.05677795 -7.74032259]
[244.33259583 3.62818766]
[251.66087341 15.62937260]
[257.99349976 28.18444633]
[263.28894043 41.21098328]
[267.51235962 54.62346649]
[270.63610840 68.33384705]
[272.63961792 82.25211334]
[273.50976562 96.28688812]
[273.24081421 110.34603882]
[271.83456421 124.33727264]
[269.30023193 138.16873169]
[265.65444946 151.74961853]
[260.92117310 164.99076843]
[255.13143921 177.80526733]
[248.32328796 190.10897827]
[240.54139709 201.82112122]
[231.83686829 212.86480713]
[242.79940796 223.10310364]
[258.16616821 226.86776733]
[262.18661499 241.20950317]
[273.14913940 251.44779968]
[288.72174072 251.08460999]
[299.69348145 261.62387085]
[299.94375610 276.47219849]
[310.90628052 286.71051025]
[321.86883545 296.94879150]
[332.83135986 307.18710327]
[343.79391479 317.42538452]
[356.70309448 317.76943970]
[365.62478638 326.54263306]
[366.14959717 338.64276123]
[376.93576050 349.06674194]
[387.72189331 359.49072266]
[403.51760864 358.97030640]
[414.99758911 369.83245850]
[415.35095215 385.63278198]
[404.36804199 396.99728394]
[388.56484985 397.18356323]
[377.31710815 386.08111572]
[377.29791260 370.27685547]
[366.51177979 359.85287476]
[355.72564697 349.42892456]
[338.50299072 346.11358643]
[333.55560303 328.38793945]
[322.59307861 318.14962769]
[311.63052368 307.91134644]
[300.66799927 297.67303467]
[289.70544434 287.43475342]
[274.87466431 288.19833374]
[263.61123657 277.97140503]
[262.91085815 262.41033936]
[251.94831848 252.17204285]
[237.36564636 249.13969421]
[232.56109619 234.06564331]
[221.59855652 223.82734680]
[213.50105286 231.28950500]
[204.94662476 238.22311401]
[195.96969604 244.60028076]
[186.60643005 250.39530945]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 49]
[28 48]
[29 47]
[30 46]
[31 45]
[32 44]
[33 43]
[61 90]
[62 89]
[63 88]
[64 86]
[65 85]
[67 83]
[68 82]
[69 81]
[70 80]
[71 79]
[99 121]
[100 120]
[101 119]
[103 116]
[104 115]
[105 114]
[106 113]
[141 179]
[142 178]
[144 176]
[145 175]
[148 172]
[149 171]
[150 170]
[151 169]
[152 168]
[155 166]
[156 165]
[157 164]
] def

init

% Start Annotations
27 49 0.0 0.6 colorpair
28 48 0.0 0.6 colorpair
29 47 0.0 0.6 colorpair
30 46 0.0 0.6 colorpair
31 45 0.0 0.6 colorpair
32 44 0.0 0.6 colorpair
33 43 0.0 0.6 colorpair
61 90 0.0 0.6 colorpair
62 89 0.0 0.6 colorpair
63 88 0.16 0.6 colorpair
64 86 0.16 0.6 colorpair
65 85 0.0 0.6 colorpair
67 83 0.0 0.6 colorpair
68 82 0.0 0.6 colorpair
69 81 0.0 0.6 colorpair
70 80 0.0 0.6 colorpair
71 79 0.0 0.6 colorpair
99 121 0.0 0.6 colorpair
100 120 0.0 0.6 colorpair
101 119 0.0 0.6 colorpair
103 116 0.0 0.6 colorpair
104 115 0.0 0.6 colorpair
105 114 0.0 0.6 colorpair
106 113 0.0 0.6 colorpair
141 179 0.16 1 colorpair
142 178 0.0 1 colorpair
144 176 0.16 1 colorpair
145 175 0.16 1 colorpair
148 172 0.0 1 colorpair
149 171 0.0 1 colorpair
150 170 0.0 1 colorpair
151 169 0.0 0.2 colorpair
152 168 0.0 1 colorpair
155 166 0.0 1 colorpair
156 165 0.0 1 colorpair
157 164 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
27 49 1 gmark
28 48 1 gmark
29 47 1 gmark
30 46 1 gmark
31 45 1 gmark
32 44 1 gmark
33 43 1 gmark
61 90 1 gmark
62 89 1 gmark
63 88 1 gmark
63 cmark
64 86 1 gmark
64 cmark
86 cmark
65 85 1 gmark
67 83 1 gmark
68 82 1 gmark
69 81 1 gmark
70 80 1 gmark
71 79 1 gmark
99 121 1 gmark
100 120 1 gmark
101 119 1 gmark
103 116 1 gmark
104 115 1 gmark
105 114 1 gmark
106 113 1 gmark
141 cmark
144 cmark
145 cmark
151 169 2 gmark
157 cmark
164 cmark

% End Annotations
showpage
end
%%EOF
