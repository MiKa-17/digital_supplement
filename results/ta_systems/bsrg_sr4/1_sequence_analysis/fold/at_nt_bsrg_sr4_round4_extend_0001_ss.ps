%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Dec 16 18:05:45 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______________UUAAA___ACUGUAAA_AUAU_U_GAUUGGUUAU_A_GUGUAU__________UUCUUUAAUAAGA_AA_UGC_AUAAA_____________A_UA_____AA_AA__GACCAGGGUGUUGGUAACACC__CCGGC_____UCUGUACAAA____AAGCUGCCCA____UC_AAAG______GG_CUUGCU______C_A___AUGGUU__A_UU__CAUGA_UAGACC______UAUC_C\
CUUCA_G__GUUUCC___AG_GCUCAAGGG_A__GGUCUAUUU__________________________________\
) } def
/len { sequence length } bind def

/coor [
[-444.34460449 454.32003784]
[-458.33087158 459.74258423]
[-472.43780518 464.84301758]
[-486.65798950 469.61862183]
[-500.98391724 474.06695557]
[-515.40808105 478.18560791]
[-529.92285156 481.97244263]
[-544.52069092 485.42547607]
[-559.19384766 488.54287720]
[-573.93463135 491.32299805]
[-588.73529053 493.76443481]
[-603.58801270 495.86581421]
[-618.48504639 497.62609863]
[-633.41851807 499.04434204]
[-648.38055420 500.11981201]
[-663.36334229 500.85189819]
[-678.35900879 501.24026489]
[-693.35955811 501.28469849]
[-708.35723877 500.98513794]
[-723.34411621 500.34179688]
[-738.31225586 499.35498047]
[-753.25390625 498.02520752]
[-768.16107178 496.35317993]
[-783.02600098 494.33978271]
[-797.84082031 491.98608398]
[-812.59783936 489.29330444]
[-827.28918457 486.26287842]
[-841.90722656 482.89636230]
[-856.44421387 479.19555664]
[-870.89251709 475.16238403]
[-885.24450684 470.79901123]
[-899.49273682 466.10769653]
[-913.62963867 461.09091187]
[-927.64776611 455.75128174]
[-941.53979492 450.09164429]
[-955.29840088 444.11495972]
[-968.91632080 437.82437134]
[-982.38641357 431.22317505]
[-995.70166016 424.31484985]
[-1008.85498047 417.10305786]
[-1021.83947754 409.59155273]
[-1034.64831543 401.78430176]
[-1047.27478027 393.68539429]
[-1059.71215820 385.29910278]
[-1071.95410156 376.62982178]
[-1083.99401855 367.68215942]
[-1095.82556152 358.46075439]
[-1107.44250488 348.97048950]
[-1118.83886719 339.21633911]
[-1130.00854492 329.20346069]
[-1140.94567871 318.93710327]
[-1151.64453125 308.42263794]
[-1162.09960938 297.66564941]
[-1172.30517578 286.67172241]
[-1182.25598145 275.44671631]
[-1191.94677734 263.99649048]
[-1201.37255859 252.32705688]
[-1210.52819824 240.44458008]
[-1219.40893555 228.35528564]
[-1228.01025391 216.06553650]
[-1236.32751465 203.58180237]
[-1244.35632324 190.91064453]
[-1252.09240723 178.05871582]
[-1259.53186035 165.03279114]
[-1266.67065430 151.83970642]
[-1273.50500488 138.48638916]
[-1280.03149414 124.97989655]
[-1286.24645996 111.32729340]
[-1292.14672852 97.53578186]
[-1297.72937012 83.61260223]
[-1302.99121094 69.56507874]
[-1307.92956543 55.40059662]
[-1312.54174805 41.12660599]
[-1316.82556152 26.75061417]
[-1320.77856445 12.28017807]
[-1324.39868164 -2.27709413]
[-1327.68420410 -16.91354752]
[-1330.63305664 -31.62148476]
[-1333.24401855 -46.39317322]
[-1335.51562500 -61.22084427]
[-1337.44653320 -76.09670258]
[-1339.03588867 -91.01292419]
[-1340.28283691 -105.96166992]
[-1341.18664551 -120.93507385]
[-1341.74694824 -135.92526245]
[-1341.96337891 -150.92436218]
[-1341.83581543 -165.92448425]
[-1341.36425781 -180.91773987]
[-1340.54919434 -195.89622498]
[-1339.39074707 -210.85209656]
[-1337.88977051 -225.77746582]
[-1336.04699707 -240.66450500]
[-1333.86328125 -255.50537109]
[-1331.33984375 -270.29226685]
[-1328.47802734 -285.01739502]
[-1325.27929688 -299.67306519]
[-1321.74548340 -314.25152588]
[-1317.87817383 -328.74511719]
[-1313.67968750 -343.14620972]
[-1309.15197754 -357.44726562]
[-1304.29760742 -371.64074707]
[-1299.11914062 -385.71917725]
[-1293.61914062 -399.67517090]
[-1287.80053711 -413.50140381]
[-1281.66650391 -427.19058228]
[-1275.22021484 -440.73547363]
[-1268.46496582 -454.12902832]
[-1261.40441895 -467.36416626]
[-1254.04235840 -480.43392944]
[-1246.38244629 -493.33145142]
[-1238.42883301 -506.04992676]
[-1230.18566895 -518.58270264]
[-1221.65734863 -530.92315674]
[-1212.84826660 -543.06481934]
[-1203.76318359 -555.00134277]
[-1194.40673828 -566.72637939]
[-1184.78381348 -578.23382568]
[-1174.89965820 -589.51757812]
[-1164.75939941 -600.57171631]
[-1154.36828613 -611.39044189]
[-1143.73181152 -621.96807861]
[-1132.85571289 -632.29901123]
[-1121.74548340 -642.37786865]
[-1110.40710449 -652.19934082]
[-1098.84655762 -661.75823975]
[-1087.06982422 -671.04956055]
[-1075.08312988 -680.06835938]
[-1062.89282227 -688.80999756]
[-1050.50524902 -697.26977539]
[-1037.92700195 -705.44335938]
[-1025.16455078 -713.32629395]
[-1012.22479248 -720.91461182]
[-999.11444092 -728.20416260]
[-985.84039307 -735.19122314]
[-972.40960693 -741.87207031]
[-958.82916260 -748.24316406]
[-945.10620117 -754.30126953]
[-931.24792480 -760.04309082]
[-917.26165771 -765.46563721]
[-903.15472412 -770.56604004]
[-888.93457031 -775.34167480]
[-874.60858154 -779.78997803]
[-860.18444824 -783.90863037]
[-845.66961670 -787.69543457]
[-831.07183838 -791.14843750]
[-816.39868164 -794.26586914]
[-801.65789795 -797.04602051]
[-786.85723877 -799.48742676]
[-772.00445557 -801.58880615]
[-757.10748291 -803.34906006]
[-742.17401123 -804.76727295]
[-727.21191406 -805.84277344]
[-712.22912598 -806.57482910]
[-697.23352051 -806.96319580]
[-682.23291016 -807.00762939]
[-667.23522949 -806.70806885]
[-652.24841309 -806.06469727]
[-637.28021240 -805.07788086]
[-622.33862305 -803.74810791]
[-607.43145752 -802.07604980]
[-592.56652832 -800.06268311]
[-577.75164795 -797.70898438]
[-562.99468994 -795.01617432]
[-548.30334473 -791.98571777]
[-533.68530273 -788.61920166]
[-519.14831543 -784.91839600]
[-504.70001221 -780.88525391]
[-490.34799194 -776.52185059]
[-476.09979248 -771.83050537]
[-461.96292114 -766.81372070]
[-447.94476318 -761.47406006]
[-434.05276489 -755.81445312]
[-420.29415894 -749.83776855]
[-406.67623901 -743.54711914]
[-393.20611572 -736.94592285]
[-379.89089966 -730.03765869]
[-366.73757935 -722.82580566]
[-353.75311279 -715.31433105]
[-340.94424438 -707.50701904]
[-328.31781006 -699.40814209]
[-315.88037109 -691.02185059]
[-303.63848877 -682.35253906]
[-291.59860229 -673.40484619]
[-279.76705933 -664.18347168]
[-268.15008545 -654.69317627]
[-256.75375366 -644.93902588]
[-245.58406067 -634.92614746]
[-234.64689636 -624.65979004]
[-223.94802856 -614.14532471]
[-213.49304199 -603.38830566]
[-203.28746033 -592.39440918]
[-193.33665466 -581.16937256]
[-183.64584351 -569.71917725]
[-174.22012329 -558.04974365]
[-165.06445312 -546.16723633]
[-156.18363953 -534.07794189]
[-147.58238220 -521.78820801]
[-139.26516724 -509.30444336]
[-131.23637390 -496.63330078]
[-123.50025177 -483.78137207]
[-116.06083679 -470.75543213]
[-108.92205811 -457.56234741]
[-102.08766937 -444.20901489]
[-95.56125641 -430.70251465]
[-89.34625244 -417.04992676]
[-83.44592285 -403.25839233]
[-77.86338043 -389.33520508]
[-72.60155487 -375.28768921]
[-67.66321564 -361.12319946]
[-63.05095673 -346.84921265]
[-58.76720047 -332.47323608]
[-54.81420135 -318.00277710]
[-51.19403839 -303.44549561]
[-47.90861893 -288.80905151]
[-44.95966721 -274.10110474]
[-42.34873199 -259.32943726]
[-40.07719040 -244.50175476]
[-38.14623260 -229.62590027]
[-36.55687714 -214.70967102]
[-35.30995560 -199.76092529]
[-34.40612793 -184.78752136]
[-33.84587097 -169.79731750]
[-33.62947464 -154.79823303]
[-33.75705338 -139.79811096]
[-34.22854233 -124.80486298]
[-35.04368973 -109.82636261]
[-36.20207214 -94.87049866]
[-37.70307922 -79.94512177]
[-39.54591751 -65.05809021]
[-41.72962189 -50.21722794]
[-44.25304413 -35.43033981]
[-47.11485672 -20.70519638]
[-50.31355286 -6.04954481]
[-53.84745407 8.52890968]
[-57.71469879 23.02250099]
[-61.91325378 37.42361069]
[-54.63182831 36.45286179]
[-47.49963379 42.06181717]
[-33.24255753 46.72398376]
[-18.74080849 43.32567215]
[-8.02897263 54.96900177]
[6.22810411 59.63116837]
[20.48517990 64.29332733]
[27.28300667 55.07887650]
[36.38672256 48.10190582]
[47.08724213 43.91925430]
[58.54736710 42.86958694]
[69.86730194 45.04600143]
[80.15528107 50.28787994]
[88.59783173 58.19268036]
[94.52410889 68.14684296]
[97.45914459 79.37342072]
[97.16197205 90.99268341]
[102.23785400 89.95233917]
[107.54315948 91.79715729]
[111.44791412 96.42248535]
[125.41838837 101.88377380]
[139.38887024 107.34506989]
[149.01399231 102.44222260]
[159.53477478 103.58869934]
[167.53974915 110.17187500]
[170.56529236 119.85569000]
[177.06301880 119.37228394]
[182.10081482 121.83703613]
[184.63621521 125.82061005]
[198.39070129 131.80508423]
[212.17326355 137.72462463]
[226.01995850 130.45803833]
[241.28689575 133.84248352]
[250.76551819 146.27992249]
[249.98028564 161.89778137]
[239.30197144 173.32177734]
[223.77255249 175.15785217]
[210.72454834 166.53907776]
[206.31881714 151.53495789]
[198.97831726 151.81546021]
[192.40621948 145.55957031]
[178.65173340 139.57510376]
[164.84140015 133.72064209]
[145.86514282 137.60688782]
[133.92758179 121.31554413]
[119.95709991 115.85425568]
[105.98661804 110.39295959]
[91.96524048 105.06371307]
[78.92529297 118.52332306]
[61.33771515 124.84391785]
[42.81554031 122.77529144]
[27.14261436 112.78571320]
[17.50057220 96.95690155]
[15.82301617 78.55040741]
[1.56593978 73.88824463]
[-12.69113636 69.22608185]
[-28.21264839 72.29091644]
[-37.90472412 60.98106003]
[-52.16180038 56.31889343]
[-66.44071198 51.72403336]
[-71.29508209 65.91751862]
[-76.47361755 79.99595642]
[-81.97360992 93.95195770]
[-87.79215240 107.77817535]
[-93.92619324 121.46734619]
[-100.37249756 135.01226807]
[-107.12769318 148.40582275]
[-114.18820953 161.64094543]
[-121.55034637 174.71070862]
[-129.21023560 187.60823059]
[-137.16383362 200.32672119]
[-145.40696716 212.85949707]
[-153.93530273 225.19998169]
[-162.74435425 237.34165955]
[-171.82949829 249.27815247]
[-181.18594360 261.00320435]
[-190.80876160 272.51062012]
[-200.69293213 283.79440308]
[-210.83322144 294.84854126]
[-221.22430420 305.66726685]
[-231.86073303 316.24490356]
[-242.73689270 326.57586670]
[-253.84707642 336.65475464]
[-265.18545532 346.47619629]
[-276.74603271 356.03512573]
[-288.52276611 365.32641602]
[-300.50942993 374.34527588]
[-312.69973755 383.08688354]
[-325.08731079 391.54669189]
[-337.66558838 399.72024536]
[-350.42794800 407.60321045]
[-363.36773682 415.19149780]
[-376.47808838 422.48107910]
[-389.75216675 429.46813965]
[-403.18295288 436.14898682]
[-416.76339722 442.52014160]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[236 296]
[238 295]
[239 294]
[241 292]
[242 291]
[243 290]
[253 284]
[256 283]
[257 282]
[258 281]
[262 279]
[265 278]
[266 277]
[267 275]
] def

init

% Start Annotations
238 295 0.16 0.2 colorpair
239 294 0.16 0.2 colorpair
241 292 0.16 0.2 colorpair
242 291 0.32 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
236 296 3 gmark
236 cmark
238 295 2 gmark
295 cmark
239 294 2 gmark
239 cmark
294 cmark
241 292 2 gmark
241 cmark
242 291 2 gmark
242 cmark
291 cmark
243 290 4 gmark
243 cmark
253 284 3 gmark
253 cmark
284 cmark
256 283 3 gmark
256 cmark
257 282 4 gmark
282 cmark
258 281 7 gmark
258 cmark
281 cmark
262 279 6 gmark
262 cmark
279 cmark
265 278 8 gmark
265 cmark
278 cmark
266 277 11 gmark
266 cmark
277 cmark
267 275 4 gmark
267 cmark
275 cmark

% End Annotations
showpage
end
%%EOF
