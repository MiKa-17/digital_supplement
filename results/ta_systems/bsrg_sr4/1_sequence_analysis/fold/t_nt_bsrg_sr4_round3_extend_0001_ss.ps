%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Dec 16 18:03:53 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACUGUUUACGAAUCAUUAAUGAUAAUGAUCAAUUUUGGCGGGUUGAUAUUAAAUACCGUCUUGUUGAUCUUCAAUAUAAUGAUGAUUGUAACGUCAAGCCAAAAGAAAAAAUAG\
) } def
/len { sequence length } bind def

/coor [
[179.95712280 343.43496704]
[191.13966370 333.27978516]
[184.58004761 319.79010010]
[178.02043152 306.30041504]
[171.46083069 292.81072998]
[165.63143921 288.11138916]
[164.91152954 278.87350464]
[158.71334839 265.21395874]
[152.51516724 251.55445862]
[146.81294250 246.70159912]
[146.33920288 237.44781494]
[140.50683594 223.62812805]
[134.93582153 218.62519836]
[134.70858765 209.36209106]
[129.24617004 195.39204407]
[123.78376770 181.42199707]
[118.32135773 167.45196533]
[112.85894775 153.48191833]
[107.39654541 139.51187134]
[101.93413544 125.54183197]
[96.47172546 111.57179260]
[90.63935852 97.75211334]
[84.44117737 84.09259033]
[78.24299622 70.43306732]
[63.02532959 70.00413513]
[49.55784988 63.03893661]
[40.48714828 50.96655273]
[37.56951904 36.21363831]
[41.33111954 21.71674728]
[50.97400284 10.33781052]
[44.77582169 -3.32171082]
[38.57764053 -16.98123169]
[32.37945557 -30.64075470]
[26.18127441 -44.30027390]
[19.98309135 -57.95979691]
[13.78490829 -71.61931610]
[0.64428806 -74.90689850]
[-8.04527473 -85.04202271]
[-9.25201035 -98.14142609]
[-2.75604820 -109.35530853]
[-8.58841133 -123.17498779]
[-14.42077351 -136.99465942]
[-20.25313568 -150.81434631]
[-26.08549881 -164.63401794]
[-32.10130310 -178.37484741]
[-38.29948807 -192.03436279]
[-44.49766922 -205.69389343]
[-59.60733032 -209.72280884]
[-68.54990387 -222.55107117]
[-67.10297394 -238.12156677]
[-55.94974518 -249.08238220]
[-40.35642624 -250.25816345]
[-27.68570709 -241.09371948]
[-23.92031288 -225.91624451]
[-30.83814812 -211.89207458]
[-24.63996506 -198.23254395]
[-18.44178391 -184.57302856]
[-12.73955917 -179.72016907]
[-12.26581955 -170.46638489]
[-6.43345642 -156.64671326]
[-0.60109389 -142.82702637]
[5.23126888 -129.00735474]
[11.06363106 -115.18766785]
[26.85819244 -109.58226013]
[33.90683365 -94.00719452]
[27.44442940 -77.81750488]
[33.64261246 -64.15798187]
[39.84079361 -50.49845886]
[46.03897858 -36.83893585]
[52.23715973 -23.17941475]
[58.43534470 -9.51989365]
[64.63352966 4.13962793]
[79.54693604 4.37583303]
[92.93392181 11.09133053]
[102.11524200 23.00201416]
[105.22740936 37.77816391]
[101.60072327 52.50005722]
[91.90251923 64.23488617]
[98.10070038 77.89440155]
[104.29888153 91.55392456]
[108.78685760 94.52937317]
[111.22314453 99.84577942]
[110.44176483 106.10938263]
[115.90417480 120.07942200]
[121.36658478 134.04946899]
[126.82899475 148.01951599]
[132.29139709 161.98954773]
[137.75381470 175.95959473]
[143.21621704 189.92964172]
[148.67863464 203.89967346]
[154.32650757 217.79577637]
[160.15887451 231.61544800]
[166.17468262 245.35626221]
[172.37286377 259.01577759]
[178.57104492 272.67532349]
[184.95051575 286.25112915]
[191.51011658 299.74081421]
[198.06973267 313.23046875]
[204.62933350 326.72015381]
[219.52239990 324.19561768]
[234.52326965 325.97055054]
[248.41590881 331.90106201]
[260.07409668 341.50646973]
[268.55276489 354.00802612]
[273.16455078 368.39233398]
[273.53564453 383.49328613]
[269.63592529 398.08673096]
[261.78155518 410.98965454]
[250.60922241 421.15606689]
[237.02465820 427.76184082]
[222.12905884 430.27142334]
[207.12997437 428.48141479]
[193.24330139 422.53692627]
[181.59477234 412.91983032]
[173.12867737 400.40975952]
[168.53134155 386.02084351]
[168.17543030 370.91952515]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 99]
[3 98]
[4 97]
[5 96]
[7 95]
[8 94]
[9 93]
[11 92]
[12 91]
[14 90]
[15 89]
[16 88]
[17 87]
[18 86]
[19 85]
[20 84]
[21 83]
[22 80]
[23 79]
[24 78]
[30 72]
[31 71]
[32 70]
[33 69]
[34 68]
[35 67]
[36 66]
[40 63]
[41 62]
[42 61]
[43 60]
[44 59]
[45 57]
[46 56]
[47 55]
] def

init

% Start Annotations
2 99 0.16 1 colorpair
3 98 0.0 1 colorpair
4 97 0.0 1 colorpair
5 96 0.0 1 colorpair
7 95 0.0 1 colorpair
8 94 0.0 1 colorpair
9 93 0.0 1 colorpair
11 92 0.0 1 colorpair
12 91 0.0 1 colorpair
14 90 0.0 1 colorpair
15 89 0.0 1 colorpair
16 88 0.0 0.6 colorpair
17 87 0.0 1 colorpair
18 86 0.0 1 colorpair
19 85 0.0 1 colorpair
20 84 0.16 1 colorpair
21 83 0.0 1 colorpair
22 80 0.0 1 colorpair
23 79 0.0 1 colorpair
24 78 0.0 1 colorpair
30 72 0.0 1 colorpair
31 71 0.0 1 colorpair
32 70 0.0 1 colorpair
33 69 0.0 0.6 colorpair
34 68 0.0 1 colorpair
35 67 0.0 1 colorpair
36 66 0.0 1 colorpair
40 63 0.16 1 colorpair
41 62 0.0 1 colorpair
42 61 0.0 1 colorpair
43 60 0.0 1 colorpair
44 59 0.0 1 colorpair
45 57 0.16 1 colorpair
46 56 0.0 1 colorpair
47 55 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
99 cmark
16 88 1 gmark
84 cmark
33 69 1 gmark
63 cmark
45 cmark

% End Annotations
showpage
end
%%EOF
