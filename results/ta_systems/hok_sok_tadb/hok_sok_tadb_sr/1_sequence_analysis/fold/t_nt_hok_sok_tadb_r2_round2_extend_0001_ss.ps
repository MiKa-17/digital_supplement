%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Jan 27 17:51:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
________________GGUAAGAGGCUAUCCU_GA_________U__GU_UGUCUAG__ACAUA_CAGUGGGCC___UCGU_G_____GG____UUAAU__G______AAAA____UUAA____C____UA______CGGGGCUUUCUGCU_______UUCUGCCACACAAC_A_CGGUAA____CAAACCAC________CUUCACGU____CA_UGAGGC_AGA_AAGCCUCAAGCGCCGGGCACA_U__UAU\
A______________________________\
) } def
/len { sequence length } bind def

/coor [
[149.62915039 747.45281982]
[134.66111755 748.42645264]
[119.67459106 749.05401611]
[104.67756653 749.33532715]
[89.67803955 749.27014160]
[74.68402100 748.85845947]
[59.70351410 748.10064697]
[44.74451065 746.99694824]
[29.81498718 745.54803467]
[14.92291355 743.75469971]
[0.07623633 741.61785889]
[-14.71712303 739.13867188]
[-29.44927216 736.31842041]
[-44.11235046 733.15863037]
[-58.69852829 729.66101074]
[-73.20002747 725.82745361]
[-87.60911560 721.65991211]
[-101.91809845 717.16070557]
[-116.11933136 712.33215332]
[-130.20526123 707.17687988]
[-144.16835022 701.69763184]
[-158.00114441 695.89733887]
[-171.69628906 689.77905273]
[-185.24645996 683.34613037]
[-198.64440918 676.60192871]
[-211.88302612 669.54998779]
[-224.95521545 662.19421387]
[-237.85403442 654.53845215]
[-250.57255554 646.58679199]
[-263.10403442 638.34350586]
[-275.44174194 629.81292725]
[-287.57916260 620.99963379]
[-299.50973511 611.90838623]
[-311.22717285 602.54400635]
[-322.72515869 592.91143799]
[-333.99758911 583.01586914]
[-345.03845215 572.86254883]
[-355.84182739 562.45697021]
[-366.40200806 551.80462646]
[-376.71331787 540.91119385]
[-386.77023315 529.78247070]
[-396.56744385 518.42443848]
[-406.09967041 506.84313965]
[-415.36187744 495.04476929]
[-424.34909058 483.03561401]
[-433.05651855 470.82205200]
[-441.47949219 458.41064453]
[-449.61355591 445.80798340]
[-457.45437622 433.02081299]
[-464.99771118 420.05593872]
[-472.23959351 406.92031860]
[-479.17614746 393.62088013]
[-485.80364990 380.16482544]
[-492.11859131 366.55923462]
[-498.11755371 352.81143188]
[-503.79739380 338.92874146]
[-509.15505981 324.91854858]
[-514.18768311 310.78833008]
[-518.89257812 296.54565430]
[-523.26727295 282.19812012]
[-527.30938721 267.75335693]
[-531.01678467 253.21907043]
[-534.38745117 238.60302734]
[-537.41961670 223.91304016]
[-540.11169434 209.15693665]
[-542.46221924 194.34259033]
[-544.46990967 179.47789001]
[-546.13378906 164.57078552]
[-547.45281982 149.62924194]
[-548.42645264 134.66120911]
[-549.05401611 119.67467499]
[-549.33532715 104.67765045]
[-549.27014160 89.67812347]
[-548.85852051 74.68410492]
[-548.10064697 59.70359802]
[-546.99694824 44.74459457]
[-545.54809570 29.81507111]
[-543.75469971 14.92299652]
[-541.61785889 0.07631902]
[-539.13867188 -14.71704102]
[-536.31842041 -29.44919014]
[-533.15869141 -44.11226654]
[-529.66107178 -58.69844818]
[-525.82745361 -73.19995117]
[-521.65997314 -87.60903931]
[-517.16070557 -101.91801453]
[-512.33221436 -116.11925507]
[-507.17691040 -130.20518494]
[-501.69766235 -144.16827393]
[-495.89736938 -158.00106812]
[-489.77911377 -171.69621277]
[-483.34616089 -185.24638367]
[-476.60192871 -198.64434814]
[-469.55004883 -211.88294983]
[-462.19427490 -224.95515442]
[-454.53848267 -237.85395813]
[-446.58682251 -250.57249451]
[-438.34353638 -263.10397339]
[-429.81295776 -275.44168091]
[-420.99969482 -287.57907104]
[-411.90844727 -299.50967407]
[-402.54403687 -311.22708130]
[-392.91149902 -322.72509766]
[-383.01593018 -333.99752808]
[-372.86264038 -345.03839111]
[-362.45703125 -355.84179688]
[-351.80465698 -366.40194702]
[-340.91122437 -376.71325684]
[-329.78253174 -386.77017212]
[-318.42449951 -396.56738281]
[-306.84320068 -406.09963989]
[-295.04483032 -415.36181641]
[-283.03567505 -424.34902954]
[-270.82211304 -433.05645752]
[-258.41070557 -441.47946167]
[-245.80805969 -449.61352539]
[-233.02088928 -457.45431519]
[-220.05601501 -464.99768066]
[-206.92037964 -472.23956299]
[-193.62097168 -479.17611694]
[-180.16488647 -485.80361938]
[-166.55931091 -492.11853027]
[-152.81150818 -498.11752319]
[-138.92880249 -503.79736328]
[-124.91861725 -509.15502930]
[-110.78841400 -514.18768311]
[-96.54573822 -518.89257812]
[-82.19818878 -523.26727295]
[-67.75342560 -527.30932617]
[-53.21914673 -531.01672363]
[-38.60311508 -534.38745117]
[-23.91312599 -537.41961670]
[-9.15701866 -540.11169434]
[5.65733337 -542.46221924]
[20.52202415 -544.46990967]
[35.42912292 -546.13378906]
[50.37067795 -547.45281982]
[65.33871460 -548.42645264]
[80.32524109 -549.05401611]
[95.32226562 -549.33532715]
[110.32179260 -549.27014160]
[125.31581116 -548.85852051]
[140.29631042 -548.10064697]
[155.25532532 -546.99694824]
[170.18484497 -545.54809570]
[185.07691956 -543.75476074]
[199.92359924 -541.61785889]
[214.71696472 -539.13867188]
[229.44911194 -536.31842041]
[244.11218262 -533.15869141]
[258.69836426 -529.66107178]
[273.19985962 -525.82751465]
[287.60894775 -521.65997314]
[301.91793823 -517.16076660]
[316.11917114 -512.33221436]
[330.20510864 -507.17694092]
[344.16818237 -501.69772339]
[358.00100708 -495.89739990]
[371.69613647 -489.77914429]
[385.24630737 -483.34619141]
[398.64425659 -476.60198975]
[411.88287354 -469.55007935]
[424.95507812 -462.19430542]
[437.85388184 -454.53854370]
[450.57241821 -446.58688354]
[463.10388184 -438.34356689]
[475.44161987 -429.81301880]
[487.57901001 -420.99975586]
[499.50961304 -411.90850830]
[511.22702026 -402.54409790]
[522.72503662 -392.91156006]
[533.99743652 -383.01599121]
[545.03833008 -372.86270142]
[555.84173584 -362.45709229]
[566.40191650 -351.80471802]
[576.71319580 -340.91128540]
[586.77014160 -329.78259277]
[596.56732178 -318.42456055]
[606.09960938 -306.84329224]
[615.36175537 -295.04489136]
[624.34899902 -283.03573608]
[633.05639648 -270.82220459]
[641.47943115 -258.41076660]
[649.61346436 -245.80813599]
[657.45428467 -233.02096558]
[664.99761963 -220.05609131]
[672.23950195 -206.92045593]
[679.17608643 -193.62104797]
[685.80358887 -180.16496277]
[692.11853027 -166.55938721]
[698.11749268 -152.81158447]
[703.79736328 -138.92887878]
[709.15502930 -124.91870117]
[714.18762207 -110.78849792]
[718.89251709 -96.54582214]
[723.26721191 -82.19827271]
[727.30932617 -67.75350952]
[731.01672363 -53.21923065]
[734.38739014 -38.60319519]
[737.41961670 -23.91320801]
[740.11169434 -9.15710068]
[742.46221924 5.65725040]
[744.46990967 20.52194214]
[746.13372803 35.42903900]
[747.45281982 50.37059402]
[748.42645264 65.33863068]
[749.05401611 80.32515717]
[749.33532715 95.32218933]
[749.27014160 110.32170868]
[748.85852051 125.31572723]
[748.10064697 140.29623413]
[746.99700928 155.25523376]
[745.54809570 170.18476868]
[743.75476074 185.07684326]
[741.61791992 199.92352295]
[739.13867188 214.71687317]
[736.31848145 229.44902039]
[733.15869141 244.11210632]
[747.74517822 247.60978699]
[762.33172607 251.10748291]
[776.91821289 254.60516357]
[791.50469971 258.10284424]
[803.96405029 248.65304565]
[819.58007812 249.47438049]
[830.97930908 260.17907715]
[832.77947998 275.71270752]
[824.13055420 288.74075317]
[809.11627197 293.11178589]
[794.82592773 286.76190186]
[788.00701904 272.68936157]
[773.42053223 269.19168091]
[758.83404541 265.69400024]
[744.24749756 262.19628906]
[729.66101074 258.69860840]
[725.82739258 273.20010376]
[721.65991211 287.60919189]
[717.16064453 301.91818237]
[712.33215332 316.11941528]
[707.17687988 330.20532227]
[701.69763184 344.16842651]
[695.89733887 358.00122070]
[689.77905273 371.69635010]
[683.34606934 385.24652100]
[676.60186768 398.64450073]
[669.54998779 411.88308716]
[662.19415283 424.95529175]
[654.53839111 437.85409546]
[646.58673096 450.57263184]
[638.34344482 463.10409546]
[629.81286621 475.44183350]
[620.99963379 487.57922363]
[611.90832520 499.50979614]
[602.54394531 511.22723389]
[592.91137695 522.72521973]
[583.01580811 533.99761963]
[572.86254883 545.03851318]
[562.45690918 555.84191895]
[551.80456543 566.40203857]
[540.91113281 576.71337891]
[529.78240967 586.77032471]
[518.42437744 596.56750488]
[506.84307861 606.09973145]
[495.04470825 615.36193848]
[483.03552246 624.34912109]
[470.82199097 633.05657959]
[458.41058350 641.47955322]
[445.80792236 649.61358643]
[433.02075195 657.45440674]
[420.05587769 664.99774170]
[406.92022705 672.23962402]
[393.62081909 679.17620850]
[380.16473389 685.80371094]
[366.55917358 692.11859131]
[352.81134033 698.11761475]
[338.92864990 703.79742432]
[324.91845703 709.15509033]
[310.78826904 714.18774414]
[296.54559326 718.89263916]
[282.19802856 723.26727295]
[267.75326538 727.30938721]
[253.21897888 731.01678467]
[238.60295105 734.38745117]
[223.91296387 737.41967773]
[209.15686035 740.11169434]
[194.34249878 742.46221924]
[179.47781372 744.46997070]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[218 234]
[219 233]
[220 232]
[221 231]
[222 230]
] def

init

% Start Annotations
221 231 0.48 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
218 234 4 gmark
218 cmark
234 cmark
219 233 4 gmark
219 cmark
220 232 5 gmark
220 cmark
232 cmark
221 231 2 gmark
221 cmark
231 cmark
222 230 7 gmark
222 cmark
230 cmark

% End Annotations
showpage
end
%%EOF
