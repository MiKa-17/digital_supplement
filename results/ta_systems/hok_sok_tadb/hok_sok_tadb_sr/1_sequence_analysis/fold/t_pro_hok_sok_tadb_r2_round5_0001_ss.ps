%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Jan 28 09:59:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_________________________________________________AUG_AU___GCC___G___CAAAA______AUCUGUGUUA_________GU_GGCCCUGAUC___GUCAUCUGU______UUCACGGUGUU_GGUAUUCACCUUGAUGACGCGGG_AAUCGCUGUGCGAGUUGCGUAUCAGAAA___CG_GAAA_UAC______GGAGGUU_GCGGCCUU___UU___UGGCUUACGAAU___C__\
_C__A_A___G_A__AG_______________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50299072 92.17163086]
[62.51676941 91.51503754]
[47.54850769 90.53054810]
[32.60538864 89.21862030]
[17.69456482 87.57989502]
[2.82319021 85.61514282]
[-12.00161076 83.32531738]
[-26.77273369 80.71151733]
[-41.48309708 77.77498627]
[-56.12565613 74.51713562]
[-70.69338226 70.93952942]
[-85.17930603 67.04387665]
[-99.57647705 62.83204651]
[-113.87799835 58.30606461]
[-128.07701111 53.46809006]
[-142.16671753 48.32044601]
[-156.14036560 42.86560059]
[-169.99124146 37.10616684]
[-183.71273804 31.04490662]
[-197.29824829 24.68472290]
[-210.74127197 18.02866364]
[-224.03535461 11.07991886]
[-237.17416382 3.84182072]
[-250.15135193 -3.68216300]
[-262.96075439 -11.48842621]
[-275.59616089 -19.57322693]
[-288.05157471 -27.93269157]
[-300.32101440 -36.56281281]
[-312.39859009 -45.45945740]
[-324.27850342 -54.61835480]
[-335.95510864 -64.03511810]
[-347.42272949 -73.70523834]
[-358.67593384 -83.62408447]
[-369.70932007 -93.78688812]
[-380.51757812 -104.18878937]
[-391.09555054 -114.82479858]
[-401.43814087 -125.68981934]
[-411.54040527 -136.77865601]
[-421.39752197 -148.08596802]
[-431.00476074 -159.60635376]
[-440.35748291 -171.33428955]
[-449.45123291 -183.26416016]
[-458.28164673 -195.39024353]
[-466.84448242 -207.70672607]
[-475.13565063 -220.20770264]
[-483.15118408 -232.88717651]
[-490.88723755 -245.73908997]
[-498.34008789 -258.75726318]
[-505.50619507 -271.93548584]
[-512.38208008 -285.26739502]
[-518.96447754 -298.74664307]
[-525.25018311 -312.36676025]
[-531.23626709 -326.12121582]
[-536.91986084 -340.00341797]
[-542.29815674 -354.00668335]
[-547.36859131 -368.12435913]
[-552.12878418 -382.34963989]
[-556.57641602 -396.67572021]
[-560.70941162 -411.09573364]
[-564.52575684 -425.60275269]
[-568.02355957 -440.18981934]
[-571.20123291 -454.85000610]
[-574.05725098 -469.57620239]
[-576.59014893 -484.36141968]
[-578.79882812 -499.19851685]
[-580.68212891 -514.08044434]
[-582.23925781 -529.00000000]
[-583.46936035 -543.95007324]
[-584.37194824 -558.92352295]
[-584.94653320 -573.91308594]
[-585.19281006 -588.91168213]
[-585.11071777 -603.91204834]
[-584.70025635 -618.90704346]
[-583.96166992 -633.88946533]
[-582.89526367 -648.85211182]
[-581.50158691 -663.78778076]
[-579.78125000 -678.68945312]
[-577.73510742 -693.54980469]
[-575.36419678 -708.36187744]
[-572.66961670 -723.11846924]
[-569.65258789 -737.81256104]
[-566.31463623 -752.43707275]
[-562.65734863 -766.98498535]
[-558.68249512 -781.44934082]
[-554.39190674 -795.82324219]
[-549.78771973 -810.09979248]
[-544.87207031 -824.27215576]
[-539.64739990 -838.33343506]
[-534.11614990 -852.27703857]
[-528.28100586 -866.09619141]
[-522.14471436 -879.78430176]
[-515.71026611 -893.33477783]
[-508.98074341 -906.74114990]
[-501.95935059 -919.99700928]
[-494.64944458 -933.09600830]
[-487.05453491 -946.03186035]
[-479.17828369 -958.79827881]
[-471.02444458 -971.38928223]
[-462.59692383 -983.79876709]
[-453.89978027 -996.02075195]
[-444.93716431 -1008.04949951]
[-435.71337891 -1019.87908936]
[-426.23284912 -1031.50390625]
[-416.50012207 -1042.91845703]
[-406.51983643 -1054.11730957]
[-396.29678345 -1065.09484863]
[-385.83587646 -1075.84594727]
[-375.14215088 -1086.36560059]
[-364.22067261 -1096.64855957]
[-353.07672119 -1106.68994141]
[-341.71560669 -1116.48510742]
[-330.14282227 -1126.02905273]
[-318.36386108 -1135.31750488]
[-306.38439941 -1144.34582520]
[-294.21017456 -1153.10974121]
[-281.84701538 -1161.60498047]
[-269.30084229 -1169.82763672]
[-256.57766724 -1177.77368164]
[-243.68360901 -1185.43920898]
[-230.62483215 -1192.82080078]
[-217.40759277 -1199.91455078]
[-204.03823853 -1206.71740723]
[-190.52316284 -1213.22595215]
[-176.86885071 -1219.43701172]
[-163.08184814 -1225.34777832]
[-149.16874695 -1230.95520020]
[-135.13623047 -1236.25683594]
[-120.99102783 -1241.24987793]
[-106.73991394 -1245.93212891]
[-92.38970947 -1250.30139160]
[-77.94729614 -1254.35534668]
[-63.41960144 -1258.09216309]
[-48.81358337 -1261.51013184]
[-34.13624573 -1264.60754395]
[-19.39462090 -1267.38281250]
[-4.59577370 -1269.83483887]
[10.25320339 -1271.96228027]
[25.14519310 -1273.76403809]
[40.07305908 -1275.23950195]
[55.02964401 -1276.38781738]
[70.00778198 -1277.20837402]
[85.00029755 -1277.70092773]
[100.00000000 -1277.86511230]
[114.99970245 -1277.70092773]
[129.99221802 -1277.20837402]
[144.97035217 -1276.38781738]
[159.92694092 -1275.23950195]
[174.85481262 -1273.76403809]
[189.74679565 -1271.96228027]
[204.59577942 -1269.83483887]
[219.39462280 -1267.38281250]
[234.13624573 -1264.60754395]
[248.81358337 -1261.51013184]
[263.41961670 -1258.09216309]
[277.94729614 -1254.35534668]
[292.38970947 -1250.30139160]
[306.73989868 -1245.93212891]
[320.99102783 -1241.24987793]
[335.13623047 -1236.25683594]
[349.16876221 -1230.95520020]
[363.08184814 -1225.34777832]
[376.86886597 -1219.43701172]
[390.52316284 -1213.22595215]
[404.03823853 -1206.71740723]
[417.40759277 -1199.91455078]
[430.62481689 -1192.82080078]
[443.68359375 -1185.43920898]
[456.57766724 -1177.77368164]
[469.30084229 -1169.82763672]
[481.84701538 -1161.60498047]
[494.21017456 -1153.10974121]
[506.38439941 -1144.34582520]
[518.36383057 -1135.31750488]
[530.14282227 -1126.02905273]
[541.71563721 -1116.48510742]
[553.07672119 -1106.68994141]
[564.22064209 -1096.64855957]
[575.14215088 -1086.36560059]
[585.83587646 -1075.84594727]
[596.29681396 -1065.09484863]
[606.51983643 -1054.11730957]
[616.50012207 -1042.91845703]
[626.23284912 -1031.50390625]
[635.71337891 -1019.87908936]
[644.93719482 -1008.04949951]
[653.89978027 -996.02075195]
[662.59692383 -983.79876709]
[671.02447510 -971.38928223]
[679.17828369 -958.79827881]
[687.05456543 -946.03186035]
[694.64941406 -933.09600830]
[701.95935059 -919.99700928]
[708.98077393 -906.74114990]
[715.71026611 -893.33477783]
[722.14471436 -879.78430176]
[728.28100586 -866.09619141]
[734.11614990 -852.27703857]
[739.64739990 -838.33343506]
[744.87207031 -824.27215576]
[749.78771973 -810.09979248]
[754.39190674 -795.82324219]
[758.68249512 -781.44934082]
[762.65734863 -766.98498535]
[766.31463623 -752.43707275]
[769.65258789 -737.81256104]
[772.66961670 -723.11846924]
[775.36419678 -708.36187744]
[777.73510742 -693.54980469]
[779.78125000 -678.68945312]
[781.50158691 -663.78778076]
[782.89526367 -648.85211182]
[783.96166992 -633.88946533]
[784.70025635 -618.90704346]
[785.11071777 -603.91204834]
[785.19281006 -588.91168213]
[784.94653320 -573.91308594]
[784.37194824 -558.92352295]
[783.46936035 -543.95007324]
[782.23925781 -529.00000000]
[780.68212891 -514.08044434]
[778.79882812 -499.19851685]
[776.59014893 -484.36141968]
[774.05725098 -469.57620239]
[771.20123291 -454.85000610]
[768.02355957 -440.18981934]
[764.52575684 -425.60275269]
[760.70941162 -411.09573364]
[756.57641602 -396.67572021]
[752.12878418 -382.34963989]
[747.36859131 -368.12435913]
[742.29815674 -354.00668335]
[736.91986084 -340.00341797]
[731.23626709 -326.12121582]
[725.25018311 -312.36676025]
[718.96447754 -298.74664307]
[712.38208008 -285.26739502]
[705.50616455 -271.93548584]
[698.34008789 -258.75726318]
[690.88726807 -245.73908997]
[683.15118408 -232.88717651]
[675.13568115 -220.20770264]
[666.84448242 -207.70672607]
[658.28161621 -195.39024353]
[649.45123291 -183.26416016]
[640.35748291 -171.33428955]
[631.00476074 -159.60635376]
[621.39752197 -148.08596802]
[611.54040527 -136.77865601]
[601.43817139 -125.68981934]
[591.09552002 -114.82479858]
[580.51757812 -104.18878937]
[569.70935059 -93.78688812]
[558.67596436 -83.62408447]
[547.42272949 -73.70523834]
[535.95507812 -64.03511810]
[524.27850342 -54.61835480]
[512.39862061 -45.45945740]
[500.32101440 -36.56281281]
[488.05157471 -27.93269157]
[475.59616089 -19.57322693]
[462.96075439 -11.48842621]
[450.15136719 -3.68216300]
[437.17416382 3.84182072]
[424.03536987 11.07991886]
[410.74127197 18.02866364]
[397.29824829 24.68472290]
[383.71273804 31.04490662]
[369.99124146 37.10616684]
[356.14035034 42.86560059]
[342.16671753 48.32044601]
[328.07702637 53.46809006]
[313.87799072 58.30606461]
[299.57647705 62.83204651]
[285.17932129 67.04387665]
[270.69338989 70.93952942]
[256.12564087 74.51713562]
[241.48309326 77.77498627]
[226.77273560 80.71151733]
[212.00161743 83.32531738]
[197.17680359 85.61514282]
[182.30543518 87.57989502]
[167.39460754 89.21862030]
[152.45149231 90.53054810]
[137.48323059 91.51503754]
[122.49700928 92.17163086]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
