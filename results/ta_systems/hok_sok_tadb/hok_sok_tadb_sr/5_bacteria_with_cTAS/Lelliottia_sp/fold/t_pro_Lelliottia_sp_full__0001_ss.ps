%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 09:55:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______CUGCCGCGAAAAACCAUGAUAGGCAGCGUAUUAAUCGUGUGUCUAACAAUCGUGAUAUUCACCUUCAUGAACCGCAAAACGCUCUGCGAAAUACCAAUAAAGAACGAAAACCAGGAGGUCGCGGCAAAACUAGCCUACAAAUCCGGU___\
) } def
/len { sequence length } bind def

/coor [
[80.28766632 307.37188721]
[77.80986023 292.53842163]
[77.94568634 277.50006104]
[80.69103241 262.71377563]
[85.96244812 248.62890625]
[93.59976196 235.67350769]
[103.37086487 224.24124146]
[114.97884369 214.67955017]
[128.07092285 207.27897644]
[123.06618500 193.13851929]
[118.06143951 178.99806213]
[113.05669403 164.85760498]
[108.05194855 150.71714783]
[103.04720306 136.57669067]
[98.04245758 122.43624115]
[84.05857086 117.00938416]
[70.82533264 124.07205963]
[57.59209061 131.13473511]
[44.35885239 138.19741821]
[31.12561607 145.26008606]
[24.98556519 152.10025024]
[17.55618477 152.32868958]
[4.18427944 159.12516785]
[1.87461972 174.46939087]
[-9.03700352 185.50189209]
[-24.35484695 187.98045349]
[-38.18888855 180.95201111]
[-45.21965790 167.11915588]
[-42.74367905 151.80090332]
[-31.71301651 140.88742065]
[-16.36918640 138.57516479]
[-2.61220288 145.75326538]
[10.75970173 138.95678711]
[24.06293869 132.02685547]
[37.29617691 124.96417236]
[50.52941513 117.90149689]
[63.76265335 110.83882141]
[76.99588776 103.77614594]
[76.77081299 96.27951813]
[61.77756500 96.72968292]
[46.78431702 97.17959595]
[46.33465195 82.18633270]
[61.32740784 81.73643494]
[76.32064819 81.28627777]
[76.09556580 73.78965759]
[62.46244812 67.53362274]
[48.82932663 61.27758408]
[35.19620132 55.02154922]
[18.27867317 53.91090393]
[14.66267681 37.34706116]
[29.57819176 29.28705025]
[41.45223999 41.38842773]
[55.08536148 47.64446259]
[68.71848297 53.90049744]
[82.35160828 60.15653229]
[96.38909149 54.86985779]
[102.50841522 41.17482758]
[108.62773895 27.47979546]
[114.74706268 13.78476524]
[120.86638641 0.08973400]
[126.98571777 -13.60529709]
[133.10504150 -27.30032730]
[131.67071533 -43.05638504]
[143.92704773 -51.51993942]
[150.04637146 -65.21496582]
[156.16569519 -78.91000366]
[162.28501892 -92.60503387]
[168.26701355 -106.36060333]
[174.11109924 -120.17533112]
[179.95516968 -133.99005127]
[185.79925537 -147.80479431]
[191.64332581 -161.61952209]
[197.48741150 -175.43424988]
[203.33148193 -189.24897766]
[202.66751099 -194.53962708]
[204.00065613 -199.08259583]
[206.69845581 -202.23377991]
[209.96301270 -203.70037842]
[216.62536621 -217.13961792]
[223.28773499 -230.57884216]
[229.95008850 -244.01808167]
[236.61244202 -257.45730591]
[243.27479553 -270.89654541]
[249.93716431 -284.33578491]
[256.59951782 -297.77502441]
[263.26187134 -311.21423340]
[269.92422485 -324.65347290]
[276.58657837 -338.09271240]
[278.20443726 -354.96929932]
[294.86935425 -358.08657837]
[302.47808838 -342.93588257]
[290.02581787 -331.43035889]
[283.36346436 -317.99111938]
[276.70111084 -304.55187988]
[270.03875732 -291.11264038]
[263.37640381 -277.67343140]
[256.71405029 -264.23419189]
[250.05168152 -250.79495239]
[243.38932800 -237.35572815]
[236.72695923 -223.91648865]
[230.06460571 -210.47724915]
[223.40225220 -197.03802490]
[217.14620972 -183.40489197]
[211.30213928 -169.59016418]
[205.45805359 -155.77543640]
[199.61398315 -141.96070862]
[193.76989746 -128.14598083]
[187.92582703 -114.33125305]
[182.08174133 -100.51652527]
[182.37376404 -93.08937073]
[175.98004150 -86.48571014]
[169.86071777 -72.79067230]
[163.74139404 -59.09564590]
[157.62207031 -45.40061569]
[159.49409485 -30.62411880]
[146.80006409 -21.18100357]
[140.68074036 -7.48597240]
[134.56141663 6.20905828]
[128.44209290 19.90408897]
[122.32276917 33.59912109]
[116.20344543 47.29415131]
[110.08412170 60.98918152]
[128.79598999 82.01490784]
[127.05168915 105.51911163]
[112.18291473 117.43149567]
[117.18766022 131.57194519]
[122.19240570 145.71240234]
[127.19715118 159.85285950]
[132.20190430 173.99331665]
[137.20664978 188.13377380]
[142.21138000 202.27423096]
[157.04400635 199.79138184]
[172.08242798 199.92208862]
[186.86964417 202.66239929]
[200.95629883 207.92903137]
[213.91430664 215.56193542]
[225.34988403 225.32914734]
[234.91552734 236.93386841]
[242.32054138 250.02343750]
[247.33990479 264.20007324]
[249.82107544 279.03298950]
[249.68865967 294.07138062]
[246.94667053 308.85830688]
[241.67845154 322.94433594]
[234.04408264 335.90148926]
[224.27555847 347.33596802]
[212.66975403 356.90029907]
[199.57934570 364.30383301]
[185.40214539 369.32159424]
[170.56895447 371.80105591]
[155.53056335 371.66693115]
[140.74397278 368.92327881]
[126.65851593 363.65347290]
[113.70223999 356.01760864]
[102.26887512 346.24780273]
[92.70585632 334.64093018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 131]
[10 130]
[11 129]
[12 128]
[13 127]
[14 126]
[15 125]
[16 38]
[17 37]
[18 36]
[19 35]
[20 34]
[22 33]
[23 32]
[45 55]
[46 54]
[47 53]
[48 52]
[56 122]
[57 121]
[58 120]
[59 119]
[60 118]
[61 117]
[62 116]
[64 114]
[65 113]
[66 112]
[67 111]
[68 109]
[69 108]
[70 107]
[71 106]
[72 105]
[73 104]
[74 103]
[78 102]
[79 101]
[80 100]
[81 99]
[82 98]
[83 97]
[84 96]
[85 95]
[86 94]
[87 93]
[88 92]
] def

init

% Start Annotations
9 131 0.0 0.6 colorpair
10 130 0.0 1 colorpair
11 129 0.0 0.2 colorpair
12 128 0.0 0.2 colorpair
13 127 0.16 1 colorpair
14 126 0.16 1 colorpair
15 125 0.0 1 colorpair
16 38 0.0 1 colorpair
17 37 0.16 1 colorpair
18 36 0.16 1 colorpair
19 35 0.0 1 colorpair
20 34 0.0 1 colorpair
22 33 0.16 1 colorpair
23 32 0.0 0.2 colorpair
45 55 0.16 1 colorpair
46 54 0.0 1 colorpair
47 53 0.0 1 colorpair
48 52 0.0 1 colorpair
56 122 0.0 1 colorpair
57 121 0.0 0.2 colorpair
58 120 0.0 0.2 colorpair
59 119 0.16 1 colorpair
60 118 0.0 1 colorpair
61 117 0.0 0.2 colorpair
62 116 0.0 1 colorpair
64 114 0.0 1 colorpair
65 113 0.16 1 colorpair
66 112 0.16 1 colorpair
67 111 0.0 0.2 colorpair
68 109 0.0 0.2 colorpair
69 108 0.16 1 colorpair
70 107 0.0 1 colorpair
71 106 0.0 1 colorpair
72 105 0.16 1 colorpair
73 104 0.0 0.2 colorpair
74 103 0.0 0.2 colorpair
78 102 0.16 1 colorpair
79 101 0.0 0.2 colorpair
80 100 0.16 1 colorpair
81 99 0.0 0.2 colorpair
82 98 0.16 1 colorpair
83 97 0.0 0.2 colorpair
84 96 0.0 0.2 colorpair
85 95 0.0 0.2 colorpair
86 94 0.0 0.2 colorpair
87 93 0.0 1 colorpair
88 92 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
9 131 1 gmark
11 129 2 gmark
12 128 2 gmark
13 cmark
14 cmark
126 cmark
17 cmark
18 cmark
36 cmark
22 cmark
33 cmark
23 32 2 gmark
45 cmark
55 cmark
57 121 2 gmark
58 120 2 gmark
119 cmark
61 117 2 gmark
113 cmark
66 cmark
67 111 2 gmark
68 109 2 gmark
69 cmark
72 cmark
105 cmark
73 104 2 gmark
74 103 2 gmark
78 cmark
102 cmark
79 101 2 gmark
100 cmark
81 99 2 gmark
82 cmark
83 97 2 gmark
84 96 2 gmark
85 95 2 gmark
86 94 2 gmark

% End Annotations
showpage
end
%%EOF
