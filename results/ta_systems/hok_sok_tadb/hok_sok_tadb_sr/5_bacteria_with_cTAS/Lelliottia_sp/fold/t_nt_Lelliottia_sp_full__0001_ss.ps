%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 09:55:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_______________________________________________GGUUAAUUGAAAAAUUACUCGGGGCUUUUCUCUUUUUGCCACACAACACGGUAACAAACCAACCAAACGUUAUGAGGCAAAAAGCCUCAAGCGCC\
) } def
/len { sequence length } bind def

/coor [
[10.62260437 137.28395081]
[20.44587708 148.61988831]
[28.77062416 161.09780884]
[35.46550751 174.52087402]
[40.42491150 188.67729187]
[43.57058334 203.34375000]
[44.85290527 218.28883362]
[44.25164032 233.27677917]
[41.77627945 248.07112122]
[37.46586990 262.43844604]
[31.38841629 276.15213013]
[23.63980293 288.99575806]
[14.34227371 300.76672363]
[3.64251375 311.27935791]
[-8.29067230 320.36776733]
[-21.26902008 327.88854980]
[-35.08777618 333.72311401]
[-49.52892685 337.77935791]
[-64.36463928 339.99331665]
[-79.36086273 340.33004761]
[-94.28099823 338.78424072]
[-108.88966370 335.38031006]
[-122.95638275 330.17190552]
[-136.25923157 323.24124146]
[-148.58833313 314.69763184]
[-159.74919128 304.67590332]
[-169.56570435 293.33410645]
[-177.88301086 280.85122681]
[-184.56990051 267.42419434]
[-189.52087402 253.26480103]
[-192.65780640 238.59648132]
[-193.93122864 223.65063477]
[-193.32102966 208.66305542]
[-190.83685303 193.87019348]
[-186.51788330 179.50541687]
[-180.43226624 165.79537964]
[-172.67599487 152.95635986]
[-163.37145996 141.19091797]
[-152.66543579 130.68467712]
[-140.72683716 121.60339355]
[-127.74401093 114.09032440]
[-113.92178345 108.26400757]
[-99.47821808 104.21635437]
[-84.64118195 102.01123810]
[-69.64476776 101.68344116]
[-54.72555542 103.23812866]
[-40.12832642 106.64794922]
[-49.05140305 94.59064484]
[-57.97448349 82.53333282]
[-66.89756012 70.47602844]
[-74.57962036 65.38899231]
[-75.88076019 58.05440903]
[-84.53681946 45.80399323]
[-93.19287872 33.55357742]
[-101.84893036 21.30316353]
[-116.95954895 14.93123817]
[-118.72784424 -1.37229407]
[-105.33474731 -10.83575726]
[-90.55793762 -3.72395158]
[-89.59851837 12.64710712]
[-80.94245911 24.89752197]
[-72.28640747 37.14793777]
[-63.63034821 49.39835358]
[-54.84025192 61.55294800]
[-45.91717148 73.61026001]
[-36.99409485 85.66756439]
[-28.07101822 97.72487640]
[-14.35891533 103.80584717]
[0.56784290 102.32534027]
[12.46929550 93.36963654]
[26.96575928 99.70707703]
[41.89251709 98.22657013]
[56.81927490 96.74606323]
[71.74603271 95.26555634]
[77.87607574 81.80017090]
[89.90692139 73.18896484]
[104.62975311 71.72869110]
[118.11775208 77.80881500]
[126.77346039 89.80768585]
[141.70022583 88.32717896]
[156.62698364 86.84667206]
[171.55374146 85.36616516]
[186.48049927 83.88565826]
[201.40725708 82.40515900]
[216.33401489 80.92465210]
[231.26077271 79.44414520]
[246.18753052 77.96363831]
[259.15664673 68.90203857]
[272.58544922 75.34537506]
[287.51220703 73.86486816]
[300.48132324 64.80326843]
[313.91012573 71.24659729]
[328.83688354 69.76609802]
[343.76364136 68.28559113]
[355.12738037 53.20299911]
[373.58285522 51.17010117]
[387.47393799 63.00625229]
[402.32125854 60.87152863]
[417.16857910 58.73680878]
[423.48364258 44.66117859]
[436.41857910 36.25334930]
[451.84582520 36.19622040]
[464.84265137 44.50802612]
[471.26181030 58.53650284]
[469.05493164 73.80520630]
[458.92630005 85.44195557]
[444.10784912 89.73350525]
[429.32812500 85.31043243]
[419.30328369 73.58412933]
[404.45596313 75.71884918]
[389.60864258 77.85357666]
[384.86526489 88.32881927]
[375.53683472 95.25656128]
[363.89901733 96.80130768]
[352.86230469 92.45890045]
[345.24414062 83.21234894]
[330.31738281 84.69285583]
[315.39062500 86.17335510]
[303.48916626 95.12906647]
[288.99270630 88.79162598]
[274.06594849 90.27213287]
[262.16448975 99.22783661]
[247.66802979 92.89039612]
[232.74127197 94.37090302]
[217.81451416 95.85140991]
[202.88775635 97.33191681]
[187.96099854 98.81242371]
[173.03424072 100.29292297]
[158.10748291 101.77342987]
[143.18072510 103.25393677]
[128.25396729 104.73444366]
[122.12392426 118.19982910]
[110.09307861 126.81103516]
[95.37024689 128.27131653]
[81.88224792 122.19118500]
[73.22653961 110.19231415]
[58.29978180 111.67282104]
[43.37302399 113.15332794]
[28.44626427 114.63383484]
[15.47714996 123.69543457]
[2.04834819 117.25209808]
[-12.87841034 118.73260498]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[47 67]
[48 66]
[49 65]
[50 64]
[52 63]
[53 62]
[54 61]
[55 60]
[68 142]
[69 141]
[71 139]
[72 138]
[73 137]
[74 136]
[79 131]
[80 130]
[81 129]
[82 128]
[83 127]
[84 126]
[85 125]
[86 124]
[87 123]
[89 121]
[90 120]
[92 118]
[93 117]
[94 116]
[97 111]
[98 110]
[99 109]
] def

init

% Start Annotations
47 67 0.0 0.6 colorpair
48 66 0.0 1 colorpair
49 65 0.0 1 colorpair
50 64 0.0 1 colorpair
52 63 0.0 1 colorpair
53 62 0.0 1 colorpair
54 61 0.0 1 colorpair
55 60 0.0 1 colorpair
68 142 0.0 1 colorpair
69 141 0.0 1 colorpair
71 139 0.0 1 colorpair
72 138 0.0 1 colorpair
73 137 0.0 1 colorpair
74 136 0.0 1 colorpair
79 131 0.0 1 colorpair
80 130 0.0 1 colorpair
81 129 0.0 1 colorpair
82 128 0.0 1 colorpair
83 127 0.0 1 colorpair
84 126 0.0 1 colorpair
85 125 0.0 1 colorpair
86 124 0.0 1 colorpair
87 123 0.0 1 colorpair
89 121 0.0 1 colorpair
90 120 0.0 1 colorpair
92 118 0.0 1 colorpair
93 117 0.0 1 colorpair
94 116 0.0 1 colorpair
97 111 0.0 1 colorpair
98 110 0.0 1 colorpair
99 109 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
47 67 1 gmark

% End Annotations
showpage
end
%%EOF
