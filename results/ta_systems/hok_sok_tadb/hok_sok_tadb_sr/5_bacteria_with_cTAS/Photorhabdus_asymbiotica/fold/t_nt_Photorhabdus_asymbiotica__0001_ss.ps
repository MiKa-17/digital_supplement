%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 09:55:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAGAGGCUAACCUUAUGUUGCGAAGCAUUAGAAG_AGCCUCAAAUCGAUUGAAAG_UCAGAUGGGGCUUUCCUCUAUCCGC_____________UCCACAACGCCAAAGACAGAAAGCCUCAAGCACC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 154.82798767]
[92.50000000 139.82798767]
[92.50000000 124.82798004]
[87.69203186 122.82964325]
[83.38009644 119.91123962]
[79.73796844 116.19038391]
[65.81244659 121.76532745]
[51.88692856 127.34026337]
[37.96141052 132.91519165]
[24.03589058 138.49012756]
[10.11037254 144.06507874]
[-0.87313187 158.78860474]
[-18.11150169 155.73136902]
[-31.90040588 161.63612366]
[-45.68930817 167.54087830]
[-59.47821426 173.44563293]
[-69.11837769 185.99066162]
[-83.86383820 183.88816833]
[-97.65274811 189.79292297]
[-111.44165039 195.69767761]
[-125.23055267 201.60241699]
[-139.01945496 207.50717163]
[-148.40858459 220.95248413]
[-164.72166443 219.27452087]
[-171.17720032 204.19943237]
[-161.13427734 191.23518372]
[-144.92420959 193.71827698]
[-131.13531494 187.81352234]
[-117.34640503 181.90876770]
[-103.55749512 176.00401306]
[-89.76859283 170.09925842]
[-81.11470795 157.97657776]
[-65.38296509 159.65672302]
[-51.59406281 153.75196838]
[-37.80516052 147.84721375]
[-24.01625443 141.94245911]
[-19.19094467 130.78358459]
[-7.67111635 125.77987671]
[4.53543568 130.13955688]
[18.46095467 124.56461334]
[32.38647461 118.98967743]
[46.31199265 113.41474152]
[60.23751068 107.83980560]
[74.16303253 102.26486969]
[74.93330383 88.66658783]
[82.76917267 76.57044220]
[96.26753998 69.57094574]
[89.07881165 56.40576172]
[81.89007568 43.24057770]
[74.70133972 30.07539368]
[67.51260376 16.91020966]
[60.32386780 3.74502420]
[53.13513565 -9.42016029]
[38.85821533 -17.48871994]
[38.97792053 -33.88742828]
[53.37110901 -41.74670410]
[67.23130035 -32.98159409]
[66.30031586 -16.60889626]
[73.48905182 -3.44371080]
[80.67778778 9.72147369]
[87.86652374 22.88665962]
[95.05525970 36.05184555]
[102.24399567 49.21702957]
[109.43272400 62.38221359]
[123.00209045 68.77536011]
[137.73101807 65.93659210]
[152.45994568 63.09782410]
[167.18888855 60.25905609]
[181.91781616 57.42028809]
[196.64674377 54.58152008]
[211.37567139 51.74275208]
[226.10459900 48.90398026]
[240.83354187 46.06521225]
[255.56246948 43.22644424]
[270.29138184 40.38767624]
[284.98550415 37.37384033]
[299.64270020 34.18535995]
[314.29989624 30.99687958]
[328.95712280 27.80840111]
[343.61431885 24.61992073]
[351.27954102 14.16759109]
[363.62429810 11.85445690]
[373.87500000 18.39105415]
[388.60394287 15.55228615]
[389.84014893 0.50654554]
[395.09091187 -13.64732742]
[403.96655273 -25.85902023]
[415.80847168 -35.22234344]
[429.73788452 -41.04248047]
[444.72116089 -42.88753510]
[459.64642334 -40.62059021]
[473.40612793 -34.40987015]
[484.97921753 -24.71625519]
[493.50689697 -12.25907135]
[498.35632324 2.03727508]
[499.16766357 17.11189842]
[495.88073730 31.84616470]
[488.73941040 45.14669037]
[478.27362061 56.02648926]
[465.26000977 63.67820740]
[450.66430664 67.53403473]
[435.56954956 67.30784607]
[421.09591675 63.01642990]
[408.31741333 54.97823334]
[398.18231201 43.78974152]
[391.44268799 30.28121758]
[376.71377563 33.11998367]
[364.15142822 45.31407166]
[346.80279541 39.27712250]
[332.14559937 42.46560287]
[317.48840332 45.65408325]
[302.83117676 48.84256363]
[288.17398071 52.03104019]
[282.24911499 56.57100296]
[273.13015747 55.11660767]
[258.40124512 57.95537567]
[243.67230225 60.79414368]
[228.94337463 63.63291168]
[214.21444702 66.47167969]
[199.48551941 69.31044769]
[184.75657654 72.14921570]
[170.02764893 74.98798370]
[155.29872131 77.82675934]
[140.56979370 80.66552734]
[125.84085846 83.50429535]
[129.30905151 96.85926056]
[126.53569794 109.82615662]
[118.57772064 119.75254059]
[107.50000000 124.82798004]
[107.50000000 139.82798767]
[107.50000000 154.82798767]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 131]
[2 130]
[3 129]
[6 44]
[7 43]
[8 42]
[9 41]
[10 40]
[11 39]
[13 36]
[14 35]
[15 34]
[16 33]
[18 31]
[19 30]
[20 29]
[21 28]
[22 27]
[47 64]
[48 63]
[49 62]
[50 61]
[51 60]
[52 59]
[53 58]
[65 125]
[66 124]
[67 123]
[68 122]
[69 121]
[70 120]
[71 119]
[72 118]
[73 117]
[74 116]
[75 115]
[76 113]
[77 112]
[78 111]
[79 110]
[80 109]
[83 107]
[84 106]
] def

init

% Start Annotations
1 131 0.0 1 colorpair
2 130 0.0 1 colorpair
3 129 0.16 1 colorpair
6 44 0.0 1 colorpair
7 43 0.0 1 colorpair
8 42 0.0 1 colorpair
9 41 0.0 1 colorpair
10 40 0.0 1 colorpair
11 39 0.16 1 colorpair
13 36 0.0 0.6 colorpair
14 35 0.16 1 colorpair
15 34 0.0 1 colorpair
16 33 0.0 1 colorpair
18 31 0.0 1 colorpair
19 30 0.0 1 colorpair
20 29 0.0 1 colorpair
21 28 0.0 1 colorpair
22 27 0.0 1 colorpair
47 64 0.16 1 colorpair
48 63 0.0 0.6 colorpair
49 62 0.16 1 colorpair
50 61 0.0 1 colorpair
51 60 0.0 1 colorpair
52 59 0.0 0.6 colorpair
53 58 0.0 1 colorpair
65 125 0.0 1 colorpair
66 124 0.0 1 colorpair
67 123 0.0 1 colorpair
68 122 0.0 1 colorpair
69 121 0.16 1 colorpair
70 120 0.0 1 colorpair
71 119 0.0 1 colorpair
72 118 0.0 0.6 colorpair
73 117 0.0 1 colorpair
74 116 0.16 1 colorpair
75 115 0.0 0.6 colorpair
76 113 0.0 1 colorpair
77 112 0.0 1 colorpair
78 111 0.0 1 colorpair
79 110 0.0 0.6 colorpair
80 109 0.0 0.6 colorpair
83 107 0.0 1 colorpair
84 106 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
129 cmark
39 cmark
13 36 1 gmark
14 cmark
35 cmark
47 cmark
64 cmark
48 63 1 gmark
49 cmark
62 cmark
52 59 1 gmark
121 cmark
72 118 1 gmark
74 cmark
75 115 1 gmark
79 110 1 gmark
80 109 1 gmark

% End Annotations
showpage
end
%%EOF
