%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 06:15:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAGAGGCUAUUCUGGAUGUGUAUGGCAUGCAGAUGGCCUCGUGGAUUAAUGAAAAUUAACUACGGGGCUUUCUUAAUUCUGCCUCACAAUGUCCGAAUCAGUGCAACAUCAAUAAGGCUAAAAGCCUCAAGCGCC\
) } def
/len { sequence length } bind def

/coor [
[166.00738525 232.29371643]
[166.18943787 217.27992249]
[167.99371338 202.37382507]
[171.39907837 187.75018311]
[176.36560059 173.58047485]
[182.83505249 160.03080750]
[170.07655334 152.14279175]
[157.31805420 144.25479126]
[144.55953979 136.36679077]
[131.80104065 128.47879028]
[116.30785370 139.45126343]
[97.58921051 142.62083435]
[79.34738159 137.36064148]
[65.19034576 124.71104431]
[51.62371826 131.11000061]
[38.05709076 137.50895691]
[24.49046516 143.90791321]
[15.30972290 156.79296875]
[0.49793705 155.22444153]
[-13.06868935 161.62339783]
[-26.63531494 168.02235413]
[-40.20194244 174.42131042]
[-46.95417404 188.97421265]
[-62.57548523 192.62854004]
[-75.08255005 182.58100891]
[-74.88101196 166.53921509]
[-62.12547684 156.80906677]
[-46.60089874 160.85469055]
[-33.03427124 154.45573425]
[-19.46764565 148.05677795]
[-5.90102005 141.65782166]
[2.30934620 129.23046875]
[18.09150887 130.34129333]
[31.65813446 123.94232941]
[45.22476196 117.54337311]
[58.79138565 111.14441681]
[58.50748444 89.96411133]
[68.43959045 71.25476837]
[59.29696274 59.36307526]
[50.15433884 47.47138214]
[41.01171494 35.57968521]
[31.86909103 23.68799019]
[22.72646713 11.79629421]
[13.58384228 -0.09540147]
[4.44121790 -11.98709679]
[-4.70140600 -23.87879181]
[-13.84403038 -35.77048874]
[-21.62364960 -40.72025681]
[-23.05527115 -48.03582001]
[-31.92681313 -60.13109970]
[-40.79835510 -72.22637177]
[-49.66989899 -84.32164764]
[-58.54144287 -96.41693115]
[-73.76247406 -102.52038574]
[-75.81908417 -118.79006195]
[-62.59560013 -128.48910522]
[-47.69521713 -121.63998413]
[-46.44616699 -105.28847504]
[-37.57462311 -93.19319153]
[-28.70307922 -81.09791565]
[-19.83153725 -69.00263977]
[-10.95999336 -56.90736389]
[-1.95233476 -44.91311264]
[7.19028950 -33.02141571]
[16.33291435 -21.12972069]
[25.47553825 -9.23802567]
[34.61816025 2.65366983]
[43.76078796 14.54536533]
[52.90341187 26.43706131]
[62.04603577 38.32875824]
[71.18865967 50.22045135]
[80.33128357 62.11214828]
[88.34204865 58.93371201]
[96.82795715 57.42904663]
[105.44316101 57.65947723]
[113.83650970 59.61561203]
[121.66590881 63.21772003]
[128.61225891 68.31899261]
[134.39244080 74.71150970]
[138.77085876 82.13472748]
[141.56907654 90.28609467]
[142.67301941 98.83338165]
[142.03771973 107.42820740]
[139.68904114 115.72028351]
[152.44755554 123.60829163]
[165.20605469 131.49629211]
[177.96455383 139.38429260]
[190.72305298 147.27229309]
[199.95280457 135.42919922]
[210.40893555 124.65345001]
[221.96884155 115.07139587]
[234.49700928 106.79538727]
[247.84652710 99.92244720]
[261.86090088 94.53316498]
[276.37582397 90.69071960]
[291.22109985 88.44016266]
[306.22268677 87.80788422]
[321.20468140 88.80130005]
[335.99145508 91.40875244]
[350.40960693 95.59968567]
[364.29013062 101.32495117]
[377.47024536 108.51742554]
[389.79544067 117.09278107]
[401.12121582 126.95047760]
[411.31475830 137.97492981]
[420.25659180 150.03691101]
[427.84182739 162.99496460]
[433.98159790 176.69717407]
[438.60385132 190.98289490]
[441.65441895 205.68464661]
[443.09756470 220.63003540]
[442.91632080 235.64382935]
[441.11285400 250.55003357]
[437.70825195 265.17385864]
[432.74249268 279.34384155]
[426.27377319 292.89385986]
[418.37796021 305.66503906]
[409.14755249 317.50762939]
[398.69085693 328.28280640]
[387.13043213 337.86425781]
[374.60183716 346.13958740]
[361.25192261 353.01181030]
[347.23724365 358.40032959]
[332.72213745 362.24200439]
[317.87673950 364.49176025]
[302.87512207 365.12322998]
[287.89315796 364.12899780]
[273.10653687 361.52075195]
[258.68859863 357.32904053]
[244.80841064 351.60302734]
[231.62867737 344.40985107]
[219.30393982 335.83383179]
[207.97869873 325.97552490]
[197.78573608 314.95053101]
[188.84455872 302.88806152]
[181.26000977 289.92959595]
[175.12100220 276.22705078]
[170.49951172 261.94110107]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 88]
[7 87]
[8 86]
[9 85]
[10 84]
[14 36]
[15 35]
[16 34]
[17 33]
[19 31]
[20 30]
[21 29]
[22 28]
[38 72]
[39 71]
[40 70]
[41 69]
[42 68]
[43 67]
[44 66]
[45 65]
[46 64]
[47 63]
[49 62]
[50 61]
[51 60]
[52 59]
[53 58]
] def

init

% Start Annotations
6 88 0.0 1 colorpair
7 87 0.0 1 colorpair
8 86 0.0 1 colorpair
9 85 0.0 1 colorpair
10 84 0.0 1 colorpair
14 36 0.0 1 colorpair
15 35 0.0 1 colorpair
16 34 0.0 1 colorpair
17 33 0.0 1 colorpair
19 31 0.0 1 colorpair
20 30 0.0 1 colorpair
21 29 0.0 1 colorpair
22 28 0.0 1 colorpair
38 72 0.0 1 colorpair
39 71 0.0 1 colorpair
40 70 0.0 1 colorpair
41 69 0.0 1 colorpair
42 68 0.0 1 colorpair
43 67 0.0 1 colorpair
44 66 0.0 1 colorpair
45 65 0.0 1 colorpair
46 64 0.0 1 colorpair
47 63 0.0 1 colorpair
49 62 0.0 1 colorpair
50 61 0.0 1 colorpair
51 60 0.0 1 colorpair
52 59 0.0 1 colorpair
53 58 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
