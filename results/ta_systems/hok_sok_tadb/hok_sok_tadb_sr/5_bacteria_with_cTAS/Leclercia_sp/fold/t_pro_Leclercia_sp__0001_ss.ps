%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 09:55:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______AUGCCAAAAAAAACUGUCGUAUGAAGAAUAUUGAUAAUCUGUCUGACGAUACUGAUAUUCACCUGGAUGAAUCGCGGUUCGCUAUGCGAACUCCGAAUAAAAAACGAACAGCAAGAAGUGGCGGCUGUGUUAGCCUACGAAGCAGG____\
) } def
/len { sequence length } bind def

/coor [
[98.68938446 366.65533447]
[106.47986603 353.83706665]
[117.06517792 343.20922852]
[129.85209656 335.36737061]
[144.12406921 330.75097656]
[159.08126831 329.61877441]
[173.88552856 332.03414917]
[187.70719910 337.86181641]
[199.77029419 346.77380371]
[193.92622375 332.95907593]
[188.08213806 319.14434814]
[182.23806763 305.32962036]
[166.88845825 307.59161377]
[151.46383667 305.81579590]
[137.00915527 300.11672974]
[124.50510406 290.87487793]
[114.80163574 278.71133423]
[108.56018829 264.44601440]
[106.20855713 249.04240417]
[107.91163635 233.54249573]
[113.55982208 218.99627686]
[122.77606201 206.39060974]
[134.94104004 196.58233643]
[128.82171631 182.88729858]
[122.70239258 169.19227600]
[116.58306885 155.49723816]
[110.46374512 141.80221558]
[102.06224823 143.04255676]
[93.58066559 142.61111450]
[85.34840393 140.52462769]
[77.68521881 136.86415100]
[70.88875580 131.77183533]
[65.22298431 125.44550323]
[60.90796661 118.13085175]
[58.11130905 110.11198425]
[56.94162750 101.70036316]
[57.44435501 93.22270203]
[59.59996796 85.00827026]
[46.65990067 77.42179108]
[33.71983337 69.83531189]
[17.90156555 69.53041077]
[10.83537292 56.41865158]
[-2.10469460 48.83217239]
[-15.04476166 41.24569321]
[-27.98482895 33.65921402]
[-40.08484650 42.86019135]
[-54.78614044 46.72547913]
[-69.84687042 44.66564178]
[-82.97037506 36.99479294]
[-92.15543365 24.88268089]
[-96.00137329 10.17631626]
[-93.92173004 -4.88168859]
[-86.23361969 -17.99509621]
[-74.10943604 -27.16420937]
[-59.39802551 -30.99080276]
[-44.34276962 -28.89134979]
[-31.23948669 -21.18600082]
[-22.08633232 -9.04976654]
[-18.27909279 5.66666603]
[-20.39834976 20.71914673]
[-7.45828295 28.30562592]
[5.48178434 35.89210510]
[18.42185211 43.47858429]
[33.31455994 43.24085236]
[41.30631256 56.89524460]
[54.24637985 64.48171997]
[67.18644714 72.06819916]
[72.20061493 67.07418823]
[77.96454620 62.96820831]
[84.32279205 59.86099243]
[91.10385895 57.83634949]
[98.12485504 56.94888687]
[105.19643402 57.22253418]
[112.12785339 58.64991379]
[118.79021454 45.21067810]
[125.45256805 31.77144432]
[124.64978790 15.97061920]
[137.23492432 8.00421047]
[143.89727783 -5.43502235]
[150.55963135 -18.87425613]
[157.22200012 -32.31348801]
[163.88435364 -45.75272369]
[170.54670715 -59.19195557]
[177.20906067 -72.63118744]
[183.87142944 -86.07041931]
[190.53378296 -99.50965881]
[197.19613647 -112.94889069]
[203.85850525 -126.38812256]
[205.47634888 -143.26469421]
[222.14125061 -146.38197327]
[229.75000000 -131.23129272]
[217.29772949 -119.72576904]
[210.63537598 -106.28652954]
[203.97302246 -92.84729767]
[197.31065369 -79.40806580]
[190.64830017 -65.96883392]
[183.98594666 -52.52959824]
[177.32359314 -39.09036636]
[170.66122437 -25.65113258]
[163.99887085 -12.21189880]
[157.33651733 1.22733498]
[150.67416382 14.66656876]
[151.95347595 29.50613022]
[138.89179993 38.43380356]
[132.22944641 51.87303543]
[125.56708527 65.31227112]
[141.18591309 87.32578278]
[140.64584351 114.31189728]
[124.15877533 135.68289185]
[130.27809143 149.37791443]
[136.39741516 163.07295227]
[142.51675415 176.76797485]
[148.63607788 190.46301270]
[162.95397949 187.98884583]
[177.43760681 189.02491760]
[191.23951721 193.50607300]
[203.55329895 201.16566467]
[213.66062927 211.55152893]
[220.97314453 224.05259705]
[225.06680298 237.93486023]
[225.70632935 252.38449097]
[222.85885620 266.55554199]
[216.69551086 279.61947632]
[207.58116150 290.81359863]
[196.05279541 299.48553467]
[201.89686584 313.30026245]
[207.74095154 327.11499023]
[213.58502197 340.92971802]
[222.54685974 352.95825195]
[234.11221313 362.51037598]
[245.67755127 372.06246948]
[261.02212524 369.04953003]
[274.68838501 376.65002441]
[280.22354126 391.27520752]
[275.01403809 406.01953125]
[261.51968384 413.92117310]
[246.11206055 411.24923706]
[236.06620789 399.26528931]
[236.12545776 383.62780762]
[224.56010437 374.07571411]
[212.99475098 364.52359009]
[218.08351135 378.63403320]
[219.71282959 393.54528809]
[217.79142761 408.42172241]
[212.42694092 422.42965698]
[203.92002869 434.78411865]
[192.74739075 444.79272461]
[179.53515625 451.89462280]
[165.02374268 455.69180298]
[150.02635193 455.97149658]
[135.38343811 452.71801758]
[121.91558838 446.11370850]
[110.37754822 436.52862549]
[101.41589355 424.49996948]
[95.53284454 410.70178223]
[93.05808258 395.90734863]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 128]
[10 127]
[11 126]
[12 125]
[23 113]
[24 112]
[25 111]
[26 110]
[27 109]
[38 67]
[39 66]
[40 65]
[42 63]
[43 62]
[44 61]
[45 60]
[74 106]
[75 105]
[76 104]
[78 102]
[79 101]
[80 100]
[81 99]
[82 98]
[83 97]
[84 96]
[85 95]
[86 94]
[87 93]
[88 92]
[129 141]
[130 140]
[131 139]
] def

init

% Start Annotations
9 128 0.0 0.6 colorpair
10 127 0.0 0.6 colorpair
11 126 0.0 0.6 colorpair
12 125 0.16 1 colorpair
23 113 0.16 1 colorpair
24 112 0.16 0.2 colorpair
25 111 0.32 1 colorpair
26 110 0.16 1 colorpair
27 109 0.32 0.2 colorpair
38 67 0.16 1 colorpair
39 66 0.0 0.2 colorpair
40 65 0.0 1 colorpair
42 63 0.16 0.2 colorpair
43 62 0.32 1 colorpair
44 61 0.16 1 colorpair
45 60 0.16 0.2 colorpair
74 106 0.0 1 colorpair
75 105 0.32 0.6 colorpair
76 104 0.16 1 colorpair
78 102 0.16 0.6 colorpair
79 101 0.0 0.2 colorpair
80 100 0.0 0.2 colorpair
81 99 0.16 0.2 colorpair
82 98 0.16 1 colorpair
83 97 0.0 0.2 colorpair
84 96 0.16 0.6 colorpair
85 95 0.0 0.2 colorpair
86 94 0.0 0.2 colorpair
87 93 0.16 1 colorpair
88 92 0.16 1 colorpair
129 141 0.16 0.6 colorpair
130 140 0.0 0.6 colorpair
131 139 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
9 128 1 gmark
10 127 1 gmark
11 126 1 gmark
12 cmark
113 cmark
24 112 2 gmark
24 cmark
25 cmark
111 cmark
26 cmark
110 cmark
27 109 2 gmark
27 cmark
109 cmark
67 cmark
39 66 2 gmark
42 63 2 gmark
42 cmark
63 cmark
43 cmark
62 cmark
61 cmark
45 60 2 gmark
45 cmark
75 105 1 gmark
75 cmark
105 cmark
76 cmark
78 102 1 gmark
78 cmark
102 cmark
79 101 2 gmark
80 100 2 gmark
81 99 2 gmark
81 cmark
99 cmark
82 cmark
83 97 2 gmark
84 96 1 gmark
84 cmark
96 cmark
85 95 2 gmark
86 94 2 gmark
93 cmark
88 cmark
129 141 1 gmark
141 cmark
130 140 1 gmark

% End Annotations
showpage
end
%%EOF
