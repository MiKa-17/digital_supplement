%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 09:55:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___AAGAGGCUAUCCUCAACGUGUCGAGCA_UCAAGAGACAGCCCCGGUUAAUGGAAAAAUU___UCCGGGGCUUUCCACUUUCUGCCCCACAACA__________________CGGCAUAAGACAAAAAGCCUCAAGCACC\
) } def
/len { sequence length } bind def

/coor [
[203.18800354 245.63421631]
[191.62025452 227.25578308]
[185.69720459 206.35113525]
[185.90527344 184.61291504]
[192.23419189 163.80314636]
[179.35505676 156.11369324]
[166.47590637 148.42425537]
[153.59675598 140.73480225]
[140.71762085 133.04534912]
[127.83847046 125.35591125]
[118.60523987 132.73754883]
[107.53836823 136.89276123]
[95.72856140 137.41198730]
[84.33972168 134.24409485]
[74.49427795 127.70127106]
[62.33968353 136.49137878]
[50.18508911 145.28146362]
[38.03049088 154.07156372]
[25.87589645 162.86166382]
[19.67033577 178.04135132]
[3.38721132 179.98863220]
[-6.22279549 166.70030212]
[0.72626716 151.84625244]
[17.08580017 150.70706177]
[29.24039459 141.91697693]
[41.39498901 133.12687683]
[53.54958725 124.33677673]
[65.70417786 115.54667664]
[63.29535675 108.40664673]
[62.35644150 100.92994690]
[62.92502594 93.41601562]
[64.97834778 86.16574860]
[68.43418121 79.46949768]
[73.15412140 73.59542847]
[64.76926422 61.15781784]
[56.38440704 48.72020721]
[47.99954987 36.28259659]
[39.61469269 23.84498596]
[31.22983360 11.40737629]
[14.03309059 8.40804386]
[4.48165798 -5.79937887]
[8.05198288 -22.19807434]
[-0.60407406 -34.44849014]
[-9.26013088 -46.69890594]
[-17.91618729 -58.94932175]
[-26.57224274 -71.19973755]
[-35.22829819 -83.45014954]
[-43.88435745 -95.70056915]
[-62.53449249 -103.21585083]
[-63.65269089 -122.47431946]
[-72.83848572 -134.33270264]
[-82.02427673 -146.19108582]
[-91.21006775 -158.04946899]
[-100.39585876 -169.90785217]
[-115.77177429 -175.60989380]
[-118.25447845 -191.82002258]
[-105.28999329 -201.86264038]
[-90.21505737 -195.40675354]
[-88.53748322 -179.09364319]
[-79.35168457 -167.23526001]
[-70.16589355 -155.37687683]
[-60.98010254 -143.51849365]
[-51.79431152 -131.66011047]
[-41.48888016 -131.27311707]
[-32.94335556 -125.11493683]
[-29.16025734 -115.04854584]
[-31.63394165 -104.35662842]
[-22.97788429 -92.10620880]
[-14.32182789 -79.85579681]
[-5.66577148 -67.60537720]
[2.99028516 -55.35496140]
[11.64634132 -43.10454559]
[20.30239868 -30.85413170]
[33.22638702 -30.45704269]
[43.70365143 -22.55156898]
[47.75094223 -9.86111450]
[43.66744614 3.02251840]
[52.05230331 15.46012878]
[60.43716049 27.89773941]
[68.82202148 40.33535004]
[77.20687866 52.77296066]
[85.59173584 65.21057129]
[106.83926392 62.97126770]
[125.88499451 72.65280151]
[136.59745789 91.13834381]
[135.52792358 112.47676086]
[148.40705872 120.16620636]
[161.28620911 127.85565948]
[174.16535950 135.54510498]
[187.04449463 143.23455811]
[199.92364502 150.92399597]
[206.21485901 143.48213196]
[213.40068054 136.90267944]
[221.36396790 131.29231262]
[229.97492981 126.74188995]
[239.09329224 123.32501221]
[248.57060242 121.09681702]
[258.25265503 120.09310913]
[267.98187256 120.32973480]
[277.60009766 121.80239105]
[286.95092773 124.48667908]
[295.88241577 128.33850098]
[304.24954224 133.29476929]
[311.91638184 139.27450562]
[318.75860596 146.18008423]
[324.66519165 153.89886475]
[329.54049683 162.30505371]
[333.30560303 171.26167297]
[335.89968872 180.62290955]
[337.28103638 190.23638916]
[337.42764282 199.94566345]
[336.33755493 209.59286499]
[334.02896118 219.02111816]
[330.53988647 228.07719421]
[325.92745972 236.61399841]
[320.26715088 244.49288940]
[313.65133667 251.58599854]
[322.83712769 263.44436646]
[332.02291870 275.30276489]
[341.20870972 287.16113281]
[350.39450073 299.01953125]
[359.58029175 310.87789917]
[368.76608276 322.73629761]
[377.95187378 334.59466553]
[387.13766479 346.45306396]
[402.80770874 349.89254761]
[409.75909424 364.35137939]
[402.65939331 378.73794556]
[386.95483398 382.01611328]
[374.69262695 371.67117310]
[375.27929688 355.63885498]
[366.09350586 343.78045654]
[356.90771484 331.92208862]
[347.72192383 320.06369019]
[338.53613281 308.20532227]
[329.35034180 296.34692383]
[320.16455078 284.48855591]
[310.97875977 272.63015747]
[301.79296875 260.77178955]
[282.01184082 269.58972168]
[260.53591919 272.47744751]
[239.10502625 269.19445801]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 91]
[6 90]
[7 89]
[8 88]
[9 87]
[10 86]
[15 28]
[16 27]
[17 26]
[18 25]
[19 24]
[34 82]
[35 81]
[36 80]
[37 79]
[38 78]
[39 77]
[42 73]
[43 72]
[44 71]
[45 70]
[46 69]
[47 68]
[48 67]
[50 63]
[51 62]
[52 61]
[53 60]
[54 59]
[117 139]
[118 138]
[119 137]
[120 136]
[121 135]
[122 134]
[123 133]
[124 132]
[125 131]
] def

init

% Start Annotations
5 91 0.0 0.6 colorpair
6 90 0.0 1 colorpair
7 89 0.16 1 colorpair
8 88 0.0 1 colorpair
9 87 0.16 1 colorpair
10 86 0.0 1 colorpair
15 28 0.0 1 colorpair
16 27 0.16 1 colorpair
17 26 0.16 1 colorpair
18 25 0.16 1 colorpair
19 24 0.0 1 colorpair
34 82 0.16 1 colorpair
35 81 0.16 1 colorpair
36 80 0.0 1 colorpair
37 79 0.0 0.6 colorpair
38 78 0.0 0.6 colorpair
39 77 0.16 1 colorpair
42 73 0.0 0.6 colorpair
43 72 0.0 1 colorpair
44 71 0.0 0.6 colorpair
45 70 0.16 1 colorpair
46 69 0.16 1 colorpair
47 68 0.0 1 colorpair
48 67 0.16 1 colorpair
50 63 0.0 0.6 colorpair
51 62 0.0 1 colorpair
52 61 0.0 1 colorpair
53 60 0.0 1 colorpair
54 59 0.16 1 colorpair
117 139 0.0 0.6 colorpair
118 138 0.0 1 colorpair
119 137 0.0 0.6 colorpair
120 136 0.0 1 colorpair
121 135 0.16 1 colorpair
122 134 0.0 1 colorpair
123 133 0.0 1 colorpair
124 132 0.0 0.6 colorpair
125 131 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
5 91 1 gmark
7 cmark
89 cmark
87 cmark
27 cmark
17 cmark
26 cmark
18 cmark
25 cmark
34 cmark
35 cmark
37 79 1 gmark
38 78 1 gmark
39 cmark
77 cmark
42 73 1 gmark
44 71 1 gmark
45 cmark
46 cmark
67 cmark
50 63 1 gmark
54 cmark
59 cmark
117 139 1 gmark
119 137 1 gmark
121 cmark
135 cmark
124 132 1 gmark

% End Annotations
showpage
end
%%EOF
