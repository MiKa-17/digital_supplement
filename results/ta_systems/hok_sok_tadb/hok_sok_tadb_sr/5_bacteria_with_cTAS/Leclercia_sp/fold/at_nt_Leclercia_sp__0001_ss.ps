%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 09:55:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGUUGU_UGGUGCGUAUUGAUAAUAUGUCUGACGCUGCUGAUAUUCACCUGGAUGACUCGCAAUUCGCUCUGCGAACUCCGACUGAAAGACGAAAAGCGGGAAGUGGCGGCUGUGUUAGCCUACGAAGCCGGUAAGUAG____CUCAAAGGCGGGGGAAACCCCCCCC_______GCCUCUGAUGUCGUUGAGGUAG_CCAAAAGCACCUUU_AUUAA_GGGUUG\
) } def
/len { sequence length } bind def

/coor [
[165.55445862 466.57177734]
[150.56382751 467.10214233]
[135.61660767 465.84503174]
[120.92514801 462.81829834]
[106.69820404 458.06497192]
[93.13792419 451.65258789]
[80.43698120 443.67224121]
[68.77583313 434.23730469]
[58.32017517 423.48190308]
[49.21856689 411.55877686]
[41.60032654 398.63739014]
[35.57370377 384.90130615]
[31.22432518 370.54571533]
[28.61398888 355.77459717]
[27.77978706 340.79779053]
[28.73357010 325.82815552]
[31.46178818 311.07833862]
[35.92567444 296.75796509]
[42.06158447 283.07086182]
[30.06195450 292.07135010]
[18.06232452 301.07183838]
[11.66516018 315.54205322]
[-3.15897870 316.98919678]
[-15.15860939 325.98968506]
[-27.15824127 334.99017334]
[-39.15787125 343.99066162]
[-35.35079575 358.70715332]
[-37.47021866 373.75958252]
[-45.19294357 386.85266113]
[-57.34130859 395.98968506]
[-72.06278229 399.77740479]
[-87.11243439 397.63818359]
[-100.19531250 389.89825439]
[-109.31637573 377.73788452]
[-113.08471680 363.01144409]
[-110.92570496 347.96459961]
[-103.16855621 334.89190674]
[-90.99619293 325.78686523]
[-76.26480865 322.03790283]
[-61.22083664 324.21670532]
[-48.15836334 331.99102783]
[-36.15873337 322.99053955]
[-24.15910149 313.99005127]
[-12.15947056 304.98956299]
[-6.62060022 291.16311646]
[9.06183243 289.07223511]
[21.06146240 280.07171631]
[33.06109238 271.07122803]
[41.29730225 258.53469849]
[44.79393768 243.94793701]
[48.29057312 229.36117554]
[51.78720474 214.77441406]
[55.28384018 200.18765259]
[58.78047180 185.60090637]
[62.27710724 171.01414490]
[65.77374268 156.42738342]
[69.27037048 141.84062195]
[72.76700592 127.25386047]
[65.96640015 113.88405609]
[52.11816025 108.11983490]
[38.26991653 102.35562134]
[24.42167473 96.59140778]
[10.57343292 90.82718658]
[-3.27480888 85.06297302]
[-17.12305069 79.29875183]
[-30.97129250 73.53453827]
[-44.81953430 67.77031708]
[-58.66777802 62.00610352]
[-72.51602173 56.24188614]
[-89.46245575 55.73728561]
[-93.66881561 39.31343460]
[-79.05124664 30.72488594]
[-66.75180054 42.39364243]
[-52.90356064 48.15785980]
[-39.05531693 53.92207718]
[-25.20707512 59.68629456]
[-11.35883427 65.45050812]
[2.48940802 71.21472931]
[16.33765030 76.97894287]
[30.18589211 82.74316406]
[44.03413391 88.50737762]
[57.88237381 94.27159882]
[71.73061371 100.03581238]
[80.73110962 88.03617859]
[71.32090759 76.35507965]
[61.91071320 64.67397308]
[46.17797089 61.53384781]
[38.95217514 47.21018219]
[45.77633286 32.69086838]
[61.41553879 29.11388588]
[73.87272644 39.22318268]
[73.59181976 55.26377869]
[83.00201416 66.94487762]
[92.41221619 78.62598419]
[99.55152130 76.32810974]
[94.95599365 62.04941559]
[109.23475647 57.45410538]
[113.83014679 71.73236084]
[120.96945953 69.43448639]
[121.79940796 54.45746231]
[122.62936401 39.48043823]
[109.36944580 28.97065926]
[105.03385162 12.78781796]
[111.14103699 -2.63425207]
[125.09799957 -11.28600502]
[125.72060394 -26.27307892]
[126.23948669 -41.26409912]
[126.65461731 -56.25835419]
[127.06975555 -71.25260925]
[113.94434357 -79.22877502]
[106.57956696 -92.70674133]
[106.95651245 -108.06100464]
[114.97377777 -121.16135406]
[128.47476196 -128.48384094]
[143.82777405 -128.05877686]
[156.90292358 -120.00048828]
[164.18305969 -106.47661591]
[163.70986938 -91.12501526]
[155.61064148 -78.07518768]
[142.06401062 -70.83747101]
[141.64888000 -55.84321976]
[141.23373413 -40.84896469]
[144.18722534 -34.08352661]
[140.70767212 -25.65047455]
[140.08506775 -10.66340065]
[151.27040100 -3.38593721]
[157.45129395 8.56266212]
[156.91970825 22.11305046]
[149.70758057 33.72456741]
[137.60638428 40.31039429]
[136.77642822 55.28741455]
[135.94648743 70.26443481]
[141.85159302 74.88825226]
[149.76029968 62.14258194]
[157.66902161 49.39691162]
[165.57774353 36.65123749]
[173.48646545 23.90556526]
[181.39518738 11.15989399]
[186.51477051 -2.93939090]
[199.90347290 -9.70272923]
[214.29006958 -5.45704794]
[221.86140442 7.49188328]
[218.50559998 22.11168289]
[206.04637146 30.46228027]
[195.56945801 41.19700241]
[185.09254456 51.93172836]
[174.61563110 62.66645050]
[164.13871765 73.40117645]
[153.66180420 84.13589478]
[159.56690979 88.75971985]
[173.90776062 84.36200714]
[188.24862671 79.96430206]
[202.58947754 75.56659698]
[216.93034363 71.16889191]
[231.27119446 66.77118683]
[245.61204529 62.37348175]
[259.95291138 57.97577286]
[270.72482300 45.61059189]
[286.76525879 49.02188873]
[291.57315063 64.70040894]
[280.20260620 76.51744080]
[264.35061646 72.31663513]
[250.00975037 76.71434021]
[235.66889954 81.11204529]
[221.32804871 85.50975037]
[206.98718262 89.90745544]
[192.64633179 94.30516052]
[178.30546570 98.70286560]
[163.96461487 103.10057068]
[178.65827942 106.11660004]
[189.22961426 116.75834656]
[196.50088501 129.87811279]
[199.92172241 144.48284912]
[199.23315430 159.46702576]
[194.48733521 173.69647217]
[186.04347229 186.09411621]
[174.54072571 195.72149658]
[160.84976196 201.84992981]
[146.00691223 204.01550293]
[131.13568115 202.05432129]
[117.36170959 196.11480713]
[105.72760773 186.64656067]
[97.11400604 174.36625671]
[92.17288971 160.20343018]
[91.27845001 145.22795105]
[87.35376740 130.75048828]
[83.85713196 145.33724976]
[80.36049652 159.92401123]
[76.86386871 174.51077271]
[73.36723328 189.09753418]
[69.87059784 203.68429565]
[66.37396240 218.27105713]
[62.87733078 232.85781860]
[59.38069534 247.44456482]
[55.88406372 262.03134155]
[66.01045990 250.96534729]
[77.38163757 241.18289185]
[89.83602142 232.82296753]
[103.19666290 226.00436401]
[117.27371216 220.82395935]
[131.86717224 217.35536194]
[146.76966858 215.64785767]
[161.76945496 215.72569275]
[176.65342712 217.58778381]
[191.21009827 221.20765686]
[205.23262024 226.53388977]
[218.52177429 233.49078369]
[230.88873291 241.97952271]
[242.15776062 251.87945557]
[252.16876221 263.04995728]
[260.77947998 275.33227539]
[267.86758423 288.55191040]
[273.33233643 302.52102661]
[277.09613037 317.04116821]
[279.10543823 331.90597534]
[279.33175659 346.90426636]
[277.77185059 361.82293701]
[274.44784546 376.45001221]
[269.40704346 390.57763672]
[262.72100830 404.00512695]
[254.48478699 416.54162598]
[244.81536865 428.00909424]
[233.85015869 438.24450684]
[221.74494934 447.10250854]
[208.67173767 454.45718384]
[194.81629944 460.20407104]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 48]
[20 47]
[21 46]
[23 44]
[24 43]
[25 42]
[26 41]
[49 195]
[50 194]
[51 193]
[52 192]
[53 191]
[54 190]
[55 189]
[56 188]
[57 187]
[58 186]
[59 83]
[60 82]
[61 81]
[62 80]
[63 79]
[64 78]
[65 77]
[66 76]
[67 75]
[68 74]
[69 73]
[84 94]
[85 93]
[86 92]
[99 132]
[100 131]
[101 130]
[105 125]
[106 124]
[107 122]
[108 121]
[109 120]
[150 169]
[151 168]
[152 167]
[153 166]
[154 165]
[155 164]
[156 163]
[157 162]
] def

init

% Start Annotations
19 48 0.16 1 colorpair
20 47 0.0 0.6 colorpair
21 46 0.0 1 colorpair
23 44 0.16 0.2 colorpair
24 43 0.32 1 colorpair
25 42 0.16 1 colorpair
26 41 0.16 0.2 colorpair
49 195 0.0 0.2 colorpair
50 194 0.16 1 colorpair
51 193 0.0 1 colorpair
52 192 0.32 0.6 colorpair
53 191 0.32 0.6 colorpair
54 190 0.16 0.6 colorpair
55 189 0.0 1 colorpair
56 188 0.16 0.6 colorpair
57 187 0.0 0.6 colorpair
58 186 0.16 0.6 colorpair
59 83 0.16 0.6 colorpair
60 82 0.0 0.6 colorpair
61 81 0.0 0.6 colorpair
62 80 0.16 0.6 colorpair
63 79 0.16 1 colorpair
64 78 0.0 0.2 colorpair
65 77 0.16 0.6 colorpair
66 76 0.0 0.6 colorpair
67 75 0.0 0.6 colorpair
68 74 0.16 1 colorpair
69 73 0.16 1 colorpair
84 94 0.16 0.6 colorpair
85 93 0.16 1 colorpair
86 92 0.32 1 colorpair
99 132 0.0 0.6 colorpair
100 131 0.16 0.6 colorpair
101 130 0.16 0.6 colorpair
105 125 0.0 0.6 colorpair
106 124 0.16 1 colorpair
107 122 0.16 0.6 colorpair
108 121 0.16 1 colorpair
109 120 0.0 1 colorpair
150 169 0.16 0.2 colorpair
151 168 0.16 1 colorpair
152 167 0.0 0.6 colorpair
153 166 0.16 0.6 colorpair
154 165 0.32 1 colorpair
155 164 0.0 0.6 colorpair
156 163 0.0 0.6 colorpair
157 162 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
48 cmark
20 47 1 gmark
23 44 2 gmark
23 cmark
44 cmark
24 cmark
43 cmark
42 cmark
26 41 2 gmark
26 cmark
49 195 2 gmark
50 cmark
52 192 1 gmark
52 cmark
192 cmark
53 191 1 gmark
53 cmark
191 cmark
54 190 1 gmark
54 cmark
190 cmark
56 188 1 gmark
56 cmark
188 cmark
57 187 1 gmark
58 186 1 gmark
58 cmark
59 83 1 gmark
59 cmark
83 cmark
60 82 1 gmark
61 81 1 gmark
62 80 1 gmark
62 cmark
80 cmark
63 cmark
64 78 2 gmark
65 77 1 gmark
65 cmark
77 cmark
66 76 1 gmark
67 75 1 gmark
74 cmark
69 cmark
84 94 1 gmark
84 cmark
94 cmark
93 cmark
86 cmark
92 cmark
99 132 1 gmark
100 131 1 gmark
100 cmark
131 cmark
101 130 1 gmark
101 cmark
130 cmark
105 125 1 gmark
124 cmark
107 122 1 gmark
122 cmark
108 cmark
121 cmark
150 169 2 gmark
150 cmark
169 cmark
168 cmark
152 167 1 gmark
153 166 1 gmark
153 cmark
166 cmark
154 cmark
165 cmark
155 164 1 gmark
156 163 1 gmark

% End Annotations
showpage
end
%%EOF
