%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 09:55:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAGAGGCUACUCUCAACUUGUUGGUUCGUUGAGGGCAGCCUCGGGUAAAUGAAAAUUUCCCGGGGCUUCUUACUUUCUGUCCCUCAAUCAUGCUUAAGACAGAAAGCCUUAAGCACC\
) } def
/len { sequence length } bind def

/coor [
[91.43106842 119.34297943]
[87.32425690 115.76845551]
[84.44055176 111.43121338]
[82.88486481 106.70825958]
[68.69422913 111.56889343]
[54.50358963 116.42952728]
[40.31295013 121.29016113]
[26.12231064 126.15079498]
[11.93167210 131.01142883]
[1.38333404 142.80308533]
[-13.16442013 139.60743713]
[-27.35505867 144.46807861]
[-41.54569626 149.32872009]
[-55.73633575 154.18934631]
[-69.92697906 159.04998779]
[-84.11761475 163.91061401]
[-98.30825043 168.77125549]
[-112.49889374 173.63188171]
[-115.37504578 188.71907043]
[-125.42160797 200.33639526]
[-139.93611145 205.35884094]
[-155.01420593 202.43540955]
[-166.59997559 192.35249329]
[-171.57690430 177.82232666]
[-168.60623169 162.75346375]
[-158.48703003 151.19934082]
[-143.94134521 146.26799011]
[-128.88186646 149.28588867]
[-117.35952759 159.44125366]
[-103.16888428 154.58061218]
[-88.97824860 149.71997070]
[-74.78761292 144.85934448]
[-60.59696960 139.99870300]
[-46.40633392 135.13807678]
[-32.21569443 130.27743530]
[-18.02505493 125.41680145]
[-8.49172592 113.97281647]
[7.07103777 116.82079315]
[21.26167679 111.96015930]
[35.45231628 107.09952545]
[49.64295578 102.23888397]
[63.83359528 97.37825012]
[78.02423096 92.51761627]
[84.53248596 79.00308228]
[79.48497009 64.87783813]
[74.43744659 50.75259781]
[68.53072357 43.61669922]
[69.44849396 36.18733597]
[64.77559662 21.93377495]
[60.10269165 7.68021488]
[55.42979431 -6.57334614]
[42.85958099 -17.10528946]
[45.96152496 -33.20839310]
[61.54460907 -38.31716537]
[73.57829285 -27.17613983]
[69.68335724 -11.24624634]
[74.35625458 3.00731444]
[79.02915192 17.26087570]
[83.70205688 31.51443672]
[88.56269073 45.70507431]
[93.61021423 59.83031845]
[98.65773010 73.95556641]
[113.36466217 76.90618896]
[123.47010040 65.82105255]
[133.57553101 54.73591995]
[143.68096924 43.65078735]
[153.78640747 32.56565475]
[148.03758240 18.42656326]
[149.00137329 3.19390512]
[156.48640442 -10.10786438]
[169.00651550 -18.83766937]
[184.07583618 -21.26220131]
[198.70234680 -16.90006638]
[209.98191833 -6.61737013]
[215.67501831 7.54425001]
[214.65124512 22.77299500]
[207.11389160 36.04518509]
[194.55949402 44.72561646]
[179.48074341 47.09078979]
[164.87153625 42.67108917]
[154.76609802 53.75622177]
[144.66065979 64.84135437]
[134.55523682 75.92649078]
[124.44979858 87.01162720]
[135.30935669 76.66416168]
[150.23062134 75.12927246]
[162.96928406 83.04927826]
[168.19441223 97.10978699]
[163.71939087 111.42670441]
[151.41693115 120.00863647]
[136.43542480 119.26417542]
[125.04372406 109.50378418]
[135.72009277 120.04015350]
[146.39646912 130.57652283]
[157.07284546 141.11288452]
[167.74922180 151.64926147]
[178.42559814 162.18562317]
[189.10197449 172.72198486]
[199.77833557 183.25836182]
[215.03559875 187.44485474]
[218.65946960 201.89189148]
[234.64709473 203.22427368]
[243.45344543 216.63426208]
[238.32302856 231.83486938]
[223.19146729 237.16548157]
[209.66639709 228.53691101]
[208.12310791 212.56825256]
[193.62948608 209.13539124]
[189.24197388 193.93473816]
[178.56559753 183.39836121]
[167.88922119 172.86199951]
[157.21286011 162.32562256]
[146.53648376 151.78926086]
[135.86010742 141.25289917]
[125.18373108 130.71652222]
[114.50736237 120.18016052]
[108.50161743 122.36805725]
[102.36846924 122.88256836]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 43]
[5 42]
[6 41]
[7 40]
[8 39]
[9 38]
[11 36]
[12 35]
[13 34]
[14 33]
[15 32]
[16 31]
[17 30]
[18 29]
[44 62]
[45 61]
[46 60]
[48 59]
[49 58]
[50 57]
[51 56]
[63 84]
[64 83]
[65 82]
[66 81]
[67 80]
[92 116]
[93 115]
[94 114]
[95 113]
[96 112]
[97 111]
[98 110]
[99 109]
[101 107]
] def

init

% Start Annotations
4 43 0.0 1 colorpair
5 42 0.0 1 colorpair
6 41 0.0 1 colorpair
7 40 0.0 1 colorpair
8 39 0.0 1 colorpair
9 38 0.0 1 colorpair
11 36 0.0 1 colorpair
12 35 0.0 1 colorpair
13 34 0.0 1 colorpair
14 33 0.0 1 colorpair
15 32 0.0 1 colorpair
16 31 0.0 1 colorpair
17 30 0.0 1 colorpair
18 29 0.0 1 colorpair
44 62 0.0 1 colorpair
45 61 0.0 1 colorpair
46 60 0.0 1 colorpair
48 59 0.0 1 colorpair
49 58 0.0 1 colorpair
50 57 0.0 1 colorpair
51 56 0.0 1 colorpair
63 84 0.0 1 colorpair
64 83 0.0 1 colorpair
65 82 0.0 1 colorpair
66 81 0.0 1 colorpair
67 80 0.0 1 colorpair
92 116 0.0 1 colorpair
93 115 0.0 1 colorpair
94 114 0.0 1 colorpair
95 113 0.0 1 colorpair
96 112 0.0 1 colorpair
97 111 0.0 1 colorpair
98 110 0.0 1 colorpair
99 109 0.0 1 colorpair
101 107 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
