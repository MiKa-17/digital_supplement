%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 09:55:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_AUGCCACAAAAAACACUGCUGGGAAGUGUGCUCAUGAUCUGCACGACGAUACUGAUAUUCACCUGGAUGAAACGCGACAAGCUAUGCGAGCUAAAAAUAAAAAAGGAGAAAAAAGAACUGGCAGCAAAAUUAGCCUACAAAGU_______\
) } def
/len { sequence length } bind def

/coor [
[107.21661377 193.88037109]
[122.16703033 192.66177368]
[136.83012390 195.82305908]
[149.95265198 203.09527588]
[142.54232788 190.05354309]
[135.13200378 177.01179504]
[127.72167206 163.97004700]
[120.31134796 150.92831421]
[113.78394318 153.06831360]
[107.04018402 154.37535095]
[100.18592072 154.82890320]
[93.32874298 154.42184448]
[86.57627106 153.16058350]
[80.03450775 151.06488037]
[73.80612183 148.16766357]
[67.98888397 144.51440430]
[62.67409897 140.16242981]
[57.94518661 135.18005371]
[53.87637711 129.64549255]
[40.26723862 135.95352173]
[26.65810013 142.26156616]
[13.04896069 148.56959534]
[-0.56017792 154.87763977]
[-14.16931725 161.18566895]
[-19.37278938 176.10879517]
[-33.64057159 182.90628052]
[-48.50783920 177.54533386]
[-55.15410995 163.20648193]
[-49.63626480 148.39671326]
[-35.22794724 141.90242004]
[-20.47735405 147.57653809]
[-6.86821508 141.26849365]
[6.74092388 134.96046448]
[20.35006332 128.65242004]
[33.95920181 122.34438324]
[47.56834030 116.03634644]
[45.21839523 102.28456879]
[46.41518402 88.38488007]
[51.08122253 75.23719788]
[58.91441345 63.69272995]
[69.40761566 54.49890900]
[62.81966400 41.02304459]
[56.23171616 27.54718018]
[49.64376831 14.07131577]
[43.05582047 0.59545070]
[36.46786880 -12.88041401]
[29.87992096 -26.35627937]
[23.29197311 -39.83214188]
[16.70402336 -53.30801010]
[1.20410073 -63.19526291]
[3.02021360 -80.62294769]
[-3.84483242 -93.95977783]
[-10.70987892 -107.29661560]
[-17.57492447 -120.63344574]
[-24.43997002 -133.97027588]
[-31.44247246 -147.23545837]
[-38.58168411 -160.42756653]
[-45.72089386 -173.61967468]
[-59.09380341 -182.07402039]
[-58.34656143 -196.94985962]
[-65.48577118 -210.14196777]
[-80.38971710 -216.07929993]
[-84.90209198 -231.47470093]
[-75.56138611 -244.51811218]
[-59.53299332 -245.20376587]
[-49.11252213 -233.00567627]
[-52.29366684 -217.28118896]
[-45.15445709 -204.08908081]
[-32.29219055 -196.57832336]
[-32.52878952 -180.75888062]
[-25.38957787 -167.56677246]
[-18.25036621 -154.37467957]
[-12.26300240 -149.96102905]
[-11.10313702 -140.83532715]
[-4.23809052 -127.49849701]
[2.62695551 -114.16165924]
[9.49200153 -100.82482910]
[16.35704803 -87.48799133]
[27.81102371 -83.47663116]
[33.62489319 -72.36834717]
[30.17988777 -59.89595795]
[36.76783752 -46.42009354]
[43.35578537 -32.94422913]
[49.94373322 -19.46836281]
[56.53168488 -5.99249792]
[63.11963272 7.48336649]
[69.70758057 20.95923042]
[76.29553223 34.43509674]
[82.88347626 47.91096115]
[115.10087585 47.29130173]
[142.10249329 64.87702179]
[154.82685852 56.93407822]
[167.55123901 48.99113083]
[175.16067505 35.12004471]
[190.05422974 34.94406128]
[202.77861023 27.00111580]
[203.73376465 11.51346588]
[213.63584900 -0.43342596]
[228.67732239 -4.24573612]
[243.07443237 1.54244685]
[251.29118347 14.70544815]
[250.16807556 30.18182564]
[240.13696289 42.02059555]
[225.05502319 45.66950989]
[210.72155762 39.72548676]
[197.99717712 47.66843414]
[191.29788208 60.97138596]
[175.49417114 61.71550369]
[162.76980591 69.65844727]
[150.04544067 77.60139465]
[152.81057739 85.25939178]
[154.41119385 93.24243164]
[154.81198120 101.37448883]
[154.00411987 109.47623444]
[152.00538635 117.36901855]
[148.85989380 124.87879944]
[144.63697815 131.83996582]
[139.42976379 138.09904480]
[133.35308838 143.51797485]
[140.76341248 156.55972290]
[148.17373657 169.60147095]
[155.58406067 182.64321899]
[162.99440002 195.68495178]
[172.80665588 207.03042603]
[184.64375305 216.24360657]
[196.48086548 225.45680237]
[208.31797791 234.66999817]
[220.15507507 243.88317871]
[236.36811829 248.84036255]
[236.09288025 265.79208374]
[219.72744751 270.22030640]
[210.94189453 255.72029114]
[199.10478210 246.50709534]
[187.26766968 237.29391479]
[175.43057251 228.08071899]
[163.59346008 218.86752319]
[168.89715576 232.89859009]
[169.91221619 247.86421204]
[166.55169678 262.48294067]
[159.10336304 275.50299072]
[148.20500183 285.80957031]
[134.78976440 292.52014160]
[120.00637054 295.06005859]
[105.12065887 293.21191406]
[91.40724945 287.13391113]
[80.04035187 277.34646606]
[71.99328613 264.68768311]
[67.95507812 250.24148560]
[68.27151489 235.24482727]
[72.91550446 220.98181152]
[81.48938751 208.67375183]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 123]
[5 122]
[6 121]
[7 120]
[8 119]
[19 36]
[20 35]
[21 34]
[22 33]
[23 32]
[24 31]
[41 89]
[42 88]
[43 87]
[44 86]
[45 85]
[46 84]
[47 83]
[48 82]
[49 81]
[51 78]
[52 77]
[53 76]
[54 75]
[55 74]
[56 72]
[57 71]
[58 70]
[60 68]
[61 67]
[91 110]
[92 109]
[93 108]
[95 106]
[96 105]
[124 136]
[125 135]
[126 134]
[127 133]
[128 132]
] def

init

% Start Annotations
4 123 0.0 0.6 colorpair
5 122 0.0 1 colorpair
6 121 0.0 1 colorpair
7 120 0.0 1 colorpair
8 119 0.0 0.2 colorpair
19 36 0.0 1 colorpair
20 35 0.16 1 colorpair
21 34 0.0 0.2 colorpair
22 33 0.0 1 colorpair
23 32 0.0 1 colorpair
24 31 0.16 1 colorpair
41 89 0.0 1 colorpair
42 88 0.0 1 colorpair
43 87 0.16 1 colorpair
44 86 0.0 0.2 colorpair
45 85 0.16 1 colorpair
46 84 0.0 1 colorpair
47 83 0.0 0.2 colorpair
48 82 0.0 1 colorpair
49 81 0.16 1 colorpair
51 78 0.16 1 colorpair
52 77 0.0 0.2 colorpair
53 76 0.0 0.2 colorpair
54 75 0.0 1 colorpair
55 74 0.0 1 colorpair
56 72 0.0 0.2 colorpair
57 71 0.16 1 colorpair
58 70 0.16 1 colorpair
60 68 0.0 1 colorpair
61 67 0.0 0.2 colorpair
91 110 0.0 0.2 colorpair
92 109 0.0 1 colorpair
93 108 0.0 1 colorpair
95 106 0.16 1 colorpair
96 105 0.0 0.2 colorpair
124 136 0.16 1 colorpair
125 135 0.0 1 colorpair
126 134 0.0 1 colorpair
127 133 0.0 0.2 colorpair
128 132 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
4 123 1 gmark
8 119 2 gmark
20 cmark
35 cmark
21 34 2 gmark
24 cmark
31 cmark
43 cmark
44 86 2 gmark
45 cmark
85 cmark
47 83 2 gmark
49 cmark
81 cmark
78 cmark
52 77 2 gmark
53 76 2 gmark
56 72 2 gmark
71 cmark
58 cmark
70 cmark
61 67 2 gmark
91 110 2 gmark
95 cmark
106 cmark
96 105 2 gmark
124 cmark
136 cmark
127 133 2 gmark
128 cmark

% End Annotations
showpage
end
%%EOF
