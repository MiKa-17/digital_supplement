%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 09:53:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___AAACUGCCGCGAAAGUAUCUGUUGUUUGGCUUAUUAGUGAUUUGUUUCACUCUUUUAUUAUUGACCUGGAUGGUUCGUGAUUCGCUAUGUGAAUUACAGCUCAGGCAGGGAAAUAGUGAGCUGGUGGCAUUCUUAGCCUACGAAACCAA__AG\
) } def
/len { sequence length } bind def

/coor [
[61.89405441 295.89880371]
[60.94970703 280.88473511]
[62.78050995 265.95278931]
[67.32410431 251.61157227]
[74.42573547 238.34953308]
[83.84352875 226.61839294]
[95.25670624 216.81767273]
[108.27655792 209.28121948]
[103.27181244 195.14076233]
[98.26706696 181.00030518]
[93.26232147 166.85984802]
[88.25757599 152.71939087]
[83.25283051 138.57893372]
[80.86560822 153.38775635]
[84.60538483 167.91407776]
[83.02410126 182.83050537]
[76.32182312 196.24986267]
[65.34648132 206.47444153]
[51.48661804 212.21066284]
[36.49570847 212.73280334]
[22.27032089 207.97482300]
[10.61017704 198.53866577]
[2.99045324 185.61814880]
[0.37515631 170.84790039]
[3.09515953 156.09657288]
[10.80634308 143.23043823]
[22.53312874 133.87722778]
[36.79190826 129.22027588]
[51.77705765 129.84837341]
[65.76232147 124.42505646]
[50.88902283 122.47956848]
[36.01572418 120.53407288]
[25.32607079 131.62629700]
[10.32995510 134.26635742]
[-3.18537569 127.64821625]
[-10.12897491 114.49814606]
[-25.00227547 112.55265045]
[-39.87557602 110.60715485]
[-54.74887466 108.66166687]
[-67.12491608 118.49066162]
[-82.81650543 116.60664368]
[-92.51410675 104.12738037]
[-90.46429443 88.45658112]
[-77.88320160 78.89146423]
[-62.23495102 81.10684204]
[-52.80338287 93.78836060]
[-37.93008041 95.73385620]
[-23.05678177 97.67935181]
[-8.18348217 99.62483978]
[1.90881121 88.70314026]
[16.67167282 85.78390503]
[30.48421478 92.19226837]
[37.96121597 105.66077423]
[52.83451843 107.60626221]
[67.70781708 109.55175781]
[70.49473572 88.41967010]
[84.84399414 74.43762970]
[103.49732208 72.48248291]
[109.34140015 58.66775131]
[115.18547821 44.85302353]
[121.02955627 31.03829384]
[126.87363434 17.22356415]
[119.07514954 0.00607947]
[126.16247559 -17.17276573]
[143.23832703 -23.65700912]
[148.52499390 -37.69449615]
[148.62747192 -46.88566208]
[154.06044006 -51.95820236]
[159.62693787 -65.88710022]
[165.19343567 -79.81599426]
[158.61964417 -88.34241486]
[156.22613525 -98.75618744]
[158.38447571 -109.13843536]
[164.63381958 -117.60498810]
[173.77723694 -122.64828491]
[184.11053467 -123.40563965]
[190.50265503 -136.97547913]
[196.89477539 -150.54533386]
[197.73179626 -159.69888306]
[203.55294800 -164.32078552]
[210.21531677 -177.76002502]
[216.87767029 -191.19924927]
[212.06156921 -206.01286316]
[219.00958252 -219.54724121]
[233.16177368 -224.04737854]
[239.82412720 -237.48660278]
[246.48649597 -250.92584229]
[253.14884949 -264.36508179]
[254.76670837 -281.24166870]
[271.43161011 -284.35891724]
[279.04034424 -269.20825195]
[266.58807373 -257.70272827]
[259.92572021 -244.26348877]
[253.26336670 -230.82424927]
[246.60101318 -217.38502502]
[251.58786011 -203.39691162]
[245.02272034 -189.67271423]
[230.31690979 -184.53689575]
[223.65454102 -171.09767151]
[216.99218750 -157.65843201]
[210.46463013 -144.15321350]
[204.07250977 -130.58335876]
[197.68037415 -117.01351929]
[205.63716125 -99.28353119]
[197.95281982 -81.10444641]
[179.12232971 -74.24950409]
[173.55583191 -60.32061005]
[167.98934937 -46.39171219]
[162.56248474 -32.40781784]
[157.27580261 -18.37033272]
[164.15498352 -9.18690491]
[165.73783875 2.29901433]
[161.51234436 13.22510147]
[152.42868042 20.81144142]
[140.68835449 23.06764221]
[134.84428406 36.88237000]
[129.00019836 50.69710159]
[123.15612793 64.51183319]
[117.31204987 78.32656097]
[123.84394836 84.42344666]
[128.23675537 92.47223663]
[129.91531372 101.72505951]
[128.56484985 111.26820374]
[124.17727661 120.11231232]
[117.06639862 127.29483032]
[107.84912872 131.98414612]
[97.39328766 133.57418823]
[102.39803314 147.71464539]
[107.40277863 161.85510254]
[112.40752411 175.99555969]
[117.41226959 190.13601685]
[122.41701508 204.27647400]
[137.27896118 201.94470215]
[152.31631470 202.38375854]
[167.01689148 205.57865906]
[180.88002014 211.42062378]
[193.43350220 219.71064758]
[204.24980164 230.16639709]
[212.96047974 242.43173218]
[219.26889038 256.08892822]
[222.96014404 270.67279053]
[223.90853882 285.68661499]
[222.08175659 300.61904907]
[217.54203796 314.96148682]
[210.44398499 328.22543335]
[201.02935791 339.95910645]
[189.61880493 349.76290894]
[176.60099792 357.30288696]
[162.41928101 362.32220459]
[147.55671692 364.64999390]
[132.51948547 364.20687866]
[117.81975555 361.00799561]
[103.95821381 355.16232300]
[91.40695953 346.86889648]
[80.59349060 336.41024780]
[71.88610840 324.14254761]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 132]
[9 131]
[10 130]
[11 129]
[12 128]
[13 127]
[30 55]
[31 54]
[32 53]
[36 49]
[37 48]
[38 47]
[39 46]
[58 119]
[59 118]
[60 117]
[61 116]
[62 115]
[65 110]
[66 109]
[68 108]
[69 107]
[70 106]
[76 103]
[77 102]
[78 101]
[80 100]
[81 99]
[82 98]
[85 95]
[86 94]
[87 93]
[88 92]
] def

init

% Start Annotations
8 132 0.0 0.2 colorpair
9 131 0.0 0.6 colorpair
10 130 0.16 1 colorpair
11 129 0.0 1 colorpair
12 128 0.16 0.6 colorpair
13 127 0.0 1 colorpair
30 55 0.32 1 colorpair
31 54 0.32 1 colorpair
32 53 0.0 1 colorpair
36 49 0.0 0.2 colorpair
38 47 0.0 1 colorpair
39 46 0.0 1 colorpair
58 119 0.16 0.2 colorpair
59 118 0.0 1 colorpair
60 117 0.16 1 colorpair
61 116 0.16 0.2 colorpair
62 115 0.0 0.6 colorpair
65 110 0.0 1 colorpair
66 109 0.16 1 colorpair
68 108 0.0 1 colorpair
69 107 0.16 0.6 colorpair
70 106 0.0 1 colorpair
77 102 0.16 1 colorpair
78 101 0.16 1 colorpair
80 100 0.0 1 colorpair
81 99 0.16 0.6 colorpair
82 98 0.16 1 colorpair
85 95 0.0 0.6 colorpair
86 94 0.0 0.6 colorpair
87 93 0.32 0.6 colorpair
88 92 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
8 132 2 gmark
9 131 1 gmark
10 cmark
12 128 1 gmark
128 cmark
30 cmark
55 cmark
31 cmark
54 cmark
36 49 2 gmark
37 48 3 gmark
37 cmark
48 cmark
58 119 2 gmark
58 cmark
60 cmark
117 cmark
61 116 2 gmark
61 cmark
116 cmark
62 115 1 gmark
66 cmark
109 cmark
69 107 1 gmark
69 cmark
76 103 3 gmark
76 cmark
103 cmark
77 cmark
78 cmark
101 cmark
81 99 1 gmark
81 cmark
99 cmark
82 cmark
85 95 1 gmark
86 94 1 gmark
87 93 1 gmark
87 cmark
93 cmark
88 cmark

% End Annotations
showpage
end
%%EOF
