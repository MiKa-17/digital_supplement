%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 09:55:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__AAUGCCACAAAAAACGGUGAUUUAGGGACUAAUAAUCAUCUGUAUAACACUACUGACCUUCACCGGGAUCACACAUGGAUAGCUGUGCGAAAUACAAAUCAAAAACGGAAAAAAAGAGGUUGCCGCCGUCUUAAACUACGAAGAUAAA___\
) } def
/len { sequence length } bind def

/coor [
[62.05577087 187.20246887]
[66.14821625 172.77153015]
[74.69474792 160.44575500]
[78.47549438 145.93005371]
[82.25624847 131.41433716]
[86.03700256 116.89862061]
[75.75988007 127.82476807]
[65.48274994 138.75091553]
[55.20562744 149.67706299]
[44.92850113 160.60321045]
[45.23643112 176.17700195]
[34.65831757 187.11126709]
[19.80919075 187.30885315]
[9.53206539 198.23500061]
[-0.74506080 209.16114807]
[-11.02218628 220.08729553]
[-14.25123882 236.16539001]
[-29.87419319 241.15090942]
[-41.81949234 229.91517639]
[-37.79883575 214.01654053]
[-21.94833374 209.81016541]
[-11.67120743 198.88401794]
[-1.39408195 187.95787048]
[8.88304329 177.03172302]
[8.17206573 162.19831848]
[18.43888474 150.97125244]
[34.00235367 150.32608032]
[44.27947998 139.39993286]
[54.55660629 128.47378540]
[64.83373260 117.54764557]
[75.11085510 106.62149811]
[60.17863083 108.04581451]
[46.30229950 102.34954834]
[36.67758942 90.84455109]
[33.52106857 76.18043518]
[37.55969238 61.73434448]
[47.86335754 50.83322144]
[62.05913162 45.98760223]
[76.87771606 48.31343460]
[88.90639496 57.27507401]
[95.37494659 70.80865479]
[94.79397583 85.79631805]
[96.62538910 70.90853882]
[98.45680237 56.02076340]
[100.28821564 41.13298416]
[102.11962891 26.24520683]
[103.95104980 11.35742950]
[105.78246307 -3.53034854]
[107.61387634 -18.41812515]
[109.44528961 -33.30590439]
[103.45079803 -47.94750977]
[112.68414307 -59.63488388]
[114.51555634 -74.52265930]
[116.34696960 -89.41043854]
[118.02643585 -104.31612396]
[119.55377960 -119.23815918]
[121.08113098 -134.16020203]
[122.60847473 -149.08222961]
[124.13581848 -164.00427246]
[125.66316223 -178.92631531]
[127.19050598 -193.84834290]
[120.89859772 -208.36462402]
[129.89161682 -220.23791504]
[131.41896057 -235.15995789]
[132.94630432 -250.08200073]
[134.47364807 -265.00402832]
[132.48585510 -269.01876831]
[131.96998596 -273.04794312]
[132.74320984 -276.61608887]
[134.48410034 -279.35949707]
[136.78251648 -281.06256104]
[139.52105713 -295.81045532]
[142.25961304 -310.55834961]
[144.99815369 -325.30624390]
[147.73669434 -340.05413818]
[150.47525024 -354.80203247]
[153.21379089 -369.54992676]
[142.43905640 -380.71615601]
[140.31881714 -396.08767700]
[147.66831970 -409.75384521]
[161.66156006 -416.45974731]
[176.91783142 -413.62680054]
[187.57080078 -402.34432983]
[189.52418518 -386.95071411]
[182.02685547 -373.36505127]
[167.96168518 -366.81137085]
[165.22314453 -352.06347656]
[162.48458862 -337.31558228]
[159.74604797 -322.56768799]
[157.00750732 -307.81979370]
[154.26895142 -293.07189941]
[151.53041077 -278.32400513]
[149.39567566 -263.47668457]
[147.86833191 -248.55464172]
[146.34098816 -233.63261414]
[144.81364441 -218.71057129]
[151.21481323 -205.26161194]
[142.11254883 -192.32099915]
[140.58520508 -177.39897156]
[139.05786133 -162.47692871]
[137.53051758 -147.55488586]
[136.00315857 -132.63285828]
[134.47581482 -117.71081543]
[132.94847107 -102.78877258]
[135.41088867 -95.77220154]
[131.23474121 -87.57902527]
[129.40333557 -72.69124603]
[127.57192230 -57.80346680]
[133.69740295 -44.22673416]
[124.33306885 -31.47448921]
[122.50165558 -16.58671188]
[120.67024231 -1.69893372]
[118.83882141 13.18884373]
[117.00740814 28.07662201]
[115.17599487 42.96439743]
[113.34458160 57.85217667]
[111.51316833 72.73995209]
[109.68174744 87.62773132]
[116.19001007 101.14226532]
[128.97160339 108.99278259]
[141.75320435 116.84330750]
[154.53480530 124.69382477]
[167.31640625 132.54434204]
[180.09802246 140.39486694]
[193.95266724 133.60868835]
[209.27416992 135.41287231]
[221.17349243 145.23171997]
[225.85359192 159.93206787]
[221.82109070 174.82308960]
[210.36271667 185.15310669]
[195.13481140 187.62585449]
[180.99653625 181.45228577]
[172.45938110 168.60237122]
[172.24749756 153.17646790]
[159.46589661 145.32594299]
[146.68429565 137.47541809]
[133.90269470 129.62490845]
[121.12108612 121.77438354]
[108.33948517 113.92386627]
[115.79265594 126.94116974]
[123.24582672 139.95848083]
[130.69900513 152.97578430]
[142.17805481 162.63140869]
[149.90950012 175.48539734]
[153.05921936 190.15097046]
[151.28739929 205.04595947]
[144.78521729 218.56341553]
[134.25413513 229.24501038]
[120.83031464 235.93835449]
[105.96196747 237.92135620]
[91.25316620 234.98005676]
[78.29077148 227.43179321]
[68.47322083 216.09091187]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 31]
[7 30]
[8 29]
[9 28]
[10 27]
[13 24]
[14 23]
[15 22]
[16 21]
[42 118]
[43 117]
[44 116]
[45 115]
[46 114]
[47 113]
[48 112]
[49 111]
[50 110]
[52 108]
[53 107]
[54 106]
[55 104]
[56 103]
[57 102]
[58 101]
[59 100]
[60 99]
[61 98]
[63 96]
[64 95]
[65 94]
[66 93]
[71 92]
[72 91]
[73 90]
[74 89]
[75 88]
[76 87]
[77 86]
[119 139]
[120 138]
[121 137]
[122 136]
[123 135]
[124 134]
] def

init

% Start Annotations
6 31 0.16 1 colorpair
7 30 0.0 0.2 colorpair
8 29 0.0 1 colorpair
9 28 0.0 0.2 colorpair
10 27 0.0 0.2 colorpair
13 24 0.0 1 colorpair
14 23 0.0 1 colorpair
15 22 0.0 0.2 colorpair
16 21 0.16 1 colorpair
42 118 0.0 0.2 colorpair
43 117 0.0 1 colorpair
44 116 0.0 0.2 colorpair
45 115 0.0 1 colorpair
46 114 0.16 1 colorpair
47 113 0.0 1 colorpair
48 112 0.0 0.2 colorpair
49 111 0.0 0.2 colorpair
50 110 0.0 1 colorpair
52 108 0.0 0.2 colorpair
53 107 0.0 1 colorpair
54 106 0.0 0.2 colorpair
55 104 0.0 0.2 colorpair
56 103 0.0 1 colorpair
57 102 0.16 1 colorpair
58 101 0.16 1 colorpair
59 100 0.0 0.2 colorpair
60 99 0.0 0.2 colorpair
61 98 0.16 1 colorpair
63 96 0.0 0.2 colorpair
64 95 0.0 1 colorpair
65 94 0.0 0.2 colorpair
66 93 0.16 1 colorpair
71 92 0.0 1 colorpair
72 91 0.0 0.2 colorpair
73 90 0.16 1 colorpair
74 89 0.16 1 colorpair
75 88 0.0 1 colorpair
76 87 0.0 1 colorpair
77 86 0.16 1 colorpair
119 139 0.0 1 colorpair
120 138 0.0 1 colorpair
121 137 0.0 0.2 colorpair
122 136 0.16 1 colorpair
123 135 0.0 1 colorpair
124 134 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
31 cmark
7 30 2 gmark
9 28 2 gmark
10 27 2 gmark
15 22 2 gmark
16 cmark
21 cmark
42 118 2 gmark
44 116 2 gmark
46 cmark
114 cmark
48 112 2 gmark
49 111 2 gmark
52 108 2 gmark
54 106 2 gmark
55 104 2 gmark
102 cmark
58 cmark
59 100 2 gmark
60 99 2 gmark
98 cmark
63 96 2 gmark
65 94 2 gmark
66 cmark
93 cmark
72 91 2 gmark
73 cmark
90 cmark
74 cmark
77 cmark
121 137 2 gmark
136 cmark

% End Annotations
showpage
end
%%EOF
