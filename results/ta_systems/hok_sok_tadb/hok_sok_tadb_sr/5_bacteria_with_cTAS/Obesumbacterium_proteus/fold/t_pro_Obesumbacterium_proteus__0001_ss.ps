%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 09:55:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___AUGUCGCGUAAGCUGUUGCUUUAUGGAUUAAUAGUGAUGUGUUUUACGCUAUUGAUCUUUACCUGGAUGGUACGUGGUUCGCUGUGCGAGCUACGAAUUAAGCAGGGAAAAACAGAGGUUGCCGCGUUCUUAAACUACGAAGAUAA_C__\
) } def
/len { sequence length } bind def

/coor [
[116.47818756 381.33203125]
[115.43437195 366.32455444]
[117.16618347 351.38079834]
[121.61464691 337.00979614]
[128.62823486 323.70098877]
[137.96807861 311.90768433]
[149.31607056 302.03155518]
[162.28569031 294.40899658]
[157.18734741 280.30200195]
[152.08900452 266.19503784]
[146.99066162 252.08804321]
[133.43881226 246.01493835]
[128.06741333 231.78108215]
[134.52932739 217.60781860]
[129.43098450 203.50083923]
[124.33264923 189.39385986]
[119.23430634 175.28686523]
[105.68244934 169.21376038]
[100.31104279 154.97990417]
[106.77296448 140.80664062]
[101.67462921 126.69966125]
[87.04347992 124.84009552]
[74.98622894 115.21952057]
[69.45611572 100.09749603]
[72.72163391 83.64028931]
[58.16884613 80.00485992]
[42.90488815 84.16684723]
[32.43229294 73.57562256]
[17.87950325 69.94020081]
[3.32671356 66.30477142]
[-11.22607613 62.66934586]
[-25.77886581 59.03392029]
[-40.33165359 55.39849472]
[-54.88444519 51.76306915]
[-69.43723297 48.12763977]
[-83.99002075 44.49221420]
[-98.54280853 40.85678864]
[-113.09560394 37.22136307]
[-127.64839172 33.58593750]
[-138.26473999 44.68497467]
[-153.01278687 48.97344208]
[-167.92535400 45.29776001]
[-178.99105835 34.64666748]
[-183.23327637 19.88525963]
[-179.51087952 4.98427868]
[-168.82514954 -6.04798698]
[-154.05052185 -10.24391270]
[-139.16127014 -6.47481632]
[-128.16255188 4.24543524]
[-124.01296234 19.03314781]
[-109.46017456 22.66857338]
[-94.90738678 26.30400085]
[-80.35459900 29.93942642]
[-65.80180359 33.57485199]
[-51.24901581 37.21027756]
[-36.69622803 40.84570312]
[-22.14343834 44.48112869]
[-7.59064960 48.11655807]
[6.96213961 51.75198364]
[21.51492882 55.38740921]
[36.06771851 59.02283478]
[50.29076385 54.60081863]
[61.80427170 65.45207214]
[76.35706329 69.08750153]
[89.80451202 62.44173431]
[95.75611115 48.67298508]
[101.70771027 34.90423584]
[107.65930939 21.13548851]
[102.07634735 6.59353971]
[108.30825806 -7.28514671]
[122.20619202 -12.51803207]
[128.15779114 -26.28678131]
[134.10939026 -40.05553055]
[140.06098938 -53.82427979]
[138.43434143 -69.56163788]
[150.58638000 -78.17425537]
[156.53797913 -91.94300842]
[162.48957825 -105.71175385]
[168.44117737 -119.48050690]
[174.39279175 -133.24925232]
[180.34439087 -147.01800537]
[186.29598999 -160.78675842]
[192.24758911 -174.55549622]
[198.19918823 -188.32424927]
[204.15078735 -202.09300232]
[204.88529968 -219.03102112]
[221.36471558 -223.01412964]
[229.75411987 -208.28137207]
[217.91954041 -196.14140320]
[211.96794128 -182.37265015]
[206.01634216 -168.60389709]
[200.06474304 -154.83514404]
[194.11312866 -141.06640625]
[188.16152954 -127.29765320]
[182.20993042 -113.52890778]
[176.25833130 -99.76015472]
[170.30673218 -85.99140930]
[164.35513306 -72.22265625]
[166.40748596 -57.47012711]
[153.82974243 -47.87267685]
[147.87814331 -34.10392761]
[141.92654419 -20.33517838]
[135.97494507 -6.56643057]
[141.68530273 7.14222670]
[135.84567261 21.19047928]
[121.42806244 27.08708954]
[115.47646332 40.85583878]
[109.52485657 54.62458801]
[103.57325745 68.39333344]
[113.66535187 72.07901764]
[121.73345184 78.79628754]
[126.93688202 87.63047791]
[128.80728149 97.46124268]
[127.28717041 107.10368347]
[122.71806335 115.45095825]
[115.78160858 121.60132599]
[120.87995148 135.70829773]
[134.90992737 142.47567749]
[139.87940979 156.85479736]
[133.34129333 170.18853760]
[138.43963623 184.29551697]
[143.53796387 198.40249634]
[148.63630676 212.50947571]
[162.66629028 219.27685547]
[167.63577271 233.65597534]
[161.09765625 246.98970032]
[166.19598389 261.09667969]
[171.29432678 275.20367432]
[176.39266968 289.31063843]
[191.23883057 286.88043213]
[206.27876282 287.21984863]
[221.00019836 290.31726074]
[234.90173340 296.06723022]
[247.50988770 304.27389526]
[258.39523315 314.65771484]
[267.18698120 326.86505127]
[273.58575439 340.48013306]
[277.37359619 355.03924561]
[278.42144775 370.04644775]
[276.69366455 384.99066162]
[272.24908447 399.36285400]
[265.23907471 412.67355347]
[255.90240479 424.46939087]
[244.55708313 434.34857178]
[231.58952332 441.97463989]
[217.44139099 447.08782959]
[202.59455872 449.51403809]
[187.55471802 449.17059326]
[172.83412170 446.06921387]
[158.93414307 440.31549072]
[146.32820129 432.10543823]
[135.44566345 421.71865845]
[126.65718842 409.50894165]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 129]
[9 128]
[10 127]
[11 126]
[14 123]
[15 122]
[16 121]
[17 120]
[20 117]
[21 116]
[25 64]
[26 63]
[28 61]
[29 60]
[30 59]
[31 58]
[32 57]
[33 56]
[34 55]
[35 54]
[36 53]
[37 52]
[38 51]
[39 50]
[65 109]
[66 108]
[67 107]
[68 106]
[71 103]
[72 102]
[73 101]
[74 100]
[76 98]
[77 97]
[78 96]
[79 95]
[80 94]
[81 93]
[82 92]
[83 91]
[84 90]
[85 89]
] def

init

% Start Annotations
8 129 0.0 0.6 colorpair
9 128 0.0 0.6 colorpair
10 127 0.0 1 colorpair
11 126 0.0 0.6 colorpair
14 123 0.0 1 colorpair
15 122 0.16 1 colorpair
16 121 0.0 0.6 colorpair
17 120 0.16 1 colorpair
20 117 0.0 1 colorpair
21 116 0.16 1 colorpair
25 64 0.0 1 colorpair
26 63 0.16 1 colorpair
28 61 0.0 0.6 colorpair
29 60 0.0 0.6 colorpair
30 59 0.0 0.6 colorpair
31 58 0.16 1 colorpair
32 57 0.0 1 colorpair
33 56 0.0 1 colorpair
34 55 0.0 0.6 colorpair
35 54 0.0 0.6 colorpair
36 53 0.16 1 colorpair
37 52 0.0 0.6 colorpair
38 51 0.16 1 colorpair
39 50 0.0 0.6 colorpair
65 109 0.16 1 colorpair
66 108 0.0 0.6 colorpair
67 107 0.0 0.6 colorpair
68 106 0.0 0.6 colorpair
71 103 0.0 1 colorpair
72 102 0.0 0.6 colorpair
73 101 0.16 1 colorpair
74 100 0.0 0.6 colorpair
76 98 0.0 0.6 colorpair
77 97 0.0 0.6 colorpair
78 96 0.0 1 colorpair
79 95 0.0 1 colorpair
80 94 0.0 0.6 colorpair
81 93 0.0 0.6 colorpair
82 92 0.0 1 colorpair
83 91 0.0 0.6 colorpair
84 90 0.0 0.6 colorpair
85 89 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
8 129 1 gmark
9 128 1 gmark
11 126 1 gmark
15 cmark
16 121 1 gmark
17 cmark
21 cmark
116 cmark
26 cmark
63 cmark
28 61 1 gmark
29 60 1 gmark
30 59 1 gmark
31 cmark
58 cmark
34 55 1 gmark
35 54 1 gmark
36 cmark
37 52 1 gmark
51 cmark
39 50 1 gmark
65 cmark
66 108 1 gmark
67 107 1 gmark
68 106 1 gmark
72 102 1 gmark
73 cmark
74 100 1 gmark
76 98 1 gmark
77 97 1 gmark
80 94 1 gmark
81 93 1 gmark
83 91 1 gmark
84 90 1 gmark

% End Annotations
showpage
end
%%EOF
