%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 09:38:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__GAAGCAGCAAAAGGCGAUGUUAAUCGCCCUGAUCGUCAUCUGUUUAACCGUCAUAGUGACGGCACUGGUAACGAGAAAAGACCUCUGCGAGGUACGAAUCCGAACCGGCCAGACGGAGGUCGCUGUCUUCACAGCUUACGAACCCGAG___\
) } def
/len { sequence length } bind def

/coor [
[135.63316345 230.26736450]
[138.11096191 224.29830933]
[142.20788574 219.24752808]
[136.53839111 205.36024475]
[130.86888123 191.47294617]
[125.19937897 177.58566284]
[119.38852692 163.75692749]
[113.43692780 149.98817444]
[107.48532867 136.21942139]
[101.53372192 122.45067596]
[94.48023224 119.90151215]
[89.38166046 134.00840759]
[75.27484894 128.90959167]
[80.37325287 114.80316925]
[73.31976318 112.25399780]
[59.94079971 119.03657532]
[46.56183624 125.81915283]
[33.18287659 132.60173035]
[19.80391312 139.38430786]
[6.42495155 146.16688538]
[7.23308897 161.37434387]
[1.77986622 175.59342957]
[-8.98991299 186.36059570]
[-23.21031952 191.81036377]
[-38.41757965 190.99851990]
[-51.97694778 184.06573486]
[-61.53918076 172.21316528]
[-65.44755554 157.49430847]
[-63.02493668 142.45933533]
[-54.69104767 129.71310425]
[-41.88978577 121.46401215]
[-26.83905220 119.14124298]
[-12.14647293 123.14723206]
[-0.35762700 132.78793335]
[13.02133560 126.00534821]
[26.40029716 119.22277069]
[39.77925873 112.44019318]
[53.15822220 105.65761566]
[66.53718567 98.87503815]
[67.60454559 91.45137787]
[52.61166000 90.98943329]
[37.61877441 90.52748871]
[22.95532036 93.68709564]
[11.98682117 83.45518494]
[14.12110329 68.60780334]
[27.52756500 61.87974167]
[40.70784378 69.04254913]
[55.22355652 72.82330322]
[69.73926544 76.60405731]
[70.80662537 69.18039703]
[59.88048172 58.90326691]
[48.95433426 48.62614059]
[38.02818680 38.34901810]
[27.10204124 28.07189178]
[11.08704090 27.12355804]
[1.96142745 13.92875862]
[6.72558975 -1.39058614]
[21.72487068 -7.08278561]
[35.45310593 1.21872795]
[37.37916565 17.14574432]
[48.30531311 27.42287064]
[59.23146057 37.69999695]
[70.15760803 47.97711945]
[81.08375549 58.25424576]
[76.42227173 43.99694824]
[71.76079559 29.73964691]
[67.09931946 15.48234653]
[69.36516571 0.65446973]
[76.50543213 -12.53706360]
[87.68113708 -22.54224396]
[101.57913208 -28.18545723]
[116.56639099 -28.80362701]
[130.88189697 -24.32411385]
[142.84359741 -15.27326679]
[151.04597473 -2.71456051]
[154.52523804 11.87635136]
[152.87258911 26.78503036]
[146.28219604 40.25970459]
[135.53012085 50.71594238]
[127.81297302 63.57850647]
[120.09581757 76.44107056]
[112.37866211 89.30363464]
[125.31774139 81.71547699]
[138.25682068 74.12731171]
[151.19590759 66.53915405]
[164.13497925 58.95099258]
[177.07406616 51.36283112]
[190.01315308 43.77467346]
[202.95222473 36.18651199]
[215.81324768 28.46677017]
[219.36633301 8.74898624]
[235.96743774 -1.91776729]
[254.79180908 2.89497590]
[267.06933594 -5.72259045]
[279.34686279 -14.34015751]
[286.19720459 -28.60140991]
[301.05960083 -29.58029175]
[313.33712769 -38.19785690]
[319.75643921 -53.28839874]
[336.06546021 -55.00551605]
[345.48681641 -41.58279037]
[338.32867432 -26.82836914]
[321.95468140 -25.92033577]
[309.67718506 -17.30276871]
[303.70498657 -3.65790367]
[287.96441650 -2.06263518]
[275.68688965 6.55493164]
[263.40936279 15.17249775]
[264.42959595 25.49049759]
[261.01834106 35.36741638]
[253.73582458 42.97373962]
[243.86569214 46.87072754]
[233.18920898 46.28226471]
[223.66375732 41.24837112]
[219.58558655 47.46643066]
[210.54039001 49.12559128]
[197.60130310 56.71375275]
[184.66223145 64.30191040]
[171.72314453 71.89007568]
[158.78407288 79.47823334]
[145.84498596 87.06639099]
[132.90589905 94.65455627]
[119.96681976 102.24271393]
[115.30247498 116.49907684]
[121.25407410 130.26782227]
[127.20567322 144.03657532]
[133.15727234 157.80532837]
[139.47253418 164.49006653]
[139.08666992 171.91616821]
[144.75616455 185.80345154]
[150.42567444 199.69073486]
[156.09516907 213.57801819]
[176.96888733 226.28536987]
[173.90359497 249.83059692]
[181.49176025 262.76968384]
[189.07992554 275.70877075]
[202.73535156 283.69873047]
[202.49955750 298.59149170]
[210.08770752 311.53054810]
[223.31597900 322.13476562]
[216.78813171 337.78161621]
[199.94569397 335.84033203]
[197.14863586 319.11871338]
[189.56047058 306.17962646]
[176.44779968 299.11514282]
[176.14083862 283.29690552]
[168.55267334 270.35784912]
[160.96452332 257.41876221]
[154.79396057 257.74035645]
[148.74682617 256.28628540]
[143.32679749 253.15390015]
[138.99201965 248.58139038]
[136.11637878 242.92970276]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 132]
[4 131]
[5 130]
[6 129]
[7 127]
[8 126]
[9 125]
[10 124]
[15 39]
[16 38]
[17 37]
[18 36]
[19 35]
[20 34]
[50 64]
[51 63]
[52 62]
[53 61]
[54 60]
[82 123]
[83 122]
[84 121]
[85 120]
[86 119]
[87 118]
[88 117]
[89 116]
[90 114]
[93 108]
[94 107]
[95 106]
[97 104]
[98 103]
[134 148]
[135 147]
[136 146]
[138 144]
[139 143]
] def

init

% Start Annotations
3 132 0.0 0.6 colorpair
4 131 0.0 0.6 colorpair
5 130 0.0 0.2 colorpair
6 129 0.16 0.6 colorpair
7 127 0.0 0.6 colorpair
8 126 0.0 0.2 colorpair
9 125 0.0 0.2 colorpair
10 124 0.0 1 colorpair
15 39 0.16 1 colorpair
16 38 0.0 1 colorpair
17 37 0.16 1 colorpair
18 36 0.0 1 colorpair
19 35 0.16 1 colorpair
20 34 0.0 0.2 colorpair
50 64 0.0 0.2 colorpair
51 63 0.0 0.2 colorpair
52 62 0.16 1 colorpair
53 61 0.16 0.2 colorpair
54 60 0.0 0.2 colorpair
82 123 0.16 0.2 colorpair
83 122 0.0 0.2 colorpair
84 121 0.0 0.2 colorpair
85 120 0.0 1 colorpair
86 119 0.0 1 colorpair
87 118 0.0 1 colorpair
88 117 0.0 1 colorpair
89 116 0.0 0.2 colorpair
90 114 0.32 1 colorpair
93 108 0.16 0.2 colorpair
94 107 0.0 0.2 colorpair
95 106 0.16 1 colorpair
97 104 0.0 1 colorpair
98 103 0.0 0.2 colorpair
134 148 0.16 0.6 colorpair
135 147 0.16 1 colorpair
136 146 0.0 1 colorpair
138 144 0.16 1 colorpair
139 143 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
3 132 1 gmark
4 131 1 gmark
5 130 2 gmark
6 129 1 gmark
129 cmark
7 127 1 gmark
8 126 2 gmark
9 125 2 gmark
39 cmark
17 cmark
37 cmark
19 cmark
20 34 2 gmark
50 64 2 gmark
51 63 2 gmark
52 cmark
62 cmark
53 61 2 gmark
53 cmark
61 cmark
54 60 2 gmark
82 123 2 gmark
123 cmark
83 122 2 gmark
84 121 2 gmark
89 116 2 gmark
90 cmark
114 cmark
93 108 2 gmark
108 cmark
94 107 2 gmark
106 cmark
98 103 2 gmark
134 148 1 gmark
134 cmark
148 cmark
135 cmark
147 cmark
138 cmark
144 cmark
139 143 2 gmark

% End Annotations
showpage
end
%%EOF
