%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 09:38:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
____________CCCUGAUCGUCAUCUGUUUCACCGUCAUAGUGACGGCACUGGUAACGAGAAAAGACCUCUGUGAGGUACGAAUCCGAACCGGCCAGACGGAGGUCGCUGUCUUCACGGCUUACGAAUCC___GAGUAAGAGCAACGGCG_GGGAGUAAUCCC_CGC_CACCUCACAGGUG_GCACAUAUCCUCAACGCACCCCUAUUUA\
) } def
/len { sequence length } bind def

/coor [
[32.80469513 313.98281860]
[17.81952667 314.64974976]
[2.92489529 312.87493896]
[-11.48398495 308.70550537]
[-25.02478600 302.25207520]
[-37.33821106 293.68588257]
[-48.09753418 283.23425293]
[-57.01726532 271.17446899]
[-63.86072922 257.82653809]
[-68.44633484 243.54464722]
[-70.65240479 228.70776367]
[-70.42041016 213.70954895]
[-67.75650787 198.94799805]
[-62.73137283 184.81477356]
[-55.47835159 171.68489075]
[-46.18989182 159.90675354]
[-35.11245728 149.79287720]
[-22.53998184 141.61163330]
[-8.80606270 135.58009338]
[5.72838449 131.85771179]
[-8.90256786 128.55085754]
[-23.53351974 125.24401093]
[-38.16447067 121.93716431]
[-41.55083084 127.39955139]
[-45.90566635 132.10606384]
[-51.06539154 135.88818359]
[-56.83774948 138.61193848]
[-63.00896835 140.18266296]
[-69.35167694 140.54826355]
[-75.63330078 139.70095825]
[-81.62455750 137.67735291]
[-87.10784912 134.55685425]
[-91.88516235 130.45861816]
[-95.78520966 125.53695679]
[-109.84650421 130.75997925]
[-123.90779877 135.98300171]
[-137.96908569 141.20602417]
[-152.03038025 146.42904663]
[-159.99479675 160.35557556]
[-175.87013245 162.66929626]
[-187.47819519 151.59535217]
[-185.91427612 135.62870789]
[-172.37806702 127.01760864]
[-157.25341797 132.36775208]
[-143.19212341 127.14473724]
[-129.13082886 121.92170715]
[-115.06952667 116.69868469]
[-101.00823212 111.47566223]
[-101.06094360 103.75963593]
[-99.30847931 96.24507904]
[-111.87237549 88.05065155]
[-124.43626404 79.85622406]
[-137.00015259 71.66179657]
[-149.56405640 63.46737289]
[-162.12794495 55.27294922]
[-174.88664246 57.16115952]
[-185.18228149 50.07797241]
[-187.80497742 38.26965332]
[-200.24606323 29.88995361]
[-209.11122131 27.69166183]
[-212.80815125 21.29276276]
[-225.12370300 12.72962570]
[-240.01306152 19.92063522]
[-256.40325928 18.62883759]
[-269.82803345 9.30123234]
[-276.67709351 -5.43843031]
[-275.16690063 -21.52703094]
[-287.60797119 -29.90673256]
[-300.04904175 -38.28643417]
[-312.49014282 -46.66613770]
[-324.93121338 -55.04583740]
[-341.44607544 -58.87944794]
[-342.33401489 -75.81012726]
[-326.31082153 -81.35027313]
[-316.55151367 -67.48692322]
[-304.11044312 -59.10722351]
[-291.66934204 -50.72751999]
[-279.22827148 -42.34782028]
[-266.78717041 -33.96811676]
[-254.93846130 -40.75881577]
[-241.25415039 -41.78699112]
[-228.40037537 -36.79516220]
[-218.90609741 -26.70429993]
[-214.66555786 -13.44449711]
[-216.56056213 0.41407898]
[-204.24501038 8.97721577]
[-191.86636353 17.44886780]
[-179.42527771 25.82856941]
[-161.87800598 26.09642029]
[-153.93351746 42.70905685]
[-141.36962891 50.90348053]
[-128.80572510 59.09790802]
[-116.24183655 67.29233551]
[-103.67794800 75.48675537]
[-91.11405182 83.68118286]
[-67.99767303 74.33718872]
[-44.76437759 83.96007538]
[-34.85762405 107.30621338]
[-20.22667122 110.61306000]
[-5.59571934 113.91990662]
[9.03523254 117.22676086]
[24.02041245 116.56012726]
[38.29993439 111.96717834]
[52.57945633 107.37422180]
[66.85897827 102.78126526]
[70.91079712 75.86702728]
[95.68987274 57.88431931]
[129.26565552 63.38359833]
[138.71697998 51.73574066]
[148.16830444 40.08788300]
[157.61961365 28.44002342]
[167.07093811 16.79216576]
[169.54708862 -1.45511234]
[186.16952515 -7.08301687]
[195.44720459 -18.86964798]
[204.72488403 -30.65628052]
[201.60287476 -43.75801086]
[206.52467346 -56.08579636]
[217.48545837 -63.22241974]
[230.36160278 -62.75029755]
[239.81292725 -74.39815521]
[249.26423645 -86.04601288]
[258.71554565 -97.69387054]
[252.61499023 -111.73102570]
[253.74815369 -126.99452972]
[261.85467529 -139.97694397]
[275.07171631 -147.69500732]
[290.36209106 -148.37515259]
[304.21221924 -141.86109924]
[313.43939209 -129.64973450]
[315.92333984 -114.54713440]
[311.09320068 -100.02375793]
[300.05892944 -89.41697693]
[285.35614014 -85.16415405]
[270.36340332 -88.24255371]
[260.91210938 -76.59469604]
[251.46078491 -64.94683838]
[242.00946045 -53.29898071]
[244.46385193 -36.66088104]
[233.91744995 -23.12941742]
[216.51150513 -21.37860107]
[207.23382568 -9.59196949]
[197.95614624 2.19466162]
[199.07508850 14.23886681]
[191.44284058 24.13432503]
[178.71879578 26.24348450]
[169.26747131 37.89134216]
[159.81616211 49.53919983]
[150.36483765 61.18705750]
[140.91351318 72.83491516]
[147.46466064 86.32871246]
[162.46301270 86.10643768]
[177.46136475 85.88416290]
[192.45971680 85.66188812]
[207.45806885 85.43961334]
[222.45642090 85.21733856]
[236.25032043 76.34826660]
[250.70219421 84.09909058]
[250.94520569 100.49643707]
[236.72935486 108.67211914]
[222.67869568 100.21569824]
[207.68034363 100.43797302]
[192.68199158 100.66024017]
[177.68363953 100.88251495]
[162.68528748 101.10478973]
[147.68693542 101.32706451]
[144.05570984 115.88090515]
[157.19172668 123.12278748]
[173.01252747 123.00958252]
[180.42274475 135.93003845]
[193.55876160 143.17192078]
[206.69479370 150.41380310]
[219.83081055 157.65568542]
[235.57965088 154.59727478]
[247.69609070 165.11256409]
[246.88545227 181.13511658]
[233.76957703 190.37380981]
[218.40985107 185.74150085]
[212.58892822 170.79170227]
[199.45291138 163.54981995]
[186.31687927 156.30793762]
[173.18086243 149.06605530]
[158.29963684 149.69725037]
[149.94984436 136.25881958]
[136.81382751 129.01692200]
[126.35358429 136.38874817]
[114.75169373 140.37350464]
[103.02682495 140.92700195]
[92.13120270 138.29335022]
[82.87361908 132.96470642]
[75.85942078 125.62170410]
[71.45193481 117.06079102]
[57.17241287 121.65374756]
[42.89289093 126.24669647]
[28.61336708 130.83964539]
[43.41748047 133.25587463]
[57.63291168 138.04353333]
[70.88245392 145.07556152]
[82.81455231 154.16539001]
[93.11259460 165.07183838]
[101.50332642 177.50547791]
[107.76410675 191.13642883]
[111.72881317 205.60298157]
[113.29225159 220.52127075]
[112.41291809 235.49548340]
[109.11416626 250.12826538]
[103.48351288 264.03134155]
[95.67037201 276.83581543]
[85.88204956 288.20196533]
[74.37828064 297.82812500]
[61.46430206 305.45892334]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[20 101]
[21 100]
[22 99]
[23 98]
[34 48]
[35 47]
[36 46]
[37 45]
[38 44]
[50 95]
[51 94]
[52 93]
[53 92]
[54 91]
[55 90]
[58 88]
[59 87]
[61 86]
[62 85]
[67 79]
[68 78]
[69 77]
[70 76]
[71 75]
[102 195]
[103 194]
[104 193]
[105 192]
[108 150]
[109 149]
[110 148]
[111 147]
[112 146]
[114 143]
[115 142]
[116 141]
[120 138]
[121 137]
[122 136]
[123 135]
[151 166]
[152 165]
[153 164]
[154 163]
[155 162]
[156 161]
[167 185]
[168 184]
[170 182]
[171 181]
[172 180]
[173 179]
] def

init

% Start Annotations
20 101 0.0 1 colorpair
21 100 0.0 0.6 colorpair
22 99 0.0 1 colorpair
23 98 0.16 1 colorpair
34 48 0.0 0.6 colorpair
35 47 0.0 0.6 colorpair
36 46 0.16 1 colorpair
37 45 0.16 0.6 colorpair
38 44 0.0 0.6 colorpair
50 95 0.16 0.6 colorpair
51 94 0.0 1 colorpair
52 93 0.0 1 colorpair
53 92 0.16 0.6 colorpair
54 91 0.0 0.6 colorpair
55 90 0.16 1 colorpair
58 88 0.0 1 colorpair
59 87 0.0 0.6 colorpair
61 86 0.0 1 colorpair
62 85 0.16 1 colorpair
67 79 0.0 0.6 colorpair
68 78 0.16 1 colorpair
69 77 0.0 0.6 colorpair
70 76 0.0 1 colorpair
71 75 0.0 1 colorpair
102 195 0.0 1 colorpair
103 194 0.0 1 colorpair
104 193 0.16 1 colorpair
105 192 0.16 1 colorpair
108 150 0.0 1 colorpair
109 149 0.0 1 colorpair
110 148 0.0 0.6 colorpair
111 147 0.0 1 colorpair
112 146 0.16 0.6 colorpair
114 143 0.16 1 colorpair
115 142 0.16 1 colorpair
116 141 0.0 1 colorpair
120 138 0.0 1 colorpair
121 137 0.0 1 colorpair
122 136 0.16 1 colorpair
123 135 0.16 1 colorpair
151 166 0.0 0.6 colorpair
152 165 0.0 0.2 colorpair
153 164 0.0 1 colorpair
154 163 0.0 1 colorpair
155 162 0.0 1 colorpair
156 161 0.0 1 colorpair
167 185 0.16 1 colorpair
168 184 0.0 0.6 colorpair
170 182 0.16 1 colorpair
171 181 0.0 0.6 colorpair
172 180 0.16 1 colorpair
173 179 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
21 100 1 gmark
23 cmark
98 cmark
34 48 1 gmark
35 47 1 gmark
36 cmark
46 cmark
37 45 1 gmark
37 cmark
45 cmark
38 44 1 gmark
50 95 1 gmark
50 cmark
95 cmark
53 92 1 gmark
92 cmark
54 91 1 gmark
90 cmark
59 87 1 gmark
62 cmark
67 79 1 gmark
68 cmark
78 cmark
69 77 1 gmark
193 cmark
192 cmark
110 148 1 gmark
112 146 1 gmark
112 cmark
146 cmark
114 cmark
142 cmark
122 cmark
136 cmark
135 cmark
151 166 1 gmark
152 165 2 gmark
185 cmark
168 184 1 gmark
170 cmark
182 cmark
171 181 1 gmark
172 cmark
173 179 1 gmark
173 cmark

% End Annotations
showpage
end
%%EOF
