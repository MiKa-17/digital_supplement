%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 06:15:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
________GCCAUUAAAAACUGCGUUAGGCAUCGUCUUUAUUGUUUGCCUGACGAUAGUGAUCUUUACCUUUAUUACUCGCGGCAGGCUCUGCGAGUUUUCAAUAAAGAGUGAGCAUCAGGAGGUGGCGGCUAAAUUAGCCUGCAACCCAG_____\
) } def
/len { sequence length } bind def

/coor [
[59.94863129 278.10952759]
[45.02777481 276.57067871]
[30.68184280 272.18957520]
[17.44701195 265.12988281]
[5.81792259 255.65547180]
[-3.77079630 244.12045288]
[-10.96077251 230.95594788]
[-15.48328590 216.65396118]
[-17.16930962 201.74902344]
[-15.95583057 186.79818726]
[-11.88820171 172.36022949]
[-5.11844683 158.97477722]
[4.10041809 147.14208984]
[15.42384434 137.30441284]
[28.42862701 129.82940674]
[42.62871933 124.99645996]
[57.49858093 122.98600006]
[70.58971405 115.66327667]
[83.68083954 108.34055328]
[68.68159485 108.49062347]
[53.68234253 108.64070129]
[38.68309402 108.79077148]
[23.68609619 109.09090424]
[8.69285297 109.54106903]
[-6.30039072 109.99122620]
[-21.29363441 110.44139099]
[-36.28687668 110.89154816]
[-51.28012085 111.34171295]
[-66.27336884 111.79187012]
[-81.26660919 112.24202728]
[-96.25984955 112.69219208]
[-101.62017822 126.91665649]
[-112.01959229 138.00361633]
[-125.87225342 144.26239014]
[-141.06571960 144.73857117]
[-155.28312683 139.35952759]
[-166.35639954 128.94554138]
[-172.59693909 115.08466339]
[-173.05313110 99.89057922]
[-167.65539551 85.68026733]
[-157.22685242 74.62070465]
[-143.35778809 68.39839172]
[-128.16310120 67.96218872]
[-113.95990753 73.37861633]
[-102.91407776 83.82170105]
[-96.71001434 97.69894409]
[-81.71676636 97.24878693]
[-66.72352600 96.79862976]
[-51.73028183 96.34846497]
[-36.73703766 95.89830780]
[-21.74379539 95.44814301]
[-6.75055122 94.99798584]
[8.24269199 94.54782104]
[23.23593521 94.09766388]
[29.86449623 90.73461151]
[38.53302002 93.79152679]
[53.53226852 93.64144897]
[68.53151703 93.49137878]
[83.53076935 93.34130096]
[70.34123993 86.19733429]
[65.34710693 72.05313110]
[71.12686157 58.21136093]
[84.69639587 51.81857300]
[99.04972839 56.17537689]
[106.77620697 69.03234100]
[103.88554382 83.75312042]
[113.55287933 72.28392029]
[123.22021484 60.81472015]
[132.88755798 49.34552002]
[142.55488586 37.87631989]
[152.22222900 26.40711784]
[161.88957214 14.93791580]
[155.04057312 -3.66055369]
[159.48306274 -22.85549355]
[173.63751221 -36.39175415]
[192.78115845 -39.93061066]
[197.50196838 -54.16837311]
[202.22277832 -68.40614319]
[206.94358826 -82.64390564]
[211.66439819 -96.88166809]
[216.38520813 -111.11943817]
[221.10601807 -125.35720062]
[225.82682800 -139.59497070]
[218.51339722 -153.60528564]
[223.32844543 -168.65821838]
[237.41531372 -175.82312012]
[252.41648865 -170.84919739]
[259.43206787 -156.68736267]
[254.29980469 -141.73960876]
[240.06459045 -134.87416077]
[235.34378052 -120.63639069]
[230.62297058 -106.39862823]
[225.90217590 -92.16085815]
[221.18136597 -77.92309570]
[216.46055603 -63.68532944]
[211.73974609 -49.44756699]
[207.01893616 -35.20980072]
[211.86587524 -31.66298866]
[216.01138306 -27.31700134]
[229.51660156 -33.84456635]
[243.02180481 -40.37213516]
[256.52703857 -46.89970016]
[259.14324951 -62.19463348]
[270.27343750 -73.00659943]
[285.63778687 -75.17817688]
[299.32843018 -67.87434387]
[306.08102417 -53.90357971]
[303.29904175 -38.63792419]
[292.05221558 -27.94733620]
[276.66519165 -25.94256401]
[263.05459595 -33.39448166]
[249.54937744 -26.86691666]
[236.04415894 -20.33935165]
[222.53894043 -13.81178474]
[223.15100098 -0.98141372]
[218.94125366 11.20870209]
[210.47468567 21.00520515]
[198.93144226 26.98403168]
[185.94241333 28.25736237]
[173.35876465 24.60525513]
[163.69143677 36.07445526]
[154.02409363 47.54365540]
[144.35675049 59.01285934]
[134.68942261 70.48205566]
[125.02207947 81.95126343]
[115.35474396 93.42046356]
[116.55406952 108.37243652]
[127.92597198 118.15403748]
[139.39517212 127.82138062]
[150.96052551 137.37348938]
[162.52587891 146.92558289]
[174.09121704 156.47769165]
[185.65657043 166.02980042]
[201.71925354 171.45440674]
[200.95324707 188.39103699]
[184.46644592 192.34349060]
[176.10446167 177.59515381]
[164.53910828 168.04304504]
[152.97377014 158.49093628]
[141.40841675 148.93882751]
[129.84306335 139.38673401]
[122.64281464 137.54168701]
[118.14437103 129.52593994]
[106.77246857 119.74434662]
[112.06270599 133.78048706]
[117.35294342 147.81663513]
[126.43019867 159.75830078]
[133.04003906 173.22344971]
[136.93539429 187.70881653]
[137.97068787 202.67304993]
[136.10723877 217.55685425]
[131.41468811 231.80395508]
[124.06840515 244.88188171]
[114.34296417 256.30184937]
[102.60184479 265.63705444]
[89.28385925 272.53860474]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 59]
[20 58]
[21 57]
[22 56]
[23 54]
[24 53]
[25 52]
[26 51]
[27 50]
[28 49]
[29 48]
[30 47]
[31 46]
[66 126]
[67 125]
[68 124]
[69 123]
[70 122]
[71 121]
[72 120]
[76 97]
[77 96]
[78 95]
[79 94]
[80 93]
[81 92]
[82 91]
[83 90]
[99 114]
[100 113]
[101 112]
[102 111]
[127 144]
[128 143]
[129 141]
[130 140]
[131 139]
[132 138]
[133 137]
] def

init

% Start Annotations
19 59 0.0 0.2 colorpair
20 58 0.0 0.2 colorpair
21 57 0.16 1 colorpair
22 56 0.0 0.2 colorpair
23 54 0.16 1 colorpair
24 53 0.0 1 colorpair
25 52 0.0 0.2 colorpair
26 51 0.0 0.2 colorpair
27 50 0.0 0.2 colorpair
28 49 0.0 0.2 colorpair
29 48 0.16 1 colorpair
30 47 0.0 0.2 colorpair
31 46 0.0 0.2 colorpair
66 126 0.16 1 colorpair
67 125 0.0 1 colorpair
68 124 0.0 1 colorpair
69 123 0.16 1 colorpair
70 122 0.0 1 colorpair
71 121 0.0 0.2 colorpair
72 120 0.16 1 colorpair
76 97 0.0 0.2 colorpair
77 96 0.0 0.2 colorpair
78 95 0.0 0.2 colorpair
79 94 0.0 1 colorpair
80 93 0.0 1 colorpair
81 92 0.0 0.2 colorpair
82 91 0.16 1 colorpair
83 90 0.0 0.2 colorpair
99 114 0.32 1 colorpair
100 113 0.0 0.2 colorpair
101 112 0.0 0.2 colorpair
102 111 0.16 1 colorpair
127 144 0.0 1 colorpair
128 143 0.0 0.2 colorpair
129 141 0.16 1 colorpair
130 140 0.0 1 colorpair
131 139 0.0 1 colorpair
132 138 0.16 1 colorpair
133 137 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
19 59 2 gmark
20 58 2 gmark
21 cmark
57 cmark
22 56 2 gmark
23 cmark
54 cmark
25 52 2 gmark
26 51 2 gmark
27 50 2 gmark
28 49 2 gmark
48 cmark
30 47 2 gmark
31 46 2 gmark
66 cmark
69 cmark
71 121 2 gmark
72 cmark
76 97 2 gmark
77 96 2 gmark
78 95 2 gmark
81 92 2 gmark
82 cmark
83 90 2 gmark
99 cmark
114 cmark
100 113 2 gmark
101 112 2 gmark
102 cmark
111 cmark
128 143 2 gmark
141 cmark
138 cmark
133 137 2 gmark

% End Annotations
showpage
end
%%EOF
