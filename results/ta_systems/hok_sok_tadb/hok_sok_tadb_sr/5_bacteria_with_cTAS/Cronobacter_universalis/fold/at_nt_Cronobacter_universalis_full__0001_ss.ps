%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 06:10:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
C_CUUAUCUGGUGCGUAUUAAUGAUAUGUAUAACAUUAUUAAUGUUCACAUUCCUGACACGUCAAUCGCUGUGCGAACUGAGGCUGAAGGACGGGCAAAGGGAAGUUGCUGCGUUUCUGGCUUACGAAUCCGGUAAGUAGCAACCUGUCGGGCGGGGGAAACCCCGCUCUUUCAGG___GGC__GGCUG_AUGU_G_U_AG_____GCAAGCG_CUU_____________\
) } def
/len { sequence length } bind def

/coor [
[69.92282867 256.35534668]
[73.51126099 241.77870178]
[78.48980713 227.61643982]
[84.81198120 214.00079346]
[92.41875458 201.05891418]
[101.23910522 188.91160583]
[111.19068146 177.67231750]
[122.18054962 167.44596863]
[113.06937408 155.53016663]
[103.95819855 143.61434937]
[89.00811005 142.39170837]
[78.08196259 152.66883850]
[67.15581512 162.94596863]
[62.40478134 178.03697205]
[47.83296204 181.12101746]
[36.90681458 191.39814758]
[25.98066902 201.67527771]
[15.05452251 211.95240784]
[4.12837505 222.22952271]
[-6.79777145 232.50665283]
[-17.72391891 242.78378296]
[-28.65006638 253.06089783]
[-39.57621384 263.33804321]
[-50.50236130 273.61514282]
[-61.42850494 283.89227295]
[-58.51089859 299.04125977]
[-64.26780701 313.35421753]
[-76.86222076 322.26400757]
[-92.27530670 322.92752075]
[-105.58881378 315.13302612]
[-112.55443573 301.36773682]
[-110.94948578 286.02407837]
[-101.28607941 273.99816895]
[-86.64778900 269.12744141]
[-71.70563507 272.96612549]
[-60.77948380 262.68899536]
[-49.85333633 252.41188049]
[-38.92719269 242.13475037]
[-28.00104523 231.85763550]
[-17.07489777 221.58050537]
[-6.14875031 211.30337524]
[4.77739668 201.02626038]
[15.70354366 190.74913025]
[26.62969017 180.47200012]
[37.55583572 170.19487000]
[41.52536011 155.83897400]
[56.87868881 152.01982117]
[67.80483246 141.74269104]
[78.73097992 131.46556091]
[65.60339355 119.22383881]
[59.20899582 101.75039673]
[61.48624420 82.62168121]
[47.52313614 77.14156342]
[33.56003189 71.66145325]
[19.59692383 66.18133545]
[6.54472351 74.36340332]
[-8.64507103 73.30342865]
[-20.16186523 63.61697006]
[-23.72388077 49.17917252]
[-37.68698883 43.69905853]
[-53.35995865 45.85973740]
[-62.38068771 34.00749207]
[-76.34379578 28.52737808]
[-90.30690002 23.04726219]
[-104.30694580 17.66222191]
[-118.34329224 12.37250519]
[-132.37963867 7.08278894]
[-146.41596985 1.79307210]
[-160.45231628 -3.49664450]
[-177.40611267 -3.42437983]
[-182.16882324 -19.69560814]
[-167.85194397 -28.77652168]
[-155.16259766 -17.53298569]
[-141.12625122 -12.24326992]
[-127.08992004 -6.95355320]
[-113.05357361 -1.66383672]
[-99.01723480 3.62588000]
[-91.66013336 3.04427719]
[-84.82678223 9.08415604]
[-70.86367798 14.56427193]
[-56.90057373 20.04438782]
[-42.22633743 17.49173164]
[-32.20687103 29.73595047]
[-18.24376488 35.21606445]
[-5.81242609 27.05519676]
[9.21844482 27.78793144]
[21.07431984 37.34259796]
[25.07703972 52.21822739]
[39.04014587 57.69834518]
[53.00325012 63.17845917]
[66.96635437 68.65857697]
[73.63262177 65.22187805]
[64.00614929 53.71835327]
[54.37968063 42.21482849]
[43.01586914 32.42382431]
[41.84936142 17.46925163]
[51.55750275 6.03456736]
[66.50320435 4.75938511]
[78.00815582 14.38414764]
[79.39196777 29.32009888]
[83.17856598 43.83428955]
[86.96515656 58.34848022]
[93.63142395 54.91178131]
[97.26684570 40.35898972]
[100.90227509 25.80620003]
[104.53769684 11.25341129]
[108.17312622 -3.29937792]
[111.80854797 -17.85216713]
[115.44397736 -32.40495682]
[119.07940674 -46.95774460]
[122.71482849 -61.51053619]
[126.35025787 -76.06332397]
[125.39405060 -85.13307953]
[130.13534546 -90.78863525]
[133.96833801 -105.29063416]
[130.01432800 -120.60978699]
[140.74699402 -130.93737793]
[144.57998657 -145.43937683]
[148.41299438 -159.94137573]
[152.24600220 -174.44338989]
[141.75424194 -185.75386047]
[139.06542969 -200.94509888]
[145.03752136 -215.16963196]
[157.76487732 -223.88847351]
[173.18621826 -224.31947327]
[186.38066101 -216.32508850]
[193.13790894 -202.45629883]
[191.30174255 -187.13859558]
[181.45808411 -175.25979614]
[166.74800110 -170.61038208]
[162.91499329 -156.10838318]
[159.08200073 -141.60636902]
[155.24899292 -127.10437012]
[159.47717285 -112.82250214]
[148.47035217 -101.45763397]
[144.63734436 -86.95562744]
[140.90304565 -72.42790222]
[137.26762390 -57.87511063]
[133.63218689 -43.32231903]
[129.99676514 -28.76953125]
[126.36134338 -14.21674156]
[122.72591400 0.33604825]
[119.09049225 14.88883781]
[115.45506287 29.44162750]
[111.81963348 43.99441528]
[108.18421173 58.54720688]
[115.12862396 63.01087189]
[120.69516754 68.51951599]
[124.75560760 74.71768188]
[127.26521301 81.24224854]
[141.22831726 75.76213074]
[155.19142151 70.28201294]
[169.15454102 64.80190277]
[183.11764526 59.32178497]
[197.08074951 53.84166718]
[211.04385376 48.36155319]
[225.00695801 42.88143921]
[234.80305481 29.72968864]
[251.05715942 31.90596390]
[257.04843140 47.17150116]
[246.61358643 59.82242203]
[230.48707581 56.84454346]
[216.52397156 62.32465744]
[202.56086731 67.80477142]
[188.59774780 73.28488922]
[174.63464355 78.76500702]
[160.67153931 84.24511719]
[146.70843506 89.72523499]
[132.74533081 95.20535278]
[133.78652954 106.00362396]
[131.23591614 116.94698334]
[125.12162781 126.83431244]
[115.87400055 134.50317383]
[124.98518372 146.41897583]
[134.09635925 158.33479309]
[146.84565735 150.40945435]
[160.30035400 143.75163269]
[174.33482361 138.42346191]
[188.81800842 134.47471619]
[203.61470032 131.94224548]
[218.58674622 130.84970093]
[233.59432983 131.20727539]
[248.49734497 133.01165771]
[263.15661621 136.24597168]
[277.43533325 140.88002014]
[291.20010376 146.87055969]
[304.32241821 154.16163635]
[316.67980957 162.68516541]
[328.15686035 172.36158752]
[338.64639282 183.10054016]
[348.05047607 194.80175781]
[356.28134155 207.35598755]
[363.26208496 220.64601135]
[368.92755127 234.54772949]
[373.22485352 248.93136597]
[376.11386108 263.66259766]
[377.56756592 278.60388184]
[377.57244873 293.61572266]
[376.12844849 308.55795288]
[373.24902344 323.29107666]
[368.96105957 337.67749023]
[363.30462646 351.58288574]
[356.33251953 364.87744141]
[348.10983276 377.43701172]
[338.71334839 389.14434814]
[328.23080444 399.89013672]
[316.76004028 409.57400513]
[304.40820312 418.10556030]
[291.29061890 425.40518188]
[277.52972412 431.40466309]
[263.25405884 436.04800415]
[248.59687805 439.29183960]
[233.69503784 441.10589600]
[218.68769836 441.47323608]
[203.71495056 440.39041138]
[188.91661072 437.86755371]
[174.43086243 433.92822266]
[160.39292908 428.60919189]
[146.93391418 421.96011353]
[134.17945862 414.04306030]
[122.24867249 404.93197632]
[111.25292969 394.71194458]
[101.29491425 383.47836304]
[92.46759796 371.33612061]
[84.85340118 358.39859009]
[78.52341461 344.78659058]
[73.53674316 330.62719727]
[69.93994904 316.05261230]
[67.76661682 301.19891357]
[67.03703308 286.20480347]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 175]
[9 174]
[10 173]
[11 49]
[12 48]
[13 47]
[15 45]
[16 44]
[17 43]
[18 42]
[19 41]
[20 40]
[21 39]
[22 38]
[23 37]
[24 36]
[25 35]
[52 91]
[53 90]
[54 89]
[55 88]
[59 84]
[60 83]
[62 81]
[63 80]
[64 79]
[65 77]
[66 76]
[67 75]
[68 74]
[69 73]
[103 146]
[104 145]
[105 144]
[106 143]
[107 142]
[108 141]
[109 140]
[110 139]
[111 138]
[112 137]
[114 136]
[115 135]
[117 133]
[118 132]
[119 131]
[120 130]
[150 169]
[151 168]
[152 167]
[153 166]
[154 165]
[155 164]
[156 163]
[157 162]
] def

init

% Start Annotations
8 175 0.0 0.6 colorpair
9 174 0.0 1 colorpair
10 173 0.0 0.6 colorpair
11 49 0.0 1 colorpair
12 48 0.0 1 colorpair
13 47 0.0 1 colorpair
15 45 0.16 1 colorpair
16 44 0.16 1 colorpair
17 43 0.0 0.6 colorpair
18 42 0.0 0.6 colorpair
19 41 0.0 1 colorpair
20 40 0.0 0.6 colorpair
21 39 0.0 1 colorpair
22 38 0.16 1 colorpair
23 37 0.0 0.2 colorpair
24 36 0.16 0.6 colorpair
25 35 0.16 0.6 colorpair
52 91 0.16 1 colorpair
53 90 0.16 1 colorpair
54 89 0.0 1 colorpair
55 88 0.16 1 colorpair
59 84 0.16 1 colorpair
60 83 0.0 0.2 colorpair
62 81 0.16 0.6 colorpair
63 80 0.16 0.6 colorpair
64 79 0.0 1 colorpair
65 77 0.0 0.2 colorpair
66 76 0.0 0.6 colorpair
67 75 0.0 1 colorpair
68 74 0.0 1 colorpair
69 73 0.0 1 colorpair
103 146 0.0 1 colorpair
104 145 0.0 0.2 colorpair
105 144 0.0 0.2 colorpair
106 143 0.32 1 colorpair
107 142 0.0 0.2 colorpair
108 141 0.0 0.6 colorpair
109 140 0.16 1 colorpair
110 139 0.0 0.6 colorpair
111 138 0.0 1 colorpair
112 137 0.0 1 colorpair
114 136 0.0 1 colorpair
115 135 0.16 1 colorpair
117 133 0.0 1 colorpair
118 132 0.16 1 colorpair
119 131 0.0 1 colorpair
120 130 0.0 1 colorpair
150 169 0.16 0.6 colorpair
151 168 0.32 1 colorpair
152 167 0.0 1 colorpair
153 166 0.0 0.6 colorpair
154 165 0.0 1 colorpair
155 164 0.0 1 colorpair
156 163 0.0 0.6 colorpair
157 162 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
8 175 1 gmark
10 173 1 gmark
15 cmark
44 cmark
17 43 1 gmark
18 42 1 gmark
20 40 1 gmark
38 cmark
23 37 2 gmark
24 36 1 gmark
24 cmark
36 cmark
25 35 1 gmark
35 cmark
52 cmark
91 cmark
53 cmark
88 cmark
59 cmark
84 cmark
60 83 2 gmark
62 81 1 gmark
62 cmark
81 cmark
63 80 1 gmark
63 cmark
80 cmark
65 77 2 gmark
66 76 1 gmark
104 145 2 gmark
105 144 2 gmark
106 cmark
143 cmark
107 142 2 gmark
108 141 1 gmark
109 cmark
140 cmark
110 139 1 gmark
115 cmark
135 cmark
132 cmark
150 169 1 gmark
169 cmark
151 cmark
168 cmark
153 166 1 gmark
156 163 1 gmark

% End Annotations
showpage
end
%%EOF
