%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 09:39:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__GAUGCCGCAAAAAACGGUGAUUUACGGAUUAAUAAUCAUCUGUUUAACGCUACUGACCUUUACCAGAAUCACACAUGGAUAGCUGUGUGAGAUACAAAUUAAAAACGGAAAAAAAGAGGUUGCCGCGGUCUUAAACUACGAAGAUAAACGG\
) } def
/len { sequence length } bind def

/coor [
[93.10078430 256.75128174]
[96.25215912 242.03851318]
[102.13124084 228.18814087]
[110.52550507 215.70082092]
[121.13150787 205.02799988]
[133.56584167 196.55546570]
[127.61423492 182.78671265]
[115.46219635 174.17408752]
[117.08885193 158.43673706]
[111.13725281 144.66798401]
[105.18565369 130.89923096]
[97.33498383 131.21780396]
[89.65190887 129.57313538]
[82.61961365 126.06867218]
[76.68033600 120.92478943]
[63.44251633 127.97887421]
[50.20469284 135.03294373]
[36.96686935 142.08703613]
[23.72904396 149.14111328]
[10.49122047 156.19519043]
[-2.74660277 163.24926758]
[-3.18850517 178.60179138]
[-11.26112747 191.66810608]
[-24.79297447 198.93341064]
[-40.14404678 198.44338989]
[-53.18498611 190.32984924]
[-60.40784073 176.77529907]
[-59.86970139 161.42582703]
[-51.71532440 148.41038513]
[-38.13819885 141.23005676]
[-22.79049873 141.81631470]
[-9.80068111 150.01144409]
[3.43714213 142.95736694]
[16.67496490 135.90328979]
[29.91279030 128.84921265]
[43.15061188 121.79512787]
[56.38843536 114.74105072]
[69.62625885 107.68696594]
[70.24514771 90.18662262]
[80.15874481 75.75173950]
[96.27027130 68.89143372]
[98.10169220 54.00365829]
[99.93310547 39.11588287]
[101.76451874 24.22810364]
[103.59593201 9.34032631]
[105.42734528 -5.54745102]
[107.25876617 -20.43522835]
[109.09017944 -35.32300568]
[110.92159271 -50.21078491]
[112.75300598 -65.09856415]
[106.75851440 -79.74016571]
[115.99185944 -91.42754364]
[117.82327271 -106.31531525]
[110.22867584 -123.05979919]
[121.26256561 -136.67301941]
[122.78990936 -151.59506226]
[124.31725311 -166.51708984]
[125.84460449 -181.43913269]
[127.37194824 -196.36117554]
[128.89929199 -211.28320312]
[130.42663574 -226.20524597]
[124.13472748 -240.72152710]
[133.12774658 -252.59481812]
[134.65509033 -267.51684570]
[136.18243408 -282.43890381]
[137.70977783 -297.36093140]
[139.23712158 -312.28295898]
[126.72706604 -304.00656128]
[111.99234009 -306.81509399]
[103.40387726 -319.11300659]
[105.84085846 -333.91369629]
[117.91882324 -342.80880737]
[132.77615356 -340.74490356]
[141.97238159 -328.89413452]
[145.31019592 -343.51803589]
[148.64801025 -358.14196777]
[151.98582458 -372.76586914]
[155.32363892 -387.38980103]
[158.66145325 -402.01370239]
[161.99926758 -416.63763428]
[156.65112305 -432.14019775]
[167.60549927 -444.34402466]
[183.59349060 -440.69488525]
[188.16799927 -424.94665527]
[176.62318420 -413.29983521]
[173.28536987 -398.67590332]
[169.94755554 -384.05197144]
[166.60974121 -369.42807007]
[163.27192688 -354.80413818]
[159.93411255 -340.18023682]
[156.59629822 -325.55630493]
[154.15914917 -310.75561523]
[152.63180542 -295.83358765]
[151.10446167 -280.91156006]
[149.57711792 -265.98950195]
[148.04977417 -251.06747437]
[154.45092773 -237.61851501]
[145.34867859 -224.67790222]
[143.82133484 -209.75585938]
[142.29399109 -194.83383179]
[140.76663208 -179.91178894]
[139.23928833 -164.98974609]
[137.71194458 -150.06770325]
[136.18460083 -135.14567566]
[143.59167480 -125.53446198]
[142.40188599 -113.05518341]
[132.71104431 -104.48390198]
[130.87963867 -89.59612274]
[137.00512695 -76.01939392]
[127.64078522 -63.26714706]
[125.80937195 -48.37936783]
[123.97795868 -33.49159241]
[122.14653778 -18.60381317]
[120.31512451 -3.71603608]
[118.48371124 11.17174149]
[116.65229797 26.05951881]
[114.82088470 40.94729614]
[112.98946381 55.83507538]
[111.15805054 70.72285461]
[124.46576691 80.42757416]
[131.01243591 95.54108429]
[128.98892212 111.88679504]
[118.95439911 124.94763184]
[124.90599823 138.71638489]
[130.85760498 152.48512268]
[143.43533325 162.08258057]
[141.38298035 176.83511353]
[147.33457947 190.60386658]
[162.02534485 187.35145569]
[177.06614685 186.93835449]
[191.91328430 189.37945557]
[206.03004456 194.58654785]
[218.90609741 202.37138367]
[230.07600403 212.45254517]
[239.13595581 224.46559143]
[245.75846863 237.97628784]
[249.70411682 252.49621582]
[250.83029175 267.50048828]
[249.09626770 282.44671631]
[244.56472778 296.79458618]
[237.39949036 310.02548218]
[227.85955811 321.66104126]
[216.28982544 331.28067017]
[203.10850525 338.53668213]
[188.79209900 343.16668701]
[173.85815430 345.00338745]
[158.84648132 343.98034668]
[144.29978943 340.13455200]
[130.74391174 333.60504150]
[118.66887665 324.62783813]
[108.51119995 313.52746582]
[100.63807678 300.70520020]
[95.33410645 286.62457275]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 128]
[7 127]
[9 125]
[10 124]
[11 123]
[15 38]
[16 37]
[17 36]
[18 35]
[19 34]
[20 33]
[21 32]
[41 119]
[42 118]
[43 117]
[44 116]
[45 115]
[46 114]
[47 113]
[48 112]
[49 111]
[50 110]
[52 108]
[53 107]
[55 104]
[56 103]
[57 102]
[58 101]
[59 100]
[60 99]
[61 98]
[63 96]
[64 95]
[65 94]
[66 93]
[67 92]
[74 91]
[75 90]
[76 89]
[77 88]
[78 87]
[79 86]
[80 85]
] def

init

% Start Annotations
6 128 0.0 1 colorpair
7 127 0.16 1 colorpair
9 125 0.0 0.6 colorpair
10 124 0.0 1 colorpair
11 123 0.16 0.6 colorpair
15 38 0.16 1 colorpair
16 37 0.0 0.2 colorpair
17 36 0.16 1 colorpair
18 35 0.0 0.6 colorpair
19 34 0.16 1 colorpair
20 33 0.0 1 colorpair
21 32 0.0 0.6 colorpair
41 119 0.0 1 colorpair
42 118 0.0 0.2 colorpair
43 117 0.0 1 colorpair
44 116 0.0 0.2 colorpair
45 115 0.0 1 colorpair
46 114 0.0 0.2 colorpair
47 113 0.0 1 colorpair
48 112 0.0 0.2 colorpair
49 111 0.0 0.2 colorpair
50 110 0.0 1 colorpair
52 108 0.0 0.2 colorpair
53 107 0.0 1 colorpair
55 104 0.0 0.2 colorpair
56 103 0.0 1 colorpair
57 102 0.16 0.6 colorpair
58 101 0.16 1 colorpair
59 100 0.0 0.2 colorpair
60 99 0.16 0.2 colorpair
61 98 0.16 1 colorpair
63 96 0.0 0.6 colorpair
64 95 0.0 1 colorpair
65 94 0.0 0.2 colorpair
66 93 0.16 1 colorpair
67 92 0.0 0.2 colorpair
74 91 0.16 1 colorpair
75 90 0.0 0.6 colorpair
76 89 0.0 1 colorpair
77 88 0.16 1 colorpair
78 87 0.0 0.6 colorpair
79 86 0.0 1 colorpair
80 85 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
7 cmark
9 125 1 gmark
11 123 1 gmark
11 cmark
15 cmark
16 37 2 gmark
17 cmark
36 cmark
18 35 1 gmark
19 cmark
34 cmark
21 32 1 gmark
42 118 2 gmark
44 116 2 gmark
46 114 2 gmark
48 112 2 gmark
49 111 2 gmark
52 108 2 gmark
55 104 2 gmark
57 102 1 gmark
102 cmark
58 cmark
59 100 2 gmark
60 99 2 gmark
99 cmark
98 cmark
63 96 1 gmark
65 94 2 gmark
66 cmark
93 cmark
67 92 2 gmark
74 cmark
75 90 1 gmark
77 cmark
78 87 1 gmark

% End Annotations
showpage
end
%%EOF
