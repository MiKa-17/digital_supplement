%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 09:54:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGAGACUAUCCUUAUGGUGUUCAGGCAUAGAGGUGGCCUCACUUUGAUUUAUCAUCAGGUGGGGCUUUUCUCUGUCUGCCUUUUGGUAAAUACCUGAGACAAACAGUCUCAAGCACC\
) } def
/len { sequence length } bind def

/coor [
[64.31788635 225.09504700]
[57.21475983 238.30661011]
[50.11162949 251.51817322]
[43.00849915 264.72973633]
[35.90536880 277.94131470]
[42.76421356 291.86022949]
[40.09864044 307.14663696]
[28.93361092 317.92260742]
[13.56230927 320.04458618]
[-0.10468417 312.69659424]
[-6.81213284 298.70410156]
[-3.98088527 283.44750977]
[7.30038548 272.79327393]
[22.69380188 270.83819580]
[29.79693031 257.62661743]
[36.90006256 244.41505432]
[44.00319290 231.20347595]
[51.10632324 217.99191284]
[58.03734970 204.68923950]
[64.79510498 191.29772949]
[71.55285645 177.90620422]
[78.31061554 164.51469421]
[85.06836700 151.12316895]
[91.82612610 137.73165894]
[68.53037262 105.91509247]
[85.95668030 78.79383087]
[81.73069000 64.40143585]
[77.50469971 50.00904083]
[73.27871704 35.61664963]
[69.05272675 21.22425270]
[64.45452881 6.94641876]
[59.48721313 -7.20723104]
[54.51990128 -21.36088181]
[49.55258942 -35.51453018]
[44.58527756 -49.66818237]
[39.61796188 -63.82183075]
[25.38553810 -75.41718292]
[29.15729332 -92.50301361]
[23.82421875 -106.52294159]
[18.49114227 -120.54286194]
[13.15806580 -134.56278992]
[7.82498932 -148.58271790]
[2.49191284 -162.60264587]
[-2.84116340 -176.62255859]
[-8.17424011 -190.64248657]
[-13.50731564 -204.66241455]
[-18.84039307 -218.68234253]
[-24.88786507 -225.69288635]
[-24.12474632 -233.13607788]
[-29.09205818 -247.28973389]
[-34.05937195 -261.44338989]
[-47.83924484 -269.65887451]
[-49.86486053 -285.57354736]
[-38.58233643 -296.97900391]
[-22.64666176 -295.12594604]
[-14.28232098 -281.43591309]
[-19.90571976 -266.41070557]
[-14.93840790 -252.25703430]
[-9.97109509 -238.10339355]
[-4.82046700 -224.01541138]
[0.51260912 -209.99549866]
[5.84568548 -195.97557068]
[11.17876148 -181.95564270]
[16.51183701 -167.93571472]
[21.84491348 -153.91578674]
[27.17798996 -139.89585876]
[32.51106644 -125.87593842]
[37.84414291 -111.85601807]
[43.17721939 -97.83609009]
[54.13985062 -92.54607391]
[58.65808105 -80.81115723]
[53.77161407 -68.78914642]
[58.73892593 -54.63549423]
[63.70623779 -40.48184204]
[68.67355347 -26.32819366]
[73.64086151 -12.17454338]
[78.60817719 1.97910655]
[82.55620575 4.85873842]
[84.66616058 10.30039692]
[83.44512177 16.99826431]
[87.67111206 31.39065933]
[91.89709473 45.78305435]
[96.12308502 60.17544937]
[100.34907532 74.56784058]
[111.79904175 73.80726624]
[123.68873596 78.45540619]
[133.42533875 88.60654449]
[138.48025513 103.12404633]
[153.41836548 104.48526001]
[168.35647583 105.84647369]
[183.00904846 98.48207092]
[196.56260681 107.71424103]
[195.07441711 124.04572296]
[180.07540894 130.67608643]
[166.99526978 120.78458405]
[152.05715942 119.42337036]
[137.11904907 118.06215668]
[130.71122742 131.62460327]
[141.24876404 142.29981995]
[151.78628540 152.97505188]
[162.32382202 163.65026855]
[172.86135864 174.32550049]
[183.39888000 185.00071716]
[199.36770630 186.54226685]
[207.99774170 200.06639099]
[202.66879272 215.19853210]
[187.46873474 220.33061218]
[174.05778503 211.52574158]
[172.72366333 195.53825378]
[162.18612671 184.86302185]
[151.64859009 174.18780518]
[141.11106873 163.51257324]
[130.57353210 152.83735657]
[120.03600311 142.16212463]
[105.21764374 144.48941040]
[98.45988464 157.88093567]
[91.70213318 171.27244568]
[84.94437408 184.66397095]
[78.18662262 198.05548096]
[71.42886353 211.44700623]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 18]
[2 17]
[3 16]
[4 15]
[5 14]
[19 120]
[20 119]
[21 118]
[22 117]
[23 116]
[24 115]
[26 84]
[27 83]
[28 82]
[29 81]
[30 80]
[31 77]
[32 76]
[33 75]
[34 74]
[35 73]
[36 72]
[38 69]
[39 68]
[40 67]
[41 66]
[42 65]
[43 64]
[44 63]
[45 62]
[46 61]
[47 60]
[49 59]
[50 58]
[51 57]
[88 97]
[89 96]
[90 95]
[98 114]
[99 113]
[100 112]
[101 111]
[102 110]
[103 109]
] def

init

% Start Annotations
1 18 0.0 1 colorpair
2 17 0.0 1 colorpair
3 16 0.0 1 colorpair
4 15 0.0 1 colorpair
5 14 0.0 1 colorpair
19 120 0.0 1 colorpair
20 119 0.0 1 colorpair
21 118 0.0 1 colorpair
22 117 0.0 1 colorpair
23 116 0.0 1 colorpair
24 115 0.0 1 colorpair
26 84 0.0 1 colorpair
27 83 0.0 1 colorpair
28 82 0.0 1 colorpair
29 81 0.0 1 colorpair
30 80 0.0 1 colorpair
31 77 0.0 1 colorpair
32 76 0.0 1 colorpair
33 75 0.0 1 colorpair
34 74 0.0 1 colorpair
35 73 0.0 1 colorpair
36 72 0.0 1 colorpair
38 69 0.0 1 colorpair
39 68 0.0 1 colorpair
40 67 0.0 1 colorpair
41 66 0.0 1 colorpair
42 65 0.0 1 colorpair
43 64 0.0 1 colorpair
44 63 0.0 1 colorpair
45 62 0.0 1 colorpair
46 61 0.0 1 colorpair
47 60 0.0 1 colorpair
49 59 0.0 1 colorpair
50 58 0.0 1 colorpair
51 57 0.0 1 colorpair
88 97 0.0 1 colorpair
89 96 0.0 1 colorpair
90 95 0.0 1 colorpair
98 114 0.0 1 colorpair
99 113 0.0 1 colorpair
100 112 0.0 1 colorpair
101 111 0.0 1 colorpair
102 110 0.0 1 colorpair
103 109 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
