%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 09:56:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAAAUGCCAAAAAAAACCAUGCUCUGGUGCAUAUUAAUAGUGUGUCUAACACUGCUGAUAUUCACCUACCUCACACGAAAAUCGCUCUGCGAAAUCCGGAACAAAGACACAAAAAGGGAGGUAGCGGCUAUCAUGGCCUACGAAUCCGGUAAG\
) } def
/len { sequence length } bind def

/coor [
[198.86575317 461.13705444]
[193.29927063 447.20816040]
[187.73277283 433.27926636]
[182.16627502 419.35037231]
[176.59979248 405.42147827]
[171.03329468 391.49258423]
[167.02502441 388.80328369]
[164.69490051 383.54257202]
[165.53506470 376.89334106]
[160.53031921 362.75289917]
[155.52557373 348.61242676]
[150.52082825 334.47198486]
[145.51608276 320.33151245]
[133.97570801 310.91510010]
[136.66520691 295.32418823]
[131.66046143 281.18371582]
[119.34071350 277.29907227]
[111.40326691 266.86172485]
[110.93730927 253.56233215]
[118.33841705 242.26893616]
[113.61760712 228.03117371]
[108.89679718 213.79339600]
[104.17598724 199.55563354]
[99.45518494 185.31787109]
[94.73437500 171.08010864]
[90.01356506 156.84234619]
[85.29275513 142.60458374]
[80.57194519 128.36680603]
[70.34318542 117.39537048]
[56.47068024 111.68979645]
[42.59817123 105.98423004]
[28.72566605 100.27865601]
[13.01975155 102.18518066]
[4.19218779 90.18837738]
[-9.68031979 84.48280334]
[-23.55282784 78.77723694]
[-37.42533493 73.07166290]
[-51.29784393 67.36609650]
[-65.17034912 61.66052246]
[-79.04285431 55.95495224]
[-92.91536713 50.24938202]
[-106.78787231 44.54381180]
[-120.66037750 38.83824158]
[-134.53288269 33.13267136]
[-148.40539551 27.42710114]
[-162.27790833 21.72153091]
[-176.15040588 16.01596069]
[-193.09883118 15.58306694]
[-197.37464905 -0.82283908]
[-182.79354858 -9.47315979]
[-170.44483948 2.14345241]
[-156.57232666 7.84902287]
[-142.69982910 13.55459309]
[-128.82731628 19.26016426]
[-114.95481110 24.96573448]
[-101.08230591 30.67130470]
[-87.20979309 36.37687683]
[-73.33728790 42.08244705]
[-59.46477890 47.78801727]
[-45.59227371 53.49358749]
[-31.71976471 59.19915771]
[-17.84725761 64.90472412]
[-3.97474933 70.61029816]
[9.89775848 76.31587219]
[24.61141777 74.00124359]
[34.43123627 86.40615082]
[48.30374527 92.11171722]
[62.17625046 97.81729126]
[76.04875946 103.52285767]
[79.49793243 90.07147980]
[89.33980560 81.50150299]
[101.47738647 80.13391876]
[108.13974762 66.69467926]
[114.80210114 53.25544739]
[121.46446228 39.81621552]
[128.12681580 26.37698174]
[127.32403564 10.57615566]
[139.90916443 2.60974765]
[146.57153320 -10.82948589]
[153.23388672 -24.26871872]
[152.43110657 -40.06954575]
[165.01623535 -48.03595352]
[171.67860413 -61.47518539]
[178.34095764 -74.91442108]
[185.00331116 -88.35365295]
[191.66566467 -101.79288483]
[198.32803345 -115.23211670]
[204.99038696 -128.67135620]
[206.60823059 -145.54792786]
[223.27313232 -148.66520691]
[230.88189697 -133.51452637]
[218.42961121 -122.00899506]
[211.76725769 -108.56976318]
[205.10490417 -95.13053131]
[198.44255066 -81.69129944]
[191.78018188 -68.25205994]
[185.11782837 -54.81282806]
[178.45547485 -41.37359619]
[179.73478699 -26.53403282]
[166.67312622 -17.60636139]
[160.01075745 -4.16712856]
[153.34840393 9.27210522]
[154.62771606 24.11166763]
[141.56605530 33.03934097]
[134.90368652 46.47857285]
[128.24133301 59.91780472]
[121.57897949 73.35704041]
[114.91661835 86.79627228]
[120.26735687 95.41939545]
[120.79346466 105.97950745]
[115.95471954 115.85607910]
[106.59257507 122.40140533]
[94.80970764 123.64600372]
[99.53051758 137.88377380]
[104.25132751 152.12153625]
[108.97213745 166.35929871]
[113.69294739 180.59706116]
[118.41375732 194.83482361]
[123.13456726 209.07258606]
[127.85537720 223.31036377]
[132.57618713 237.54812622]
[148.33403015 245.08291626]
[153.68852234 261.35412598]
[145.80091858 276.17898560]
[150.80566406 290.31942749]
[162.70402527 300.74725342]
[159.65653992 315.32678223]
[164.66128540 329.46722412]
[169.66603088 343.60769653]
[174.67077637 357.74813843]
[179.67552185 371.88861084]
[184.96218872 385.92608643]
[190.52868652 399.85498047]
[196.09518433 413.78387451]
[201.66166687 427.71276855]
[207.22816467 441.64169312]
[212.79464722 455.57058716]
[224.34825134 461.38619995]
[228.68153381 473.14642334]
[223.97428894 484.32751465]
[229.26095581 498.36502075]
[234.54763794 512.40246582]
[239.83432007 526.44000244]
[245.12098694 540.47747803]
[259.93304443 545.49108887]
[268.01284790 558.87957764]
[265.54531860 574.32122803]
[253.69555664 584.52502441]
[238.05867004 584.67303467]
[226.01791382 574.69537354]
[223.25856018 559.30316162]
[231.08349609 545.76416016]
[225.79682922 531.72668457]
[220.51014709 517.68914795]
[215.22346497 503.65167236]
[209.93679810 489.61419678]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 137]
[2 136]
[3 135]
[4 134]
[5 133]
[6 132]
[9 131]
[10 130]
[11 129]
[12 128]
[13 127]
[15 125]
[16 124]
[20 121]
[21 120]
[22 119]
[23 118]
[24 117]
[25 116]
[26 115]
[27 114]
[28 113]
[29 69]
[30 68]
[31 67]
[32 66]
[34 64]
[35 63]
[36 62]
[37 61]
[38 60]
[39 59]
[40 58]
[41 57]
[42 56]
[43 55]
[44 54]
[45 53]
[46 52]
[47 51]
[72 108]
[73 107]
[74 106]
[75 105]
[76 104]
[78 102]
[79 101]
[80 100]
[82 98]
[83 97]
[84 96]
[85 95]
[86 94]
[87 93]
[88 92]
[140 156]
[141 155]
[142 154]
[143 153]
[144 152]
] def

init

% Start Annotations
1 137 0.0 1 colorpair
2 136 0.0 0.6 colorpair
3 135 0.0 1 colorpair
4 134 0.0 1 colorpair
5 133 0.0 0.6 colorpair
6 132 0.0 1 colorpair
9 131 0.0 1 colorpair
10 130 0.0 1 colorpair
11 129 0.0 0.6 colorpair
12 128 0.0 0.6 colorpair
13 127 0.16 1 colorpair
15 125 0.0 0.6 colorpair
16 124 0.0 0.6 colorpair
20 121 0.0 1 colorpair
21 120 0.0 1 colorpair
22 119 0.0 0.6 colorpair
23 118 0.0 1 colorpair
24 117 0.16 1 colorpair
25 116 0.0 0.6 colorpair
26 115 0.0 1 colorpair
27 114 0.16 1 colorpair
28 113 0.0 0.6 colorpair
29 69 0.0 0.6 colorpair
30 68 0.0 1 colorpair
31 67 0.0 1 colorpair
32 66 0.0 1 colorpair
34 64 0.16 1 colorpair
35 63 0.0 1 colorpair
36 62 0.16 1 colorpair
37 61 0.0 1 colorpair
38 60 0.0 1 colorpair
39 59 0.0 1 colorpair
40 58 0.0 0.6 colorpair
41 57 0.0 1 colorpair
42 56 0.0 1 colorpair
43 55 0.0 1 colorpair
44 54 0.16 1 colorpair
45 53 0.0 0.6 colorpair
46 52 0.0 1 colorpair
47 51 0.0 0.6 colorpair
72 108 0.0 0.6 colorpair
73 107 0.0 0.6 colorpair
74 106 0.0 1 colorpair
75 105 0.16 1 colorpair
76 104 0.0 0.6 colorpair
78 102 0.0 0.6 colorpair
79 101 0.0 1 colorpair
80 100 0.0 1 colorpair
82 98 0.0 1 colorpair
83 97 0.0 0.6 colorpair
84 96 0.0 0.6 colorpair
85 95 0.0 1 colorpair
86 94 0.0 1 colorpair
87 93 0.0 1 colorpair
88 92 0.0 1 colorpair
140 156 0.0 1 colorpair
141 155 0.0 0.6 colorpair
142 154 0.0 1 colorpair
143 153 0.0 1 colorpair
144 152 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
2 136 1 gmark
5 133 1 gmark
11 129 1 gmark
12 128 1 gmark
13 cmark
127 cmark
15 125 1 gmark
16 124 1 gmark
22 119 1 gmark
24 cmark
117 cmark
25 116 1 gmark
27 cmark
114 cmark
28 113 1 gmark
29 69 1 gmark
34 cmark
36 cmark
40 58 1 gmark
54 cmark
45 53 1 gmark
47 51 1 gmark
72 108 1 gmark
73 107 1 gmark
75 cmark
105 cmark
76 104 1 gmark
78 102 1 gmark
83 97 1 gmark
84 96 1 gmark
141 155 1 gmark

% End Annotations
showpage
end
%%EOF
