%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 06:09:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___UGAAGGACAAUACUUUUAUCUGGUGCGUUAUUAUUGUCUGCGUGACGGUAUUAAUGUUCACCACCCUCUCACGGGAAACGCUUUGCGAGCUACGCUUGCGGGGCGCGAGCAUGGAAGUUGUCGCUUCACUGGCUUGUAAAUCC_G___\
) } def
/len { sequence length } bind def

/coor [
[160.02239990 393.36691284]
[167.18252563 380.10055542]
[177.30995178 368.93371582]
[189.81590271 360.51559448]
[184.65324402 346.43203735]
[179.49058533 332.34844971]
[174.32792664 318.26489258]
[169.16526794 304.18130493]
[163.85734558 290.15185547]
[158.40472412 276.17797852]
[152.95210266 262.20410156]
[147.49948120 248.23025513]
[142.04685974 234.25637817]
[136.59425354 220.28251648]
[122.32894135 210.10786438]
[125.17769623 191.94499207]
[119.43744659 178.08680725]
[104.65251923 176.27807617]
[92.67839050 167.25166321]
[86.79116058 153.35177612]
[88.66413116 138.27235413]
[97.89366913 126.07552338]
[92.15341949 112.21733093]
[81.01316071 102.17269135]
[66.63674927 97.89264679]
[52.26033783 93.61260223]
[37.88392639 89.33256531]
[23.50751305 85.05252075]
[9.04571629 81.07050323]
[-5.49528742 77.38822174]
[-20.03629112 73.70594025]
[-34.57729721 70.02365875]
[-49.11829758 66.34137726]
[-64.39558411 70.45417786]
[-74.83400726 59.82927322]
[-89.37501526 56.14699173]
[-103.91601562 52.46471024]
[-118.45702362 48.78242493]
[-132.99803162 45.10014343]
[-147.53903198 41.41786194]
[-162.08003235 37.73558044]
[-176.54244995 44.67951965]
[-190.92535400 37.57236481]
[-194.19541931 21.86611938]
[-183.84413147 9.60926628]
[-167.81210327 10.20421600]
[-158.39775085 23.19457626]
[-143.85675049 26.87685776]
[-129.31575012 30.55913925]
[-114.77474213 34.24142075]
[-100.23373413 37.92370605]
[-85.69273376 41.60598755]
[-71.15172577 45.28826904]
[-56.91451263 40.91209030]
[-45.43601608 51.80037308]
[-30.89501381 55.48265457]
[-16.35400963 59.16493607]
[-1.81300509 62.84721756]
[12.72799873 66.52950287]
[17.26507759 64.86300659]
[22.89913559 66.07413483]
[27.78755760 70.67610931]
[42.16397095 74.95614624]
[56.54038239 79.23619080]
[70.91679382 83.51623535]
[85.29320526 87.79627991]
[96.63867188 77.98402405]
[94.47605896 63.14073944]
[92.31343842 48.29745483]
[79.49545288 39.05219650]
[77.05165863 23.43799210]
[86.43192291 10.71846771]
[102.07109070 8.43989468]
[114.69072723 17.95410728]
[116.80382538 33.61649323]
[107.15672302 46.13483810]
[109.31934357 60.97812271]
[111.48195648 75.82140350]
[118.60037231 78.18321991]
[129.80953979 68.21554565]
[132.83720398 82.90683746]
[139.95562744 85.26864624]
[150.56222534 74.66204834]
[161.16882324 64.05544281]
[171.77542114 53.44884491]
[182.38203430 42.84224319]
[192.98863220 32.23564148]
[203.59523010 21.62903786]
[214.20182800 11.02243614]
[224.80844116 0.41583470]
[235.41503906 -10.19076729]
[246.02163696 -20.79736900]
[256.62823486 -31.40397072]
[263.55279541 -46.87933731]
[280.34027100 -44.50940704]
[282.71020508 -27.72191811]
[267.23483276 -20.79736900]
[256.62823486 -10.19076729]
[246.02163696 0.41583470]
[235.41503906 11.02243614]
[224.80844116 21.62903786]
[214.20182800 32.23564148]
[203.59523010 42.84224319]
[192.98863220 53.44884491]
[182.38203430 64.05544281]
[171.77542114 74.66204834]
[161.16882324 85.26864624]
[150.56222534 95.87525177]
[127.76128387 110.78762054]
[106.01161194 106.47707367]
[111.75186157 120.33526611]
[126.90259552 122.43346405]
[138.88973999 131.77183533]
[144.55555725 145.76344299]
[142.47120667 160.61306763]
[133.29563904 172.34655762]
[139.03588867 186.20474243]
[150.66510010 191.87837219]
[155.14309692 203.58915710]
[150.56811523 214.82989502]
[156.02073669 228.80375671]
[161.47335815 242.77763367]
[166.92597961 256.75149536]
[172.37858582 270.72537231]
[177.83120728 284.69921875]
[183.90374756 291.60922241]
[183.24884033 299.01864624]
[188.41149902 313.10223389]
[193.57415771 327.18579102]
[198.73681641 341.26937866]
[203.89947510 355.35293579]
[218.88317871 353.69409180]
[233.82839966 355.66998291]
[247.86621094 361.16574097]
[260.18048096 369.86184692]
[270.05526733 381.25268555]
[276.91650391 394.67608643]
[280.36523438 409.35156250]
[280.20095825 424.42593384]
[276.43328857 439.02276611]
[269.28118896 452.29345703]
[259.16052246 463.46643066]
[246.65968323 471.89215088]
[232.50546265 477.08068848]
[217.52073669 478.73046875]
[202.57673645 476.74551392]
[188.54225159 471.24124146]
[176.23326111 462.53768921]
[166.36537170 451.14083862]
[159.51228333 437.71331787]
[156.07244873 423.03573608]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 131]
[5 130]
[6 129]
[7 128]
[8 127]
[9 125]
[10 124]
[11 123]
[12 122]
[13 121]
[14 120]
[16 117]
[17 116]
[22 111]
[23 110]
[24 66]
[25 65]
[26 64]
[27 63]
[28 62]
[29 59]
[30 58]
[31 57]
[32 56]
[33 55]
[35 53]
[36 52]
[37 51]
[38 50]
[39 49]
[40 48]
[41 47]
[67 78]
[68 77]
[69 76]
[82 108]
[83 107]
[84 106]
[85 105]
[86 104]
[87 103]
[88 102]
[89 101]
[90 100]
[91 99]
[92 98]
[93 97]
] def

init

% Start Annotations
4 131 0.0 0.6 colorpair
5 130 0.16 1 colorpair
6 129 0.0 0.6 colorpair
7 128 0.16 1 colorpair
8 127 0.0 1 colorpair
9 125 0.0 0.6 colorpair
10 124 0.16 1 colorpair
11 123 0.0 0.6 colorpair
12 122 0.0 1 colorpair
13 121 0.16 1 colorpair
14 120 0.0 0.6 colorpair
16 117 0.0 1 colorpair
17 116 0.16 1 colorpair
22 111 0.0 0.6 colorpair
23 110 0.0 1 colorpair
24 66 0.0 1 colorpair
25 65 0.0 1 colorpair
26 64 0.0 0.6 colorpair
27 63 0.0 1 colorpair
28 62 0.16 1 colorpair
29 59 0.0 0.6 colorpair
30 58 0.0 1 colorpair
31 57 0.16 1 colorpair
32 56 0.0 0.6 colorpair
33 55 0.16 1 colorpair
35 53 0.0 0.6 colorpair
36 52 0.0 1 colorpair
37 51 0.0 0.6 colorpair
38 50 0.0 0.6 colorpair
39 49 0.0 0.6 colorpair
40 48 0.0 1 colorpair
41 47 0.0 0.6 colorpair
67 78 0.0 0.6 colorpair
68 77 0.0 0.6 colorpair
69 76 0.16 1 colorpair
82 108 0.0 1 colorpair
83 107 0.0 1 colorpair
84 106 0.0 0.6 colorpair
85 105 0.0 1 colorpair
86 104 0.0 0.6 colorpair
87 103 0.16 1 colorpair
88 102 0.0 0.6 colorpair
89 101 0.0 1 colorpair
90 100 0.0 1 colorpair
91 99 0.0 0.6 colorpair
92 98 0.0 0.6 colorpair
93 97 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
4 131 1 gmark
130 cmark
6 129 1 gmark
7 cmark
128 cmark
9 125 1 gmark
10 cmark
124 cmark
11 123 1 gmark
13 cmark
14 120 1 gmark
17 cmark
22 111 1 gmark
26 64 1 gmark
62 cmark
29 59 1 gmark
57 cmark
32 56 1 gmark
33 cmark
35 53 1 gmark
37 51 1 gmark
38 50 1 gmark
39 49 1 gmark
41 47 1 gmark
67 78 1 gmark
68 77 1 gmark
69 cmark
84 106 1 gmark
86 104 1 gmark
103 cmark
88 102 1 gmark
91 99 1 gmark
92 98 1 gmark

% End Annotations
showpage
end
%%EOF
