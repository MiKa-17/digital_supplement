%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 06:08:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__UAAGAGGCUAUCCUGAUGGUGUCUAGUCAUACAGAUG_CCUCGUGG__GUUAAUGAA___AAUUAACU____ACGGGGCUUUCUUCUUUCUGCCACACAACACGGGAACAAACCACCUUCACGUCAUGAGGCAAAAAGCCUCAAGCGCC____________\
) } def
/len { sequence length } bind def

/coor [
[86.63536072 183.13475037]
[75.01695251 180.41049194]
[63.90034485 176.07112122]
[53.50883484 170.20379639]
[44.05114365 162.92636108]
[35.71723175 154.38497925]
[23.44829178 163.01477051]
[11.17935085 171.64454651]
[-1.08958936 180.27432251]
[-13.35853004 188.90409851]
[-25.62747002 197.53388977]
[-37.89641190 206.16366577]
[-43.14649963 213.69685364]
[-50.48403549 214.83859253]
[-62.91602707 223.23178101]
[-75.34802246 231.62496948]
[-87.78001404 240.01814270]
[-100.13104248 248.53002930]
[-112.39998627 257.15979004]
[-124.66892242 265.78958130]
[-136.93786621 274.41937256]
[-138.08724976 290.01464844]
[-149.02917480 301.18640137]
[-164.59719849 302.65969849]
[-177.44058228 293.73883057]
[-181.49507141 278.63601685]
[-174.84625244 264.48233032]
[-160.63349915 257.96069336]
[-145.56764221 262.15042114]
[-133.29870605 253.52064514]
[-121.02976227 244.89086914]
[-108.76082611 236.26107788]
[-105.08184052 229.81063843]
[-96.17319489 227.58615112]
[-83.74120331 219.19297791]
[-71.30921173 210.79978943]
[-58.87722397 202.40660095]
[-46.52619171 193.89472961]
[-34.25725174 185.26493835]
[-21.98830986 176.63516235]
[-9.71936893 168.00538635]
[2.54957104 159.37561035]
[14.81851196 150.74581909]
[27.08745193 142.11604309]
[21.12824249 129.48298645]
[17.33946609 116.03861237]
[15.82538414 102.15287781]
[16.62765884 88.20789337]
[19.72421646 74.58741760]
[25.02984238 61.66624832]
[32.39853287 49.79997253]
[21.20023727 39.82008743]
[10.00193787 29.84020233]
[-1.19636035 19.86031532]
[-12.39465904 9.88043022]
[-23.59295654 -0.09945502]
[-39.03990555 2.33483958]
[-52.41095734 -5.77373695]
[-57.39270782 -20.59656334]
[-51.63293076 -35.13475418]
[-37.85121155 -42.52381897]
[-22.55486107 -39.27486801]
[-12.96634674 -26.92195702]
[-13.61307144 -11.29775333]
[-2.41477323 -1.31786788]
[8.78352547 8.66201782]
[19.98182297 18.64190292]
[31.18012238 28.62178802]
[42.37842178 38.60167313]
[58.35414124 26.81787682]
[76.64465332 19.10173988]
[96.23331451 15.88214874]
[116.03134155 17.33805656]
[134.93829346 23.38853836]
[151.90328979 33.69729233]
[165.98336792 47.69133377]
[176.39590454 64.59283447]
[190.51300049 59.52257919]
[200.88555908 47.57600403]
[215.47903442 50.55585480]
[229.59614563 45.48560333]
[243.71324158 40.41534805]
[257.83035278 35.34509659]
[260.65142822 20.31217384]
[270.55294800 8.78581429]
[284.79974365 3.79630971]
[299.53256226 6.58914995]
[310.81332397 16.31589317]
[324.93041992 11.24563885]
[339.04754639 6.17538595]
[353.16464233 1.10513294]
[367.28173828 -3.96512032]
[381.39883423 -9.03537369]
[395.51593018 -14.10562706]
[409.63302612 -19.17588043]
[423.75015259 -24.24613380]
[434.12271118 -36.19270706]
[448.71618652 -33.21285629]
[462.83328247 -38.28311157]
[469.62857056 -52.29959488]
[484.01754761 -57.24044800]
[497.33822632 -50.67580414]
[511.45535278 -55.74605560]
[510.36288452 -70.80291748]
[513.37432861 -85.59594727]
[520.26629639 -99.02738953]
[530.52728271 -110.10056305]
[543.39581299 -117.99375153]
[557.91705322 -122.12122345]
[573.01342773 -122.17670441]
[587.56457520 -118.15607452]
[600.49084473 -110.35768890]
[610.83294678 -99.36023712]
[617.82342529 -85.97981262]
[620.94354248 -71.20932007]
[619.96173096 -56.14483643]
[614.95098877 -41.90423965]
[606.28295898 -29.54428291]
[594.60101318 -19.98215485]
[580.77197266 -13.92742634]
[565.82202148 -11.82940197]
[550.86059570 -13.84376812]
[536.99786377 -19.82104301]
[525.26257324 -29.31767654]
[516.52557373 -41.62895584]
[502.40850830 -36.55870056]
[496.30844116 -23.01895523]
[482.06390381 -17.67589378]
[467.90353394 -24.16600990]
[453.78643799 -19.09575653]
[444.42361450 -7.51184034]
[428.82040405 -10.12903214]
[414.70327759 -5.05877924]
[400.58618164 0.01147411]
[386.46908569 5.08172750]
[372.35198975 10.15198040]
[358.23489380 15.22223377]
[344.11779785 20.29248619]
[330.00070190 25.36273956]
[315.88357544 30.43299294]
[313.36914062 45.11438370]
[303.77987671 56.64267349]
[289.61407471 61.85774231]
[274.64160156 59.26503754]
[262.90060425 49.46219635]
[248.78349304 54.53245163]
[234.66639709 59.60270309]
[220.54928589 64.67295837]
[211.18649292 76.25687408]
[195.58325195 73.63967896]
[181.46615601 78.70993042]
[183.65773010 90.44049072]
[184.16897583 102.36306000]
[182.98960876 114.23816681]
[180.14332581 125.82729340]
[175.68728638 136.89764404]
[169.71099854 147.22688293]
[162.33450317 156.60751343]
[153.70596313 164.85115051]
[143.99868774 171.79217529]
[133.40766907 177.29119873]
[122.14561462 181.23774719]
[110.43875122 183.55258179]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 44]
[7 43]
[8 42]
[9 41]
[10 40]
[11 39]
[12 38]
[14 37]
[15 36]
[16 35]
[17 34]
[18 32]
[19 31]
[20 30]
[21 29]
[51 69]
[52 68]
[53 67]
[54 66]
[55 65]
[56 64]
[77 151]
[78 150]
[80 148]
[81 147]
[82 146]
[83 145]
[88 140]
[89 139]
[90 138]
[91 137]
[92 136]
[93 135]
[94 134]
[95 133]
[96 132]
[98 130]
[99 129]
[102 126]
[103 125]
] def

init

% Start Annotations
6 44 0.0 1 colorpair
7 43 0.0 1 colorpair
8 42 0.0 1 colorpair
9 41 0.0 1 colorpair
10 40 0.0 0.2 colorpair
11 39 0.0 0.6 colorpair
12 38 0.0 0.6 colorpair
14 37 0.16 0.6 colorpair
15 36 0.0 1 colorpair
16 35 0.16 1 colorpair
17 34 0.0 0.6 colorpair
18 32 0.16 1 colorpair
19 31 0.0 1 colorpair
20 30 0.0 1 colorpair
21 29 0.32 1 colorpair
51 69 0.0 1 colorpair
52 68 0.0 1 colorpair
53 67 0.0 1 colorpair
54 66 0.16 1 colorpair
55 65 0.16 1 colorpair
56 64 0.0 1 colorpair
77 151 0.0 1 colorpair
78 150 0.0 1 colorpair
80 148 0.0 1 colorpair
81 147 0.0 1 colorpair
82 146 0.0 1 colorpair
83 145 0.0 0.6 colorpair
88 140 0.0 1 colorpair
89 139 0.0 1 colorpair
90 138 0.0 1 colorpair
91 137 0.0 1 colorpair
92 136 0.16 0.2 colorpair
93 135 0.0 1 colorpair
94 134 0.0 1 colorpair
95 133 0.0 1 colorpair
96 132 0.0 1 colorpair
98 130 0.0 1 colorpair
99 129 0.0 1 colorpair
102 126 0.0 1 colorpair
103 125 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
10 40 2 gmark
11 39 1 gmark
12 38 1 gmark
14 37 1 gmark
14 cmark
37 cmark
35 cmark
17 34 1 gmark
18 cmark
32 cmark
21 cmark
29 cmark
54 cmark
55 cmark
83 145 1 gmark
92 136 2 gmark
92 cmark
136 cmark
103 125 1 gmark

% End Annotations
showpage
end
%%EOF
