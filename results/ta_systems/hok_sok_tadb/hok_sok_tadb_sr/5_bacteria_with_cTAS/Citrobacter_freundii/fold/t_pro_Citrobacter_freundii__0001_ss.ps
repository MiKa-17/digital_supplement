%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 06:08:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAACUGCCAAAAAAUGCCCUUGUCUGGUGCGUAUUAAUAGUGUGUUUCACGCUGCUGAUAUUCACCUUCCUGACCCGAAAAUCGCUCUGCGAAUUCAGGAUCAAAGACGGAGACAGGGAGGUGGCGGCUGUUCUGGCUUACGAAUCCGAUAAG\
) } def
/len { sequence length } bind def

/coor [
[166.83253479 301.29687500]
[152.98684692 305.37628174]
[138.89575195 308.50454712]
[124.62452698 310.66717529]
[110.23925781 311.85415649]
[95.80656433 312.05999756]
[81.39329529 311.28372192]
[67.06620026 309.52896118]
[52.89162827 306.80383301]
[38.93522644 303.12094116]
[25.26162529 298.49734497]
[11.93415737 292.95446777]
[-0.98545945 286.51797485]
[-13.43739033 279.21768188]
[-25.36396599 271.08740234]
[-36.70995331 262.16476440]
[-47.42280960 252.49110413]
[-57.45291519 242.11123657]
[-66.75382233 231.07321167]
[-75.28245544 219.42814636]
[-82.99932098 207.22999573]
[-89.86866760 194.53523254]
[-95.85869598 181.40266418]
[-100.94165802 167.89309692]
[-105.09401703 154.06910706]
[-108.29653168 139.99470520]
[-110.53438568 125.73508453]
[-111.79721069 111.35626984]
[-112.07915497 96.92486572]
[-111.37890625 82.50770569]
[-109.69972229 68.17155457]
[-107.04936981 53.98281097]
[-103.44012451 40.00717926]
[-98.88870239 26.30939102]
[-112.76121521 20.60382080]
[-126.63372040 14.89824963]
[-140.50622559 9.19267941]
[-154.37873840 3.48710871]
[-168.25123596 -2.21846175]
[-182.12374878 -7.92403221]
[-195.99626160 -13.62960243]
[-209.86875916 -19.33517265]
[-223.74127197 -25.04074287]
[-237.61378479 -30.74631500]
[-250.20495605 -21.83194733]
[-265.61779785 -21.16283607]
[-278.93414307 -28.95248985]
[-285.90475464 -42.71525955]
[-284.30538940 -58.05949402]
[-274.64636230 -70.08890533]
[-260.00985718 -74.96495056]
[-245.06629944 -71.13170624]
[-234.58413696 -59.81233597]
[-231.90820312 -44.61882019]
[-218.03570557 -38.91324997]
[-204.16319275 -33.20767975]
[-190.29067993 -27.50210953]
[-176.41818237 -21.79653931]
[-162.54566956 -16.09096909]
[-148.67317200 -10.38539886]
[-134.80065918 -4.67982817]
[-120.92814636 1.02574229]
[-107.05564117 6.73131275]
[-93.18313599 12.43688297]
[-86.10274506 -1.74866176]
[-77.98252869 -15.36569405]
[-68.86784363 -28.33812904]
[-58.80961990 -40.59348297]
[-47.86405945 -52.06328583]
[-36.09232330 -62.68344498]
[-23.56017876 -72.39462280]
[-10.33765316 -81.14255524]
[3.50137639 -88.87837219]
[17.87958527 -95.55883789]
[32.71663284 -101.14664459]
[47.92962646 -105.61054993]
[63.43355560 -108.92562866]
[79.14179993 -111.07334900]
[94.96658325 -112.04170990]
[110.81948853 -111.82530975]
[126.61194611 -110.42534637]
[142.25570679 -107.84965515]
[157.66337585 -104.11260986]
[172.74885559 -99.23510742]
[187.42784119 -93.24439240]
[194.09019470 -106.68362427]
[200.75256348 -120.12285614]
[207.41491699 -133.56208801]
[209.03277588 -150.43867493]
[225.69767761 -153.55593872]
[233.30642700 -138.40525818]
[220.85415649 -126.89973450]
[214.19178772 -113.46050262]
[207.52943420 -100.02127075]
[200.86708069 -86.58203125]
[213.89512634 -78.92714691]
[226.34510803 -70.36412048]
[238.15385437 -60.93643570]
[249.26139832 -50.69193268]
[259.61138916 -39.68260574]
[269.15127563 -27.96433258]
[277.83264160 -15.59658718]
[285.61145020 -2.64214301]
[292.44821167 10.83325195]
[298.30819702 24.76120567]
[303.16171265 39.07102585]
[306.98410034 53.69008636]
[309.75595093 68.54418945]
[311.46319580 83.55793762]
[312.09716797 98.65514374]
[311.65469360 113.75917053]
[310.13796997 128.79336548]
[307.55471802 143.68142700]
[303.91802979 158.34777832]
[299.24636841 172.71798706]
[293.56347656 186.71913147]
[286.89813232 200.28015137]
[279.28424072 213.33218384]
[270.76037598 225.80903625]
[282.51455688 235.12782288]
[294.26870728 244.44659424]
[306.53344727 237.14939880]
[320.52474976 234.49159241]
[334.55194092 236.77354431]
[346.92709351 243.69992065]
[356.16827393 254.41778564]
[361.17675781 267.62161255]
[361.36785889 281.71221924]
[356.73901367 294.99053955]
[368.30435181 304.54263306]
[379.86968994 314.09475708]
[395.21429443 311.08181763]
[408.88052368 318.68228149]
[414.41567993 333.30749512]
[409.20617676 348.05181885]
[395.71182251 355.95346069]
[380.30419922 353.28149414]
[370.25833130 341.29757690]
[370.31759644 325.66009521]
[358.75222778 316.10800171]
[347.18688965 306.55587769]
[333.32928467 314.18991089]
[317.56616211 315.93722534]
[302.29919434 311.50192261]
[289.86599731 301.53240967]
[282.18188477 287.52679443]
[280.44509888 271.60769653]
[284.94992065 256.20074463]
[273.19577026 246.88197327]
[261.44161987 237.56318665]
[251.71159363 248.22488403]
[241.27896118 258.20010376]
[230.19204712 267.44268799]
[218.50218201 275.90979004]
[206.26350403 283.56222534]
[193.53269958 290.36453247]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 64]
[35 63]
[36 62]
[37 61]
[38 60]
[39 59]
[40 58]
[41 57]
[42 56]
[43 55]
[44 54]
[85 95]
[86 94]
[87 93]
[88 92]
[119 150]
[120 149]
[121 148]
[129 141]
[130 140]
[131 139]
] def

init

% Start Annotations
34 64 0.16 1 colorpair
35 63 0.0 1 colorpair
36 62 0.65 0.6 colorpair
38 60 0.16 1 colorpair
39 59 0.16 0.6 colorpair
41 57 0.32 1 colorpair
42 56 0.32 0.2 colorpair
43 55 0.32 1 colorpair
44 54 0.16 1 colorpair
85 95 0.0 0.6 colorpair
86 94 0.0 0.6 colorpair
87 93 0.16 0.6 colorpair
88 92 0.16 1 colorpair
119 150 0.16 1 colorpair
120 149 0.0 0.6 colorpair
121 148 0.16 1 colorpair
130 140 0.0 0.6 colorpair
131 139 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
34 cmark
36 62 1 gmark
36 cmark
62 cmark
37 61 4 gmark
37 cmark
61 cmark
60 cmark
39 59 1 gmark
39 cmark
40 58 3 gmark
40 cmark
58 cmark
41 cmark
57 cmark
42 56 2 gmark
42 cmark
56 cmark
43 cmark
55 cmark
54 cmark
85 95 1 gmark
86 94 1 gmark
87 93 1 gmark
87 cmark
93 cmark
88 cmark
119 cmark
150 cmark
120 149 1 gmark
148 cmark
129 141 3 gmark
129 cmark
141 cmark
130 140 1 gmark

% End Annotations
showpage
end
%%EOF
