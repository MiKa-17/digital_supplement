%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 06:08:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAGAGGCUAACCU_GAUGGUGACUAAACAUACAG_UGGGCCUCG______GGUUAAUGAAAAAAAA__UUACU_CGGGGCUUUCUGCUUUCUGCCACACAACA______ACAAACCCACUGAACGGCAUGAGGCAAAAAGCCUCAAGCGCC____________\
) } def
/len { sequence length } bind def

/coor [
[76.20085144 222.26173401]
[58.76784897 217.53399658]
[42.20193863 210.33456421]
[26.85150719 200.81483459]
[13.03936195 189.17498779]
[1.05596972 175.65983582]
[-11.38660240 184.03732300]
[-23.82917404 192.41482544]
[-36.27174759 200.79231262]
[-48.71431732 209.16981506]
[-61.15689087 217.54730225]
[-64.40261078 230.05935669]
[-74.97425079 236.77578735]
[-86.89058685 234.54467773]
[-99.41139984 242.80477905]
[-111.85397339 251.18226624]
[-117.25418091 258.60382080]
[-124.61032867 259.59774780]
[-137.13114929 267.85781860]
[-149.57373047 276.23532104]
[-162.01629639 284.61282349]
[-174.45886230 292.99032593]
[-186.90144348 301.36779785]
[-191.37461853 316.77462769]
[-206.26339722 322.74987793]
[-220.14639282 314.70983887]
[-222.37374878 298.82217407]
[-211.23683167 287.27450562]
[-195.27893066 288.92523193]
[-182.83636475 280.54772949]
[-170.39378357 272.17025757]
[-157.95121765 263.79275513]
[-145.50865173 255.41525269]
[-141.70011902 249.04376221]
[-132.75228882 246.99978638]
[-120.23146820 238.73970032]
[-107.78889465 230.36219788]
[-103.98036957 223.99070740]
[-95.03253937 221.94673157]
[-87.91029358 205.92797852]
[-69.53438568 205.10473633]
[-57.09181213 196.72723389]
[-44.64923859 188.34974670]
[-32.20666885 179.97224426]
[-19.76409531 171.59475708]
[-7.32152367 163.21726990]
[-13.07196999 152.24041748]
[-17.70324516 140.74650574]
[-21.16950989 128.84928894]
[-23.43645477 116.66652679]
[-24.48164368 104.31880188]
[-24.29473114 91.92833710]
[-22.87756348 79.61775208]
[-20.24417305 67.50891876]
[-16.42062187 55.72166824]
[-11.44475460 44.37268448]
[-5.36582327 33.57429123]
[1.75600457 23.43336868]
[9.85023785 14.05029297]
[18.83676147 5.51793528]
[28.62662888 -2.07925105]
[39.12293625 -8.66607094]
[50.22180176 -14.17733002]
[61.81336212 -18.55847740]
[73.78289032 -21.76614761]
[86.01190948 -23.76859474]
[98.37937927 -24.54599762]
[110.76289368 -24.09066010]
[123.03987885 -22.40709114]
[135.08882141 -19.51195335]
[146.79045105 -15.43390179]
[158.02896118 -10.21330261]
[168.69309998 -3.90182662]
[178.67733765 3.43805504]
[187.88282776 11.73369408]
[196.21846008 20.90298080]
[203.60174561 30.85515785]
[209.95959473 41.49172211]
[215.22908020 52.70739365]
[229.42355347 47.85797501]
[239.98121643 36.07466125]
[254.52644348 39.28180313]
[268.72091675 34.43238449]
[282.91537476 29.58296776]
[297.10986328 24.73355293]
[301.77462769 10.05206299]
[314.04641724 1.03782976]
[329.09503174 0.97884214]
[341.14849854 9.68814468]
[355.34298706 4.83872795]
[369.53744507 -0.01068828]
[383.73193359 -4.86010456]
[397.92639160 -9.70952129]
[412.12088013 -14.55893803]
[426.31536865 -19.40835381]
[440.50982666 -24.25777054]
[454.70431519 -29.10718727]
[468.89877319 -33.95660400]
[483.09326172 -38.80601883]
[497.28775024 -43.65543747]
[511.48220825 -48.50485229]
[522.03985596 -60.28816605]
[536.58508301 -57.08102798]
[550.77960205 -61.93044281]
[564.97406006 -66.77986145]
[563.94708252 -81.83335876]
[566.85211182 -96.63953400]
[573.49121094 -110.18888092]
[583.41168213 -121.55758667]
[595.93701172 -129.97052002]
[610.21337891 -134.85404968]
[625.26727295 -135.87522888]
[640.07232666 -132.96443176]
[653.61907959 -126.32010651]
[664.98394775 -116.39528656]
[673.39208984 -103.86666107]
[678.27008057 -89.58845520]
[679.28546143 -74.53417206]
[676.36895752 -59.73023987]
[669.71936035 -46.18601990]
[659.79016113 -34.82497787]
[647.25830078 -26.42172623]
[632.97821045 -21.54921722]
[617.92352295 -20.53966331]
[603.12072754 -23.46189690]
[589.57910156 -30.11667633]
[578.22186279 -40.05027008]
[569.82348633 -52.58538437]
[555.62896729 -47.73596573]
[541.43450928 -42.88655090]
[531.89215088 -31.45009995]
[516.33160400 -34.31037521]
[502.13714600 -29.46096039]
[487.94268799 -24.61154366]
[473.74819946 -19.76212692]
[459.55374146 -14.91271019]
[445.35925293 -10.06329441]
[431.16476440 -5.21387768]
[416.97030640 -0.36446118]
[402.77581787 4.48495531]
[388.58135986 9.33437157]
[374.38687134 14.18378830]
[360.19238281 19.03320503]
[345.99792480 23.88262177]
[341.79302979 38.14645004]
[329.85406494 47.30752182]
[314.63204956 47.68630600]
[301.95928955 38.92802811]
[287.76480103 43.77744675]
[273.57034302 48.62686157]
[259.37585449 53.47627640]
[249.83348083 64.91272736]
[234.27297974 62.05245209]
[220.07849121 66.90187073]
[223.60301208 84.61737061]
[224.52821350 102.65635681]
[222.83462524 120.63948822]
[218.55784607 138.18856812]
[211.78785706 154.93457031]
[202.66700745 170.52529907]
[191.38708496 184.63291931]
[178.18534851 196.96073914]
[163.33938599 207.24949646]
[147.16142273 215.28283691]
[129.99165344 220.89181519]
[112.19119263 223.95848083]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 46]
[7 45]
[8 44]
[9 43]
[10 42]
[11 41]
[14 39]
[15 37]
[16 36]
[18 35]
[19 33]
[20 32]
[21 31]
[22 30]
[23 29]
[79 154]
[80 153]
[82 151]
[83 150]
[84 149]
[85 148]
[89 144]
[90 143]
[91 142]
[92 141]
[93 140]
[94 139]
[95 138]
[96 137]
[97 136]
[98 135]
[99 134]
[100 133]
[101 132]
[103 130]
[104 129]
[105 128]
] def

init

% Start Annotations
6 46 0.0 1 colorpair
7 45 0.0 0.6 colorpair
8 44 0.0 1 colorpair
9 43 0.0 1 colorpair
10 42 0.0 1 colorpair
11 41 0.32 0.6 colorpair
14 39 0.16 0.2 colorpair
15 37 0.0 1 colorpair
16 36 0.16 1 colorpair
18 35 0.0 0.2 colorpair
19 33 0.16 1 colorpair
20 32 0.0 0.6 colorpair
21 31 0.0 0.6 colorpair
22 30 0.0 0.2 colorpair
23 29 0.16 0.6 colorpair
79 154 0.0 1 colorpair
80 153 0.0 1 colorpair
82 151 0.0 1 colorpair
83 150 0.0 1 colorpair
84 149 0.0 1 colorpair
85 148 0.0 0.2 colorpair
89 144 0.0 0.2 colorpair
90 143 0.0 1 colorpair
91 142 0.16 0.6 colorpair
92 141 0.0 0.6 colorpair
93 140 0.0 0.6 colorpair
94 139 0.16 0.2 colorpair
95 138 0.0 1 colorpair
96 137 0.0 0.6 colorpair
97 136 0.0 1 colorpair
98 135 0.0 1 colorpair
99 134 0.0 0.2 colorpair
100 133 0.0 1 colorpair
101 132 0.0 1 colorpair
103 130 0.16 0.2 colorpair
104 129 0.16 0.6 colorpair
105 128 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
7 45 1 gmark
11 41 1 gmark
11 cmark
41 cmark
14 39 2 gmark
14 cmark
39 cmark
36 cmark
18 35 2 gmark
19 cmark
20 32 1 gmark
21 31 1 gmark
22 30 2 gmark
23 29 1 gmark
29 cmark
85 148 2 gmark
89 144 2 gmark
91 142 1 gmark
91 cmark
142 cmark
92 141 1 gmark
93 140 1 gmark
94 139 2 gmark
94 cmark
139 cmark
96 137 1 gmark
99 134 2 gmark
103 130 2 gmark
103 cmark
130 cmark
104 129 1 gmark
104 cmark
129 cmark
105 128 1 gmark
105 cmark
128 cmark

% End Annotations
showpage
end
%%EOF
