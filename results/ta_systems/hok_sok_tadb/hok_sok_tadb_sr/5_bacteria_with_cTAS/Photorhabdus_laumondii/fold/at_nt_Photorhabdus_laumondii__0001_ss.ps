%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 09:55:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___________________________________________________UAACAAGGAAAGAAAUCUGUAAACUCCACAUCAAAAGAGGCAAAACAGAGGUUGCGGCAAUCAUGGAUUACGAACCCAG_____GGAAAAGCAAC____GGCGGGAAGCA___ACCCCCGCCAUCUCA__UGUUGUUAAG_CAUGGCUCUCAAGCACCCU_____\
) } def
/len { sequence length } bind def

/coor [
[79.81223297 256.95782471]
[81.65554810 271.85726929]
[81.98203278 286.86676025]
[80.78834534 301.83224487]
[78.08672333 316.60018921]
[73.90489197 331.01904297]
[68.28576660 344.94085693]
[61.28701019 358.22271729]
[52.98043442 370.72839355]
[43.45128250 382.32952881]
[32.79734421 392.90707397]
[21.12793732 402.35250854]
[8.56281471 410.56887817]
[-4.76908684 417.47186279]
[-18.73095894 422.99066162]
[-33.17953110 427.06863403]
[-47.96653748 429.66390991]
[-62.94023514 430.74987793]
[-77.94697571 430.31539917]
[-92.83276367 428.36489868]
[-107.44483948 424.91842651]
[-121.63327026 420.01135254]
[-135.25245667 413.69400024]
[-148.16262817 406.03121948]
[-160.23132324 397.10162354]
[-171.33470154 386.99685669]
[-181.35881042 375.82061768]
[-190.20077515 363.68759155]
[-197.76989746 350.72225952]
[-203.98847961 337.05770874]
[-208.79270935 322.83413696]
[-212.13330078 308.19747925]
[-213.97596741 293.29797363]
[-214.30178833 278.28848267]
[-213.10743713 263.32302856]
[-210.40516663 248.55519104]
[-206.22270203 234.13653564]
[-200.60296631 220.21498108]
[-193.60362244 206.93341064]
[-185.29649353 194.42810059]
[-175.76683044 182.82737732]
[-165.11242676 172.25030518]
[-153.44261169 162.80538940]
[-140.87712097 154.58958435]
[-127.54491425 147.68716431]
[-113.58280182 142.16899109]
[-99.13404846 138.09165955]
[-84.34693146 135.49702454]
[-69.37318420 134.41171265]
[-54.36646271 134.84686279]
[-39.48076248 136.79800415]
[-24.86883736 140.24511719]
[-10.68062401 145.15283203]
[2.93827939 151.47077942]
[15.84812164 159.13414001]
[27.91642570 168.06425476]
[38.01241684 156.97052002]
[48.10840607 145.87678528]
[58.20439911 134.78305054]
[68.30039215 123.68931580]
[62.42171860 114.74449158]
[59.06975174 104.35673523]
[58.59260178 93.24027252]
[61.13651276 82.19108582]
[66.62742615 72.02998352]
[74.76860809 63.54165649]
[64.83427429 52.30292511]
[54.89994812 41.06419373]
[44.96561813 29.82546425]
[35.03128815 18.58673286]
[25.09695816 7.34800053]
[15.16262722 -3.89073086]
[1.58025157 -1.55840969]
[-11.27930069 -6.20396614]
[-20.09453201 -16.51381874]
[-22.64489365 -29.72640610]
[-18.36941910 -42.37140656]
[-28.14000702 -53.75278091]
[-37.91059494 -65.13415527]
[-47.68118286 -76.51552582]
[-63.31468964 -76.15853882]
[-75.48773193 -85.97438812]
[-78.45257568 -101.32833862]
[-70.80931091 -114.97071838]
[-56.16684723 -120.46000671]
[-41.43891525 -115.20434570]
[-33.57959366 -101.68527985]
[-36.29980850 -86.28610992]
[-26.52922249 -74.90473938]
[-16.75863457 -63.52336884]
[-6.98804808 -52.14199448]
[9.32497787 -53.99407578]
[23.67038727 -45.67301178]
[30.29349709 -30.28774071]
[26.40135956 -13.82506084]
[36.33568954 -2.58632946]
[46.27001953 8.65240192]
[56.20434952 19.89113426]
[66.13867950 31.12986565]
[76.07301331 42.36859512]
[86.00733948 53.60732651]
[100.86569214 51.55080032]
[107.37394714 38.03626633]
[113.88220215 24.52173233]
[120.39046478 11.00719929]
[126.89871979 -2.50733352]
[133.40696716 -16.02186584]
[129.89164734 -28.42869377]
[135.58711243 -39.54955292]
[146.95597839 -43.67352295]
[153.65919495 -57.09241867]
[160.36242676 -70.51131439]
[167.06564331 -83.93021393]
[163.75186157 -106.88858795]
[182.90364075 -118.60471344]
[188.61880493 -132.47326660]
[194.33396912 -146.34182739]
[185.42831421 -158.93916321]
[184.76985168 -174.35246277]
[192.56872559 -187.66342163]
[206.33630371 -194.62452698]
[221.67942810 -193.01454163]
[233.70216370 -183.34719849]
[238.56808472 -168.70730591]
[234.72450256 -153.76641846]
[223.39788818 -143.29208374]
[208.20252991 -140.62666321]
[202.48736572 -126.75811005]
[196.77220154 -112.88954926]
[201.04798889 -107.23168945]
[203.11973572 -100.37812805]
[202.68603516 -93.16325378]
[199.75352478 -86.48260498]
[194.64193726 -81.18167877]
[187.94978333 -77.94902802]
[180.48454285 -77.22698975]
[173.78132629 -63.80809402]
[167.07809448 -50.38919830]
[160.37487793 -36.97029877]
[162.37332153 -19.53355217]
[146.92150879 -9.51361084]
[140.41325378 4.00092268]
[133.90499878 17.51545525]
[127.39673615 31.02998924]
[120.88848114 44.54452133]
[114.38022614 58.05905533]
[123.86396027 61.65984726]
[132.44287109 67.41333008]
[139.62713623 75.09116364]
[144.98475647 84.35347748]
[148.16696167 94.76350403]
[163.16342163 94.43778229]
[178.15988159 94.11206818]
[193.15635681 93.78635406]
[208.15281677 93.46063995]
[223.14927673 93.13492584]
[238.14573669 92.80920410]
[253.14221191 92.48348999]
[262.78961182 80.17652130]
[278.10131836 77.00067139]
[291.84756470 84.45547485]
[297.53784180 99.02101135]
[292.48535156 113.81987000]
[279.07571411 121.86449432]
[263.64059448 119.35644531]
[253.46792603 107.47995758]
[238.47145081 107.80567169]
[223.47499084 108.13138580]
[208.47853088 108.45709991]
[193.48207092 108.78281403]
[178.48561096 109.10853577]
[163.48913574 109.43424988]
[148.49267578 109.75996399]
[144.85292053 116.31756592]
[158.16970825 123.22141266]
[171.48649597 130.12525940]
[184.80328369 137.02909851]
[198.12007141 143.93293762]
[211.43687439 150.83679199]
[224.75366211 157.74063110]
[238.89692688 162.73741150]
[239.98483276 177.69790649]
[226.71325684 184.68824768]
[214.99145508 175.32876587]
[202.08843994 167.67942810]
[189.18542480 160.03009033]
[176.28242493 152.38076782]
[163.37940979 144.73143005]
[150.47639465 137.08209229]
[137.57337952 129.43276978]
[133.93362427 135.99035645]
[141.00160217 141.76940918]
[141.60571289 149.13194275]
[149.07434082 162.14038086]
[156.54296875 175.14881897]
[164.01161194 188.15725708]
[179.06011963 193.71800232]
[183.95814514 208.99507141]
[174.94833374 222.26921082]
[158.94224548 223.35763550]
[148.21836853 211.42539978]
[151.00317383 195.62588501]
[143.53453064 182.61744690]
[136.06590271 169.60900879]
[128.59725952 156.60057068]
[121.03466797 143.64653015]
[97.83146667 143.95860291]
[79.39412689 133.78530884]
[69.29813385 144.87904358]
[59.20214462 155.97277832]
[49.10615158 167.06651306]
[39.01016235 178.16024780]
[49.03475952 189.33604431]
[57.87726974 201.46868896]
[65.44695282 214.43367004]
[71.66613770 228.09796143]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 212]
[57 211]
[58 210]
[59 209]
[60 208]
[66 101]
[67 100]
[68 99]
[69 98]
[70 97]
[71 96]
[72 95]
[77 91]
[78 90]
[79 89]
[80 88]
[102 146]
[103 145]
[104 144]
[105 143]
[106 142]
[107 141]
[110 139]
[111 138]
[112 137]
[113 136]
[115 129]
[116 128]
[117 127]
[151 173]
[152 172]
[153 171]
[154 170]
[155 169]
[156 168]
[157 167]
[158 166]
[191 206]
[193 205]
[194 204]
[195 203]
[196 202]
] def

init

% Start Annotations
56 212 0.0 0.6 colorpair
57 211 0.0 1 colorpair
58 210 0.0 1 colorpair
59 209 0.0 1 colorpair
60 208 0.0 0.6 colorpair
66 101 0.0 0.6 colorpair
67 100 0.0 1 colorpair
68 99 0.0 1 colorpair
69 98 0.16 1 colorpair
70 97 0.0 1 colorpair
71 96 0.0 1 colorpair
72 95 0.0 0.6 colorpair
77 91 0.16 1 colorpair
78 90 0.0 1 colorpair
79 89 0.0 0.6 colorpair
80 88 0.16 1 colorpair
102 146 0.0 1 colorpair
103 145 0.0 1 colorpair
104 144 0.0 1 colorpair
105 143 0.0 1 colorpair
106 142 0.0 1 colorpair
107 141 0.0 0.6 colorpair
110 139 0.0 0.6 colorpair
111 138 0.16 1 colorpair
112 137 0.0 0.6 colorpair
113 136 0.0 1 colorpair
115 129 0.0 1 colorpair
116 128 0.0 1 colorpair
117 127 0.0 1 colorpair
151 173 0.0 1 colorpair
152 172 0.0 1 colorpair
153 171 0.0 1 colorpair
154 170 0.0 1 colorpair
155 169 0.0 1 colorpair
156 168 0.0 1 colorpair
157 167 0.16 1 colorpair
158 166 0.16 1 colorpair
191 206 0.0 1 colorpair
193 205 0.0 1 colorpair
194 204 0.0 0.6 colorpair
195 203 0.0 1 colorpair
196 202 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
56 212 1 gmark
60 208 1 gmark
66 101 1 gmark
98 cmark
72 95 1 gmark
77 cmark
79 89 1 gmark
80 cmark
107 141 1 gmark
110 139 1 gmark
111 cmark
138 cmark
112 137 1 gmark
157 cmark
167 cmark
158 cmark
166 cmark
194 204 1 gmark

% End Annotations
showpage
end
%%EOF
