%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 06:13:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUGCUGUGAGGCGUGUUUAUGAUUUGUCUGACGCUGUUGAUCUUCACCUGGAUGACGCGCGACUCGCUGUGCGAGCUGCACUUCAGAAACGAGAAAACGGAGGUGGCGGCAAUGUUGGCUUACGAAGCA___GGAAAGU____AGC_AAUAUUGGCGGGG_GGCAUUCCCCGCCUCUCCAGAG__GGA______UGGUUAAGCCUCAACGCACCCUUAUCAAUGGCCCG\
) } def
/len { sequence length } bind def

/coor [
[-388.24679565 668.12860107]
[-403.08187866 670.35485840]
[-417.97848511 672.12316895]
[-432.92248535 673.43194580]
[-447.89968872 674.27990723]
[-462.89590454 674.66619873]
[-477.89691162 674.59057617]
[-492.88845825 674.05297852]
[-507.85635376 673.05395508]
[-522.78637695 671.59448242]
[-537.66436768 669.67596436]
[-552.47625732 667.30017090]
[-567.20788574 664.46936035]
[-581.84545898 661.18621826]
[-596.37487793 657.45385742]
[-610.78253174 653.27587891]
[-625.05468750 648.65618896]
[-639.17779541 643.59912109]
[-653.13848877 638.10961914]
[-666.92346191 632.19274902]
[-680.51971436 625.85418701]
[-693.91436768 619.09991455]
[-707.09460449 611.93634033]
[-720.04803467 604.37030029]
[-732.76232910 596.40899658]
[-745.22534180 588.05987549]
[-757.42541504 579.33093262]
[-769.35089111 570.23040771]
[-780.99041748 560.76696777]
[-792.33300781 550.94958496]
[-803.36791992 540.78753662]
[-814.08465576 530.29052734]
[-824.47302246 519.46844482]
[-834.52319336 508.33157349]
[-844.22564697 496.89050293]
[-853.57116699 485.15606689]
[-862.55090332 473.13940430]
[-871.15631104 460.85192871]
[-879.37927246 448.30526733]
[-887.21191406 435.51132202]
[-894.64691162 422.48220825]
[-901.67712402 409.23034668]
[-908.29589844 395.76828003]
[-914.49694824 382.10876465]
[-920.27447510 368.26477051]
[-925.62286377 354.24938965]
[-930.53717041 340.07598877]
[-935.01263428 325.75796509]
[-939.04504395 311.30889893]
[-942.63061523 296.74252319]
[-945.76593018 282.07263184]
[-948.44793701 267.31314087]
[-950.67419434 252.47807312]
[-952.44250488 237.58146667]
[-953.75128174 222.63748169]
[-954.59924316 207.66027832]
[-954.98553467 192.66404724]
[-954.90985107 177.66305542]
[-954.37225342 162.67149353]
[-953.37322998 147.70361328]
[-951.91375732 132.77359009]
[-949.99523926 117.89558411]
[-947.61938477 103.08371735]
[-944.78857422 88.35204315]
[-941.50543213 73.71453094]
[-937.77313232 59.18507004]
[-933.59509277 44.77743149]
[-928.97540283 30.50529289]
[-923.91833496 16.38218498]
[-918.42877197 2.42150807]
[-912.51190186 -11.36349678]
[-906.17333984 -24.95975304]
[-899.41906738 -38.35436249]
[-892.25555420 -51.53462219]
[-884.68951416 -64.48802948]
[-876.72814941 -77.20229340]
[-868.37902832 -89.66535950]
[-859.65008545 -101.86540222]
[-850.54956055 -113.79085541]
[-841.08612061 -125.43039703]
[-831.26867676 -136.77297974]
[-821.10662842 -147.80787659]
[-810.60961914 -158.52458191]
[-799.78753662 -168.91294861]
[-788.65069580 -178.96313477]
[-777.20959473 -188.66558838]
[-765.47515869 -198.01110840]
[-753.45849609 -206.99082947]
[-741.17102051 -215.59623718]
[-728.62432861 -223.81918335]
[-715.83038330 -231.65184021]
[-702.80126953 -239.08679199]
[-689.54937744 -246.11698914]
[-676.08734131 -252.73576355]
[-662.42779541 -258.93682861]
[-648.58380127 -264.71429443]
[-634.56842041 -270.06271362]
[-620.39501953 -274.97698975]
[-606.07702637 -279.45245361]
[-591.62792969 -283.48489380]
[-577.06152344 -287.07043457]
[-562.39166260 -290.20571899]
[-547.63214111 -292.88772583]
[-532.79711914 -295.11398315]
[-517.90051270 -296.88229370]
[-502.95648193 -298.19107056]
[-487.97927856 -299.03900146]
[-472.98306274 -299.42529297]
[-457.98208618 -299.34960938]
[-442.99050903 -298.81198120]
[-428.02261353 -297.81298828]
[-413.09259033 -296.35348511]
[-398.21459961 -294.43493652]
[-383.40274048 -292.05911255]
[-368.67108154 -289.22827148]
[-354.03356934 -285.94512939]
[-339.50408936 -282.21276855]
[-325.09646606 -278.03475952]
[-310.82434082 -273.41503906]
[-296.70123291 -268.35800171]
[-282.74053955 -262.86843872]
[-268.95553589 -256.95153809]
[-255.35929871 -250.61296082]
[-241.96469116 -243.85868835]
[-228.78443909 -236.69512939]
[-215.83102417 -229.12907410]
[-203.11677551 -221.16770935]
[-190.65370178 -212.81858826]
[-178.45367432 -204.08963013]
[-166.52822876 -194.98910522]
[-154.88868713 -185.52565002]
[-143.54611206 -175.70823669]
[-132.51123047 -165.54618835]
[-121.79452515 -155.04914856]
[-111.40615845 -144.22705078]
[-101.35598755 -133.09019470]
[-91.65354156 -121.64910889]
[-82.30802917 -109.91466522]
[-73.32830811 -97.89799500]
[-64.72290802 -85.61048889]
[-56.49997711 -73.06381226]
[-48.66732407 -60.26985550]
[-41.23237610 -47.24076080]
[-34.20218658 -33.98888397]
[-27.58342552 -20.52680016]
[-21.38236809 -6.86727571]
[-15.60489845 6.97673321]
[-10.25649548 20.99209404]
[-5.34223318 35.16551208]
[-0.86677295 49.48354340]
[3.16563988 63.93260574]
[6.75118017 78.49899292]
[9.88644695 93.16888428]
[12.56846619 107.92837524]
[27.40236664 105.70230865]
[42.23626709 103.47624207]
[57.07016754 101.25016785]
[71.82022858 98.52329254]
[86.46953583 95.29873657]
[96.92077637 86.01094055]
[110.30590820 90.05195618]
[124.95521545 86.82740021]
[132.64996338 81.93312836]
[139.82467651 83.65978241]
[151.71453857 72.36538696]
[167.36184692 77.27395630]
[170.66998291 93.33596802]
[158.23583984 104.02820587]
[142.85058594 98.35140991]
[128.17977905 101.47670746]
[113.53046417 104.70126343]
[103.07922363 113.98905945]
[89.69409180 109.94804382]
[75.04478455 113.17259979]
[86.14209747 123.26465607]
[85.30965424 138.24153137]
[73.16227722 147.04161072]
[58.67179108 143.16528320]
[52.54059982 129.47557068]
[59.29623795 116.08406830]
[44.46233749 118.31014252]
[29.62843704 120.53620911]
[14.79453564 122.76227570]
[16.56289673 137.65887451]
[17.87167740 152.60285950]
[18.71963501 167.58007812]
[19.10596848 182.57629395]
[19.03030777 197.57728577]
[18.49272537 212.56884766]
[17.49373436 227.53674316]
[16.03427696 242.46676636]
[14.11574268 257.34475708]
[11.73994827 272.15664673]
[8.90914822 286.88830566]
[5.62602806 301.52581787]
[1.89370131 316.05529785]
[-2.28429103 330.46292114]
[-6.90398645 344.73507690]
[-11.96100235 358.85818481]
[-17.45054245 372.81887817]
[-23.36739922 386.60388184]
[-29.70595932 400.20016479]
[-36.46021271 413.59478760]
[-43.62374878 426.77505493]
[-51.18977356 439.72845459]
[-59.15111542 452.44274902]
[-67.50021362 464.90582275]
[-76.22915649 477.10586548]
[-85.32966614 489.03131104]
[-94.79309845 500.67086792]
[-104.61048126 512.01348877]
[-114.77250671 523.04840088]
[-125.26953125 533.76507568]
[-136.09159851 544.15350342]
[-147.22845459 554.20367432]
[-158.66950989 563.90612793]
[-170.40394592 573.25170898]
[-182.42059326 582.23144531]
[-194.70808411 590.83685303]
[-207.25474548 599.05981445]
[-220.04869080 606.89245605]
[-233.07777405 614.32745361]
[-246.32963562 621.35766602]
[-259.79171753 627.97644043]
[-273.45123291 634.17755127]
[-287.29522705 639.95501709]
[-301.31057739 645.30346680]
[-315.48397827 650.21771240]
[-329.80200195 654.69323730]
[-344.25106812 658.72564697]
[-358.81744385 662.31121826]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[154 183]
[155 182]
[156 181]
[157 180]
[158 174]
[159 173]
[161 171]
[162 170]
[164 169]
] def

init

% Start Annotations
159 173 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
154 183 3 gmark
154 cmark
183 cmark
155 182 5 gmark
155 cmark
182 cmark
156 181 5 gmark
181 cmark
157 180 3 gmark
157 cmark
180 cmark
158 174 5 gmark
158 cmark
174 cmark
159 173 2 gmark
161 171 7 gmark
161 cmark
171 cmark
162 170 3 gmark
162 cmark
170 cmark
164 169 6 gmark
164 cmark
169 cmark

% End Annotations
showpage
end
%%EOF
