%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 06:08:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_UGAAGGACAAUACUUUUAUCUGGUGCGUUAUUAUUGUCUGCGUGACGCUAUUAAUGUUCACCACCCUCUCACGGGAAACGCUUUGCGAGCUGCGCUUGCGGGGCGCGAGCAUGGAGGUUGUCGCUUCACUGGCUUGUAAAUCC___\
) } def
/len { sequence length } bind def

/coor [
[164.79725647 393.37875366]
[176.86311340 384.29077148]
[171.56695557 370.25683594]
[166.27078247 356.22293091]
[160.97462463 342.18902588]
[155.67845154 328.15512085]
[150.23364258 314.17819214]
[144.64079285 300.25985718]
[139.04794312 286.34152222]
[133.45510864 272.42318726]
[129.42973328 269.73754883]
[127.08755493 264.46374512]
[127.93411255 257.79354858]
[122.93701172 243.65037537]
[117.93991852 229.50721741]
[112.94281769 215.36405945]
[107.94572449 201.22088623]
[102.94862366 187.07772827]
[97.95153046 172.93457031]
[92.95442963 158.79141235]
[87.80751038 144.70207214]
[82.51134491 130.66816711]
[71.35707855 120.63909912]
[56.84107971 116.85942841]
[42.32508850 113.07975769]
[27.80909348 109.30008698]
[13.21614361 105.82937622]
[-1.44718480 102.66918182]
[-16.11051369 99.50899506]
[-30.77384186 96.34880829]
[-45.43717194 93.18862152]
[-60.55768967 97.84484863]
[-71.36920929 87.59983826]
[-86.03253937 84.43964386]
[-101.15306091 89.09587860]
[-111.96458435 78.85086060]
[-126.62791443 75.69067383]
[-141.29124451 72.53048706]
[-155.95457458 69.37030029]
[-170.15953064 76.82672882]
[-184.78727722 70.23821259]
[-188.61665344 54.65887833]
[-178.71008301 42.03987122]
[-162.66703796 42.06140900]
[-152.79437256 54.70697021]
[-138.13105774 57.86715698]
[-123.46772003 61.02734756]
[-108.80439758 64.18753815]
[-94.73269653 59.30527115]
[-82.87235260 69.77632141]
[-68.20902252 72.93650818]
[-54.13732529 68.05424500]
[-42.27698135 78.52529144]
[-27.61365318 81.68547821]
[-12.95032406 84.84566498]
[1.71300423 88.00585938]
[16.37633324 91.16604614]
[20.85553169 89.33489227]
[26.53648376 90.34756470]
[31.58876419 94.78409576]
[46.10475922 98.56376648]
[60.62075043 102.34343719]
[75.13674927 106.12310791]
[71.52130890 89.12416077]
[80.04026794 70.80792999]
[77.81962585 55.97321701]
[75.59898376 41.13850021]
[62.74494553 31.94343758]
[60.24011612 16.33890724]
[69.57056427 3.58280158]
[85.20070648 1.24309230]
[97.85745239 10.70788765]
[100.03178406 26.36189079]
[90.43370056 38.91786194]
[92.65434265 53.75257492]
[94.87497711 68.58728790]
[101.97267914 71.01064301]
[113.26773834 61.14039993]
[116.16808319 75.85735321]
[123.26578522 78.28070831]
[134.09512329 67.90162659]
[144.92446899 57.52254486]
[155.75379944 47.14346313]
[166.58314514 36.76437759]
[177.41249084 26.38529587]
[188.24183655 16.00621223]
[199.07116699 5.62713003]
[209.90051270 -4.75195312]
[220.72985840 -15.13103580]
[231.55918884 -25.51011848]
[242.38853455 -35.88920212]
[249.63999939 -51.21410370]
[266.37341309 -48.48838806]
[268.38647461 -31.65438080]
[252.76762390 -25.05986023]
[241.93827820 -14.68077755]
[231.10893250 -4.30169487]
[220.27960205 6.07738829]
[209.45025635 16.45647049]
[198.62091064 26.83555412]
[187.79156494 37.21463776]
[176.96223450 47.59371948]
[166.13288879 57.97280502]
[155.30354309 68.35188293]
[144.47421265 78.73097229]
[133.64486694 89.11005402]
[130.05229187 111.31250763]
[114.78078461 124.78595734]
[96.54525757 125.37200165]
[101.84142303 139.40591431]
[107.83998108 146.38847351]
[107.09759521 153.79431152]
[112.09468842 167.93746948]
[117.09178925 182.08062744]
[122.08888245 196.22380066]
[127.08598328 210.36695862]
[132.08308411 224.51011658]
[137.08016968 238.65327454]
[142.07727051 252.79644775]
[147.37344360 266.83035278]
[152.96627808 280.74868774]
[158.55912781 294.66702271]
[164.15197754 308.58535767]
[170.29739380 315.43902588]
[169.71237183 322.85894775]
[175.00852966 336.89285278]
[180.30470276 350.92675781]
[185.60086060 364.96069336]
[190.89703369 378.99459839]
[205.95874023 377.84509277]
[220.73391724 380.98684692]
[234.02481079 388.16522217]
[244.75396729 398.79827881]
[252.05163574 412.02404785]
[255.32621765 426.77035522]
[254.31227112 441.84179688]
[249.09197998 456.01660156]
[240.08853149 468.14569092]
[228.03179932 477.24578857]
[213.89916992 482.57922363]
[198.83630371 483.71359253]
[184.06428528 480.55697632]
[170.78062439 473.36526489]
[160.06214905 462.72143555]
[152.77777100 449.48834229]
[149.51800537 434.73876953]
[150.54708862 419.66833496]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 129]
[3 128]
[4 127]
[5 126]
[6 125]
[7 123]
[8 122]
[9 121]
[10 120]
[13 119]
[14 118]
[15 117]
[16 116]
[17 115]
[18 114]
[19 113]
[20 112]
[21 110]
[22 109]
[23 63]
[24 62]
[25 61]
[26 60]
[27 57]
[28 56]
[29 55]
[30 54]
[31 53]
[33 51]
[34 50]
[36 48]
[37 47]
[38 46]
[39 45]
[65 76]
[66 75]
[67 74]
[80 106]
[81 105]
[82 104]
[83 103]
[84 102]
[85 101]
[86 100]
[87 99]
[88 98]
[89 97]
[90 96]
[91 95]
] def

init

% Start Annotations
2 129 0.0 1 colorpair
3 128 0.0 1 colorpair
4 127 0.0 1 colorpair
5 126 0.0 1 colorpair
6 125 0.0 1 colorpair
7 123 0.0 1 colorpair
8 122 0.0 1 colorpair
9 121 0.0 1 colorpair
10 120 0.0 1 colorpair
13 119 0.0 1 colorpair
14 118 0.0 1 colorpair
15 117 0.0 1 colorpair
16 116 0.0 1 colorpair
17 115 0.0 1 colorpair
18 114 0.0 1 colorpair
19 113 0.0 1 colorpair
20 112 0.0 1 colorpair
21 110 0.0 1 colorpair
22 109 0.0 1 colorpair
23 63 0.0 1 colorpair
24 62 0.0 1 colorpair
25 61 0.0 1 colorpair
26 60 0.0 1 colorpair
27 57 0.0 1 colorpair
28 56 0.0 1 colorpair
29 55 0.0 1 colorpair
30 54 0.0 1 colorpair
31 53 0.0 1 colorpair
33 51 0.0 1 colorpair
34 50 0.0 1 colorpair
36 48 0.0 1 colorpair
37 47 0.0 1 colorpair
38 46 0.0 1 colorpair
39 45 0.0 1 colorpair
65 76 0.0 1 colorpair
66 75 0.0 1 colorpair
67 74 0.0 1 colorpair
80 106 0.0 1 colorpair
81 105 0.0 1 colorpair
82 104 0.0 1 colorpair
83 103 0.0 1 colorpair
84 102 0.0 1 colorpair
85 101 0.0 1 colorpair
86 100 0.0 1 colorpair
87 99 0.0 1 colorpair
88 98 0.0 1 colorpair
89 97 0.0 1 colorpair
90 96 0.0 1 colorpair
91 95 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
