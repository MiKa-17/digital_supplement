%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 09:42:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__UAAGAGGCUAUCCUGAUGUUGUCUAGGCAUACAGGUGGCCUCGUG_______GGUUAAUGAAAAUUAA____C____UACGGGGCUUUCUGCUUUCUGCCACACAACACGGUAACAAACCACCUUCACGUCAUGAGGCAAAAAGCCUCAAGCGCC_______________________\
) } def
/len { sequence length } bind def

/coor [
[43.73625183 258.75991821]
[28.69486046 252.59718323]
[14.31755829 245.01325989]
[0.73824692 236.07876587]
[-11.91660500 225.87692261]
[-23.52913666 214.50274658]
[-34.97318268 224.19984436]
[-46.41723251 233.89694214]
[-57.86127853 243.59403992]
[-69.30532074 253.29115295]
[-64.10961151 267.51190186]
[-64.09280396 282.62387085]
[-69.23761749 296.80313110]
[-78.90496826 308.34487915]
[-91.91327667 315.86856079]
[-106.68285370 318.48275757]
[-121.42774963 315.89099121]
[-134.37167358 308.42507935]
[-145.81571960 318.12216187]
[-157.25976562 327.81927490]
[-168.70382690 337.51635742]
[-168.44749451 353.15185547]
[-178.34153748 365.26144409]
[-193.71424866 368.12738037]
[-207.30712891 360.39642334]
[-212.70202637 345.71890259]
[-207.35163879 331.02511597]
[-193.78225708 323.25302124]
[-178.40092468 326.07232666]
[-166.95687866 316.37521362]
[-155.51283264 306.67813110]
[-144.06878662 296.98101807]
[-149.30876160 282.98715210]
[-149.44509888 268.01684570]
[-144.44201660 253.87670898]
[-134.88516235 242.27980042]
[-121.91310883 234.63807678]
[-107.08169556 231.89048767]
[-92.17745209 234.38760376]
[-79.00242615 241.84710693]
[-67.55838013 232.14999390]
[-56.11433411 222.45289612]
[-44.67028809 212.75579834]
[-33.22623825 203.05868530]
[-41.24515533 191.76127625]
[-48.30850220 179.84304810]
[-54.36849213 167.38467407]
[-59.38412857 154.47039795]
[-63.32147598 141.18763733]
[-66.15390015 127.62621307]
[-67.86223602 113.87788391]
[-68.43492126 100.03567505]
[-67.86809540 86.19322205]
[-66.16558838 72.44417572]
[-63.33890915 58.88155746]
[-59.40718842 45.59711456]
[-54.39702225 32.68072891]
[-48.34231186 20.21977997]
[-41.28401566 8.29857063]
[-33.26988602 -3.00224757]
[-24.35413742 -13.60622120]
[-14.59709454 -23.44161034]
[-4.06476259 -32.44187546]
[7.17160225 -40.54612732]
[19.03598213 -47.69953537]
[31.44811249 -53.85371017]
[44.32401657 -58.96701050]
[57.57659149 -63.00484467]
[71.11617279 -65.93989563]
[84.85115814 -67.75231171]
[98.68863678 -68.42982483]
[112.53498840 -67.96784973]
[126.29653168 -66.36952209]
[139.88017273 -63.64564514]
[153.19401550 -59.81465149]
[166.14796448 -54.90245819]
[178.65441895 -48.94229507]
[190.62873840 -41.97449112]
[201.98994446 -34.04617691]
[212.66113281 -25.21100044]
[222.57014465 -15.52872658]
[231.64991760 -5.06486273]
[239.83903503 6.10980034]
[252.65238953 -1.68879437]
[260.41815186 -15.47297287]
[275.31274414 -15.48058033]
[288.12609863 -23.27917480]
[300.93945312 -31.07776833]
[296.73196411 -45.55990982]
[296.41690063 -60.62597275]
[300.00970459 -75.24881744]
[307.25964355 -88.43310547]
[317.66720581 -99.28298187]
[330.51867676 -107.06301880]
[344.93484497 -111.24800873]
[359.93139648 -111.55844879]
[374.48587036 -107.97917938]
[387.60763550 -100.76001740]
[398.40509033 -90.39833069]
[411.21844482 -98.19692993]
[424.03179932 -105.99552155]
[436.84515381 -113.79411316]
[431.30786133 -127.77433014]
[428.21304321 -142.48928833]
[427.64974976 -157.51562500]
[429.63421631 -172.42098999]
[434.10931396 -186.77653503]
[440.94625854 -200.16921997]
[449.94839478 -212.21369934]
[460.85668945 -222.56344604]
[473.35729980 -230.92066956]
[487.09051514 -237.04490662]
[501.66125488 -240.75996399]
[516.65026855 -241.95895386]
[531.62628174 -240.60737610]
[546.15844727 -236.74411011]
[559.82855225 -230.48031616]
[572.24340820 -221.99621582]
[583.04571533 -211.53590393]
[591.92474365 -199.40036011]
[598.62493896 -185.93875122]
[602.95361328 -171.53837585]
[604.78613281 -156.61357117]
[604.06982422 -141.59375000]
[600.82531738 -126.91107178]
[595.14593506 -112.98797607]
[587.19506836 -100.22505951]
[577.20153809 -88.98954773]
[565.45281982 -79.60469055]
[552.28692627 -72.34053040]
[538.08276367 -67.40605164]
[523.24890137 -64.94323730]
[508.21224976 -65.02295685]
[493.40536499 -67.64289856]
[479.25427246 -72.72769165]
[466.16616821 -80.13104248]
[454.51760864 -89.63993073]
[444.64373779 -100.98076630]
[431.83038330 -93.18217468]
[419.01702881 -85.38357544]
[406.20367432 -77.58498383]
[410.44699097 -63.23423386]
[410.83120728 -48.26261902]
[407.32415771 -33.69055176]
[400.15908813 -20.51276398]
[389.81912231 -9.63040924]
[377.00476074 -1.78943813]
[362.58636475 2.47053289]
[347.54507446 2.85335660]
[332.90606689 -0.67306703]
[319.66864014 -7.87419271]
[308.73803711 -18.26441956]
[295.92468262 -10.46582508]
[283.11132812 -2.66723061]
[276.26208496 10.55914021]
[260.45098877 11.12455463]
[247.63763428 18.92314911]
[254.76539612 33.53197861]
[260.45178223 48.75984573]
[264.64379883 64.46492767]
[267.30245972 80.50096893]
[268.40295410 96.71860504]
[267.93505859 112.96680450]
[265.90313721 129.09423828]
[262.32608032 144.95069885]
[257.23724365 160.38853455]
[250.68399048 175.26394653]
[242.72735596 189.43838501]
[233.44146729 202.77986145]
[222.91278076 215.16412354]
[211.23936462 226.47579956]
[198.52993774 236.60957336]
[184.90286255 245.47105408]
[170.48506165 252.97770691]
[155.41081238 259.05963135]
[139.82049561 263.66018677]
[123.85932159 266.73648071]
[107.67593384 268.25991821]
[91.42105865 268.21630859]
[75.24608612 266.60601807]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 44]
[7 43]
[8 42]
[9 41]
[10 40]
[18 32]
[19 31]
[20 30]
[21 29]
[83 157]
[84 156]
[86 154]
[87 153]
[88 152]
[99 141]
[100 140]
[101 139]
[102 138]
] def

init

% Start Annotations
6 44 0.0 0.6 colorpair
7 43 0.0 0.6 colorpair
8 42 0.0 0.6 colorpair
9 41 0.0 0.6 colorpair
10 40 0.0 0.6 colorpair
19 31 0.0 0.6 colorpair
20 30 0.0 0.6 colorpair
21 29 0.32 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
6 44 1 gmark
7 43 1 gmark
8 42 1 gmark
9 41 1 gmark
10 40 1 gmark
18 32 3 gmark
18 cmark
32 cmark
19 31 1 gmark
20 30 1 gmark
21 29 1 gmark
21 cmark
29 cmark
83 157 7 gmark
84 156 7 gmark
86 154 7 gmark
87 153 7 gmark
88 152 7 gmark
99 141 7 gmark
100 140 7 gmark
101 139 7 gmark
102 138 7 gmark

% End Annotations
showpage
end
%%EOF
