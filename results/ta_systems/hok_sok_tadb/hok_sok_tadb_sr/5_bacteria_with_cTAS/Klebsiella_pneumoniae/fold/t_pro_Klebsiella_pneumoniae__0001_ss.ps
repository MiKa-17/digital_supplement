%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 09:42:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_______________AUGAAACUGCCGCGAAACGCUCUGGUCUGGUGCUUAUUAAUAGUGUGUUUCACGCUGUUGAUAUUCACCUGGCUGACCCGGAACUCGCUAUGUGAAAUCCGGCUCAGGGACGGAAACAGGGAGGUGGCGGCAUUCCUGGCUUACGAAUCCAAC_AG\
) } def
/len { sequence length } bind def

/coor [
[146.28239441 481.56246948]
[131.36007690 483.07769775]
[116.39001465 484.00958252]
[101.39498901 484.35665894]
[86.39783478 484.11843872]
[71.42140198 483.29525757]
[56.48848724 481.88836670]
[41.62182999 479.89996338]
[26.84407616 477.33300781]
[12.17772579 474.19143677]
[-2.35488582 470.48004150]
[-16.73162842 466.20446777]
[-30.93060684 461.37121582]
[-44.93020248 455.98767090]
[-58.70909119 450.06201172]
[-72.24629211 443.60327148]
[-85.52119446 436.62124634]
[-98.51357269 429.12664795]
[-111.20365143 421.13082886]
[-123.57209778 412.64596558]
[-135.60008240 403.68499756]
[-147.26928711 394.26159668]
[-158.56195068 384.39004517]
[-169.46086121 374.08544922]
[-179.94943237 363.36343384]
[-190.01167297 352.24038696]
[-199.63229370 340.73321533]
[-208.79660034 328.85943604]
[-217.49067688 316.63714600]
[-225.70126343 304.08496094]
[-233.41586304 291.22198486]
[-240.62272644 278.06781006]
[-247.31088257 264.64245605]
[-253.47013855 250.96638489]
[-259.09112549 237.06040955]
[-264.16525269 222.94572449]
[-268.68484497 208.64381409]
[-272.64297485 194.17646790]
[-276.03363037 179.56568909]
[-278.85165405 164.83375549]
[-281.09274292 150.00308228]
[-282.75347900 135.09626770]
[-283.83139038 120.13600159]
[-284.32473755 105.14507294]
[-284.23284912 90.14631653]
[-283.55584717 75.16255951]
[-282.29473877 60.21662903]
[-280.45147705 45.33127975]
[-278.02880859 30.52918243]
[-275.03051758 15.83287811]
[-271.46109009 1.26474643]
[-267.32598877 -13.15302849]
[-262.63150024 -27.39848900]
[-257.38479614 -41.44994354]
[-251.59385681 -55.28599548]
[-245.26750183 -68.88556671]
[-238.41535950 -82.22795868]
[-231.04786682 -95.29284668]
[-223.17623901 -108.06033325]
[-214.81246948 -120.51098633]
[-205.96929932 -132.62582397]
[-196.66017151 -144.38642883]
[-186.89929199 -155.77485657]
[-176.70150757 -166.77378845]
[-166.08236694 -177.36647034]
[-155.05801392 -187.53677368]
[-143.64524841 -197.26919556]
[-131.86145020 -206.54893494]
[-119.72457886 -215.36184692]
[-107.25309753 -223.69451904]
[-94.46599579 -231.53425598]
[-81.38276672 -238.86911011]
[-68.02331543 -245.68794250]
[-54.40799332 -251.98033142]
[-40.55753326 -257.73672485]
[-26.49302673 -262.94833374]
[-12.23589230 -267.60723877]
[2.19215798 -271.70635986]
[16.76915359 -275.23941040]
[31.47289467 -278.20101929]
[46.28099442 -280.58673096]
[61.17089462 -282.39285278]
[76.11992645 -283.61663818]
[91.10532379 -284.25625610]
[106.10427094 -284.31069946]
[121.09391785 -283.77993774]
[136.05143738 -282.66470337]
[150.95407104 -280.96676636]
[165.77909851 -278.68865967]
[180.50395203 -275.83386230]
[195.10621643 -272.40676880]
[209.56365967 -268.41253662]
[223.85424805 -263.85726929]
[237.95622253 -258.74792480]
[251.84811401 -253.09225464]
[265.50875854 -246.89888000]
[278.91738892 -240.17724609]
[292.05352783 -232.93757629]
[304.89721680 -225.19088745]
[317.42886353 -216.94900513]
[329.62942505 -208.22445679]
[341.48028564 -199.03051758]
[352.96340942 -189.38122559]
[364.06134033 -179.29124451]
[374.75711060 -168.77595520]
[385.03448486 -157.85136414]
[394.87780762 -146.53410339]
[404.27209473 -134.84140015]
[413.20300293 -122.79109192]
[421.65695190 -110.40150452]
[429.62106323 -97.69151306]
[437.08325195 -84.68046570]
[444.03207397 -71.38818359]
[450.45703125 -57.83489990]
[456.34829712 -44.04126358]
[461.69686890 -30.02827835]
[466.49465942 -15.81728077]
[470.73434448 -1.42991161]
[474.40945435 13.11191750]
[477.51440430 27.78606415]
[480.04446411 42.57017899]
[481.99578857 57.44174957]
[483.36538696 72.37812805]
[484.15118408 87.35657501]
[484.35198975 102.35427094]
[483.96746826 117.34838867]
[482.99826050 132.31608582]
[481.44577026 147.23455811]
[479.31243896 162.08111572]
[476.60144043 176.83312988]
[473.31698608 191.46813965]
[469.46398926 205.96385193]
[465.04840088 220.29820251]
[460.07687378 234.44935608]
[454.55700684 248.39578247]
[448.49722290 262.11621094]
[441.90673828 275.58975220]
[434.79559326 288.79592896]
[427.17459106 301.71459961]
[419.05535889 314.32604980]
[410.45025635 326.61114502]
[401.37240601 338.55117798]
[391.83560181 350.12789917]
[381.85440063 361.32373047]
[392.65295410 371.73483276]
[403.45147705 382.14596558]
[418.98199463 380.31893921]
[432.02496338 388.94534302]
[436.42193604 403.95202637]
[430.09677124 418.25329590]
[416.03604126 425.09652710]
[400.87878418 421.25057983]
[391.78179932 408.53134155]
[393.04037476 392.94448853]
[382.24182129 382.53338623]
[371.44326782 372.12228394]
[360.61944580 382.50573730]
[349.39874268 392.45898438]
[337.79824829 401.96685791]
[325.83563232 411.01489258]
[313.52908325 419.58929443]
[300.89736938 427.67700195]
[287.95974731 435.26574707]
[274.73587036 442.34393311]
[261.24591064 448.90075684]
[247.51040649 454.92626953]
[233.55024719 460.41131592]
[219.38673401 465.34750366]
[205.04139709 469.72732544]
[190.53611755 473.54409790]
[175.89295959 476.79205322]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[144 156]
[145 155]
[146 154]
] def

init

% Start Annotations
144 156 0.32 0.2 colorpair
145 155 0.0 0.6 colorpair
146 154 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
144 156 2 gmark
144 cmark
156 cmark
145 155 1 gmark
146 cmark
154 cmark

% End Annotations
showpage
end
%%EOF
