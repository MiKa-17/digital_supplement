%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 10:22:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAAGGCUACCGUAAUGUUGUUCGGCAUUACAGAGAGCCUCGUAUUAAAUAACAUUGAUACGGGGCUUUUCUCUGUCUACUCUCAACCUGAAAUAAGCACCUAAAGCAGACAGCUUCAAGCACC\
) } def
/len { sequence length } bind def

/coor [
[102.28797913 227.37159729]
[87.13889313 229.55422974]
[72.71459961 224.43579102]
[62.32970047 213.19245911]
[58.37055969 198.40788269]
[61.74696350 183.47944641]
[71.68303680 171.83757019]
[85.89554596 166.15750122]
[87.37734222 151.23088074]
[88.85913849 136.30424500]
[82.99575806 133.95545959]
[77.60279846 130.66728210]
[72.82945251 126.53070831]
[68.80777740 121.66016388]
[55.03998566 127.61397552]
[41.27219391 133.56779480]
[27.50440216 139.52160645]
[13.73660946 145.47541809]
[-0.03118288 151.42922974]
[-13.79897594 157.38304138]
[-27.56676865 163.33685303]
[-36.90796661 176.81550598]
[-53.22691345 175.19563293]
[-59.73607635 160.14363098]
[-49.73938751 147.14370728]
[-33.52058029 149.56906128]
[-19.75278854 143.61524963]
[-5.98499584 137.66143799]
[7.78279686 131.70762634]
[21.55058861 125.75380707]
[35.31838226 119.79999542]
[49.08617401 113.84618378]
[62.85396576 107.89237213]
[64.12271118 87.55262756]
[75.72373962 70.79759216]
[68.60170746 57.59620667]
[61.47967911 44.39481735]
[54.35765076 31.19342613]
[47.23562241 17.99203491]
[40.11359024 4.79064560]
[32.99156189 -8.41074371]
[25.86953354 -21.61213493]
[18.74750328 -34.81352234]
[11.62547398 -48.01491547]
[4.50344467 -61.21630478]
[-2.61858487 -74.41769409]
[-9.74061394 -87.61908722]
[-16.86264420 -100.82047272]
[-23.98467255 -114.02186584]
[-31.10670280 -127.22325134]
[-46.31800842 -131.51181030]
[-53.96855164 -145.34094238]
[-49.51940536 -160.50605774]
[-35.61016464 -168.00996399]
[-20.49294090 -163.40072632]
[-13.13650894 -149.41293335]
[-17.90531349 -134.34527588]
[-10.78328323 -121.14389038]
[-3.66125369 -107.94250488]
[3.46077561 -94.74111176]
[10.58280468 -81.53972626]
[17.70483398 -68.33833313]
[24.82686424 -55.13694382]
[31.94889259 -41.93555450]
[39.07092285 -28.73416328]
[46.19295120 -15.53277397]
[53.31498337 -2.33138371]
[60.43701172 10.87000656]
[67.55904388 24.07139587]
[74.68106842 37.27278519]
[81.80310059 50.47417450]
[88.92513275 63.67556763]
[109.61280823 63.26158524]
[127.44652557 73.75489807]
[137.13162231 92.04013824]
[152.13047791 91.85462189]
[167.12933350 91.66909790]
[182.12818909 91.48357391]
[197.12704468 91.29804993]
[212.12590027 91.11252594]
[225.82931519 83.20513916]
[238.65130615 90.78443146]
[253.65016174 90.59890747]
[259.49319458 75.67417145]
[270.57357788 64.14660645]
[285.18524170 57.74876404]
[301.09454346 57.42659760]
[315.88171387 63.19974518]
[327.30886841 74.16297913]
[333.65872192 88.62801361]
[348.64837646 88.07156372]
[359.21643066 76.32028961]
[375.00274658 75.56705475]
[386.64163208 86.25873566]
[387.22790527 102.05214691]
[376.41378784 113.57733917]
[360.61505127 113.99662018]
[349.20483398 103.06123352]
[334.21517944 103.61769104]
[329.80895996 116.99914551]
[321.06741333 128.08554077]
[309.03189087 135.52302551]
[295.14758301 138.39437866]
[281.08996582 136.33213806]
[268.56262207 129.56549072]
[259.09082031 118.89495850]
[253.83567810 105.59776306]
[238.83683777 105.78328705]
[226.20622253 113.67740631]
[212.31141663 106.11138153]
[197.31256104 106.29690552]
[182.31370544 106.48242950]
[167.31484985 106.66794586]
[152.31600952 106.85346985]
[137.31715393 107.03899384]
[134.96980286 114.80642700]
[131.02583313 121.89783478]
[125.66530609 127.98944855]
[119.13297272 132.80314636]
[111.72708130 136.11914062]
[103.78576660 137.78604126]
[102.30397034 152.71267700]
[100.82217407 167.63929749]
[113.64055634 176.00277710]
[121.09384155 189.37092590]
[121.46931458 204.67182922]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 123]
[9 122]
[10 121]
[14 33]
[15 32]
[16 31]
[17 30]
[18 29]
[19 28]
[20 27]
[21 26]
[35 72]
[36 71]
[37 70]
[38 69]
[39 68]
[40 67]
[41 66]
[42 65]
[43 64]
[44 63]
[45 62]
[46 61]
[47 60]
[48 59]
[49 58]
[50 57]
[75 115]
[76 114]
[77 113]
[78 112]
[79 111]
[80 110]
[82 108]
[83 107]
[90 99]
[91 98]
] def

init

% Start Annotations
8 123 0.0 1 colorpair
9 122 0.0 1 colorpair
10 121 0.0 1 colorpair
14 33 0.0 1 colorpair
15 32 0.0 1 colorpair
16 31 0.0 1 colorpair
17 30 0.0 1 colorpair
18 29 0.0 1 colorpair
19 28 0.0 1 colorpair
20 27 0.0 1 colorpair
21 26 0.0 1 colorpair
35 72 0.0 1 colorpair
36 71 0.0 1 colorpair
37 70 0.0 1 colorpair
38 69 0.0 1 colorpair
39 68 0.0 1 colorpair
40 67 0.0 1 colorpair
41 66 0.0 1 colorpair
42 65 0.0 1 colorpair
43 64 0.0 1 colorpair
44 63 0.0 1 colorpair
45 62 0.0 1 colorpair
46 61 0.0 1 colorpair
47 60 0.0 1 colorpair
48 59 0.0 1 colorpair
49 58 0.0 1 colorpair
50 57 0.0 1 colorpair
75 115 0.0 1 colorpair
76 114 0.0 1 colorpair
77 113 0.0 1 colorpair
78 112 0.0 1 colorpair
79 111 0.0 1 colorpair
80 110 0.0 1 colorpair
82 108 0.0 1 colorpair
83 107 0.0 1 colorpair
90 99 0.0 1 colorpair
91 98 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
