%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 09:55:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
____GCCGCAAAAAAUCGCAAUAUUUAGUUUGAUCAUUAUUUGUGUGACAUUACUCAUAUUCACGUGGAUAACAAGGGGUUCAAUCUGUAAACUCCAUAUCAAACGAGGUAAUACAGAGGUUGCGGCAAUCAUGGCUUACGAAUCCAG____\
) } def
/len { sequence length } bind def

/coor [
[200.35792542 502.08328247]
[203.57908630 487.38839722]
[209.44578552 473.53573608]
[217.75820923 460.99707031]
[228.23324585 450.19946289]
[240.51411438 441.51071167]
[234.24472046 427.88372803]
[227.97531128 414.25674438]
[221.70590210 400.62976074]
[215.43649292 387.00277710]
[209.16709900 373.37579346]
[197.79310608 371.81262207]
[188.50712585 364.85867310]
[183.70802307 354.16473389]
[184.70579529 342.36514282]
[191.36636353 332.42907715]
[185.66169739 318.55621338]
[170.29272461 320.66354370]
[154.88923645 318.73394775]
[140.49440002 312.89230347]
[128.08456421 303.52865601]
[118.50306702 291.27215576]
[112.40287018 276.94869995]
[110.20207977 261.52548218]
[112.05532837 246.04545593]
[117.84288025 231.55694580]
[127.17837524 219.04263306]
[139.43461609 209.35287476]
[133.44631958 195.60005188]
[127.45801544 181.84721375]
[121.46971893 168.09439087]
[115.48142242 154.34156799]
[109.49312592 140.58872986]
[103.50482941 126.83590698]
[85.48984528 122.84523773]
[74.21961975 108.23539734]
[74.93292236 89.79749298]
[63.15078354 80.51410675]
[51.36864853 71.23072052]
[39.58650970 61.94733429]
[27.80437279 52.66394806]
[16.02223587 43.38056564]
[4.24009848 34.09717941]
[-7.54203844 24.81379318]
[-19.32417488 15.53040791]
[-31.10631180 6.24702215]
[-42.88845062 -3.03636336]
[-54.67058563 -12.31974888]
[-68.36038971 -5.57052183]
[-83.62293243 -5.43804741]
[-97.42782593 -11.94862843]
[-107.03409576 -23.80958366]
[-110.53441620 -38.66591263]
[-107.23379517 -53.56788254]
[-97.78756714 -65.55669403]
[-84.07129669 -72.25195312]
[-68.80834961 -72.32432556]
[-55.02919769 -65.75942993]
[-45.46970749 -53.86073685]
[-42.02791977 -38.99074173]
[-45.38720322 -24.10188675]
[-33.60506439 -14.81850052]
[-21.82292747 -5.53511524]
[-10.04079056 3.74827027]
[1.74134696 13.03165627]
[13.52348423 22.31504059]
[25.30562019 31.59842682]
[37.08775711 40.88181305]
[48.86989594 50.16519928]
[60.65203094 59.44858170]
[72.43416595 68.73197174]
[84.21630859 78.01535034]
[88.48063660 75.51013184]
[93.12965393 73.82275391]
[98.00811768 73.00959015]
[102.95310211 73.09779358]
[108.65776825 59.22491074]
[114.36242676 45.35203171]
[120.06709290 31.47914886]
[125.77175903 17.60626984]
[131.47642517 3.73338866]
[122.56123352 -8.85720062]
[121.89111328 -24.27000427]
[129.67990112 -37.58684921]
[143.44219971 -44.55838394]
[158.78654480 -42.96001053]
[170.81658936 -33.30177307]
[175.69358826 -18.66556931]
[171.86132812 -3.72176695]
[160.54264832 6.76112461]
[145.34930420 9.43805218]
[139.64463806 23.31093216]
[133.93997192 37.18381500]
[128.23530579 51.05669403]
[122.53064728 64.92957306]
[116.82598114 78.80245209]
[125.80006409 91.82647705]
[125.96244049 107.64207458]
[117.25765991 120.84761047]
[123.24595642 134.60043335]
[129.23425293 148.35327148]
[135.22254944 162.10609436]
[141.21084595 175.85891724]
[147.19914246 189.61175537]
[153.18743896 203.36457825]
[167.53111267 201.02705383]
[182.00688171 202.20251465]
[195.76751709 206.81759644]
[208.00878906 214.59774780]
[218.01635742 225.08360291]
[225.20756531 237.65803528]
[229.16531372 251.58253479]
[229.66223145 266.04055786]
[226.67378235 280.18536377]
[220.37940979 293.18975830]
[211.15173340 304.29421997]
[199.53457642 312.85153198]
[205.23924255 326.72442627]
[222.95794678 333.29217529]
[230.18550110 350.40777588]
[222.79406738 367.10638428]
[229.06347656 380.73336792]
[235.33288574 394.36035156]
[241.60229492 407.98733521]
[247.87168884 421.61431885]
[254.14109802 435.24130249]
[268.72955322 431.56820679]
[283.74456787 430.63851929]
[298.67471313 432.48391724]
[313.01147461 437.04153442]
[326.26657104 444.15609741]
[337.98849487 453.58535767]
[347.77807617 465.00808716]
[355.30178833 478.03530884]
[360.30346680 492.22326660]
[362.61270142 507.08871460]
[362.15084839 522.12536621]
[358.93365479 536.82110596]
[353.07070923 550.67535400]
[344.76165771 563.21624756]
[334.28952026 574.01672363]
[322.01098633 582.70880127]
[308.34426880 588.99645996]
[293.75482178 592.66564941]
[278.73956299 593.59124756]
[263.80990601 591.74182129]
[249.47438049 587.18035889]
[236.22120667 580.06219482]
[224.50180054 570.62982178]
[214.71533203 559.20440674]
[207.19509888 546.17517090]
[202.19726562 531.98590088]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 126]
[7 125]
[8 124]
[9 123]
[10 122]
[11 121]
[16 118]
[17 117]
[28 105]
[29 104]
[30 103]
[31 102]
[32 101]
[33 100]
[34 99]
[37 72]
[38 71]
[39 70]
[40 69]
[41 68]
[42 67]
[43 66]
[44 65]
[45 64]
[46 63]
[47 62]
[48 61]
[76 96]
[77 95]
[78 94]
[79 93]
[80 92]
[81 91]
] def

init

% Start Annotations
6 126 0.0 0.2 colorpair
7 125 0.16 1 colorpair
8 124 0.0 0.2 colorpair
9 123 0.0 1 colorpair
10 122 0.0 1 colorpair
11 121 0.16 1 colorpair
16 118 0.0 0.2 colorpair
17 117 0.0 0.2 colorpair
28 105 0.16 1 colorpair
29 104 0.0 0.2 colorpair
30 103 0.0 0.2 colorpair
31 102 0.0 0.2 colorpair
32 101 0.0 0.2 colorpair
33 100 0.0 1 colorpair
34 99 0.0 1 colorpair
37 72 0.0 1 colorpair
38 71 0.0 0.2 colorpair
39 70 0.0 1 colorpair
40 69 0.16 1 colorpair
41 68 0.0 1 colorpair
42 67 0.0 0.2 colorpair
43 66 0.16 1 colorpair
44 65 0.0 1 colorpair
45 64 0.16 1 colorpair
46 63 0.16 1 colorpair
47 62 0.0 0.2 colorpair
48 61 0.16 1 colorpair
76 96 0.0 1 colorpair
77 95 0.16 1 colorpair
78 94 0.16 1 colorpair
79 93 0.0 0.2 colorpair
80 92 0.0 0.2 colorpair
81 91 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
6 126 2 gmark
7 cmark
125 cmark
8 124 2 gmark
11 cmark
16 118 2 gmark
17 117 2 gmark
28 cmark
105 cmark
29 104 2 gmark
30 103 2 gmark
31 102 2 gmark
32 101 2 gmark
38 71 2 gmark
69 cmark
42 67 2 gmark
66 cmark
45 cmark
64 cmark
63 cmark
47 62 2 gmark
48 cmark
61 cmark
95 cmark
78 cmark
79 93 2 gmark
80 92 2 gmark
81 91 2 gmark

% End Annotations
showpage
end
%%EOF
