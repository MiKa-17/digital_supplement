%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 10:21:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___AUGAAGC_AGCACAAAGCUAUGUUAGUCGCUCUGA__UCGUCAUCUGUAUCACCCUCUUAAUAUUCACACUGCUGACAAGAAAAGCCCUCUGCGAGGUGCGUAUCCGAAACGGCCAGAAGGAGGUGGCUGCUUUCAUGGCUUACGAAUCCGAG___\
) } def
/len { sequence length } bind def

/coor [
[109.75528717 277.08038330]
[117.02769470 263.86816406]
[127.35797882 252.88017273]
[140.09675598 244.80711365]
[135.46150208 230.54127502]
[130.82624817 216.27542114]
[126.19099426 202.00956726]
[121.41590881 187.78991699]
[116.50145721 173.61782837]
[111.58700562 159.44573975]
[106.39737701 154.12881470]
[106.71816254 144.94688416]
[102.08290863 130.68103027]
[97.44765472 116.41519165]
[90.43704224 113.75035858]
[85.10716248 127.77149963]
[71.08610535 122.44139862]
[76.41581726 108.42069244]
[69.40520477 105.75585938]
[56.46419144 113.34072113]
[43.52317429 120.92558289]
[30.58215904 128.51043701]
[17.64114189 136.09530640]
[4.70012712 143.68016052]
[-2.93155169 158.19531250]
[-19.32634544 158.57319641]
[-27.61869431 144.42509460]
[-19.27814293 130.30534363]
[-2.88473368 130.73915100]
[10.05628204 123.15428925]
[22.99729729 115.56942749]
[35.93831253 107.98456573]
[48.87932968 100.39970398]
[61.82034683 92.81484222]
[46.82715988 93.26693726]
[31.83397484 93.71902466]
[16.93508911 95.45777130]
[1.93725121 95.71242523]
[-13.01207352 94.48047638]
[-27.76589584 91.77405548]
[-42.17914581 87.61975861]
[-56.11010742 82.05843353]
[-69.42180634 75.14476776]
[-81.98334503 66.94673920]
[-93.67121887 57.54494858]
[-104.37050629 47.03184891]
[-113.97600555 35.51080704]
[-122.39326477 23.09510422]
[-129.53953552 9.90681744]
[-135.34452820 -3.92437840]
[-139.75119019 -18.26248741]
[-142.71617126 -32.96652985]
[-144.21032715 -47.89192581]
[-144.21897888 -62.89192581]
[-142.74201965 -77.81903076]
[-139.79399109 -92.52648163]
[-135.40386963 -106.86966705]
[-129.61480713 -120.70754242]
[-122.48375702 -133.90405273]
[-114.08081055 -146.32945251]
[-104.48860168 -157.86155701]
[-93.80143738 -168.38699341]
[-82.12441254 -177.80224609]
[-69.57232666 -186.01475525]
[-56.26861191 -192.94375610]
[-42.34407043 -198.52113342]
[-27.93561935 -202.69204712]
[-13.18492699 -205.41548157]
[1.76296830 -206.66465759]
[16.76108932 -206.42729187]
[31.66196823 -204.70571899]
[46.31909180 -201.51686096]
[60.58834076 -196.89208984]
[74.32941437 -190.87687683]
[87.40720367 -183.53034973]
[99.69311523 -174.92474365]
[111.06635284 -165.14468384]
[121.41508484 -154.28634644]
[130.63755798 -142.45646667]
[138.64309692 -129.77137756]
[145.35298157 -116.35581970]
[150.70124817 -102.34167480]
[154.63528442 -87.86675262]
[157.11642456 -73.07337952]
[158.12028503 -58.10700989]
[157.63697815 -43.11479950]
[155.67124939 -28.24415779]
[152.24244690 -13.64130688]
[147.38426208 0.55017459]
[141.14448547 14.19074631]
[133.58447266 27.14628792]
[124.77852631 39.28940964]
[114.80560303 50.50851822]
[110.58251190 64.90176392]
[106.35942078 79.29500580]
[116.96601868 68.68840790]
[127.57262421 58.08180618]
[129.01049805 42.10331726]
[142.47831726 33.38567352]
[157.64472961 38.61630249]
[162.87535095 53.78271484]
[154.15771484 67.25053406]
[138.17922974 68.68840790]
[127.57262421 79.29500580]
[116.96601868 89.90161133]
[131.35926819 85.67852020]
[145.75250244 81.45542145]
[156.75930786 71.26472473]
[169.98310852 64.18437958]
[184.56643677 60.67346954]
[199.56370544 60.95965958]
[214.00247192 65.02439117]
[226.94650269 72.60409546]
[237.55650330 83.20729828]
[245.14448547 96.14648438]
[249.21846008 110.58264160]
[249.51425171 125.57972717]
[246.01268005 140.16529846]
[238.94079590 153.39361572]
[228.75715637 164.40695190]
[216.12205505 172.49114990]
[201.85479736 177.12205505]
[186.88047791 177.99938965]
[172.17005920 175.06625366]
[158.67735291 168.51283264]
[147.27728271 158.76406860]
[138.70903015 146.45208740]
[133.52795410 132.37432861]
[122.62072754 122.07713318]
[111.71350098 111.77993011]
[116.34875488 126.04578400]
[120.98400879 140.31163025]
[125.75909424 154.53128052]
[130.67353821 168.70336914]
[135.58799744 182.87545776]
[141.38557434 190.00280762]
[140.45683289 197.37431335]
[145.09208679 211.64016724]
[149.72735596 225.90600586]
[154.36260986 240.17185974]
[169.41371155 239.21543884]
[184.22967529 242.03292847]
[197.87913513 248.44721985]
[209.50405884 258.05511475]
[218.37373352 270.25265503]
[223.93055725 284.27310181]
[225.82527161 299.23507690]
[223.93873596 314.19808960]
[218.38955688 328.22155762]
[209.52655029 340.42391968]
[197.90686035 350.03817749]
[184.26091003 356.45993042]
[169.44650269 359.28549194]
[154.39486694 358.33728027]
[140.05216980 353.67489624]
[127.32000732 345.59140015]
[116.99873352 334.59494019]
[109.73714447 321.37677002]
[105.99172211 306.76779175]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 140]
[5 139]
[6 138]
[7 137]
[8 135]
[9 134]
[10 133]
[12 132]
[13 131]
[14 130]
[19 34]
[20 33]
[21 32]
[22 31]
[23 30]
[24 29]
[95 105]
[96 104]
[97 103]
] def

init

% Start Annotations
4 140 0.16 0.2 colorpair
5 139 0.16 1 colorpair
6 138 0.16 1 colorpair
7 137 0.0 1 colorpair
8 135 0.16 0.2 colorpair
9 134 0.16 0.6 colorpair
10 133 0.0 1 colorpair
12 132 0.16 0.2 colorpair
13 131 0.0 0.2 colorpair
14 130 0.0 0.6 colorpair
19 34 0.16 0.6 colorpair
20 33 0.16 0.2 colorpair
21 32 0.32 0.6 colorpair
22 31 0.16 0.2 colorpair
23 30 0.0 0.2 colorpair
24 29 0.32 0.6 colorpair
95 105 0.16 0.2 colorpair
96 104 0.16 1 colorpair
97 103 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
4 140 2 gmark
4 cmark
5 cmark
139 cmark
6 cmark
138 cmark
8 135 2 gmark
8 cmark
135 cmark
9 134 1 gmark
134 cmark
12 132 2 gmark
12 cmark
132 cmark
13 131 2 gmark
14 130 1 gmark
19 34 1 gmark
19 cmark
34 cmark
20 33 2 gmark
20 cmark
33 cmark
21 32 1 gmark
21 cmark
32 cmark
22 31 2 gmark
22 cmark
31 cmark
23 30 2 gmark
24 29 1 gmark
24 cmark
29 cmark
95 105 2 gmark
105 cmark
96 cmark
104 cmark

% End Annotations
showpage
end
%%EOF
