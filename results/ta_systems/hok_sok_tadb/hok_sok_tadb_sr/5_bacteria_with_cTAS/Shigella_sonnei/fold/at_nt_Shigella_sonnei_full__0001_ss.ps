%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 10:21:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_____________UCUCUGAUCGUCAUCUGUUUCACCGUCUUAGUGUUCACACUGGUGACGAGAAAAGCCCUCUGCGAGGUGCGUAUCCGAACCGGCCAGACG_GAGGUUGCUGCUUUCAUAGCUUACGAAUCCGAGGAGUAAGAGCCAGGGCGGGGGAGUUAUCCC_CGCCUCUUUUGAGGUG_UUGCGCAUUCUCAAUGCACCCAAAUUUA___________________\
) } def
/len { sequence length } bind def

/coor [
[169.97967529 687.56420898]
[158.15470886 678.32934570]
[146.85169983 668.46246338]
[136.10438538 657.99310303]
[125.94482422 646.95245361]
[116.40335083 635.37347412]
[107.50843048 623.29064941]
[99.28662109 610.74017334]
[91.76245117 597.75946045]
[84.95838165 584.38714600]
[78.89471436 570.66326904]
[73.58954620 556.62878418]
[69.05871582 542.32543945]
[65.31573486 527.79608154]
[62.37178040 513.08398438]
[60.23563766 498.23306274]
[58.91368103 483.28765869]
[58.40985489 468.29235840]
[58.72566605 453.29190063]
[59.86016846 438.33108521]
[61.80997849 423.45455933]
[64.56927490 408.70672607]
[68.12982178 394.13156128]
[72.48100281 379.77258301]
[77.60981750 365.67263794]
[83.50097656 351.87384033]
[90.13687897 338.41732788]
[97.49773407 325.34329224]
[105.56156921 312.69070435]
[114.30432129 300.49737549]
[123.69989777 288.79968262]
[133.72026062 277.63253784]
[144.33549500 267.02926636]
[155.51393127 257.02148438]
[167.22219849 247.63909912]
[179.42536926 238.91007996]
[171.37771606 226.25167847]
[163.33007812 213.59326172]
[155.28242493 200.93484497]
[146.93280029 205.07760620]
[138.27529907 208.53106689]
[129.36671448 211.27258301]
[120.26548767 213.28416443]
[111.03132629 214.55261230]
[101.72479248 215.06961060]
[92.40695190 214.83177185]
[83.13891602 213.84065247]
[73.98149109 212.10275269]
[64.99474335 209.62947083]
[56.23762131 206.43704224]
[47.76757812 202.54640198]
[39.64017105 197.98306274]
[31.90871620 192.77697754]
[24.62393188 186.96228027]
[17.83360291 180.57713318]
[11.58227539 173.66340637]
[5.91095543 166.26644897]
[0.85684651 158.43479919]
[-3.54689670 150.21981812]
[-7.27138662 141.67541504]
[-10.29219055 132.85762024]
[-12.58949375 123.82427979]
[-14.14822388 114.63465881]
[-14.95815849 105.34903717]
[-15.01398277 96.02832794]
[-14.31533146 86.73367310]
[-12.86678696 77.52603912]
[-10.67785168 68.46583557]
[-7.76288509 59.61248779]
[-4.14100885 51.02407837]
[0.16401832 42.75694656]
[5.12395573 34.86531830]
[10.70626736 27.40096664]
[16.87433243 20.41285324]
[23.58769226 13.94682121]
[30.80230522 8.04528522]
[38.47084427 2.74696064]
[31.29421806 -10.42482758]
[24.11758804 -23.59661484]
[16.94095993 -36.76840210]
[10.09787083 -42.79527283]
[9.75772858 -50.16651917]
[2.75934458 -63.43387222]
[-11.66450119 -59.13981628]
[-26.64895248 -57.74252701]
[-41.61804962 -59.29570770]
[-55.99641800 -63.73966217]
[-69.23139191 -70.90357971]
[-80.81425476 -80.51209259]
[-90.29979706 -92.19587708]
[-97.32341003 -105.50583649]
[-101.61512756 -119.93037415]
[-103.00999451 -134.91505432]
[-101.45439148 -149.88389587]
[-97.00811005 -164.26155090]
[-89.84204865 -177.49536133]
[-80.23166656 -189.07667542]
[-68.54634094 -198.56031799]
[-55.23524475 -205.58177185]
[-40.81001282 -209.87117004]
[-25.82510757 -211.26359558]
[-10.85651493 -209.70558167]
[3.52041507 -205.25695801]
[16.75307083 -198.08876038]
[28.33282280 -188.47650146]
[37.81457901 -176.78965759]
[44.83388138 -163.47741699]
[49.12093353 -149.05148315]
[50.51094818 -134.06636047]
[48.95049667 -119.09801483]
[44.49956131 -104.72180939]
[37.32921982 -91.49031830]
[27.71508408 -79.91211700]
[16.02669716 -70.43225098]
[23.02507973 -57.16490173]
[30.11274719 -43.94503021]
[37.28937531 -30.77324486]
[44.46600342 -17.60145569]
[51.64263535 -4.42966795]
[89.15432739 -14.57033539]
[127.90254974 -11.64872646]
[132.48005676 -25.93320656]
[137.05757141 -40.21768951]
[127.16451263 -52.05537415]
[125.26454926 -67.36529541]
[131.96395874 -81.26210785]
[145.12498474 -89.31139374]
[160.54798889 -88.94465637]
[173.31153870 -80.27891541]
[179.34284973 -66.07937622]
[176.71734619 -50.87706375]
[166.27281189 -39.52298355]
[151.34205627 -35.64017487]
[146.76454163 -21.35569572]
[142.18702698 -7.07121468]
[155.26484680 -0.94447654]
[167.47235107 6.77193403]
[178.61730957 15.95649815]
[188.52418518 26.46457863]
[197.03700256 38.13069534]
[204.02166748 50.77112579]
[209.36820984 64.18681335]
[212.99243164 78.16648865]
[214.83723450 92.48999786]
[214.87358093 106.93177032]
[213.10090637 121.26438141]
[209.54711914 135.26213074]
[204.26818848 148.70455933]
[197.34724426 161.37998962]
[188.89328003 173.08882141]
[179.03941345 183.64665222]
[167.94084167 192.88720703]
[175.98849487 205.54560852]
[184.03613281 218.20402527]
[192.08378601 230.86244202]
[205.16601562 223.51614380]
[218.62989807 216.89521790]
[232.43525696 211.01942444]
[246.54089355 205.90629578]
[260.90469360 201.57110596]
[275.48382568 198.02677917]
[290.23471069 195.28388977]
[305.11340332 193.35063171]
[320.07546997 192.23278809]
[335.07626343 191.93367004]
[350.07098389 192.45417786]
[365.01492310 193.79277039]
[379.86346436 195.94543457]
[394.57226562 198.90576172]
[409.09747314 202.66491699]
[423.39572144 207.21165466]
[437.42434692 212.53244019]
[451.14147949 218.61137390]
[464.50616455 225.43032837]
[477.47851562 232.96893311]
[490.01983643 241.20471191]
[502.09271240 250.11306763]
[513.66107178 259.66741943]
[524.69042969 269.83926392]
[535.14782715 280.59823608]
[545.00213623 291.91220093]
[554.22381592 303.74743652]
[562.78546143 316.06860352]
[570.66149902 328.83892822]
[577.82836914 342.02032471]
[584.26477051 355.57339478]
[589.95135498 369.45776367]
[594.87133789 383.63192749]
[599.00988770 398.05361938]
[602.35467529 412.67980957]
[604.89575195 427.46679688]
[606.62554932 442.37051392]
[607.53887939 457.34646606]
[607.63305664 472.34991455]
[606.90771484 487.33615112]
[605.36511230 502.26040649]
[603.00976562 517.07812500]
[599.84875488 531.74511719]
[595.89154053 546.21765137]
[591.14984131 560.45245361]
[585.63793945 574.40704346]
[579.37213135 588.03985596]
[572.37121582 601.31011963]
[564.65606689 614.17828369]
[556.24975586 626.60589600]
[547.17730713 638.55596924]
[537.46575928 649.99267578]
[527.14422607 660.88208008]
[516.24334717 671.19152832]
[504.79580688 680.89025879]
[492.83569336 689.94946289]
[480.39871216 698.34191895]
[467.52197266 706.04278564]
[454.24389648 713.02886963]
[440.60415649 719.27947998]
[426.64340210 724.77587891]
[412.40335083 729.50170898]
[397.92645264 733.44287109]
[383.25595093 736.58752441]
[368.43557739 738.92639160]
[353.50964355 740.45239258]
[338.52261353 741.16107178]
[323.51925659 741.05017090]
[308.54434204 740.12017822]
[293.64257812 738.37384033]
[278.85839844 735.81628418]
[264.23596191 732.45520020]
[249.81886292 728.30059814]
[235.65017700 723.36486816]
[221.77217102 717.66278076]
[208.22625732 711.21136475]
[195.05287170 704.02978516]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[36 155]
[37 154]
[38 153]
[39 152]
[77 119]
[78 118]
[79 117]
[80 116]
[82 115]
[83 114]
[121 135]
[122 134]
[123 133]
] def

init

% Start Annotations
36 155 0.0 0.2 colorpair
39 152 0.32 1 colorpair
77 119 0.16 1 colorpair
78 118 0.0 1 colorpair
80 116 0.65 1 colorpair
83 114 0.0 1 colorpair
121 135 0.32 1 colorpair
123 133 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
36 155 2 gmark
37 154 6 gmark
37 cmark
154 cmark
38 153 4 gmark
38 cmark
153 cmark
39 cmark
152 cmark
119 cmark
79 117 4 gmark
79 cmark
80 cmark
116 cmark
82 115 6 gmark
82 cmark
115 cmark
121 cmark
135 cmark
122 134 5 gmark
122 cmark
134 cmark
133 cmark

% End Annotations
showpage
end
%%EOF
