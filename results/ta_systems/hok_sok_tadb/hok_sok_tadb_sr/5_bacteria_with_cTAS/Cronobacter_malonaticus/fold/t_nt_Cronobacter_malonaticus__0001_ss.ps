%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 06:08:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_GUAAGAGGCUAAUCUGAAGUUGUUCA_GCAUGCAGAGAGCCUCGUUGGUUAAUUGAA_AAAUGACCUUCGGGGCUUUCUUCUUUCUGCCUCACA_CAUUGCGGCA_AC_CUGCC_ACUGCAUGAGACAAAAAGCCUCAAGCGCC\
) } def
/len { sequence length } bind def

/coor [
[80.52049255 280.10928345]
[72.35937500 267.25173950]
[70.13987732 252.18544006]
[74.24654388 237.52067566]
[83.96785736 225.79821777]
[97.61955261 219.04907227]
[96.97422028 204.06295776]
[96.32888794 189.07684326]
[95.68355560 174.09072876]
[95.03821564 159.10461426]
[94.39288330 144.11851501]
[85.02678680 141.87702942]
[76.36281586 137.67182922]
[68.80725861 131.70008850]
[56.63417435 140.46455383]
[44.55608749 149.35949707]
[32.57439804 158.38385010]
[20.59270668 167.40821838]
[18.63789558 183.09114075]
[6.11498880 192.73231506]
[-9.54639626 190.61181641]
[-19.05463600 177.98767090]
[-16.76866150 162.34957886]
[-4.04470110 152.97534180]
[11.56834698 155.42652893]
[23.55003738 146.40216064]
[35.53172684 137.37780762]
[39.00751114 130.79354858]
[47.86970520 128.29147339]
[60.04278946 119.52700043]
[55.60211182 102.59035492]
[58.04305649 85.25220490]
[66.98728180 70.19995117]
[57.70721054 58.41520309]
[48.42713928 46.63045502]
[39.14706802 34.84570694]
[29.86699677 23.06096077]
[20.58692551 11.27621269]
[11.30685520 -0.50853556]
[2.02678370 -12.29328346]
[-7.25328732 -24.07803154]
[-16.53335762 -35.86277771]
[-25.81342888 -47.64752579]
[-35.09350204 -59.43227386]
[-44.37357330 -71.21702576]
[-59.82062149 -73.22360992]
[-69.06405640 -85.30722046]
[-67.05588531 -100.02125549]
[-76.33595276 -111.80599976]
[-85.61602783 -123.59075165]
[-93.44292450 -128.44239807]
[-94.96571350 -135.73036194]
[-103.99007416 -147.71205139]
[-113.01443481 -159.69375610]
[-122.03879547 -171.67544556]
[-137.66079712 -175.32682800]
[-144.41577148 -189.87846375]
[-137.12187195 -204.16757202]
[-121.37435913 -207.23277283]
[-109.25337982 -196.72270203]
[-110.05710602 -180.69979858]
[-101.03274536 -168.71810913]
[-92.00838470 -156.73641968]
[-82.98402405 -144.75473022]
[-73.83127594 -132.87081909]
[-64.55120850 -121.08607483]
[-55.27113724 -109.30132294]
[-40.49645615 -107.80319214]
[-30.91726494 -95.98397827]
[-32.58882523 -80.49709320]
[-23.30875206 -68.71234894]
[-14.02868176 -56.92759705]
[-4.74861050 -45.14284897]
[4.53146029 -33.35810089]
[13.81153107 -21.57335472]
[23.09160233 -9.78860664]
[32.37167358 1.99614120]
[41.65174484 13.78088951]
[50.93181610 25.56563759]
[60.21188736 37.35038376]
[69.49195862 49.13513184]
[78.77202606 60.91987991]
[94.20289612 55.90605164]
[110.40534973 56.76099777]
[125.22287750 63.37092590]
[136.68331909 74.85607147]
[143.26130676 89.68779755]
[158.23007202 88.72017670]
[173.19882202 87.75254822]
[188.16758728 86.78491974]
[203.13633728 85.81729126]
[218.10510254 84.84967041]
[233.07385254 83.88204193]
[236.71568298 70.86494446]
[244.19566345 59.63373184]
[254.76708984 51.28398895]
[267.38259888 46.62494659]
[280.79785156 46.10106277]
[293.69427490 49.74965668]
[304.80868530 57.19864655]
[313.05700684 67.70442200]
[317.63998413 80.22608185]
[332.63650513 79.90334320]
[347.63302612 79.58059692]
[362.62957764 79.25785828]
[372.27941895 66.95279694]
[387.59173584 63.77998352]
[401.33651733 71.23751831]
[407.02392578 85.80418396]
[401.96847534 100.60204315]
[388.55725098 108.64399719]
[373.12261963 106.13288879]
[362.95230103 94.25438690]
[347.95578003 94.57712555]
[332.95925903 94.89987183]
[317.96273804 95.22261047]
[312.32907104 110.82551575]
[301.13265991 123.11550903]
[286.05456543 130.20576477]
[269.37463379 130.99334717]
[253.62673950 125.33059692]
[241.21386719 114.05189514]
[234.04148865 98.85079956]
[219.07272339 99.81842804]
[204.10397339 100.78604889]
[189.13520813 101.75367737]
[174.16645813 102.72130585]
[159.19769287 103.68893433]
[144.22894287 104.65655518]
[140.63983154 118.06340790]
[133.09281921 129.71105957]
[122.32292175 138.46517944]
[109.37899780 143.47317505]
[110.02433014 158.45928955]
[110.66966248 173.44540405]
[111.31499481 188.43150330]
[111.96032715 203.41761780]
[112.60566711 218.40373230]
[126.78701019 223.95434570]
[137.48005676 234.79771423]
[142.83216858 249.05516052]
[141.91606140 264.25650024]
[134.89045715 277.76800537]
[122.97257996 287.24871826]
[108.22727966 291.05606079]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 138]
[7 137]
[8 136]
[9 135]
[10 134]
[11 133]
[14 30]
[15 29]
[16 27]
[17 26]
[18 25]
[33 82]
[34 81]
[35 80]
[36 79]
[37 78]
[38 77]
[39 76]
[40 75]
[41 74]
[42 73]
[43 72]
[44 71]
[45 70]
[48 67]
[49 66]
[50 65]
[52 64]
[53 63]
[54 62]
[55 61]
[87 129]
[88 128]
[89 127]
[90 126]
[91 125]
[92 124]
[93 123]
[102 116]
[103 115]
[104 114]
[105 113]
] def

init

% Start Annotations
6 138 0.16 1 colorpair
7 137 0.0 1 colorpair
8 136 0.0 1 colorpair
9 135 0.0 1 colorpair
10 134 0.0 1 colorpair
11 133 0.0 1 colorpair
14 30 0.16 0.2 colorpair
15 29 0.0 1 colorpair
16 27 0.16 1 colorpair
17 26 0.0 0.2 colorpair
18 25 0.0 0.6 colorpair
33 82 0.0 0.2 colorpair
34 81 0.0 0.2 colorpair
35 80 0.0 1 colorpair
36 79 0.0 1 colorpair
37 78 0.16 1 colorpair
38 77 0.0 0.2 colorpair
39 76 0.16 1 colorpair
40 75 0.0 0.6 colorpair
41 74 0.0 0.6 colorpair
42 73 0.0 0.6 colorpair
43 72 0.16 1 colorpair
44 71 0.0 1 colorpair
45 70 0.0 0.6 colorpair
48 67 0.0 1 colorpair
49 66 0.0 1 colorpair
50 65 0.16 1 colorpair
52 64 0.0 0.2 colorpair
53 63 0.0 1 colorpair
54 62 0.0 0.6 colorpair
55 61 0.16 1 colorpair
87 129 0.0 1 colorpair
88 128 0.0 1 colorpair
89 127 0.16 0.6 colorpair
90 126 0.0 1 colorpair
91 125 0.0 0.2 colorpair
92 124 0.16 0.6 colorpair
93 123 0.16 0.6 colorpair
102 116 0.16 0.2 colorpair
103 115 0.16 0.6 colorpair
104 114 0.16 0.6 colorpair
105 113 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
138 cmark
14 30 2 gmark
14 cmark
30 cmark
27 cmark
17 26 2 gmark
18 25 1 gmark
33 82 2 gmark
34 81 2 gmark
37 cmark
38 77 2 gmark
39 cmark
40 75 1 gmark
41 74 1 gmark
42 73 1 gmark
43 cmark
45 70 1 gmark
65 cmark
52 64 2 gmark
54 62 1 gmark
55 cmark
61 cmark
89 127 1 gmark
89 cmark
127 cmark
91 125 2 gmark
92 124 1 gmark
92 cmark
93 123 1 gmark
93 cmark
123 cmark
102 116 2 gmark
102 cmark
116 cmark
103 115 1 gmark
103 cmark
115 cmark
104 114 1 gmark
104 cmark
114 cmark
105 113 1 gmark
105 cmark

% End Annotations
showpage
end
%%EOF
