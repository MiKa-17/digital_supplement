%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 09:54:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__UAAGAGGCUAUCCUGAUGUUGUCUAGACAUACAGGUGGCCUCGUG_____G__GUUAAUGAAAAUUAACU____ACGGGGCUUUCUGCUUUCUGCCACACAACACGGUAACAAACCACCUUCACGUCAUGAGGCAAAAAGCCUCAAGCGCC____________\
) } def
/len { sequence length } bind def

/coor [
[-69.51492310 275.74490356]
[-87.35459900 271.30819702]
[-104.37654114 264.37057495]
[-120.23217773 255.07455444]
[-134.59687805 243.61106873]
[-147.17662048 230.21533203]
[-159.34516907 238.98611450]
[-171.51370239 247.75689697]
[-183.68225098 256.52767944]
[-195.85078430 265.29846191]
[-208.01931763 274.06924438]
[-220.18786621 282.84002686]
[-225.34899902 290.43130493]
[-232.67070007 291.65908813]
[-245.00303650 300.19799805]
[-257.33538818 308.73693848]
[-269.66772461 317.27587891]
[-281.91870117 325.93112183]
[-294.08724976 334.70190430]
[-306.25579834 343.47268677]
[-318.42431641 352.24346924]
[-330.59286499 361.01425171]
[-334.57147217 376.55615234]
[-349.26174927 383.00405884]
[-363.39453125 375.41174316]
[-366.12841797 359.60333252]
[-355.36614990 347.70571899]
[-339.36364746 348.84570312]
[-327.19509888 340.07492065]
[-315.02658081 331.30413818]
[-302.85803223 322.53335571]
[-290.68948364 313.76257324]
[-287.08605957 307.27182007]
[-278.20666504 304.94354248]
[-265.87432861 296.40460205]
[-253.54197693 287.86566162]
[-241.20964050 279.32675171]
[-228.95864868 270.67147827]
[-216.79010010 261.90069580]
[-204.62156677 253.12992859]
[-192.45303345 244.35914612]
[-180.28448486 235.58836365]
[-168.11595154 226.81758118]
[-155.94740295 218.04679871]
[-161.99977112 207.45288086]
[-167.01934814 196.33171082]
[-170.96070862 184.78369141]
[-173.78814697 172.91310120]
[-175.47601318 160.82710266]
[-176.00895691 148.63487244]
[-175.38204956 136.44651794]
[-173.60083008 124.37213135]
[-170.68127441 112.52079010]
[-166.64965820 100.99955750]
[-161.54228210 89.91255188]
[-155.40518188 79.35993958]
[-148.29367065 69.43710327]
[-140.27191162 60.23373795]
[-131.41226196 51.83303452]
[-121.79467773 44.31095505]
[-111.50594330 37.73553467]
[-100.63893890 32.16625214]
[-89.29175568 27.65351677]
[-77.56685638 24.23818970]
[-65.57010651 21.95122910]
[-53.40983963 20.81340027]
[-41.19587708 20.83509636]
[-29.03854561 22.01623154]
[-17.04765892 24.34625053]
[-5.33154535 27.80421829]
[6.00394106 32.35900879]
[16.85637283 37.96959305]
[27.12767792 44.58538437]
[36.72502136 52.14673233]
[45.56164551 60.58542633]
[53.55766296 69.82532501]
[60.64076233 79.78304291]
[66.74687195 90.36871338]
[71.82075500 101.48677826]
[86.05110168 96.74366760]
[95.47065735 86.41101837]
[109.20578003 89.02598572]
[123.43612671 84.28286743]
[137.66647339 79.53975677]
[151.89683533 74.79663849]
[155.06408691 59.83282471]
[165.22895813 48.53803635]
[179.58709717 43.87864304]
[194.25155640 47.01073837]
[205.30485535 56.99522018]
[219.53520203 52.25210571]
[233.76556396 47.50899124]
[247.99591064 42.76587677]
[262.22625732 38.02276230]
[276.45660400 33.27964783]
[290.68695068 28.53653145]
[304.91729736 23.79341698]
[319.14764404 19.05030060]
[323.46786499 9.00762653]
[332.43167114 3.14203382]
[342.92373657 3.20178819]
[351.45434570 8.92411709]
[365.85397339 4.72289705]
[373.49014282 -8.85379601]
[388.15328979 -12.90930271]
[401.04953003 -5.54570866]
[415.44915771 -9.74692917]
[429.84881592 -13.94814968]
[430.53625488 -29.07448959]
[436.10028076 -43.15711594]
[445.93734741 -54.66845322]
[458.98040771 -62.35983658]
[473.81463623 -65.39695740]
[488.83093262 -63.45038223]
[502.40045166 -56.73125076]
[513.05126953 -45.96841049]
[519.62805176 -32.32933044]
[521.41741943 -17.29347610]
[518.22528076 -2.49182701]
[510.39785767 10.47004700]
[498.78424072 20.18613815]
[484.64416504 25.60251808]
[469.51147461 26.13165665]
[455.02761841 21.71615791]
[442.76370239 12.83498287]
[434.05004883 0.45149454]
[419.65039062 4.65271473]
[405.25073242 8.85393524]
[398.33752441 21.99711037]
[383.79409790 26.46287346]
[370.05520630 19.12254143]
[355.65554810 23.32376099]
[343.39837646 38.24549866]
[323.89077759 33.28065109]
[309.66043091 38.02376556]
[295.43008423 42.76688004]
[281.19973755 47.50999451]
[266.96936035 52.25311279]
[252.73902893 56.99622726]
[238.50866699 61.73934174]
[224.27832031 66.48245239]
[210.04797363 71.22557068]
[207.19540405 85.84502411]
[197.34262085 97.14894867]
[183.06025696 102.03571320]
[168.15161133 99.09817505]
[156.63993835 89.02699280]
[142.40959167 93.77010345]
[128.17924500 98.51322174]
[113.94889832 103.25633240]
[104.52934265 113.58898163]
[90.79421997 110.97401428]
[76.56387329 115.71713257]
[80.06024933 133.78817749]
[80.94068909 152.17164612]
[79.18760681 170.49082947]
[74.83740234 188.37046814]
[67.97965240 205.44430542]
[58.75531769 221.36271667]
[47.35379028 235.79975891]
[34.00904465 248.45996094]
[18.99483109 259.08422852]
[2.61904120 267.45532227]
[-14.78258514 273.40209961]
[-32.85335541 276.80316162]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 44]
[7 43]
[8 42]
[9 41]
[10 40]
[11 39]
[12 38]
[14 37]
[15 36]
[16 35]
[17 34]
[18 32]
[19 31]
[20 30]
[21 29]
[22 28]
[79 153]
[80 152]
[82 150]
[83 149]
[84 148]
[85 147]
[90 142]
[91 141]
[92 140]
[93 139]
[94 138]
[95 137]
[96 136]
[97 135]
[98 134]
[102 132]
[103 131]
[106 128]
[107 127]
[108 126]
] def

init

% Start Annotations
6 44 0.0 1 colorpair
7 43 0.0 1 colorpair
8 42 0.0 1 colorpair
9 41 0.0 1 colorpair
10 40 0.0 1 colorpair
11 39 0.16 0.6 colorpair
12 38 0.0 0.2 colorpair
14 37 0.16 0.6 colorpair
15 36 0.0 1 colorpair
16 35 0.16 1 colorpair
17 34 0.0 0.6 colorpair
18 32 0.16 0.6 colorpair
19 31 0.0 1 colorpair
20 30 0.0 1 colorpair
21 29 0.32 1 colorpair
22 28 0.0 0.6 colorpair
79 153 0.0 0.6 colorpair
80 152 0.0 0.6 colorpair
82 150 0.0 0.6 colorpair
83 149 0.0 0.6 colorpair
84 148 0.0 0.6 colorpair
85 147 0.0 0.2 colorpair
90 142 0.0 0.6 colorpair
91 141 0.0 0.6 colorpair
92 140 0.0 0.6 colorpair
93 139 0.0 0.6 colorpair
95 137 0.0 0.6 colorpair
96 136 0.0 0.6 colorpair
97 135 0.0 0.6 colorpair
98 134 0.0 0.6 colorpair
102 132 0.0 0.6 colorpair
103 131 0.0 0.6 colorpair
106 128 0.0 0.6 colorpair
107 127 0.16 0.6 colorpair
108 126 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
11 39 1 gmark
11 cmark
12 38 2 gmark
14 37 1 gmark
14 cmark
37 cmark
35 cmark
17 34 1 gmark
18 32 1 gmark
18 cmark
32 cmark
21 cmark
29 cmark
22 28 1 gmark
79 153 1 gmark
80 152 1 gmark
82 150 1 gmark
83 149 1 gmark
84 148 1 gmark
85 147 2 gmark
90 142 1 gmark
91 141 1 gmark
92 140 1 gmark
93 139 1 gmark
94 138 3 gmark
94 cmark
138 cmark
95 137 1 gmark
96 136 1 gmark
97 135 1 gmark
98 134 1 gmark
102 132 1 gmark
103 131 1 gmark
106 128 1 gmark
107 127 1 gmark
107 cmark
127 cmark
108 126 2 gmark

% End Annotations
showpage
end
%%EOF
