%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 06:14:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_____AAUGCCGACAAAAUACCCCUUUUUGGCG_AUAGUAGUGAUGUGUUUCACGCUACUGGUAUUCACCUGGAUGGUACGCGAUUCGCUGUGUGAAUUGCGUAUCAGGCAGGGUAGUAUUGAGCUGGCGGCAUUUCUAGCUUACGAAAC_A_____\
) } def
/len { sequence length } bind def

/coor [
[133.16809082 420.63705444]
[119.02252960 421.78622437]
[104.84009552 422.31167603]
[90.64828491 422.21234131]
[76.47459412 421.48840332]
[62.34650421 420.14129639]
[48.29140472 418.17364502]
[34.33654022 415.58920288]
[20.50895691 412.39303589]
[6.83546162 408.59133911]
[-6.65744257 404.19143677]
[-19.94359970 399.20190430]
[-32.99725723 393.63238525]
[-45.79310989 387.49365234]
[-58.30635452 380.79766846]
[-70.51273346 373.55740356]
[-82.38859558 365.78683472]
[-93.91090393 357.50106812]
[-105.05733490 348.71615601]
[-115.80627441 339.44912720]
[-126.13690186 329.71795654]
[-136.02917480 319.54150391]
[-145.46392822 308.93948364]
[-154.42286682 297.93243408]
[-162.88862610 286.54171753]
[-170.84480286 274.78939819]
[-178.27595520 262.69827271]
[-185.16770935 250.29177856]
[-191.50668335 237.59393311]
[-197.28059387 224.62939453]
[-202.47825623 211.42326355]
[-207.08958435 198.00114441]
[-211.10565186 184.38906860]
[-214.51866150 170.61340332]
[-217.32200623 156.70086670]
[-219.51023865 142.67840576]
[-221.07913208 128.57322693]
[-222.02565002 114.41266632]
[-222.34793091 100.22415924]
[-222.04537964 86.03522491]
[-221.11856079 71.87335205]
[-219.56929016 57.76600266]
[-217.40055847 43.74052429]
[-214.61656189 29.82409668]
[-211.22271729 16.04370117]
[-207.22558594 2.42604613]
[-202.63293457 -11.00246906]
[-197.45364380 -24.21581459]
[-191.69776917 -37.18837738]
[-185.37646484 -49.89501572]
[-178.50196838 -62.31109238]
[-171.08763123 -74.41254425]
[-163.14781189 -86.17590332]
[-154.69790649 -97.57838440]
[-145.75427246 -108.59787750]
[-136.33428955 -119.21301270]
[-126.45616913 -129.40322876]
[-116.13909149 -139.14875793]
[-105.40305328 -148.43072510]
[-94.26884460 -157.23112488]
[-82.75807190 -165.53291321]
[-70.89303589 -173.31997681]
[-58.69673538 -180.57723999]
[-46.19281387 -187.29061890]
[-33.40551376 -193.44711304]
[-20.35961342 -199.03479004]
[-7.08040905 -204.04280090]
[6.40636301 -208.46145630]
[20.07455826 -212.28218079]
[33.89768219 -215.49757385]
[47.84894180 -218.10140991]
[61.90129089 -220.08862305]
[76.02748871 -221.45536804]
[90.20015717 -222.19900513]
[104.39182281 -222.31808472]
[118.57497406 -221.81237793]
[132.72212219 -220.68286133]
[146.80583191 -218.93173218]
[160.79882812 -216.56237793]
[174.67395020 -213.57940674]
[188.40434265 -209.98857117]
[201.96336365 -205.79684448]
[215.32473755 -201.01237488]
[228.46255493 -195.64439392]
[241.35136414 -189.70335388]
[248.24082947 -203.02758789]
[255.13027954 -216.35182190]
[262.01974487 -229.67607117]
[268.90921021 -243.00030518]
[270.81323242 -259.84698486]
[287.52862549 -262.68103027]
[294.87918091 -247.40341187]
[282.23345947 -236.11083984]
[275.34399414 -222.78660583]
[268.45452881 -209.46237183]
[261.56506348 -196.13812256]
[254.67561340 -182.81388855]
[269.39047241 -174.25372314]
[283.63293457 -164.92864990]
[297.36318970 -154.86468506]
[310.54302979 -144.08988953]
[323.13565063 -132.63430786]
[335.10592651 -120.52991486]
[346.42050171 -107.81044769]
[357.04776001 -94.51139069]
[366.95812988 -80.66983795]
[376.12396240 -66.32438660]
[384.51965332 -51.51505280]
[392.12179565 -36.28313446]
[398.90921021 -20.67111969]
[404.86297607 -4.72254658]
[409.96643066 11.51810074]
[414.20541382 28.00552750]
[417.56802368 44.69374847]
[420.04495239 61.53622437]
[421.62927246 78.48597717]
[422.31652832 95.49572754]
[422.10485840 112.51804352]
[420.99481201 129.50544739]
[418.98950195 146.41055298]
[416.09451294 163.18623352]
[412.31793213 179.78567505]
[407.67025757 196.16258240]
[402.16452026 212.27130127]
[395.81600952 228.06689453]
[388.64245605 243.50529480]
[380.66387939 258.54345703]
[371.90252686 273.13943481]
[362.38281250 287.25250244]
[352.13128662 300.84335327]
[363.64324951 310.45974731]
[375.15518188 320.07614136]
[390.51629639 317.14877319]
[404.14001465 324.82528687]
[409.59356689 339.48110962]
[404.30200195 354.19616699]
[390.76379395 362.02249146]
[375.37130737 359.26470947]
[365.39239502 347.22500610]
[365.53875732 331.58810425]
[354.02682495 321.97167969]
[342.51489258 312.35528564]
[332.93264771 322.82418823]
[322.89886475 332.86117554]
[312.43304443 342.44677734]
[301.55541992 351.56240845]
[290.28710938 360.19042969]
[278.64993286 368.31408691]
[266.66644287 375.91763306]
[254.35990906 382.98632812]
[241.75415039 389.50646973]
[228.87361145 395.46545410]
[215.74327087 400.85168457]
[202.38856506 405.65475464]
[188.83538818 409.86532593]
[175.11001587 413.47525024]
[161.23904419 416.47750854]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[85 97]
[86 96]
[87 95]
[88 94]
[89 93]
[130 142]
[131 141]
[132 140]
] def

init

% Start Annotations
86 96 0.0 1 colorpair
87 95 0.0 1 colorpair
88 94 0.32 0.2 colorpair
89 93 0.16 1 colorpair
130 142 0.32 1 colorpair
131 141 0.0 0.2 colorpair
132 140 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
85 97 4 gmark
85 cmark
97 cmark
88 94 2 gmark
88 cmark
94 cmark
89 cmark
130 cmark
142 cmark
131 141 2 gmark

% End Annotations
showpage
end
%%EOF
