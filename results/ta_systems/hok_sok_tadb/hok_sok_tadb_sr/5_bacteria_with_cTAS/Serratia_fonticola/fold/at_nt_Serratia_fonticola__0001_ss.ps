%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 10:03:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_________UA_ACCUGGUCGUUAUCUGUAUCACCGUAAUCGUGUUGACCUGGAUAACCCGCAAAAAACUCUGUGAGAUCCGCAUUCGAACCGGAAAAACGGAGGUUGCGGCCAUUAUGGCUUACGAAUCCGAACGGUAAGGCAACCCAAC_GGCGGGGGCUUG_CCCCGCCCGUUGGUUGUUGGAGCAGAG_____AUCCAUGAGCACCCCU______________\
) } def
/len { sequence length } bind def

/coor [
[112.68531036 490.65301514]
[100.35677338 499.21640015]
[87.29069519 506.60574341]
[73.59854126 512.75793457]
[59.39713669 517.62054443]
[44.80764771 521.15203857]
[29.95454788 523.32226562]
[14.96456146 524.11279297]
[-0.03442084 523.51684570]
[-14.91442966 521.53948975]
[-29.54851151 518.19757080]
[-43.81180954 513.51965332]
[-57.58263397 507.54562378]
[-70.74349213 500.32644653]
[-83.18209839 491.92373657]
[-94.79233551 482.40914917]
[-105.47513580 471.86392212]
[-115.13935852 460.37792969]
[-123.70255280 448.04925537]
[-131.09165955 434.98306274]
[-137.24363708 421.29080200]
[-142.10598755 407.08932495]
[-145.63723755 392.49978638]
[-147.80726624 377.64663696]
[-148.59753418 362.65664673]
[-148.00132751 347.65765381]
[-146.02371216 332.77767944]
[-142.68156433 318.14367676]
[-138.00340271 303.88043213]
[-132.02914429 290.10971069]
[-124.80975342 276.94897461]
[-116.40682983 264.51049805]
[-106.89205933 252.90043640]
[-96.34662628 242.21780396]
[-84.86049652 232.55377197]
[-72.53167725 223.99078369]
[-59.46534729 216.60189819]
[-45.77299118 210.45014954]
[-31.57142448 205.58802795]
[-16.98181915 202.05702209]
[-2.12864637 199.88725281]
[12.86136723 199.09722900]
[27.86033058 199.69369507]
[42.74027252 201.67155457]
[57.37424088 205.01394653]
[62.04879379 190.76092529]
[66.72334290 176.50790405]
[71.39789581 162.25488281]
[70.08493805 157.67446899]
[71.62688446 152.22042847]
[76.40260315 147.67666626]
[81.46810913 133.55786133]
[86.53362274 119.43905640]
[80.47637939 133.16166687]
[67.28657532 140.30511475]
[52.48390961 137.87998962]
[42.26307297 126.90117645]
[40.90130997 111.96311951]
[48.96850204 99.31715393]
[63.08865738 94.25540924]
[77.35372925 98.89691162]
[63.45632172 93.25227356]
[49.55891037 87.60763550]
[37.42594910 96.92098236]
[22.35979462 98.89779663]
[8.41967583 93.10646820]
[-0.68901807 81.19480896]
[-2.59956264 66.42269135]
[-16.49697304 60.77804947]
[-33.44712830 60.41953659]
[-37.79489517 44.03255081]
[-23.25190163 35.31832886]
[-10.85233307 46.88064194]
[3.04507804 52.52528000]
[14.71507168 43.26910400]
[29.54998779 41.08249664]
[43.58029556 46.65177155]
[53.00102234 58.57429886]
[55.20355225 73.71022034]
[69.10095978 79.35486603]
[82.99837494 84.99950409]
[89.75884247 81.75202942]
[80.26889801 70.13561249]
[70.77896118 58.51920319]
[61.28901672 46.90279007]
[51.79907608 35.28638077]
[38.94740295 27.55110550]
[31.09729576 14.76924896]
[30.01009941 -0.19129929]
[35.92975235 -13.97381496]
[47.52804565 -23.48588943]
[62.20265198 -26.59328270]
[76.66100311 -22.59878159]
[87.65905762 -12.39863968]
[92.72914886 1.71851707]
[90.73445892 16.58327103]
[93.87078857 31.25172234]
[97.00711823 45.92017365]
[100.14344025 60.58862305]
[103.27976990 75.25707245]
[110.04023743 72.00959778]
[114.32028198 57.63318634]
[113.16315460 51.14362717]
[115.15077209 45.83576202]
[118.92139435 42.92260361]
[123.59594727 28.66958427]
[128.27049255 14.41656494]
[132.94505310 0.16354492]
[137.61959839 -14.08947468]
[132.60638428 -33.62273026]
[147.58245850 -45.86503601]
[151.86250305 -60.24144745]
[156.14254761 -74.61785889]
[152.66459656 -90.05205536]
[163.71179199 -100.04248810]
[167.99183655 -114.41890717]
[155.80433655 -123.43226624]
[147.43717957 -136.07214355]
[143.90072632 -150.81221008]
[145.62203979 -165.87251282]
[152.39323425 -179.43446350]
[163.39668274 -189.86039734]
[177.30366516 -195.89131165]
[192.43481445 -196.79895020]
[206.96301270 -192.47372437]
[219.13386536 -183.43791199]
[227.47772217 -170.78263855]
[230.98699951 -156.03608704]
[229.23794556 -140.97897339]
[222.44175720 -127.42952728]
[211.41911316 -117.02389526]
[197.50105286 -111.01861572]
[182.36824036 -110.13886261]
[178.08819580 -95.76245117]
[181.87228394 -81.35655212]
[170.51895142 -70.33781433]
[166.23890686 -55.96140289]
[161.95887756 -41.58499146]
[167.60435486 -33.08564758]
[167.64701843 -22.66287041]
[161.83175659 -13.74990654]
[151.87261963 -9.41492367]
[147.19807434 4.83809566]
[142.52351379 19.09111595]
[137.84896851 33.34413528]
[133.17440796 47.59715652]
[128.69668579 61.91323090]
[124.41664886 76.28964233]
[134.72695923 87.18447113]
[149.31732178 83.70289612]
[163.90768433 80.22131348]
[171.51756287 75.19129944]
[178.72305298 76.79375458]
[193.36000061 73.51353455]
[201.84121704 60.44806671]
[216.73190308 57.32996750]
[229.13555908 65.49604034]
[243.77250671 62.21582794]
[258.40945435 58.93561172]
[265.43704224 44.96611404]
[279.82028198 38.82962418]
[294.76785278 43.42361069]
[303.22192383 56.57892990]
[301.19079590 72.08403778]
[289.63348389 82.61790466]
[274.00698853 83.20675659]
[261.68966675 73.57255554]
[247.05271912 76.85277557]
[232.41577148 80.13298798]
[224.68351746 92.81163025]
[209.88630676 96.34674072]
[196.64021301 88.15048218]
[182.00326538 91.43069458]
[167.38926697 94.81167603]
[152.79890442 98.29325867]
[138.20854187 101.77483368]
[152.68194580 105.71445465]
[167.15534973 109.65406799]
[181.92678833 112.26261139]
[195.61422729 118.39892578]
[207.38908386 127.69154358]
[216.53857422 139.57795715]
[222.50886536 153.33860779]
[224.93852234 168.14053345]
[223.68048096 183.08767700]
[218.81089783 197.27525330]
[210.62454224 209.84440613]
[199.61698914 220.03427124]
[186.45454407 227.22802734]
[171.93400574 230.99020386]
[156.93435669 231.09303284]
[142.36358643 227.53031921]
[129.10374451 220.51773071]
[117.95749664 210.47973633]
[109.59957123 198.02401733]
[104.53591156 183.90454102]
[103.07304382 168.97604370]
[105.29945374 154.14247131]
[102.97593689 139.32351685]
[100.65242767 124.50456238]
[95.58691406 138.62336731]
[90.52140808 152.74217224]
[85.65091705 166.92942810]
[80.97636414 181.18244934]
[76.30181122 195.43547058]
[71.62726593 209.68849182]
[85.39828491 215.66206360]
[98.55938721 222.88079834]
[110.99827576 231.28309631]
[122.60881805 240.79728699]
[133.29197693 251.34219360]
[142.95658875 262.82781982]
[151.52018738 275.15621948]
[158.90972900 288.22219849]
[165.06216431 301.91424561]
[169.92498779 316.11557007]
[173.45672607 330.70498657]
[175.62724304 345.55804443]
[176.41801453 360.54803467]
[175.82231140 375.54702759]
[173.84518433 390.42706299]
[170.50352478 405.06118774]
[165.82583618 419.32458496]
[159.85203552 433.09548950]
[152.63308716 446.25646973]
[144.23057556 458.69522095]
[134.71618652 470.30560303]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 206]
[46 205]
[47 204]
[48 203]
[51 202]
[52 201]
[53 200]
[61 81]
[62 80]
[63 79]
[68 74]
[69 73]
[101 148]
[102 147]
[105 146]
[106 145]
[107 144]
[108 143]
[109 142]
[111 138]
[112 137]
[113 136]
[115 134]
[116 133]
[149 176]
[150 175]
[151 174]
[153 173]
[154 172]
[157 169]
[158 168]
[159 167]
] def

init

% Start Annotations
45 206 0.32 0.6 colorpair
46 205 0.0 1 colorpair
48 203 0.32 0.6 colorpair
51 202 0.16 0.2 colorpair
52 201 0.16 1 colorpair
53 200 0.0 1 colorpair
61 81 0.0 1 colorpair
62 80 0.32 1 colorpair
63 79 0.16 1 colorpair
68 74 0.16 0.6 colorpair
69 73 0.0 1 colorpair
101 148 0.0 1 colorpair
102 147 0.0 1 colorpair
105 146 0.16 1 colorpair
106 145 0.0 1 colorpair
107 144 0.16 1 colorpair
108 143 0.0 1 colorpair
109 142 0.0 1 colorpair
111 138 0.0 1 colorpair
112 137 0.0 1 colorpair
113 136 0.0 1 colorpair
115 134 0.16 1 colorpair
116 133 0.16 1 colorpair
150 175 0.0 1 colorpair
151 174 0.0 1 colorpair
153 173 0.16 1 colorpair
154 172 0.0 1 colorpair
157 169 0.0 1 colorpair
158 168 0.0 1 colorpair
159 167 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
45 206 1 gmark
45 cmark
206 cmark
47 204 5 gmark
47 cmark
204 cmark
48 203 1 gmark
48 cmark
203 cmark
51 202 2 gmark
202 cmark
201 cmark
62 cmark
80 cmark
63 cmark
68 74 1 gmark
68 cmark
105 cmark
146 cmark
144 cmark
134 cmark
116 cmark
133 cmark
149 176 3 gmark
149 cmark
176 cmark
173 cmark

% End Annotations
showpage
end
%%EOF
