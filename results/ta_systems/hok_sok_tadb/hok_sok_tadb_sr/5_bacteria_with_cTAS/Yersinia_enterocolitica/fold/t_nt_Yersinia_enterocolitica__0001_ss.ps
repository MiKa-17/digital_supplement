%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 10:22:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAGAAGCUACCGUAAUAUUGUCUAGGUAUUACAGAGAGCCUCGUAUUGAUUAACUUCAGUACGGGGCCUUUCUCUGUCUACUCUCAGCCAAACACAAGCACUAAAAGCAGACAGCUUCAAGCACC\
) } def
/len { sequence length } bind def

/coor [
[89.86811829 257.36859131]
[99.53809357 244.56736755]
[98.80777740 229.58515930]
[87.63722992 219.79974365]
[86.68315887 204.61604309]
[97.02274323 192.96569824]
[96.29243469 177.98348999]
[95.56211853 163.00128174]
[94.83180237 148.01905823]
[94.10149384 133.03684998]
[93.37117767 118.05464172]
[87.11619568 113.91638184]
[73.69367218 120.61235809]
[74.60622406 105.63986969]
[68.35124207 101.50160980]
[54.27679062 106.68907928]
[40.20234299 111.87655640]
[26.12789154 117.06402588]
[12.05344200 122.25149536]
[-2.02100778 127.43896484]
[-16.09545708 132.62643433]
[-30.16990662 137.81391907]
[-38.16948318 151.72026062]
[-54.05061340 153.99385071]
[-65.63065338 142.89059448]
[-64.02639008 126.92796326]
[-50.46847153 118.35110474]
[-35.35737991 123.73946381]
[-21.28292847 118.55198669]
[-7.20847940 113.36451721]
[6.86597061 108.17704773]
[20.94042015 102.98957825]
[35.01486969 97.80210114]
[49.08932114 92.61463165]
[63.16376877 87.42716217]
[69.36476898 73.76892090]
[64.00630951 59.75867844]
[58.64784622 45.74843597]
[53.28938293 31.73819351]
[47.93091965 17.72795296]
[42.06434631 3.92275929]
[35.69749832 -9.65896416]
[29.33064651 -23.24068832]
[22.96379662 -36.82241058]
[16.59694481 -50.40413666]
[10.23009491 -63.98585892]
[3.86324453 -77.56758118]
[-2.50360608 -91.14930725]
[-8.87045670 -104.73102570]
[-15.23730659 -118.31275177]
[-21.60415649 -131.89447021]
[-27.97100830 -145.47619629]
[-42.91649628 -150.61506653]
[-49.77565002 -164.85330200]
[-44.47905731 -179.74363708]
[-30.16909218 -186.45187378]
[-15.33560276 -180.99813843]
[-8.77903461 -166.61805725]
[-14.38928413 -151.84304810]
[-8.02243423 -138.26132202]
[-1.65558338 -124.67960358]
[4.71126699 -111.09787750]
[11.07811737 -97.51615906]
[17.44496727 -83.93443298]
[23.81181908 -70.35270691]
[30.17866898 -56.77098465]
[36.54552078 -43.18926239]
[42.91236877 -29.60753822]
[49.27922058 -16.02581406]
[55.64607239 -2.44409108]
[58.92774582 -0.90624386]
[61.59151459 2.35400176]
[62.80986404 7.01079988]
[61.94115829 12.36948872]
[67.29962158 26.37973022]
[72.65808868 40.38997269]
[78.01654816 54.40021515]
[83.37501526 68.41045380]
[118.94714355 91.52688599]
[133.94602966 91.70953369]
[148.94491577 91.89218140]
[163.94381714 92.07482910]
[177.83717346 84.50613403]
[190.46928406 92.39783478]
[205.46817017 92.58048248]
[214.00688171 77.32217407]
[228.98912048 68.48040771]
[246.29719543 68.38200378]
[261.22586060 76.96481323]
[269.76144409 91.81874084]
[284.75143433 91.27091217]
[292.52389526 77.94452667]
[306.27764893 70.95612335]
[321.62393188 72.53568268]
[333.66580200 82.17916870]
[338.56076050 96.80937958]
[334.74679565 111.75787354]
[323.44097900 122.25463104]
[308.25094604 124.95018005]
[294.02374268 118.98438263]
[285.29928589 106.26090240]
[270.30926514 106.80873108]
[265.57730103 118.64417267]
[256.66204834 127.81954193]
[244.88134766 132.92723083]
[231.99626160 133.16473389]
[219.94783020 128.46047974]
[210.56468201 119.49005127]
[205.28552246 107.57936859]
[190.28663635 107.39672089]
[177.46609497 114.97847748]
[163.76116943 107.07371521]
[148.76226807 106.89106750]
[133.76338196 106.70841980]
[118.76450348 106.52577972]
[108.35338593 117.32432556]
[109.08370209 132.30653381]
[109.81401825 147.28875732]
[110.54432678 162.27096558]
[111.27464294 177.25317383]
[112.00495911 192.23538208]
[123.42863464 202.82487488]
[123.95584869 218.02937317]
[113.78998566 228.85484314]
[114.52030182 243.83705139]
[125.38947296 255.63708496]
[122.79836273 271.46951294]
[108.73464203 279.18905640]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 125]
[3 124]
[6 121]
[7 120]
[8 119]
[9 118]
[10 117]
[11 116]
[15 35]
[16 34]
[17 33]
[18 32]
[19 31]
[20 30]
[21 29]
[22 28]
[36 78]
[37 77]
[38 76]
[39 75]
[40 74]
[41 70]
[42 69]
[43 68]
[44 67]
[45 66]
[46 65]
[47 64]
[48 63]
[49 62]
[50 61]
[51 60]
[52 59]
[79 115]
[80 114]
[81 113]
[82 112]
[84 110]
[85 109]
[90 102]
[91 101]
] def

init

% Start Annotations
2 125 0.0 1 colorpair
3 124 0.0 1 colorpair
6 121 0.0 1 colorpair
7 120 0.0 1 colorpair
8 119 0.0 1 colorpair
9 118 0.0 1 colorpair
10 117 0.0 1 colorpair
11 116 0.0 1 colorpair
15 35 0.0 1 colorpair
16 34 0.0 1 colorpair
17 33 0.0 1 colorpair
18 32 0.0 1 colorpair
19 31 0.0 1 colorpair
20 30 0.0 1 colorpair
21 29 0.0 1 colorpair
22 28 0.0 1 colorpair
36 78 0.0 1 colorpair
37 77 0.0 1 colorpair
38 76 0.0 1 colorpair
39 75 0.0 1 colorpair
40 74 0.0 1 colorpair
41 70 0.0 1 colorpair
42 69 0.0 1 colorpair
43 68 0.0 1 colorpair
44 67 0.0 1 colorpair
45 66 0.0 1 colorpair
46 65 0.0 1 colorpair
47 64 0.0 1 colorpair
48 63 0.0 1 colorpair
49 62 0.0 1 colorpair
50 61 0.0 1 colorpair
51 60 0.0 1 colorpair
52 59 0.0 1 colorpair
79 115 0.0 1 colorpair
80 114 0.0 1 colorpair
81 113 0.0 1 colorpair
82 112 0.0 1 colorpair
84 110 0.0 1 colorpair
85 109 0.0 1 colorpair
90 102 0.0 1 colorpair
91 101 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
