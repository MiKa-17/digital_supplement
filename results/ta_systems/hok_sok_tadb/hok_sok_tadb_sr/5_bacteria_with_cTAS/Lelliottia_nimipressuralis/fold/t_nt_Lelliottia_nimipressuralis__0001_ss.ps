%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 09:55:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAGAGGCUACUCUCAACCUGUUGGGAGUUGAGGGAGUAGCCUCGGGUUAAUGAAAAUAUCCCGGGGCUUUCUACUUUCUGUCCCUCAACAAUGCUCAAGACAGAAAGUCUUAAGCACC\
) } def
/len { sequence length } bind def

/coor [
[96.48016357 171.60397339]
[98.63273621 156.75987244]
[91.24106598 158.02999878]
[84.78340149 171.56877136]
[78.32572937 185.10755920]
[71.86806488 198.64633179]
[73.69344330 214.94357300]
[60.33357620 224.45388794]
[45.53194809 217.39387512]
[44.51520538 201.02627563]
[58.32928848 192.18867493]
[64.78695679 178.64988708]
[71.24462128 165.11111450]
[77.70228577 151.57232666]
[72.39898682 146.26902771]
[57.91017914 150.15161133]
[61.79238510 135.66242981]
[56.48908234 130.35913086]
[42.95030212 136.81680298]
[34.11270523 150.63087463]
[17.74510574 149.61413574]
[10.68509007 134.81250000]
[20.19539642 121.45263672]
[36.49263763 123.27801514]
[50.03141785 116.82035065]
[55.49932098 90.59739685]
[71.78893280 74.18062592]
[90.93594360 70.35239410]
[90.15090179 55.37294769]
[89.36585999 40.39350510]
[88.58082581 25.41406250]
[87.79578400 10.43461895]
[87.01074219 -4.54482365]
[86.22570801 -19.52426720]
[85.44066620 -34.50370789]
[84.65562439 -49.48315430]
[64.37476349 -63.26736450]
[60.13541031 -87.18312836]
[74.17054749 -106.71968079]
[69.53529358 -120.98553467]
[64.90003967 -135.25137329]
[60.26478577 -149.51722717]
[55.62953186 -163.78308105]
[50.99427414 -178.04891968]
[46.35902023 -192.31477356]
[41.72376633 -206.58061218]
[37.08850861 -220.84646606]
[21.93866730 -222.39634705]
[8.73222065 -229.97985840]
[-0.24273054 -242.28311157]
[-3.43122315 -257.17449951]
[-0.28083131 -272.07400513]
[8.66262054 -284.40017700]
[21.84962654 -292.01745605]
[36.99545670 -293.60607910]
[51.47600174 -288.89080811]
[62.78242493 -278.68862915]
[68.95581818 -264.76708984]
[68.92660522 -249.53820801]
[62.69984055 -235.64045715]
[51.35435867 -225.48171997]
[55.98961258 -211.21586609]
[60.62486649 -196.95002747]
[65.26012421 -182.68417358]
[69.89537811 -168.41833496]
[74.53063202 -154.15248108]
[79.16588593 -139.88664246]
[83.80113983 -125.62078857]
[88.43639374 -111.35494232]
[95.33976746 -111.11917877]
[102.03237915 -109.34839630]
[108.17649078 -106.12480927]
[113.46047974 -101.60411835]
[117.61459351 -96.00801849]
[120.42477417 -89.61329651]
[121.74361420 -82.73818207]
[121.49813080 -75.72650909]
[119.69375610 -68.93048096]
[116.41438293 -62.69302750]
[111.81851959 -57.33047104]
[106.13162994 -53.11649704]
[99.63507080 -50.26819229]
[100.42011261 -35.28874969]
[101.20514679 -20.30930519]
[101.99018860 -5.32986307]
[102.77523041 9.64958000]
[103.56026459 24.62902260]
[104.34530640 39.60846710]
[105.13034821 54.58790970]
[105.91538239 69.56735229]
[131.38107300 78.14290619]
[144.88720703 107.33879089]
[131.41435242 142.34291077]
[142.02095032 152.94950867]
[152.62754822 163.55612183]
[163.23416138 174.16271973]
[178.46343994 178.44981384]
[181.99188232 192.92045593]
[192.59849548 203.52705383]
[203.20509338 214.13365173]
[213.81169128 224.74026489]
[224.41828918 235.34686279]
[240.39678955 236.78472900]
[249.11442566 250.25254822]
[243.88380432 265.41897583]
[228.71739197 270.64959717]
[215.24957275 261.93194580]
[213.81169128 245.95346069]
[203.20509338 235.34686279]
[192.59849548 224.74026489]
[181.99188232 214.13365173]
[171.38528442 203.52705383]
[156.91465759 199.99861145]
[152.62754822 184.76931763]
[142.02095032 174.16271973]
[131.41435242 163.55612183]
[120.80774689 152.94950867]
[113.41607666 154.21963501]
[120.40013123 167.49453735]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 14]
[4 13]
[5 12]
[6 11]
[18 25]
[19 24]
[28 90]
[29 89]
[30 88]
[31 87]
[32 86]
[33 85]
[34 84]
[35 83]
[36 82]
[39 69]
[40 68]
[41 67]
[42 66]
[43 65]
[44 64]
[45 63]
[46 62]
[47 61]
[93 117]
[94 116]
[95 115]
[96 114]
[98 112]
[99 111]
[100 110]
[101 109]
[102 108]
] def

init

% Start Annotations
3 14 0.0 1 colorpair
4 13 0.0 1 colorpair
5 12 0.0 1 colorpair
6 11 0.0 1 colorpair
18 25 0.0 1 colorpair
19 24 0.0 1 colorpair
28 90 0.0 1 colorpair
29 89 0.0 1 colorpair
30 88 0.0 1 colorpair
31 87 0.0 1 colorpair
32 86 0.0 1 colorpair
33 85 0.0 1 colorpair
34 84 0.0 1 colorpair
35 83 0.0 1 colorpair
36 82 0.0 1 colorpair
39 69 0.0 1 colorpair
40 68 0.0 1 colorpair
41 67 0.0 1 colorpair
42 66 0.0 1 colorpair
43 65 0.0 1 colorpair
44 64 0.0 1 colorpair
45 63 0.0 1 colorpair
46 62 0.0 1 colorpair
47 61 0.0 1 colorpair
93 117 0.0 1 colorpair
94 116 0.0 1 colorpair
95 115 0.0 1 colorpair
96 114 0.0 1 colorpair
98 112 0.0 1 colorpair
99 111 0.0 1 colorpair
100 110 0.0 1 colorpair
101 109 0.0 1 colorpair
102 108 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
