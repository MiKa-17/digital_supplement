%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 06:08:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______AUGCCGAACAAACACACCGUAAUGGCAAUAAUAACACUCUGCAUAACACUGCUGAGAUUCACCCGGCUCACAAGAAACACACUCUGCGAGUUCAGCAUCAAAGACCGAACAAGGGAGGUAAAGGCAAUCCUCGCCUACGAAUC___GAAG\
) } def
/len { sequence length } bind def

/coor [
[125.40851593 415.22442627]
[122.93070984 400.39099121]
[123.06654358 385.35260010]
[125.81188202 370.56631470]
[131.08329773 356.48147583]
[138.72061157 343.52606201]
[148.49171448 332.09378052]
[160.09968567 322.53210449]
[173.19177246 315.13153076]
[168.18704224 300.99108887]
[163.18229675 286.85061646]
[158.17755127 272.71017456]
[153.03157043 258.62048340]
[147.74490356 244.58299255]
[142.45822144 230.54550171]
[137.17153931 216.50802612]
[123.53961945 210.61682129]
[117.97821045 196.45611572]
[124.24987030 182.19764709]
[118.96319580 168.16015625]
[113.67652130 154.12268066]
[108.38983917 140.08518982]
[103.10316467 126.04769897]
[97.81649017 112.01021576]
[103.08358002 126.05506134]
[98.46025848 140.32478333]
[85.95758057 148.61230469]
[71.01398468 147.31269836]
[60.12966537 136.99128723]
[58.03911209 122.13768005]
[65.65167236 109.21293640]
[79.65540314 103.83910370]
[65.78289795 98.13353729]
[51.91039276 92.42796326]
[38.03788376 86.72239685]
[24.16537666 81.01682281]
[10.29286861 75.31125641]
[-3.57963920 69.60568237]
[-17.45214653 63.90011215]
[-31.32465363 58.19454193]
[-45.19716263 52.48897171]
[-59.06966782 46.78340149]
[-72.94217682 41.07783127]
[-86.81468201 35.37226105]
[-99.40585327 44.28662491]
[-114.81870270 44.95573807]
[-128.13504028 37.16608429]
[-135.10566711 23.40331459]
[-133.50630188 8.05908012]
[-123.84727478 -3.97033119]
[-109.21075439 -8.84637737]
[-94.26719666 -5.01312923]
[-83.78504944 6.30623722]
[-81.10911560 21.49975204]
[-67.23660278 27.20532417]
[-53.36409760 32.91089249]
[-39.49159241 38.61646271]
[-25.61908340 44.32203674]
[-11.74657631 50.02760696]
[2.12593126 55.73317719]
[15.99843884 61.43874741]
[29.87094688 67.14431763]
[43.74345398 72.84988403]
[57.61596298 78.55545807]
[71.48847198 84.26103210]
[85.36097717 89.96659851]
[99.45065308 84.82063293]
[106.38057709 71.51739502]
[113.31050873 58.21415710]
[120.24043274 44.91091919]
[114.67368317 28.35512543]
[122.62158966 13.18101501]
[138.75350952 8.51721096]
[145.41587830 -4.92202282]
[152.07823181 -18.36125565]
[158.74058533 -31.80048943]
[165.40293884 -45.23972321]
[172.06530762 -58.67895508]
[178.72766113 -72.11818695]
[185.39001465 -85.55742645]
[192.05236816 -98.99665833]
[198.71473694 -112.43589020]
[205.37709045 -125.87512207]
[212.03944397 -139.31436157]
[218.70181274 -152.75358582]
[225.36416626 -166.19282532]
[232.02651978 -179.63204956]
[238.68887329 -193.07128906]
[240.30673218 -209.94786072]
[256.97161865 -213.06513977]
[264.58038330 -197.91445923]
[252.12811279 -186.40893555]
[245.46575928 -172.96969604]
[238.80339050 -159.53047180]
[232.14103699 -146.09123230]
[225.47868347 -132.65199280]
[218.81632996 -119.21276855]
[212.15396118 -105.77352905]
[205.49160767 -92.33429718]
[198.82925415 -78.89506531]
[192.16690063 -65.45583344]
[185.50453186 -52.01659775]
[178.84217834 -38.57736588]
[172.17982483 -25.13813210]
[165.51747131 -11.69889927]
[158.85510254 1.74033451]
[152.19274902 15.17956829]
[157.98464966 26.72602654]
[156.02217102 39.69096756]
[146.80250549 49.28726578]
[133.54367065 51.84084702]
[126.61374664 65.14408112]
[119.68381500 78.44731903]
[112.75389099 91.75055695]
[111.85397339 106.72354126]
[117.14065552 120.76102448]
[122.42733002 134.79850769]
[127.71400452 148.83599854]
[133.00068665 162.87348938]
[138.28735352 176.91098022]
[152.40664673 183.48997498]
[157.56813049 197.80130005]
[151.20903015 211.22134399]
[156.49571228 225.25883484]
[161.78239441 239.29632568]
[167.06906128 253.33380127]
[173.05508423 260.30917358]
[172.31800842 267.70541382]
[177.32275391 281.84588623]
[182.32749939 295.98632812]
[187.33222961 310.12680054]
[202.16485596 307.64392090]
[217.20327759 307.77465820]
[231.99049377 310.51495361]
[246.07714844 315.78158569]
[259.03515625 323.41448975]
[270.47073364 333.18170166]
[280.03637695 344.78643799]
[287.44140625 357.87600708]
[292.46075439 372.05264282]
[294.94192505 386.88552856]
[294.80950928 401.92395020]
[292.06753540 416.71084595]
[286.79928589 430.79690552]
[279.16491699 443.75402832]
[269.39642334 455.18850708]
[257.79061890 464.75283813]
[244.70019531 472.15637207]
[230.52299500 477.17413330]
[215.68980408 479.65362549]
[200.65141296 479.51950073]
[185.86482239 476.77581787]
[171.77937317 471.50601196]
[158.82308960 463.87017822]
[147.38972473 454.10037231]
[137.82670593 442.49346924]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 131]
[10 130]
[11 129]
[12 128]
[13 126]
[14 125]
[15 124]
[16 123]
[19 120]
[20 119]
[21 118]
[22 117]
[23 116]
[24 115]
[32 66]
[33 65]
[34 64]
[35 63]
[36 62]
[37 61]
[38 60]
[39 59]
[40 58]
[41 57]
[42 56]
[43 55]
[44 54]
[67 114]
[68 113]
[69 112]
[70 111]
[73 107]
[74 106]
[75 105]
[76 104]
[77 103]
[78 102]
[79 101]
[80 100]
[81 99]
[82 98]
[83 97]
[84 96]
[85 95]
[86 94]
[87 93]
[88 92]
] def

init

% Start Annotations
9 131 0.0 1 colorpair
10 130 0.0 1 colorpair
11 129 0.0 0.6 colorpair
12 128 0.0 0.6 colorpair
13 126 0.0 0.6 colorpair
14 125 0.0 0.6 colorpair
15 124 0.16 1 colorpair
16 123 0.0 0.6 colorpair
19 120 0.0 0.6 colorpair
20 119 0.16 1 colorpair
21 118 0.0 0.6 colorpair
22 117 0.0 0.6 colorpair
23 116 0.0 0.6 colorpair
24 115 0.16 1 colorpair
32 66 0.0 0.6 colorpair
33 65 0.0 0.6 colorpair
34 64 0.16 1 colorpair
35 63 0.0 1 colorpair
36 62 0.16 1 colorpair
37 61 0.0 0.6 colorpair
38 60 0.0 1 colorpair
39 59 0.0 0.6 colorpair
40 58 0.16 1 colorpair
41 57 0.16 1 colorpair
42 56 0.0 1 colorpair
43 55 0.16 1 colorpair
44 54 0.16 1 colorpair
67 114 0.0 0.6 colorpair
68 113 0.0 1 colorpair
69 112 0.16 1 colorpair
70 111 0.0 0.6 colorpair
73 107 0.0 0.6 colorpair
74 106 0.0 1 colorpair
75 105 0.16 1 colorpair
76 104 0.16 1 colorpair
77 103 0.0 0.6 colorpair
78 102 0.0 0.6 colorpair
79 101 0.0 0.6 colorpair
80 100 0.0 0.6 colorpair
81 99 0.0 0.6 colorpair
82 98 0.16 1 colorpair
83 97 0.0 1 colorpair
84 96 0.0 1 colorpair
85 95 0.0 0.6 colorpair
86 94 0.0 1 colorpair
87 93 0.16 1 colorpair
88 92 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
11 129 1 gmark
12 128 1 gmark
13 126 1 gmark
14 125 1 gmark
15 cmark
124 cmark
16 123 1 gmark
19 120 1 gmark
20 cmark
119 cmark
21 118 1 gmark
22 117 1 gmark
23 116 1 gmark
24 cmark
115 cmark
32 66 1 gmark
33 65 1 gmark
34 cmark
36 cmark
62 cmark
37 61 1 gmark
39 59 1 gmark
40 cmark
58 cmark
41 cmark
43 cmark
55 cmark
54 cmark
67 114 1 gmark
69 cmark
112 cmark
70 111 1 gmark
73 107 1 gmark
75 cmark
105 cmark
76 cmark
77 103 1 gmark
78 102 1 gmark
79 101 1 gmark
80 100 1 gmark
81 99 1 gmark
82 cmark
85 95 1 gmark
87 cmark
93 cmark

% End Annotations
showpage
end
%%EOF
