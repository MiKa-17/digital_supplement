%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 06:15:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__UAAGAGGCUACUCUGAAGUUGUC_GAAGCAUACAGAU___AGCCUCGU______GGUUAAU__GAA_________AAUUAACU_C____GGGGCUUUCUGCUUU__CUGCCCCACAACA___________CAUCCUAAC_UCA_UGAGGCAAAAAGCCUCAAGCGCC____________\
) } def
/len { sequence length } bind def

/coor [
[-13.85541439 334.68972778]
[-28.75156593 326.85977173]
[-43.11183167 318.08560181]
[-56.87644196 308.40368652]
[-69.98810577 297.85440063]
[-82.39225006 286.48159790]
[-94.03725433 274.33264160]
[-104.87463379 261.45806885]
[-116.91793060 270.40005493]
[-128.96121216 279.34204102]
[-141.00451660 288.28402710]
[-143.03807068 307.09927368]
[-157.90757751 318.28344727]
[-175.92079163 315.12844849]
[-187.64826965 324.48080444]
[-199.37573242 333.83316040]
[-211.10321045 343.18551636]
[-205.99786377 357.44082642]
[-205.80032349 372.58148193]
[-210.53202820 386.96514893]
[-219.67970276 399.03158569]
[-232.25109863 407.47189331]
[-246.88253784 411.37054443]
[-261.98693848 410.30465698]
[-275.92584229 404.38986206]
[-287.18731689 394.26770020]
[-294.54977417 381.03619385]
[-297.21459961 366.13055420]
[-294.89273071 351.16769409]
[-287.83599854 337.77062988]
[-276.80990601 327.39257812]
[-263.01046753 321.15927124]
[-247.93452454 319.74688721]
[-233.21742249 323.30856323]
[-220.45555115 331.45803833]
[-208.72808838 322.10568237]
[-197.00061035 312.75332642]
[-185.27314758 303.40100098]
[-186.48249817 292.02581787]
[-181.99327087 281.37387085]
[-172.81826782 274.14712524]
[-161.17416382 272.23925781]
[-149.94650269 276.24072266]
[-137.90321350 267.29873657]
[-125.85991669 258.35675049]
[-113.81661987 249.41476440]
[-121.86666107 237.17691040]
[-129.21705627 224.50648499]
[-135.84461975 211.44342041]
[-141.72845459 198.02893066]
[-146.85002136 184.30531311]
[-151.19316101 170.31584167]
[-154.74417114 156.10464478]
[-157.49185181 141.71650696]
[-159.42755127 127.19682312]
[-160.54515076 112.59137726]
[-160.84114075 97.94622803]
[-160.31459045 83.30754852]
[-158.96713257 68.72151184]
[-156.80303955 54.23411179]
[-153.82914734 39.89103317]
[-150.05479431 25.73750114]
[-145.49191284 11.81815338]
[-140.15489197 -1.82311726]
[-134.06054688 -15.14329338]
[-127.22811127 -28.10037041]
[-119.67912292 -40.65349197]
[-111.43737793 -52.76306534]
[-102.52888489 -64.39091492]
[-92.98171997 -75.50035858]
[-82.82600403 -86.05637360]
[-72.09375000 -96.02566528]
[-60.81880569 -105.37680817]
[-49.03673172 -114.08029938]
[-36.78467560 -122.10869598]
[-24.10127449 -129.43669128]
[-11.02652645 -136.04116821]
[2.39833713 -141.90129089]
[16.13098335 -146.99859619]
[30.12810516 -151.31700134]
[44.34556580 -154.84289551]
[58.73852921 -157.56515503]
[73.26161194 -159.47520447]
[87.86901093 -160.56700134]
[102.51466370 -160.83711243]
[117.15238190 -160.28468323]
[131.73602295 -158.91146851]
[146.21957397 -156.72177124]
[160.55737305 -153.72253418]
[174.70420837 -149.92318726]
[188.61547852 -145.33572388]
[202.24729919 -139.97460938]
[200.99148560 -155.74589539]
[213.34288025 -164.07011414]
[219.61689758 -177.69496155]
[225.89091492 -191.31982422]
[215.54202271 -202.45396423]
[210.24644470 -216.70265198]
[210.81169128 -231.89308167]
[217.15159607 -245.70880127]
[228.29933167 -256.04302979]
[242.55497742 -261.31985474]
[257.74465942 -260.73461914]
[271.55203247 -254.37657166]
[281.87158203 -243.21524048]
[287.12963867 -228.95266724]
[286.52444458 -213.76377869]
[280.14822388 -199.96478271]
[268.97332764 -189.65992737]
[254.70384216 -184.42060852]
[239.51576233 -185.04580688]
[233.24174500 -171.42094421]
[226.96772766 -157.79609680]
[228.67230225 -142.99934387]
[215.87216187 -133.70059204]
[227.89294434 -127.34492493]
[239.56622314 -120.37148285]
[250.86022949 -112.79922485]
[261.74432373 -104.64871979]
[272.18887329 -95.94210815]
[282.16555786 -86.70305634]
[291.64721680 -76.95667267]
[300.60812378 -66.72943878]
[309.02389526 -56.04914093]
[316.87167358 -44.94480896]
[324.13015747 -33.44660950]
[330.77957153 -21.58579254]
[336.80191040 -9.39458561]
[342.18075562 3.09388423]
[346.90155029 15.84568024]
[350.95138550 28.82615280]
[354.31933594 42.00002670]
[356.99618530 55.33150864]
[358.97473145 68.78437042]
[360.24951172 82.32205200]
[360.81713867 95.90777588]
[360.67602539 109.50461578]
[359.82653809 123.07563019]
[358.27105713 136.58393860]
[356.01373291 149.99282837]
[353.06076050 163.26588440]
[349.42013550 176.36701965]
[345.10174561 189.26063538]
[340.11730957 201.91171265]
[334.48040771 214.28585815]
[328.20635986 226.34944153]
[321.31216431 238.06968689]
[313.81661987 249.41476440]
[325.85992432 258.35675049]
[337.90319824 267.29873657]
[349.94650269 276.24072266]
[361.98977661 285.18270874]
[378.00680542 284.26913452]
[388.59973145 296.31774902]
[385.64257812 312.08590698]
[371.40383911 319.47763062]
[356.80621338 312.82260132]
[353.04779053 297.22601318]
[341.00451660 288.28402710]
[328.96121216 279.34204102]
[316.91793823 270.40005493]
[304.87463379 261.45806885]
[294.03726196 274.33264160]
[282.39224243 286.48159790]
[269.98809814 297.85440063]
[256.87643433 308.40368652]
[243.11183167 318.08560181]
[228.75157166 326.85977173]
[213.85540771 334.68972778]
[198.48538208 341.54284668]
[182.70542908 347.39065552]
[166.58125305 352.20877075]
[150.17994690 355.97714233]
[133.56977844 358.68008423]
[116.81989288 360.30636597]
[100.00000000 360.84924316]
[83.18010712 360.30636597]
[66.43022156 358.68008423]
[49.82006073 355.97714233]
[33.41875458 352.20877075]
[17.29457092 347.39065552]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 46]
[9 45]
[10 44]
[11 43]
[14 38]
[15 37]
[16 36]
[17 35]
[92 115]
[94 113]
[95 112]
[96 111]
[148 162]
[149 161]
[150 160]
[151 159]
[152 158]
] def

init

% Start Annotations
8 46 0.0 0.6 colorpair
9 45 0.0 0.6 colorpair
10 44 0.0 0.6 colorpair
11 43 0.16 0.2 colorpair
15 37 0.0 0.6 colorpair
16 36 0.16 0.6 colorpair
17 35 0.32 0.6 colorpair
92 115 0.16 0.6 colorpair
94 113 0.0 0.6 colorpair
95 112 0.16 1 colorpair
96 111 0.0 0.6 colorpair
148 162 0.16 0.2 colorpair
149 161 0.16 0.6 colorpair
150 160 0.0 0.6 colorpair
151 159 0.16 0.6 colorpair
152 158 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
8 46 1 gmark
9 45 1 gmark
10 44 1 gmark
11 43 2 gmark
43 cmark
14 38 3 gmark
14 cmark
38 cmark
15 37 1 gmark
16 36 1 gmark
36 cmark
17 35 1 gmark
17 cmark
35 cmark
92 115 1 gmark
115 cmark
94 113 1 gmark
112 cmark
96 111 1 gmark
148 162 2 gmark
148 cmark
162 cmark
149 161 1 gmark
149 cmark
150 160 1 gmark
151 159 1 gmark
151 cmark
159 cmark
152 158 2 gmark

% End Annotations
showpage
end
%%EOF
