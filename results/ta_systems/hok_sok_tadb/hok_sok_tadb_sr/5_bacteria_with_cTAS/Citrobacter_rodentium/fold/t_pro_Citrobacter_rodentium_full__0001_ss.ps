%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 06:08:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______AUGCCGAAAAAAUAUACAUUAAGCACAAUAAUAGUGAUAUGUCUCACGAUACUAGGAUUCACCCGGAUAGUCCGGGACUCACUAUGCGAAUUAAACAUCAAACAGCGCAAUAAGGAACUGAAGGCAGUUCUAGCCUACGAAGUGA_____\
) } def
/len { sequence length } bind def

/coor [
[126.71075439 422.61297607]
[127.50392914 407.58444214]
[131.21408081 392.99948120]
[137.69860840 379.41870117]
[146.70825195 367.36413574]
[157.89671326 357.29913330]
[170.83392334 349.61053467]
[165.82917786 335.47006226]
[160.82443237 321.32962036]
[155.81968689 307.18914795]
[150.81494141 293.04870605]
[145.81019592 278.90823364]
[140.80545044 264.76779175]
[131.41007996 263.51144409]
[123.08206940 258.86370850]
[117.00636292 251.43702698]
[114.06533813 242.24250793]
[114.71076965 232.55236816]
[118.89505768 223.72402954]
[126.07189178 217.00981140]
[122.21376801 202.51446533]
[111.46322632 192.20549011]
[115.39070129 176.87951660]
[111.53257751 162.38417053]
[107.67446136 147.88882446]
[103.81633759 133.39349365]
[99.95822144 118.89814758]
[96.73955536 133.54875183]
[84.52758026 142.25895691]
[69.62736511 140.53166199]
[59.73191833 129.25866699]
[59.95029068 114.26026154]
[70.16973114 103.28013611]
[85.11589050 101.98793793]
[71.24338531 96.28236389]
[57.37087250 90.57679749]
[43.49836731 84.87122345]
[29.62585831 79.16565704]
[15.75335121 73.46008301]
[1.88084388 67.75451660]
[-11.99166393 62.04894257]
[-25.86417198 56.34337234]
[-39.73667908 50.63780212]
[-53.60918808 44.93223190]
[-67.48169708 39.22666168]
[-81.35420227 33.52109146]
[-95.22670746 27.81551933]
[-112.17512512 27.38262558]
[-116.45094299 10.97671986]
[-101.86985016 2.32639980]
[-89.52114105 13.94301128]
[-75.64862823 19.64858246]
[-61.77612305 25.35415268]
[-47.90361404 31.05972290]
[-34.03110886 36.76529312]
[-20.15859985 42.47086334]
[-6.28609324 48.17643356]
[7.58641434 53.88200378]
[21.45892143 59.58757401]
[35.33142853 65.29314423]
[49.20393753 70.99871826]
[63.07644272 76.70428467]
[76.94895172 82.40985870]
[90.82145691 88.11542511]
[104.91114044 82.96945953]
[111.84106445 69.66622162]
[118.77098846 56.36298752]
[125.70092010 43.05974960]
[132.63084412 29.75651169]
[139.56077576 16.45327377]
[146.49069214 3.15003753]
[153.42062378 -10.15319920]
[160.21710205 -23.52510452]
[166.87947083 -36.96433640]
[173.54182434 -50.40357208]
[180.20417786 -63.84280396]
[186.86653137 -77.28203583]
[182.05043030 -92.09564209]
[188.99845886 -105.63002777]
[203.15065002 -110.13015747]
[209.81300354 -123.56938934]
[216.47535706 -137.00862122]
[223.13771057 -150.44786072]
[229.80007935 -163.88708496]
[236.46243286 -177.32632446]
[243.12478638 -190.76556396]
[249.78713989 -204.20478821]
[256.44949341 -217.64402771]
[258.06735229 -234.52059937]
[274.73226929 -237.63787842]
[282.34100342 -222.48719788]
[269.88873291 -210.98167419]
[263.22637939 -197.54243469]
[256.56402588 -184.10319519]
[249.90165710 -170.66397095]
[243.23930359 -157.22473145]
[236.57695007 -143.78550720]
[229.91459656 -130.34626770]
[223.25222778 -116.90703583]
[216.58987427 -103.46779633]
[221.57672119 -89.47969818]
[215.01158142 -75.75550079]
[200.30577087 -70.61968231]
[193.64341736 -57.18044662]
[186.98104858 -43.74121475]
[180.31869507 -30.30197906]
[173.65634155 -16.86274719]
[173.50224304 -9.43145180]
[166.72386169 -3.22327280]
[159.79393005 10.07996464]
[152.86401367 23.38320160]
[145.93408203 36.68643951]
[139.00415039 49.98967361]
[132.07423401 63.29291153]
[125.14430237 76.59615326]
[118.21437073 89.89938354]
[114.45355988 115.04002380]
[118.31168365 129.53536987]
[122.16979980 144.03070068]
[126.02792358 158.52604675]
[129.88604736 173.02139282]
[140.91253662 184.36717224]
[136.70910645 198.65634155]
[140.56723022 213.15168762]
[159.39665222 222.39027405]
[165.32035828 242.20689392]
[154.94590759 259.76303101]
[159.95065308 273.90350342]
[164.95539856 288.04394531]
[169.96014404 302.18441772]
[174.96488953 316.32485962]
[179.96963501 330.46533203]
[184.97438049 344.60577393]
[199.86779785 342.44424438]
[214.89672852 343.23013306]
[229.48348999 346.93319702]
[243.06739807 353.41113281]
[255.12634277 362.41491699]
[265.19680786 373.59848022]
[272.89166260 386.53198242]
[277.91522217 400.71823120]
[280.07434082 415.61203003]
[279.28601074 430.64080811]
[275.58059692 445.22695923]
[269.10046387 458.80984497]
[260.09472656 470.86730957]
[248.90953064 480.93597412]
[235.97479248 488.62875366]
[221.78771973 493.64999390]
[206.89360046 495.80670166]
[191.86492920 495.01596069]
[177.27935791 491.30816650]
[163.69755554 484.82583618]
[151.64152527 475.81814575]
[141.57469177 464.63131714]
[133.88400269 451.69534302]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 133]
[8 132]
[9 131]
[10 130]
[11 129]
[12 128]
[13 127]
[20 124]
[21 123]
[23 121]
[24 120]
[25 119]
[26 118]
[27 117]
[34 64]
[35 63]
[36 62]
[37 61]
[38 60]
[39 59]
[40 58]
[41 57]
[42 56]
[43 55]
[44 54]
[45 53]
[46 52]
[47 51]
[65 116]
[66 115]
[67 114]
[68 113]
[69 112]
[70 111]
[71 110]
[72 109]
[73 107]
[74 106]
[75 105]
[76 104]
[77 103]
[80 100]
[81 99]
[82 98]
[83 97]
[84 96]
[85 95]
[86 94]
[87 93]
[88 92]
] def

init

% Start Annotations
7 133 0.0 0.2 colorpair
8 132 0.0 1 colorpair
9 131 0.0 1 colorpair
10 130 0.0 1 colorpair
11 129 0.16 1 colorpair
12 128 0.0 0.2 colorpair
13 127 0.0 0.2 colorpair
20 124 0.16 1 colorpair
21 123 0.16 1 colorpair
23 121 0.16 1 colorpair
24 120 0.16 1 colorpair
25 119 0.0 0.2 colorpair
26 118 0.0 1 colorpair
27 117 0.0 1 colorpair
34 64 0.0 0.2 colorpair
35 63 0.0 1 colorpair
36 62 0.16 1 colorpair
37 61 0.0 0.2 colorpair
38 60 0.16 1 colorpair
39 59 0.0 1 colorpair
40 58 0.16 1 colorpair
41 57 0.16 1 colorpair
42 56 0.0 1 colorpair
43 55 0.0 0.2 colorpair
44 54 0.0 0.2 colorpair
45 53 0.0 0.2 colorpair
46 52 0.0 1 colorpair
47 51 0.0 1 colorpair
65 116 0.16 1 colorpair
66 115 0.16 1 colorpair
67 114 0.0 0.2 colorpair
68 113 0.0 1 colorpair
69 112 0.16 1 colorpair
70 111 0.16 1 colorpair
71 110 0.0 0.2 colorpair
72 109 0.0 0.2 colorpair
73 107 0.0 0.2 colorpair
74 106 0.0 1 colorpair
75 105 0.0 0.2 colorpair
76 104 0.0 1 colorpair
77 103 0.16 1 colorpair
80 100 0.0 0.2 colorpair
81 99 0.16 1 colorpair
82 98 0.0 1 colorpair
83 97 0.0 1 colorpair
84 96 0.16 1 colorpair
85 95 0.0 1 colorpair
86 94 0.0 1 colorpair
87 93 0.0 0.2 colorpair
88 92 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
7 133 2 gmark
11 cmark
12 128 2 gmark
13 127 2 gmark
20 cmark
124 cmark
123 cmark
23 cmark
24 cmark
120 cmark
25 119 2 gmark
34 64 2 gmark
36 cmark
62 cmark
37 61 2 gmark
60 cmark
58 cmark
57 cmark
43 55 2 gmark
44 54 2 gmark
45 53 2 gmark
116 cmark
66 cmark
115 cmark
67 114 2 gmark
69 cmark
112 cmark
70 cmark
71 110 2 gmark
72 109 2 gmark
73 107 2 gmark
75 105 2 gmark
103 cmark
80 100 2 gmark
81 cmark
99 cmark
84 cmark
96 cmark
87 93 2 gmark
88 cmark

% End Annotations
showpage
end
%%EOF
