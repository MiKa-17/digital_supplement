%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 09:56:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUGAGGCUAUCCUGACAUUGCUUAGGUGUCGUUGGUAGCCUCGGGUUGAUUGAAUAAUUAACUCGGGGCUUUCUUCUUAUUACGCCUUGAACAACACUGCUCAAGACCCAUAAGCCUCAAGCACC\
) } def
/len { sequence length } bind def

/coor [
[86.29094696 235.37338257]
[91.35767365 220.80177307]
[103.51216888 211.30062866]
[102.03037262 196.37399292]
[100.54857635 181.44737244]
[99.06678009 166.52073669]
[97.58498383 151.59411621]
[96.10318756 136.66748047]
[94.62139130 121.74085236]
[88.11079407 118.01766205]
[85.05261230 132.70260620]
[70.14137268 134.33197021]
[63.98394394 120.65402985]
[75.08960724 110.57128143]
[68.57901001 106.84809113]
[54.96269226 113.14062500]
[41.34637451 119.43315125]
[27.73006058 125.72567749]
[14.11374378 132.01820374]
[0.49742720 138.31074524]
[-6.36855078 152.81031799]
[-22.01799965 156.34222412]
[-34.44600296 146.19705200]
[-34.11885834 130.15733337]
[-21.28752518 120.52736664]
[-5.79510260 124.69442749]
[7.82121372 118.40189362]
[21.43753052 112.10936737]
[35.05384445 105.81683350]
[48.67016220 99.52430725]
[62.28647995 93.23177338]
[67.37802124 79.12233734]
[52.75071716 73.76698303]
[46.39174271 59.94605637]
[51.58739471 46.03416443]
[45.12693787 32.49671555]
[32.20035934 23.37454224]
[33.70164490 8.55578995]
[27.24118805 -4.98165798]
[20.78072929 -18.51910591]
[14.32027340 -32.05655289]
[7.85981560 -45.59400177]
[1.39935851 -59.13145065]
[-5.06109858 -72.66889954]
[-11.52155590 -86.20634460]
[-17.98201370 -99.74378967]
[-24.44247055 -113.28124237]
[-30.90292740 -126.81868744]
[-37.36338425 -140.35614014]
[-43.82384109 -153.89358521]
[-50.28429794 -167.43103027]
[-56.74475479 -180.96847534]
[-70.56066132 -189.80323792]
[-69.54729462 -206.17103577]
[-54.74711990 -213.23410034]
[-41.38528824 -203.72654724]
[-43.20730972 -187.42893982]
[-36.74685287 -173.89149475]
[-30.28639412 -160.35403442]
[-23.82593727 -146.81658936]
[-17.36548042 -133.27914429]
[-10.90502262 -119.74169922]
[-4.44456530 -106.20424652]
[2.01589179 -92.66680145]
[8.47634888 -79.12935638]
[14.93680668 -65.59190369]
[21.39726257 -52.05445862]
[27.85772133 -38.51700974]
[34.31817627 -24.97956276]
[40.77863693 -11.44211578]
[47.23909378 2.09533238]
[59.70357895 10.24921799]
[58.66438675 26.03625870]
[65.12484741 39.57370758]
[79.20809174 44.28515625]
[85.95275879 57.92202377]
[80.91546631 72.66188049]
[77.21787262 58.12476349]
[80.24519348 43.43342972]
[89.38864136 31.54236412]
[102.80941772 24.84290695]
[117.80855560 24.68234634]
[131.36967468 31.09297180]
[140.76556396 42.78557968]
[144.10670471 57.40874100]
[140.72114563 72.02168274]
[131.29107666 83.68463898]
[146.26240540 84.61167908]
[161.23373413 85.53872681]
[176.20506287 86.46576691]
[191.17637634 87.39281464]
[205.42835999 80.52319336]
[217.65312195 89.03228760]
[232.62443542 89.95933533]
[247.05706787 82.17272186]
[260.87289429 91.00759888]
[259.85937500 107.37539673]
[245.05914307 114.43833160]
[231.69740295 104.93065643]
[216.72607422 104.00361633]
[203.54493713 110.93953705]
[190.24934387 102.36414337]
[175.27801514 101.43709564]
[160.30668640 100.51004791]
[145.33535767 99.58300781]
[130.36402893 98.65596008]
[125.16003418 104.05673218]
[140.09431458 105.45923615]
[148.30931091 118.00969696]
[143.61906433 132.25755310]
[129.55537415 137.47412109]
[116.70825195 129.73129272]
[114.75202179 114.85828400]
[109.54801941 120.25905609]
[111.02981567 135.18568420]
[112.51161194 150.11231995]
[113.99340820 165.03894043]
[115.47520447 179.96557617]
[116.95700073 194.89219666]
[118.43879700 209.81883240]
[132.22406006 216.74488831]
[140.05676270 230.03594971]
[139.43754578 245.45088196]
[130.56398010 258.07083130]
[116.26758575 263.86883545]
[101.11030579 260.99475098]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 120]
[4 119]
[5 118]
[6 117]
[7 116]
[8 115]
[9 114]
[15 31]
[16 30]
[17 29]
[18 28]
[19 27]
[20 26]
[32 77]
[35 74]
[36 73]
[38 71]
[39 70]
[40 69]
[41 68]
[42 67]
[43 66]
[44 65]
[45 64]
[46 63]
[47 62]
[48 61]
[49 60]
[50 59]
[51 58]
[52 57]
[87 106]
[88 105]
[89 104]
[90 103]
[91 102]
[93 100]
[94 99]
] def

init

% Start Annotations
3 120 0.0 1 colorpair
4 119 0.0 1 colorpair
5 118 0.0 1 colorpair
6 117 0.0 1 colorpair
7 116 0.0 1 colorpair
8 115 0.0 1 colorpair
9 114 0.0 1 colorpair
15 31 0.0 1 colorpair
16 30 0.0 1 colorpair
17 29 0.0 1 colorpair
18 28 0.0 1 colorpair
19 27 0.0 1 colorpair
20 26 0.0 1 colorpair
32 77 0.0 1 colorpair
35 74 0.0 1 colorpair
36 73 0.0 1 colorpair
38 71 0.0 1 colorpair
39 70 0.0 1 colorpair
40 69 0.0 1 colorpair
41 68 0.0 1 colorpair
42 67 0.0 1 colorpair
43 66 0.0 1 colorpair
44 65 0.0 1 colorpair
45 64 0.0 1 colorpair
46 63 0.0 1 colorpair
47 62 0.0 1 colorpair
48 61 0.0 1 colorpair
49 60 0.0 1 colorpair
50 59 0.0 1 colorpair
51 58 0.0 1 colorpair
52 57 0.0 1 colorpair
87 106 0.0 1 colorpair
88 105 0.0 1 colorpair
89 104 0.0 1 colorpair
90 103 0.0 1 colorpair
91 102 0.0 1 colorpair
93 100 0.0 1 colorpair
94 99 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
