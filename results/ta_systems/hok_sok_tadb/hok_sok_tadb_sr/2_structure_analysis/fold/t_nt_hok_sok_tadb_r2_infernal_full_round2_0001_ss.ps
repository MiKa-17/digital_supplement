%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Jan 28 14:04:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_G_UAAGAGGCUA_CUC_UG_AUGUUGU_U_UA_G_CAU__AU__A_G___G__G__GGCC_____U_CG_____GG_UUAA___U___G__A_A_A______________________A_A_UA___U___AC_____UCGGGG_CUU__U_UCUCUUU_______CUGC_C__AC_________UC__AA_____C________UA_A_____________________________________________\
_____U__________________GCC____________UG_______________A_GGCAGA_A_AGCCUCAAGCG__CC\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50217438 92.22034454]
[62.51216125 91.66112518]
[47.53518677 90.82254791]
[32.57644653 89.70488739]
[17.64114189 88.30854034]
[2.73446679 86.63398743]
[-12.13839817 84.68181610]
[-26.97228241 82.45270538]
[-41.76203156 79.94743347]
[-56.50250244 77.16686249]
[-71.18857574 74.11196136]
[-85.81513977 70.78379059]
[-100.37711334 67.18350983]
[-114.86943054 63.31237411]
[-129.28706360 59.17172241]
[-143.62498474 54.76299667]
[-157.87823486 50.08773041]
[-172.04183960 45.14754868]
[-186.11088562 39.94416809]
[-200.08045959 34.47939682]
[-213.94573975 28.75513458]
[-227.70188904 22.77337265]
[-241.34413147 16.53618813]
[-254.86770630 10.04574966]
[-268.26794434 3.30431485]
[-281.54016113 -3.68577409]
[-294.67974854 -10.92208767]
[-307.68212891 -18.40210915]
[-320.54281616 -26.12323952]
[-333.25732422 -34.08279419]
[-345.82122803 -42.27801132]
[-358.23016357 -50.70603180]
[-370.47979736 -59.36393356]
[-382.56591797 -68.24871063]
[-394.48425293 -77.35726166]
[-406.23074341 -86.68643188]
[-417.80123901 -96.23297119]
[-429.19177246 -105.99356842]
[-440.39831543 -115.96482849]
[-451.41705322 -126.14328003]
[-462.24407959 -136.52539062]
[-472.87570190 -147.10755920]
[-483.30816650 -157.88607788]
[-493.53787231 -168.85723877]
[-503.56124878 -180.01719666]
[-513.37481689 -191.36209106]
[-522.97521973 -202.88796997]
[-532.35900879 -214.59082031]
[-541.52307129 -226.46659851]
[-550.46405029 -238.51115417]
[-559.17895508 -250.72030640]
[-567.66473389 -263.08981323]
[-575.91845703 -275.61535645]
[-583.93719482 -288.29263306]
[-591.71820068 -301.11718750]
[-599.25872803 -314.08456421]
[-606.55621338 -327.19027710]
[-613.60809326 -340.42977905]
[-620.41192627 -353.79843140]
[-626.96533203 -367.29162598]
[-633.26605225 -380.90463257]
[-639.31188965 -394.63275146]
[-645.10070801 -408.47119141]
[-650.63055420 -422.41513062]
[-655.89941406 -436.45977783]
[-660.90557861 -450.60018921]
[-665.64721680 -464.83148193]
[-670.12274170 -479.14871216]
[-674.33056641 -493.54687500]
[-678.26922607 -508.02099609]
[-681.93731689 -522.56604004]
[-685.33367920 -537.17694092]
[-688.45697021 -551.84857178]
[-691.30621338 -566.57592773]
[-693.88043213 -581.35388184]
[-696.17864990 -596.17718506]
[-698.20013428 -611.04077148]
[-699.94415283 -625.93951416]
[-701.41009521 -640.86810303]
[-702.59747314 -655.82147217]
[-703.50585938 -670.79443359]
[-704.13494873 -685.78161621]
[-704.48455811 -700.77801514]
[-704.55444336 -715.77825928]
[-704.34472656 -730.77722168]
[-703.85534668 -745.76971436]
[-703.08660889 -760.75042725]
[-702.03869629 -775.71423340]
[-700.71197510 -790.65588379]
[-699.10687256 -805.57019043]
[-697.22406006 -820.45196533]
[-695.06414795 -835.29608154]
[-692.62780762 -850.09735107]
[-689.91595459 -864.85064697]
[-686.92956543 -879.55078125]
[-683.66961670 -894.19268799]
[-680.13720703 -908.77130127]
[-676.33367920 -923.28149414]
[-672.26025391 -937.71826172]
[-667.91845703 -952.07659912]
[-663.30963135 -966.35150146]
[-658.43554688 -980.53796387]
[-653.29779053 -994.63110352]
[-647.89819336 -1008.62597656]
[-642.23858643 -1022.51782227]
[-636.32104492 -1036.30163574]
[-630.14752197 -1049.97290039]
[-623.72015381 -1063.52648926]
[-617.04125977 -1076.95800781]
[-610.11309814 -1090.26269531]
[-602.93811035 -1103.43591309]
[-595.51879883 -1116.47302246]
[-587.85766602 -1129.36950684]
[-579.95745850 -1142.12097168]
[-571.82092285 -1154.72290039]
[-563.45080566 -1167.17102051]
[-554.85009766 -1179.46093750]
[-546.02178955 -1191.58825684]
[-536.96887207 -1203.54895020]
[-527.69451904 -1215.33874512]
[-518.20202637 -1226.95361328]
[-508.49462891 -1238.38952637]
[-498.57571411 -1249.64245605]
[-488.44873047 -1260.70849609]
[-478.11718750 -1271.58386230]
[-467.58471680 -1282.26464844]
[-456.85491943 -1292.74719238]
[-445.93154907 -1303.02795410]
[-434.81845093 -1313.10327148]
[-423.51940918 -1322.96960449]
[-412.03842163 -1332.62365723]
[-400.37942505 -1342.06188965]
[-388.54647827 -1351.28112793]
[-376.54373169 -1360.27819824]
[-364.37533569 -1369.04992676]
[-352.04550171 -1377.59326172]
[-339.55856323 -1385.90527344]
[-326.91882324 -1393.98303223]
[-314.13067627 -1401.82360840]
[-301.19857788 -1409.42456055]
[-288.12701416 -1416.78308105]
[-274.92053223 -1423.89660645]
[-261.58374023 -1430.76269531]
[-248.12124634 -1437.37890625]
[-234.53773499 -1443.74291992]
[-220.83795166 -1449.85266113]
[-207.02664185 -1455.70593262]
[-193.10861206 -1461.30078125]
[-179.08868408 -1466.63500977]
[-164.97175598 -1471.70703125]
[-150.76271057 -1476.51501465]
[-136.46650696 -1481.05712891]
[-122.08810425 -1485.33203125]
[-107.63249969 -1489.33813477]
[-93.10472870 -1493.07397461]
[-78.50982666 -1496.53833008]
[-63.85287094 -1499.73010254]
[-49.13896179 -1502.64794922]
[-34.37321091 -1505.29101562]
[-19.56075096 -1507.65832520]
[-4.70673132 -1509.74902344]
[10.18368530 -1511.56250000]
[25.10532188 -1513.09802246]
[40.05299377 -1514.35498047]
[55.02150345 -1515.33325195]
[70.00564575 -1516.03210449]
[85.00021362 -1516.45153809]
[100.00000000 -1516.59143066]
[114.99978638 -1516.45153809]
[129.99435425 -1516.03210449]
[144.97850037 -1515.33325195]
[159.94700623 -1514.35498047]
[174.89468384 -1513.09802246]
[189.81631470 -1511.56250000]
[204.70672607 -1509.74902344]
[219.56074524 -1507.65832520]
[234.37321472 -1505.29101562]
[249.13896179 -1502.64794922]
[263.85287476 -1499.73010254]
[278.50982666 -1496.53833008]
[293.10473633 -1493.07397461]
[307.63250732 -1489.33813477]
[322.08810425 -1485.33203125]
[336.46652222 -1481.05712891]
[350.76272583 -1476.51501465]
[364.97177124 -1471.70703125]
[379.08868408 -1466.63500977]
[393.10861206 -1461.30078125]
[407.02664185 -1455.70593262]
[420.83795166 -1449.85266113]
[434.53775024 -1443.74291992]
[448.12124634 -1437.37890625]
[461.58374023 -1430.76269531]
[474.92053223 -1423.89660645]
[488.12701416 -1416.78308105]
[501.19857788 -1409.42456055]
[514.13067627 -1401.82360840]
[526.91882324 -1393.98303223]
[539.55853271 -1385.90527344]
[552.04553223 -1377.59326172]
[564.37530518 -1369.04992676]
[576.54376221 -1360.27819824]
[588.54650879 -1351.28112793]
[600.37939453 -1342.06188965]
[612.03839111 -1332.62365723]
[623.51940918 -1322.96960449]
[634.81842041 -1313.10327148]
[645.93157959 -1303.02795410]
[656.85491943 -1292.74719238]
[667.58471680 -1282.26464844]
[678.11718750 -1271.58386230]
[688.44873047 -1260.70849609]
[698.57568359 -1249.64245605]
[708.49462891 -1238.38952637]
[718.20202637 -1226.95361328]
[727.69451904 -1215.33874512]
[736.96887207 -1203.54895020]
[746.02178955 -1191.58825684]
[754.85009766 -1179.46093750]
[763.45080566 -1167.17102051]
[771.82092285 -1154.72290039]
[779.95745850 -1142.12097168]
[787.85766602 -1129.36950684]
[795.51879883 -1116.47302246]
[802.93811035 -1103.43591309]
[810.11309814 -1090.26269531]
[817.04125977 -1076.95800781]
[823.72015381 -1063.52648926]
[830.14752197 -1049.97290039]
[836.32104492 -1036.30163574]
[842.23858643 -1022.51782227]
[847.89819336 -1008.62597656]
[853.29779053 -994.63110352]
[858.43554688 -980.53796387]
[863.30963135 -966.35150146]
[867.91845703 -952.07659912]
[872.26025391 -937.71826172]
[876.33367920 -923.28149414]
[880.13720703 -908.77130127]
[883.66961670 -894.19268799]
[886.92956543 -879.55078125]
[889.91595459 -864.85064697]
[892.62780762 -850.09735107]
[895.06414795 -835.29608154]
[897.22406006 -820.45196533]
[899.10687256 -805.57019043]
[900.71197510 -790.65588379]
[902.03869629 -775.71423340]
[903.08660889 -760.75042725]
[903.85534668 -745.76971436]
[904.34472656 -730.77722168]
[904.55444336 -715.77825928]
[904.48455811 -700.77801514]
[904.13494873 -685.78161621]
[903.50585938 -670.79443359]
[902.59747314 -655.82147217]
[901.41009521 -640.86810303]
[899.94415283 -625.93951416]
[898.20013428 -611.04077148]
[896.17864990 -596.17718506]
[893.88043213 -581.35388184]
[891.30621338 -566.57592773]
[888.45697021 -551.84857178]
[885.33367920 -537.17694092]
[881.93731689 -522.56604004]
[878.26922607 -508.02099609]
[874.33056641 -493.54687500]
[870.12274170 -479.14871216]
[865.64721680 -464.83148193]
[860.90557861 -450.60018921]
[855.89941406 -436.45977783]
[850.63055420 -422.41513062]
[845.10070801 -408.47119141]
[839.31188965 -394.63275146]
[833.26605225 -380.90463257]
[826.96533203 -367.29162598]
[820.41192627 -353.79843140]
[813.60809326 -340.42977905]
[806.55621338 -327.19027710]
[799.25872803 -314.08456421]
[791.71820068 -301.11718750]
[783.93719482 -288.29263306]
[775.91845703 -275.61535645]
[767.66473389 -263.08981323]
[759.17895508 -250.72030640]
[750.46405029 -238.51115417]
[741.52307129 -226.46659851]
[732.35900879 -214.59082031]
[722.97521973 -202.88796997]
[713.37481689 -191.36209106]
[703.56127930 -180.01719666]
[693.53784180 -168.85723877]
[683.30816650 -157.88607788]
[672.87567139 -147.10755920]
[662.24407959 -136.52539062]
[651.41705322 -126.14328003]
[640.39831543 -115.96482849]
[629.19177246 -105.99356842]
[617.80126953 -96.23297119]
[606.23071289 -86.68643188]
[594.48425293 -77.35726166]
[582.56591797 -68.24871063]
[570.47979736 -59.36393356]
[558.23016357 -50.70603180]
[545.82122803 -42.27801132]
[533.25732422 -34.08279419]
[520.54284668 -26.12323952]
[507.68212891 -18.40210915]
[494.67974854 -10.92208767]
[481.54016113 -3.68577409]
[468.26794434 3.30431485]
[454.86770630 10.04574966]
[441.34411621 16.53618813]
[427.70190430 22.77337265]
[413.94573975 28.75513458]
[400.08047485 34.47939682]
[386.11087036 39.94416809]
[372.04183960 45.14754868]
[357.87823486 50.08773041]
[343.62500000 54.76299667]
[329.28704834 59.17172241]
[314.86944580 63.31237411]
[300.37710571 67.18350983]
[285.81512451 70.78379059]
[271.18856812 74.11196136]
[256.50250244 77.16686249]
[241.76202393 79.94743347]
[226.97229004 82.45270538]
[212.13839722 84.68181610]
[197.26553345 86.63398743]
[182.35885620 88.30854034]
[167.42355347 89.70488739]
[152.46481323 90.82254791]
[137.48783875 91.66112518]
[122.49782562 92.22034454]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
