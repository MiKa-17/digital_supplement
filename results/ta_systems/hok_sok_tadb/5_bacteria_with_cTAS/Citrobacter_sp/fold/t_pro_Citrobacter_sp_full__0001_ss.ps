%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:18:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
____________________ACUGCCACGAAAUACCCUUUUCUGGUGUGUGUUAAUAGUGUGUCUCACACUGCUGAUAUUCACAUACCUGACCCGAAAAUCGCUCUGCGAAAUCAGCUACAAGGACGGAAACAGGGAGGUGGCGGCUUUUAUGGCUUACGAAUCCGCUAA_\
) } def
/len { sequence length } bind def

/coor [
[166.45013428 316.78164673]
[153.52035522 320.33038330]
[140.40342712 323.10864258]
[127.14520264 325.10675049]
[113.79206085 326.31765747]
[100.39069366 326.73718262]
[86.98796082 326.36386108]
[73.63072205 325.19894409]
[60.36569977 323.24655151]
[47.23926926 320.51351929]
[34.29733276 317.00936890]
[21.58515358 312.74636841]
[9.14717674 307.73944092]
[-2.97310114 302.00604248]
[-14.73329735 295.56628418]
[-26.09228897 288.44268799]
[-37.01035309 280.66009521]
[-47.44931412 272.24575806]
[-57.37266922 263.22912598]
[-66.74571228 253.64170837]
[-75.53567505 243.51701355]
[-83.71180725 232.89047241]
[-91.24553680 221.79922485]
[-98.11050415 210.28207397]
[-104.28270721 198.37927246]
[-109.74057007 186.13246155]
[-114.46499634 173.58445740]
[-118.43947601 160.77912903]
[-121.65010071 147.76127625]
[-124.08564758 134.57640076]
[-125.73760986 121.27062988]
[-126.60018921 107.89046478]
[-126.67039490 94.48271942]
[-125.94795990 81.09426117]
[-124.43541718 67.77191162]
[-122.13806152 54.56226349]
[-119.06392670 41.51150131]
[-115.22374725 28.66526604]
[-110.63097382 16.06847572]
[-105.30165100 3.76518321]
[-99.25441742 -8.20159149]
[-92.51042175 -19.79000092]
[-85.09324646 -30.95952415]
[-77.02883148 -41.67110062]
[-68.34536743 -51.88727188]
[-79.14392090 -62.29838562]
[-89.94247437 -72.70950317]
[-105.24752808 -76.71773529]
[-109.03967285 -91.12151337]
[-119.83822632 -101.53262329]
[-130.63677979 -111.94374084]
[-141.43533325 -122.35485077]
[-152.23388672 -132.76596069]
[-167.81028748 -132.65014648]
[-178.61323547 -143.36233521]
[-178.62765503 -158.21276855]
[-189.42620850 -168.62388611]
[-200.22476196 -179.03498840]
[-211.02331543 -189.44610596]
[-221.82186890 -199.85722351]
[-232.62042236 -210.26832581]
[-248.62249756 -211.41412354]
[-257.58465576 -224.72048950]
[-252.63191223 -239.97990417]
[-237.56356812 -245.48666382]
[-223.93876648 -237.01644897]
[-222.20930481 -221.06687927]
[-211.41075134 -210.65577698]
[-200.61219788 -200.24465942]
[-189.81364441 -189.83354187]
[-179.01509094 -179.42242432]
[-168.21653748 -169.01132202]
[-153.37548828 -169.53927612]
[-142.27590942 -159.13476562]
[-141.82276917 -143.56451416]
[-131.02421570 -133.15341187]
[-120.22566223 -122.74229431]
[-109.42710876 -112.33117676]
[-98.62855530 -101.92006683]
[-84.09589386 -98.65650177]
[-79.53135681 -83.50804901]
[-68.73281097 -73.09693909]
[-57.93425369 -62.68582535]
[-43.69103622 -75.39324951]
[-28.42946053 -86.85765076]
[-12.25769234 -96.99775696]
[4.70966005 -105.74172974]
[22.35234642 -113.02758026]
[40.54533005 -118.80368042]
[59.15967560 -123.02909088]
[78.06346130 -125.67386627]
[97.12271881 -126.71926880]
[116.20236206 -126.15789032]
[135.16717529 -123.99369812]
[153.88276672 -120.24203491]
[172.21647644 -114.92949677]
[190.03837585 -108.09372711]
[207.22216797 -99.78317261]
[223.64605713 -90.05672455]
[239.19366455 -78.98332977]
[248.78875732 -90.51303864]
[258.38385010 -102.04274750]
[267.97894287 -113.57244873]
[273.46331787 -129.61483765]
[290.39697266 -128.78578186]
[294.28802490 -112.28437805]
[279.50863647 -103.97735596]
[269.91354370 -92.44764709]
[260.31845093 -80.91793823]
[250.72335815 -69.38823700]
[261.10592651 -59.54557800]
[270.84707642 -49.06772995]
[279.90802002 -37.99640656]
[288.25274658 -26.37568855]
[295.84796143 -14.25183773]
[302.66348267 -1.67312241]
[308.67211914 11.31037807]
[313.85000610 24.64697266]
[318.17651367 38.28356552]
[321.63439941 52.16587067]
[324.20989990 66.23860931]
[325.89276123 80.44576263]
[326.67630005 94.73076630]
[326.55737305 109.03675079]
[325.53646851 123.30675507]
[323.61767578 137.48396301]
[320.80856323 151.51194763]
[317.12039185 165.33485413]
[312.56781006 178.89762878]
[307.16891479 192.14631653]
[300.94525146 205.02812195]
[293.92160034 217.49180603]
[286.12585449 229.48771667]
[277.58914185 240.96810913]
[268.34536743 251.88726807]
[279.14392090 262.29840088]
[289.94247437 272.70950317]
[303.56878662 266.11035156]
[318.60250854 264.57427979]
[333.22717285 268.26742554]
[345.68240356 276.72540283]
[354.47579956 288.91137695]
[358.56167603 303.34326172]
[357.46551514 318.27401733]
[351.33880615 331.90298462]
[362.13735962 342.31411743]
[377.66784668 340.48709106]
[390.71081543 349.11349487]
[395.10778809 364.12017822]
[388.78265381 378.42144775]
[374.72192383 385.26470947]
[359.56463623 381.41873169]
[350.46765137 368.69952393]
[351.72622681 353.11267090]
[340.92767334 342.70153809]
[327.53155518 349.32192993]
[312.65081787 350.96267700]
[298.07931519 347.40658569]
[285.58032227 339.06411743]
[276.67309570 326.92611694]
[272.44827271 312.44607544]
[273.43429565 297.36630249]
[279.53137207 283.50805664]
[268.73281860 273.09692383]
[257.93426514 262.68582153]
[248.04203796 271.73660278]
[237.63212585 280.18685913]
[226.74095154 288.00701904]
[215.40658569 295.16973877]
[203.66864014 301.64999390]
[191.56819153 307.42510986]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 83]
[46 82]
[47 81]
[49 79]
[50 78]
[51 77]
[52 76]
[53 75]
[56 72]
[57 71]
[58 70]
[59 69]
[60 68]
[61 67]
[100 110]
[101 109]
[102 108]
[103 107]
[135 165]
[136 164]
[137 163]
[145 155]
[146 154]
] def

init

% Start Annotations
45 83 0.0 1 colorpair
46 82 0.0 0.2 colorpair
47 81 0.16 1 colorpair
49 79 0.0 0.2 colorpair
50 78 0.0 1 colorpair
51 77 0.32 0.2 colorpair
52 76 0.16 0.2 colorpair
53 75 0.0 1 colorpair
56 72 0.16 1 colorpair
57 71 0.16 0.2 colorpair
58 70 0.16 1 colorpair
59 69 0.16 1 colorpair
60 68 0.0 1 colorpair
61 67 0.0 1 colorpair
100 110 0.0 1 colorpair
101 109 0.0 1 colorpair
102 108 0.16 1 colorpair
103 107 0.0 1 colorpair
135 165 0.0 0.2 colorpair
136 164 0.0 1 colorpair
137 163 0.0 0.2 colorpair
145 155 0.0 1 colorpair
146 154 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
46 82 2 gmark
81 cmark
49 79 2 gmark
51 77 2 gmark
51 cmark
77 cmark
52 76 2 gmark
52 cmark
76 cmark
72 cmark
57 71 2 gmark
57 cmark
58 cmark
70 cmark
69 cmark
102 cmark
108 cmark
135 165 2 gmark
137 163 2 gmark

% End Annotations
showpage
end
%%EOF
