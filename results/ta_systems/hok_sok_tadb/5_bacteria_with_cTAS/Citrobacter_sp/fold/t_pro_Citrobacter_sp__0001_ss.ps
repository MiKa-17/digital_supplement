%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:18:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_______________AUGAAACUGCCACGAAAUACCCUUUUCUGGUGUGUGUUAAUAGUGUGUCUCACACUGCUGAUAUUCACAUACCUGACACGAAAAUCGCUGUGCGAAAUCAGUUACAAAGACGGAAACAGGGAGGUGGCGGCUUUUAUGGCUUACGAAUCCGCUAAG\
) } def
/len { sequence length } bind def

/coor [
[114.21680450 330.50048828]
[102.37763214 339.71102905]
[89.32693481 347.10556030]
[75.34112549 352.52749634]
[60.71644592 355.86193848]
[45.76264572 357.03833008]
[30.79645920 356.03170776]
[16.13488197 352.86340332]
[2.08845568 347.60052490]
[-11.04530811 340.35455322]
[-22.98822784 331.27893066]
[-33.48734283 320.56591797]
[-42.32027817 308.44241333]
[-49.29994202 295.16522217]
[-54.27850342 281.01550293]
[-57.15051270 266.29302979]
[-57.85513687 251.30958557]
[-56.37745667 236.38255310]
[-52.74876404 221.82807922]
[-47.04592133 207.95445251]
[-39.38971710 195.05551147]
[-29.94231606 183.40447998]
[-18.90381813 173.24812317]
[-6.50802708 164.80155945]
[6.98250580 158.24369812]
[21.28204346 153.71343994]
[36.08770752 151.30674744]
[51.08591080 151.07456970]
[65.95897675 153.02183533]
[80.39189148 157.10731506]
[94.07894135 163.24444580]
[106.73023987 171.30328369]
[118.07781982 181.11309814]
[127.87659454 192.45974731]
[125.42189789 177.66195679]
[122.96720123 162.86416626]
[120.51251221 148.06637573]
[118.05781555 133.26860046]
[115.60311890 118.47080994]
[103.96574402 122.98241425]
[92.09267426 121.02742004]
[83.20559692 113.59612274]
[79.48195648 103.10063171]
[81.52944183 92.61020660]
[70.73088837 82.19909668]
[59.93233871 71.78798676]
[49.13378906 61.37686920]
[33.82873535 57.36863708]
[30.03658867 42.96485519]
[19.23803711 32.55374146]
[8.43948460 22.14262962]
[-2.35906792 11.73151684]
[-13.15761948 1.32040393]
[-23.95617294 -9.09070873]
[-34.75472260 -19.50182152]
[-45.55327606 -29.91293526]
[-56.35182953 -40.32404709]
[-67.15038300 -50.73516083]
[-77.94892883 -61.14627457]
[-88.74748230 -71.55738831]
[-99.54603577 -81.96849823]
[-110.34458923 -92.37961578]
[-125.94384003 -99.02036285]
[-123.88092041 -115.84833527]
[-107.13951111 -118.52447510]
[-99.93347931 -103.17816162]
[-89.13492584 -92.76705170]
[-78.33637238 -82.35594177]
[-67.53781891 -71.94482422]
[-56.73926926 -61.53371429]
[-45.94071579 -51.12260056]
[-35.14216232 -40.71148682]
[-24.34361076 -30.30037308]
[-13.54505920 -19.88926125]
[-2.74650693 -9.47814846]
[8.05204487 0.93296474]
[18.85059738 11.34407806]
[29.64914894 21.75518990]
[40.44770050 32.16630173]
[54.98036957 35.42986679]
[59.54489899 50.57831955]
[70.34345245 60.98942947]
[81.14200592 71.40054321]
[91.94055939 81.81165314]
[102.81274414 78.86399078]
[114.33574677 82.33417511]
[122.79756927 91.94401550]
[132.39266968 80.41431427]
[141.98776245 68.88460541]
[151.58285522 57.35489655]
[161.17794800 45.82519150]
[164.05830383 30.26838493]
[178.14685059 25.43494606]
[187.74194336 13.90523911]
[197.33703613 2.37553167]
[206.93212891 -9.15417576]
[216.52722168 -20.68388176]
[215.27471924 -36.21027756]
[225.16975403 -47.76635742]
[239.97952271 -48.86474609]
[249.57461548 -60.39445496]
[259.16970825 -71.92416382]
[268.76480103 -83.45386505]
[274.24917603 -99.49625397]
[291.18283081 -98.66719055]
[295.07388306 -82.16579437]
[280.29452515 -73.85877228]
[270.69940186 -62.32906342]
[261.10430908 -50.79935837]
[251.50923157 -39.26964951]
[253.11911011 -24.50672913]
[243.55256653 -12.67728043]
[228.05693054 -11.08878708]
[218.46183777 0.44091988]
[208.86674500 11.97062683]
[199.27165222 23.50033379]
[189.67654419 35.03004074]
[187.48251343 49.76216507]
[172.70765686 55.42028427]
[163.11256409 66.94998932]
[153.51747131 78.47969818]
[143.92237854 90.00940704]
[134.32728577 101.53911591]
[130.40090942 116.01611328]
[132.85560608 130.81390381]
[135.31028748 145.61169434]
[137.76498413 160.40946960]
[140.21968079 175.20726013]
[142.67437744 190.00505066]
[150.90997314 177.46810913]
[165.72068787 175.09262085]
[177.46392822 184.42515564]
[178.49420166 199.38973999]
[168.14076233 210.24359131]
[153.14463806 209.92045593]
[163.94319153 220.33157349]
[174.74174500 230.74267578]
[188.67932129 224.74104309]
[203.81205750 224.53330994]
[217.83355713 230.12002563]
[228.61866760 240.62092590]
[234.54565430 254.41351318]
[234.73992920 269.38375854]
[229.20303345 283.24996948]
[240.00158691 293.66107178]
[250.80014038 304.07220459]
[261.59869385 314.48330688]
[277.60076904 315.62911987]
[286.56295776 328.93545532]
[281.61019897 344.19488525]
[266.54183960 349.70162964]
[252.91703796 341.23141479]
[251.18757629 325.28186035]
[240.38902283 314.87075806]
[229.59048462 304.45962524]
[218.79193115 294.04852295]
[205.13717651 300.08813477]
[190.16984558 300.44073486]
[176.16998291 295.02145386]
[165.28219604 284.62704468]
[159.18711853 270.81893921]
[158.84202576 255.68870544]
[164.33062744 241.54122925]
[153.53208923 231.13012695]
[142.73353577 220.71900940]
[146.52713013 235.23136902]
[148.17408752 250.14067078]
[147.63952637 265.13116455]
[144.93475342 279.88528442]
[140.11706543 294.09054565]
[133.28849792 307.44610596]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 129]
[35 128]
[36 127]
[37 126]
[38 125]
[39 124]
[44 84]
[45 83]
[46 82]
[47 81]
[49 79]
[50 78]
[51 77]
[52 76]
[53 75]
[54 74]
[55 73]
[56 72]
[57 71]
[58 70]
[59 69]
[60 68]
[61 67]
[62 66]
[87 123]
[88 122]
[89 121]
[90 120]
[91 119]
[93 117]
[94 116]
[95 115]
[96 114]
[97 113]
[100 110]
[101 109]
[102 108]
[103 107]
[135 165]
[136 164]
[137 163]
[144 156]
[145 155]
[146 154]
[147 153]
] def

init

% Start Annotations
34 129 0.16 0.2 colorpair
35 128 0.16 0.6 colorpair
36 127 0.32 1 colorpair
37 126 0.16 0.2 colorpair
38 125 0.0 0.6 colorpair
39 124 0.16 0.6 colorpair
44 84 0.16 0.2 colorpair
45 83 0.0 1 colorpair
46 82 0.0 0.6 colorpair
47 81 0.16 1 colorpair
49 79 0.0 0.6 colorpair
50 78 0.0 1 colorpair
51 77 0.32 0.6 colorpair
52 76 0.16 0.6 colorpair
53 75 0.0 1 colorpair
54 74 0.16 0.6 colorpair
55 73 0.16 0.2 colorpair
56 72 0.16 1 colorpair
57 71 0.16 0.6 colorpair
58 70 0.16 1 colorpair
59 69 0.16 1 colorpair
60 68 0.0 1 colorpair
61 67 0.0 1 colorpair
62 66 0.0 0.6 colorpair
87 123 0.16 0.6 colorpair
88 122 0.0 0.2 colorpair
89 121 0.0 1 colorpair
90 120 0.0 0.6 colorpair
91 119 0.16 0.2 colorpair
93 117 0.16 0.6 colorpair
94 116 0.0 1 colorpair
95 115 0.0 0.2 colorpair
96 114 0.16 0.2 colorpair
97 113 0.16 1 colorpair
100 110 0.0 1 colorpair
101 109 0.0 1 colorpair
102 108 0.16 1 colorpair
103 107 0.0 1 colorpair
135 165 0.0 0.6 colorpair
136 164 0.0 1 colorpair
137 163 0.0 0.6 colorpair
144 156 0.16 0.6 colorpair
145 155 0.0 1 colorpair
146 154 0.0 1 colorpair
147 153 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
34 129 2 gmark
34 cmark
129 cmark
35 128 1 gmark
35 cmark
36 cmark
127 cmark
37 126 2 gmark
37 cmark
126 cmark
38 125 1 gmark
39 124 1 gmark
39 cmark
44 84 2 gmark
84 cmark
46 82 1 gmark
81 cmark
49 79 1 gmark
51 77 1 gmark
51 cmark
77 cmark
52 76 1 gmark
52 cmark
76 cmark
54 74 1 gmark
54 cmark
55 73 2 gmark
55 cmark
73 cmark
72 cmark
57 71 1 gmark
57 cmark
58 cmark
70 cmark
69 cmark
62 66 1 gmark
87 123 1 gmark
87 cmark
123 cmark
88 122 2 gmark
90 120 1 gmark
91 119 2 gmark
91 cmark
93 117 1 gmark
93 cmark
117 cmark
95 115 2 gmark
96 114 2 gmark
96 cmark
114 cmark
97 cmark
102 cmark
108 cmark
135 165 1 gmark
137 163 1 gmark
144 156 1 gmark
144 cmark
147 153 2 gmark

% End Annotations
showpage
end
%%EOF
