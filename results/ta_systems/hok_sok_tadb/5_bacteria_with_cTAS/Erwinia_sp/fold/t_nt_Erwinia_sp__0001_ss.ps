%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:27:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGAGGCUAACCUUGCAUGUGUUGAGCAUACGAGGGCCUCGGGUUGAUUUAUCAGCUCGGGGCUUUUCUCUUUCUGCUUGGUAUAUGCCUGAAACAGAAAGUCUCAAGCACCCGCCGCA\
) } def
/len { sequence length } bind def

/coor [
[100.04429626 171.32733154]
[88.22831726 162.08705139]
[81.48982239 148.68583679]
[81.11942291 133.69041443]
[87.18981171 119.97049713]
[73.15406036 125.26177979]
[59.11830521 130.55305481]
[45.08255386 135.84434509]
[31.04680061 141.13562012]
[27.59685898 145.36750793]
[23.27847099 147.55128479]
[19.05123138 147.70742798]
[15.71818924 146.24743652]
[1.31594086 150.43972778]
[-13.08630753 154.63201904]
[-27.48855591 158.82429504]
[-41.89080429 163.01658630]
[-52.97857285 174.30250549]
[-67.36112213 170.43061829]
[-81.76337433 174.62290955]
[-96.16561890 178.81518555]
[-110.56787109 183.00747681]
[-119.51872253 196.32144165]
[-135.51983643 197.48083496]
[-146.29650879 185.59628296]
[-143.58180237 169.78457642]
[-129.45822144 162.17510986]
[-114.76015472 168.60522461]
[-100.35791016 164.41294861]
[-85.95565796 160.22065735]
[-71.55341339 156.02836609]
[-61.49578476 145.04231262]
[-46.08308792 148.61433411]
[-31.68083954 144.42204285]
[-17.27859116 140.22976685]
[-2.87634373 136.03747559]
[11.52590466 131.84519958]
[25.75551796 127.09986877]
[39.79127121 121.80859375]
[53.82702255 116.51731110]
[67.86277771 111.22602844]
[81.89852905 105.93474579]
[87.18981171 91.89899445]
[80.14015961 78.65881348]
[73.09050751 65.41863251]
[66.04085541 52.17844772]
[58.99120331 38.93826675]
[51.94155502 25.69808388]
[44.89190292 12.45790291]
[30.70077133 4.23939562]
[30.99321938 -12.15714359]
[45.46839905 -19.86436081]
[59.23548889 -10.95373249]
[58.13208389 5.40825176]
[65.18173218 18.64843369]
[72.23138428 31.88861656]
[79.28103638 45.12879944]
[86.33068848 58.36898041]
[93.38034058 71.60916138]
[100.42999268 84.84934235]
[113.93253326 91.38244629]
[128.68949890 88.69323730]
[143.44647217 86.00402069]
[158.16758728 83.12503815]
[172.85043335 80.05675507]
[187.53326416 76.98847961]
[202.21609497 73.92019653]
[207.08996582 59.42217255]
[218.49099731 49.37662125]
[233.29112244 46.40625381]
[247.49583435 51.21063232]
[257.32235718 62.40460968]
[272.00518799 59.33632660]
[286.68801880 56.26804733]
[301.37084961 53.19976425]
[316.05368042 50.13148499]
[330.73654175 47.06320190]
[345.41937256 43.99492264]
[352.26498413 27.31232643]
[367.57330322 18.08004570]
[385.21276855 19.77922249]
[398.24624634 31.55513954]
[412.75164795 27.73507309]
[427.25708008 23.91500473]
[438.51538086 11.99097443]
[454.40637207 16.04168701]
[458.58276367 31.90011597]
[446.74822998 43.25247192]
[431.07714844 38.42042160]
[416.57171631 42.24048996]
[402.06631470 46.06055450]
[399.34686279 58.02819443]
[391.71524048 67.73213196]
[380.59579468 73.26061249]
[368.10726929 73.49066162]
[356.65939331 68.31562042]
[348.48764038 58.67775726]
[333.80480957 61.74604034]
[319.12197876 64.81432343]
[304.43914795 67.88259888]
[289.75631714 70.95088196]
[275.07345581 74.01916504]
[260.39062500 77.08744049]
[255.86909485 91.27973938]
[244.77700806 101.37040710]
[230.02592468 104.57537842]
[215.55618286 99.93605042]
[205.28437805 88.60303497]
[190.60154724 91.67131042]
[175.91870117 94.73959351]
[161.23587036 97.80787659]
[155.26138306 102.30925751]
[146.13568115 100.76099396]
[131.37870789 103.45020294]
[116.62174225 106.13941193]
[131.05575562 110.22100067]
[142.36450195 120.07554626]
[148.38204956 133.81561279]
[147.95582581 148.80955505]
[141.16749573 162.18559265]
[129.31719971 171.38182068]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 42]
[6 41]
[7 40]
[8 39]
[9 38]
[13 37]
[14 36]
[15 35]
[16 34]
[17 33]
[19 31]
[20 30]
[21 29]
[22 28]
[43 60]
[44 59]
[45 58]
[46 57]
[47 56]
[48 55]
[49 54]
[61 115]
[62 114]
[63 113]
[64 111]
[65 110]
[66 109]
[67 108]
[72 103]
[73 102]
[74 101]
[75 100]
[76 99]
[77 98]
[78 97]
[82 91]
[83 90]
[84 89]
] def

init

% Start Annotations
5 42 0.0 1 colorpair
6 41 0.0 1 colorpair
7 40 0.0 1 colorpair
8 39 0.0 1 colorpair
9 38 0.0 1 colorpair
13 37 0.0 1 colorpair
14 36 0.0 1 colorpair
15 35 0.0 1 colorpair
16 34 0.0 1 colorpair
17 33 0.0 1 colorpair
19 31 0.0 1 colorpair
20 30 0.0 1 colorpair
21 29 0.0 1 colorpair
22 28 0.0 1 colorpair
43 60 0.0 1 colorpair
44 59 0.0 1 colorpair
45 58 0.0 1 colorpair
46 57 0.0 1 colorpair
47 56 0.0 1 colorpair
48 55 0.0 1 colorpair
49 54 0.0 1 colorpair
61 115 0.0 1 colorpair
62 114 0.0 1 colorpair
63 113 0.0 1 colorpair
64 111 0.0 1 colorpair
65 110 0.0 1 colorpair
66 109 0.0 1 colorpair
67 108 0.0 1 colorpair
72 103 0.0 1 colorpair
73 102 0.0 1 colorpair
74 101 0.0 1 colorpair
75 100 0.0 1 colorpair
76 99 0.0 1 colorpair
77 98 0.0 1 colorpair
78 97 0.0 1 colorpair
82 91 0.0 1 colorpair
83 90 0.0 1 colorpair
84 89 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
