%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:27:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGUUAUCUGGUGCCUUGUUAUCGUCUGUCUGACGAUACUGGCAUUCACACUGUUGACCCGCCAUUCGCUUUACGAACUGCGAAUACGGGAUGGUAUCAGGGAGGUUGCGGCAGUUAUGGCUUGUGAGUCCAGCCAGUAAGGGCAACCGGCGGGGAGUCAUCCCCGCCACCGCCGUGUUGAGUUGAGGCGUUCCCAG\
) } def
/len { sequence length } bind def

/coor [
[33.29178619 137.12991333]
[26.47536278 142.77850342]
[18.81005478 147.19314575]
[10.51661682 150.24943542]
[1.83343649 151.86206055]
[-6.99032259 151.98712158]
[-15.70186615 150.62342834]
[-24.05201530 147.81236267]
[-31.80233192 143.63670349]
[-38.73192596 138.21813965]
[-50.37412262 147.67642212]
[-62.01631927 157.13471985]
[-73.65851593 166.59300232]
[-85.30071259 176.05130005]
[-96.94290924 185.50958252]
[-99.04718781 198.24201965]
[-108.94770050 205.87973022]
[-120.99873352 204.75671387]
[-132.78952026 214.02909851]
[-137.60739136 221.80250549]
[-144.84175110 223.35328674]
[-156.77818298 232.43742371]
[-168.71459961 241.52157593]
[-180.65103149 250.60571289]
[-192.58746338 259.68988037]
[-204.52389526 268.77401733]
[-208.09713745 284.41406250]
[-222.61482239 291.24169922]
[-236.94021606 284.01931763]
[-240.08409119 268.28732300]
[-229.63476562 256.11395264]
[-213.60803223 256.83758545]
[-201.67160034 247.75343323]
[-189.73518372 238.66929626]
[-177.79875183 229.58514404]
[-165.86231995 220.50100708]
[-153.92590332 211.41685486]
[-142.06190491 202.23829651]
[-130.27111816 192.96591187]
[-124.64241791 176.34889221]
[-106.40119934 173.86738586]
[-94.75900269 164.40908813]
[-83.11680603 154.95080566]
[-71.47460938 145.49252319]
[-59.83241272 136.03422546]
[-48.19021606 126.57593536]
[-53.80984497 113.17607117]
[-55.49882889 98.74403381]
[-53.12505341 84.40869904]
[-46.87419891 71.29141235]
[-58.05316544 61.28987503]
[-69.23213196 51.28833771]
[-80.41110229 41.28680420]
[-91.59006500 31.28526878]
[-96.72073364 30.21465302]
[-100.54027557 27.54503250]
[-102.65843964 24.04642296]
[-103.04843903 20.53197861]
[-113.73885345 10.00985527]
[-124.42926788 -0.51226825]
[-135.11967468 -11.03439140]
[-148.00689697 -11.71446323]
[-156.69490051 -20.70742035]
[-156.91452026 -32.80867386]
[-167.43664551 -43.49908447]
[-177.95877075 -54.18949890]
[-188.48089600 -64.87991333]
[-199.00302124 -75.57032013]
[-209.52514648 -86.26073456]
[-224.37139893 -82.32576752]
[-239.19192505 -86.35660553]
[-250.00006104 -97.26897430]
[-253.88847351 -112.12750244]
[-249.81120300 -126.93531799]
[-238.86500549 -137.70919800]
[-223.99436951 -141.55101013]
[-209.19940186 -137.42733765]
[-198.45989990 -126.44743347]
[-194.66470337 -111.56481934]
[-198.83473206 -96.78285980]
[-188.31260681 -86.09244537]
[-177.79048157 -75.40203094]
[-167.26835632 -64.71162415]
[-156.74623108 -54.02120972]
[-146.22410583 -43.33079529]
[-129.08560181 -39.57858276]
[-124.59755707 -21.72480392]
[-113.90714264 -11.20268059]
[-103.21672821 -0.68055755]
[-92.52632141 9.84156609]
[-81.58853149 20.10630226]
[-70.40956116 30.10783768]
[-59.23059845 40.10937119]
[-48.05163193 50.11090851]
[-36.87266541 60.11244202]
[-17.83266640 49.91343689]
[3.75334287 48.32603836]
[24.16467857 55.66030121]
[39.86831665 70.68535614]
[48.13042450 90.83580017]
[63.12287140 90.35987854]
[78.11531830 89.88396454]
[93.10777283 89.40804291]
[107.07707977 83.94375610]
[118.41332245 74.12084198]
[129.74955750 64.29793549]
[141.08581543 54.47502136]
[152.42205811 44.65211105]
[163.75830078 34.82920074]
[158.80450439 22.32235909]
[157.94999695 8.92018509]
[161.26403809 -4.07034969]
[168.41003418 -15.38675404]
[178.67970276 -23.93371582]
[191.06323242 -28.88911438]
[204.34861755 -29.78307915]
[217.24020386 -26.54251671]
[228.48509216 -19.49685669]
[240.12728882 -28.95514679]
[251.76948547 -38.41343689]
[263.41168213 -47.87172699]
[275.05389404 -57.33001709]
[280.88604736 -72.03703308]
[295.64306641 -74.05696869]
[298.71829224 -89.80252838]
[313.01202393 -97.08733368]
[327.55935669 -90.32310486]
[331.20080566 -74.69878387]
[321.14297485 -62.20001221]
[305.10134888 -62.41477203]
[300.10189819 -48.38427734]
[284.51217651 -45.68782043]
[272.86996460 -36.22953033]
[261.22778320 -26.77124023]
[249.58558655 -17.31295013]
[237.94338989 -7.85466051]
[243.07257080 7.97706795]
[241.72909546 24.60149193]
[234.09065247 39.46949768]
[221.30236816 50.29043961]
[205.30516052 55.38502502]
[188.54124451 53.94590378]
[173.58120728 46.16544342]
[162.24496460 55.98835373]
[150.90872192 65.81126404]
[139.57247925 75.63417816]
[128.23623657 85.45708466]
[116.89998627 95.27999878]
[119.85551453 109.98594666]
[134.10658264 114.66645050]
[148.35765076 119.34694672]
[162.60871887 124.02745056]
[176.85978699 128.70794678]
[191.11085510 133.38845825]
[205.36192322 138.06895447]
[219.61297607 142.74945068]
[235.54495239 138.86302185]
[246.67956543 150.90263367]
[241.56246948 166.48300171]
[225.45771790 169.57635498]
[214.93247986 157.00051880]
[200.68141174 152.32002258]
[186.43034363 147.63952637]
[172.17927551 142.95901489]
[157.92820740 138.27851868]
[143.67715454 133.59802246]
[129.42608643 128.91751099]
[115.17501068 124.23701477]
[110.53881836 130.13241577]
[101.26643372 141.92320251]
[96.63024139 147.81860352]
[104.53862762 160.56448364]
[112.44700623 173.31036377]
[120.35539246 186.05624390]
[135.52641296 184.38208008]
[149.91856384 189.46426392]
[160.67428589 200.29371643]
[165.65802002 214.72027588]
[163.88021851 229.87950134]
[155.69389343 242.76153564]
[142.72444153 250.80863953]
[127.54694366 252.42304993]
[113.17491150 247.28424072]
[102.46192169 236.41250610]
[97.53504181 221.96644592]
[99.37252045 206.81433105]
[107.60951233 193.96463013]
[99.70112610 181.21875000]
[91.79274750 168.47286987]
[83.88436127 155.72698975]
[80.73761749 126.66582489]
[93.58368683 104.40048981]
[78.59123993 104.87641144]
[63.59879303 105.35232544]
[48.60634232 105.82824707]
[46.83325195 114.53018188]
[43.62057877 122.80191803]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 46]
[11 45]
[12 44]
[13 43]
[14 42]
[15 41]
[18 39]
[19 38]
[21 37]
[22 36]
[23 35]
[24 34]
[25 33]
[26 32]
[50 95]
[51 94]
[52 93]
[53 92]
[54 91]
[58 90]
[59 89]
[60 88]
[61 87]
[64 85]
[65 84]
[66 83]
[67 82]
[68 81]
[69 80]
[100 195]
[101 194]
[102 193]
[103 192]
[104 148]
[105 147]
[106 146]
[107 145]
[108 144]
[109 143]
[118 136]
[119 135]
[120 134]
[121 133]
[122 132]
[124 130]
[149 168]
[150 167]
[151 166]
[152 165]
[153 164]
[154 163]
[155 162]
[156 161]
[171 190]
[172 189]
[173 188]
[174 187]
] def

init

% Start Annotations
10 46 0.0 1 colorpair
11 45 0.0 1 colorpair
12 44 0.0 1 colorpair
13 43 0.0 1 colorpair
14 42 0.0 1 colorpair
15 41 0.0 1 colorpair
18 39 0.0 1 colorpair
19 38 0.0 1 colorpair
21 37 0.0 1 colorpair
22 36 0.0 1 colorpair
23 35 0.0 1 colorpair
24 34 0.0 1 colorpair
25 33 0.0 1 colorpair
26 32 0.0 1 colorpair
50 95 0.0 1 colorpair
51 94 0.0 1 colorpair
52 93 0.0 1 colorpair
53 92 0.0 1 colorpair
54 91 0.0 1 colorpair
58 90 0.0 1 colorpair
59 89 0.0 1 colorpair
60 88 0.0 1 colorpair
61 87 0.0 1 colorpair
64 85 0.0 1 colorpair
65 84 0.0 1 colorpair
66 83 0.0 1 colorpair
67 82 0.0 1 colorpair
68 81 0.0 1 colorpair
69 80 0.0 1 colorpair
100 195 0.0 1 colorpair
101 194 0.0 1 colorpair
102 193 0.0 1 colorpair
103 192 0.0 1 colorpair
104 148 0.0 1 colorpair
105 147 0.0 1 colorpair
106 146 0.0 1 colorpair
107 145 0.0 1 colorpair
108 144 0.0 1 colorpair
109 143 0.0 1 colorpair
118 136 0.0 1 colorpair
119 135 0.0 1 colorpair
120 134 0.0 1 colorpair
121 133 0.0 1 colorpair
122 132 0.0 1 colorpair
124 130 0.0 1 colorpair
149 168 0.0 1 colorpair
150 167 0.0 1 colorpair
151 166 0.0 1 colorpair
152 165 0.0 1 colorpair
153 164 0.0 1 colorpair
154 163 0.0 1 colorpair
155 162 0.0 1 colorpair
156 161 0.0 1 colorpair
171 190 0.0 1 colorpair
172 189 0.0 1 colorpair
173 188 0.0 1 colorpair
174 187 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
