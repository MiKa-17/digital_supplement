%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 23:48:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_______________GAGAUGCUGACAAAAUACGCCCUGGU___GGCAAUCAUCGUACUGUGUCUCACGGUGCUGGGAUUCACGUUAAUGGUGCGCAACUCGCUGUGCGAACUCAGCAUCAAAGAACGUAGUAUGGAGUUCAAGGCUGUUCUCGCUUACGAAUCG___AAGAAG\
) } def
/len { sequence length } bind def

/coor [
[123.65859222 394.95394897]
[112.98400879 405.49215698]
[101.49200439 415.13235474]
[89.25789642 423.81146240]
[76.36186218 431.47253418]
[62.88840103 438.06539917]
[48.92581940 443.54687500]
[34.56561661 447.88098145]
[19.90189552 451.03933716]
[5.03075361 453.00128174]
[-9.95035267 453.75390625]
[-24.94324875 453.29229736]
[-39.84968185 451.61947632]
[-54.57196426 448.74642944]
[-69.01361847 444.69198608]
[-83.07999420 439.48266602]
[-96.67892456 433.15264893]
[-109.72129059 425.74340820]
[-122.12161255 417.30349731]
[-133.79862976 407.88824463]
[-144.67582703 397.55932617]
[-154.68190002 386.38442993]
[-163.75131226 374.43679810]
[-171.82460022 361.79470825]
[-178.84886169 348.54104614]
[-184.77807617 334.76263428]
[-189.57337952 320.54980469]
[-193.20333862 305.99563599]
[-195.64418030 291.19555664]
[-196.87991333 276.24655151]
[-196.90242004 261.24658203]
[-195.71154785 246.29391479]
[-193.31513977 231.48657227]
[-189.72886658 216.92160034]
[-184.97622681 202.69442749]
[-179.08839417 188.89828491]
[-172.10392761 175.62359619]
[-164.06861877 162.95735168]
[-155.03511047 150.98255920]
[-145.06260681 139.77769470]
[-134.21646118 129.41616821]
[-122.56774902 119.96590424]
[-110.19281006 111.48882294]
[-97.17273712 104.04048157]
[-83.59286499 97.66968536]
[-69.54218292 92.41819000]
[-55.11275864 88.32040405]
[-40.39916611 85.40319061]
[-25.49781990 83.68566132]
[-10.50637722 83.17906952]
[4.47692013 83.88674164]
[19.35388184 85.80403137]
[34.02701569 88.91838074]
[48.40016174 93.20938110]
[62.39532852 98.65597534]
[51.18829346 88.68590546]
[39.98126221 78.71582794]
[28.77422714 68.74575043]
[17.56719398 58.77567673]
[6.36015987 48.80560303]
[-4.84687328 38.83552551]
[-20.88201714 38.33182144]
[-30.37014771 25.39524651]
[-26.03278351 9.94963837]
[-11.19717884 3.84354377]
[2.75605965 11.76103592]
[5.12320185 27.62849236]
[16.33023453 37.59856796]
[27.53726959 47.56864548]
[38.74430084 57.53871918]
[49.95133591 67.50879669]
[61.15837097 77.47886658]
[72.36540222 87.44894409]
[79.82193756 86.64266968]
[78.20961761 71.72957611]
[93.12273407 70.11747742]
[94.73500824 85.03011322]
[102.19154358 84.22383881]
[111.00832367 72.08858490]
[119.82510376 59.95332718]
[128.64187622 47.81807327]
[131.16711426 39.00398636]
[137.72744751 35.54602432]
[146.76065063 23.57099533]
[155.79385376 11.59596634]
[150.63533020 -4.49582434]
[156.01947021 -20.33832359]
[169.64202881 -29.76556206]
[186.03382874 -29.23305702]
[194.85060120 -41.36831284]
[203.66738892 -53.50356674]
[205.51931763 -69.21601105]
[219.25982666 -74.96472168]
[228.07659912 -87.09997559]
[229.92852783 -102.81241608]
[243.66903687 -108.56112671]
[252.48582458 -120.69638062]
[250.21583557 -136.10693359]
[259.33016968 -148.28820801]
[274.03576660 -150.35733032]
[282.85253906 -162.49258423]
[291.66931152 -174.62783813]
[300.48608398 -186.76309204]
[304.90451050 -203.13116455]
[321.85604858 -203.41654968]
[326.82293701 -187.20648193]
[312.62133789 -177.94630432]
[303.80456543 -165.81105042]
[294.98779297 -153.67579651]
[286.17102051 -141.54054260]
[288.74743652 -126.91530609]
[279.97885132 -114.48283386]
[264.62106323 -111.87960052]
[255.80429077 -99.74434662]
[254.58300781 -84.89989471]
[240.21185303 -78.28319550]
[231.39508057 -66.14794159]
[230.17378235 -51.30348969]
[215.80264282 -44.68678665]
[206.98585510 -32.55153275]
[198.16908264 -20.41627693]
[203.45887756 -8.13808727]
[201.97062683 5.25706244]
[193.98747253 16.25009155]
[181.51290894 21.89974403]
[167.76887512 20.62916374]
[158.73568726 32.60419464]
[149.70248413 44.57922363]
[140.77713013 56.63484955]
[131.96035767 68.77010345]
[123.14357758 80.90535736]
[114.32679749 93.04061890]
[127.88220215 86.61791992]
[137.41961670 75.04045105]
[151.42272949 69.66339874]
[166.25773621 71.88208771]
[178.07495117 81.12078094]
[183.80781555 94.98203278]
[181.96864319 109.86885834]
[173.03469849 121.91811371]
[159.32434082 128.00303650]
[144.39541626 126.54457855]
[132.12261963 117.92198944]
[117.34704590 115.33698273]
[129.07452393 124.68933105]
[140.80198669 134.04168701]
[156.09263611 130.76602173]
[169.88725281 138.13099670]
[175.67240906 152.65910339]
[170.71655273 167.49061584]
[157.35969543 175.62252808]
[141.90850830 173.21522522]
[131.65859985 161.40533447]
[131.44964600 145.76914978]
[119.72217560 136.41680908]
[107.99469757 127.06446075]
[119.03999329 137.21342468]
[129.22817993 148.22254944]
[138.49249268 160.01968384]
[146.77223206 172.52752686]
[154.01313782 185.66409302]
[160.16773987 199.34329224]
[165.19572449 213.47550964]
[169.06411743 227.96810913]
[171.74760437 242.72612000]
[173.22857666 257.65283203]
[173.49731445 272.65042114]
[172.55209351 287.62060547]
[170.39907837 302.46530151]
[167.05239868 317.08718872]
[162.53396606 331.39047241]
[156.87341309 345.28140259]
[150.10781860 358.66894531]
[142.28150940 371.46539307]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[55 73]
[56 72]
[57 71]
[58 70]
[59 69]
[60 68]
[61 67]
[78 132]
[79 131]
[80 130]
[81 129]
[83 128]
[84 127]
[85 126]
[89 121]
[90 120]
[91 119]
[93 117]
[94 116]
[96 114]
[97 113]
[100 110]
[101 109]
[102 108]
[103 107]
[144 156]
[145 155]
[146 154]
] def

init

% Start Annotations
55 73 0.32 1 colorpair
56 72 0.16 0.2 colorpair
57 71 0.32 0.2 colorpair
58 70 0.16 0.6 colorpair
59 69 0.16 0.6 colorpair
60 68 0.0 0.2 colorpair
61 67 0.0 1 colorpair
79 131 0.16 0.6 colorpair
80 130 0.16 1 colorpair
83 128 0.0 0.2 colorpair
84 127 0.32 0.2 colorpair
89 121 0.0 0.6 colorpair
90 120 0.32 0.2 colorpair
91 119 0.32 0.2 colorpair
94 116 0.0 0.2 colorpair
97 113 0.16 1 colorpair
100 110 0.0 0.6 colorpair
101 109 0.0 0.6 colorpair
102 108 0.32 0.2 colorpair
103 107 0.16 1 colorpair
144 156 0.32 0.6 colorpair
145 155 0.0 0.6 colorpair
146 154 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
55 cmark
73 cmark
56 72 2 gmark
72 cmark
57 71 2 gmark
57 cmark
71 cmark
58 70 1 gmark
58 cmark
70 cmark
59 69 1 gmark
69 cmark
60 68 2 gmark
78 132 3 gmark
78 cmark
132 cmark
79 131 1 gmark
131 cmark
130 cmark
81 129 4 gmark
81 cmark
129 cmark
83 128 2 gmark
84 127 2 gmark
84 cmark
127 cmark
85 126 4 gmark
85 cmark
126 cmark
89 121 1 gmark
90 120 2 gmark
90 cmark
120 cmark
91 119 2 gmark
91 cmark
119 cmark
93 117 3 gmark
93 cmark
117 cmark
94 116 2 gmark
96 114 3 gmark
96 cmark
114 cmark
97 cmark
100 110 1 gmark
101 109 1 gmark
102 108 2 gmark
102 cmark
108 cmark
103 cmark
144 156 1 gmark
144 cmark
156 cmark
145 155 1 gmark

% End Annotations
showpage
end
%%EOF
