%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 23:48:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUGGU___GGCAAUCAUCGUGCUGUGUAUCACGGUGCUGGGAUUUACGUUGAUGGUGCGCGACUCGCUGUGCGAACUCAGGAUCAAAGAGCGUAGUAUGGAGUUGAAGGCUGUUCUCGCUUACGAAUCG___AAGAAGUAGC__AU__CAGCGGGGGGGUA_CCCCGCUUAUCCGCAGGCAGGAUG_____A_AA_CUUG_A_GCAC_UUU_UAUUUG_UUAA_CG_\
) } def
/len { sequence length } bind def

/coor [
[-19.39530182 513.90881348]
[-32.16215897 510.01083374]
[-44.80211258 505.71920776]
[-57.30303192 501.03799438]
[-69.65290833 495.97174072]
[-81.83988953 490.52526855]
[-93.85227203 484.70379639]
[-105.67852020 478.51296997]
[-117.30728149 471.95867920]
[-128.72738647 465.04727173]
[-139.92787170 457.78533936]
[-150.89797974 450.17984009]
[-161.62718201 442.23812866]
[-172.10516357 433.96780396]
[-182.32188416 425.37680054]
[-192.26753235 416.47338867]
[-201.93254089 407.26611328]
[-211.30764771 397.76379395]
[-220.38383484 387.97555542]
[-229.15238953 377.91082764]
[-237.60490417 367.57922363]
[-245.73326111 356.99072266]
[-253.52964783 346.15545654]
[-260.98657227 335.08383179]
[-268.09689331 323.78649902]
[-274.85375977 312.27429199]
[-281.25073242 300.55822754]
[-287.28158569 288.64962769]
[-292.94061279 276.55987549]
[-298.22235107 264.30059814]
[-303.12170410 251.88356018]
[-307.63400269 239.32067871]
[-311.75488281 226.62402344]
[-315.48040771 213.80580139]
[-318.80697632 200.87829590]
[-321.73144531 187.85392761]
[-324.25094604 174.74519348]
[-326.36312866 161.56471252]
[-328.06588745 148.32510376]
[-329.35763550 135.03909302]
[-330.23712158 121.71944427]
[-330.70352173 108.37893677]
[-330.75634766 95.03038788]
[-330.39556885 81.68660736]
[-329.62152100 68.36041260]
[-328.43496704 55.06459808]
[-326.83706665 41.81193161]
[-324.82928467 28.61513329]
[-322.41360474 15.48687744]
[-319.59231567 2.43977070]
[-334.14123535 -1.21114242]
[-348.69015503 -4.86205578]
[-356.39004517 5.85853910]
[-367.24621582 13.30986404]
[-379.95651245 16.62449265]
[-393.00543213 15.42958164]
[-404.84454346 9.88867760]
[-414.07644653 0.67972356]
[-419.61959839 -11.08782196]
[-420.83505249 -24.00661659]
[-435.27880859 -28.05356979]
[-449.72256470 -32.10052109]
[-464.16632080 -36.14747238]
[-476.25170898 -26.41490364]
[-491.75128174 -25.67833138]
[-504.70516968 -34.22098541]
[-510.13229370 -48.75803757]
[-505.94583130 -63.69969940]
[-493.75555420 -73.30059052]
[-478.24890137 -73.86898041]
[-465.38845825 -65.18630219]
[-460.11935425 -50.59123230]
[-445.67559814 -46.54428101]
[-431.23184204 -42.49732971]
[-416.78808594 -38.45037842]
[-405.98376465 -51.45451355]
[-390.52871704 -58.44449615]
[-373.51773071 -57.96741486]
[-358.38049316 -50.07095718]
[-348.19009399 -36.30355072]
[-345.03924561 -19.41096687]
[-330.49032593 -15.76005459]
[-315.94140625 -12.10914135]
[-309.97833252 -32.26296234]
[-303.03933716 -52.10195541]
[-295.14099121 -71.57888794]
[-286.30206299 -90.64740753]
[-276.54360962 -109.26211548]
[-265.88885498 -127.37870789]
[-254.36312866 -144.95405579]
[-241.99391174 -161.94633484]
[-228.81063843 -178.31509399]
[-214.84466553 -194.02134705]
[-200.12925720 -209.02774048]
[-184.69944763 -223.29853821]
[-168.59193420 -236.79977417]
[-151.84509277 -249.49931335]
[-134.49876404 -261.36691284]
[-116.59425354 -272.37432861]
[-98.17417145 -282.49539185]
[-79.28236389 -291.70596313]
[-59.96380234 -299.98413086]
[-40.26447296 -307.31021118]
[-20.23126221 -313.66671753]
[0.08814025 -319.03860474]
[20.64536667 -323.41299438]
[41.39148712 -326.77951050]
[62.27711487 -329.13015747]
[83.25253296 -330.45935059]
[104.26782227 -330.76385498]
[104.67754364 -345.75827026]
[105.08726501 -360.75265503]
[93.26795197 -370.99169922]
[90.84641266 -386.44064331]
[98.96602631 -399.80499268]
[113.79296112 -404.77450562]
[128.32638550 -399.00274658]
[135.70407104 -385.21493530]
[132.44248962 -369.92126465]
[120.08166504 -360.34295654]
[119.67194366 -345.34854126]
[119.26222229 -330.35415649]
[132.58668518 -329.55072021]
[145.87985229 -328.33486938]
[159.12896729 -326.70773315]
[172.32130432 -324.67086792]
[185.44419861 -322.22625732]
[198.48504639 -319.37622070]
[211.43135071 -316.12350464]
[224.27064514 -312.47125244]
[236.99061584 -308.42294312]
[249.57905579 -303.98245239]
[262.02386475 -299.15408325]
[274.31311035 -293.94244385]
[286.43499756 -288.35256958]
[298.37783813 -282.38980103]
[310.13021851 -276.05984497]
[321.68084717 -269.36883545]
[333.01861572 -262.32312012]
[344.13262939 -254.92955017]
[355.01223755 -247.19515991]
[365.64697266 -239.12741089]
[376.02667236 -230.73402405]
[386.14132690 -222.02308655]
[395.98120117 -213.00294495]
[405.53692627 -203.68226624]
[414.79925537 -194.06999207]
[423.75930786 -184.17535400]
[432.40850830 -174.00785828]
[440.73852539 -163.57725525]
[448.74139404 -152.89358521]
[456.40939331 -141.96708679]
[463.73516846 -130.80825806]
[470.71170044 -119.42780304]
[477.33227539 -107.83666229]
[483.59054565 -96.04595947]
[489.48049927 -84.06701660]
[494.99645996 -71.91133881]
[500.13317871 -59.59059143]
[504.88568115 -47.11660767]
[509.24945068 -34.50136566]
[513.22021484 -21.75697899]
[516.79425049 -8.89568138]
[519.96807861 4.07017422]
[522.73864746 17.12814140]
[525.10333252 30.26567841]
[527.05981445 43.47017670]
[528.60626221 56.72895050]
[529.74114990 70.02927399]
[530.46343994 83.35837555]
[530.77239990 96.70345306]
[530.66772461 110.05169678]
[530.14953613 123.39028931]
[529.21832275 136.70642090]
[527.87493896 149.98731995]
[526.12078857 163.22021484]
[523.95745850 176.39239502]
[521.38702393 189.49124146]
[518.41204834 202.50415039]
[515.03527832 215.41864014]
[511.25997925 228.22230530]
[507.08981323 240.90284729]
[502.52874756 253.44810486]
[497.58120728 265.84600830]
[492.25192261 278.08468628]
[486.54598999 290.15237427]
[480.46890259 302.03747559]
[474.02648926 313.72857666]
[467.22494507 325.21447754]
[460.07080078 336.48413086]
[452.57092285 347.52670288]
[444.73251343 358.33160400]
[436.56311035 368.88845825]
[428.07052612 379.18713379]
[419.26293945 389.21774292]
[410.14880371 398.97064209]
[400.73687744 408.43646240]
[391.03616333 417.60614014]
[381.05603027 426.47088623]
[370.80599976 435.02212524]
[360.29598999 443.25167847]
[349.53601074 451.15167236]
[338.53643799 458.71447754]
[327.30783081 465.93286133]
[315.86099243 472.79989624]
[304.20684814 479.30895996]
[292.35665894 485.45379639]
[280.32174683 491.22857666]
[268.11370850 496.62765503]
[255.74424744 501.64593506]
[243.22523499 506.27853394]
[230.56871033 510.52105713]
[217.78680420 514.36938477]
[204.89181519 517.81982422]
[191.89610291 520.86914062]
[178.81216431 523.51428223]
[165.65254211 525.75280762]
[152.42987061 527.58251953]
[139.15687561 529.00170898]
[125.84627533 530.00897217]
[112.51085663 530.60327148]
[99.16342926 530.78417969]
[85.81680298 530.55145264]
[72.48379517 529.90533447]
[59.17720795 528.84637451]
[45.90981674 527.37567139]
[32.69436646 525.49462891]
[19.54353714 523.20501709]
[6.46996260 520.50903320]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[50 83]
[51 82]
[52 81]
[60 75]
[61 74]
[62 73]
[63 72]
[110 122]
[111 121]
[112 120]
] def

init

% Start Annotations
51 82 0.32 1 colorpair
60 75 0.0 0.6 colorpair
61 74 0.16 1 colorpair
63 72 0.16 1 colorpair
110 122 0.32 0.6 colorpair
111 121 0.0 0.6 colorpair
112 120 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
50 83 3 gmark
50 cmark
83 cmark
51 cmark
82 cmark
52 81 3 gmark
52 cmark
81 cmark
60 75 1 gmark
74 cmark
62 73 5 gmark
62 cmark
63 cmark
110 122 1 gmark
110 cmark
122 cmark
111 121 1 gmark

% End Annotations
showpage
end
%%EOF
