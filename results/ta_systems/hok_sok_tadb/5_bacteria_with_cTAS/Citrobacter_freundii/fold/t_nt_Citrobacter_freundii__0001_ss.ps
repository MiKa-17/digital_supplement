%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:17:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAGAGGCUAACCUG_AUGGUGACUAGACAUACAG_UGGGCCUCG______GGUUAAUGAAAAAAAA__UUACU_CGGGGCUUUCUGCUUUCUGCCACACAACA______ACAAACCCACUGAACGGCAUGAGGCAAAAAGCCUCAAGCGCCAGAGCCAUUAUA\
) } def
/len { sequence length } bind def

/coor [
[82.05848694 218.08299255]
[64.28092957 213.97210693]
[47.33701706 207.20121765]
[31.62220192 197.92839050]
[17.50324821 186.37001038]
[5.30967855 172.79583740]
[-7.13289356 181.17333984]
[-19.57546616 189.55082703]
[-32.01803970 197.92832947]
[-44.46060944 206.30581665]
[-56.90318298 214.68330383]
[-60.14890671 227.19535828]
[-70.72054291 233.91178894]
[-82.63687897 231.68069458]
[-95.15769196 239.94078064]
[-107.60026550 248.31826782]
[-120.04283905 256.69577026]
[-127.16886902 270.82128906]
[-142.04748535 271.51132202]
[-154.49005127 279.88882446]
[-166.93263245 288.26632690]
[-179.37519836 296.64382935]
[-191.81776428 305.02130127]
[-196.29093933 320.42813110]
[-211.17973328 326.40338135]
[-225.06272888 318.36334229]
[-227.29008484 302.47567749]
[-216.15316772 290.92800903]
[-200.19526672 292.57873535]
[-187.75268555 284.20123291]
[-175.31011963 275.82376099]
[-162.86755371 267.44625854]
[-150.42497253 259.06875610]
[-144.18891907 245.54246521]
[-128.42033386 244.25318909]
[-115.97776031 235.87570190]
[-103.53518677 227.49821472]
[-99.72666168 221.12670898]
[-90.77883148 219.08273315]
[-83.65658569 203.06399536]
[-65.28067780 202.24073792]
[-52.83810425 193.86325073]
[-40.39553070 185.48574829]
[-27.95295906 177.10826111]
[-15.51038742 168.73075867]
[-3.06781483 160.35327148]
[-8.70114517 149.49296570]
[-13.19392681 138.11334229]
[-16.49902153 126.33381653]
[-18.58174706 114.27798462]
[-19.42025375 102.07234192]
[-19.00574303 89.84495544]
[-17.34256363 77.72412109]
[-14.44816494 65.83702087]
[-10.35291862 54.30836868]
[-5.09979343 43.25914001]
[1.25609255 32.80526352]
[8.64804935 23.05642891]
[16.99851799 14.11492634]
[26.21988106 6.07457352]
[36.21538162 -0.98026657]
[46.88014221 -6.97557020]
[58.10226440 -11.84843159]
[69.76399994 -15.54772186]
[81.74298859 -18.03462791]
[93.91353607 -19.28305244]
[106.14794159 -19.27989960]
[118.31784821 -18.02520180]
[130.29554749 -15.53212357]
[141.95536804 -11.82682323]
[153.17498779 -6.94817877]
[163.83665466 -0.94737935]
[173.82852173 6.11261129]
[183.04573059 14.15771580]
[191.39158630 23.10352135]
[198.77851868 32.85616302]
[205.12902832 43.31331253]
[210.37644958 54.36524963]
[224.57092285 49.51583481]
[238.76541138 44.66641617]
[249.32305908 32.88310242]
[263.86828613 36.09024048]
[278.06277466 31.24082565]
[292.25723267 26.39140892]
[306.45172119 21.54199219]
[311.11648560 6.86050320]
[323.38827515 -2.15372968]
[338.43688965 -2.21271729]
[350.49035645 6.49658537]
[364.68481445 1.64716876]
[378.87930298 -3.20224762]
[393.07379150 -8.05166435]
[407.26824951 -12.90108013]
[421.46273804 -17.75049782]
[435.65719604 -22.59991264]
[449.85168457 -27.44932938]
[464.04617310 -32.29874802]
[478.24063110 -37.14816284]
[492.43511963 -41.99757767]
[506.62957764 -46.84699631]
[520.82403564 -51.69641113]
[531.38171387 -63.47972488]
[545.92694092 -60.27258682]
[560.12139893 -65.12200165]
[574.31591797 -69.97142029]
[573.28887939 -85.02491760]
[576.19396973 -99.83109283]
[582.83306885 -113.38043976]
[592.75354004 -124.74914551]
[605.27886963 -133.16207886]
[619.55523682 -138.04560852]
[634.60913086 -139.06678772]
[649.41418457 -136.15599060]
[662.96093750 -129.51167297]
[674.32580566 -119.58684540]
[682.73388672 -107.05821991]
[687.61193848 -92.78001404]
[688.62731934 -77.72573090]
[685.71075439 -62.92179871]
[679.06121826 -49.37757874]
[669.13201904 -38.01653671]
[656.60015869 -29.61328697]
[642.32006836 -24.74077606]
[627.26538086 -23.73122215]
[612.46258545 -26.65345573]
[598.92095947 -33.30823517]
[587.56372070 -43.24182892]
[579.16534424 -55.77694321]
[564.97082520 -50.92752838]
[550.77636719 -46.07810974]
[541.23400879 -34.64165878]
[525.67346191 -37.50193405]
[511.47900391 -32.65251923]
[497.28451538 -27.80310249]
[483.09005737 -22.95368576]
[468.89556885 -18.10426903]
[454.70111084 -13.25485325]
[440.50662231 -8.40543747]
[426.31213379 -3.55602050]
[412.11767578 1.29339588]
[397.92318726 6.14281225]
[383.72872925 10.99222851]
[369.53424072 15.84164524]
[355.33975220 20.69106102]
[351.13485718 34.95489120]
[339.19589233 44.11596298]
[323.97387695 44.49474716]
[311.30111694 35.73646927]
[297.10665894 40.58588409]
[282.91217041 45.43530273]
[268.71771240 50.28471756]
[259.17532349 61.72116852]
[243.61482239 58.86089325]
[229.42034912 63.71030807]
[215.22587585 68.55972290]
[218.67036438 86.47833252]
[219.34523010 104.71251678]
[217.23471069 122.83672333]
[212.38804626 140.42793274]
[204.91838074 157.07560730]
[195.00003052 172.39120483]
[182.86448669 186.01725769]
[168.79496765 197.63577271]
[153.11985779 206.97557068]
[136.20498657 213.81867981]
[118.44512939 218.00537109]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 46]
[7 45]
[8 44]
[9 43]
[10 42]
[11 41]
[14 39]
[15 37]
[16 36]
[17 35]
[19 33]
[20 32]
[21 31]
[22 30]
[23 29]
[78 155]
[79 154]
[80 153]
[82 151]
[83 150]
[84 149]
[85 148]
[89 144]
[90 143]
[91 142]
[92 141]
[93 140]
[94 139]
[95 138]
[96 137]
[97 136]
[98 135]
[99 134]
[100 133]
[101 132]
[103 130]
[104 129]
[105 128]
] def

init

% Start Annotations
6 46 0.0 1 colorpair
7 45 0.0 0.6 colorpair
8 44 0.0 1 colorpair
9 43 0.0 1 colorpair
10 42 0.0 1 colorpair
11 41 0.32 0.6 colorpair
14 39 0.16 0.2 colorpair
15 37 0.0 1 colorpair
16 36 0.16 1 colorpair
17 35 0.0 0.2 colorpair
19 33 0.16 1 colorpair
20 32 0.0 0.6 colorpair
21 31 0.0 0.6 colorpair
22 30 0.0 0.2 colorpair
23 29 0.16 0.2 colorpair
78 155 0.0 0.2 colorpair
79 154 0.0 1 colorpair
80 153 0.0 1 colorpair
82 151 0.0 1 colorpair
83 150 0.0 1 colorpair
84 149 0.0 1 colorpair
85 148 0.0 0.2 colorpair
89 144 0.0 0.2 colorpair
90 143 0.0 1 colorpair
91 142 0.16 0.6 colorpair
92 141 0.0 0.6 colorpair
93 140 0.0 0.6 colorpair
94 139 0.16 0.2 colorpair
95 138 0.0 1 colorpair
96 137 0.0 0.6 colorpair
97 136 0.0 1 colorpair
98 135 0.0 1 colorpair
99 134 0.0 0.2 colorpair
100 133 0.0 1 colorpair
101 132 0.0 1 colorpair
103 130 0.16 0.2 colorpair
104 129 0.16 0.6 colorpair
105 128 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
7 45 1 gmark
11 41 1 gmark
11 cmark
41 cmark
14 39 2 gmark
14 cmark
39 cmark
36 cmark
17 35 2 gmark
19 cmark
20 32 1 gmark
21 31 1 gmark
22 30 2 gmark
23 29 2 gmark
29 cmark
78 155 2 gmark
85 148 2 gmark
89 144 2 gmark
91 142 1 gmark
91 cmark
142 cmark
92 141 1 gmark
93 140 1 gmark
94 139 2 gmark
94 cmark
139 cmark
96 137 1 gmark
99 134 2 gmark
103 130 2 gmark
103 cmark
130 cmark
104 129 1 gmark
104 cmark
129 cmark
105 128 1 gmark
105 cmark
128 cmark

% End Annotations
showpage
end
%%EOF
