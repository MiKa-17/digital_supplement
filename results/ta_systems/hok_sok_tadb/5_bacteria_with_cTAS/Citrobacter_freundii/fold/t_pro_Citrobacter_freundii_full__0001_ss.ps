%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:17:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___________________________________CAUGCUGACAAAAUAUGCCCUUGUGGCAAUUGUAGUGCUGUGUUUCACGGCGCUGGGAUUCACGUUAAUGGUGCGAGAUUCGUUGUGCGAGUUAAGUAUUAAAGAACGUGGUAUGGAGUUUAAAGCUGUUCUCGCUUACGAACCGAA___GAA________________________\
) } def
/len { sequence length } bind def

/coor [
[84.99682617 374.40466309]
[75.21496582 373.69454956]
[65.46467590 372.63586426]
[55.75836563 371.22994995]
[46.10840988 369.47857666]
[36.52708817 367.38400269]
[27.02660942 364.94885254]
[17.61907196 362.17626953]
[8.31645870 359.06976318]
[-0.86938316 355.63330078]
[-9.92675400 351.87124634]
[-18.84411812 347.78839111]
[-27.61011696 343.38995361]
[-36.21358871 338.68151855]
[-44.64356995 333.66909790]
[-52.88933182 328.35906982]
[-60.94036484 322.75817871]
[-68.78642273 316.87359619]
[-76.41750336 310.71276855]
[-83.82389069 304.28359985]
[-90.99615479 297.59423828]
[-97.92515564 290.65319824]
[-104.60207367 283.46936035]
[-111.01840973 276.05181885]
[-117.16597748 268.41006470]
[-123.03695679 260.55383301]
[-128.62387085 252.49308777]
[-133.91958618 244.23812866]
[-138.91738892 235.79946899]
[-143.61088562 227.18783569]
[-147.99411011 218.41423035]
[-152.06149292 209.48979187]
[-155.80783081 200.42591858]
[-159.22836304 191.23413086]
[-162.31874084 181.92614746]
[-165.07501221 172.51380920]
[-167.49366760 163.00912476]
[-169.57164001 153.42417908]
[-171.30627441 143.77120972]
[-172.69535828 134.06246948]
[-173.73713684 124.31035614]
[-174.43026733 114.52728271]
[-174.77386475 104.72570801]
[-174.76751709 94.91810608]
[-174.41119385 85.11698151]
[-173.70538330 75.33481598]
[-172.65097046 65.58406067]
[-171.24929810 55.87713623]
[-169.50215149 46.22641373]
[-167.41175842 36.64417648]
[-164.98078918 27.14263153]
[-162.21231079 17.73388100]
[-159.10987854 8.42990875]
[-155.67742920 -0.75743699]
[-151.91934204 -9.81645393]
[-147.84040833 -18.73560524]
[-143.44580078 -27.50353050]
[-138.74114990 -36.10906219]
[-133.73242188 -44.54123688]
[-128.42599487 -52.78932190]
[-122.82863617 -60.84280777]
[-116.94747925 -68.69143677]
[-110.79000854 -76.32521820]
[-104.36407471 -83.73442078]
[-115.24088287 -94.06375122]
[-126.11769104 -104.39308167]
[-141.45254517 -108.28570557]
[-145.35328674 -122.66046143]
[-156.23008728 -132.98979187]
[-167.10690308 -143.31912231]
[-177.98370361 -153.64845276]
[-188.86050415 -163.97778320]
[-199.73731995 -174.30711365]
[-210.61412048 -184.63644409]
[-225.94898987 -188.52906799]
[-229.84971619 -202.90382385]
[-240.72653198 -213.23315430]
[-256.37545776 -219.75599670]
[-254.43957520 -236.59906006]
[-237.71884155 -239.40145874]
[-230.39720154 -224.10995483]
[-219.52038574 -213.78062439]
[-204.96351624 -210.62683105]
[-200.28479004 -195.51324463]
[-189.40798950 -185.18391418]
[-178.53118896 -174.85458374]
[-167.65437317 -164.52525330]
[-156.77757263 -154.19592285]
[-145.90075684 -143.86659241]
[-135.02395630 -133.53727722]
[-120.46707153 -130.38346863]
[-115.78836060 -115.26988983]
[-104.91155243 -104.94055939]
[-94.03474426 -94.61122894]
[-70.31752014 -115.67325592]
[-44.33132553 -133.86209106]
[-16.42235565 -148.93542480]
[13.03758907 -160.69244385]
[43.65604782 -168.97651672]
[75.02511597 -173.67730713]
[106.72689819 -174.73216248]
[138.33906555 -172.12704468]
[169.44049072 -165.89665222]
[199.61682129 -156.12399292]
[205.43363953 -169.95022583]
[211.25044250 -183.77645874]
[209.47013855 -199.49717712]
[221.53746033 -208.22810364]
[227.35426331 -222.05433655]
[217.33421326 -233.51556396]
[213.30046082 -248.13116455]
[216.00146484 -262.98797607]
[224.84878540 -275.14880371]
[238.04431152 -282.23315430]
[252.94541931 -282.88302612]
[258.76223755 -296.70925903]
[264.57904053 -310.53549194]
[270.39584351 -324.36172485]
[270.96487427 -341.30612183]
[287.40460205 -345.45001221]
[295.93750000 -330.79992676]
[284.22207642 -318.54492188]
[278.40527344 -304.71868896]
[272.58847046 -290.89245605]
[266.77163696 -277.06622314]
[276.72653198 -265.95919800]
[280.88891602 -251.57226562]
[278.38171387 -236.74407959]
[269.64944458 -224.42466736]
[256.38040161 -217.08850098]
[241.18049622 -216.23751831]
[235.36369324 -202.41128540]
[237.56005859 -187.67950439]
[225.07667542 -177.95964050]
[219.25987244 -164.13340759]
[213.44305420 -150.30717468]
[225.71945190 -144.37191772]
[237.68632507 -137.83500671]
[249.31420898 -130.71253967]
[260.57449341 -123.02207184]
[271.43945312 -114.78251648]
[281.88229370 -106.01417542]
[291.87738037 -96.73862457]
[301.40005493 -86.97869873]
[310.42684937 -76.75843811]
[318.93560791 -66.10299683]
[326.90536499 -55.03861618]
[334.31643677 -43.59252548]
[341.15066528 -31.79291344]
[347.39114380 -19.66882706]
[353.02258301 -7.25011730]
[358.03106689 5.43264246]
[362.40426636 18.34822655]
[366.13143921 31.46483612]
[369.20339966 44.75017929]
[371.61257935 58.17154694]
[373.35305786 71.69589996]
[374.42053223 85.28993225]
[374.81237793 98.92018127]
[374.52764893 112.55309296]
[373.56704712 126.15509796]
[371.93289185 139.69270325]
[369.62927246 153.13258362]
[366.66180420 166.44166565]
[363.03781128 179.58715820]
[358.76623535 192.53671265]
[353.85757446 205.25843811]
[367.55175781 211.37969971]
[381.24591064 217.50094604]
[394.10015869 208.97027588]
[409.52615356 208.76618958]
[422.60156250 216.95381165]
[429.15408325 230.92050171]
[427.09277344 246.20953369]
[417.07543945 257.94223022]
[402.29855347 262.37475586]
[387.47735596 258.09268188]
[377.34127808 246.46240234]
[375.12466431 231.19511414]
[361.43051147 225.07386780]
[347.73632812 218.95260620]
[343.33404541 227.71667480]
[338.62185669 236.31808472]
[333.60574341 244.74588013]
[328.29211426 252.98930359]
[322.68768311 261.03790283]
[316.79965210 268.88137817]
[310.63549805 276.50973511]
[304.20309448 283.91333008]
[297.51058960 291.08267212]
[290.56652832 298.00863647]
[283.37973022 304.68240356]
[275.95941162 311.09548950]
[268.31497192 317.23968506]
[260.45614624 323.10723877]
[252.39295959 328.69061279]
[244.13568115 333.98272705]
[235.69483948 338.97683716]
[227.08116150 343.66656494]
[218.30561829 348.04595947]
[209.37940979 352.10940552]
[200.31388855 355.85177612]
[191.12060547 359.26828003]
[181.81126404 362.35458374]
[172.39773560 365.10671997]
[162.89198303 367.52124023]
[153.30613708 369.59500122]
[143.65240479 371.32540894]
[133.94305420 372.71023560]
[124.19049072 373.74774170]
[114.40711212 374.43658447]
[104.60538483 374.77590942]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[64 94]
[65 93]
[66 92]
[68 90]
[69 89]
[70 88]
[71 87]
[72 86]
[73 85]
[74 84]
[76 82]
[77 81]
[104 136]
[105 135]
[106 134]
[108 132]
[109 131]
[115 125]
[116 124]
[117 123]
[118 122]
[167 181]
[168 180]
[169 179]
] def

init

% Start Annotations
64 94 0.16 1 colorpair
65 93 0.0 1 colorpair
66 92 0.65 0.2 colorpair
68 90 0.32 1 colorpair
69 89 0.16 0.2 colorpair
71 87 0.32 1 colorpair
73 85 0.32 1 colorpair
74 84 0.16 1 colorpair
76 82 0.0 1 colorpair
104 136 0.0 0.2 colorpair
109 131 0.0 0.2 colorpair
115 125 0.0 0.2 colorpair
116 124 0.0 0.2 colorpair
117 123 0.16 0.2 colorpair
118 122 0.16 1 colorpair
167 181 0.16 1 colorpair
168 180 0.16 1 colorpair
169 179 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
64 cmark
66 92 2 gmark
66 cmark
92 cmark
68 cmark
90 cmark
69 89 2 gmark
69 cmark
70 88 6 gmark
70 cmark
88 cmark
71 cmark
87 cmark
72 86 4 gmark
72 cmark
86 cmark
73 cmark
85 cmark
84 cmark
77 81 8 gmark
81 cmark
104 136 2 gmark
105 135 4 gmark
105 cmark
135 cmark
106 134 8 gmark
106 cmark
108 132 12 gmark
108 cmark
132 cmark
109 131 2 gmark
115 125 2 gmark
116 124 2 gmark
117 123 2 gmark
117 cmark
123 cmark
118 cmark
181 cmark
168 cmark
180 cmark

% End Annotations
showpage
end
%%EOF
