%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:21:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAGAGGCUAAUCUGAAGAUGUUUGGGAUUGAGAGAGCCUCGUUGGUUAAUGGAA__AAUGACCUUCGGGGCUUUCUUCUUUCUGCC__CCACCAUAACGGCAACACUGCCGAUUGCAUGAGGCAAAAAGCCUCAAGCGCCGCCG_CAUU___\
) } def
/len { sequence length } bind def

/coor [
[237.04705811 135.96257019]
[222.48292542 132.37283325]
[207.91880798 128.78309631]
[193.35467529 125.19336700]
[178.68876648 122.04515076]
[163.93447876 119.34132385]
[149.18017578 116.63749695]
[134.42587280 113.93367004]
[119.67157745 111.22984314]
[114.70506287 119.10565186]
[106.56972504 124.70910645]
[96.32962036 126.77533722]
[85.54313660 124.54243469]
[76.02589417 117.93790436]
[63.34804535 125.95489502]
[50.67019653 133.97187805]
[37.99234390 141.98886108]
[25.31449318 150.00585938]
[12.63664150 158.02284241]
[-0.04121023 166.03982544]
[-12.71906185 174.05680847]
[-25.39691353 182.07380676]
[-30.31036568 197.34591675]
[-45.36448669 202.89144897]
[-59.01104355 194.45634460]
[-60.78156662 178.51129150]
[-49.31785965 167.28796387]
[-33.41389847 169.39595032]
[-20.73604965 161.37896729]
[-8.05819798 153.36198425]
[4.61965370 145.34498596]
[17.29750443 137.32800293]
[29.97535706 129.31101990]
[42.65320587 121.29402924]
[55.33105850 113.27703857]
[68.00891113 105.26005554]
[69.06529999 90.29729462]
[57.63961792 80.57856750]
[46.21393204 70.85983276]
[34.78824615 61.14110565]
[23.36256218 51.42237473]
[11.93687820 41.70364380]
[0.51119387 31.98491287]
[-10.91449070 22.26618195]
[-26.45347786 23.35137367]
[-37.90229797 13.33243561]
[-38.84110260 -1.48830152]
[-50.26678848 -11.20703220]
[-61.69247055 -20.92576408]
[-73.11815643 -30.64449501]
[-84.54383850 -40.36322403]
[-98.98428345 -35.13166428]
[-114.10303497 -37.83702087]
[-125.83322906 -47.75156403]
[-131.01950073 -62.20833206]
[-128.26676941 -77.31852722]
[-118.31550598 -89.01758575]
[-103.84254456 -94.15851593]
[-88.74105072 -91.35843658]
[-77.07324982 -81.37055206]
[-71.97770691 -66.88155365]
[-74.82511139 -51.78890991]
[-63.39942551 -42.07017899]
[-51.97373962 -32.35144806]
[-40.54805756 -22.63271713]
[-29.12237167 -12.91398621]
[-14.34296513 -14.36475372]
[-2.61724925 -4.67134142]
[-1.19575977 10.84049702]
[10.22992516 20.55922699]
[21.65560913 30.27795792]
[33.08129501 39.99668884]
[44.50697708 49.71541977]
[55.93266296 59.43415070]
[67.35834503 69.15288544]
[78.78403473 78.87161255]
[108.11086273 74.98543549]
[122.37540436 96.47554779]
[137.12969971 99.17937469]
[151.88400269 101.88320160]
[166.63830566 104.58702850]
[181.39259338 107.29084778]
[186.41532898 105.49243927]
[191.14166260 105.80786896]
[194.80451965 107.75891876]
[196.94441223 110.62924194]
[211.50854492 114.21897125]
[226.07266235 117.80870819]
[240.63679504 121.39844513]
[245.08543396 109.78925323]
[250.80323792 98.75086212]
[257.71838379 88.42149353]
[265.74398804 78.93044281]
[274.77938843 70.39651489]
[284.71118164 62.92646790]
[295.41479492 56.61373901]
[306.75598145 51.53723907]
[318.59255981 47.76037979]
[330.77612305 45.33027649]
[343.15399170 44.27717209]
[355.57101440 44.61403656]
[367.87164307 46.33643341]
[379.90173340 49.42256165]
[391.51062012 53.83354187]
[402.55294800 59.51389694]
[412.89038086 66.39225769]
[422.39355469 74.38224030]
[430.94354248 83.38357544]
[438.43331909 93.28330994]
[444.76925659 103.95727539]
[449.87210083 115.27159882]
[453.67816162 127.08441925]
[456.13992310 139.24765015]
[457.22677612 151.60884094]
[456.92529297 164.01307678]
[455.23950195 176.30494690]
[452.19070435 188.33042908]
[447.81735229 199.93890381]
[461.09918213 206.90975952]
[476.91433716 206.47198486]
[484.58807373 219.23767090]
[497.86993408 226.20852661]
[511.15176392 233.17936707]
[524.43359375 240.15022278]
[537.71545410 247.12106323]
[550.99725342 254.09191895]
[566.68005371 250.71102905]
[579.00970459 260.97552490]
[578.52795410 277.01132202]
[565.60437012 286.51718140]
[550.15283203 282.20098877]
[544.02642822 267.37374878]
[530.74456787 260.40289307]
[517.46276855 253.43205261]
[504.18090820 246.46121216]
[490.89907837 239.49035645]
[477.61721802 232.51951599]
[462.75207520 233.45590210]
[454.12835693 220.19160461]
[440.84649658 213.22074890]
[430.21801758 227.75088501]
[417.37551880 240.37014771]
[402.65725708 250.74499512]
[386.45126343 258.60098267]
[369.18484497 263.73013306]
[351.31335449 265.99627686]
[333.30831909 265.33892822]
[315.64492798 261.77456665]
[298.78942871 255.39651489]
[283.18688965 246.37236023]
[269.24945068 234.93952942]
[257.34536743 221.39913940]
[247.78938293 206.10797119]
[240.83432007 189.46913147]
[236.66444397 171.92137146]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 89]
[2 88]
[3 87]
[4 86]
[5 82]
[6 81]
[7 80]
[8 79]
[9 78]
[14 36]
[15 35]
[16 34]
[17 33]
[18 32]
[19 31]
[20 30]
[21 29]
[22 28]
[37 76]
[38 75]
[39 74]
[40 73]
[41 72]
[42 71]
[43 70]
[44 69]
[47 66]
[48 65]
[49 64]
[50 63]
[51 62]
[118 140]
[119 139]
[121 137]
[122 136]
[123 135]
[124 134]
[125 133]
[126 132]
] def

init

% Start Annotations
1 89 0.0 0.6 colorpair
2 88 0.16 1 colorpair
3 87 0.0 1 colorpair
4 86 0.0 1 colorpair
5 82 0.0 1 colorpair
6 81 0.0 1 colorpair
7 80 0.0 1 colorpair
8 79 0.0 1 colorpair
9 78 0.0 1 colorpair
14 36 0.32 1 colorpair
15 35 0.0 1 colorpair
16 34 0.0 1 colorpair
17 33 0.16 0.2 colorpair
18 32 0.16 1 colorpair
19 31 0.16 1 colorpair
20 30 0.32 1 colorpair
21 29 0.16 0.2 colorpair
22 28 0.0 0.2 colorpair
37 76 0.0 0.2 colorpair
38 75 0.16 1 colorpair
39 74 0.0 0.6 colorpair
40 73 0.0 0.6 colorpair
41 72 0.0 0.6 colorpair
42 71 0.16 1 colorpair
43 70 0.0 1 colorpair
44 69 0.0 0.6 colorpair
47 66 0.0 0.6 colorpair
48 65 0.16 1 colorpair
49 64 0.0 0.6 colorpair
50 63 0.16 1 colorpair
51 62 0.0 1 colorpair
118 140 0.0 1 colorpair
119 139 0.0 1 colorpair
121 137 0.0 0.2 colorpair
122 136 0.16 1 colorpair
123 135 0.0 1 colorpair
124 134 0.0 1 colorpair
125 133 0.0 0.6 colorpair
126 132 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
1 89 1 gmark
88 cmark
14 cmark
36 cmark
17 33 2 gmark
17 cmark
33 cmark
18 cmark
32 cmark
19 cmark
31 cmark
20 cmark
30 cmark
21 29 2 gmark
21 cmark
29 cmark
22 28 2 gmark
37 76 2 gmark
38 cmark
39 74 1 gmark
40 73 1 gmark
41 72 1 gmark
42 cmark
44 69 1 gmark
47 66 1 gmark
65 cmark
49 64 1 gmark
63 cmark
121 137 2 gmark
122 cmark
136 cmark
125 133 1 gmark

% End Annotations
showpage
end
%%EOF
