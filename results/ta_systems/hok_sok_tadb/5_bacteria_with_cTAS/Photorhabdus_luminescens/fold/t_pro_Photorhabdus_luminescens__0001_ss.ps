%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:16:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAACAGCAAAAA___GCGAUAUUUAUCGCCAUCGUUAUUUGUAUUGCCGCUUUAGCGGCUGUGCUGGUCACGAGGAAAGACCUCUGUGAGGUUCGCAUCCGAAGCGGCCAAACGGAGGUUGCUGUUUUCAUGGAUUACGAACCCAG____\
) } def
/len { sequence length } bind def

/coor [
[109.68727875 258.70840454]
[114.88173676 244.58033752]
[122.81411743 231.78729248]
[133.15959167 220.85311890]
[145.49452209 212.22558594]
[139.54292297 198.45684814]
[133.59132385 184.68809509]
[127.63972473 170.91934204]
[121.68811798 157.15060425]
[115.73651886 143.38185120]
[109.78491974 129.61309814]
[103.83332062 115.84435272]
[96.70513916 113.51217651]
[99.79376984 128.19075012]
[88.62599945 138.20478821]
[74.36973572 133.54013062]
[71.28142548 118.86148834]
[82.44877625 108.84783173]
[75.32059479 106.51565552]
[62.38151169 114.10382080]
[49.44243240 121.69197845]
[36.50334930 129.28013611]
[23.56426811 136.86830139]
[15.93629169 151.38539124]
[-0.45840430 151.76745605]
[-8.75436115 137.62147522]
[-0.41741052 123.49959564]
[15.97610855 123.92921448]
[28.91518974 116.34105682]
[41.85427094 108.75289917]
[54.79335022 101.16473389]
[67.73243713 93.57657623]
[72.77003479 92.50038910]
[77.77120209 92.11157990]
[82.66349792 92.39760590]
[71.12924194 82.80798340]
[59.59498215 73.21836090]
[48.06072235 63.62873459]
[32.50255203 60.75577164]
[27.66242981 46.66951752]
[16.12817192 37.07989502]
[4.59391499 27.49027061]
[-10.96425533 24.61730576]
[-15.80437756 10.53105450]
[-27.33863449 0.94143033]
[-38.87289429 -8.64819431]
[-50.40715027 -18.23781776]
[-65.96532440 -21.11078262]
[-70.80544281 -35.19703293]
[-82.33969879 -44.78665924]
[-93.87396240 -54.37628174]
[-105.40821838 -63.96590805]
[-116.94247437 -73.55553436]
[-133.18797302 -75.79517365]
[-139.11967468 -91.08396149]
[-128.63555908 -103.69409180]
[-112.52079010 -100.65335083]
[-107.35285187 -85.08979034]
[-95.81859589 -75.50016785]
[-84.28433228 -65.91053772]
[-72.75007629 -56.32091522]
[-61.21582031 -46.73129272]
[-46.48265457 -44.54424286]
[-40.81752777 -29.77207565]
[-29.28326797 -20.18245125]
[-17.74901009 -10.59282780]
[-6.21475267 -1.00320315]
[8.51840973 1.18384612]
[14.18353939 15.95601177]
[25.71779633 25.54563522]
[37.25205612 35.13526154]
[51.98521805 37.32231140]
[57.65034866 52.09447479]
[69.18460846 61.68410110]
[80.71886444 71.27372742]
[92.25312042 80.86334991]
[83.13649750 68.95170593]
[83.21891022 53.95193481]
[92.46587372 42.14118958]
[107.00768280 38.46207809]
[120.75881958 44.45425034]
[127.96466827 57.61007690]
[125.60968781 72.42405701]
[114.67825317 82.69730377]
[127.61733246 75.10914612]
[140.55641174 67.52098846]
[153.49549866 59.93282700]
[166.43458557 52.34466553]
[179.37365723 44.75650406]
[192.31274414 37.16834641]
[196.40492249 22.13864899]
[209.63508606 14.62749767]
[223.93838501 18.62139511]
[236.87747192 11.03323460]
[242.74114990 3.94905090]
[250.15879822 3.42534995]
[263.24996948 -3.89729333]
[276.34115601 -11.21993637]
[289.43231201 -18.54257965]
[292.17901611 -33.93704987]
[304.21154785 -43.92464066]
[319.84854126 -43.78951645]
[331.70669556 -33.59547806]
[334.18692017 -18.15583801]
[326.11816406 -4.76072454]
[311.31024170 0.26510087]
[296.75497437 -5.45140314]
[283.66378784 1.87124002]
[270.57260132 9.19388294]
[257.48144531 16.51652718]
[244.46563721 23.97231483]
[231.52655029 31.56047630]
[228.02967834 45.99333572]
[215.01570129 53.87313080]
[199.90089417 50.10742569]
[186.96182251 57.69558716]
[174.02273560 65.28374481]
[161.08366394 72.87191010]
[148.14457703 80.46006775]
[135.20549011 88.04822540]
[122.26641083 95.63639069]
[117.60206604 109.89275360]
[123.55366516 123.66149902]
[129.50526428 137.43025208]
[135.45686340 151.19898987]
[141.40847778 164.96774292]
[147.36007690 178.73649597]
[153.31167603 192.50524902]
[159.26327515 206.27398682]
[173.99882507 203.20018005]
[189.05149841 203.15589905]
[203.80488586 206.14292908]
[217.65486145 212.03897095]
[230.03425598 220.60258484]
[240.43615723 231.48309326]
[248.43460083 244.23493958]
[253.70205688 258.33596802]
[256.02285767 273.20870972]
[255.30191040 288.24417114]
[251.56878662 302.82666016]
[244.97633362 316.35900879]
[235.79450989 328.28707886]
[224.39930725 338.12243652]
[211.25735474 345.46234131]
[196.90681458 350.00619507]
[181.93531799 351.56796265]
[166.95593262 350.08364868]
[152.58207703 345.61407471]
[139.40232849 338.34225464]
[127.95641327 328.56597900]
[118.71302032 316.68554688]
[112.05065918 303.18750000]
[108.24215698 288.62451172]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 129]
[6 128]
[7 127]
[8 126]
[9 125]
[10 124]
[11 123]
[12 122]
[19 32]
[20 31]
[21 30]
[22 29]
[23 28]
[35 76]
[36 75]
[37 74]
[38 73]
[40 71]
[41 70]
[42 69]
[44 67]
[45 66]
[46 65]
[47 64]
[49 62]
[50 61]
[51 60]
[52 59]
[53 58]
[84 121]
[85 120]
[86 119]
[87 118]
[88 117]
[89 116]
[90 115]
[93 112]
[94 111]
[96 110]
[97 109]
[98 108]
[99 107]
] def

init

% Start Annotations
5 129 0.0 0.6 colorpair
6 128 0.16 1 colorpair
7 127 0.0 1 colorpair
8 126 0.16 1 colorpair
9 125 0.0 1 colorpair
10 124 0.0 1 colorpair
11 123 0.0 1 colorpair
12 122 0.0 1 colorpair
19 32 0.16 1 colorpair
20 31 0.0 0.6 colorpair
21 30 0.16 1 colorpair
22 29 0.0 0.6 colorpair
23 28 0.0 1 colorpair
35 76 0.0 1 colorpair
36 75 0.0 0.6 colorpair
37 74 0.0 0.6 colorpair
38 73 0.0 1 colorpair
40 71 0.0 1 colorpair
41 70 0.16 1 colorpair
42 69 0.0 1 colorpair
44 67 0.16 1 colorpair
45 66 0.0 1 colorpair
46 65 0.16 1 colorpair
47 64 0.16 1 colorpair
49 62 0.16 1 colorpair
50 61 0.0 0.6 colorpair
51 60 0.0 0.6 colorpair
52 59 0.0 0.6 colorpair
53 58 0.16 1 colorpair
84 121 0.0 0.6 colorpair
85 120 0.0 0.6 colorpair
86 119 0.0 1 colorpair
87 118 0.0 1 colorpair
88 117 0.16 1 colorpair
89 116 0.0 1 colorpair
90 115 0.0 1 colorpair
93 112 0.0 0.6 colorpair
94 111 0.0 0.6 colorpair
96 110 0.16 1 colorpair
97 109 0.0 1 colorpair
98 108 0.0 0.6 colorpair
99 107 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
5 129 1 gmark
6 cmark
128 cmark
8 cmark
126 cmark
32 cmark
20 31 1 gmark
21 cmark
30 cmark
22 29 1 gmark
36 75 1 gmark
37 74 1 gmark
70 cmark
67 cmark
46 cmark
65 cmark
64 cmark
49 cmark
62 cmark
50 61 1 gmark
51 60 1 gmark
52 59 1 gmark
53 cmark
58 cmark
84 121 1 gmark
85 120 1 gmark
117 cmark
93 112 1 gmark
94 111 1 gmark
96 cmark
98 108 1 gmark
99 cmark

% End Annotations
showpage
end
%%EOF
