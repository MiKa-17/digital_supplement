%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:19:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
A__GCCACGAAA_____AAAUCUUUUCGCAUGCGUCGUUAUAUUCUGCGUCACGAUAUUAAUUUUCACCAUAAUUAACCACGACACGCUAUGCGAGCUAACGAUAAAGCACGGAAAUAAGGAAGUGGCGGCACGGCUGGCCUGC_AAUCC_GA___\
) } def
/len { sequence length } bind def

/coor [
[157.43486023 377.96054077]
[164.95095825 364.91854858]
[174.93878174 353.65673828]
[186.98934937 344.63629150]
[180.59721375 331.06643677]
[174.20509338 317.49658203]
[167.81297302 303.92672729]
[161.42085266 290.35690308]
[155.02873230 276.78704834]
[148.63661194 263.21719360]
[139.89736938 264.06945801]
[131.21165466 262.65689087]
[123.15791321 259.06365967]
[116.27505493 253.51945496]
[111.02635193 246.38491821]
[107.76828766 238.12812805]
[106.72634125 229.29388428]
[107.97943878 220.46778870]
[111.45401764 212.23742676]
[116.92832947 205.15322876]
[124.04650879 199.69171143]
[119.61151886 185.36233521]
[115.17653656 171.03295898]
[110.74155426 156.70358276]
[106.16342926 142.41931152]
[101.44261932 128.18153381]
[96.72180939 113.94377899]
[86.40393829 104.50804138]
[89.04042816 90.77703094]
[84.31961823 76.53926849]
[79.59880829 62.30150223]
[74.87799835 48.06373978]
[70.15718842 33.82597351]
[65.43637848 19.58820724]
[60.71556854 5.35044289]
[44.58837891 3.40338516]
[30.96615982 -5.33898449]
[22.53884125 -19.09026337]
[20.94432640 -35.08104324]
[26.45036697 -50.11660004]
[37.91118240 -61.21515274]
[32.90643692 -75.35560608]
[21.00808525 -85.78344727]
[24.05556488 -100.36295319]
[19.05082130 -114.50341034]
[14.04607582 -128.64387512]
[9.04133034 -142.78433228]
[4.03658533 -156.92478943]
[-0.96815950 -171.06524658]
[-5.97290468 -185.20570374]
[-17.87125778 -195.63352966]
[-14.82377720 -210.21304321]
[-19.82852173 -224.35350037]
[-24.83326721 -238.49395752]
[-39.71067810 -236.24468994]
[-54.74489594 -236.85191345]
[-69.39244843 -240.29367065]
[-83.12384033 -246.44554138]
[-95.44267273 -255.08514404]
[-105.90364838 -265.90017700]
[-114.12859344 -278.49963379]
[-119.82019043 -292.42810059]
[-122.77268982 -307.18206787]
[-122.87936401 -322.22814941]
[-120.13634491 -337.02249146]
[-114.64280701 -351.03027344]
[-106.59732056 -363.74508667]
[-96.29074097 -374.70733643]
[-84.09564209 -383.52072144]
[-70.45285797 -389.86666870]
[-55.85557556 -393.51574707]
[-40.83147430 -394.33609009]
[-25.92366982 -392.29797363]
[-11.67106724 -387.47515869]
[1.41111135 -380.04190063]
[12.84995270 -370.26696777]
[22.23194885 -358.50369263]
[29.21794701 -345.17730713]
[33.55540848 -330.76956177]
[35.08753967 -315.80130005]
[33.75894928 -300.81359863]
[29.61766624 -286.34823608]
[22.81339645 -272.92816162]
[13.59211159 -261.03851318]
[2.28715348 -251.10902405]
[-10.69281006 -243.49870300]
[-5.68806553 -229.35824585]
[-0.68332040 -215.21778870]
[10.85706043 -205.80137634]
[8.16755295 -190.21044922]
[13.17229748 -176.06999207]
[18.17704201 -161.92953491]
[23.18178749 -147.78907776]
[28.18653297 -133.64862061]
[33.19127655 -119.50815582]
[38.19602203 -105.36769867]
[49.73640442 -95.95128632]
[47.04689407 -80.36035156]
[52.05163956 -66.21989441]
[65.92917633 -65.38951874]
[78.47712708 -59.30405807]
[87.77941132 -48.85594177]
[92.40157318 -35.60651779]
[91.61183167 -21.55278587]
[85.49680328 -8.82640457]
[74.95333099 0.62963331]
[79.67414093 14.86739826]
[84.39495087 29.10516357]
[89.11576080 43.34292984]
[93.83657074 57.58069611]
[98.55738068 71.81845856]
[103.27819061 86.05622101]
[113.59606171 95.49195862]
[110.95957184 109.22296906]
[115.68038177 123.46073151]
[120.40119171 137.69850159]
[126.10334015 144.90776062]
[125.07093048 152.26860046]
[129.50590515 166.59797668]
[133.94088745 180.92735291]
[138.37588501 195.25672913]
[159.60081482 200.58377075]
[173.35147095 217.44157410]
[174.29336548 239.04718018]
[162.20646667 256.82507324]
[168.59858704 270.39492798]
[174.99070740 283.96478271]
[181.38282776 297.53460693]
[187.77494812 311.10446167]
[194.16706848 324.67431641]
[200.55918884 338.24417114]
[215.18806458 334.69720459]
[230.23149109 334.16793823]
[245.07345581 336.67810059]
[259.10620117 342.12484741]
[271.75506592 350.28518677]
[282.50213623 360.82489014]
[290.90725708 373.31243896]
[296.62631226 387.23641968]
[299.42507935 402.02667236]
[299.18893433 417.07757568]
[295.92755127 431.77276611]
[289.77453613 445.51046753]
[280.98178101 457.72817993]
[269.90936279 467.92556763]
[257.01074219 475.68508911]
[242.81402588 480.68893433]
[227.90061951 482.73223877]
[212.88119507 481.73132324]
[198.37078857 477.72717285]
[184.96360779 470.88375854]
[173.20864868 461.48132324]
[163.58728027 449.90487671]
[156.49349976 436.62847900]
[152.21777344 422.19577026]
[150.93519592 407.19775391]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 131]
[5 130]
[6 129]
[7 128]
[8 127]
[9 126]
[10 125]
[21 121]
[22 120]
[23 119]
[24 118]
[25 116]
[26 115]
[27 114]
[29 112]
[30 111]
[31 110]
[32 109]
[33 108]
[34 107]
[35 106]
[41 99]
[42 98]
[44 96]
[45 95]
[46 94]
[47 93]
[48 92]
[49 91]
[50 90]
[52 88]
[53 87]
[54 86]
] def

init

% Start Annotations
4 131 0.0 0.6 colorpair
5 130 0.0 1 colorpair
6 129 0.0 0.2 colorpair
7 128 0.16 0.2 colorpair
8 127 0.16 1 colorpair
9 126 0.16 1 colorpair
10 125 0.0 0.2 colorpair
21 121 0.16 1 colorpair
22 120 0.16 1 colorpair
23 119 0.16 0.6 colorpair
24 118 0.0 0.6 colorpair
25 116 0.0 0.6 colorpair
26 115 0.0 0.6 colorpair
27 114 0.0 0.2 colorpair
29 112 0.0 0.2 colorpair
30 111 0.0 0.2 colorpair
31 110 0.16 1 colorpair
32 109 0.0 0.2 colorpair
33 108 0.16 1 colorpair
34 107 0.0 0.2 colorpair
35 106 0.0 0.6 colorpair
41 99 0.16 1 colorpair
42 98 0.16 0.6 colorpair
44 96 0.16 1 colorpair
45 95 0.0 0.2 colorpair
46 94 0.0 1 colorpair
47 93 0.16 1 colorpair
48 92 0.16 1 colorpair
49 91 0.16 1 colorpair
50 90 0.16 0.6 colorpair
52 88 0.0 0.2 colorpair
53 87 0.0 1 colorpair
54 86 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
4 131 1 gmark
6 129 2 gmark
7 128 2 gmark
7 cmark
128 cmark
8 cmark
9 cmark
126 cmark
10 125 2 gmark
21 cmark
22 cmark
23 119 1 gmark
119 cmark
24 118 1 gmark
25 116 1 gmark
26 115 1 gmark
27 114 2 gmark
29 112 2 gmark
30 111 2 gmark
110 cmark
32 109 2 gmark
33 cmark
34 107 2 gmark
35 106 1 gmark
41 cmark
99 cmark
42 98 1 gmark
42 cmark
96 cmark
45 95 2 gmark
93 cmark
48 cmark
49 cmark
50 90 1 gmark
90 cmark
52 88 2 gmark

% End Annotations
showpage
end
%%EOF
