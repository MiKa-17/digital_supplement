%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:19:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______AUGCAGCACAAUACUCUUUUCUGGUGCGUCGUUAUAGUCUGCGUCACGAUAUUAAUGUUCACCAUAAUUACACGCGAAACGCUAUGCGAGCUAAGGAUGAAGGACGGGAACAAGGAAGUUGCCGCAUCACUGGCUUGCAAAUCCAGA___\
) } def
/len { sequence length } bind def

/coor [
[58.14535904 654.46179199]
[43.22997284 656.19226074]
[28.21475029 656.27136230]
[13.28195953 654.69818115]
[-1.38712919 651.49176025]
[-15.61444569 646.69104004]
[-29.22728348 640.35437012]
[-42.06039429 632.55859375]
[-53.95800018 623.39831543]
[-64.77567291 612.98480225]
[-74.38208771 601.44445801]
[-82.66064453 588.91729736]
[-89.51084137 575.55554199]
[-94.84952545 561.52124023]
[-98.61189270 546.98480225]
[-100.75226593 532.12268066]
[-101.24465942 517.11535645]
[-100.08311462 502.14489746]
[-97.28170776 487.39309692]
[-92.87446594 473.03903198]
[-86.91487122 459.25692749]
[-79.47528076 446.21408081]
[-70.64600372 434.06884766]
[-60.53421021 422.96862793]
[-49.26265335 413.04818726]
[-36.96816254 404.42791748]
[-23.79997444 397.21252441]
[-9.91794586 391.48953247]
[4.50941133 387.32846069]
[19.30696106 384.77981567]
[34.29507828 383.87448120]
[49.29181671 384.62350464]
[51.68278885 369.81530762]
[54.07376480 355.00708008]
[56.46474075 340.19888306]
[58.85571289 325.39065552]
[61.24668884 310.58242798]
[63.63766479 295.77423096]
[66.02864075 280.96600342]
[68.41961670 266.15780640]
[70.81058502 251.34957886]
[63.68162537 235.33995056]
[75.36061859 221.13681030]
[77.45481873 206.28372192]
[79.54901886 191.43061829]
[81.64321899 176.57752991]
[83.73742676 161.72444153]
[85.83162689 146.87135315]
[79.94699860 133.18849182]
[89.53520966 120.60371399]
[91.62941742 105.75061798]
[89.53902435 97.91536713]
[93.91699219 90.62245178]
[96.30796814 75.81423950]
[87.33515167 69.92272949]
[80.88050079 61.39419174]
[77.67087555 51.23167038]
[78.05335999 40.61963272]
[81.95793915 30.78591537]
[88.90856171 22.85966492]
[98.08106995 17.74168587]
[108.40082550 16.00210762]
[111.96813965 1.43247175]
[115.53545380 -13.13716412]
[102.70766449 -21.13124657]
[92.99198914 -32.68322372]
[87.33028412 -46.65367126]
[86.26534271 -61.66969299]
[89.88891602 -76.25984192]
[97.83392334 -88.99827576]
[109.31160736 -98.64415741]
[123.18981934 -104.26245117]
[138.10470581 -105.31462097]
[141.67202759 -119.88425446]
[145.23933411 -134.45388794]
[148.80664062 -149.02352905]
[152.37396240 -163.59317017]
[155.94126892 -178.16279602]
[150.36701965 -195.68580627]
[162.92810059 -207.90669250]
[166.20317078 -222.54478455]
[169.47825623 -237.18287659]
[167.03608704 -253.96000671]
[182.48149109 -260.95111084]
[193.47509766 -248.04463196]
[184.11634827 -233.90780640]
[180.84126282 -219.26971436]
[177.56619263 -204.63160706]
[183.78837585 -194.21720886]
[181.13940430 -181.96719360]
[170.51091003 -174.59548950]
[166.94360352 -160.02584839]
[163.37628174 -145.45622253]
[159.80897522 -130.88658142]
[156.24165344 -116.31694794]
[152.67434692 -101.74730682]
[165.41600037 -93.92355347]
[175.12872314 -82.52911377]
[180.85173035 -68.67172241]
[182.01290894 -53.70367050]
[178.48602295 -39.08985519]
[170.60421753 -26.26440239]
[159.12867737 -16.48993874]
[145.17504883 -10.73328972]
[130.10508728 -9.56985092]
[126.53777313 4.99978495]
[122.97045898 19.56941986]
[136.58491516 33.52661133]
[139.11344910 53.00357437]
[129.37351990 70.22302246]
[111.11618042 78.20521545]
[108.72520447 93.01342773]
[106.48250580 107.84482574]
[104.38830566 122.69791412]
[110.12313843 137.44316101]
[100.68471527 148.96554565]
[98.59051514 163.81864929]
[96.49631500 178.67173767]
[94.40211487 193.52482605]
[92.30790710 208.37791443]
[90.21370697 223.23100281]
[97.34762573 234.02055359]
[95.26146698 246.37886047]
[85.61880493 253.74055481]
[83.22782898 268.54876709]
[80.83685303 283.35699463]
[78.44587708 298.16519165]
[76.05490112 312.97341919]
[73.66393280 327.78164673]
[71.27295685 342.58984375]
[68.88198090 357.39807129]
[66.49100494 372.20626831]
[64.10002899 387.01449585]
[78.57043457 391.02331543]
[92.51200104 396.59970093]
[105.75548553 403.67593384]
[118.14012909 412.16613770]
[129.51559448 421.96728516]
[139.74378967 432.96032715]
[148.70056152 445.01184082]
[156.27717590 457.97558594]
[162.38166809 471.69412231]
[166.93992615 486.00094604]
[169.89662170 500.72241211]
[171.21585083 515.67974854]
[170.88162231 530.69146729]
[168.89797974 545.57531738]
[165.28900146 560.15057373]
[160.09849548 574.24035645]
[153.38948059 587.67358398]
[145.24337769 600.28729248]
[135.75909424 611.92822266]
[125.05176544 622.45513916]
[113.25134277 631.74023438]
[100.50109100 639.67083740]
[86.95578766 646.15063477]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 133]
[33 132]
[34 131]
[35 130]
[36 129]
[37 128]
[38 127]
[39 126]
[40 125]
[41 124]
[43 121]
[44 120]
[45 119]
[46 118]
[47 117]
[48 116]
[50 114]
[51 113]
[53 112]
[54 111]
[62 107]
[63 106]
[64 105]
[73 96]
[74 95]
[75 94]
[76 93]
[77 92]
[78 91]
[80 88]
[81 87]
[82 86]
] def

init

% Start Annotations
32 133 0.16 1 colorpair
33 132 0.16 0.2 colorpair
34 131 0.0 0.2 colorpair
35 130 0.0 1 colorpair
36 129 0.16 0.2 colorpair
37 128 0.16 1 colorpair
38 127 0.0 1 colorpair
39 126 0.16 0.2 colorpair
40 125 0.16 1 colorpair
41 124 0.0 0.6 colorpair
43 121 0.16 0.2 colorpair
44 120 0.0 1 colorpair
45 119 0.16 0.2 colorpair
46 118 0.0 1 colorpair
47 117 0.16 0.6 colorpair
48 116 0.16 0.2 colorpair
50 114 0.16 1 colorpair
51 113 0.16 1 colorpair
53 112 0.0 1 colorpair
54 111 0.0 1 colorpair
62 107 0.16 1 colorpair
63 106 0.16 0.6 colorpair
64 105 0.16 1 colorpair
73 96 0.16 0.2 colorpair
74 95 0.0 0.6 colorpair
75 94 0.16 1 colorpair
76 93 0.16 0.2 colorpair
77 92 0.0 0.2 colorpair
78 91 0.16 0.2 colorpair
80 88 0.16 1 colorpair
81 87 0.16 0.2 colorpair
82 86 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
133 cmark
33 132 2 gmark
33 cmark
132 cmark
34 131 2 gmark
36 129 2 gmark
36 cmark
129 cmark
37 cmark
128 cmark
39 126 2 gmark
39 cmark
126 cmark
40 cmark
41 124 1 gmark
43 121 2 gmark
43 cmark
45 119 2 gmark
45 cmark
119 cmark
47 117 1 gmark
117 cmark
48 116 2 gmark
48 cmark
116 cmark
114 cmark
51 cmark
113 cmark
107 cmark
63 106 1 gmark
63 cmark
106 cmark
105 cmark
73 96 2 gmark
73 cmark
96 cmark
74 95 1 gmark
75 cmark
76 93 2 gmark
76 cmark
93 cmark
77 92 2 gmark
78 91 2 gmark
78 cmark
80 cmark
88 cmark
81 87 2 gmark
81 cmark
82 86 1 gmark

% End Annotations
showpage
end
%%EOF
