%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:19:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_GUAAGAGGCUAAGCUCAACGGGUCCAGACAUCAGGAGGACCCGCGGGUUAAUAGAAAAAUUACC__CGGGGCUUUCUUCUUUCUGCCCCAC_________________CCGACCGCAGAAGACAAAAAGCCUCAAGCACCGCA_________\
) } def
/len { sequence length } bind def

/coor [
[70.37857056 263.77392578]
[55.46599960 262.15676880]
[41.84866333 255.86645508]
[30.94981956 245.56037903]
[23.90858078 232.31571960]
[21.46087837 217.51676941]
[23.86254311 202.71029663]
[30.86105537 189.44578552]
[17.92197418 197.03393555]
[4.98289347 204.62210083]
[-7.95618773 212.21026611]
[-20.89526939 219.79841614]
[-33.83435059 227.38658142]
[-46.69536209 235.10632324]
[-59.47696304 242.95684814]
[-72.25856018 250.80735779]
[-85.04016876 258.65789795]
[-97.82176971 266.50839233]
[-110.60337067 274.35891724]
[-123.38497162 282.20944214]
[-136.16656494 290.05996704]
[-148.94816589 297.91049194]
[-154.06091309 313.11703491]
[-169.18626404 318.46524048]
[-182.72135925 309.85241699]
[-184.28321838 293.88555908]
[-172.67373657 282.81311035]
[-156.79869080 285.12887573]
[-144.01708984 277.27835083]
[-131.23548889 269.42785645]
[-118.45388794 261.57733154]
[-105.67228699 253.72680664]
[-92.89068604 245.87628174]
[-80.10908508 238.02575684]
[-67.32748413 230.17524719]
[-54.54587936 222.32472229]
[-50.46770096 216.10665894]
[-41.42251205 214.44749451]
[-28.48342896 206.85934448]
[-15.54434776 199.27117920]
[-2.60526681 191.68301392]
[10.33381462 184.09486389]
[23.27289581 176.50669861]
[34.70874023 166.79992676]
[44.29836655 155.26567078]
[53.88798904 143.73141479]
[63.47761536 132.19715881]
[73.06723785 120.66289520]
[82.65686035 109.12863922]
[81.58677673 94.16685486]
[70.45326233 84.11474609]
[59.31975174 74.06263733]
[48.18624115 64.01052856]
[37.05272675 53.95841599]
[20.91210747 51.05800629]
[15.60894489 35.54000092]
[26.59868050 23.36799431]
[42.57601547 27.06350327]
[47.10483932 42.82490540]
[58.23834991 52.87701416]
[69.37186432 62.92912674]
[80.50537109 72.98123169]
[91.63888550 83.03334808]
[98.63890839 80.34082794]
[89.19120026 68.69004059]
[97.35226440 56.10445786]
[111.84377289 59.97695923]
[112.63895416 74.95578766]
[119.63898468 72.26326752]
[121.16632843 57.34122467]
[122.69367218 42.41918945]
[124.22101593 27.49715042]
[125.74835968 12.57511234]
[112.71566772 4.63083029]
[104.42771912 -8.18605900]
[102.53009033 -23.33075333]
[107.39956665 -37.79626465]
[118.06930542 -48.71044922]
[132.42082214 -53.90629578]
[147.60459900 -52.35216141]
[160.60591125 -44.35661697]
[168.84332275 -31.50718880]
[170.68128967 -16.35513878]
[165.75489807 -1.90891755]
[155.04226685 8.96316814]
[140.67039490 14.10245705]
[139.14305115 29.02449417]
[137.61570740 43.94653320]
[136.08836365 58.86857224]
[134.56101990 73.79061127]
[143.05538940 61.42753601]
[151.54977417 49.06446457]
[160.04414368 36.70139313]
[168.53852844 24.33831978]
[177.03289795 11.97524738]
[189.06669617 3.02048540]
[203.07623291 -2.33983731]
[218.01399231 -3.70492268]
[232.76304626 -0.97270149]
[246.22062683 5.65253496]
[257.38046265 15.67540932]
[265.40814209 28.34649849]
[269.70339966 42.71837234]
[269.94509888 57.71642303]
[266.11514282 72.21923065]
[258.49993896 85.14241028]
[247.66883850 95.51966858]
[234.43173218 102.57508850]
[219.77835083 105.78112793]
[204.80436707 104.89807129]
[190.62709045 99.99076843]
[175.63420105 100.45271301]
[160.64131165 100.91465759]
[145.64843750 101.37660217]
[130.65554810 101.83854675]
[115.66265869 102.30049133]
[129.04162598 109.08306885]
[142.42059326 115.86564636]
[155.79954529 122.64822388]
[169.17851257 129.43080139]
[182.55747986 136.21337891]
[195.93643188 142.99595642]
[209.31539917 149.77853394]
[222.69436646 156.56111145]
[238.32781982 152.95909119]
[250.80117798 163.04841614]
[250.54595947 179.08944702]
[237.75793457 188.77685547]
[222.24697876 184.67930603]
[215.91177368 169.94007874]
[202.53282166 163.15750122]
[189.15385437 156.37492371]
[175.77488708 149.59234619]
[162.39593506 142.80976868]
[149.01696777 136.02719116]
[135.63800049 129.24461365]
[122.25904846 122.46202850]
[108.88008118 115.67945099]
[94.19112396 118.71826172]
[84.60149384 130.25251770]
[75.01187134 141.78677368]
[65.42224884 153.32102966]
[55.83262253 164.85530090]
[46.24300003 176.38955688]
[60.47080231 171.63880920]
[75.47075653 171.67555237]
[89.67510986 176.49597168]
[101.59925842 185.59622192]
[109.99691772 198.02519226]
[113.99039459 212.48382568]
[113.16230011 227.46095276]
[107.59918213 241.39120483]
[97.88248444 252.81861877]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 43]
[9 42]
[10 41]
[11 40]
[12 39]
[13 38]
[14 36]
[15 35]
[16 34]
[17 33]
[18 32]
[19 31]
[20 30]
[21 29]
[22 28]
[44 144]
[45 143]
[46 142]
[47 141]
[48 140]
[49 139]
[50 63]
[51 62]
[52 61]
[53 60]
[54 59]
[69 90]
[70 89]
[71 88]
[72 87]
[73 86]
[116 138]
[117 137]
[118 136]
[119 135]
[120 134]
[121 133]
[122 132]
[123 131]
[124 130]
] def

init

% Start Annotations
8 43 0.0 1 colorpair
9 42 0.16 1 colorpair
10 41 0.0 0.6 colorpair
11 40 0.0 0.6 colorpair
12 39 0.0 0.6 colorpair
13 38 0.16 1 colorpair
14 36 0.16 1 colorpair
15 35 0.0 1 colorpair
16 34 0.0 1 colorpair
17 33 0.16 1 colorpair
18 32 0.0 1 colorpair
19 31 0.16 1 colorpair
20 30 0.16 1 colorpair
21 29 0.0 0.6 colorpair
22 28 0.0 0.6 colorpair
44 144 0.16 1 colorpair
45 143 0.0 0.6 colorpair
46 142 0.0 0.6 colorpair
47 141 0.0 1 colorpair
48 140 0.0 1 colorpair
49 139 0.16 1 colorpair
50 63 0.16 1 colorpair
51 62 0.0 1 colorpair
52 61 0.0 1 colorpair
53 60 0.0 1 colorpair
54 59 0.16 1 colorpair
69 90 0.0 1 colorpair
70 89 0.16 1 colorpair
71 88 0.0 1 colorpair
72 87 0.16 1 colorpair
73 86 0.0 1 colorpair
116 138 0.0 1 colorpair
117 137 0.0 1 colorpair
118 136 0.0 0.6 colorpair
119 135 0.0 0.6 colorpair
120 134 0.16 1 colorpair
121 133 0.0 1 colorpair
122 132 0.0 1 colorpair
123 131 0.16 1 colorpair
124 130 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
42 cmark
10 41 1 gmark
11 40 1 gmark
12 39 1 gmark
13 cmark
38 cmark
14 cmark
36 cmark
17 cmark
33 cmark
19 cmark
31 cmark
20 cmark
30 cmark
21 29 1 gmark
22 28 1 gmark
44 cmark
144 cmark
45 143 1 gmark
46 142 1 gmark
139 cmark
63 cmark
54 cmark
59 cmark
89 cmark
87 cmark
118 136 1 gmark
119 135 1 gmark
120 cmark
134 cmark
123 cmark
131 cmark

% End Annotations
showpage
end
%%EOF
