%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 22:31:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_________________________________________________________________________________________________________________________AUGCUGCAGAAAUAUGUCCUUG_UGGCUGUGAUAGUGAUGUGUUUUACGGUUCUGGUAUUCACGCUGCUGAUCGGAGAAUCGCUGUGUGAGUUGCGUAUCAGAGACGGUAAUAUGGAGGUUGCGGCUUUUCUCG\
CUUACGAAUCGAA___G_AA________________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50275421 92.18480682]
[62.51544952 91.55455780]
[47.54469299 90.60951996]
[32.59710312 89.35012817]
[17.67927170 87.77692413]
[2.79779267 85.89060211]
[-12.04076481 83.69200897]
[-26.82984734 81.18209839]
[-41.56292725 78.36199188]
[-56.23349380 75.23293304]
[-70.83507538 71.79629517]
[-85.36122131 68.05360413]
[-99.80551147 64.00650787]
[-114.16158295 59.65679550]
[-128.42308044 55.00638962]
[-142.58370972 50.05733871]
[-156.63722229 44.81182861]
[-170.57740784 39.27218246]
[-184.39813232 33.44083786]
[-198.09326172 27.32037735]
[-211.65675354 20.91349792]
[-225.08264160 14.22303104]
[-238.36497498 7.25193071]
[-251.49789429 0.00327461]
[-264.47558594 -7.51973581]
[-277.29235840 -15.31377888]
[-289.94253540 -23.37541199]
[-302.42050171 -31.70107651]
[-314.72079468 -40.28709793]
[-326.83795166 -49.12968063]
[-338.76660156 -58.22492218]
[-350.50152588 -67.56880951]
[-362.03753662 -77.15720367]
[-373.36950684 -86.98589325]
[-384.49243164 -97.05051422]
[-395.40145874 -107.34664154]
[-406.09170532 -117.86971283]
[-416.55847168 -128.61509705]
[-426.79714966 -139.57803345]
[-436.80322266 -150.75369263]
[-446.57223511 -162.13714600]
[-456.09991455 -173.72334290]
[-465.38201904 -185.50718689]
[-474.41448975 -197.48347473]
[-483.19329834 -209.64691162]
[-491.71456909 -221.99211121]
[-499.97457886 -234.51365662]
[-507.96966553 -247.20599365]
[-515.69628906 -260.06353760]
[-523.15100098 -273.08056641]
[-530.33056641 -286.25140381]
[-537.23181152 -299.57015991]
[-543.85168457 -313.03100586]
[-550.18719482 -326.62796021]
[-556.23565674 -340.35504150]
[-561.99432373 -354.20620728]
[-567.46063232 -368.17529297]
[-572.63226318 -382.25616455]
[-577.50683594 -396.44262695]
[-582.08227539 -410.72833252]
[-586.35650635 -425.10705566]
[-590.32769775 -439.57241821]
[-593.99401855 -454.11801147]
[-597.35394287 -468.73745728]
[-600.40588379 -483.42425537]
[-603.14855957 -498.17193604]
[-605.58074951 -512.97399902]
[-607.70135498 -527.82391357]
[-609.50946045 -542.71508789]
[-611.00427246 -557.64099121]
[-612.18518066 -572.59497070]
[-613.05151367 -587.57049561]
[-613.60308838 -602.56091309]
[-613.83947754 -617.55957031]
[-613.76068115 -632.55993652]
[-613.36669922 -647.55529785]
[-612.65771484 -662.53912354]
[-611.63403320 -677.50469971]
[-610.29614258 -692.44543457]
[-608.64459229 -707.35479736]
[-606.68011475 -722.22619629]
[-604.40356445 -737.05297852]
[-601.81597900 -751.82867432]
[-598.91851807 -766.54675293]
[-595.71246338 -781.20068359]
[-592.19915771 -795.78399658]
[-588.38018799 -810.29028320]
[-584.25726318 -824.71307373]
[-579.83221436 -839.04614258]
[-575.10693359 -853.28295898]
[-570.08355713 -867.41741943]
[-564.76428223 -881.44317627]
[-559.15148926 -895.35406494]
[-553.24761963 -909.14398193]
[-547.05523682 -922.80676270]
[-540.57720947 -936.33642578]
[-533.81628418 -949.72692871]
[-526.77551270 -962.97247314]
[-519.45794678 -976.06713867]
[-511.86688232 -989.00512695]
[-504.00561523 -1001.78076172]
[-495.87762451 -1014.38842773]
[-487.48651123 -1026.82250977]
[-478.83599854 -1039.07751465]
[-469.92987061 -1051.14807129]
[-460.77209473 -1063.02868652]
[-451.36669922 -1074.71435547]
[-441.71780396 -1086.19982910]
[-431.82974243 -1097.48010254]
[-421.70681763 -1108.54992676]
[-411.35351562 -1119.40478516]
[-400.77441406 -1130.03955078]
[-389.97418213 -1140.44970703]
[-378.95761108 -1150.63061523]
[-367.72955322 -1160.57788086]
[-356.29492188 -1170.28698730]
[-344.65884399 -1179.75366211]
[-332.82638550 -1188.97375488]
[-320.80282593 -1197.94311523]
[-308.59341431 -1206.65795898]
[-296.20361328 -1215.11425781]
[-283.63885498 -1223.30834961]
[-270.90469360 -1231.23657227]
[-258.00674438 -1238.89550781]
[-244.95071411 -1246.28186035]
[-231.74235535 -1253.39208984]
[-218.38751221 -1260.22326660]
[-204.89208984 -1266.77233887]
[-191.26202393 -1273.03625488]
[-177.50334167 -1279.01257324]
[-163.62213135 -1284.69836426]
[-149.62451172 -1290.09118652]
[-135.51666260 -1295.18884277]
[-121.30480957 -1299.98876953]
[-106.99523926 -1304.48913574]
[-92.59426117 -1308.68774414]
[-78.10824585 -1312.58288574]
[-63.54358292 -1316.17272949]
[-48.90670013 -1319.45581055]
[-34.20406723 -1322.43054199]
[-19.44217300 -1325.09570312]
[-4.62753534 -1327.45007324]
[10.23330212 -1329.49267578]
[25.13377953 -1331.22253418]
[40.06731415 -1332.63891602]
[55.02731323 -1333.74121094]
[70.00717163 -1334.52893066]
[85.00027466 -1335.00158691]
[100.00000000 -1335.15917969]
[114.99972534 -1335.00158691]
[129.99282837 -1334.52893066]
[144.97268677 -1333.74121094]
[159.93269348 -1332.63891602]
[174.86622620 -1331.22253418]
[189.76669312 -1329.49267578]
[204.62753296 -1327.45007324]
[219.44216919 -1325.09570312]
[234.20407104 -1322.43054199]
[248.90670776 -1319.45581055]
[263.54357910 -1316.17272949]
[278.10824585 -1312.58288574]
[292.59426880 -1308.68774414]
[306.99523926 -1304.48913574]
[321.30480957 -1299.98876953]
[335.51666260 -1295.18884277]
[349.62451172 -1290.09118652]
[363.62213135 -1284.69836426]
[377.50335693 -1279.01257324]
[391.26202393 -1273.03625488]
[404.89208984 -1266.77233887]
[418.38751221 -1260.22326660]
[431.74237061 -1253.39208984]
[444.95071411 -1246.28186035]
[458.00674438 -1238.89550781]
[470.90469360 -1231.23657227]
[483.63885498 -1223.30834961]
[496.20361328 -1215.11425781]
[508.59341431 -1206.65795898]
[520.80279541 -1197.94311523]
[532.82635498 -1188.97375488]
[544.65881348 -1179.75366211]
[556.29492188 -1170.28698730]
[567.72955322 -1160.57788086]
[578.95764160 -1150.63061523]
[589.97418213 -1140.44970703]
[600.77441406 -1130.03955078]
[611.35351562 -1119.40478516]
[621.70678711 -1108.54992676]
[631.82971191 -1097.48010254]
[641.71783447 -1086.19982910]
[651.36669922 -1074.71435547]
[660.77209473 -1063.02868652]
[669.92987061 -1051.14807129]
[678.83599854 -1039.07751465]
[687.48651123 -1026.82250977]
[695.87762451 -1014.38842773]
[704.00561523 -1001.78076172]
[711.86688232 -989.00512695]
[719.45794678 -976.06713867]
[726.77551270 -962.97247314]
[733.81628418 -949.72692871]
[740.57720947 -936.33642578]
[747.05523682 -922.80676270]
[753.24761963 -909.14398193]
[759.15148926 -895.35406494]
[764.76428223 -881.44317627]
[770.08355713 -867.41741943]
[775.10693359 -853.28295898]
[779.83221436 -839.04614258]
[784.25726318 -824.71307373]
[788.38018799 -810.29028320]
[792.19915771 -795.78399658]
[795.71246338 -781.20068359]
[798.91851807 -766.54675293]
[801.81597900 -751.82867432]
[804.40356445 -737.05297852]
[806.68011475 -722.22619629]
[808.64459229 -707.35479736]
[810.29614258 -692.44543457]
[811.63403320 -677.50469971]
[812.65771484 -662.53912354]
[813.36669922 -647.55529785]
[813.76068115 -632.55993652]
[813.83947754 -617.55957031]
[813.60308838 -602.56091309]
[813.05151367 -587.57049561]
[812.18518066 -572.59497070]
[811.00427246 -557.64099121]
[809.50946045 -542.71508789]
[807.70135498 -527.82391357]
[805.58074951 -512.97399902]
[803.14855957 -498.17193604]
[800.40588379 -483.42425537]
[797.35394287 -468.73745728]
[793.99401855 -454.11801147]
[790.32769775 -439.57241821]
[786.35650635 -425.10705566]
[782.08227539 -410.72833252]
[777.50683594 -396.44262695]
[772.63226318 -382.25616455]
[767.46063232 -368.17529297]
[761.99432373 -354.20620728]
[756.23565674 -340.35504150]
[750.18719482 -326.62796021]
[743.85168457 -313.03100586]
[737.23181152 -299.57015991]
[730.33056641 -286.25140381]
[723.15100098 -273.08056641]
[715.69628906 -260.06353760]
[707.96966553 -247.20599365]
[699.97460938 -234.51365662]
[691.71459961 -221.99211121]
[683.19329834 -209.64691162]
[674.41448975 -197.48347473]
[665.38201904 -185.50718689]
[656.09991455 -173.72334290]
[646.57226562 -162.13714600]
[636.80322266 -150.75369263]
[626.79718018 -139.57803345]
[616.55847168 -128.61509705]
[606.09167480 -117.86971283]
[595.40142822 -107.34664154]
[584.49243164 -97.05051422]
[573.36950684 -86.98589325]
[562.03753662 -77.15720367]
[550.50152588 -67.56880951]
[538.76660156 -58.22492218]
[526.83795166 -49.12968063]
[514.72076416 -40.28709793]
[502.42050171 -31.70107651]
[489.94253540 -23.37541199]
[477.29235840 -15.31377888]
[464.47558594 -7.51973581]
[451.49789429 0.00327461]
[438.36495972 7.25193071]
[425.08264160 14.22303104]
[411.65676880 20.91349792]
[398.09326172 27.32037735]
[384.39813232 33.44083786]
[370.57742310 39.27218246]
[356.63723755 44.81182861]
[342.58370972 50.05733871]
[328.42306519 55.00638962]
[314.16159058 59.65679550]
[299.80551147 64.00650787]
[285.36120605 68.05360413]
[270.83508301 71.79629517]
[256.23348999 75.23293304]
[241.56292725 78.36199188]
[226.82984924 81.18209839]
[212.04077148 83.69200897]
[197.20220947 85.89060211]
[182.32072449 87.77692413]
[167.40289307 89.35012817]
[152.45530701 90.60951996]
[137.48454285 91.55455780]
[122.49724579 92.18480682]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
