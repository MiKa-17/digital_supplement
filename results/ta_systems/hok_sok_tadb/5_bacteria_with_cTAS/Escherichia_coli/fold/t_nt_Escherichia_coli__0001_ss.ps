%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 22:30:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_GUAAGAGGCU_AACCUGAUGUUGUCUAGCAAUGAAG_GG_G_CCUCAG____GUUAAUGUUA___AACGUCCUGCGGGACGCGUAAUGUUAACUGGGGCUUUUCUCUAUCUGCCU_UU_AGUGUUCAUGCCUGAGGCAGAAAGCCUCAAGCACCCGCAG___________\
) } def
/len { sequence length } bind def

/coor [
[211.22195435 122.14241791]
[200.04275513 112.13687134]
[189.35229492 101.61073303]
[179.17480469 90.58783722]
[169.53332520 79.09316254]
[160.44970703 67.15274811]
[148.09298706 75.65636444]
[135.73626709 84.15998840]
[123.37955475 92.66360474]
[111.10100555 101.27971649]
[98.98188019 110.11864471]
[103.40116882 123.76807404]
[103.38357544 138.09361267]
[98.94410706 151.69132996]
[90.53047180 163.23271179]
[78.97796631 171.59448242]
[65.42655945 175.96794128]
[51.20840836 175.93707275]
[37.71692657 171.51821899]
[26.27018547 163.15704346]
[14.07083893 171.88491821]
[1.87149262 180.61280823]
[0.84720385 196.21681213]
[-10.00478554 207.47595215]
[-25.56049919 209.07402039]
[-38.47500229 200.25643921]
[-42.65046310 185.18661499]
[-36.11535645 170.98005676]
[-21.95536041 164.34466553]
[-6.85639095 168.41346741]
[5.34295511 159.68557739]
[17.54230118 150.95768738]
[13.12363243 135.86358643]
[14.13580036 120.14174652]
[20.47500992 105.68975067]
[31.39340973 94.25817108]
[45.58726883 87.23856354]
[61.35263443 85.49407196]
[76.78988647 89.25334167]
[90.03263855 98.08074188]
[94.12742615 91.10047150]
[102.37312317 89.08036804]
[107.55615234 81.51297760]
[114.87593079 80.30688477]
[127.23265076 71.80326843]
[139.58937073 63.29965210]
[151.94609070 54.79603195]
[144.03849792 42.04630280]
[136.74652100 28.93475533]
[130.08666992 15.49109268]
[124.07405090 1.74576831]
[118.72226715 -12.27007961]
[114.04344940 -26.52470207]
[110.04818726 -40.98580551]
[106.74554443 -55.62063217]
[104.14299774 -70.39602661]
[102.24643707 -85.27851868]
[101.06016541 -100.23439789]
[100.58686066 -115.22978973]
[100.82761383 -130.23071289]
[101.78186035 -145.20318604]
[103.44744873 -160.11329651]
[105.82060242 -174.92726135]
[108.89594269 -189.61154175]
[112.66651154 -204.13284302]
[117.12376404 -218.45829773]
[122.25759888 -232.55543518]
[128.05638123 -246.39233398]
[134.50698853 -259.93762207]
[141.59480286 -273.16067505]
[149.30377197 -286.03146362]
[157.61642456 -298.52087402]
[166.51393127 -310.60061646]
[175.97613525 -322.24328613]
[185.98161316 -333.42257690]
[196.50767517 -344.11309814]
[207.53050232 -354.29067993]
[219.02511597 -363.93222046]
[230.96545410 -373.01593018]
[243.32450867 -381.52117920]
[256.07424927 -389.42874146]
[269.18582153 -396.72070312]
[282.62948608 -403.38052368]
[296.37484741 -409.39309692]
[310.39068604 -414.74487305]
[324.64532471 -419.42364502]
[339.10644531 -423.41888428]
[353.74127197 -426.72149658]
[368.51666260 -429.32400513]
[383.39916992 -431.22052002]
[398.35507202 -432.40676880]
[413.35043335 -432.88003540]
[428.35137939 -432.63925171]
[443.32385254 -431.68496704]
[458.23394775 -430.01934814]
[473.04791260 -427.64614868]
[487.73217773 -424.57077026]
[502.25347900 -420.80017090]
[516.57891846 -416.34289551]
[530.67602539 -411.20901489]
[544.51293945 -405.41021729]
[558.05822754 -398.95956421]
[571.28125000 -391.87173462]
[584.15203857 -384.16271973]
[596.64141846 -375.85006714]
[608.72113037 -366.95251465]
[620.36376953 -357.49029541]
[631.54302979 -347.48480225]
[642.23352051 -336.95870972]
[652.41107178 -325.93585205]
[662.05261230 -314.44122314]
[671.13629150 -302.50085449]
[679.64154053 -290.14178467]
[687.54907227 -277.39202881]
[694.84100342 -264.28042603]
[701.50073242 -250.83674622]
[707.51330566 -237.09138489]
[712.86505127 -223.07551575]
[717.54382324 -208.82087708]
[721.53900146 -194.35975647]
[724.84155273 -179.72491455]
[727.44403076 -164.94950867]
[729.34051514 -150.06700134]
[730.52673340 -135.11111450]
[731.00000000 -120.11573029]
[730.75915527 -105.11480713]
[729.80487061 -90.14233398]
[728.13922119 -75.23223114]
[725.76599121 -60.41827393]
[722.69055176 -45.73401642]
[718.91992188 -31.21272469]
[714.46258545 -16.88729477]
[709.32873535 -2.79017782]
[703.52984619 11.04668999]
[697.07916260 24.59196472]
[689.99133301 37.81496048]
[682.28228760 50.68572617]
[673.96960449 63.17509842]
[665.07202148 75.25479126]
[655.60974121 86.89744568]
[645.60424805 98.07666779]
[635.07812500 108.76715088]
[624.05523682 118.94467163]
[612.56060791 128.58618164]
[600.62023926 137.66981506]
[588.26110840 146.17503357]
[575.51135254 154.08253479]
[562.39971924 161.37442017]
[548.95605469 168.03417969]
[535.21069336 174.04670715]
[521.19476318 179.39839172]
[506.94012451 184.07711792]
[492.47900391 188.07228088]
[477.84414673 191.37481689]
[463.06875610 193.97726440]
[448.18624878 195.87373352]
[433.23034668 197.05990601]
[418.23495483 197.53309631]
[403.23403931 197.29225159]
[388.26156616 196.33789062]
[373.35147095 194.67221069]
[358.53750610 192.29895020]
[343.85327148 189.22351074]
[329.33197021 185.45285034]
[315.00656128 180.99549866]
[300.90945435 175.86157227]
[287.07260132 170.06268311]
[273.52734375 163.61198425]
[260.30435181 156.52407837]
[247.43362427 148.81503296]
[234.94425964 140.50228882]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 47]
[7 46]
[8 45]
[9 44]
[10 42]
[11 40]
[20 32]
[21 31]
[22 30]
] def

init

% Start Annotations
6 47 0.0 0.6 colorpair
7 46 0.0 1 colorpair
8 45 0.0 1 colorpair
9 44 0.0 1 colorpair
10 42 0.0 0.6 colorpair
21 31 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
6 47 1 gmark
10 42 1 gmark
11 40 23 gmark
11 cmark
40 cmark
20 32 11 gmark
20 cmark
32 cmark
21 31 1 gmark
21 cmark
31 cmark
22 30 29 gmark
22 cmark
30 cmark

% End Annotations
showpage
end
%%EOF
