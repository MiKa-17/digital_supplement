%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 22:30:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_____C_CCU__UG__UGGCGUUUAU__AGUGAUGUGUUUCACGGUGCUGGUAUUCACGCUGCUGACCCGAGAAUCGCUGUGUGAGUUGCGUAUCAGAGACGGUAAUAUGGAGGUUGCGGCUUUUAUGGCUUAC_GAAUC___GAAGAA_GUAGCA___ACCAGGCGGGGG_GCA_AU_CCCCGCCUUUC_CA_GUGGUGAUGCU______CU_GACU__ACGGAAC_____C_GC___CUUUAU__A_______\
___________________________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50292969 92.17502594]
[62.51642227 91.52522278]
[47.54751205 90.55090332]
[32.60321808 89.25251770]
[17.69056320 87.63067627]
[2.81654477 85.68613434]
[-12.01185608 83.41981506]
[-26.78767776 80.83277893]
[-41.50398636 77.92624664]
[-56.15386963 74.70156860]
[-70.73045349 71.16026306]
[-85.22689819 67.30400085]
[-99.63639832 63.13458252]
[-113.95218658 58.65396881]
[-128.16754150 53.86426163]
[-142.27580261 48.76771164]
[-156.27032471 43.36671066]
[-170.14456177 37.66379547]
[-183.89198303 31.66163635]
[-197.50614929 25.36305809]
[-210.98066711 18.77101517]
[-224.30921936 11.88859940]
[-237.48551941 4.71904373]
[-250.50341797 -2.73428679]
[-263.35678101 -10.46789360]
[-276.03958130 -18.47814751]
[-288.54586792 -26.76128578]
[-300.86978149 -35.31342316]
[-313.00552368 -44.13054276]
[-324.94738770 -53.20850754]
[-336.68978882 -62.54305649]
[-348.22720337 -72.12980652]
[-359.55419922 -81.96426392]
[-370.66549683 -92.04180145]
[-381.55584717 -102.35769653]
[-392.22018433 -112.90709686]
[-402.65344238 -123.68506622]
[-412.85076904 -134.68653870]
[-422.80734253 -145.90634155]
[-432.51852417 -157.33921814]
[-441.97973633 -168.97979736]
[-451.18655396 -180.82261658]
[-460.13461304 -192.86212158]
[-468.81976318 -205.09265137]
[-477.23791504 -217.50846863]
[-485.38510132 -230.10374451]
[-493.25750732 -242.87257385]
[-500.85140991 -255.80895996]
[-508.16329956 -268.90682983]
[-515.18969727 -282.16003418]
[-521.92736816 -295.56234741]
[-528.37304688 -309.10748291]
[-534.52380371 -322.78906250]
[-540.37664795 -336.60070801]
[-545.92895508 -350.53588867]
[-551.17803955 -364.58810425]
[-556.12145996 -378.75076294]
[-560.75689697 -393.01715088]
[-565.08221436 -407.38064575]
[-569.09527588 -421.83444214]
[-572.79431152 -436.37182617]
[-576.17749023 -450.98590088]
[-579.24328613 -465.66986084]
[-581.99023438 -480.41680908]
[-584.41705322 -495.21978760]
[-586.52264404 -510.07183838]
[-588.30590820 -524.96606445]
[-589.76617432 -539.89538574]
[-590.90258789 -554.85290527]
[-591.71472168 -569.83148193]
[-592.20214844 -584.82415771]
[-592.36462402 -599.82385254]
[-592.20214844 -614.82354736]
[-591.71472168 -629.81622314]
[-590.90258789 -644.79479980]
[-589.76617432 -659.75231934]
[-588.30596924 -674.68164062]
[-586.52264404 -689.57586670]
[-584.41711426 -704.42791748]
[-581.99029541 -719.23089600]
[-579.24334717 -733.97784424]
[-576.17755127 -748.66180420]
[-572.79437256 -763.27587891]
[-569.09533691 -777.81329346]
[-565.08227539 -792.26708984]
[-560.75701904 -806.63055420]
[-556.12158203 -820.89697266]
[-551.17816162 -835.05963135]
[-545.92907715 -849.11181641]
[-540.37677002 -863.04699707]
[-534.52386475 -876.85864258]
[-528.37316895 -890.54028320]
[-521.92749023 -904.08538818]
[-515.18981934 -917.48773193]
[-508.16345215 -930.74090576]
[-500.85156250 -943.83880615]
[-493.25765991 -956.77514648]
[-485.38525391 -969.54400635]
[-477.23806763 -982.13928223]
[-468.81994629 -994.55511475]
[-460.13479614 -1006.78564453]
[-451.18673706 -1018.82513428]
[-441.97991943 -1030.66796875]
[-432.51870728 -1042.30859375]
[-422.80755615 -1053.74145508]
[-412.85095215 -1064.96130371]
[-402.65365601 -1075.96276855]
[-392.22039795 -1086.74072266]
[-381.55606079 -1097.29016113]
[-370.66571045 -1107.60595703]
[-359.55441284 -1117.68359375]
[-348.22741699 -1127.51806641]
[-336.69000244 -1137.10473633]
[-324.94760132 -1146.43933105]
[-313.00573730 -1155.51733398]
[-300.87002563 -1164.33447266]
[-288.54611206 -1172.88659668]
[-276.03982544 -1181.16967773]
[-263.35702515 -1189.17993164]
[-250.50367737 -1196.91357422]
[-237.48577881 -1204.36694336]
[-224.30947876 -1211.53649902]
[-210.98094177 -1218.41894531]
[-197.50642395 -1225.01098633]
[-183.89225769 -1231.30957031]
[-170.14483643 -1237.31164551]
[-156.27059937 -1243.01464844]
[-142.27607727 -1248.41564941]
[-128.16781616 -1253.51220703]
[-113.95246124 -1258.30187988]
[-99.63668060 -1262.78247070]
[-85.22718048 -1266.95190430]
[-70.73074341 -1270.80822754]
[-56.15415573 -1274.34948730]
[-41.50427246 -1277.57421875]
[-26.78796768 -1280.48071289]
[-12.01214600 -1283.06774902]
[2.81625319 -1285.33410645]
[17.69027138 -1287.27868652]
[32.60292435 -1288.90051270]
[47.54721832 -1290.19885254]
[62.51612854 -1291.17321777]
[77.50263977 -1291.82299805]
[92.49970245 -1292.14794922]
[107.50029755 -1292.14794922]
[122.49736023 -1291.82299805]
[137.48387146 -1291.17321777]
[152.45278931 -1290.19885254]
[167.39707947 -1288.90051270]
[182.30972290 -1287.27868652]
[197.18374634 -1285.33410645]
[212.01214600 -1283.06774902]
[226.78796387 -1280.48071289]
[241.50427246 -1277.57421875]
[256.15414429 -1274.34948730]
[270.73074341 -1270.80822754]
[285.22717285 -1266.95190430]
[299.63668823 -1262.78247070]
[313.95245361 -1258.30187988]
[328.16781616 -1253.51220703]
[342.27606201 -1248.41564941]
[356.27059937 -1243.01464844]
[370.14483643 -1237.31164551]
[383.89224243 -1231.30957031]
[397.50640869 -1225.01098633]
[410.98092651 -1218.41894531]
[424.30947876 -1211.53649902]
[437.48577881 -1204.36694336]
[450.50366211 -1196.91357422]
[463.35702515 -1189.17993164]
[476.03982544 -1181.16967773]
[488.54611206 -1172.88659668]
[500.87002563 -1164.33447266]
[513.00573730 -1155.51733398]
[524.94763184 -1146.43933105]
[536.69000244 -1137.10473633]
[548.22741699 -1127.51806641]
[559.55444336 -1117.68359375]
[570.66571045 -1107.60595703]
[581.55609131 -1097.29016113]
[592.22039795 -1086.74072266]
[602.65362549 -1075.96276855]
[612.85095215 -1064.96130371]
[622.80755615 -1053.74145508]
[632.51873779 -1042.30859375]
[641.97991943 -1030.66796875]
[651.18670654 -1018.82513428]
[660.13482666 -1006.78564453]
[668.81994629 -994.55511475]
[677.23809814 -982.13928223]
[685.38525391 -969.54400635]
[693.25762939 -956.77514648]
[700.85156250 -943.83880615]
[708.16345215 -930.74090576]
[715.18981934 -917.48773193]
[721.92749023 -904.08538818]
[728.37316895 -890.54028320]
[734.52386475 -876.85864258]
[740.37677002 -863.04699707]
[745.92907715 -849.11181641]
[751.17816162 -835.05963135]
[756.12158203 -820.89697266]
[760.75701904 -806.63055420]
[765.08227539 -792.26708984]
[769.09533691 -777.81329346]
[772.79437256 -763.27587891]
[776.17755127 -748.66180420]
[779.24334717 -733.97784424]
[781.99029541 -719.23089600]
[784.41711426 -704.42791748]
[786.52264404 -689.57586670]
[788.30596924 -674.68164062]
[789.76617432 -659.75231934]
[790.90258789 -644.79479980]
[791.71472168 -629.81622314]
[792.20214844 -614.82354736]
[792.36462402 -599.82385254]
[792.20214844 -584.82415771]
[791.71472168 -569.83148193]
[790.90258789 -554.85290527]
[789.76617432 -539.89538574]
[788.30590820 -524.96606445]
[786.52264404 -510.07183838]
[784.41705322 -495.21978760]
[781.99023438 -480.41680908]
[779.24328613 -465.66986084]
[776.17749023 -450.98590088]
[772.79431152 -436.37182617]
[769.09527588 -421.83444214]
[765.08221436 -407.38064575]
[760.75689697 -393.01715088]
[756.12145996 -378.75076294]
[751.17803955 -364.58810425]
[745.92895508 -350.53588867]
[740.37664795 -336.60070801]
[734.52380371 -322.78906250]
[728.37304688 -309.10748291]
[721.92736816 -295.56234741]
[715.18969727 -282.16003418]
[708.16326904 -268.90682983]
[700.85144043 -255.80895996]
[693.25750732 -242.87257385]
[685.38507080 -230.10374451]
[677.23791504 -217.50846863]
[668.81976318 -205.09265137]
[660.13464355 -192.86212158]
[651.18652344 -180.82261658]
[641.97973633 -168.97979736]
[632.51855469 -157.33921814]
[622.80737305 -145.90634155]
[612.85076904 -134.68653870]
[602.65344238 -123.68506622]
[592.22015381 -112.90709686]
[581.55584717 -102.35769653]
[570.66546631 -92.04180145]
[559.55419922 -81.96426392]
[548.22717285 -72.12980652]
[536.68975830 -62.54305649]
[524.94738770 -53.20850754]
[513.00549316 -44.13054276]
[500.86978149 -35.31342316]
[488.54586792 -26.76128578]
[476.03958130 -18.47814751]
[463.35678101 -10.46789360]
[450.50341797 -2.73428679]
[437.48553467 4.71904373]
[424.30920410 11.88859940]
[410.98068237 18.77101517]
[397.50616455 25.36305809]
[383.89199829 31.66163635]
[370.14456177 37.66379547]
[356.27032471 43.36671066]
[342.27578735 48.76771164]
[328.16754150 53.86426163]
[313.95217896 58.65396881]
[299.63638306 63.13458252]
[285.22689819 67.30400085]
[270.73046875 71.16026306]
[256.15386963 74.70156860]
[241.50398254 77.92624664]
[226.78767395 80.83277893]
[212.01185608 83.41981506]
[197.18345642 85.68613434]
[182.30943298 87.63067627]
[167.39677429 89.25251770]
[152.45248413 90.55090332]
[137.48358154 91.52522278]
[122.49707031 92.17502594]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
