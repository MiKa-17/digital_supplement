%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 22:30:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_____CCCU__UG__UGGCAGUCAU__AGUGCUGUGUUUAACGGUGCUGGUAUUCACGCUGCUGAUCGGAGAAUCGCUGUGUGAGUUGCGGAUCAAAGACGGUAAUAUGGAGGUUACGGCUGUUCUCGCUUAC_GAAUCGAA___G_AA_GUAGCAG___CCGGGCGGGGG_GCA_AU_CCCCGCG_UAUCCA_GUGGUGAGGCU_G_GG_AUC_______UUAA_GGC_ACCUGC___UUUAAA__________\
_______________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50337982 92.15095520]
[62.51894760 91.45305634]
[47.55480576 90.40666962]
[32.61906815 89.01236725]
[17.71981812 87.27089691]
[2.86512232 85.18321228]
[-11.93697262 82.75044250]
[-26.67845154 79.97389984]
[-41.35132980 76.85509491]
[-55.94766617 73.39570618]
[-70.45955658 69.59761047]
[-84.87913513 65.46286774]
[-99.19860077 60.99372101]
[-113.41019440 56.19258118]
[-127.50622559 51.06205368]
[-141.47904968 45.60491562]
[-155.32112122 39.82411957]
[-169.02493286 33.72280121]
[-182.58305359 27.30426025]
[-195.98815918 20.57197380]
[-209.23297119 13.52958775]
[-222.31033325 6.18091440]
[-235.21315002 -1.47006524]
[-247.93446350 -9.41920853]
[-260.46734619 -17.66221046]
[-272.80502319 -26.19460869]
[-284.94085693 -35.01178360]
[-296.86819458 -44.10895538]
[-308.58062744 -53.48120117]
[-320.07183838 -63.12344742]
[-331.33554077 -73.03047180]
[-342.36569214 -83.19690704]
[-353.15628052 -93.61724854]
[-363.70147705 -104.28585815]
[-373.99557495 -115.19695282]
[-384.03298950 -126.34462738]
[-393.80828857 -137.72283936]
[-403.31619263 -149.32543945]
[-412.55154419 -161.14613342]
[-421.50933838 -173.17852783]
[-430.18472290 -185.41609192]
[-438.57299805 -197.85221863]
[-446.66961670 -210.48016357]
[-454.47021484 -223.29307556]
[-461.97055054 -236.28404236]
[-469.16659546 -249.44602966]
[-476.05441284 -262.77188110]
[-482.63027954 -276.25439453]
[-488.89062500 -289.88629150]
[-494.83209229 -303.66015625]
[-500.45147705 -317.56854248]
[-505.74566650 -331.60391235]
[-510.71185303 -345.75866699]
[-515.34729004 -360.02517700]
[-519.64953613 -374.39566040]
[-523.61627197 -388.86236572]
[-527.24523926 -403.41744995]
[-530.53460693 -418.05307007]
[-533.48248291 -432.76123047]
[-536.08734131 -447.53402710]
[-538.34771729 -462.36340332]
[-540.26245117 -477.24139404]
[-541.83044434 -492.15988159]
[-543.05090332 -507.11083984]
[-543.92309570 -522.08612061]
[-544.44659424 -537.07769775]
[-544.62115479 -552.07733154]
[-544.44659424 -567.07702637]
[-543.92309570 -582.06854248]
[-543.05090332 -597.04388428]
[-541.83044434 -611.99481201]
[-540.26245117 -626.91333008]
[-538.34777832 -641.79132080]
[-536.08740234 -656.62066650]
[-533.48254395 -671.39349365]
[-530.53466797 -686.10162354]
[-527.24536133 -700.73724365]
[-523.61633301 -715.29235840]
[-519.64965820 -729.75903320]
[-515.34741211 -744.12957764]
[-510.71194458 -758.39605713]
[-505.74578857 -772.55084229]
[-500.45159912 -786.58618164]
[-494.83224487 -800.49456787]
[-488.89077759 -814.26843262]
[-482.63043213 -827.90032959]
[-476.05456543 -841.38287354]
[-469.16674805 -854.70874023]
[-461.97073364 -867.87066650]
[-454.47039795 -880.86169434]
[-446.66979980 -893.67462158]
[-438.57318115 -906.30255127]
[-430.18490601 -918.73864746]
[-421.50952148 -930.97625732]
[-412.55175781 -943.00866699]
[-403.31640625 -954.82934570]
[-393.80850220 -966.43194580]
[-384.03320312 -977.81018066]
[-373.99578857 -988.95782471]
[-363.70172119 -999.86895752]
[-353.15652466 -1010.53753662]
[-342.36593628 -1020.95788574]
[-331.33581543 -1031.12438965]
[-320.07208252 -1041.03137207]
[-308.58090210 -1050.67358398]
[-296.86846924 -1060.04589844]
[-284.94110107 -1069.14306641]
[-272.80529785 -1077.96020508]
[-260.46762085 -1086.49267578]
[-247.93473816 -1094.73559570]
[-235.21343994 -1102.68481445]
[-222.31062317 -1110.33581543]
[-209.23326111 -1117.68444824]
[-195.98844910 -1124.72680664]
[-182.58335876 -1131.45910645]
[-169.02523804 -1137.87768555]
[-155.32144165 -1143.97900391]
[-141.47937012 -1149.75988770]
[-127.50654602 -1155.21691895]
[-113.41051483 -1160.34753418]
[-99.19892120 -1165.14868164]
[-84.87946320 -1169.61779785]
[-70.45988464 -1173.75256348]
[-55.94799805 -1177.55065918]
[-41.35166168 -1181.01000977]
[-26.67878342 -1184.12890625]
[-11.93730640 -1186.90539551]
[2.86478662 -1189.33825684]
[17.71948051 -1191.42590332]
[32.61872864 -1193.16735840]
[47.55447006 -1194.56164551]
[62.51860809 -1195.60803223]
[77.50304413 -1196.30603027]
[92.49965668 -1196.65502930]
[107.50034332 -1196.65502930]
[122.49695587 -1196.30603027]
[137.48139954 -1195.60803223]
[152.44552612 -1194.56164551]
[167.38127136 -1193.16735840]
[182.28051758 -1191.42590332]
[197.13520813 -1189.33825684]
[211.93730164 -1186.90539551]
[226.67878723 -1184.12890625]
[241.35166931 -1181.01000977]
[255.94799805 -1177.55065918]
[270.45986938 -1173.75256348]
[284.87945557 -1169.61779785]
[299.19891357 -1165.14868164]
[313.41052246 -1160.34753418]
[327.50653076 -1155.21691895]
[341.47937012 -1149.75988770]
[355.32144165 -1143.97900391]
[369.02523804 -1137.87768555]
[382.58334351 -1131.45910645]
[395.98846436 -1124.72680664]
[409.23327637 -1117.68444824]
[422.31063843 -1110.33581543]
[435.21343994 -1102.68481445]
[447.93475342 -1094.73559570]
[460.46762085 -1086.49267578]
[472.80529785 -1077.96020508]
[484.94110107 -1069.14306641]
[496.86846924 -1060.04589844]
[508.58090210 -1050.67358398]
[520.07208252 -1041.03137207]
[531.33581543 -1031.12438965]
[542.36590576 -1020.95788574]
[553.15649414 -1010.53753662]
[563.70172119 -999.86895752]
[573.99578857 -988.95782471]
[584.03320312 -977.81018066]
[593.80853271 -966.43194580]
[603.31640625 -954.82934570]
[612.55175781 -943.00866699]
[621.50952148 -930.97625732]
[630.18487549 -918.73864746]
[638.57318115 -906.30255127]
[646.66979980 -893.67462158]
[654.47039795 -880.86169434]
[661.97070312 -867.87066650]
[669.16674805 -854.70874023]
[676.05456543 -841.38287354]
[682.63043213 -827.90032959]
[688.89074707 -814.26843262]
[694.83221436 -800.49456787]
[700.45159912 -786.58618164]
[705.74578857 -772.55084229]
[710.71197510 -758.39605713]
[715.34741211 -744.12957764]
[719.64965820 -729.75903320]
[723.61633301 -715.29235840]
[727.24536133 -700.73724365]
[730.53466797 -686.10162354]
[733.48254395 -671.39349365]
[736.08740234 -656.62066650]
[738.34777832 -641.79132080]
[740.26245117 -626.91333008]
[741.83044434 -611.99481201]
[743.05090332 -597.04388428]
[743.92309570 -582.06854248]
[744.44659424 -567.07702637]
[744.62115479 -552.07733154]
[744.44659424 -537.07769775]
[743.92309570 -522.08612061]
[743.05090332 -507.11083984]
[741.83044434 -492.15988159]
[740.26245117 -477.24139404]
[738.34771729 -462.36340332]
[736.08734131 -447.53402710]
[733.48248291 -432.76123047]
[730.53460693 -418.05307007]
[727.24523926 -403.41744995]
[723.61627197 -388.86236572]
[719.64953613 -374.39566040]
[715.34729004 -360.02517700]
[710.71185303 -345.75866699]
[705.74566650 -331.60391235]
[700.45147705 -317.56854248]
[694.83209229 -303.66015625]
[688.89062500 -289.88629150]
[682.63024902 -276.25439453]
[676.05438232 -262.77188110]
[669.16656494 -249.44602966]
[661.97058105 -236.28404236]
[654.47021484 -223.29307556]
[646.66961670 -210.48016357]
[638.57299805 -197.85221863]
[630.18469238 -185.41609192]
[621.50933838 -173.17852783]
[612.55151367 -161.14613342]
[603.31622314 -149.32543945]
[593.80828857 -137.72283936]
[584.03295898 -126.34462738]
[573.99554443 -115.19695282]
[563.70147705 -104.28585815]
[553.15625000 -93.61724854]
[542.36566162 -83.19690704]
[531.33557129 -73.03047180]
[520.07183838 -63.12344742]
[508.58062744 -53.48120117]
[496.86819458 -44.10895538]
[484.94085693 -35.01178360]
[472.80502319 -26.19460869]
[460.46734619 -17.66221046]
[447.93444824 -9.41920853]
[435.21316528 -1.47006524]
[422.31033325 6.18091440]
[409.23297119 13.52958775]
[395.98815918 20.57197380]
[382.58303833 27.30426025]
[369.02493286 33.72280121]
[355.32113647 39.82411957]
[341.47906494 45.60491562]
[327.50622559 51.06205368]
[313.41018677 56.19258118]
[299.19860840 60.99372101]
[284.87911987 65.46286774]
[270.45956421 69.59761047]
[255.94766235 73.39570618]
[241.35133362 76.85509491]
[226.67845154 79.97389984]
[211.93696594 82.75044250]
[197.13487244 85.18321228]
[182.28018188 87.27089691]
[167.38093567 89.01236725]
[152.44519043 90.40666962]
[137.48104858 91.45305634]
[122.49662018 92.15095520]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
