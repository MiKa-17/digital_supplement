%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:20:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAUGCCUGACAAACGGAGCGUAUUAAAACUGAUCGUUAUUUGUGCCACGGUUAUAUCAUUGGCAUGGAUAACACGCAGCCAGCUUUGCGAGCUGCGCAUCCGAUCGGGCAACACGGAGGUUGCGGCUAUUCUGGCUUACGAAUCCGAACGG\
) } def
/len { sequence length } bind def

/coor [
[283.25344849 304.75094604]
[298.25213623 304.84729004]
[287.97500610 293.92114258]
[273.61911011 289.95162964]
[269.79995728 274.59829712]
[259.52282715 263.67214966]
[249.24571228 252.74601746]
[238.96858215 241.81987000]
[228.69145203 230.89372253]
[218.41433716 219.96757507]
[208.13720703 209.04142761]
[199.23213196 210.22584534]
[190.66294861 207.09953308]
[184.42646790 200.25474548]
[182.03857422 191.16513062]
[184.16723633 181.86953735]
[174.57760620 170.33528137]
[164.98799133 158.80101013]
[155.39836121 147.26675415]
[145.69158936 135.83091736]
[135.86868286 124.49466705]
[126.04576874 113.15842438]
[119.81150055 120.69699860]
[111.57131958 125.62934113]
[102.33238983 127.49142456]
[93.17911530 126.18618011]
[85.14599609 121.98143005]
[79.10066986 115.46575165]
[75.65053558 107.46887970]
[75.08284760 98.95719910]
[77.34407806 90.91733551]
[65.80982208 81.32771301]
[54.27556229 71.73809052]
[39.31361389 75.40500641]
[25.22603989 69.62628174]
[17.33578873 56.81192017]
[18.49030495 41.98609543]
[6.95604753 32.39646912]
[-4.57821035 22.80684471]
[-16.11246872 13.21722126]
[-27.64672661 3.62759662]
[-39.18098450 -5.96202755]
[-50.71524048 -15.55165195]
[-62.24950027 -25.14127731]
[-73.78376007 -34.73089981]
[-85.31801605 -44.32052612]
[-96.85227203 -53.91014862]
[-108.38652802 -63.49977493]
[-119.92079163 -73.08940125]
[-135.44659424 -71.82952118]
[-147.00735474 -81.71907806]
[-148.11277771 -96.52832031]
[-163.82556152 -94.83013153]
[-176.08442688 -104.80489349]
[-177.61639404 -120.53475952]
[-167.51257324 -132.68746948]
[-151.76739502 -134.05305481]
[-139.72218323 -123.82131958]
[-138.52314758 -108.06257629]
[-123.76099396 -109.67945862]
[-111.92700958 -100.11853027]
[-110.33116150 -84.62365723]
[-98.79690552 -75.03403473]
[-87.26264954 -65.44440460]
[-75.72839355 -55.85478210]
[-64.19412994 -46.26515961]
[-52.65987396 -36.67553329]
[-41.12561798 -27.08591080]
[-29.59136009 -17.49628639]
[-18.05710220 -7.90666103]
[-6.52284384 1.68296313]
[5.01141405 11.27258778]
[16.54567146 20.86221123]
[28.07992935 30.45183563]
[42.44579697 26.60997581]
[56.48530960 32.02809906]
[64.73887634 44.82387924]
[63.86518478 60.20383072]
[75.39944458 69.79345703]
[86.93370056 79.38307953]
[104.18577576 73.53414154]
[122.46472168 81.37575531]
[129.51879883 68.13793182]
[136.57287598 54.90010834]
[143.62695312 41.66228485]
[150.68103027 28.42445946]
[157.73510742 15.18663597]
[159.84779358 -1.63516390]
[176.59703064 -4.26179171]
[183.75765991 11.10576248]
[170.97293091 22.24071503]
[163.91885376 35.47853851]
[156.86477661 48.71636200]
[149.81069946 61.95418549]
[142.75662231 75.19200897]
[135.70254517 88.42983246]
[137.38200378 103.33551788]
[147.20492554 114.67176056]
[157.02783203 126.00800323]
[165.06347656 130.47976685]
[166.93261719 137.67713928]
[176.52224731 149.21139526]
[186.11186218 160.74565125]
[195.70149231 172.27990723]
[216.21008301 178.35636902]
[219.06335449 198.76429749]
[229.34048462 209.69044495]
[239.61759949 220.61659241]
[249.89472961 231.54273987]
[260.17184448 242.46888733]
[270.44897461 253.39503479]
[280.72610474 264.32116699]
[295.81710815 269.07220459]
[298.90115356 283.64404297]
[309.17828369 294.57019043]
[320.20870972 304.73532104]
[331.93615723 314.08767700]
[343.66363525 323.44000244]
[355.39111328 332.79235840]
[368.31176758 332.13247681]
[377.89535522 340.21350098]
[379.33108521 352.26254272]
[390.86535645 361.85214233]
[402.39959717 371.44177246]
[420.59188843 374.10556030]
[426.07870483 390.74771118]
[437.80618286 400.10006714]
[449.53363037 409.45239258]
[461.26110840 418.80474854]
[472.98858643 428.15710449]
[489.14193726 433.30541992]
[488.66653442 450.25268555]
[472.24993896 454.48733521]
[463.63623047 439.88458252]
[451.90878296 430.53222656]
[440.18130493 421.17987061]
[428.45382690 411.82751465]
[416.72634888 402.47518921]
[404.63632202 403.51019287]
[394.78134155 395.76245117]
[392.80996704 382.97604370]
[381.27572632 373.38641357]
[369.74145508 363.79678345]
[352.33282471 361.79525757]
[346.03875732 344.51983643]
[334.31127930 335.16748047]
[322.58383179 325.81515503]
[310.85635376 316.46279907]
[312.17468262 331.40475464]
[303.72125244 343.79586792]
[289.32809448 348.01922607]
[275.51965332 342.16030884]
[268.55532837 328.87503052]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 115]
[3 114]
[5 112]
[6 111]
[7 110]
[8 109]
[9 108]
[10 107]
[11 106]
[16 104]
[17 103]
[18 102]
[19 101]
[20 99]
[21 98]
[22 97]
[31 80]
[32 79]
[33 78]
[37 74]
[38 73]
[39 72]
[40 71]
[41 70]
[42 69]
[43 68]
[44 67]
[45 66]
[46 65]
[47 64]
[48 63]
[49 62]
[52 59]
[82 96]
[83 95]
[84 94]
[85 93]
[86 92]
[87 91]
[116 148]
[117 147]
[118 146]
[119 145]
[122 143]
[123 142]
[124 141]
[126 138]
[127 137]
[128 136]
[129 135]
[130 134]
] def

init

% Start Annotations
2 115 0.0 1 colorpair
3 114 0.0 1 colorpair
5 112 0.0 1 colorpair
6 111 0.0 1 colorpair
7 110 0.0 1 colorpair
8 109 0.0 1 colorpair
9 108 0.0 1 colorpair
10 107 0.0 1 colorpair
11 106 0.0 1 colorpair
16 104 0.0 1 colorpair
17 103 0.0 1 colorpair
18 102 0.0 1 colorpair
19 101 0.0 1 colorpair
20 99 0.0 1 colorpair
21 98 0.0 1 colorpair
22 97 0.0 1 colorpair
31 80 0.0 1 colorpair
32 79 0.0 1 colorpair
33 78 0.0 1 colorpair
37 74 0.0 1 colorpair
38 73 0.0 1 colorpair
39 72 0.0 1 colorpair
40 71 0.0 1 colorpair
41 70 0.0 1 colorpair
42 69 0.0 1 colorpair
43 68 0.0 1 colorpair
44 67 0.0 1 colorpair
45 66 0.0 1 colorpair
46 65 0.0 1 colorpair
47 64 0.0 1 colorpair
48 63 0.0 1 colorpair
49 62 0.0 1 colorpair
52 59 0.0 1 colorpair
82 96 0.0 1 colorpair
83 95 0.0 1 colorpair
84 94 0.0 1 colorpair
85 93 0.0 1 colorpair
86 92 0.0 1 colorpair
87 91 0.0 1 colorpair
116 148 0.0 1 colorpair
117 147 0.0 1 colorpair
118 146 0.0 1 colorpair
119 145 0.0 1 colorpair
122 143 0.0 1 colorpair
123 142 0.0 1 colorpair
124 141 0.0 1 colorpair
126 138 0.0 1 colorpair
127 137 0.0 1 colorpair
128 136 0.0 1 colorpair
129 135 0.0 1 colorpair
130 134 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
