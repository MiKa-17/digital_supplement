%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:20:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AACUGAUCGUUAUUUGUGCCACGGUUAUAUCAUUGGCAUGGAUAACACGCAGCCAGCUUUGCGAGCUGCGCAUCCGAUCGGGCAACACGGAGGUUGCGGCUAUUCUGGCUUACGAAUCCGAACGGUAAGGCAACCCGGCGGCGGGGGCUUUGCCUCCGCCCGCUGAUUGUCGGCGCGUUGAUCCACUAGCACC\
) } def
/len { sequence length } bind def

/coor [
[202.61180115 110.97153473]
[194.41136169 101.63582611]
[190.47361755 89.50455475]
[175.80477905 92.63906860]
[161.13594055 95.77358246]
[146.46710205 98.90809631]
[131.79826355 102.04261017]
[117.12942505 105.17712402]
[101.04882050 144.42248535]
[89.38653564 153.85600281]
[77.72425079 163.28950500]
[66.06196594 172.72302246]
[54.39968491 182.15653992]
[42.73740005 191.59004211]
[31.07511711 201.02355957]
[19.41283417 210.45707703]
[7.75055075 219.89057922]
[-3.91173267 229.32409668]
[-15.57401562 238.75761414]
[-27.23629951 248.19111633]
[-38.89858246 257.62463379]
[-40.70283127 273.09661865]
[-52.66442871 282.49740601]
[-67.40348816 280.68197632]
[-68.81451416 296.42315674]
[-80.99635315 306.49185181]
[-96.72172546 304.91445923]
[-106.66105652 292.62686157]
[-104.91751099 276.91903687]
[-92.52550507 267.11016846]
[-76.83699799 269.01971436]
[-75.53236389 254.22668457]
[-63.83953094 244.49362183]
[-48.33209610 245.96234131]
[-36.66981125 236.52883911]
[-25.00752831 227.09532166]
[-13.34524441 217.66180420]
[-1.68296134 208.22830200]
[9.97932148 198.79478455]
[21.64160538 189.36128235]
[33.30389023 179.92776489]
[44.96617126 170.49424744]
[56.62845612 161.06074524]
[68.29074097 151.62722778]
[79.95301819 142.19371033]
[91.61530304 132.76020813]
[90.34618378 125.36836243]
[86.53881073 103.19283295]
[72.39783478 98.18955231]
[58.25686264 93.18626404]
[44.11589050 88.18297577]
[29.97491646 83.17968750]
[15.83394337 78.17640686]
[1.70449078 84.73355865]
[-12.56519318 79.45807648]
[-18.72936630 65.94738770]
[-32.87033844 60.94410324]
[-49.81916046 61.36100006]
[-54.91166306 45.18995285]
[-40.78233337 35.81987381]
[-27.86705399 46.80313110]
[-13.72607994 51.80641937]
[-0.43664494 45.17871094]
[13.97558689 50.05131149]
[20.83723068 64.03543091]
[34.97820282 69.03871918]
[49.11917496 74.04199982]
[63.26015091 79.04528809]
[77.40112305 84.04857635]
[91.54209900 89.05186462]
[85.14239502 75.48558807]
[90.84194946 61.61060715]
[104.93003845 56.46029282]
[118.23455048 63.38777924]
[122.09351349 77.88289642]
[113.99491119 90.50828552]
[128.66374207 87.37377167]
[143.33258057 84.23925781]
[158.00141907 81.10474396]
[172.67025757 77.97023010]
[187.33909607 74.83571625]
[195.29017639 62.11642456]
[191.68231201 47.55678177]
[188.07443237 32.99713516]
[184.46655273 18.43749237]
[180.85868835 3.87784815]
[167.19580078 -4.06577969]
[163.23249817 -19.36505318]
[171.32014465 -32.94318771]
[186.66046143 -36.74451447]
[200.15232849 -28.51377296]
[203.79124451 -13.13411808]
[195.41831970 0.26997381]
[199.02619934 14.82961845]
[202.63407898 29.38926315]
[206.24194336 43.94890594]
[209.84982300 58.50855255]
[234.42849731 61.34051132]
[247.43946838 79.64158630]
[262.43161011 79.15586090]
[277.42373657 78.67012787]
[292.41586304 78.18440247]
[299.39544678 69.81871796]
[309.61892700 66.74629211]
[319.63290405 69.75238037]
[326.19210815 77.61022949]
[341.19210815 77.61022949]
[356.19210815 77.61022949]
[345.59912109 66.99002838]
[344.17510986 52.05777359]
[352.56979370 39.62680054]
[366.95285034 35.36914444]
[380.76153564 41.22749710]
[387.69519043 54.52879715]
[384.59008789 69.20388794]
[372.86471558 78.55622101]
[387.76846313 80.25292206]
[402.67218018 81.94963074]
[408.89880371 79.65928650]
[414.50216675 80.70985413]
[418.02819824 83.95021057]
[432.86917114 86.12863922]
[447.71014404 88.30706787]
[462.55111694 90.48549652]
[477.40924072 92.54369354]
[492.28353882 94.48151398]
[502.97174072 87.24509430]
[515.32849121 89.17443085]
[522.80578613 98.69456482]
[537.64678955 100.87299347]
[552.48773193 103.05142212]
[567.32873535 105.22985077]
[582.16967773 107.40827942]
[592.97363281 100.34588623]
[605.29754639 102.47505951]
[612.61968994 112.11502838]
[627.42346191 114.53349304]
[642.22717285 116.95195770]
[657.03094482 119.37042236]
[671.83471680 121.78888702]
[686.63842773 124.20735168]
[701.46130371 126.50586700]
[716.30224609 128.68429565]
[731.14324951 130.86273193]
[745.98419189 133.04115295]
[760.82519531 135.21958923]
[775.66613770 137.39801025]
[790.50714111 139.57644653]
[807.05645752 135.89450073]
[815.17578125 150.77778625]
[803.12182617 162.69995117]
[788.32867432 154.41741943]
[773.48773193 152.23898315]
[758.64672852 150.06056213]
[743.80578613 147.88212585]
[728.96478271 145.70370483]
[714.12384033 143.52526855]
[699.28283691 141.34684753]
[692.19824219 143.48902893]
[684.21997070 139.01109314]
[669.41625977 136.59263611]
[654.61248779 134.17417908]
[639.80871582 131.75570679]
[625.00500488 129.33724976]
[610.20123291 126.91877747]
[594.15417480 134.00724792]
[579.99127197 122.24925232]
[565.15026855 120.07082367]
[550.30932617 117.89239502]
[535.46832275 115.71396637]
[520.62738037 113.53553772]
[504.69720459 120.88293457]
[490.34573364 109.35581207]
[475.47143555 107.41799164]
[468.42242432 109.67462158]
[460.37271118 105.32646942]
[445.53173828 103.14804077]
[430.69076538 100.96961212]
[415.84979248 98.79118347]
[400.97549438 96.85336304]
[386.07174683 95.15665436]
[371.16802979 93.45994568]
[356.19210815 92.61022949]
[341.19210815 92.61022949]
[326.19210815 92.61022949]
[310.21392822 103.48526764]
[292.90158081 93.17653656]
[277.90945435 93.66226196]
[262.91732788 94.14799500]
[247.92518616 94.63372040]
[243.87605286 104.62882996]
[235.96414185 112.43186188]
[225.30253601 116.58154297]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 81]
[4 80]
[5 79]
[6 78]
[7 77]
[8 76]
[9 46]
[10 45]
[11 44]
[12 43]
[13 42]
[14 41]
[15 40]
[16 39]
[17 38]
[18 37]
[19 36]
[20 35]
[21 34]
[24 31]
[48 70]
[49 69]
[50 68]
[51 67]
[52 66]
[53 65]
[56 62]
[57 61]
[82 97]
[83 96]
[84 95]
[85 94]
[86 93]
[99 190]
[100 189]
[101 188]
[102 187]
[106 185]
[107 184]
[108 183]
[116 182]
[117 181]
[118 180]
[121 179]
[122 178]
[123 177]
[124 176]
[125 174]
[126 173]
[129 171]
[130 170]
[131 169]
[132 168]
[133 167]
[136 165]
[137 164]
[138 163]
[139 162]
[140 161]
[141 160]
[142 158]
[143 157]
[144 156]
[145 155]
[146 154]
[147 153]
[148 152]
] def

init

% Start Annotations
3 81 0.0 1 colorpair
4 80 0.0 1 colorpair
5 79 0.0 1 colorpair
6 78 0.0 1 colorpair
7 77 0.0 1 colorpair
8 76 0.0 1 colorpair
9 46 0.0 1 colorpair
10 45 0.0 1 colorpair
11 44 0.0 1 colorpair
12 43 0.0 1 colorpair
13 42 0.0 1 colorpair
14 41 0.0 1 colorpair
15 40 0.0 1 colorpair
16 39 0.0 1 colorpair
17 38 0.0 1 colorpair
18 37 0.0 1 colorpair
19 36 0.0 1 colorpair
20 35 0.0 1 colorpair
21 34 0.0 1 colorpair
24 31 0.0 1 colorpair
48 70 0.0 1 colorpair
49 69 0.0 1 colorpair
50 68 0.0 1 colorpair
51 67 0.0 1 colorpair
52 66 0.0 1 colorpair
53 65 0.0 1 colorpair
56 62 0.0 1 colorpair
57 61 0.0 1 colorpair
82 97 0.0 1 colorpair
83 96 0.0 1 colorpair
84 95 0.0 1 colorpair
85 94 0.0 1 colorpair
86 93 0.0 1 colorpair
99 190 0.0 1 colorpair
100 189 0.0 1 colorpair
101 188 0.0 1 colorpair
102 187 0.0 1 colorpair
106 185 0.0 1 colorpair
107 184 0.0 1 colorpair
108 183 0.0 1 colorpair
116 182 0.0 1 colorpair
117 181 0.0 1 colorpair
118 180 0.0 1 colorpair
121 179 0.0 1 colorpair
122 178 0.0 1 colorpair
123 177 0.0 1 colorpair
124 176 0.0 1 colorpair
125 174 0.0 1 colorpair
126 173 0.0 1 colorpair
129 171 0.0 1 colorpair
130 170 0.0 1 colorpair
131 169 0.0 1 colorpair
132 168 0.0 1 colorpair
133 167 0.0 1 colorpair
136 165 0.0 1 colorpair
137 164 0.0 1 colorpair
138 163 0.0 1 colorpair
139 162 0.0 1 colorpair
140 161 0.0 1 colorpair
141 160 0.0 1 colorpair
142 158 0.0 1 colorpair
143 157 0.0 1 colorpair
144 156 0.0 1 colorpair
145 155 0.0 1 colorpair
146 154 0.0 1 colorpair
147 153 0.0 1 colorpair
148 152 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
