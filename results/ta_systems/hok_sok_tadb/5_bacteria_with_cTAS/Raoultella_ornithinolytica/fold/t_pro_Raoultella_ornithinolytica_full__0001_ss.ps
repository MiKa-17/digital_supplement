%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:16:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_____________________________ACUACCGCGAAACACCCUGAUCUGGUGCGUAUUAAUAGUGUGCAUCACACUCCUGAUAUUCACAUACCUGACCCGGAAACCCCUAUGCGAAAUCCGGCAAAAGGACACGAACAGGGAGGUCGCGGCAAGCCUGGCUUACGAAUCCAA___UA__\
) } def
/len { sequence length } bind def

/coor [
[72.93687439 668.10400391]
[57.92802048 667.80432129]
[43.01815796 666.05749512]
[28.34649467 662.87976074]
[14.05002403 658.30084229]
[0.26223034 652.36352539]
[-12.88815022 645.12310791]
[-25.27833366 636.64733887]
[-36.79263306 627.01531982]
[-47.32353973 616.31689453]
[-56.77272797 604.65209961]
[-65.05196381 592.12969971]
[-72.08396149 578.86669922]
[-77.80304718 564.98699951]
[-82.15583038 550.62005615]
[-85.10166168 535.90008545]
[-86.61304474 520.96447754]
[-86.67585754 505.95278931]
[-85.28952789 491.00509644]
[-82.46698761 476.26098633]
[-78.23460388 461.85812378]
[-72.63187408 447.93099976]
[-65.71112823 434.60961914]
[-57.53697968 422.01840210]
[-48.18574524 410.27490234]
[-37.74474335 399.48873901]
[-26.31146049 389.76068115]
[-13.99264622 381.18148804]
[-0.90332109 373.83129883]
[12.83429909 367.77877808]
[27.09194756 363.08035278]
[41.73650360 359.77996826]
[56.63122559 357.90841675]
[71.63704681 357.48315430]
[72.66068268 342.51812744]
[73.68431854 327.55310059]
[74.70795441 312.58807373]
[63.70769882 304.99932861]
[57.85214615 292.86618042]
[58.76985550 279.31665039]
[66.32758331 267.90319824]
[78.63718414 261.67129517]
[72.01325989 248.33062744]
[80.89907074 235.24044800]
[82.17805481 220.29507446]
[83.45703888 205.34970093]
[84.73602295 190.40432739]
[74.97379303 179.21350098]
[76.05796051 164.03854370]
[87.86211395 153.87489319]
[89.14109802 138.92951965]
[90.42008972 123.98415375]
[75.19149017 107.17998505]
[79.09107971 84.83981323]
[70.02753448 72.88773346]
[60.96398544 60.93566132]
[46.46030045 54.61477280]
[44.93513870 39.79845810]
[35.87159348 27.84638023]
[26.80804634 15.89430428]
[17.74450111 3.94222736]
[8.68095589 -8.00984955]
[-0.38259023 -19.96192551]
[-15.78623486 -19.77776909]
[-28.19962120 -28.59600258]
[-32.98367310 -42.86404037]
[-28.50241470 -57.04347229]
[-37.56595993 -68.99555206]
[-46.62950516 -80.94762421]
[-55.69305420 -92.89970398]
[-64.75659943 -104.85177612]
[-79.14493561 -113.81906128]
[-74.51118469 -130.12748718]
[-57.55734634 -130.18945312]
[-52.80452347 -113.91532898]
[-43.74097443 -101.96324921]
[-34.67742920 -90.01116943]
[-25.61388397 -78.05909729]
[-16.55033875 -66.10701752]
[-1.68768811 -66.59653473]
[10.76052856 -58.14041901]
[15.90266800 -43.80822372]
[11.56948662 -29.02547264]
[20.63303185 -17.07339478]
[29.69657898 -5.12131834]
[38.76012421 6.83075809]
[47.82366943 18.78283501]
[56.88721466 30.73491096]
[70.74261475 36.20090866]
[72.91606140 51.87211609]
[81.97960663 63.82419205]
[91.04315186 75.77626801]
[96.21195984 74.45269012]
[101.54244232 74.21948242]
[106.80709076 75.08659363]
[111.78121185 77.01702118]
[122.20518494 66.23088074]
[132.62915039 55.44473648]
[129.46926880 38.83973312]
[136.74911499 23.76893425]
[151.42620850 16.07624245]
[167.63366699 18.61337280]
[177.87196350 7.65083408]
[188.11026001 -3.31170559]
[198.34855652 -14.27424526]
[208.58685303 -25.23678398]
[201.95938110 -38.89112473]
[200.71585083 -54.01785660]
[205.02445984 -68.57122040]
[214.30249023 -80.58298492]
[227.29516602 -88.42867279]
[242.24534607 -91.04720306]
[257.13113403 -88.08444214]
[269.93933105 -79.94109344]
[278.93777466 -67.71846008]
[282.90945435 -53.06956863]
[281.31726074 -37.97555161]
[274.37652588 -24.47775269]
[263.02590942 -14.40163898]
[248.80050659 -9.10992241]
[233.62417603 -9.31826401]
[219.54939270 -14.99848747]
[209.31109619 -4.03594780]
[199.07279968 6.92659187]
[188.83450317 17.88913155]
[178.59620667 28.85167122]
[182.34007263 41.68045807]
[179.22520447 54.78766632]
[169.96238708 64.71903229]
[156.89688110 68.80297089]
[143.41529846 65.86870575]
[132.99131775 76.65484619]
[122.56735229 87.44099426]
[125.80545044 98.95453644]
[123.50934601 110.69229126]
[116.17145538 120.13698578]
[105.36546326 125.26313782]
[104.08647156 140.20851135]
[102.80748749 155.15388489]
[112.71309662 167.17539978]
[111.20311737 182.31391907]
[99.68139648 191.68330383]
[98.40241241 206.62867737]
[97.12342834 221.57405090]
[95.84444427 236.51942444]
[102.37688446 250.92907715]
[93.58255768 262.95025635]
[106.51293182 273.83679199]
[110.37686920 290.12161255]
[103.84645081 305.35144043]
[89.67298889 313.61169434]
[88.64935303 328.57672119]
[87.62571716 343.54177856]
[86.60208130 358.50680542]
[101.41022491 360.97137451]
[115.91137695 364.85366821]
[129.97012329 370.11743164]
[143.45521545 376.71347046]
[156.24072266 384.58026123]
[168.20729065 393.64431763]
[179.24316406 403.82098389]
[189.24531555 415.01528931]
[198.12036133 427.12268066]
[205.78541565 440.03015137]
[212.16893005 453.61712646]
[217.21128845 467.75680542]
[220.86541748 482.31710815]
[223.09719849 497.16213989]
[223.88580322 512.15325928]
[223.22384644 527.15051270]
[221.11750793 542.01385498]
[217.58648682 556.60449219]
[212.66371155 570.78625488]
[206.39517212 584.42669678]
[198.83940125 597.39837646]
[190.06692505 609.58032227]
[180.15966797 620.85870361]
[169.21012878 631.12823486]
[157.32054138 640.29302979]
[144.60192871 648.26745605]
[131.17303467 654.97717285]
[117.15923309 660.35949707]
[102.69139099 664.36407471]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 154]
[35 153]
[36 152]
[37 151]
[42 147]
[44 145]
[45 144]
[46 143]
[47 142]
[50 139]
[51 138]
[52 137]
[54 92]
[55 91]
[56 90]
[58 88]
[59 87]
[60 86]
[61 85]
[62 84]
[63 83]
[67 79]
[68 78]
[69 77]
[70 76]
[71 75]
[96 133]
[97 132]
[98 131]
[102 126]
[103 125]
[104 124]
[105 123]
[106 122]
] def

init

% Start Annotations
34 154 0.0 1 colorpair
35 153 0.0 1 colorpair
36 152 0.0 0.2 colorpair
37 151 0.0 1 colorpair
42 147 0.16 1 colorpair
44 145 0.0 1 colorpair
45 144 0.16 1 colorpair
46 143 0.0 1 colorpair
47 142 0.0 1 colorpair
50 139 0.16 1 colorpair
51 138 0.0 1 colorpair
52 137 0.16 0.2 colorpair
54 92 0.0 1 colorpair
55 91 0.0 1 colorpair
56 90 0.0 1 colorpair
58 88 0.0 1 colorpair
59 87 0.0 1 colorpair
60 86 0.0 1 colorpair
61 85 0.0 1 colorpair
62 84 0.0 1 colorpair
63 83 0.0 1 colorpair
67 79 0.0 1 colorpair
68 78 0.16 1 colorpair
69 77 0.0 1 colorpair
70 76 0.0 1 colorpair
71 75 0.0 0.2 colorpair
96 133 0.16 1 colorpair
97 132 0.0 1 colorpair
98 131 0.16 1 colorpair
102 126 0.0 1 colorpair
103 125 0.0 1 colorpair
104 124 0.16 1 colorpair
105 123 0.0 0.2 colorpair
106 122 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
36 152 2 gmark
42 cmark
45 cmark
139 cmark
52 137 2 gmark
52 cmark
137 cmark
78 cmark
71 75 2 gmark
96 cmark
131 cmark
124 cmark
105 123 2 gmark

% End Annotations
showpage
end
%%EOF
