%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:16:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__A_UU_CA_AGGAG_AG_A__CCAUGAAACUGCCGCGAAACACCCUGAUCUGGUGCGUAUUAAUAGUGUGCCUCACACUGCUGAUAUUCACUUACCUGACCCGGAAAUCACUAUGCGAAAUCCGGUACAGGGACACGAACAGGGAGGUGGCGGCUUUUCUGGCUUACGAAUC___CGCUAAG\
) } def
/len { sequence length } bind def

/coor [
[58.81518173 537.85485840]
[50.43388748 538.03198242]
[42.07561111 537.37384033]
[33.82340622 535.88671875]
[25.75928116 533.58526611]
[17.96339989 530.49218750]
[10.51327991 526.63787842]
[3.48301888 522.06060791]
[-3.05743718 516.80566406]
[-9.04299355 510.92501831]
[-14.41405296 504.47698975]
[-19.11710930 497.52551270]
[-23.10528183 490.13955688]
[-26.33877945 482.39233398]
[-28.78530121 474.36080933]
[-30.42035675 466.12466431]
[-31.22751236 457.76571655]
[-31.19855499 449.36694336]
[-30.33358002 441.01177979]
[-28.64098358 432.78326416]
[-26.13739014 424.76321411]
[-22.84748459 417.03128052]
[-18.80376816 409.66439819]
[-14.04624367 402.73583984]
[-8.62201023 396.31454468]
[-2.58480215 390.46441650]
[4.00554037 385.24374390]
[11.08367062 380.70446777]
[18.57938004 376.89193726]
[26.41829300 373.84411621]
[34.52260971 371.59152222]
[42.81187057 370.15670776]
[51.20376587 369.55407715]
[52.22740555 354.58905029]
[53.25104141 339.62402344]
[54.27467728 324.65899658]
[55.29831314 309.69396973]
[48.44758987 296.46835327]
[57.10860825 283.22836304]
[46.10835648 275.63961792]
[40.25279999 263.50646973]
[41.17050934 249.95693970]
[48.72824097 238.54350281]
[61.03783798 232.31156921]
[62.31682587 217.36619568]
[63.59580994 202.42082214]
[64.87479401 187.47544861]
[66.15378571 172.53007507]
[59.52985764 159.18943787]
[68.41566467 146.09924316]
[69.69464874 131.15386963]
[70.97363281 116.20849609]
[66.80352783 101.79981232]
[57.73998260 89.84773254]
[48.67643356 77.89565277]
[39.61288834 65.94358063]
[25.10920334 59.62268829]
[23.58404160 44.80637741]
[14.52049637 32.85429764]
[5.45695066 20.90222168]
[-3.60659528 8.95014572]
[-12.67014122 -3.00193095]
[-21.73368645 -14.95400715]
[-36.23737335 -21.27489662]
[-37.76253510 -36.09120941]
[-46.82608032 -48.04328918]
[-55.88962555 -59.99536514]
[-64.95317078 -71.94744110]
[-74.01671600 -83.89952087]
[-83.08026123 -95.85159302]
[-92.14380646 -107.80367279]
[-106.53214264 -116.77095032]
[-101.89839172 -133.07937622]
[-84.94455719 -133.14134216]
[-80.19173431 -116.86721802]
[-71.12818909 -104.91513824]
[-62.06464005 -92.96306610]
[-53.00109482 -81.01098633]
[-43.93754959 -69.05890656]
[-34.87400436 -57.10683441]
[-25.81045723 -45.15475845]
[-11.95505619 -39.68875885]
[-9.78161049 -24.01755333]
[-0.71806443 -12.06547642]
[8.34548187 -0.11340011]
[17.40902710 11.83867645]
[26.47257233 23.79075241]
[35.53611755 35.74282837]
[49.39152145 41.20882797]
[51.56496429 56.88003159]
[60.62851334 68.83210754]
[69.69205475 80.78418732]
[78.75559998 92.73625946]
[86.22422028 84.02141571]
[96.43338013 80.58251953]
[106.27374268 82.71584320]
[116.69771576 71.92970276]
[127.12168121 61.14355850]
[123.96180725 44.53855515]
[131.24165344 29.46775627]
[145.91874695 21.77506447]
[162.12620544 24.31219482]
[172.36450195 13.34965515]
[182.60279846 2.38711524]
[192.84109497 -8.57542419]
[203.07939148 -19.53796387]
[196.45191956 -33.19230270]
[195.20838928 -48.31903458]
[199.51699829 -62.87239838]
[208.79502869 -74.88417053]
[221.78770447 -82.72985077]
[236.73788452 -85.34838104]
[251.62365723 -82.38562775]
[264.43188477 -74.24227142]
[273.43029785 -62.01964188]
[277.40197754 -47.37074661]
[275.80981445 -32.27672958]
[268.86904907 -18.77893066]
[257.51846313 -8.70281792]
[243.29304504 -3.41110158]
[228.11671448 -3.61944318]
[214.04193115 -9.29966640]
[203.80363464 1.66287303]
[193.56533813 12.62541294]
[183.32704163 23.58795166]
[173.08874512 34.55049133]
[176.83261108 47.37928009]
[173.71772766 60.48648834]
[164.45491028 70.41785431]
[151.38941956 74.50179291]
[137.90782166 71.56752777]
[127.48385620 82.35366821]
[117.05989075 93.13980865]
[118.67230988 105.27690887]
[112.15542603 116.40762329]
[99.56816864 121.43143463]
[85.91900635 117.48748016]
[84.64002228 132.43284607]
[83.36103821 147.37821960]
[89.89347839 161.78787231]
[81.09915924 173.80906677]
[79.82016754 188.75444031]
[78.54118347 203.69981384]
[77.26219940 218.64518738]
[75.98321533 233.59056091]
[88.91358185 244.47708130]
[92.77752686 260.76190186]
[86.24710846 275.99172974]
[72.07363892 284.25198364]
[78.85114288 298.54800415]
[70.26334381 310.71759033]
[69.23970795 325.68261719]
[68.21607208 340.64767456]
[67.19243622 355.61270142]
[66.16880035 370.57772827]
[88.81984711 377.57754517]
[108.62179565 390.59509277]
[124.01538086 408.59835815]
[133.79037476 430.16305542]
[137.18077087 453.58523560]
[133.92480469 477.01593018]
[124.28509521 498.60720825]
[109.02756500 516.65777588]
[89.36053467 529.74707031]
[94.62430573 543.79315186]
[99.88807678 557.83929443]
[105.15184784 571.88537598]
[110.53533173 585.88598633]
[116.03814697 599.84020996]
[130.92587280 604.62451172]
[139.21142578 617.88659668]
[136.98265076 633.36456299]
[125.29187012 643.75012207]
[109.65913391 644.13952637]
[97.46574402 634.34899902]
[94.46903229 619.00122070]
[102.08396912 605.34301758]
[96.58115387 591.38879395]
[91.18954468 586.30761719]
[91.10575104 577.14910889]
[85.84197998 563.10302734]
[80.57820892 549.05694580]
[75.31443787 535.01086426]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 155]
[34 154]
[35 153]
[36 152]
[37 151]
[39 149]
[44 145]
[45 144]
[46 143]
[47 142]
[48 141]
[50 139]
[51 138]
[52 137]
[53 93]
[54 92]
[55 91]
[56 90]
[58 88]
[59 87]
[60 86]
[61 85]
[62 84]
[63 83]
[65 81]
[66 80]
[67 79]
[68 78]
[69 77]
[70 76]
[71 75]
[96 133]
[97 132]
[98 131]
[102 126]
[103 125]
[104 124]
[105 123]
[106 122]
[164 183]
[165 182]
[166 181]
[167 180]
[168 178]
[169 177]
] def

init

% Start Annotations
33 155 0.0 0.6 colorpair
34 154 0.0 1 colorpair
35 153 0.0 1 colorpair
36 152 0.0 0.6 colorpair
37 151 0.0 1 colorpair
39 149 0.0 1 colorpair
44 145 0.0 1 colorpair
45 144 0.16 1 colorpair
46 143 0.0 1 colorpair
47 142 0.0 1 colorpair
48 141 0.0 0.6 colorpair
50 139 0.16 1 colorpair
51 138 0.0 1 colorpair
52 137 0.16 0.6 colorpair
53 93 0.0 0.6 colorpair
54 92 0.0 1 colorpair
55 91 0.0 1 colorpair
56 90 0.0 1 colorpair
58 88 0.0 1 colorpair
59 87 0.0 1 colorpair
60 86 0.0 1 colorpair
61 85 0.0 1 colorpair
62 84 0.0 1 colorpair
63 83 0.0 1 colorpair
65 81 0.0 0.6 colorpair
66 80 0.0 0.6 colorpair
67 79 0.0 1 colorpair
68 78 0.16 1 colorpair
69 77 0.0 1 colorpair
70 76 0.0 1 colorpair
71 75 0.0 0.6 colorpair
96 133 0.16 1 colorpair
97 132 0.0 1 colorpair
98 131 0.16 1 colorpair
102 126 0.0 1 colorpair
103 125 0.0 1 colorpair
104 124 0.16 1 colorpair
105 123 0.0 0.6 colorpair
106 122 0.0 1 colorpair
164 183 0.0 1 colorpair
165 182 0.0 1 colorpair
166 181 0.0 1 colorpair
167 180 0.0 1 colorpair
168 178 0.0 1 colorpair
169 177 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
33 155 1 gmark
36 152 1 gmark
45 cmark
48 141 1 gmark
139 cmark
52 137 1 gmark
52 cmark
137 cmark
53 93 1 gmark
65 81 1 gmark
66 80 1 gmark
78 cmark
71 75 1 gmark
96 cmark
131 cmark
124 cmark
105 123 1 gmark

% End Annotations
showpage
end
%%EOF
