%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:21:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCGUUAGGCAUCGUCUUUAUUAUUUGCCUGACGAUAGUGAUCUUUACCUUUAUUACUCGAGGUAAGCUAUGCGAGUUUUCAAUAAAGGGUGAACAUCAGGAGGUGGCGGCAAAAUUAGCCUGUAA___________________________________________________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[61.47013855 285.88864136]
[61.01265717 270.89562988]
[61.33683014 255.89912415]
[62.44178391 240.93988037]
[64.32450867 226.05850220]
[66.97990417 211.29541016]
[70.40074921 196.69068909]
[74.57775879 182.28401184]
[79.49959564 168.11448669]
[85.15287781 154.22058105]
[91.52227020 140.64004517]
[98.59433746 127.40294647]
[89.18413544 139.08404541]
[79.77394104 150.76515198]
[70.36373901 162.44625854]
[60.95354462 174.12736511]
[51.54334641 185.80847168]
[58.86116791 199.13204956]
[60.51826859 214.24238586]
[56.26195526 228.83528137]
[46.74127960 240.68539429]
[33.40808105 247.98567200]
[18.29557228 249.62289429]
[3.70830059 245.34739685]
[-8.12927914 235.81114197]
[-15.41202259 222.46835327]
[-17.02936363 207.35369873]
[-12.73467159 192.77206421]
[-3.18285346 180.94703674]
[10.16950703 173.68185425]
[25.28627205 172.08439636]
[39.86224365 176.39826965]
[49.27244186 164.71716309]
[58.68264008 153.03605652]
[68.09283447 141.35494995]
[77.50303650 129.67385864]
[86.91323090 117.99275208]
[73.05478668 123.73239136]
[59.19634247 129.47203064]
[45.33789825 135.21168518]
[31.47945404 140.95132446]
[17.62100983 146.69096375]
[7.87733984 158.09539795]
[-3.90982938 167.37239075]
[-17.28463173 174.16316223]
[-31.72979546 178.20509338]
[-46.68666077 179.34185791]
[-61.57676697 177.52947998]
[-75.82424927 172.83807373]
[-88.87807465 165.44905090]
[-100.23339844 155.64820862]
[-109.45105743 143.81457520]
[-116.17455292 130.40583801]
[-120.14385986 115.94053650]
[-121.20545197 100.97815704]
[-119.31829071 86.09734344]
[-114.55535889 71.87361145]
[-107.10084534 58.85707092]
[-97.24307251 47.55113220]
[-85.36328125 38.39304733]
[-71.92092133 31.73700714]
[-57.43586731 27.84043121]
[-42.46833801 26.85402107]
[-27.59719276 28.81592369]
[-13.39757442 33.65026474]
[-0.41865158 41.17007828]
[10.83761787 51.08452988]
[19.93773842 63.01316452]
[33.45737839 69.51080322]
[46.97701645 76.00844574]
[60.49665833 82.50608826]
[74.01629639 89.00373077]
[87.53593445 95.50137329]
[78.78646851 83.31748962]
[64.45217896 76.62133789]
[63.31307602 61.77035141]
[48.97877884 55.07419205]
[47.83967972 40.22320938]
[39.09021378 28.03933334]
[30.34074783 15.85545540]
[21.59128380 3.67157888]
[7.26487255 8.49292278]
[-7.84621477 8.87561893]
[-22.39830971 4.78564024]
[-35.09745026 -3.41333628]
[-44.81443787 -14.99226284]
[-50.68524551 -28.92155075]
[-52.18784332 -43.96261215]
[-49.18862534 -58.77801514]
[-41.95427322 -72.05037689]
[-31.12806320 -82.59952545]
[-17.67265701 -89.48744965]
[-2.78449750 -92.10166931]
[12.21256828 -90.20973206]
[25.98501205 -83.97986603]
[37.30819702 -73.96603394]
[45.17527771 -61.05865097]
[48.88671112 -46.40543747]
[48.11248398 -31.30934715]
[42.92144012 -17.11271095]
[33.77516174 -5.07788610]
[42.52462387 7.10599089]
[51.27408981 19.28986740]
[60.02355576 31.47374535]
[73.73203278 37.29843140]
[75.49695587 53.02088547]
[89.20542908 58.84556961]
[90.97035217 74.56802368]
[99.71981049 86.75190735]
[114.14886475 82.65283203]
[115.18601227 67.68872833]
[116.22315216 52.72462845]
[117.26029968 37.76052856]
[118.29743958 22.79642677]
[113.36073303 6.57713938]
[127.57955170 -2.65658379]
[140.38858032 8.45040512]
[133.26153564 23.83356857]
[132.22439575 38.79767227]
[131.18725586 53.76177216]
[130.15011597 68.72587585]
[129.11297607 83.68997192]
[139.09684753 72.49523926]
[149.65034485 61.83578873]
[160.74479675 51.74058533]
[172.35006714 42.23703384]
[184.43466187 33.35094070]
[196.96575928 25.10644531]
[209.90931702 17.52592659]
[223.23019409 10.62997627]
[236.89222717 4.43731737]
[250.85829163 -1.03523266]
[265.09048462 -5.77281237]
[279.55014038 -9.76255703]
[294.19802856 -12.99363232]
[308.99432373 -15.45726395]
[323.89886475 -17.14676094]
[338.87121582 -18.05753708]
[353.87063599 -18.18711853]
[368.85647583 -17.53515053]
[383.78799438 -16.10340881]
[398.62463379 -13.89577770]
[413.32614136 -10.91825199]
[427.85256958 -7.17891932]
[442.16448975 -2.68793321]
[456.22305298 2.54251122]
[469.99002075 8.49820995]
[483.42803955 15.16299057]
[496.50064087 22.51875305]
[509.17230225 30.54552269]
[521.40863037 39.22150421]
[533.17633057 48.52313614]
[544.44354248 58.42515945]
[555.17962646 68.90068054]
[565.35540771 79.92126465]
[574.94329834 91.45697021]
[583.91723633 103.47647858]
[592.25286865 115.94715118]
[599.92749023 128.83511353]
[606.92034912 142.10539246]
[613.21240234 155.72192383]
[618.78662109 169.64773560]
[623.62780762 183.84501648]
[627.72283936 198.27522278]
[631.06054688 212.89915466]
[633.63195801 227.67710876]
[635.43005371 242.56895447]
[636.44995117 257.53424072]
[636.68884277 272.53234863]
[636.14611816 287.52252197]
[634.82318115 302.46408081]
[632.72375488 317.31640625]
[629.85345459 332.03924561]
[626.22009277 346.59252930]
[621.83355713 360.93682861]
[616.70568848 375.03311157]
[610.85052490 388.84310913]
[604.28381348 402.32937622]
[597.02355957 415.45523071]
[589.08935547 428.18505859]
[580.50274658 440.48425293]
[571.28717041 452.31948853]
[561.46752930 463.65856934]
[551.07049561 474.47070312]
[540.12438965 484.72656250]
[528.65887451 494.39825439]
[516.70507812 503.45953369]
[504.29550171 511.88580322]
[491.46380615 519.65417480]
[478.24484253 526.74359131]
[464.67453003 533.13470459]
[450.78973389 538.81024170]
[436.62808228 543.75476074]
[422.22811890 547.95489502]
[407.62890625 551.39910889]
[392.87008667 554.07812500]
[377.99172974 555.98474121]
[363.03427124 557.11364746]
[348.03833008 557.46185303]
[333.04458618 557.02838135]
[318.09378052 555.81439209]
[303.22653198 553.82330322]
[288.48318481 551.06036377]
[273.90377808 547.53314209]
[259.52792358 543.25128174]
[245.39465332 538.22631836]
[231.54232788 532.47192383]
[218.00857544 526.00372314]
[204.83013916 518.83923340]
[192.04283142 510.99804688]
[179.68136597 502.50134277]
[167.77929688 493.37222290]
[156.36895752 483.63549805]
[145.48132324 473.31756592]
[135.14596558 462.44647217]
[125.39096069 451.05175781]
[116.24279022 439.16433716]
[107.72629547 426.81646729]
[99.86460114 414.04174805]
[92.67906189 400.87481689]
[86.18919373 387.35144043]
[80.41260529 373.50836182]
[75.36499786 359.38314819]
[71.06007385 345.01416016]
[67.50952911 330.44042969]
[64.72299194 315.70153809]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 37]
[13 36]
[14 35]
[15 34]
[16 33]
[17 32]
[73 109]
[74 108]
[76 106]
[78 104]
[79 103]
[80 102]
[81 101]
[110 122]
[111 121]
[112 120]
[113 119]
[114 118]
] def

init

% Start Annotations
12 37 0.0 0.2 colorpair
13 36 0.16 1 colorpair
14 35 0.32 0.2 colorpair
15 34 0.0 0.6 colorpair
16 33 0.0 1 colorpair
17 32 0.16 0.2 colorpair
73 109 0.0 1 colorpair
74 108 0.16 1 colorpair
76 106 0.0 1 colorpair
78 104 0.16 0.2 colorpair
79 103 0.0 1 colorpair
80 102 0.16 0.6 colorpair
81 101 0.16 0.6 colorpair
110 122 0.16 0.6 colorpair
111 121 0.0 1 colorpair
112 120 0.0 1 colorpair
114 118 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
12 37 2 gmark
13 cmark
36 cmark
14 35 2 gmark
14 cmark
35 cmark
15 34 1 gmark
17 32 2 gmark
17 cmark
32 cmark
74 cmark
78 104 2 gmark
78 cmark
80 102 1 gmark
80 cmark
81 101 1 gmark
81 cmark
110 122 1 gmark
122 cmark
113 119 3 gmark
113 cmark
119 cmark
114 118 1 gmark
114 cmark

% End Annotations
showpage
end
%%EOF
