%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:21:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGUGUUAUGCAGCGUCUUUAUUAUGUGCCUGACGCUAGUGAUCUUCACCUUCAUUACCCGAAAAUCGCUAUGCGAGAUCCCAAUAAAGGACGAACAACAGGAGGUGGCGGCUAUAUUGGCCUACGAA_C_______UA_______UGG_GG_GG__G___CCCCGCCU_U_CA_GAG__G____GCC_C_AC_________GC_CC_UUAU_AA_GG___GC__G\
) } def
/len { sequence length } bind def

/coor [
[45.70472336 292.17135620]
[47.01646805 277.22882080]
[49.60536194 262.45391846]
[53.45231628 247.95562744]
[58.52895737 233.84082031]
[64.79785919 220.21360779]
[72.21277618 207.17446899]
[80.71486664 194.82513428]
[83.37287140 180.06251526]
[86.03087616 165.29989624]
[88.68888092 150.53726196]
[91.34689331 135.77464294]
[94.00489807 121.01202393]
[84.59469604 132.69313049]
[75.18450165 144.37423706]
[65.77429962 156.05532837]
[56.36410522 167.73643494]
[63.68192673 181.06002808]
[65.33902740 196.17036438]
[61.08271408 210.76324463]
[51.56203842 222.61335754]
[38.22883987 229.91365051]
[23.11632919 231.55087280]
[8.52905846 227.27536011]
[-3.30852103 217.73910522]
[-10.59126472 204.39631653]
[-12.20860672 189.28167725]
[-7.91391325 174.70004272]
[1.63790452 162.87501526]
[14.99026489 155.60983276]
[30.10702896 154.01237488]
[44.68300247 158.32623291]
[54.09320068 146.64514160]
[63.50339890 134.96403503]
[72.91359711 123.28292847]
[82.32379150 111.60182953]
[68.46534729 117.34146881]
[54.60690308 123.08111572]
[40.74845886 128.82075500]
[26.89001465 134.56039429]
[13.03156853 140.30004883]
[3.54439187 151.91871643]
[-7.97707415 161.52369690]
[-21.11328316 168.76524353]
[-35.38588715 173.37965393]
[-50.27515411 175.19889832]
[-65.23890686 174.15673828]
[-79.73224640 170.29109192]
[-93.22740173 163.74276733]
[-105.23296356 154.75018311]
[-115.31175232 143.64082336]
[-123.09675598 130.81919861]
[-128.30448914 116.75223541]
[-130.74530029 101.95215607]
[-130.33033752 86.95789337]
[-127.07468414 72.31546783]
[-121.09690857 58.55805969]
[-112.61467743 46.18664932]
[-101.93688202 35.65172577]
[-89.45233154 27.33691597]
[-75.61565399 21.54499817]
[-60.93069839 18.48688126]
[-45.93220901 18.27392387]
[-31.16634941 20.91388321]
[-17.17080879 26.31062317]
[-4.45522499 34.26762772]
[6.51737070 44.49514771]
[15.34829807 56.62223816]
[28.86793709 63.11988068]
[42.38757706 69.61752319]
[55.90721893 76.11516571]
[69.42685699 82.61280060]
[82.94649506 89.11044312]
[74.19702911 76.92656708]
[59.86273575 70.23040771]
[58.72363663 55.37942505]
[43.38051605 52.69121933]
[34.68087769 40.21039581]
[37.33822632 25.59964371]
[28.58876228 13.41576576]
[19.83929825 1.23188913]
[5.51288652 6.05323267]
[-9.59820080 6.43592978]
[-24.15029526 2.34595084]
[-36.84943771 -5.85302591]
[-46.56642532 -17.43195343]
[-52.43723297 -31.36124039]
[-53.93983078 -46.40230179]
[-50.94060898 -61.21770477]
[-43.70625687 -74.49006653]
[-32.88004684 -85.03921509]
[-19.42464256 -91.92713928]
[-4.53648329 -94.54135895]
[10.46058273 -92.64942169]
[24.23302650 -86.41955566]
[35.55621338 -76.40572357]
[43.42329025 -63.49834061]
[47.13472366 -48.84512711]
[46.36049652 -33.74903488]
[41.16945267 -19.55240059]
[32.02317429 -7.51757574]
[40.77264023 4.66630125]
[49.52210617 16.85017776]
[64.21601105 19.00067520]
[73.26277924 31.23221970]
[70.90750885 46.62996292]
[84.61598969 52.45464706]
[86.38090515 68.17710114]
[95.13037109 80.36097717]
[109.55942535 76.26190948]
[110.59657288 61.29780579]
[111.63371277 46.33370590]
[112.67086029 31.36960220]
[103.26520538 18.37294006]
[107.70072937 2.95523262]
[122.57486725 -3.05637312]
[136.47746277 4.94971180]
[138.74363708 20.83190536]
[127.63495636 32.40674591]
[126.59781647 47.37084579]
[125.56067657 62.33494949]
[124.52352905 77.29904938]
[130.39649963 81.96362305]
[138.48085022 69.32862091]
[146.56520081 56.69361877]
[154.64955139 44.05861664]
[162.73390198 31.42361450]
[170.81825256 18.78861427]
[178.90260315 6.15361166]
[186.98695374 -6.48139000]
[195.07130432 -19.11639214]
[203.15565491 -31.75139427]
[205.70594788 -46.53300476]
[215.23822021 -58.11470032]
[229.25344849 -63.46012878]
[244.07725525 -61.16789246]
[255.82334900 -51.83893967]
[261.41226196 -37.91902542]
[259.37878418 -23.05750084]
[250.25598145 -11.15058136]
[236.43466187 -5.31974459]
[225.95774841 5.41497850]
[215.48083496 16.14970207]
[205.00392151 26.88442421]
[194.52700806 37.61914825]
[184.05009460 48.35387039]
[173.57318115 59.08859634]
[163.09626770 69.82331848]
[152.61935425 80.55804443]
[142.14244080 91.29276276]
[148.01541138 95.95733643]
[162.35626221 91.55963135]
[176.69712830 87.16192627]
[191.03797913 82.76422119]
[205.37884521 78.36650848]
[219.71969604 73.96880341]
[234.06054688 69.57109833]
[244.83247375 57.20591736]
[260.87289429 60.61721420]
[265.68081665 76.29573822]
[254.31024170 88.11276245]
[238.45825195 83.91195679]
[224.11740112 88.30966187]
[209.77655029 92.70736694]
[195.43568420 97.10507202]
[181.09483337 101.50277710]
[166.75396729 105.90048981]
[152.41311646 110.29819489]
[167.10678101 113.31421661]
[181.80043030 116.33023834]
[196.49409485 119.34626007]
[211.18774414 122.36228180]
[225.88140869 125.37831116]
[240.83874512 126.50892639]
[255.64392090 128.91864014]
[270.18777466 132.58966064]
[284.36303711 137.49493408]
[298.06518555 143.59828186]
[311.19320679 150.85469055]
[323.65023804 159.21064758]
[335.34445190 168.60455322]
[346.18960571 178.96711731]
[356.10571289 190.22192383]
[365.01965332 202.28598022]
[372.86572266 215.07032776]
[379.58602905 228.48068237]
[385.13101196 242.41815186]
[389.45977783 256.77996826]
[392.54043579 271.46020508]
[394.35025024 286.35061646]
[394.87588501 301.34143066]
[394.11343384 316.32202148]
[392.06854248 331.18197632]
[388.75631714 345.81170654]
[384.20111084 360.10333252]
[378.43658447 373.95144653]
[371.50521851 387.25393677]
[363.45812988 399.91268921]
[354.35467529 411.83441162]
[344.26196289 422.93112183]
[333.25439453 433.12100220]
[321.41320801 442.32894897]
[308.82568359 450.48703003]
[295.58465576 457.53509521]
[281.78778076 463.42114258]
[267.53674316 468.10180664]
[252.93670654 471.54257202]
[238.09530640 473.71801758]
[223.12197876 474.61215210]
[208.12715149 474.21835327]
[193.22138977 472.53952026]
[178.51463318 469.58807373]
[164.11531067 465.38571167]
[150.12962341 459.96350098]
[136.66070557 453.36135864]
[123.80786133 445.62802124]
[111.66590118 436.82049561]
[100.32434082 427.00372314]
[89.86682129 416.25009155]
[80.37046051 404.63891602]
[71.90529633 392.25582886]
[64.53373718 379.19213867]
[58.31015396 365.54418945]
[53.28043747 351.41259766]
[49.48167801 336.90158081]
[46.94189072 322.11816406]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 36]
[14 35]
[15 34]
[16 33]
[17 32]
[73 109]
[74 108]
[76 106]
[79 103]
[80 102]
[81 101]
[110 122]
[111 121]
[112 120]
[113 119]
[151 168]
[152 167]
[153 166]
[154 165]
[155 164]
[156 163]
[157 162]
] def

init

% Start Annotations
13 36 0.16 1 colorpair
15 34 0.0 0.6 colorpair
16 33 0.0 1 colorpair
73 109 0.0 1 colorpair
74 108 0.16 1 colorpair
76 106 0.0 1 colorpair
79 103 0.0 1 colorpair
80 102 0.16 0.6 colorpair
81 101 0.16 0.6 colorpair
110 122 0.16 0.2 colorpair
111 121 0.0 1 colorpair
112 120 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
13 cmark
36 cmark
14 35 3 gmark
14 cmark
35 cmark
15 34 1 gmark
17 32 3 gmark
17 cmark
32 cmark
74 cmark
80 102 1 gmark
80 cmark
81 101 1 gmark
81 cmark
110 122 2 gmark
122 cmark
113 119 3 gmark
113 cmark
119 cmark
151 168 4 gmark
152 167 4 gmark
153 166 5 gmark
154 165 4 gmark
155 164 4 gmark
156 163 5 gmark
157 162 5 gmark

% End Annotations
showpage
end
%%EOF
