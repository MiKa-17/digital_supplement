%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:21:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__UAAGAGGCUACUCUCAACUUGUUCAGACAUGAAGGAG__UAGCCUCG_GGUAAAUGAAAAUUUAC__CGGGGCUUUCUACUUUCUGCCACACAAC____________AACCCUCA_______AGACAAAAAGCCUCAAGCACC__CGCCA_____\
) } def
/len { sequence length } bind def

/coor [
[104.24436951 191.37791443]
[93.59563446 180.81361389]
[86.47104645 167.61360168]
[83.48386383 152.91406250]
[84.89118958 137.98022461]
[90.57429504 124.09347534]
[77.38966370 131.24649048]
[64.20503998 138.39950562]
[51.02041245 145.55252075]
[37.83578491 152.70552063]
[24.65115547 159.85853577]
[11.46652794 167.01155090]
[-1.57327616 174.42529297]
[-14.38619709 182.22459412]
[-27.12094688 190.15087891]
[-39.85569763 198.07717896]
[-52.51102066 206.12968445]
[-65.08566284 214.30760193]
[-77.66030121 222.48551941]
[-90.23493958 230.66345215]
[-102.80958557 238.84136963]
[-115.38422394 247.01928711]
[-120.10263062 262.35278320]
[-135.08483887 268.08975220]
[-148.83779907 259.82925415]
[-150.81141663 243.90806580]
[-139.49168396 232.53953552]
[-123.56214905 234.44465637]
[-110.98750305 226.26672363]
[-98.41286469 218.08880615]
[-85.83822632 209.91088867]
[-73.26358032 201.73295593]
[-60.68894196 193.55503845]
[-56.77481461 187.23745728]
[-47.78199005 185.34242249]
[-35.04724121 177.41613770]
[-22.31249046 169.48983765]
[-18.27352905 163.25131226]
[-9.24480820 161.53546143]
[-7.21402216 157.15797424]
[-2.38305354 154.03611755]
[4.31351519 153.82691956]
[17.49814415 146.67391968]
[30.68277168 139.52090454]
[43.86739731 132.36788940]
[57.05202866 125.21487427]
[70.23665619 118.06185913]
[83.42127991 110.90885162]
[85.64989471 96.07533264]
[75.14926147 85.36380768]
[64.54266357 74.75720215]
[53.83113861 64.25657654]
[45.46373749 60.45544434]
[43.01364136 53.43907928]
[32.51301193 42.72755432]
[22.01238060 32.01603317]
[11.51174927 21.30450821]
[-4.42226219 17.42645454]
[-8.77047253 1.61427188]
[2.94018483 -9.86582088]
[18.66279030 -5.20408964]
[22.22327423 10.80387688]
[32.72390366 21.51539993]
[43.22453690 32.22692490]
[53.72516632 42.93844986]
[64.33177185 53.54505157]
[75.04328918 64.04568481]
[82.05965424 66.49578094]
[85.86078644 74.86317444]
[96.36141968 85.57469940]
[111.09460449 88.39128113]
[124.80586243 82.30839539]
[134.28271484 69.63954163]
[149.05416870 71.55084991]
[162.76542664 65.46797180]
[176.47668457 59.38508987]
[190.18794250 53.30220795]
[193.53916931 38.26640320]
[204.96778870 28.20458794]
[219.95249939 26.81809425]
[232.72738647 34.42995834]
[246.43864441 28.34707832]
[260.14990234 22.26419830]
[273.86114502 16.18131828]
[287.57241821 10.09843826]
[301.28366089 4.01555872]
[314.99493408 -2.06732082]
[328.70617676 -8.15020084]
[342.41744995 -14.23308086]
[356.12869263 -20.31595993]
[352.43859863 -34.89303970]
[351.26528931 -49.88408279]
[352.64251709 -64.85776520]
[356.53070068 -79.38327026]
[362.81790161 -93.04266357]
[371.32324219 -105.44294739]
[381.80203247 -116.22732544]
[393.95278931 -125.08551788]
[407.42584229 -131.76266479]
[421.83361816 -136.06663513]
[436.76153564 -137.87361145]
[451.78012085 -137.13159180]
[466.45721436 -133.86192322]
[480.37054443 -128.15869141]
[493.11984253 -120.18598938]
[504.33822632 -110.17320251]
[513.70294189 -98.40841675]
[520.94451904 -85.23013306]
[525.85467529 -71.01750946]
[528.29205322 -56.17948151]
[528.18658447 -41.14296341]
[525.54125977 -26.34058571]
[520.43225098 -12.19824314]
[513.00646973 0.87715948]
[503.47766113 12.50941849]
[492.11993408 22.36384964]
[479.26007080 30.15692139]
[465.26809692 35.66441345]
[450.54656982 38.72785950]
[435.51907349 39.25912476]
[420.61795044 37.24291992]
[406.27197266 32.73725510]
[392.89389038 25.87176514]
[380.86862183 16.84398842]
[370.54214478 5.91367006]
[362.21157837 -6.60470343]
[348.50030518 -0.52182341]
[334.78906250 5.56105661]
[321.07781982 11.64393616]
[307.36654663 17.72681618]
[293.65530396 23.80969620]
[279.94403076 29.89257622]
[266.23278809 35.97545624]
[252.52151489 42.05833435]
[238.81025696 48.14121628]
[235.88024902 62.72041321]
[224.79614258 72.89913177]
[209.66690063 74.61947632]
[196.27082825 67.01346588]
[182.55957031 73.09634399]
[168.84831238 79.17922974]
[155.13705444 85.26210785]
[146.64093018 97.49588013]
[130.88874817 96.01965332]
[117.17749023 102.10253906]
[131.88075256 99.13370514]
[146.81282043 100.55967712]
[160.68843079 106.25771332]
[172.31323242 115.73736572]
[180.68666077 128.18267822]
[185.08796692 142.52243042]
[185.13830566 157.52233887]
[180.83335876 171.89132690]
[172.54367065 184.39256287]
[160.98274231 193.95002747]
[147.14570618 199.74107361]
[132.22354126 201.26725769]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 48]
[7 47]
[8 46]
[9 45]
[10 44]
[11 43]
[12 42]
[13 39]
[14 37]
[15 36]
[16 35]
[17 33]
[18 32]
[19 31]
[20 30]
[21 29]
[22 28]
[49 70]
[50 69]
[51 67]
[52 66]
[54 65]
[55 64]
[56 63]
[57 62]
[71 145]
[72 144]
[74 142]
[75 141]
[76 140]
[77 139]
[81 135]
[82 134]
[83 133]
[84 132]
[85 131]
[86 130]
[87 129]
[88 128]
[89 127]
[90 126]
] def

init

% Start Annotations
6 48 0.0 1 colorpair
7 47 0.0 0.2 colorpair
8 46 0.0 1 colorpair
9 45 0.0 1 colorpair
10 44 0.0 1 colorpair
11 43 0.16 1 colorpair
12 42 0.0 0.2 colorpair
13 39 0.16 0.6 colorpair
14 37 0.16 0.6 colorpair
15 36 0.0 1 colorpair
16 35 0.16 1 colorpair
17 33 0.0 0.2 colorpair
18 32 0.16 1 colorpair
19 31 0.16 1 colorpair
20 30 0.16 1 colorpair
21 29 0.16 1 colorpair
22 28 0.0 1 colorpair
49 70 0.0 1 colorpair
51 67 0.0 1 colorpair
52 66 0.16 0.6 colorpair
54 65 0.16 1 colorpair
55 64 0.0 1 colorpair
56 63 0.16 1 colorpair
57 62 0.0 1 colorpair
71 145 0.0 1 colorpair
72 144 0.0 1 colorpair
74 142 0.0 1 colorpair
75 141 0.0 1 colorpair
76 140 0.0 1 colorpair
77 139 0.0 1 colorpair
81 135 0.16 1 colorpair
82 134 0.16 1 colorpair
83 133 0.0 1 colorpair
84 132 0.0 1 colorpair
85 131 0.0 1 colorpair
86 130 0.0 0.2 colorpair
87 129 0.0 1 colorpair
88 128 0.0 1 colorpair
89 127 0.16 1 colorpair
90 126 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
7 47 2 gmark
11 cmark
43 cmark
12 42 2 gmark
13 39 1 gmark
13 cmark
39 cmark
14 37 1 gmark
37 cmark
35 cmark
17 33 2 gmark
18 cmark
19 cmark
31 cmark
20 cmark
30 cmark
29 cmark
50 69 3 gmark
52 66 1 gmark
52 cmark
66 cmark
54 cmark
65 cmark
56 cmark
63 cmark
81 cmark
135 cmark
82 cmark
134 cmark
86 130 2 gmark
89 cmark
127 cmark

% End Annotations
showpage
end
%%EOF
