%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:21:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_____________________A_GCCAUUAAAAACUGCGUUAGGCAUCGUCUUUAUUAUUUGCCUGACGAUAGUGAUCUUUACCUUUAUUACUCGAGGUAAGUUAUGCGAGUUUUCAAUAAAGGGUGAACAUCAGGAGGUGGCGGCAAAAUUAGCCUGUAACGCAGG____\
) } def
/len { sequence length } bind def

/coor [
[97.78922272 283.06134033]
[95.46021271 297.90835571]
[90.94427490 312.24237061]
[84.34232330 325.74316406]
[75.80182648 338.10916138]
[65.51359558 349.06405640]
[53.70746231 358.36315918]
[40.64719391 365.79867554]
[26.62454987 371.20449829]
[11.95280838 374.45989990]
[-3.04026222 375.49212646]
[-18.01971054 374.27813721]
[-32.65089035 370.84503174]
[-46.60693359 365.26950073]
[-59.57605743 357.67611694]
[-71.26853180 348.23452759]
[-81.42313385 337.15563965]
[-89.81301117 324.68698120]
[-96.25073242 311.10708618]
[-100.59247589 296.71932983]
[-102.74124908 281.84518433]
[-102.64903259 266.81692505]
[-100.31790161 251.97024536]
[-95.79992676 237.63687134]
[-89.19604492 224.13700867]
[-80.65379333 211.77223206]
[-70.36399841 200.81880188]
[-58.55654526 191.52139282]
[-45.49521637 184.08773804]
[-31.47180557 178.68388367]
[-16.79959869 175.43057251]
[-1.80638182 174.40048218]
[13.17289257 175.61662292]
[27.80358315 179.05181885]
[41.75883102 184.62933350]
[49.33778381 171.68484497]
[56.91673279 158.74037170]
[64.49568176 145.79589844]
[72.07463074 132.85142517]
[57.88679504 117.65145111]
[51.91746521 96.50912476]
[56.51501465 73.82444000]
[71.70616150 54.82791901]
[94.96932220 44.37922287]
[82.45935059 36.10270691]
[69.87432098 27.94078064]
[57.21528244 19.89412880]
[44.55623627 11.84747505]
[31.89719391 3.80082226]
[19.23815155 -4.24583054]
[6.57910728 -12.29248333]
[-5.84378290 -3.53233290]
[-20.67449951 -0.19792043]
[-35.65146255 -2.79771996]
[-48.49079895 -10.93528080]
[-57.23460007 -23.36968422]
[-60.54949951 -38.20477295]
[-57.93000412 -53.17830658]
[-49.77555847 -66.00692749]
[-37.32966614 -74.73435974]
[-22.49022675 -78.02974701]
[-7.52015400 -75.39054871]
[5.29772806 -67.21923828]
[14.00878525 -54.76187515]
[17.28464317 -39.91811371]
[14.62576008 -24.95152664]
[27.28480339 -16.90487480]
[39.94384766 -8.85822105]
[52.60289001 -0.81156826]
[65.26193237 7.23508453]
[77.92097473 15.28173733]
[85.27992249 16.21969032]
[90.73587036 23.59273911]
[103.24583435 31.86925507]
[110.14843750 28.93596840]
[103.13787842 15.67504501]
[96.12731934 2.41412091]
[88.02733612 -10.21086121]
[96.36235046 -22.68192673]
[111.12541962 -20.02641869]
[114.59214783 -5.43257952]
[119.27288818 8.81840897]
[123.95362854 23.06939888]
[130.85621643 20.13611221]
[133.58078003 5.38562775]
[136.30532837 -9.36485767]
[139.02987671 -24.11534309]
[128.93693542 -36.05965042]
[128.93464661 -51.69723129]
[139.02407837 -63.64450455]
[154.44132996 -66.26032257]
[167.90682983 -58.30958939]
[173.06259155 -43.54638672]
[167.47421265 -28.94145393]
[153.78036499 -21.39078903]
[151.05581665 -6.64030504]
[148.33126831 8.11017990]
[145.60670471 22.86066628]
[150.81227112 28.25994110]
[160.27503967 16.62139320]
[165.72532654 2.64661717]
[180.43330383 -0.29884037]
[190.84471130 10.49942970]
[187.36483765 25.09019852]
[173.19976807 30.02709007]
[161.22337341 39.05849457]
[166.42893982 44.45777130]
[181.26908875 42.27375031]
[193.79563904 32.60958481]
[207.51383972 38.41132355]
[220.04039001 28.74715805]
[233.75859070 34.54889679]
[248.59873962 32.36487961]
[263.43887329 30.18086433]
[278.27905273 27.99684525]
[280.56829834 13.05527115]
[287.16146851 -0.54699069]
[297.47229004 -11.60043621]
[310.58389282 -19.12220001]
[325.33044434 -22.44345284]
[340.40066528 -21.26887131]
[354.45455933 -15.70289707]
[366.24240112 -6.24045420]
[374.71609497 6.27706480]
[379.12210083 20.73660851]
[379.06866455 35.85244751]
[374.56057739 50.28048706]
[365.99862671 62.73780060]
[354.14419556 72.11669159]
[340.05133057 77.58319092]
[324.97317505 78.65122223]
[310.25045776 75.22582245]
[297.19235229 67.61157227]
[286.95993042 56.48551941]
[280.46304321 42.83699799]
[265.62289429 45.02101517]
[250.78276062 47.20503235]
[235.94261169 49.38904953]
[224.47752380 58.89700317]
[209.69786072 53.25147629]
[198.23277283 62.75942993]
[183.45310974 57.11390305]
[168.61294556 59.29792023]
[164.02984619 73.58060455]
[174.82839966 83.99172211]
[185.62693787 94.40283203]
[201.15744019 92.57582092]
[214.20040894 101.20221710]
[218.59738159 116.20890808]
[212.27223206 130.51017761]
[198.21150208 137.35342407]
[183.05424500 133.50746155]
[173.95724487 120.78823853]
[175.21583557 105.20138550]
[164.41728210 94.79026794]
[153.61872864 84.37915802]
[153.53332520 104.54532623]
[146.40164185 122.58028412]
[133.71868896 136.21517944]
[117.63404846 143.95500183]
[100.60337067 145.23445129]
[85.01911163 140.43037415]
[77.44016266 153.37484741]
[69.86121368 166.31932068]
[62.28226089 179.26380920]
[54.70330811 192.20828247]
[66.39712524 201.64820862]
[76.55330658 212.72564697]
[84.94496155 225.19311523]
[91.38462067 238.77209473]
[95.72840881 253.15921021]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 166]
[36 165]
[37 164]
[38 163]
[39 162]
[44 74]
[45 73]
[46 71]
[47 70]
[48 69]
[49 68]
[50 67]
[51 66]
[84 98]
[85 97]
[86 96]
[87 95]
[107 143]
[108 142]
[110 140]
[112 138]
[113 137]
[114 136]
[115 135]
[144 156]
[145 155]
[146 154]
] def

init

% Start Annotations
35 166 0.0 0.6 colorpair
36 165 0.0 0.2 colorpair
37 164 0.0 0.2 colorpair
38 163 0.16 0.2 colorpair
39 162 0.16 0.2 colorpair
44 74 0.0 0.6 colorpair
45 73 0.48 1 colorpair
46 71 0.0 0.2 colorpair
47 70 0.16 1 colorpair
49 68 0.0 0.6 colorpair
50 67 0.0 1 colorpair
51 66 0.16 0.2 colorpair
84 98 0.16 0.2 colorpair
85 97 0.16 1 colorpair
86 96 0.16 0.6 colorpair
87 95 0.16 0.6 colorpair
107 143 0.0 1 colorpair
108 142 0.16 1 colorpair
110 140 0.0 1 colorpair
112 138 0.16 0.2 colorpair
113 137 0.0 1 colorpair
114 136 0.16 0.6 colorpair
115 135 0.16 0.6 colorpair
144 156 0.16 0.6 colorpair
145 155 0.0 1 colorpair
146 154 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
35 166 1 gmark
36 165 2 gmark
37 164 2 gmark
38 163 2 gmark
38 cmark
39 162 2 gmark
39 cmark
162 cmark
44 74 1 gmark
45 cmark
73 cmark
46 71 2 gmark
47 cmark
70 cmark
48 69 3 gmark
48 cmark
69 cmark
49 68 1 gmark
51 66 2 gmark
51 cmark
66 cmark
84 98 2 gmark
84 cmark
98 cmark
97 cmark
86 96 1 gmark
86 cmark
96 cmark
87 95 1 gmark
87 cmark
108 cmark
112 138 2 gmark
112 cmark
114 136 1 gmark
114 cmark
115 135 1 gmark
115 cmark
144 156 1 gmark
156 cmark

% End Annotations
showpage
end
%%EOF
