%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:16:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAGCGGCUAAUCUCUGAUGUGUCUAGUAUCAAGAUUGAGCCUCGGGUUAAUUGAAAAAUUACUCGGGGCUUUUCUCUUUUUGCCACACAACACGGUAACAAACCAACCAAACGUUAUGAGGCAAAAAGCCUCAAGCGCCGUU_\
) } def
/len { sequence length } bind def

/coor [
[99.60707092 229.45593262]
[83.83525085 228.44334412]
[73.46178436 216.51997375]
[74.64105988 200.75975037]
[86.67343903 190.51292419]
[87.63449097 175.54374695]
[88.59554291 160.57455444]
[89.55659485 145.60537720]
[90.51764679 130.63619995]
[91.47870636 115.66701508]
[78.90737915 107.48399353]
[65.60839081 114.42206573]
[52.30940247 121.36013794]
[39.01041412 128.29821777]
[25.71142387 135.23629761]
[12.41243362 142.17436218]
[6.19695425 148.96675110]
[-1.24571419 149.11515808]
[-14.68993187 155.76745605]
[-28.13414955 162.41975403]
[-41.57836533 169.07205200]
[-55.02258301 175.72433472]
[-68.46680450 182.37663269]
[-74.94488525 197.05361938]
[-90.49490356 201.00030518]
[-103.18822479 191.18913269]
[-103.28761292 175.14637756]
[-90.71682739 165.17869568]
[-75.11909485 168.93241882]
[-61.67487717 162.28012085]
[-48.23065948 155.62782288]
[-34.78644180 148.97554016]
[-21.34222603 142.32324219]
[-7.89800787 135.67094421]
[5.47435904 128.87538147]
[18.77334785 121.93730164]
[32.07233810 114.99922943]
[45.37132645 108.06114960]
[58.67031860 101.12307739]
[71.96930695 94.18500519]
[74.83668518 79.46161652]
[65.11325836 68.03992462]
[55.38983536 56.61823654]
[45.66640854 45.19654846]
[35.94298172 33.77485657]
[26.21955681 22.35316849]
[16.49612999 10.93147945]
[6.77270508 -0.49020967]
[-2.95072103 -11.91189861]
[-12.67414665 -23.33358765]
[-20.67930412 -27.88178444]
[-22.48015022 -35.10482407]
[-31.95727730 -46.73169327]
[-41.43440247 -58.35856247]
[-50.91152954 -69.98542786]
[-66.42415619 -75.30431366]
[-69.30821228 -91.44786072]
[-56.59683228 -101.80898285]
[-41.36639023 -95.72904205]
[-39.28466415 -79.46255493]
[-29.80753517 -67.83568573]
[-20.33040810 -56.20882034]
[-10.85328197 -44.58195114]
[-1.25245762 -33.05701447]
[8.47096825 -21.63532448]
[18.19439507 -10.21363544]
[27.91781998 1.20805383]
[37.64124680 12.62974358]
[47.36467361 24.05143166]
[57.08809662 35.47312164]
[66.81152344 46.89480972]
[76.53495026 58.31650162]
[86.25837708 69.73818970]
[77.04016113 57.90499496]
[69.49632263 44.94002533]
[63.76379395 31.07863235]
[59.94665146 16.57244682]
[58.11418152 1.68479991]
[58.29964828 -13.31405354]
[60.49969101 -28.15183640]
[64.67436218 -42.55920029]
[70.74788666 -56.27460480]
[78.61000824 -69.04907227]
[88.11800385 -80.65071106]
[99.09928131 -90.86891174]
[111.35449219 -99.51818085]
[124.66115570 -106.44151306]
[138.77774048 -111.51322174]
[153.44795227 -114.64125061]
[168.40551758 -115.76880646]
[183.37889099 -114.87542725]
[198.09626770 -111.97732544]
[212.29046631 -107.12710571]
[225.70384216 -100.41283417]
[238.09288025 -91.95637512]
[249.23268127 -81.91124725]
[258.92105103 -70.45979309]
[266.98208618 -57.80990982]
[273.26947021 -44.19121552]
[277.66906738 -29.85093498]
[280.10098267 -15.04939175]
[280.52111816 -0.05527662]
[278.92181396 14.85922050]
[275.33212280 29.42335701]
[269.81716919 43.37274551]
[262.47711182 56.45416641]
[253.44519043 68.43014526]
[242.88533020 79.08329010]
[230.98924255 88.22020721]
[217.97288513 95.67503357]
[204.07254028 101.31244659]
[189.54054260 105.03009796]
[174.64068604 106.76051331]
[159.64346313 106.47228241]
[144.82110596 104.17062378]
[130.43614197 99.89489746]
[141.54031372 109.97940826]
[152.64448547 120.06391907]
[161.16552734 123.55110168]
[163.87525940 130.48455811]
[174.76138306 140.80406189]
[185.64752197 151.12356567]
[196.53364563 161.44306946]
[207.41978455 171.76257324]
[218.30590820 182.08207703]
[234.31710815 183.09262085]
[243.39137268 196.32278442]
[238.56771851 211.62350464]
[223.54644775 217.25737000]
[209.85057068 208.90258789]
[207.98640442 192.96820068]
[197.10028076 182.64869690]
[186.21414185 172.32919312]
[175.32801819 162.00968933]
[164.44187927 151.69018555]
[153.55575562 141.37068176]
[142.55998230 131.16809082]
[131.45581055 121.08358002]
[120.35163879 110.99906158]
[106.44788361 116.62806702]
[105.48683167 131.59724426]
[104.52577972 146.56643677]
[103.56472015 161.53561401]
[102.60366821 176.50479126]
[101.64261627 191.47396851]
[112.26587677 203.17533875]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 140]
[11 40]
[12 39]
[13 38]
[14 37]
[15 36]
[16 35]
[18 34]
[19 33]
[20 32]
[21 31]
[22 30]
[23 29]
[41 73]
[42 72]
[43 71]
[44 70]
[45 69]
[46 68]
[47 67]
[48 66]
[49 65]
[50 64]
[52 63]
[53 62]
[54 61]
[55 60]
[116 139]
[117 138]
[118 137]
[120 136]
[121 135]
[122 134]
[123 133]
[124 132]
[125 131]
] def

init

% Start Annotations
5 145 0.0 0.6 colorpair
6 144 0.0 0.6 colorpair
7 143 0.0 0.6 colorpair
8 142 0.0 1 colorpair
9 141 0.0 1 colorpair
10 140 0.0 0.6 colorpair
11 40 0.0 1 colorpair
12 39 0.0 0.6 colorpair
13 38 0.0 1 colorpair
14 37 0.16 1 colorpair
15 36 0.0 0.6 colorpair
16 35 0.0 1 colorpair
18 34 0.0 0.6 colorpair
19 33 0.0 1 colorpair
20 32 0.0 1 colorpair
21 31 0.16 1 colorpair
22 30 0.16 1 colorpair
23 29 0.0 1 colorpair
41 73 0.0 0.6 colorpair
42 72 0.0 1 colorpair
43 71 0.0 1 colorpair
44 70 0.0 1 colorpair
45 69 0.0 1 colorpair
46 68 0.0 1 colorpair
47 67 0.16 1 colorpair
48 66 0.16 1 colorpair
49 65 0.0 1 colorpair
50 64 0.0 0.6 colorpair
52 63 0.16 1 colorpair
53 62 0.0 1 colorpair
54 61 0.0 1 colorpair
55 60 0.16 1 colorpair
116 139 0.0 1 colorpair
117 138 0.16 1 colorpair
118 137 0.0 1 colorpair
120 136 0.0 0.6 colorpair
121 135 0.0 0.6 colorpair
122 134 0.0 1 colorpair
123 133 0.0 1 colorpair
124 132 0.0 0.6 colorpair
125 131 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
5 145 1 gmark
6 144 1 gmark
7 143 1 gmark
10 140 1 gmark
12 39 1 gmark
14 cmark
37 cmark
15 36 1 gmark
18 34 1 gmark
21 cmark
31 cmark
22 cmark
30 cmark
41 73 1 gmark
67 cmark
66 cmark
50 64 1 gmark
52 cmark
63 cmark
55 cmark
60 cmark
117 cmark
120 136 1 gmark
121 135 1 gmark
124 132 1 gmark

% End Annotations
showpage
end
%%EOF
