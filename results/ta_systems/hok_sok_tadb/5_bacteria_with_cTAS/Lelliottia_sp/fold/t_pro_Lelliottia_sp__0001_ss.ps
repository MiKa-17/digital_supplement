%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:16:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______A_GCCAUUAAAAACCGUGUUAGGCAUUGUUUUAAUCGUUUGUCUAACAAUCGUGAUUUUUACCUUUAUUAAUCGCGGCAAACUCUGCGAGUUGACAAUAAAGAGUGAACAUCAGGAGGUGGCGGCAAAAUUAGCCUGUAUAUCAGG____\
) } def
/len { sequence length } bind def

/coor [
[62.46099854 292.60122681]
[48.76202393 286.49072266]
[36.66446686 277.62228394]
[26.71518326 266.39678955]
[19.36391449 253.32167053]
[14.94296741 238.98796082]
[13.65218163 224.04360962]
[15.54990768 209.16413879]
[20.55035973 195.02215576]
[28.42749977 182.25694275]
[38.82525253 171.44552612]
[51.27405167 163.07638550]
[59.50128174 150.53395081]
[67.72851562 137.99151611]
[75.95574188 125.44908142]
[84.18297577 112.90664673]
[70.94973755 119.96932220]
[57.71649933 127.03199768]
[44.48326111 134.09468079]
[31.25002098 141.15734863]
[22.71836090 154.48106384]
[7.84708977 153.64767456]
[-5.38614798 160.71035767]
[-18.61938667 167.77302551]
[-31.85262489 174.83570862]
[-42.97926712 187.62767029]
[-58.35147095 180.47702026]
[-55.73572540 163.72607422]
[-38.91530228 161.60246277]
[-25.68206406 154.53979492]
[-12.44882584 147.47711182]
[0.78441232 140.41444397]
[8.36954308 127.59589386]
[24.18734360 127.92411804]
[37.42058182 120.86144257]
[50.65382004 113.79875946]
[63.88705826 106.73608398]
[77.12029266 99.67340851]
[62.34679413 97.07656097]
[51.42016983 86.79994202]
[47.92325974 72.21324921]
[53.00269318 58.09944534]
[64.99292755 49.08644485]
[79.96237946 48.12959671]
[93.00257111 55.54265213]
[99.83763123 68.89487457]
[98.22695160 83.80667114]
[103.51362610 69.76918030]
[108.80030823 55.73169327]
[100.86546326 47.32692719]
[96.68425751 36.60632324]
[96.83211517 25.15166855]
[101.24874115 14.63753891]
[109.25263977 6.58650875]
[119.64591980 2.14867425]
[130.89350891 1.93745494]
[137.01283264 -11.75757599]
[135.57852173 -27.51363182]
[147.83483887 -35.97718811]
[153.95416260 -49.67221832]
[160.07348633 -63.36724854]
[166.19281006 -77.06227875]
[164.75849915 -92.81833649]
[177.01481628 -101.28189087]
[183.13414001 -114.97692108]
[189.25346375 -128.67195129]
[195.37278748 -142.36698914]
[201.49211121 -156.06201172]
[207.47412109 -169.81758118]
[213.31819153 -183.63230896]
[219.16227722 -197.44703674]
[225.00634766 -211.26176453]
[230.85043335 -225.07650757]
[236.69450378 -238.89123535]
[242.53858948 -252.70596313]
[233.33412170 -271.55209351]
[240.81080627 -290.83648682]
[259.77301025 -298.33862305]
[264.49383545 -312.57638550]
[269.21463013 -326.81414795]
[273.93545532 -341.05191040]
[278.65625000 -355.28967285]
[269.50198364 -367.81878662]
[269.49414062 -383.33587646]
[278.63571167 -395.87426758]
[293.41162109 -400.61270142]
[308.14016724 -395.72915649]
[317.15798950 -383.10144043]
[316.99749756 -367.58520508]
[307.72045898 -355.14672852]
[292.89401245 -350.56884766]
[288.17321777 -336.33108521]
[283.45239258 -322.09332275]
[278.73159790 -307.85556030]
[274.01077271 -293.61779785]
[280.66049194 -286.86260986]
[284.38702393 -278.08364868]
[284.63015747 -268.49142456]
[281.31320190 -259.42575073]
[274.85971069 -252.16850281]
[266.13986206 -247.76254272]
[256.35330200 -246.86187744]
[250.50923157 -233.04714966]
[244.66516113 -219.23242188]
[238.82107544 -205.41769409]
[232.97700500 -191.60296631]
[227.13291931 -177.78823853]
[221.28884888 -163.97351074]
[221.58087158 -156.54635620]
[215.18714905 -149.94268799]
[209.06782532 -136.24766541]
[202.94850159 -122.55262756]
[196.82917786 -108.85759735]
[190.70985413 -95.16256714]
[192.58186340 -80.38607025]
[179.88784790 -70.94295502]
[173.76852417 -57.24792480]
[167.64920044 -43.55289459]
[161.52987671 -29.85786247]
[163.40188599 -15.08136749]
[150.70787048 -5.63825130]
[144.58854675 8.05677891]
[154.84002686 23.61620522]
[153.69932556 42.36357498]
[141.44406128 56.79251099]
[122.83779144 61.01837158]
[117.55111694 75.05585480]
[112.26444244 89.09334564]
[116.12255859 103.58868408]
[127.68790436 113.14079285]
[139.25325012 122.69289398]
[154.59783936 119.67996216]
[168.26409912 127.28044891]
[173.79924011 141.90563965]
[168.58975220 156.64996338]
[155.09538269 164.55160522]
[139.68775940 161.87965393]
[129.64190674 149.89572144]
[129.70115662 134.25823975]
[118.13580322 124.70613861]
[106.57044983 115.15402985]
[112.14048004 129.08151245]
[117.71050262 143.00900269]
[123.28052521 156.93649292]
[128.85055542 170.86396790]
[139.38711548 181.54016113]
[147.42851257 194.20252991]
[152.61125183 208.27873230]
[154.70104980 223.13244629]
[153.60343933 238.09222412]
[149.36804199 252.48185730]
[142.18630981 265.65084839]
[132.38287354 277.00396729]
[120.40090942 286.02795410]
[106.78202057 292.31491089]
[92.14183807 295.58065796]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 38]
[17 37]
[18 36]
[19 35]
[20 34]
[22 32]
[23 31]
[24 30]
[25 29]
[47 128]
[48 127]
[49 126]
[56 122]
[57 121]
[59 119]
[60 118]
[61 117]
[62 116]
[64 114]
[65 113]
[66 112]
[67 111]
[68 110]
[69 108]
[70 107]
[71 106]
[72 105]
[73 104]
[74 103]
[75 102]
[78 95]
[79 94]
[80 93]
[81 92]
[82 91]
[129 141]
[130 140]
[131 139]
] def

init

% Start Annotations
16 38 0.0 1 colorpair
17 37 0.16 0.6 colorpair
18 36 0.16 0.6 colorpair
19 35 0.0 0.6 colorpair
20 34 0.0 0.6 colorpair
22 32 0.32 0.6 colorpair
23 31 0.16 0.6 colorpair
24 30 0.32 1 colorpair
25 29 0.0 0.2 colorpair
47 128 0.0 0.6 colorpair
48 127 0.32 1 colorpair
49 126 0.0 0.2 colorpair
56 122 0.0 0.6 colorpair
57 121 0.0 0.2 colorpair
59 119 0.16 0.6 colorpair
60 118 0.0 0.6 colorpair
61 117 0.16 0.6 colorpair
62 116 0.0 0.6 colorpair
64 114 0.0 0.6 colorpair
65 113 0.16 1 colorpair
66 112 0.16 0.6 colorpair
67 111 0.0 0.2 colorpair
68 110 0.0 0.2 colorpair
69 108 0.16 0.6 colorpair
70 107 0.16 1 colorpair
71 106 0.0 1 colorpair
72 105 0.16 0.6 colorpair
73 104 0.0 0.6 colorpair
74 103 0.0 0.6 colorpair
75 102 0.16 0.6 colorpair
78 95 0.0 0.6 colorpair
79 94 0.0 1 colorpair
80 93 0.16 1 colorpair
81 92 0.0 0.6 colorpair
82 91 0.16 1 colorpair
129 141 0.16 0.6 colorpair
130 140 0.0 1 colorpair
131 139 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
17 37 1 gmark
17 cmark
18 36 1 gmark
18 cmark
36 cmark
19 35 1 gmark
20 34 1 gmark
22 32 1 gmark
22 cmark
32 cmark
23 31 1 gmark
23 cmark
31 cmark
24 cmark
30 cmark
25 29 2 gmark
47 128 1 gmark
48 cmark
127 cmark
49 126 2 gmark
56 122 1 gmark
57 121 2 gmark
59 119 1 gmark
119 cmark
60 118 1 gmark
61 117 1 gmark
61 cmark
62 116 1 gmark
64 114 1 gmark
113 cmark
66 112 1 gmark
66 cmark
67 111 2 gmark
68 110 2 gmark
69 108 1 gmark
69 cmark
107 cmark
72 105 1 gmark
72 cmark
105 cmark
73 104 1 gmark
74 103 1 gmark
75 102 1 gmark
75 cmark
102 cmark
78 95 1 gmark
93 cmark
81 92 1 gmark
82 cmark
129 141 1 gmark
141 cmark

% End Annotations
showpage
end
%%EOF
