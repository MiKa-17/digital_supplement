%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:16:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__GAAGAGGCUAACAUC_GAACUGUCUAGGAUCAACAUCG_GCCUCGGGUUAAUAGAAAAAUCACCCGGGGCUUUCCUCUAUCUG_________________AAACCAACAAAACGCUAAAAGCCAAAAAGCCUCAAGCACCCGUC\
) } def
/len { sequence length } bind def

/coor [
[134.02320862 157.74397278]
[120.05468750 163.21026611]
[105.21006775 161.05683899]
[93.37058258 151.84671021]
[87.63173676 137.98793030]
[89.49404907 123.10386658]
[76.04982758 129.75616455]
[62.60560989 136.40844727]
[49.16139221 143.06074524]
[35.71717453 149.71304321]
[22.34480858 156.50860596]
[9.04581833 163.44668579]
[-4.25317097 170.38476562]
[-17.55216026 177.32283020]
[-30.85115051 184.26091003]
[-44.15013885 191.19898987]
[-50.36561966 197.99136353]
[-57.80828857 198.13978577]
[-71.25250244 204.79208374]
[-84.69672394 211.44436646]
[-98.14093781 218.09666443]
[-111.58515930 224.74896240]
[-125.02937317 231.40126038]
[-131.50746155 246.07824707]
[-147.05747986 250.02493286]
[-159.75079346 240.21374512]
[-159.85018921 224.17100525]
[-147.27940369 214.20330811]
[-131.68167114 217.95703125]
[-118.23744965 211.30474854]
[-104.79323578 204.65245056]
[-91.34901428 198.00015259]
[-77.90480042 191.34785461]
[-64.46057892 184.69557190]
[-51.08821487 177.89999390]
[-37.78922272 170.96191406]
[-24.49023438 164.02384949]
[-11.19124508 157.08576965]
[2.10774446 150.14770508]
[15.40673351 143.20962524]
[19.91416931 137.28523254]
[29.06488228 136.26882935]
[42.50909805 129.61653137]
[55.95331573 122.96423340]
[69.39753723 116.31194305]
[82.84175110 109.65964508]
[85.86629486 94.96774292]
[76.14286804 83.54605103]
[66.41944122 72.12435913]
[56.69601440 60.70267105]
[48.69086075 56.15447617]
[46.89001465 48.93143845]
[37.41288757 37.30456924]
[27.93575859 25.67770004]
[18.45863152 14.05083179]
[2.94600725 8.73195076]
[0.06195022 -7.41160059]
[12.77333164 -17.77272034]
[28.00377274 -11.69277763]
[30.08550072 4.57370520]
[39.56262589 16.20057297]
[49.03975296 27.82744217]
[58.51688004 39.45431137]
[68.11770630 50.97924805]
[77.84113312 62.40093613]
[87.56455994 73.82262421]
[97.28798676 85.24431610]
[111.47250366 90.12278748]
[126.16440582 87.09824371]
[140.85630798 84.07369995]
[155.51506042 80.89234161]
[170.13897705 77.55452728]
[184.76290894 74.21671295]
[199.38682556 70.87889862]
[203.99320984 56.29368591]
[215.20756531 46.04013824]
[229.95053101 42.79806900]
[244.24121094 47.34037399]
[254.27195740 58.35172653]
[268.89587402 55.01391220]
[283.51980591 51.67609787]
[298.14370728 48.33828354]
[312.76763916 45.00046921]
[327.39154053 41.66265488]
[342.01547241 38.32484055]
[356.63937378 34.98702621]
[371.26330566 31.64921379]
[370.43997192 16.63488197]
[372.16610718 1.69739473]
[376.39199829 -12.73346710]
[382.99609375 -26.24249840]
[391.78836060 -38.44101715]
[402.51586914 -48.97805023]
[414.86990356 -57.55042267]
[428.49505615 -63.91149521]
[442.99929810 -67.87824249]
[457.96530151 -69.33653259]
[472.96246338 -68.24440765]
[487.55932617 -64.63329315]
[501.33584595 -58.60709000]
[513.89569092 -50.33917999]
[524.87750244 -40.06744766]
[533.96520996 -28.08743286]
[540.89746094 -14.74382401]
[545.47479248 -0.42054233]
[547.56542969 14.47030163]
[547.10925293 29.50026894]
[544.11938477 44.23691940]
[538.68188477 58.25624466]
[530.95318604 71.15488434]
[521.15563965 82.56172180]
[509.57113647 92.14855957]
[496.53298950 99.63955688]
[482.41635132 104.81919098]
[467.62738037 107.53842926]
[452.59158325 107.71903229]
[437.74154663 105.35581207]
[423.50457764 100.51675415]
[410.29028320 93.34109497]
[398.47882080 84.03528595]
[388.41012573 72.86708069]
[380.37380981 60.15780640]
[374.60110474 46.27313232]
[359.97720337 49.61094666]
[345.35327148 52.94876099]
[330.72937012 56.28657532]
[316.10543823 59.62438965]
[301.48153687 62.96220016]
[286.85760498 66.30001831]
[272.23367310 69.63783264]
[257.60977173 72.97564697]
[253.35003662 87.24870300]
[242.44540405 97.54167175]
[227.75576782 101.01740265]
[213.20314026 96.64499664]
[202.72463989 85.50281525]
[188.10072327 88.84062958]
[173.47679138 92.17844391]
[158.85287476 95.51625824]
[152.99011230 100.10355377]
[143.88085938 98.76560974]
[129.18894958 101.79015350]
[114.49703979 104.81468964]
[129.24592590 107.54788208]
[140.71560669 117.21465302]
[145.90725708 131.28756714]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 46]
[7 45]
[8 44]
[9 43]
[10 42]
[11 40]
[12 39]
[13 38]
[14 37]
[15 36]
[16 35]
[18 34]
[19 33]
[20 32]
[21 31]
[22 30]
[23 29]
[47 67]
[48 66]
[49 65]
[50 64]
[52 63]
[53 62]
[54 61]
[55 60]
[68 143]
[69 142]
[70 141]
[71 139]
[72 138]
[73 137]
[74 136]
[79 131]
[80 130]
[81 129]
[82 128]
[83 127]
[84 126]
[85 125]
[86 124]
[87 123]
] def

init

% Start Annotations
6 46 0.0 1 colorpair
7 45 0.0 0.6 colorpair
8 44 0.0 1 colorpair
9 43 0.0 1 colorpair
10 42 0.0 1 colorpair
11 40 0.0 1 colorpair
12 39 0.0 0.6 colorpair
13 38 0.0 1 colorpair
14 37 0.16 1 colorpair
15 36 0.0 0.6 colorpair
16 35 0.0 1 colorpair
18 34 0.0 0.6 colorpair
19 33 0.0 1 colorpair
20 32 0.0 1 colorpair
21 31 0.16 1 colorpair
22 30 0.16 1 colorpair
23 29 0.0 1 colorpair
47 67 0.16 1 colorpair
48 66 0.16 1 colorpair
49 65 0.0 1 colorpair
50 64 0.0 0.6 colorpair
52 63 0.16 1 colorpair
53 62 0.0 1 colorpair
54 61 0.0 1 colorpair
55 60 0.16 1 colorpair
68 143 0.0 0.6 colorpair
69 142 0.0 1 colorpair
70 141 0.0 1 colorpair
71 139 0.0 1 colorpair
72 138 0.0 1 colorpair
73 137 0.0 1 colorpair
74 136 0.0 1 colorpair
79 131 0.0 1 colorpair
80 130 0.0 1 colorpair
81 129 0.16 1 colorpair
82 128 0.0 0.6 colorpair
83 127 0.16 1 colorpair
84 126 0.0 1 colorpair
85 125 0.0 1 colorpair
86 124 0.0 0.6 colorpair
87 123 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
7 45 1 gmark
12 39 1 gmark
14 cmark
37 cmark
15 36 1 gmark
18 34 1 gmark
21 cmark
31 cmark
22 cmark
30 cmark
67 cmark
66 cmark
50 64 1 gmark
52 cmark
63 cmark
55 cmark
60 cmark
68 143 1 gmark
81 cmark
129 cmark
82 128 1 gmark
83 cmark
127 cmark
86 124 1 gmark
87 123 1 gmark

% End Annotations
showpage
end
%%EOF
