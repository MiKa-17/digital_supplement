%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:21:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
C_CUGUUCUGGUGCGUAUUAAUCGUAUGUAUAACGCUGUUAAUAUUCACAUUCCUGACGCGUAAUUCGCUGUGCGAACUACGACUGAAGGACGGGCAAAGGGAGUUCGCUGCGUUUCUGGCUUACGAAUCCGGUAAGUAGCAACCUGA_GGGCGGGGGAAACCCCGCCUUUUCAGG______GAGGCUG_____G_UUGUAU_GCC_CGAGCGCCUUUAU_A_GGGCUGUC_G_\
) } def
/len { sequence length } bind def

/coor [
[78.02124786 140.90293884]
[88.97635651 130.65667725]
[100.81703186 121.44808197]
[113.44534302 113.35327911]
[126.75684357 106.43923950]
[140.64143372 100.76314545]
[154.98210144 96.37249756]
[140.30297852 99.45847321]
[125.62384796 102.54444885]
[110.94472504 105.63043213]
[97.69528198 112.66266632]
[86.91292572 123.09055328]
[76.13056946 133.51843262]
[71.58959198 148.67396545]
[57.06201553 151.96011353]
[46.27965927 162.38800049]
[35.49730682 172.81588745]
[24.71495056 183.24377441]
[13.93259525 193.67166138]
[3.15024018 204.09954834]
[-7.63211536 214.52743530]
[-18.41447067 224.95532227]
[-22.95544815 240.11085510]
[-37.48302460 243.39700317]
[-48.26538086 253.82489014]
[-45.13765335 268.93185425]
[-50.69521332 283.32342529]
[-63.16466141 292.40728760]
[-78.56704712 293.28479004]
[-91.98752594 285.67596436]
[-99.14366913 272.00872803]
[-97.75197601 256.64425659]
[-88.25653076 244.48530579]
[-73.68730164 239.41174316]
[-58.69326782 243.04252625]
[-47.91091156 232.61463928]
[-44.14115906 218.20498657]
[-28.84235764 214.17295837]
[-18.06000137 203.74507141]
[-7.27764654 193.31718445]
[3.50470901 182.88931274]
[14.28706455 172.46142578]
[25.06941986 162.03353882]
[35.85177612 151.60565186]
[46.63412857 141.17776489]
[50.40388107 126.76810455]
[65.70268250 122.73608398]
[76.48503876 112.30819702]
[87.26739502 101.88031006]
[85.67538452 94.55122375]
[82.49135590 79.89305115]
[80.89934540 72.56396484]
[66.76251221 67.54898834]
[52.62568283 62.53400803]
[38.48884964 57.51903152]
[26.01348686 68.38259888]
[9.85357285 71.45004272]
[-5.55774975 65.97636414]
[-16.04127502 53.54650879]
[-18.80498505 37.61789322]
[-33.00759506 32.79234314]
[-47.21020126 27.96679688]
[-61.41281128 23.14124870]
[-75.45891571 29.87509155]
[-89.79364014 24.77897835]
[-96.12677002 11.34666443]
[-110.32937622 6.52111721]
[-124.53199005 1.69556928]
[-138.73458862 -3.12997842]
[-155.67684937 -2.50055814]
[-160.97175598 -18.60646629]
[-146.96105957 -28.15300560]
[-133.90904236 -17.33258629]
[-119.70643616 -12.50703907]
[-105.50382996 -7.68149137]
[-91.30122375 -2.85594368]
[-78.09595490 -9.64979649]
[-63.62374496 -4.95832586]
[-56.58726501 8.93864059]
[-42.38465500 13.76418877]
[-28.18204689 18.58973694]
[-13.97943783 23.41528320]
[-4.33211899 13.76105690]
[8.59452438 9.17997742]
[22.29973412 10.61871052]
[34.10602188 17.85344315]
[41.68224716 29.52247620]
[43.50382996 43.38220215]
[57.64065933 48.39717865]
[71.77748871 53.41215515]
[85.91432190 58.42713547]
[107.85874939 90.95130157]
[122.53787231 87.86532593]
[137.21699524 84.77935028]
[151.89611816 81.69337463]
[137.09469604 84.12599945]
[122.94799042 79.13893890]
[112.94429779 67.96190643]
[109.55033112 53.35091400]
[113.60296631 38.90874863]
[124.10290527 28.19655037]
[138.46107483 23.85572433]
[153.13705444 26.95663452]
[164.51203918 36.73465729]
[169.78118896 50.77873611]
[167.64570618 65.62475586]
[170.43673706 50.88669968]
[173.22775269 36.14864731]
[176.01876831 21.41059303]
[178.80978394 6.67254066]
[181.60081482 -8.06551266]
[184.39183044 -22.80356598]
[174.22813416 -32.10038757]
[170.01466370 -45.10075378]
[172.74905396 -58.38008499]
[181.61326599 -68.49547577]
[194.21437073 -72.87830353]
[197.20216370 -87.57772827]
[200.18995667 -102.27715302]
[203.17774963 -116.97657776]
[192.04936218 -127.66127777]
[188.48637390 -142.67155457]
[193.62573242 -157.21771240]
[205.82748413 -166.65811157]
[221.19807434 -167.98034668]
[234.83282471 -160.76251221]
[242.38092041 -147.30778503]
[241.43380737 -131.90951538]
[232.29370117 -119.48125458]
[217.87716675 -113.98879242]
[214.88937378 -99.28936768]
[211.90158081 -84.58994293]
[208.91380310 -69.89051056]
[220.39102173 -58.14316940]
[222.62101746 -41.70406342]
[214.52745056 -27.03242493]
[199.12988281 -20.01254654]
[196.33886719 -5.27449274]
[193.54783630 9.46356010]
[190.75682068 24.20161438]
[187.96580505 38.93966675]
[185.17478943 53.67771912]
[182.38375854 68.41577148]
[194.21763611 77.63312531]
[207.82398987 71.31910706]
[221.43035889 65.00508118]
[235.03672791 58.69106293]
[248.64308167 52.37704086]
[258.89074707 37.06857300]
[276.30041504 39.33085632]
[289.82113647 32.83551025]
[303.34188843 26.34016228]
[316.86264038 19.84481430]
[330.38336182 13.34946537]
[343.90411377 6.85411692]
[357.42486572 0.35876891]
[370.94558716 -6.13657951]
[379.74468994 -19.97522163]
[396.11505127 -19.00406837]
[403.21627808 -4.22215986]
[393.74319458 9.16414452]
[377.44094849 7.38416243]
[363.92019653 13.87951088]
[350.39947510 20.37485886]
[336.87872314 26.87020683]
[323.35797119 33.36555481]
[309.83724976 39.86090469]
[296.31649780 46.35625076]
[282.79574585 52.85160065]
[278.50152588 64.14913177]
[267.30426025 69.67536163]
[254.95710754 65.98340607]
[241.35073853 72.29742432]
[227.74438477 78.61145020]
[214.13801575 84.92546844]
[200.53164673 91.23949432]
[215.49205017 92.32869720]
[230.29162598 94.77256012]
[244.80798340 98.55084991]
[258.92105103 103.63233185]
[272.51409912 109.97497559]
[285.47470093 117.52631378]
[297.69567871 126.22389984]
[309.07592773 135.99578857]
[319.52133179 146.76116943]
[328.94552612 158.43098450]
[337.27050781 170.90873718]
[344.42749023 184.09121704]
[350.35723877 197.86940002]
[355.01071167 212.12931824]
[358.34942627 226.75302124]
[360.34576416 241.61958313]
[360.98321533 256.60604858]
[360.25653076 271.58840942]
[358.17169189 286.44284058]
[354.74594116 301.04638672]
[350.00762939 315.27835083]
[343.99594116 329.02096558]
[336.76058960 342.16058350]
[328.36141968 354.58853149]
[318.86791992 366.20202637]
[308.35858154 376.90502930]
[296.92034912 386.60897827]
[284.64779663 395.23361206]
[271.64245605 402.70764160]
[258.01187134 408.96920776]
[243.86878967 413.96655273]
[229.33020020 417.65835571]
[214.51632690 420.01403809]
[199.54969788 421.01412964]
[184.55412292 420.65036011]
[169.65359497 418.92575073]
[154.97135925 415.85458374]
[140.62886047 411.46221924]
[126.74473572 405.78497314]
[113.43379211 398.86987305]
[100.80613708 390.77404785]
[88.96620178 381.56448364]
[78.01192474 371.31735229]
[68.03390503 360.11740112]
[59.11466217 348.05725098]
[51.32796860 335.23666382]
[44.73822784 321.76165771]
[39.39994431 307.74374390]
[35.35726547 293.29876709]
[32.64363098 278.54626465]
[31.28148460 263.60824585]
[31.28209114 248.60824585]
[32.64544678 233.67033386]
[35.36027527 218.91806030]
[39.40412140 204.47343445]
[44.74354172 190.45591736]
[51.33436966 176.98146057]
[59.12210083 164.16151428]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 95]
[8 94]
[9 93]
[10 92]
[11 49]
[12 48]
[13 47]
[15 45]
[16 44]
[17 43]
[18 42]
[19 41]
[20 40]
[21 39]
[22 38]
[24 36]
[25 35]
[52 91]
[53 90]
[54 89]
[55 88]
[60 82]
[61 81]
[62 80]
[63 79]
[66 76]
[67 75]
[68 74]
[69 73]
[106 143]
[107 142]
[108 141]
[109 140]
[110 139]
[111 138]
[112 137]
[117 133]
[118 132]
[119 131]
[120 130]
[144 176]
[145 175]
[146 174]
[147 173]
[148 172]
[150 169]
[151 168]
[152 167]
[153 166]
[154 165]
[155 164]
[156 163]
[157 162]
] def

init

% Start Annotations
7 95 0.16 1 colorpair
8 94 0.0 0.6 colorpair
9 93 0.16 1 colorpair
10 92 0.0 1 colorpair
11 49 0.0 1 colorpair
12 48 0.0 1 colorpair
13 47 0.0 1 colorpair
15 45 0.16 1 colorpair
16 44 0.16 1 colorpair
17 43 0.0 0.6 colorpair
18 42 0.0 0.6 colorpair
19 41 0.16 1 colorpair
20 40 0.0 0.6 colorpair
21 39 0.0 1 colorpair
22 38 0.32 1 colorpair
24 36 0.16 0.6 colorpair
25 35 0.16 1 colorpair
52 91 0.16 1 colorpair
53 90 0.16 1 colorpair
54 89 0.0 1 colorpair
55 88 0.16 1 colorpair
60 82 0.0 1 colorpair
61 81 0.0 0.2 colorpair
62 80 0.32 0.6 colorpair
63 79 0.16 0.2 colorpair
66 76 0.0 0.6 colorpair
67 75 0.0 1 colorpair
68 74 0.16 1 colorpair
69 73 0.0 1 colorpair
106 143 0.16 0.2 colorpair
108 141 0.0 0.6 colorpair
109 140 0.16 1 colorpair
110 139 0.0 0.6 colorpair
111 138 0.0 1 colorpair
112 137 0.0 1 colorpair
117 133 0.0 1 colorpair
118 132 0.16 1 colorpair
119 131 0.0 1 colorpair
120 130 0.0 1 colorpair
144 176 0.16 0.6 colorpair
145 175 0.16 0.6 colorpair
146 174 0.0 0.2 colorpair
147 173 0.0 0.6 colorpair
148 172 0.16 0.2 colorpair
150 169 0.32 0.6 colorpair
151 168 0.32 1 colorpair
152 167 0.0 1 colorpair
153 166 0.0 0.6 colorpair
154 165 0.0 1 colorpair
155 164 0.0 1 colorpair
156 163 0.0 0.6 colorpair
157 162 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
95 cmark
8 94 1 gmark
93 cmark
15 cmark
44 cmark
17 43 1 gmark
18 42 1 gmark
41 cmark
20 40 1 gmark
22 cmark
38 cmark
24 36 1 gmark
24 cmark
36 cmark
35 cmark
52 cmark
91 cmark
53 cmark
88 cmark
61 81 2 gmark
62 80 1 gmark
62 cmark
80 cmark
63 79 2 gmark
63 cmark
66 76 1 gmark
74 cmark
106 143 2 gmark
143 cmark
107 142 3 gmark
107 cmark
142 cmark
108 141 1 gmark
109 cmark
140 cmark
110 139 1 gmark
132 cmark
144 176 1 gmark
144 cmark
176 cmark
145 175 1 gmark
145 cmark
146 174 2 gmark
147 173 1 gmark
148 172 2 gmark
148 cmark
150 169 1 gmark
150 cmark
169 cmark
151 cmark
168 cmark
153 166 1 gmark
156 163 1 gmark

% End Annotations
showpage
end
%%EOF
