%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:21:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_____ACUGCCGCGAAACACUCUGAUCUGGUGCGUAUUAAUCGUAUGUAUAACGCUAUUAAUAUUCACAUUCCUGACACGUAAAUCGCUGUGCGAACUACGACUGAAGGACGGGCAAAGGGAGUUCGCUGCGUUUCUGGCUUACGAAUCCGGUAA_\
) } def
/len { sequence length } bind def

/coor [
[170.42396545 425.67922974]
[165.82899475 418.01339722]
[162.94500732 409.54339600]
[161.90490723 400.64642334]
[162.75935364 391.71960449]
[165.47436523 383.16235352]
[169.93263245 375.35833740]
[175.93855286 368.65850830]
[183.22683716 363.36505127]
[178.22209167 349.22460938]
[166.68171692 339.80816650]
[169.37123108 324.21725464]
[164.36648560 310.07678223]
[159.36174011 295.93634033]
[145.76972961 294.32693481]
[134.14778137 286.97293091]
[126.80328369 275.26663208]
[125.22354889 261.47100830]
[129.77488708 248.28215027]
[139.61973572 238.30253601]
[134.89892578 224.06477356]
[130.17811584 209.82701111]
[125.45731354 195.58924866]
[110.13451385 188.71888733]
[104.38294983 172.58375549]
[112.20659637 156.96730042]
[107.20185089 142.82684326]
[102.19710541 128.68638611]
[97.19235992 114.54592896]
[86.85434723 103.67737579]
[72.98184204 97.97180176]
[59.10933304 92.26623535]
[43.40341949 94.17276001]
[34.57585526 82.17594910]
[20.70334625 76.47038269]
[6.83083820 70.76480865]
[-7.04166889 65.05924225]
[-20.91417694 59.35367203]
[-34.78668594 53.64809799]
[-48.65919113 47.94252777]
[-62.53170013 42.23695755]
[-78.23760986 44.14348602]
[-87.06517792 32.14667892]
[-100.93768311 26.44110870]
[-113.52885437 35.35547256]
[-128.94169617 36.02458572]
[-142.25804138 28.23493195]
[-149.22866821 14.47216225]
[-147.62930298 -0.87207240]
[-137.97027588 -12.90148354]
[-123.33375549 -17.77752876]
[-108.39019775 -13.94428158]
[-97.90805054 -2.62491536]
[-95.23211670 12.56860065]
[-81.35960388 18.27417183]
[-66.64595032 15.95954323]
[-56.82612991 28.36445045]
[-42.95362091 34.07002258]
[-29.08111382 39.77559280]
[-15.20860577 45.48116302]
[-1.33609855 51.18673325]
[12.53640938 56.89230347]
[26.40891647 62.59787369]
[40.28142548 68.30344391]
[54.99508286 65.98881531]
[64.81490326 78.39372253]
[78.68740845 84.09929657]
[92.55991364 89.80486298]
[94.59983826 88.67910767]
[96.79866791 87.95354462]
[99.07925415 87.64803314]
[106.00917816 74.34479523]
[112.93910980 61.04155731]
[119.86903381 47.73831940]
[110.85257721 33.91013718]
[110.02828217 17.51652145]
[117.52606201 3.02010512]
[131.22328186 -5.68044186]
[147.34465027 -6.29880476]
[154.00700378 -19.73803902]
[160.66935730 -33.17727280]
[167.33171082 -46.61650467]
[162.51560974 -61.43011093]
[169.46363831 -74.96449280]
[183.61582947 -79.46462250]
[190.27818298 -92.90386200]
[196.94053650 -106.34309387]
[203.60289001 -119.78232574]
[205.22074890 -136.65890503]
[221.88565063 -139.77618408]
[229.49440002 -124.62549591]
[217.04212952 -113.11996460]
[210.37977600 -99.68073273]
[203.71740723 -86.24150085]
[197.05505371 -72.80226898]
[202.04190063 -58.81416702]
[195.47677612 -45.08996582]
[180.77095032 -39.95414734]
[174.10859680 -26.51491356]
[167.44622803 -13.07568073]
[160.78387451 0.36355251]
[169.09460449 11.23850918]
[171.91078186 24.70032883]
[168.62471008 38.12346268]
[159.82456970 48.86463928]
[147.19013977 54.78333664]
[133.17227173 54.66824722]
[126.24234009 67.97148132]
[119.31241608 81.27471924]
[112.38249207 94.57795715]
[111.33281708 109.54118347]
[116.33756256 123.68164062]
[121.34230804 137.82209778]
[126.34705353 151.96255493]
[139.11950684 156.34223938]
[146.90910339 167.13174438]
[147.04228210 180.24368286]
[139.69506836 190.86843872]
[144.41587830 205.10620117]
[149.13668823 219.34396362]
[153.85749817 233.58174133]
[170.06033325 236.74133301]
[182.39909363 247.56655884]
[187.58070374 263.04278564]
[184.28559875 278.93164062]
[173.50219727 290.93157959]
[178.50694275 305.07205200]
[183.51168823 319.21249390]
[195.41003418 329.64035034]
[192.36254883 344.21984863]
[197.36729431 358.36032104]
[219.17835999 360.61541748]
[236.91729736 373.38800049]
[245.91653442 393.23321533]
[243.85003662 414.85653687]
[231.33407593 432.52621460]
[238.79071045 445.54153442]
[246.24734497 458.55685425]
[253.70397949 471.57217407]
[269.11624146 472.25491333]
[281.69952393 481.18038940]
[287.43856812 495.50054932]
[284.50204468 510.64587402]
[273.82702637 521.78350830]
[258.81982422 525.35949707]
[244.26921082 520.23278809]
[234.81823730 508.03924561]
[233.48266602 492.66979980]
[240.68865967 479.02880859]
[233.23202515 466.01348877]
[225.77539062 452.99816895]
[218.31875610 439.98284912]
[209.69596863 442.09307861]
[200.81222534 442.34375000]
[192.06442261 440.71939087]
[183.84432983 437.28848267]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 131]
[10 130]
[12 128]
[13 127]
[14 126]
[20 121]
[21 120]
[22 119]
[23 118]
[26 114]
[27 113]
[28 112]
[29 111]
[30 68]
[31 67]
[32 66]
[34 64]
[35 63]
[36 62]
[37 61]
[38 60]
[39 59]
[40 58]
[41 57]
[43 55]
[44 54]
[71 110]
[72 109]
[73 108]
[74 107]
[79 101]
[80 100]
[81 99]
[82 98]
[85 95]
[86 94]
[87 93]
[88 92]
[136 152]
[137 151]
[138 150]
[139 149]
] def

init

% Start Annotations
9 131 0.0 0.2 colorpair
10 130 0.0 0.2 colorpair
12 128 0.16 1 colorpair
13 127 0.0 0.2 colorpair
14 126 0.32 1 colorpair
20 121 0.16 1 colorpair
21 120 0.16 0.2 colorpair
22 119 0.0 0.2 colorpair
23 118 0.0 0.2 colorpair
26 114 0.16 1 colorpair
27 113 0.0 0.2 colorpair
28 112 0.16 1 colorpair
29 111 0.0 1 colorpair
30 68 0.0 1 colorpair
31 67 0.0 1 colorpair
32 66 0.0 1 colorpair
34 64 0.16 1 colorpair
35 63 0.16 1 colorpair
36 62 0.0 0.2 colorpair
37 61 0.0 0.2 colorpair
38 60 0.16 1 colorpair
39 59 0.0 0.2 colorpair
40 58 0.0 1 colorpair
41 57 0.32 1 colorpair
43 55 0.16 0.2 colorpair
44 54 0.16 1 colorpair
71 110 0.16 1 colorpair
72 109 0.16 1 colorpair
73 108 0.0 1 colorpair
74 107 0.16 1 colorpair
79 101 0.0 1 colorpair
80 100 0.0 0.2 colorpair
81 99 0.32 0.2 colorpair
82 98 0.16 0.2 colorpair
85 95 0.0 0.2 colorpair
86 94 0.0 1 colorpair
87 93 0.16 1 colorpair
88 92 0.0 1 colorpair
136 152 0.0 1 colorpair
137 151 0.16 1 colorpair
138 150 0.0 1 colorpair
139 149 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
9 131 2 gmark
10 130 2 gmark
128 cmark
13 127 2 gmark
14 cmark
126 cmark
20 cmark
21 120 2 gmark
21 cmark
22 119 2 gmark
23 118 2 gmark
114 cmark
27 113 2 gmark
112 cmark
34 cmark
63 cmark
36 62 2 gmark
37 61 2 gmark
60 cmark
39 59 2 gmark
41 cmark
57 cmark
43 55 2 gmark
43 cmark
55 cmark
54 cmark
71 cmark
110 cmark
72 cmark
107 cmark
80 100 2 gmark
81 99 2 gmark
81 cmark
99 cmark
82 98 2 gmark
82 cmark
85 95 2 gmark
93 cmark
151 cmark

% End Annotations
showpage
end
%%EOF
