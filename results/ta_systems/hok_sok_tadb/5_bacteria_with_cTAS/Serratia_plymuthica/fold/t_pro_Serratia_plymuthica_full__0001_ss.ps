%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:25:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_________________________AAAUGCAGCAGGAACGGGUCGUUCUGAGGCUGAUGAUUAUCUGCAUGACGCUGAUUGCGUUCAUGUUGAUCACUCGCGGUUCGCUAUGUGAACUGCGCAUCAAACUGGGAGACACGGAGGUUGCGGCCAUUUUGGCUUACGAAUCCGAA____\
) } def
/len { sequence length } bind def

/coor [
[72.05001068 302.61282349]
[68.11660004 317.10873413]
[62.39733124 330.99734497]
[54.98241425 344.05957031]
[45.98879242 356.08944702]
[35.55830765 366.89724731]
[23.85546494 376.31246948]
[11.06483459 384.18667603]
[-2.61185813 390.39566040]
[-16.95891190 394.84146118]
[-31.75005150 397.45401001]
[-46.75199890 398.19207764]
[-61.72815704 397.04406738]
[-76.44232178 394.02801514]
[-90.66243744 389.19152832]
[-104.16423035 382.61087036]
[-116.73475647 374.38986206]
[-128.17575073 364.65811157]
[-138.30679321 353.56915283]
[-146.96809387 341.29785156]
[-154.02304077 328.03771973]
[-159.36036682 313.99789429]
[-162.89591980 299.39984131]
[-164.57391357 284.47378540]
[-164.36790466 269.45510864]
[-162.28111267 254.58067322]
[-158.34648132 240.08509827]
[-152.62605286 226.19697571]
[-145.21003723 213.13536072]
[-136.21539307 201.10623169]
[-125.78400421 190.29933167]
[-114.08036804 180.88507080]
[-101.28907013 173.01194763]
[-87.61185455 166.80413818]
[-73.26442719 162.35952759]
[-58.47307205 159.74821472]
[-43.47105789 159.01139832]
[-28.49500084 160.16070557]
[-13.78108692 163.17797852]
[0.43862069 168.01567078]
[13.93985748 174.59744263]
[22.14987946 162.04373169]
[30.35989952 149.49003601]
[30.37541199 131.95343018]
[46.84962845 123.75666809]
[54.83806992 111.06081390]
[62.82651138 98.36495209]
[49.72927475 105.67675781]
[39.30360413 116.46125031]
[25.78552055 122.96213531]
[10.85201359 124.37293243]
[-3.64434433 120.51863861]
[-15.90520859 111.87738800]
[-24.40955925 99.52117920]
[-28.10239220 84.98284912]
[-26.52558899 70.06595612]
[-19.87476349 56.62100983]
[-8.97498035 46.31592560]
[4.82158709 40.42910004]
[19.80340767 39.69081879]
[34.11191177 44.19267273]
[45.97206497 53.37617874]
[53.91223145 66.10129547]
[65.19149017 75.98959351]
[60.03371048 61.90423203]
[54.87593079 47.81887436]
[42.86520386 37.52067184]
[45.75441742 22.90897179]
[40.59663773 8.82361507]
[35.43885803 -5.26174307]
[30.28107834 -19.34710121]
[25.12329865 -33.43246078]
[19.96551895 -47.51781845]
[5.56890488 -58.97749329]
[9.21986771 -76.12984467]
[3.81568599 -90.12251282]
[-10.21252251 -97.90640259]
[-12.73107815 -113.75053406]
[-1.80796087 -125.50064087]
[14.17754841 -124.14305115]
[22.96273613 -110.71919250]
[17.80835533 -95.52669525]
[23.21253777 -81.53402710]
[34.15694046 -76.33905792]
[38.76447296 -64.70204926]
[34.05087662 -52.67559814]
[39.20865631 -38.59024048]
[44.36643600 -24.50488091]
[49.52421570 -10.41952324]
[54.68199539 3.66583514]
[59.83977509 17.75119400]
[71.48158264 27.04191971]
[68.96128845 42.66109467]
[74.11907196 56.74645615]
[79.27684784 70.83181000]
[86.70304108 71.88140106]
[88.80245209 57.02904892]
[103.65477753 59.12868881]
[101.55542755 73.98058319]
[108.98162842 75.03017426]
[117.84095001 62.92594528]
[126.70026398 50.82171249]
[135.55958557 38.71747971]
[130.68833923 23.98484612]
[135.43910217 9.21291733]
[147.98510742 0.08180366]
[163.50216675 0.10260429]
[176.02366638 9.26732063]
[180.73480225 24.05193329]
[175.82406616 38.77145767]
[163.17974854 47.76593399]
[147.66381836 47.57680130]
[138.80450439 59.68103409]
[129.94517517 71.78526306]
[121.08585358 83.88949585]
[124.44966888 90.59283447]
[137.85646057 83.86542511]
[144.58364868 97.27233124]
[131.17730713 103.99951172]
[134.54112244 110.70285034]
[149.54054260 110.83448029]
[164.53996277 110.96611023]
[173.17782593 107.90506744]
[179.80087280 111.23397827]
[194.79566956 111.62882996]
[209.79048157 112.02367401]
[217.26283264 104.06939697]
[227.66921997 101.60744476]
[237.50061035 105.21888733]
[243.57781982 113.47766876]
[258.54953003 114.39850616]
[273.52124023 115.31934357]
[284.15737915 103.85608673]
[299.67993164 101.96281433]
[312.75961304 110.53347015]
[317.22058105 125.52125549]
[310.95651245 139.84939575]
[296.92514038 146.75257874]
[281.75158691 142.97132874]
[272.60040283 130.29104614]
[257.62869263 129.37020874]
[242.65698242 128.44937134]
[226.05680847 138.33219910]
[209.39562988 127.01847839]
[194.40083313 126.62362671]
[179.40602112 126.22878265]
[164.40834045 125.96553040]
[149.40890503 125.83390045]
[134.40948486 125.70227814]
[128.76057434 139.59794617]
[139.59729004 149.96931458]
[150.43402100 160.34069824]
[161.27073669 170.71206665]
[172.10746765 181.08345032]
[187.73100281 187.66685486]
[185.72991943 204.50228882]
[168.99845886 207.23991394]
[161.73608398 191.92016602]
[150.89936829 181.54879761]
[140.06263733 171.17741394]
[129.22592163 160.80604553]
[118.38919830 150.43467712]
[81.64025879 134.95764160]
[75.52236938 106.35339355]
[67.53392792 119.04925537]
[59.54548645 131.74511719]
[61.64072800 144.49122620]
[54.70221710 154.90786743]
[42.91360855 157.70005798]
[34.70358658 170.25375366]
[26.49356461 182.80746460]
[37.93538666 192.53823853]
[48.06735611 203.62635803]
[56.72968292 215.89694214]
[63.78574753 229.15647888]
[69.12426758 243.19583130]
[72.66104126 257.79357910]
[74.34029388 272.71951294]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 171]
[42 170]
[43 169]
[45 166]
[46 165]
[47 164]
[64 95]
[65 94]
[66 93]
[68 91]
[69 90]
[70 89]
[71 88]
[72 87]
[73 86]
[75 83]
[76 82]
[100 115]
[101 114]
[102 113]
[103 112]
[120 149]
[121 148]
[122 147]
[124 146]
[125 145]
[126 144]
[130 142]
[131 141]
[132 140]
[150 162]
[151 161]
[152 160]
[153 159]
[154 158]
] def

init

% Start Annotations
41 171 0.0 1 colorpair
42 170 0.0 0.2 colorpair
43 169 0.16 1 colorpair
45 166 0.16 1 colorpair
46 165 0.0 0.2 colorpair
47 164 0.0 1 colorpair
64 95 0.0 1 colorpair
65 94 0.16 0.2 colorpair
66 93 0.16 1 colorpair
68 91 0.0 1 colorpair
69 90 0.16 0.2 colorpair
70 89 0.16 1 colorpair
71 88 0.16 1 colorpair
72 87 0.16 1 colorpair
73 86 0.0 1 colorpair
75 83 0.0 1 colorpair
76 82 0.16 0.2 colorpair
100 115 0.0 1 colorpair
101 114 0.16 1 colorpair
102 113 0.0 1 colorpair
103 112 0.16 1 colorpair
120 149 0.0 1 colorpair
121 148 0.0 1 colorpair
122 147 0.16 1 colorpair
124 146 0.0 1 colorpair
125 145 0.0 1 colorpair
126 144 0.0 1 colorpair
130 142 0.16 1 colorpair
131 141 0.16 1 colorpair
132 140 0.0 1 colorpair
150 162 0.16 1 colorpair
151 161 0.0 1 colorpair
152 160 0.0 1 colorpair
153 159 0.0 1 colorpair
154 158 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
42 170 2 gmark
43 cmark
45 cmark
46 165 2 gmark
65 94 2 gmark
94 cmark
66 cmark
69 90 2 gmark
69 cmark
90 cmark
70 cmark
71 cmark
88 cmark
72 cmark
87 cmark
76 82 2 gmark
76 cmark
82 cmark
114 cmark
103 cmark
122 cmark
130 cmark
131 cmark
150 cmark

% End Annotations
showpage
end
%%EOF
