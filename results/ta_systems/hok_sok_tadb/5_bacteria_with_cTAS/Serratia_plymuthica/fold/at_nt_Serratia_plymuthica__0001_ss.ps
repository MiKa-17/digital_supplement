%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:25:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGUUCUGAGGCUGAUGAUUAUCUGCAUGACGCUGAUUGCGUUCAUGUUGAUCACUCGCGGUUCGCUAUGUGAACUGCGCAUCAAACUGGGAGACACGGAGGUUGCGGCCAUUUUGGCUUACGAAUCCGAAGGGUAAGGCAACCCAACGGCGGGG__UUCGC_CCCGCCCGUUGGUUGUUAGACAGAGGAUCCAUGAGCACCCUCUU________\
) } def
/len { sequence length } bind def

/coor [
[-218.97450256 395.59963989]
[-225.97190857 401.53921509]
[-233.45803833 406.84838867]
[-241.37628174 411.48721313]
[-249.66677856 415.42071533]
[-258.26684570 418.61932373]
[-267.11151123 421.05892944]
[-276.13391113 422.72128296]
[-285.26589966 423.59390259]
[-294.43850708 423.67034912]
[-303.58239746 422.95013428]
[-312.62857056 421.43884277]
[-321.50872803 419.14797974]
[-330.15576172 416.09497070]
[-338.50445557 412.30297852]
[-346.49179077 407.80078125]
[-354.05749512 402.62246704]
[-361.14450073 396.80725098]
[-367.69934082 390.39910889]
[-373.67260742 383.44659424]
[-379.01922607 376.00222778]
[-392.11730957 383.31253052]
[-405.21539307 390.62280273]
[-413.49499512 404.10458374]
[-428.37933350 403.55099487]
[-441.47741699 410.86126709]
[-454.57550049 418.17153931]
[-467.67358398 425.48181152]
[-480.77166748 432.79208374]
[-493.86975098 440.10235596]
[-502.94058228 456.12939453]
[-520.46575928 455.18545532]
[-533.45611572 462.68545532]
[-538.98052979 477.74734497]
[-554.24578857 482.68218994]
[-567.54162598 473.70443726]
[-568.66864014 457.70101929]
[-556.76232910 446.94839478]
[-540.95611572 449.69506836]
[-527.96575928 442.19506836]
[-524.53442383 430.59783936]
[-513.77655029 424.24246216]
[-501.18002319 427.00427246]
[-488.08193970 419.69400024]
[-474.98385620 412.38372803]
[-461.88577271 405.07345581]
[-448.78768921 397.76318359]
[-435.68960571 390.45291138]
[-428.34686279 377.49398804]
[-412.52569580 377.52471924]
[-399.42758179 370.21444702]
[-386.32949829 362.90414429]
[-392.08151245 347.64492798]
[-395.41223145 331.68133545]
[-396.24200439 315.39511108]
[-394.55099487 299.17565918]
[-390.37963867 283.41082764]
[-404.15289307 277.46963501]
[-417.92614746 271.52844238]
[-431.69937134 265.58724976]
[-445.47262573 259.64605713]
[-459.24584961 253.70486450]
[-471.10455322 263.38110352]
[-486.10400391 266.42660522]
[-500.79745483 262.14157104]
[-511.80841064 251.51060486]
[-516.60668945 236.97666931]
[-514.08966064 221.87954712]
[-504.83569336 209.68844604]
[-490.97131348 203.20478821]
[-475.68246460 203.91847229]
[-462.48236084 211.66551208]
[-454.40435791 224.66566467]
[-453.30465698 239.93161011]
[-439.53143311 245.87281799]
[-425.75817871 251.81401062]
[-411.98492432 257.75521851]
[-398.21170044 263.69641113]
[-384.43844604 269.63760376]
[-372.10189819 250.95414734]
[-356.09564209 235.29162598]
[-337.13925171 223.35749817]
[-316.08563232 215.69155884]
[-293.88265991 212.64147949]
[-271.53048706 214.34704590]
[-250.03649902 220.73381042]
[-230.36991882 231.51625061]
[-213.41806030 246.21060181]
[-199.94636536 264.15652466]
[-186.54187012 257.42453003]
[-173.13739014 250.69255066]
[-170.99427795 234.41554260]
[-159.45494080 222.50491333]
[-142.92587280 219.79373169]
[-127.89073944 227.54626465]
[-114.58557892 220.62002563]
[-106.86904144 207.88015747]
[-91.05545044 208.37101746]
[-77.75028992 201.44479370]
[-64.44512177 194.51855469]
[-65.04929352 173.75903320]
[-55.00182343 155.49800110]
[-37.01489639 144.82127380]
[-16.02365303 144.74601746]
[2.16779113 155.36846924]
[14.70010853 147.12582397]
[27.23242569 138.88319397]
[39.76474380 130.64056396]
[52.29705811 122.39792633]
[64.82937622 114.15528870]
[60.50244904 99.69960022]
[62.12383270 84.08216858]
[69.90815735 69.74557495]
[83.07304382 59.10711288]
[99.89836121 54.15598679]
[117.94590759 56.09561157]
[119.06481171 40.31402206]
[132.52297974 33.93225479]
[140.76560974 21.39993858]
[149.00825500 8.86762238]
[157.25088501 -3.66469502]
[165.49351501 -16.19701195]
[158.02351379 -29.55581856]
[157.62890625 -44.85623932]
[164.40034485 -58.58234787]
[176.78182983 -67.57998657]
[191.92816162 -69.78157043]
[206.35884094 -64.68118286]
[216.75781250 -53.45085526]
[220.73544312 -38.67124176]
[217.37771606 -23.73858261]
[207.45620728 -12.08429813]
[193.25082397 -6.38645554]
[178.02583313 -7.95437765]
[169.78320312 4.57793951]
[161.54055786 17.11025620]
[153.29792786 29.64257431]
[145.05529785 42.17489243]
[144.52597046 57.06008911]
[130.47822571 64.33824921]
[134.32229614 70.77821350]
[147.20222473 63.09007263]
[160.08215332 55.40193558]
[172.96220398 47.71401215]
[180.64991760 60.59419632]
[167.77029419 68.28186035]
[154.89036560 75.97000122]
[142.01043701 83.65814209]
[145.85450745 90.09810638]
[160.79742432 88.79076385]
[175.74034119 87.48342896]
[190.68325806 86.17609406]
[205.62619019 84.86875916]
[220.56910706 83.56142426]
[235.50212097 82.14545441]
[245.28819275 69.73544312]
[260.99279785 67.96303558]
[273.29864502 77.87976837]
[274.90490723 93.60221863]
[264.85861206 105.80253601]
[249.12007141 107.24249268]
[237.02664185 97.06777954]
[230.69435120 100.87328339]
[221.87643433 98.50434113]
[206.93351746 99.81167603]
[191.99060059 101.11901855]
[177.04768372 102.42635345]
[162.10475159 103.73368835]
[147.16183472 105.04102325]
[138.63748169 124.07986450]
[123.26937103 136.89880371]
[104.65438080 141.45915222]
[86.75783539 137.54937744]
[73.07201385 126.68760681]
[60.53969574 134.93023682]
[48.00737762 143.17288208]
[35.47505951 151.41551208]
[22.94274330 159.65814209]
[10.41042614 167.90078735]
[12.94197655 177.10778809]
[13.22464848 186.63827515]
[11.24904633 195.95170593]
[7.13366795 204.52139282]
[1.11782217 211.86433411]
[-6.45228100 217.56843567]
[-15.14344978 221.31556702]
[-24.46029472 222.89938354]
[-33.87347031 222.23661804]
[-42.84974289 219.37147522]
[-50.88220596 214.47270203]
[-57.51889420 207.82373047]
[-70.82405853 214.74995422]
[-84.12921906 221.67617798]
[-92.79743195 234.91146851]
[-107.65934753 233.92518616]
[-120.96451569 240.85142517]
[-121.98136902 254.59544373]
[-129.59536743 265.95272827]
[-141.72944641 272.01705933]
[-155.16725159 271.30053711]
[-166.40539551 264.09704590]
[-179.80989075 270.82904053]
[-193.21438599 277.56100464]
[-190.06298828 286.19155884]
[-187.67301941 295.06243896]
[-186.06240845 304.10668945]
[-185.24320984 313.25592041]
[-185.22151184 322.44107056]
[-185.99731445 331.59271240]
[-187.56468201 340.64178467]
[-189.91165161 349.51992798]
[-193.02037048 358.16012573]
[-196.86724854 366.49716187]
[-201.42312622 374.46813965]
[-206.65350342 382.01287842]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 52]
[22 51]
[23 50]
[25 48]
[26 47]
[27 46]
[28 45]
[29 44]
[30 43]
[32 40]
[33 39]
[57 79]
[58 78]
[59 77]
[60 76]
[61 75]
[62 74]
[89 203]
[90 202]
[91 201]
[95 196]
[96 195]
[98 193]
[99 192]
[100 191]
[105 179]
[106 178]
[107 177]
[108 176]
[109 175]
[110 174]
[116 140]
[118 138]
[119 137]
[120 136]
[121 135]
[122 134]
[149 169]
[150 168]
[151 167]
[152 166]
[153 165]
[154 164]
[155 162]
] def

init

% Start Annotations
21 52 0.0 1 colorpair
22 51 0.16 0.6 colorpair
23 50 0.16 1 colorpair
25 48 0.0 1 colorpair
26 47 0.16 0.6 colorpair
27 46 0.16 1 colorpair
28 45 0.16 1 colorpair
29 44 0.16 1 colorpair
30 43 0.0 1 colorpair
32 40 0.0 1 colorpair
33 39 0.16 0.6 colorpair
57 79 0.0 0.2 colorpair
58 78 0.0 1 colorpair
59 77 0.0 1 colorpair
60 76 0.16 1 colorpair
61 75 0.16 1 colorpair
62 74 0.32 1 colorpair
89 203 0.16 0.6 colorpair
90 202 0.0 0.6 colorpair
91 201 0.0 0.6 colorpair
95 196 0.0 0.6 colorpair
96 195 0.0 0.6 colorpair
98 193 0.0 0.6 colorpair
99 192 0.0 0.6 colorpair
100 191 0.0 0.6 colorpair
105 179 0.0 0.6 colorpair
106 178 0.0 0.2 colorpair
107 177 0.16 0.6 colorpair
108 176 0.16 0.6 colorpair
109 175 0.0 0.6 colorpair
110 174 0.0 0.6 colorpair
116 140 0.0 1 colorpair
118 138 0.0 1 colorpair
119 137 0.0 1 colorpair
120 136 0.0 0.6 colorpair
121 135 0.0 1 colorpair
122 134 0.0 1 colorpair
149 169 0.0 0.6 colorpair
150 168 0.0 0.6 colorpair
151 167 0.0 0.6 colorpair
152 166 0.0 0.6 colorpair
153 165 0.0 0.6 colorpair
154 164 0.0 0.6 colorpair
155 162 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
22 51 1 gmark
51 cmark
23 cmark
26 47 1 gmark
26 cmark
47 cmark
27 cmark
28 cmark
45 cmark
29 cmark
44 cmark
33 39 1 gmark
33 cmark
39 cmark
57 79 2 gmark
60 cmark
75 cmark
62 cmark
74 cmark
89 203 1 gmark
203 cmark
90 202 1 gmark
91 201 1 gmark
95 196 1 gmark
96 195 1 gmark
98 193 1 gmark
99 192 1 gmark
100 191 1 gmark
105 179 1 gmark
106 178 2 gmark
107 177 1 gmark
107 cmark
108 176 1 gmark
176 cmark
109 175 1 gmark
110 174 1 gmark
120 136 1 gmark
149 169 1 gmark
150 168 1 gmark
151 167 1 gmark
152 166 1 gmark
153 165 1 gmark
154 164 1 gmark
155 162 1 gmark

% End Annotations
showpage
end
%%EOF
