%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:26:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__CAAGCAGACAAAGGAGACCGUAGUCGCAAUCAUCGCCAUCUGUAUUACCGCCCUGAGAGCCACGCUAAUGACAAGAAAAGACCUCUGCGAGGUAAGCAUUAGAAACCGCCAGAUGGAAGUCAAAGCCGUCACAGCUUACGAACCGAAGAA_\
) } def
/len { sequence length } bind def

/coor [
[68.64667511 157.66894531]
[58.82085037 146.33522034]
[56.37055588 131.53671265]
[62.01893234 117.64081573]
[74.09900665 108.74858093]
[89.04654694 107.48450470]
[74.09645844 108.70713806]
[59.14636993 109.92977905]
[46.02278137 118.76617432]
[32.70719528 112.09201050]
[17.75710678 113.31465149]
[2.80701756 114.53729248]
[-5.76391649 129.08592224]
[-21.15619087 135.61505127]
[-37.25107193 131.74348450]
[-47.77716064 119.18268585]
[-62.69919968 120.71002960]
[-77.62123871 122.23738098]
[-92.54327393 123.76472473]
[-107.46531677 125.29206848]
[-122.38735199 126.81941223]
[-137.30938721 128.34675598]
[-152.23143005 129.87409973]
[-167.15347290 131.40144348]
[-182.07550049 132.92878723]
[-196.99754333 134.45613098]
[-211.91958618 135.98347473]
[-219.77159119 149.23686218]
[-233.75852966 155.25508118]
[-248.43365479 151.92271423]
[-258.21548462 140.72209167]
[-273.13751221 142.24943542]
[-288.05957031 143.77679443]
[-299.26385498 155.25909424]
[-315.21182251 153.51501465]
[-323.66955566 139.88246155]
[-318.14898682 124.81916809]
[-302.88504028 119.88039398]
[-289.58691406 128.85475159]
[-274.66488647 127.32740784]
[-259.74282837 125.80005646]
[-252.43293762 112.85002136]
[-238.73721313 106.61375427]
[-223.82109070 109.67360687]
[-213.44692993 121.06144714]
[-198.52488708 119.53409576]
[-183.60284424 118.00675201]
[-168.68081665 116.47940826]
[-153.75877380 114.95206451]
[-138.83673096 113.42472076]
[-123.91469574 111.89737701]
[-108.99266052 110.37003326]
[-94.07061768 108.84268188]
[-79.14858246 107.31533813]
[-64.22654724 105.78799438]
[-49.30450439 104.26065063]
[-43.67760468 92.11698151]
[-32.68806839 84.28913116]
[-19.15649796 82.91802216]
[-6.62179327 88.47015381]
[1.58437824 99.58720398]
[16.53446770 98.36456299]
[31.48455620 97.14192200]
[43.53881836 88.39297485]
[57.92373276 94.97969055]
[72.87381744 93.75704956]
[87.82390594 92.53441620]
[100.60551453 84.68389130]
[108.45603180 71.90229034]
[116.30654907 59.12068939]
[124.15707397 46.33908844]
[132.00758362 33.55748749]
[125.33860016 18.04464149]
[129.17021179 1.76980734]
[141.80645752 -8.92410946]
[158.15991211 -9.99013138]
[165.74807739 -22.92921257]
[173.33622742 -35.86829376]
[180.92439270 -48.80737686]
[188.38018799 -61.82318115]
[195.70281982 -74.91436005]
[203.02546692 -88.00553131]
[210.34811401 -101.09671021]
[217.53684998 -114.26189423]
[224.59092712 -127.49971771]
[231.64500427 -140.73754883]
[238.69908142 -153.97537231]
[240.81175232 -170.79716492]
[257.56100464 -173.42379761]
[264.72161865 -158.05624390]
[251.93690491 -146.92127991]
[244.88282776 -133.68345642]
[237.82875061 -120.44564056]
[230.77467346 -107.20781708]
[230.40238953 -99.78102875]
[223.43928528 -93.77407074]
[216.11663818 -80.68289185]
[208.79400635 -67.59171295]
[201.47135925 -54.50053787]
[200.94766235 -47.08288956]
[193.86347961 -41.21921539]
[186.27531433 -28.28013420]
[178.68714905 -15.34105206]
[171.09899902 -2.40197134]
[177.56826782 9.31464672]
[177.38659668 22.80583763]
[170.49429321 34.53100204]
[158.60685730 41.35988617]
[144.78918457 41.40800476]
[136.93867493 54.18960953]
[129.08815002 66.97120667]
[121.23763275 79.75280762]
[113.38711548 92.53441620]
[115.97509003 107.30947113]
[127.70256805 116.66181946]
[139.43003845 126.01416779]
[151.15750122 135.36651611]
[162.88497925 144.71885681]
[171.60198975 147.64839172]
[174.75372314 154.38354492]
[186.28797913 163.97317505]
[197.82225037 173.56280518]
[209.35650635 183.15242004]
[226.71345520 181.21646118]
[239.86119080 192.19332886]
[241.00860596 208.94471741]
[252.73608398 218.29705811]
[264.46356201 227.64941406]
[279.75421143 224.37374878]
[293.54879761 231.73872375]
[299.33398438 246.26683044]
[294.37811279 261.09832764]
[281.02124023 269.23025513]
[265.57006836 266.82293701]
[255.32015991 255.01306152]
[255.11120605 239.37687683]
[243.38372803 230.02453613]
[231.65626526 220.67218018]
[219.14395142 223.89282227]
[206.88505554 219.23173523]
[199.45556641 208.18814087]
[199.76687622 194.68667603]
[188.23262024 185.09706116]
[176.69836426 175.50743103]
[165.16410828 165.91781616]
[153.53263855 156.44633484]
[141.80516052 147.09397888]
[130.07768250 137.74163818]
[118.35021973 128.38929749]
[106.62274170 119.03694153]
[111.39101410 133.25888062]
[108.02001953 147.87518311]
[97.50461578 158.57221985]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 67]
[7 66]
[8 65]
[10 63]
[11 62]
[12 61]
[16 56]
[17 55]
[18 54]
[19 53]
[20 52]
[21 51]
[22 50]
[23 49]
[24 48]
[25 47]
[26 46]
[27 45]
[31 41]
[32 40]
[33 39]
[68 113]
[69 112]
[70 111]
[71 110]
[72 109]
[76 104]
[77 103]
[78 102]
[79 101]
[80 99]
[81 98]
[82 97]
[83 96]
[84 94]
[85 93]
[86 92]
[87 91]
[114 150]
[115 149]
[116 148]
[117 147]
[118 146]
[120 145]
[121 144]
[122 143]
[123 142]
[126 138]
[127 137]
[128 136]
] def

init

% Start Annotations
6 67 0.0 1 colorpair
7 66 0.0 1 colorpair
8 65 0.0 0.2 colorpair
10 63 0.0 0.2 colorpair
11 62 0.0 0.2 colorpair
12 61 0.16 1 colorpair
16 56 0.0 0.2 colorpair
17 55 0.0 0.2 colorpair
18 54 0.16 1 colorpair
19 53 0.16 1 colorpair
20 52 0.16 1 colorpair
21 51 0.16 1 colorpair
22 50 0.0 1 colorpair
23 49 0.0 1 colorpair
24 48 0.0 0.2 colorpair
25 47 0.0 1 colorpair
26 46 0.0 1 colorpair
27 45 0.0 0.2 colorpair
31 41 0.0 0.2 colorpair
32 40 0.0 0.2 colorpair
33 39 0.16 1 colorpair
68 113 0.16 1 colorpair
69 112 0.0 0.2 colorpair
70 111 0.16 1 colorpair
71 110 0.0 1 colorpair
72 109 0.16 1 colorpair
76 104 0.0 0.2 colorpair
77 103 0.0 0.2 colorpair
78 102 0.0 1 colorpair
79 101 0.16 1 colorpair
80 99 0.0 0.2 colorpair
81 98 0.0 0.2 colorpair
82 97 0.16 1 colorpair
83 96 0.0 0.2 colorpair
84 94 0.16 1 colorpair
85 93 0.0 1 colorpair
86 92 0.0 1 colorpair
87 91 0.0 0.2 colorpair
114 150 0.16 1 colorpair
115 149 0.0 0.2 colorpair
116 148 0.16 1 colorpair
117 147 0.0 0.2 colorpair
118 146 0.0 1 colorpair
120 145 0.16 1 colorpair
121 144 0.0 0.2 colorpair
122 143 0.0 1 colorpair
123 142 0.16 1 colorpair
126 138 0.0 0.2 colorpair
127 137 0.0 1 colorpair
128 136 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
8 65 2 gmark
10 63 2 gmark
11 62 2 gmark
12 cmark
61 cmark
16 56 2 gmark
17 55 2 gmark
18 cmark
54 cmark
19 cmark
53 cmark
20 cmark
21 cmark
51 cmark
24 48 2 gmark
27 45 2 gmark
31 41 2 gmark
32 40 2 gmark
33 cmark
39 cmark
113 cmark
69 112 2 gmark
70 cmark
111 cmark
72 cmark
109 cmark
76 104 2 gmark
77 103 2 gmark
79 cmark
80 99 2 gmark
81 98 2 gmark
82 cmark
97 cmark
83 96 2 gmark
84 cmark
94 cmark
87 91 2 gmark
114 cmark
150 cmark
115 149 2 gmark
148 cmark
117 147 2 gmark
120 cmark
145 cmark
121 144 2 gmark
123 cmark
126 138 2 gmark

% End Annotations
showpage
end
%%EOF
