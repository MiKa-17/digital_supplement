%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:26:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAGAGGCUACUCUACAUGUGUCGAGCAUAUAGGGGCCUCAAGUUGAUGUUAAAGUCACUUGGGGCUUUUAUCUAUCUGCCUUUCGGUCAUACCUGAGACAGUUAGCCUCAAGCACCCGC\
) } def
/len { sequence length } bind def

/coor [
[145.83526611 409.98388672]
[144.68702698 395.02789307]
[143.53878784 380.07189941]
[128.97004700 369.12863159]
[126.87363434 350.71041870]
[139.01754761 336.28915405]
[137.10714722 321.41131592]
[135.19674683 306.53347778]
[133.28634644 291.65560913]
[131.37593079 276.77777100]
[129.46553040 261.89993286]
[127.55513000 247.02207947]
[124.69926453 232.29644775]
[120.90957642 217.78306580]
[117.11988831 203.26968384]
[104.23104858 199.54981995]
[94.80903625 189.84870911]
[91.41275024 176.64639282]
[95.04105377 163.39329529]
[104.84224701 153.60844421]
[101.42444611 139.00302124]
[98.00664520 124.39759064]
[94.58883667 109.79216003]
[90.98480225 95.23155975]
[87.19510651 80.71817780]
[83.40541840 66.20479584]
[79.61573029 51.69141769]
[75.27291870 37.33384323]
[70.38335419 23.15314293]
[65.49379730 8.97244549]
[53.68065643 -1.55182791]
[56.84663010 -16.10606766]
[51.95706940 -30.28676605]
[47.06750870 -44.46746445]
[42.17795181 -58.64816284]
[37.28839111 -72.82886505]
[31.68113518 -86.74140167]
[25.37081146 -100.34947968]
[19.06048775 -113.95755768]
[12.75016308 -127.56563568]
[6.43983889 -141.17370605]
[0.12951484 -154.78179932]
[-6.18080950 -168.38987732]
[-12.49113369 -181.99795532]
[-18.80145836 -195.60603333]
[-25.11178207 -209.21411133]
[-31.63647652 -215.77613831]
[-31.40452957 -223.25125122]
[-37.36526489 -237.01605225]
[-43.32600021 -250.78085327]
[-58.11229706 -256.36126709]
[-64.54562378 -270.79690552]
[-58.80920029 -285.52337646]
[-44.30634308 -291.80371094]
[-29.64134216 -285.91192627]
[-23.51468277 -271.34347534]
[-29.56120110 -256.74157715]
[-23.60046577 -242.97677612]
[-17.63973236 -229.21199036]
[-11.50370312 -215.52442932]
[-5.19337893 -201.91635132]
[1.11694539 -188.30827332]
[7.42726946 -174.70019531]
[13.73759365 -161.09211731]
[20.04791832 -147.48403931]
[26.35824203 -133.87596130]
[32.66856766 -120.26788330]
[38.97888947 -106.65979767]
[45.28921509 -93.05171967]
[48.00100708 -91.98325348]
[50.42567444 -89.71301270]
[52.07861710 -86.35520172]
[52.52992630 -82.20618439]
[51.46908951 -77.71842194]
[56.35865021 -63.53772354]
[61.24820709 -49.35702515]
[66.13777161 -35.17632675]
[71.02732849 -20.99562645]
[82.49073029 -11.48565197]
[79.67449188 4.08288574]
[84.56405640 18.26358414]
[89.45361328 32.44428253]
[92.56725311 34.32310867]
[94.87825775 37.86256790]
[95.58876038 42.64538574]
[94.12911224 47.90172577]
[97.91880035 62.41510773]
[101.70848846 76.92848969]
[105.49817657 91.44187164]
[110.47386932 97.91207886]
[109.19426727 106.37435150]
[112.61207581 120.97978210]
[116.02987671 135.58522034]
[119.44767761 150.19064331]
[135.08215332 156.49752808]
[143.82699585 170.71690369]
[142.42999268 187.18548584]
[131.63327026 199.47999573]
[135.42295837 213.99337769]
[139.21264648 228.50675964]
[149.43315125 217.52761841]
[164.40704346 218.41229248]
[173.26365662 230.51849365]
[169.57331848 245.05746460]
[156.01510620 251.47425842]
[142.43298340 245.11167908]
[144.34338379 259.98953247]
[146.25378418 274.86737061]
[148.16418457 289.74520874]
[150.07458496 304.62307739]
[151.98500061 319.50091553]
[153.89540100 334.37875366]
[164.65631104 339.75009155]
[171.37394714 349.58041382]
[172.44622803 361.31729126]
[167.71884155 371.98159790]
[158.49476624 378.92367554]
[159.64300537 393.87966919]
[160.79124451 408.83563232]
[170.49539185 422.05538940]
[163.65199280 436.95840454]
[147.30096436 438.21374512]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 119]
[2 118]
[3 117]
[6 112]
[7 111]
[8 110]
[9 109]
[10 108]
[11 107]
[12 106]
[13 100]
[14 99]
[15 98]
[20 94]
[21 93]
[22 92]
[23 91]
[24 89]
[25 88]
[26 87]
[27 86]
[28 82]
[29 81]
[30 80]
[32 78]
[33 77]
[34 76]
[35 75]
[36 74]
[37 69]
[38 68]
[39 67]
[40 66]
[41 65]
[42 64]
[43 63]
[44 62]
[45 61]
[46 60]
[48 59]
[49 58]
[50 57]
] def

init

% Start Annotations
1 119 0.0 1 colorpair
2 118 0.0 1 colorpair
3 117 0.0 1 colorpair
6 112 0.0 1 colorpair
7 111 0.0 1 colorpair
8 110 0.0 1 colorpair
9 109 0.0 1 colorpair
10 108 0.0 1 colorpair
11 107 0.0 1 colorpair
12 106 0.0 1 colorpair
13 100 0.0 1 colorpair
14 99 0.0 1 colorpair
15 98 0.0 1 colorpair
20 94 0.0 1 colorpair
21 93 0.0 1 colorpair
22 92 0.0 1 colorpair
23 91 0.0 1 colorpair
24 89 0.0 1 colorpair
25 88 0.0 1 colorpair
26 87 0.0 1 colorpair
27 86 0.0 1 colorpair
28 82 0.0 1 colorpair
29 81 0.0 1 colorpair
30 80 0.0 1 colorpair
32 78 0.0 1 colorpair
33 77 0.0 1 colorpair
34 76 0.0 1 colorpair
35 75 0.0 1 colorpair
36 74 0.0 1 colorpair
37 69 0.0 1 colorpair
38 68 0.0 1 colorpair
39 67 0.0 1 colorpair
40 66 0.0 1 colorpair
41 65 0.0 1 colorpair
42 64 0.0 1 colorpair
43 63 0.0 1 colorpair
44 62 0.0 1 colorpair
45 61 0.0 1 colorpair
46 60 0.0 1 colorpair
48 59 0.0 1 colorpair
49 58 0.0 1 colorpair
50 57 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
