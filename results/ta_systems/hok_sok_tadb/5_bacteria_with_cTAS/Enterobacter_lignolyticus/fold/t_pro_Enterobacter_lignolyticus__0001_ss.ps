%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:26:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AACAAGCAGACAAAGGAGACCGUAGUCGCAAUCAUCGCCAUCUGUAUUACCGCCCUGAGAGCCACGCUAAUGACAAGAAAAGACCUCUGCGAGGUAAGCAUUAGAAACCGCCAGAUGGAAGUCAAAGCCGUCACAGCUUACGAACCGAAGAAG\
) } def
/len { sequence length } bind def

/coor [
[98.97529602 177.81452942]
[84.77867889 172.97137451]
[77.99596405 159.59248352]
[82.48046112 145.27853394]
[95.68450165 138.16140747]
[110.10706329 142.28468323]
[104.15546417 128.51594543]
[98.20385742 114.74719238]
[103.37678528 128.82699585]
[100.49835205 143.54823303]
[90.40312195 154.64265442]
[76.01808167 158.89360046]
[61.51397705 155.06857300]
[51.09608078 144.27656555]
[47.78492355 129.64657593]
[52.54053497 115.42040253]
[63.98408508 105.72270966]
[78.79524231 103.36495209]
[63.87319946 104.89229584]
[48.95116425 106.41963959]
[34.02912521 107.94698334]
[19.10708618 109.47433472]
[4.18504906 111.00167847]
[-10.73698902 112.52902222]
[-25.65902710 114.05636597]
[-40.58106613 115.58370972]
[-55.50310135 117.11105347]
[-63.35512161 130.36442566]
[-77.34205627 136.38265991]
[-92.01718140 133.05029297]
[-101.79901123 121.84967041]
[-116.72104645 123.37701416]
[-131.64308167 124.90435791]
[-142.84738159 136.38665771]
[-158.79534912 134.64259338]
[-167.25308228 121.01004028]
[-161.73251343 105.94673920]
[-146.46856689 101.00796509]
[-133.17042542 109.98232269]
[-118.24839783 108.45497894]
[-103.32635498 106.92763519]
[-96.01647186 93.97759247]
[-82.32073975 87.74133301]
[-67.40461731 90.80117798]
[-57.03044891 102.18901825]
[-42.10840988 100.66167450]
[-27.18637276 99.13433075]
[-12.26433372 97.60697937]
[2.65770411 96.07963562]
[17.57974243 94.55229187]
[32.50178146 93.02494812]
[47.42381668 91.49760437]
[62.34585571 89.97026062]
[77.26789093 88.44291687]
[99.95095062 86.23551178]
[107.53911591 73.29643250]
[115.12727356 60.35734940]
[122.71543121 47.41827011]
[130.30358887 34.47918701]
[130.61054993 18.66095924]
[143.72322083 11.59647083]
[151.31138611 -1.34261036]
[158.89955139 -14.28169155]
[166.48770142 -27.22077370]
[174.07586670 -40.15985489]
[171.58389282 -52.85509491]
[178.21879578 -63.49117279]
[189.94084167 -66.62704468]
[197.79136658 -79.40864563]
[205.64187622 -92.19024658]
[213.49240112 -104.97184753]
[221.34292603 -117.75344849]
[214.67393494 -133.26629639]
[218.50555420 -149.54113770]
[231.14178467 -160.23504639]
[247.49523926 -161.30107117]
[255.08340454 -174.24015808]
[262.67156982 -187.17922974]
[270.25973511 -200.11831665]
[277.71551514 -213.13412476]
[285.03814697 -226.22529602]
[292.36080933 -239.31646729]
[299.68344116 -252.40765381]
[306.87219238 -265.57284546]
[313.92626953 -278.81066895]
[320.98034668 -292.04849243]
[328.03442383 -305.28631592]
[330.14709473 -322.10809326]
[346.89633179 -324.73474121]
[354.05697632 -309.36718750]
[341.27224731 -298.23223877]
[334.21817017 -284.99441528]
[327.16409302 -271.75659180]
[320.11001587 -258.51876831]
[319.73773193 -251.09196472]
[312.77462769 -245.08500671]
[305.45196533 -231.99383545]
[298.12933350 -218.90264893]
[290.80670166 -205.81147766]
[290.28298950 -198.39382935]
[283.19879150 -192.53015137]
[275.61065674 -179.59107971]
[268.02249146 -166.65199280]
[260.43432617 -153.71290588]
[266.90359497 -141.99629211]
[266.72192383 -128.50509644]
[259.82962036 -116.77993774]
[247.94218445 -109.95104980]
[234.12452698 -109.90293121]
[226.27400208 -97.12133026]
[218.42349243 -84.33972931]
[210.57296753 -71.55812836]
[202.72244263 -58.77652740]
[203.21879578 -41.26024628]
[187.01495361 -32.57169342]
[179.42678833 -19.63261223]
[171.83862305 -6.69353151]
[164.25047302 6.24554968]
[156.66230774 19.18463135]
[156.89810181 34.07736969]
[143.24267578 42.06734848]
[135.65451050 55.00642776]
[128.06636047 67.94551086]
[120.47819519 80.88459015]
[112.89003754 93.82366943]
[111.97261047 108.79559326]
[117.92420959 122.56433868]
[123.87580872 136.33308411]
[130.65838623 149.71205139]
[138.24655151 162.65113831]
[145.83471680 175.59020996]
[153.42286682 188.52929688]
[161.01103210 201.46836853]
[168.59919739 214.40745544]
[176.18734741 227.34654236]
[183.77551270 240.28561401]
[199.19389343 240.81211853]
[211.86698914 249.60963440]
[217.75086975 263.87088013]
[214.96800232 279.04519653]
[204.40640259 290.29046631]
[189.43621826 294.01837158]
[174.83439636 289.03936768]
[165.26033020 276.94223022]
[163.76904297 261.58712769]
[170.83642578 247.87377930]
[163.24827576 234.93469238]
[155.66011047 221.99562073]
[148.07194519 209.05653381]
[140.48379517 196.11746216]
[132.89562988 183.17837524]
[125.30747223 170.23928833]
[117.71930695 157.30021667]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 128]
[7 127]
[8 126]
[18 54]
[19 53]
[20 52]
[21 51]
[22 50]
[23 49]
[24 48]
[25 47]
[26 46]
[27 45]
[31 41]
[32 40]
[33 39]
[55 125]
[56 124]
[57 123]
[58 122]
[59 121]
[61 119]
[62 118]
[63 117]
[64 116]
[65 115]
[68 113]
[69 112]
[70 111]
[71 110]
[72 109]
[76 104]
[77 103]
[78 102]
[79 101]
[80 99]
[81 98]
[82 97]
[83 96]
[84 94]
[85 93]
[86 92]
[87 91]
[129 153]
[130 152]
[131 151]
[132 150]
[133 149]
[134 148]
[135 147]
[136 146]
] def

init

% Start Annotations
6 128 0.0 1 colorpair
7 127 0.0 1 colorpair
8 126 0.16 1 colorpair
18 54 0.16 1 colorpair
19 53 0.16 1 colorpair
20 52 0.16 1 colorpair
21 51 0.16 1 colorpair
22 50 0.0 1 colorpair
23 49 0.0 1 colorpair
24 48 0.0 0.6 colorpair
25 47 0.0 1 colorpair
26 46 0.0 1 colorpair
27 45 0.0 0.6 colorpair
31 41 0.0 0.6 colorpair
32 40 0.0 0.6 colorpair
33 39 0.16 1 colorpair
55 125 0.0 0.6 colorpair
56 124 0.0 1 colorpair
57 123 0.16 1 colorpair
58 122 0.16 1 colorpair
59 121 0.16 1 colorpair
61 119 0.0 0.6 colorpair
62 118 0.16 1 colorpair
63 117 0.0 0.6 colorpair
64 116 0.16 1 colorpair
65 115 0.0 0.6 colorpair
68 113 0.16 1 colorpair
69 112 0.0 0.6 colorpair
70 111 0.16 1 colorpair
71 110 0.0 1 colorpair
72 109 0.16 1 colorpair
76 104 0.0 0.6 colorpair
77 103 0.0 0.6 colorpair
78 102 0.0 1 colorpair
79 101 0.16 1 colorpair
80 99 0.0 0.6 colorpair
81 98 0.0 0.6 colorpair
82 97 0.16 1 colorpair
83 96 0.0 0.6 colorpair
84 94 0.16 1 colorpair
85 93 0.0 1 colorpair
86 92 0.0 1 colorpair
87 91 0.0 0.6 colorpair
129 153 0.16 1 colorpair
130 152 0.0 0.6 colorpair
131 151 0.0 1 colorpair
132 150 0.0 0.6 colorpair
133 149 0.0 0.6 colorpair
134 148 0.16 1 colorpair
135 147 0.16 1 colorpair
136 146 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
8 cmark
126 cmark
18 cmark
54 cmark
19 cmark
53 cmark
20 cmark
21 cmark
51 cmark
24 48 1 gmark
27 45 1 gmark
31 41 1 gmark
32 40 1 gmark
33 cmark
39 cmark
55 125 1 gmark
123 cmark
58 cmark
59 cmark
121 cmark
61 119 1 gmark
62 cmark
63 117 1 gmark
64 cmark
65 115 1 gmark
113 cmark
69 112 1 gmark
70 cmark
111 cmark
72 cmark
109 cmark
76 104 1 gmark
77 103 1 gmark
79 cmark
80 99 1 gmark
81 98 1 gmark
82 cmark
97 cmark
83 96 1 gmark
84 cmark
94 cmark
87 91 1 gmark
129 cmark
130 152 1 gmark
132 150 1 gmark
133 149 1 gmark
134 cmark
148 cmark
135 cmark
147 cmark

% End Annotations
showpage
end
%%EOF
