%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:40:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
____________GACAUGCU______GACGAAAUAUGCCCUUGUGGCAGUCAUAGUGCUGUGUUUCACGGUGCUGGGAUUCACGCUUCUGAUAGGAGACUCGCUGUGUGAGUUGAGUAUCAAAGAACGUAAUAUGGAGUUUAAGGCUGUUCUCGCUUACGAAUCGAAGAAG\
) } def
/len { sequence length } bind def

/coor [
[137.23707581 238.41130066]
[133.49020386 252.93579102]
[128.06784058 266.92144775]
[121.04467010 280.17568970]
[112.51735687 292.51605225]
[102.60330963 303.77267456]
[91.43900299 313.79058838]
[79.17814636 322.43185425]
[65.98952484 329.57748413]
[52.05471420 335.12915039]
[37.56555176 339.01043701]
[22.72150993 341.16784668]
[7.72694826 341.57171631]
[-7.21170425 340.21649170]
[-21.88878822 337.12078857]
[-36.10224152 332.32730103]
[-49.65639114 325.90194702]
[-62.36463547 317.93322754]
[-74.05201721 308.53082275]
[-84.55764008 297.82421875]
[-93.73687744 285.96075439]
[-101.46334839 273.10379028]
[-107.63069153 259.43029785]
[-112.15399170 245.12857056]
[-114.97098541 230.39546204]
[-116.04288483 215.43380737]
[-115.35494232 200.44958496]
[-112.91661835 185.64909363]
[-108.76148987 171.23608398]
[-102.94675446 157.40898132]
[-95.55245972 144.35813904]
[-86.68041229 132.26322937]
[-76.45275116 121.29076385]
[-65.01027679 111.59180450]
[-52.51052475 103.29987335]
[-39.12557220 96.52912903]
[-25.03969193 91.37277222]
[-10.44680405 87.90180969]
[4.45219088 86.16400909]
[19.45217896 86.18329620]
[34.34665298 87.95941925]
[48.93056488 91.46791077]
[63.00790787 96.66256714]
[52.20935440 86.25145721]
[41.41080475 75.84034729]
[26.21988678 78.39812469]
[12.59493732 71.60002136]
[5.66746235 58.24060440]
[7.90808868 43.53966522]
[-2.89046335 33.12855148]
[-13.68901539 22.71743965]
[-28.99406815 18.70920563]
[-32.78621292 4.30542612]
[-43.58476639 -6.10568714]
[-54.38331985 -16.51679993]
[-65.18186951 -26.92791367]
[-75.98042297 -37.33902740]
[-86.77897644 -47.75013733]
[-97.57752991 -58.16125107]
[-108.37607574 -68.57236481]
[-119.17462921 -78.98347473]
[-129.97319031 -89.39459229]
[-145.57243347 -96.03533936]
[-143.50950623 -112.86331940]
[-126.76811218 -115.53945923]
[-119.56207275 -100.19314575]
[-108.76351929 -89.78202820]
[-97.96496582 -79.37091827]
[-87.16641235 -68.95980072]
[-76.36785889 -58.54869080]
[-65.56931305 -48.13757706]
[-54.77075958 -37.72646332]
[-43.97220612 -27.31535149]
[-33.17365265 -16.90423965]
[-22.37510109 -6.49312639]
[-7.84243393 -3.22956467]
[-3.27790260 11.91888809]
[7.52064943 22.33000183]
[18.31920242 32.74111557]
[32.92850113 29.96507454]
[46.53201294 36.40001678]
[53.82318497 49.76759338]
[51.82191849 65.04179382]
[62.62046814 75.45290375]
[73.41902161 85.86402130]
[80.90776062 85.45326233]
[87.68477631 72.07147980]
[95.88525391 84.63174438]
[103.37399292 84.22098541]
[112.96909332 72.69127655]
[122.56418610 61.16156769]
[132.15928650 49.63186264]
[141.75437927 38.10215378]
[151.34947205 26.57244873]
[150.09696960 11.04605198]
[159.99200439 -0.51002502]
[174.80175781 -1.60841560]
[184.39686584 -13.13812256]
[193.99195862 -24.66782951]
[203.58705139 -36.19753647]
[213.18214417 -47.72724533]
[222.77723694 -59.25695038]
[232.37232971 -70.78665924]
[237.85670471 -86.82904053]
[254.79035950 -85.99998474]
[258.68139648 -69.49858856]
[243.90203857 -61.19156265]
[234.30694580 -49.66185760]
[224.71185303 -38.13214874]
[215.11676025 -26.60244179]
[205.52166748 -15.07273483]
[195.92655945 -3.54302740]
[186.33146667 7.98667955]
[187.94134521 22.74960136]
[178.37480164 34.57905197]
[162.87918091 36.16754150]
[153.28408813 47.69725037]
[143.68898010 59.22695923]
[134.09388733 70.75666809]
[124.49879456 82.28636932]
[114.90370178 93.81607819]
[128.85182190 88.29794312]
[142.79995728 82.77980804]
[154.64926147 73.58230591]
[169.41625977 70.94875336]
[183.71450806 75.48308563]
[194.26502991 86.14546204]
[198.64834595 100.49073029]
[195.85920715 115.22914124]
[186.53727722 126.98079681]
[172.82028198 133.05075073]
[157.85391235 132.04698181]
[145.07192993 124.20132446]
[130.60395813 120.24182129]
[116.13597870 116.28231049]
[126.93453217 126.69342041]
[137.73307800 137.10453796]
[151.67065430 131.10289001]
[166.80339050 130.89515686]
[180.82489014 136.48187256]
[191.61000061 146.98277283]
[197.53698730 160.77537537]
[197.73126221 175.74560547]
[192.19436646 189.61181641]
[202.99291992 200.02293396]
[213.79147339 210.43405151]
[229.32196045 208.60704041]
[242.36494446 217.23342896]
[246.76191711 232.24012756]
[240.43676758 246.54139709]
[226.37603760 253.38464355]
[211.21878052 249.53866577]
[202.12178040 236.81945801]
[203.38037109 221.23260498]
[192.58181763 210.82148743]
[181.78326416 200.41036987]
[168.12850952 206.44999695]
[153.16117859 206.80258179]
[139.16131592 201.38330078]
[128.27352905 190.98889160]
[122.17844391 177.18078613]
[121.83335114 162.05055237]
[127.32196808 147.90309143]
[116.52341461 137.49197388]
[105.72486115 127.08086395]
[115.23512268 138.68064880]
[123.32122040 151.31452942]
[129.87184143 164.80857849]
[134.79679871 178.97702026]
[138.02830505 193.62480164]
[139.52186584 208.55026245]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 85]
[44 84]
[45 83]
[49 79]
[50 78]
[51 77]
[53 75]
[54 74]
[55 73]
[56 72]
[57 71]
[58 70]
[59 69]
[60 68]
[61 67]
[62 66]
[89 121]
[90 120]
[91 119]
[92 118]
[93 117]
[94 116]
[97 113]
[98 112]
[99 111]
[100 110]
[101 109]
[102 108]
[103 107]
[135 165]
[136 164]
[137 163]
[144 156]
[145 155]
[146 154]
] def

init

% Start Annotations
43 85 0.0 0.2 colorpair
44 84 0.48 0.6 colorpair
45 83 0.0 0.6 colorpair
49 79 0.16 0.2 colorpair
50 78 0.0 0.6 colorpair
51 77 0.48 1 colorpair
53 75 0.16 1 colorpair
54 74 0.16 0.6 colorpair
55 73 0.32 0.6 colorpair
56 72 0.16 0.2 colorpair
57 71 0.0 0.2 colorpair
58 70 0.16 0.2 colorpair
59 69 0.16 1 colorpair
60 68 0.0 0.2 colorpair
61 67 0.0 1 colorpair
62 66 0.16 0.2 colorpair
89 121 0.0 0.6 colorpair
90 120 0.16 0.2 colorpair
91 119 0.16 0.6 colorpair
92 118 0.16 0.2 colorpair
93 117 0.16 0.6 colorpair
94 116 0.16 0.2 colorpair
97 113 0.16 0.6 colorpair
98 112 0.0 0.2 colorpair
99 111 0.16 0.2 colorpair
100 110 0.0 0.6 colorpair
101 109 0.0 1 colorpair
102 108 0.32 1 colorpair
103 107 0.16 0.6 colorpair
135 165 0.16 0.6 colorpair
136 164 0.16 1 colorpair
137 163 0.0 0.2 colorpair
144 156 0.16 0.6 colorpair
145 155 0.0 1 colorpair
146 154 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
43 85 2 gmark
44 84 1 gmark
44 cmark
84 cmark
45 83 1 gmark
49 79 2 gmark
49 cmark
50 78 1 gmark
51 cmark
77 cmark
75 cmark
54 74 1 gmark
54 cmark
55 73 1 gmark
55 cmark
73 cmark
56 72 2 gmark
72 cmark
57 71 2 gmark
58 70 2 gmark
58 cmark
70 cmark
69 cmark
60 68 2 gmark
62 66 2 gmark
66 cmark
89 121 1 gmark
90 120 2 gmark
120 cmark
91 119 1 gmark
91 cmark
92 118 2 gmark
118 cmark
93 117 1 gmark
93 cmark
117 cmark
94 116 2 gmark
94 cmark
116 cmark
97 113 1 gmark
97 cmark
98 112 2 gmark
99 111 2 gmark
99 cmark
111 cmark
100 110 1 gmark
102 cmark
108 cmark
103 107 1 gmark
103 cmark
135 165 1 gmark
135 cmark
165 cmark
164 cmark
137 163 2 gmark
144 156 1 gmark
156 cmark

% End Annotations
showpage
end
%%EOF
