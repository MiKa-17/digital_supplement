%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:40:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__CCCUUGUGGCA___GUCAUAGUGCUGUGUUUGACGGUGCUGGGAUUCACGCUUCUGGUAGGAGACUCGCUGUGUGAGUUGAGUAUCAAAGAACGUAAUAUGGAGUUUAAGGCUGUUCUCGCUUACGAAUCGAAGAAGUAGCCAUCGU__GCG__GGGAGUAAUCCCCGCAUAUCUAA__UUGUGAGGUUAUGGU_____G___CC______________________\
) } def
/len { sequence length } bind def

/coor [
[0.87376255 338.83627319]
[0.06409390 323.85815430]
[0.40756842 308.86209106]
[1.90215564 293.93673706]
[4.53902054 279.17031860]
[8.30257607 264.65014648]
[13.17057323 250.46202087]
[19.11423683 236.68983459]
[26.09843063 223.41500854]
[34.08186722 210.71600342]
[43.01735687 198.66789246]
[52.85207748 187.34188843]
[63.52788925 176.80496216]
[74.96857452 167.12962341]
[80.45124817 153.16752625]
[85.93392181 139.20541382]
[91.41659546 125.24331665]
[79.91130829 134.86767578]
[68.40602112 144.49205017]
[62.78546524 159.28121948]
[48.05896759 161.51269531]
[36.55368042 171.13705444]
[25.04839325 180.76142883]
[13.54310703 190.38578796]
[2.03782058 200.01014709]
[-9.46746635 209.63452148]
[-20.97275352 219.25888062]
[-32.47803879 228.88323975]
[-43.98332596 238.50761414]
[-46.83230591 254.29566956]
[-61.02005386 261.78482056]
[-75.66294098 255.23002625]
[-79.52820587 239.65956116]
[-69.65073395 227.01776123]
[-53.60768890 227.00231934]
[-42.10240173 217.37796021]
[-30.59711647 207.75358582]
[-19.09182930 198.12922668]
[-7.58654356 188.50486755]
[3.91874313 178.88050842]
[15.42402935 169.25613403]
[26.92931557 159.63177490]
[38.43460464 150.00741577]
[43.23222351 135.90663147]
[58.78165817 132.98675537]
[70.28694916 123.36239624]
[81.79223633 113.73802948]
[79.85126495 98.86413574]
[66.26146698 92.51454926]
[52.67166519 86.16496277]
[39.08186340 79.81537628]
[25.49205971 73.46578217]
[13.69419193 84.39832306]
[-1.36053717 89.95046997]
[-17.35462952 89.29908752]
[-31.83806992 82.57359314]
[-42.60362244 70.83155823]
[-48.02320480 55.89256668]
[-47.29404831 40.05622482]
[-60.96931076 33.89284897]
[-74.64456940 27.72947121]
[-88.31983185 21.56609344]
[-104.08042908 22.94968987]
[-112.50448608 10.66618443]
[-126.17974854 4.50280666]
[-139.85501099 -1.66057050]
[-153.53027344 -7.82394791]
[-167.20553589 -13.98732471]
[-180.88079834 -20.15070152]
[-194.55606079 -26.31407928]
[-208.23130798 -32.47745514]
[-225.15599060 -33.47327423]
[-228.88430786 -50.01219940]
[-214.02383423 -58.17324066]
[-202.06793213 -46.15271759]
[-188.39266968 -39.98934174]
[-174.71740723 -33.82596207]
[-161.04216003 -27.66258621]
[-147.36689758 -21.49920845]
[-133.69163513 -15.33583164]
[-120.01636505 -9.17245483]
[-106.34110260 -3.00907755]
[-91.55866241 -4.83351946]
[-82.15645599 7.89083195]
[-68.48119354 14.05420971]
[-54.80593491 20.21758652]
[-41.13067245 26.38096428]
[-31.28621101 16.38928604]
[-18.59643173 10.34321404]
[-4.57552910 8.98675823]
[9.09574890 12.50298977]
[20.77157402 20.48964119]
[29.03917885 32.00501251]
[32.88978195 45.67897797]
[31.84164810 59.87598038]
[45.43144989 66.22557068]
[59.02125168 72.57515717]
[72.61105347 78.92474365]
[86.20085907 85.27433777]
[93.13971710 82.42788696]
[84.25769806 70.34030151]
[75.37567902 58.25271606]
[63.74385452 48.78166962]
[60.79643250 34.07409668]
[67.88058472 20.85234070]
[81.75836945 15.15962887]
[96.08672333 19.59791183]
[104.31661987 32.13859558]
[102.68670654 47.04922485]
[104.85206604 61.89210892]
[107.01742554 76.73499298]
[113.95628357 73.88854218]
[119.17205811 59.82455826]
[124.38784027 45.76057434]
[116.80189514 29.99043846]
[122.85561371 13.93176365]
[138.34211731 7.35828733]
[143.36531067 -6.77562666]
[148.38850403 -20.90954018]
[153.31504822 -35.07743073]
[158.14472961 -49.27863693]
[162.97439575 -63.47984314]
[153.29244995 -75.49081421]
[151.66381836 -90.83197021]
[158.60820007 -104.60800934]
[171.90965271 -112.42304230]
[187.32374573 -111.78331757]
[199.93190002 -102.89298248]
[205.71089172 -88.58889771]
[202.81665039 -73.43544769]
[192.17276001 -62.26804352]
[177.17559814 -58.65016556]
[172.34593201 -44.44895935]
[167.51625061 -30.24775505]
[168.33728027 -22.91302681]
[162.52241516 -15.88634586]
[157.49922180 -1.75243235]
[152.47602844 12.38148117]
[159.58090210 23.12155533]
[159.20111084 36.18798828]
[151.25140381 46.80877304]
[138.45182800 50.97634888]
[133.23605347 65.04033661]
[128.02026367 79.10431671]
[133.10186768 84.62042236]
[144.13406372 74.45723724]
[155.16627502 64.29404449]
[166.19848633 54.13085556]
[177.23068237 43.96766281]
[188.26306152 33.80465698]
[198.42588806 44.83720016]
[187.39387512 54.99987030]
[176.36167908 65.16306305]
[165.32946777 75.32624817]
[154.29725647 85.48944092]
[143.26506042 95.65262604]
[148.34664917 101.16873169]
[162.79040527 97.12178040]
[177.23416138 93.07482910]
[191.67793274 89.02787781]
[202.74795532 76.92884827]
[218.70050049 80.72999573]
[223.12492371 96.52101898]
[211.46978760 108.05747223]
[195.72488403 103.47163391]
[181.28111267 107.51858521]
[166.83735657 111.56554413]
[152.39360046 115.61249542]
[167.00939941 118.98566437]
[181.62521362 122.35884094]
[196.24101257 125.73200989]
[211.22640991 126.39355469]
[226.11669922 128.20445251]
[240.82385254 131.15400696]
[255.26091003 135.22476196]
[269.34255981 140.39266968]
[282.98553467 146.62718201]
[296.10922241 153.89143372]
[308.63598633 162.14248657]
[320.49182129 171.33157349]
[331.60662842 181.40435791]
[341.91470337 192.30131531]
[351.35510254 203.95802307]
[359.87203979 216.30555725]
[367.41516113 229.27095032]
[373.93984985 242.77755737]
[379.40759277 256.74551392]
[383.78601074 271.09228516]
[387.04925537 285.73300171]
[389.17803955 300.58117676]
[390.15972900 315.54901123]
[389.98858643 330.54803467]
[388.66558838 345.48959351]
[386.19857788 360.28533936]
[382.60208130 374.84777832]
[377.89743042 389.09091187]
[372.11239624 402.93045044]
[365.28118896 416.28466797]
[357.44421387 429.07455444]
[348.64773560 441.22454834]
[338.94378662 452.66278076]
[328.38977051 463.32168579]
[317.04800415 473.13824463]
[304.98556519 482.05441284]
[292.27380371 490.01748657]
[278.98779297 496.98037720]
[265.20608521 502.90194702]
[251.01019287 507.74719238]
[236.48399353 511.48745728]
[221.71337891 514.10064697]
[206.78564453 515.57128906]
[191.78904724 515.89074707]
[176.81222534 515.05706787]
[161.94372559 513.07519531]
[147.27143860 509.95684814]
[132.88211060 505.72048950]
[118.86077118 500.39111328]
[105.29032135 494.00027466]
[92.25098419 486.58569336]
[79.81983948 478.19125366]
[68.07037354 468.86654663]
[57.07204056 458.66671753]
[46.88985443 447.65203857]
[37.58400345 435.88763428]
[29.20950317 423.44305420]
[21.81585503 410.39184570]
[15.44676781 396.81118774]
[10.13989162 382.78131104]
[5.92659569 368.38519287]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 47]
[18 46]
[19 45]
[21 43]
[22 42]
[23 41]
[24 40]
[25 39]
[26 38]
[27 37]
[28 36]
[29 35]
[48 99]
[49 98]
[50 97]
[51 96]
[52 95]
[59 87]
[60 86]
[61 85]
[62 84]
[64 82]
[65 81]
[66 80]
[67 79]
[68 78]
[69 77]
[70 76]
[71 75]
[112 144]
[113 143]
[114 142]
[117 138]
[118 137]
[119 136]
[120 134]
[121 133]
[122 132]
[157 168]
[158 167]
[159 166]
[160 165]
] def

init

% Start Annotations
17 47 0.16 0.2 colorpair
18 46 0.0 0.6 colorpair
19 45 0.48 1 colorpair
21 43 0.16 1 colorpair
22 42 0.16 0.6 colorpair
23 41 0.32 0.6 colorpair
24 40 0.16 0.2 colorpair
25 39 0.0 0.2 colorpair
26 38 0.16 0.2 colorpair
27 37 0.16 1 colorpair
28 36 0.0 0.2 colorpair
29 35 0.0 1 colorpair
48 99 0.16 1 colorpair
49 98 0.16 0.2 colorpair
50 97 0.0 0.2 colorpair
51 96 0.0 0.6 colorpair
52 95 0.32 0.6 colorpair
59 87 0.16 0.6 colorpair
60 86 0.16 0.2 colorpair
61 85 0.16 0.6 colorpair
65 81 0.16 0.6 colorpair
66 80 0.0 0.2 colorpair
67 79 0.16 0.2 colorpair
68 78 0.0 0.6 colorpair
69 77 0.0 1 colorpair
70 76 0.32 1 colorpair
71 75 0.16 0.6 colorpair
112 144 0.16 0.2 colorpair
113 143 0.0 0.6 colorpair
114 142 0.0 0.6 colorpair
117 138 0.0 1 colorpair
118 137 0.16 0.2 colorpair
119 136 0.32 0.6 colorpair
120 134 0.16 1 colorpair
121 133 0.16 0.6 colorpair
122 132 0.16 1 colorpair
157 168 0.0 0.6 colorpair
158 167 0.0 0.6 colorpair
159 166 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
17 47 2 gmark
17 cmark
18 46 1 gmark
19 cmark
45 cmark
43 cmark
22 42 1 gmark
22 cmark
23 41 1 gmark
23 cmark
41 cmark
24 40 2 gmark
40 cmark
25 39 2 gmark
26 38 2 gmark
26 cmark
38 cmark
37 cmark
28 36 2 gmark
99 cmark
49 98 2 gmark
49 cmark
98 cmark
50 97 2 gmark
51 96 1 gmark
52 95 1 gmark
52 cmark
95 cmark
59 87 1 gmark
59 cmark
60 86 2 gmark
86 cmark
61 85 1 gmark
61 cmark
85 cmark
62 84 3 gmark
62 cmark
84 cmark
64 82 3 gmark
64 cmark
82 cmark
65 81 1 gmark
65 cmark
66 80 2 gmark
67 79 2 gmark
67 cmark
79 cmark
68 78 1 gmark
70 cmark
76 cmark
71 75 1 gmark
71 cmark
112 144 2 gmark
112 cmark
144 cmark
113 143 1 gmark
114 142 1 gmark
118 137 2 gmark
137 cmark
119 136 1 gmark
119 cmark
136 cmark
134 cmark
121 133 1 gmark
121 cmark
133 cmark
132 cmark
157 168 1 gmark
158 167 1 gmark
159 166 1 gmark
159 cmark
166 cmark
160 165 3 gmark
160 cmark
165 cmark

% End Annotations
showpage
end
%%EOF
