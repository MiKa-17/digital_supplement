%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:40:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__CCCUUGUGGCA___GUCAUAGUGCUGUGUUUGACGGUGCUGGGAUUCACGCUUCUGGUCGGAGACUCGCUGUGUGAGUUGAGUAUCAAGGAACGUAAUAUUGAGUUUAAGGCUGUUCUCGCUUACGAAUCGAAGAAGUAGCCGUCGU__GCG__GGGAGUAAUCCCCGCAUAUCCGA__UUGUGAGGUCAGGGUCGCAUGGCACCUG_UUUA_______________\
) } def
/len { sequence length } bind def

/coor [
[102.47802734 595.07244873]
[88.14685059 594.93676758]
[73.82561493 594.38629150]
[59.52630615 593.42150879]
[45.26091766 592.04321289]
[31.04140282 590.25256348]
[16.87967491 588.05108643]
[2.78760338 585.44067383]
[-11.22300148 582.42340088]
[-25.14039993 579.00183105]
[-38.95292664 575.17889404]
[-52.64900970 570.95770264]
[-66.21717072 566.34185791]
[-79.64603424 561.33520508]
[-92.92435455 555.94195557]
[-106.04100037 550.16662598]
[-118.98498535 544.01403809]
[-131.74545288 537.48931885]
[-144.31170654 530.59802246]
[-156.67323303 523.34588623]
[-168.81965637 515.73895264]
[-180.74079895 507.78363037]
[-192.42668152 499.48657227]
[-203.86749268 490.85473633]
[-215.05368042 481.89535522]
[-225.97583008 472.61593628]
[-236.62480164 463.02426147]
[-246.99168396 453.12835693]
[-257.06777954 442.93655396]
[-266.84463501 432.45733643]
[-276.31408691 421.69952393]
[-285.46817017 410.67211914]
[-294.29922485 399.38436890]
[-302.79986572 387.84570312]
[-310.96292114 376.06585693]
[-318.78161621 364.05462646]
[-326.24932861 351.82214355]
[-333.35986328 339.37860107]
[-340.10720825 326.73446655]
[-346.48574829 313.90032959]
[-352.49014282 300.88693237]
[-358.11532593 287.70520020]
[-363.35659790 274.36614990]
[-368.20956421 260.88098145]
[-372.67016602 247.26100159]
[-376.73464966 233.51760864]
[-380.39962769 219.66232300]
[-383.66201782 205.70675659]
[-386.51910400 191.66261292]
[-388.96847534 177.54165649]
[-391.00808716 163.35571289]
[-392.63619995 149.11666870]
[-393.85150146 134.83647156]
[-394.65292358 120.52708435]
[-395.03982544 106.20049286]
[-395.01187134 91.86870575]
[-394.56909180 77.54372406]
[-393.71185303 63.23757172]
[-392.44088745 48.96222305]
[-390.75723267 34.72964478]
[-388.66232300 20.55176353]
[-386.15789795 6.44046211]
[-383.24606323 -7.59243393]
[-379.92926025 -21.53516579]
[-376.21026611 -35.37604904]
[-372.09219360 -49.10348511]
[-367.57849121 -62.70596695]
[-362.67297363 -76.17210388]
[-357.37969971 -89.49060059]
[-351.70315552 -102.65029907]
[-345.64807129 -115.64017487]
[-339.21951294 -128.44934082]
[-332.42288208 -141.06706238]
[-325.26388550 -153.48275757]
[-317.74850464 -165.68603516]
[-309.88302612 -177.66667175]
[-301.67407227 -189.41459656]
[-293.12850952 -200.91999817]
[-284.25350952 -212.17323303]
[-275.05648804 -223.16485596]
[-265.54513550 -233.88565063]
[-255.72747803 -244.32664490]
[-245.61170959 -254.47909546]
[-235.20629883 -264.33447266]
[-224.51998901 -273.88455200]
[-213.56173706 -283.12127686]
[-202.34069824 -292.03695679]
[-190.86630249 -300.62411499]
[-179.14814758 -308.87551880]
[-167.19606018 -316.78430176]
[-155.02005005 -324.34378052]
[-142.63034058 -331.54766846]
[-130.03730774 -338.38992310]
[-117.25148010 -344.86477661]
[-104.28360748 -350.96682739]
[-91.14453125 -356.69097900]
[-77.84527588 -362.03240967]
[-64.39698792 -366.98663330]
[-50.81092453 -371.54949951]
[-37.09848404 -375.71722412]
[-23.27114868 -379.48629761]
[-9.34051132 -382.85351562]
[4.68175602 -385.81613159]
[18.78390121 -388.37161255]
[32.95410919 -390.51782227]
[47.18050003 -392.25296021]
[61.45115662 -393.57559204]
[75.75411987 -394.48458862]
[90.07739258 -394.97921753]
[104.40898895 -395.05902100]
[118.73689270 -394.72396851]
[133.04908752 -393.97433472]
[134.27702332 -408.92398071]
[135.50497437 -423.87362671]
[124.26244354 -434.74282837]
[122.68817139 -450.30096436]
[131.52548218 -463.20196533]
[146.60168457 -467.35437012]
[160.79823303 -460.79754639]
[167.41195679 -446.62741089]
[163.32006836 -431.53469849]
[150.45462036 -422.64569092]
[149.22668457 -407.69604492]
[147.99873352 -392.74639893]
[165.66342163 -390.70480347]
[183.24340820 -388.03015137]
[200.71598816 -384.72586060]
[218.05863953 -380.79626465]
[235.24897766 -376.24636841]
[252.26483154 -371.08206177]
[269.08422852 -365.30999756]
[285.68551636 -358.93765259]
[302.04724121 -351.97320557]
[318.14831543 -344.42568970]
[333.96792603 -336.30480957]
[349.48571777 -327.62103271]
[364.68164062 -318.38558960]
[379.53607178 -308.61041260]
[394.02990723 -298.30804443]
[408.14437866 -287.49182129]
[421.86132812 -276.17568970]
[435.16305542 -264.37426758]
[448.03237915 -252.10275269]
[460.45266724 -239.37699890]
[472.40795898 -226.21339417]
[483.88281250 -212.62895203]
[494.86242676 -198.64117432]
[505.33258057 -184.26812744]
[515.27984619 -169.52833557]
[524.69134521 -154.44082642]
[533.55493164 -139.02505493]
[541.85925293 -123.30092621]
[549.59344482 -107.28870392]
[556.74768066 -91.00906372]
[563.31262207 -74.48300171]
[569.27984619 -57.73183441]
[574.64160156 -40.77717590]
[589.08538818 -44.82412720]
[603.52911377 -48.87107849]
[611.05554199 -62.76815796]
[626.22784424 -67.19276428]
[640.04455566 -59.51985168]
[644.30853271 -44.30162811]
[636.48992920 -30.56679535]
[621.22747803 -26.46398354]
[607.57611084 -34.42731857]
[593.13232422 -30.38036728]
[578.68859863 -26.33341599]
[582.14477539 -12.42458630]
[585.19696045 1.57845843]
[587.84252930 15.66398144]
[590.07922363 29.82018089]
[591.90527344 44.03519058]
[593.31909180 58.29710007]
[594.31951904 72.59395599]
[594.90570068 86.91378784]
[595.07708740 101.24457550]
[594.83361816 115.57432556]
[594.17547607 129.89102173]
[593.10321045 144.18266296]
[591.61767578 158.43728638]
[589.72021484 172.64294434]
[587.41229248 186.78771973]
[584.69598389 200.85975647]
[581.57342529 214.84727478]
[578.04736328 228.73855591]
[574.12060547 242.52195740]
[569.79656982 256.18591309]
[565.07885742 269.71896362]
[559.97137451 283.10980225]
[554.47845459 296.34719849]
[548.60461426 309.42004395]
[542.35491943 322.31741333]
[535.73443604 335.02844238]
[528.74884033 347.54254150]
[521.40393066 359.84918213]
[513.70587158 371.93804932]
[505.66116333 383.79904175]
[497.27645874 395.42221069]
[488.55883789 406.79782104]
[479.51562500 417.91629028]
[470.15432739 428.76837158]
[460.48287964 439.34494019]
[450.50930786 449.63711548]
[440.24200439 459.63629150]
[429.68957520 469.33407593]
[418.86087036 478.72238159]
[407.76492310 487.79327393]
[396.41110229 496.53921509]
[384.80886841 504.95281982]
[372.96792603 513.02709961]
[360.89828491 520.75524902]
[348.60998535 528.13079834]
[336.11334229 535.14752197]
[323.41882324 541.79962158]
[310.53707886 548.08148193]
[297.47891235 553.98785400]
[284.25524902 559.51373291]
[270.87716675 564.65460205]
[257.35589600 569.40600586]
[243.70275879 573.76409912]
[229.92918396 577.72509766]
[216.04673767 581.28582764]
[202.06703186 584.44317627]
[188.00180054 587.19458008]
[173.86282349 589.53771973]
[159.66194153 591.47058105]
[145.41107178 592.99157715]
[131.12213135 594.09948730]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[112 124]
[113 123]
[114 122]
[157 168]
[158 167]
[159 166]
] def

init

% Start Annotations
113 123 0.0 1 colorpair
114 122 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
112 124 4 gmark
124 cmark
157 168 4 gmark
158 167 4 gmark
159 166 4 gmark
159 cmark
166 cmark

% End Annotations
showpage
end
%%EOF
