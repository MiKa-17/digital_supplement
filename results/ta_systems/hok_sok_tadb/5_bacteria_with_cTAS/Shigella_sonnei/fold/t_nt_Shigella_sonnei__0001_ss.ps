%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:40:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_GUAAGAGGCUAACCUGAUGGGGACCAGACAUAGGGAAGCCUCACGGUGAUUAAU___AAUCAACU______GGGGCUAUCCUCUGUCUGCCACAC_____GGUAA_AAACC____________UGAGACAAAAAGCCUCAAGCACCCG__________\
) } def
/len { sequence length } bind def

/coor [
[93.47096252 165.79008484]
[83.71900940 164.07725525]
[74.33222198 160.92724609]
[65.52111816 156.41073608]
[57.48332596 150.62901306]
[50.39912415 143.71174622]
[38.09310150 152.28857422]
[25.78707886 160.86538696]
[13.48105717 169.44221497]
[1.17503572 178.01902771]
[-4.11100864 185.53358459]
[-11.45785999 186.64064026]
[-23.92990494 194.97419739]
[-36.40194702 203.30775452]
[-48.87399292 211.64131165]
[-61.34603882 219.97485352]
[-73.81808472 228.30841064]
[-86.29012299 236.64196777]
[-98.76216888 244.97552490]
[-111.23421478 253.30906677]
[-123.70626068 261.64263916]
[-125.22870636 277.20593262]
[-136.43496704 288.11251831]
[-152.03381348 289.21261597]
[-164.65992737 279.98681641]
[-168.35163879 264.79125977]
[-161.36585999 250.80079651]
[-147.00103760 244.62132263]
[-132.03981018 249.17057800]
[-119.56776428 240.83703613]
[-107.09572601 232.50347900]
[-94.62368011 224.16992188]
[-82.15163422 215.83636475]
[-69.67958832 207.50282288]
[-57.20754623 199.16926575]
[-44.73550034 190.83570862]
[-32.26345825 182.50215149]
[-19.79141426 174.16860962]
[-7.40178394 165.71301270]
[4.90423775 157.13618469]
[17.21026039 148.55937195]
[29.51628113 139.98254395]
[41.82230377 131.40573120]
[34.78464890 110.85919952]
[34.78464890 89.14080048]
[41.82230377 68.59426880]
[29.51628113 60.01744843]
[17.21026039 51.44063187]
[4.90423775 42.86381149]
[-7.40178394 34.28699112]
[-19.70780563 25.71017265]
[-32.01382828 17.13335228]
[-47.52597046 20.15806770]
[-60.58665085 11.25895405]
[-63.44719315 -4.28430271]
[-54.41049194 -17.25016403]
[-38.83786011 -19.94621468]
[-25.96826363 -10.77293396]
[-23.43700790 4.82733107]
[-11.13098621 13.40415096]
[1.17503572 21.98097038]
[13.48105717 30.55778885]
[25.78707886 39.13460922]
[38.09310150 47.71142960]
[50.39912415 56.28824615]
[64.03620911 44.52414703]
[80.34213257 36.87684631]
[98.10684204 33.91384125]
[116.01203918 35.85501480]
[132.72900391 42.55631638]
[147.01718140 53.52044678]
[157.81626892 67.93377686]
[171.67446899 62.19352341]
[185.53265381 56.45326996]
[195.32142639 44.02384186]
[210.04081726 46.30165863]
[223.89901733 40.56140518]
[237.75720215 34.82115555]
[251.61540222 29.08090210]
[253.71359253 13.93016624]
[263.05197144 1.94301808]
[277.04357910 -3.72278595]
[291.89318848 -1.63843477]
[303.62667847 7.53712416]
[317.48486328 1.79687250]
[331.34307861 -3.94337893]
[345.20126343 -9.68362999]
[359.05944824 -15.42388153]
[372.91766357 -21.16413307]
[386.77584839 -26.90438461]
[400.63403320 -32.64463806]
[414.49221802 -38.38488770]
[428.35043335 -44.12514114]
[442.20861816 -49.86539078]
[456.06680298 -55.60564041]
[469.74993896 -61.75150299]
[469.17932129 -79.64085388]
[476.43441772 -95.94533539]
[490.02529907 -107.42940521]
[507.20977783 -111.83599854]
[524.54669189 -108.33003998]
[538.58477783 -97.65621948]
[551.67224121 -104.98554230]
[564.75964355 -112.31485748]
[570.48077393 -127.30313873]
[585.80926514 -132.03776550]
[598.98645020 -122.88674927]
[599.90393066 -106.86994934]
[587.85784912 -96.27409363]
[572.08898926 -99.22741699]
[559.00152588 -91.89810181]
[545.91412354 -84.56877899]
[547.98138428 -72.42670441]
[546.20037842 -60.21455383]
[540.72967529 -49.12464905]
[532.08886719 -40.24444580]
[521.10919189 -34.44990921]
[508.85357666 -32.31912613]
[496.51385498 -34.07464981]
[485.29467773 -39.56037521]
[476.29608154 -48.25527954]
[474.80136108 -45.00778198]
[471.63134766 -42.34037781]
[467.08441162 -41.04532242]
[461.80706787 -41.74744797]
[447.94885254 -36.00719833]
[434.09066772 -30.26694679]
[420.23248291 -24.52669525]
[406.37429810 -18.78644371]
[392.51608276 -13.04619217]
[378.65789795 -7.30594063]
[364.79971313 -1.56568897]
[350.94152832 4.17456245]
[337.08331299 9.91481400]
[323.22512817 15.65506554]
[309.36694336 21.39531708]
[307.55819702 36.18024445]
[298.53179932 48.15437698]
[284.63189697 54.04160690]
[269.55249023 52.16863632]
[257.35565186 42.93909454]
[243.49746704 48.67934799]
[229.63926697 54.41959763]
[215.78106689 60.15985107]
[206.98355103 72.17870331]
[191.27291870 70.31146240]
[177.41471863 76.05171204]
[163.55651855 81.79196930]
[165.56298828 91.48776245]
[166.09898376 101.37448120]
[165.15246582 111.23036194]
[162.74467468 120.83437347]
[158.92959595 129.97109985]
[153.79283142 138.43560791]
[147.44956970 146.03807068]
[140.04206848 152.60795593]
[131.73649597 157.99792480]
[122.71910858 162.08708191]
[113.19217682 164.78372192]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 43]
[7 42]
[8 41]
[9 40]
[10 39]
[12 38]
[13 37]
[14 36]
[15 35]
[16 34]
[17 33]
[18 32]
[19 31]
[20 30]
[21 29]
[46 65]
[47 64]
[48 63]
[49 62]
[50 61]
[51 60]
[52 59]
[72 148]
[73 147]
[74 146]
[76 144]
[77 143]
[78 142]
[79 141]
[84 136]
[85 135]
[86 134]
[87 133]
[88 132]
[89 131]
[90 130]
[91 129]
[92 128]
[93 127]
[94 126]
[95 125]
[96 121]
[102 112]
[103 111]
[104 110]
] def

init

% Start Annotations
6 43 0.0 1 colorpair
7 42 0.0 1 colorpair
8 41 0.0 1 colorpair
9 40 0.0 1 colorpair
10 39 0.0 1 colorpair
12 38 0.0 0.6 colorpair
13 37 0.16 1 colorpair
14 36 0.0 1 colorpair
15 35 0.0 1 colorpair
16 34 0.0 1 colorpair
17 33 0.0 0.6 colorpair
18 32 0.0 1 colorpair
19 31 0.0 1 colorpair
20 30 0.0 1 colorpair
21 29 0.0 0.6 colorpair
46 65 0.16 1 colorpair
47 64 0.0 0.6 colorpair
48 63 0.0 1 colorpair
49 62 0.16 1 colorpair
50 61 0.16 1 colorpair
51 60 0.16 1 colorpair
52 59 0.0 1 colorpair
72 148 0.0 0.6 colorpair
73 147 0.0 1 colorpair
74 146 0.0 1 colorpair
76 144 0.0 1 colorpair
77 143 0.0 1 colorpair
78 142 0.0 1 colorpair
79 141 0.0 0.6 colorpair
84 136 0.0 1 colorpair
85 135 0.0 1 colorpair
86 134 0.16 1 colorpair
87 133 0.0 1 colorpair
88 132 0.0 0.6 colorpair
89 131 0.0 1 colorpair
90 130 0.0 1 colorpair
91 129 0.0 0.6 colorpair
92 128 0.0 1 colorpair
93 127 0.0 0.6 colorpair
94 126 0.16 1 colorpair
95 125 0.0 0.6 colorpair
96 121 0.0 0.6 colorpair
102 112 0.0 1 colorpair
103 111 0.0 1 colorpair
104 110 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
12 38 1 gmark
13 cmark
37 cmark
17 33 1 gmark
21 29 1 gmark
46 cmark
65 cmark
47 64 1 gmark
62 cmark
50 cmark
60 cmark
72 148 1 gmark
79 141 1 gmark
86 cmark
134 cmark
88 132 1 gmark
91 129 1 gmark
93 127 1 gmark
94 cmark
95 125 1 gmark
96 121 1 gmark

% End Annotations
showpage
end
%%EOF
