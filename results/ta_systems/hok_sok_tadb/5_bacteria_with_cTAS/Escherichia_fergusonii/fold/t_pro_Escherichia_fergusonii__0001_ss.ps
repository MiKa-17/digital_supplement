%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 23:47:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___________________________C__G_____CAUGC_UGACGAAAUAUGCCCUUGUGGCAG__UCAUAGUGCUGUGUUUGACGGUGCUGGGAUUUACGCUUCUGGUCGGCGACUCGCUGUGUGAGUUCACUGUAAAAGAACGUAAUAUUGAGUUCACGGCUGUUCUCGCUUACGAACCGAAGAAG____________\
) } def
/len { sequence length } bind def

/coor [
[-152.28062439 464.21514893]
[-167.18836975 465.87628174]
[-182.16239929 466.75851440]
[-197.16206360 466.85943604]
[-212.14660645 466.17877197]
[-227.07534790 464.71835327]
[-241.90773010 462.48217773]
[-256.60345459 459.47631836]
[-271.12265015 455.70892334]
[-285.42584229 451.19021606]
[-299.47421265 445.93249512]
[-313.22958374 439.95004272]
[-326.65457153 433.25906372]
[-339.71279907 425.87777710]
[-352.36871338 417.82620239]
[-364.58795166 409.12622070]
[-376.33740234 399.80148315]
[-387.58505249 389.87725830]
[-398.30041504 379.38055420]
[-408.45437622 368.33984375]
[-418.01937866 356.78515625]
[-426.96939087 344.74783325]
[-435.28012085 332.26058960]
[-442.92904663 319.35729980]
[-449.89532471 306.07308960]
[-456.16006470 292.44396973]
[-461.70626831 278.50695801]
[-466.51885986 264.29995728]
[-470.58474731 249.86152649]
[-473.89291382 235.23086548]
[-476.43438721 220.44773865]
[-478.20220947 205.55227661]
[-479.19161987 190.58494568]
[-479.39993286 175.58639526]
[-478.82656860 160.59735107]
[-477.47311401 145.65853882]
[-475.34320068 130.81053162]
[-472.44262695 116.09364319]
[-468.77929688 101.54785919]
[-464.36312866 87.21267700]
[-459.20611572 73.12702942]
[-453.32229614 59.32918167]
[-446.72763062 45.85660553]
[-439.44003296 32.74589157]
[-431.47927856 20.03264618]
[-422.86700439 7.75140238]
[-413.62661743 -4.06448507]
[-403.78320312 -15.38292408]
[-393.36349487 -26.17317390]
[-382.39578247 -36.40592957]
[-370.90985107 -46.05339432]
[-358.93692017 -55.08937073]
[-346.50949097 -63.48931503]
[-333.66131592 -71.23041534]
[-320.42730713 -78.29164124]
[-306.84338379 -84.65381622]
[-292.94647217 -90.29966736]
[-278.77429199 -95.21385193]
[-264.36532593 -99.38302612]
[-249.75874329 -102.79586029]
[-234.99418640 -105.44309998]
[-220.11177063 -107.31754303]
[-205.15190125 -108.41410065]
[-190.15522766 -108.72980499]
[-175.16246033 -108.26377869]
[-160.21434021 -107.01730347]
[-145.35147095 -104.99375916]
[-130.61418152 -102.19863892]
[-116.04254150 -98.63954163]
[-101.67610931 -94.32612610]
[-87.55390167 -89.27011871]
[-73.71427917 -83.48523712]
[-60.19482803 -76.98719788]
[-47.03226852 -69.79366302]
[-34.26235199 -61.92414856]
[-21.91975784 -53.40004349]
[-10.03801155 -44.24449158]
[1.35061765 -34.48236465]
[12.21519756 -24.14017487]
[22.52622032 -13.24601078]
[32.25568008 -1.82946074]
[41.37715149 10.07846737]
[49.86586380 22.44543076]
[57.69875717 35.23784256]
[64.85456085 48.42095566]
[71.31383514 61.95896530]
[77.05904388 75.81510925]
[82.07457733 89.95173645]
[86.34941101 104.34014893]
[89.15491486 90.64267731]
[102.29364014 85.86088562]
[112.09260559 74.50393677]
[121.89157104 63.14698792]
[115.89662933 49.15334320]
[116.56918335 34.00624466]
[123.72232819 20.70764542]
[135.89010620 11.86987782]
[150.62763977 9.20252419]
[165.00225830 13.18193626]
[174.80122375 1.82498777]
[184.60018921 -9.53196049]
[194.39915466 -20.88890839]
[204.19812012 -32.24585724]
[194.95834351 -44.73389053]
[188.72341919 -58.95478439]
[185.80152893 -74.19795227]
[186.33534241 -89.70249176]
[190.29518127 -104.69512939]
[197.48052979 -118.42883301]
[207.53022766 -130.21998596]
[219.94064331 -139.48245239]
[234.09091187 -145.75669861]
[249.27395630 -148.73258972]
[264.73184204 -148.26472473]
[279.69363403 -144.37953186]
[293.41378784 -137.27378845]
[303.03582764 -148.78102112]
[312.65786743 -160.28825378]
[322.27990723 -171.79548645]
[331.90194702 -183.30270386]
[341.52398682 -194.80993652]
[351.14605713 -206.31716919]
[356.66790771 -222.34667969]
[373.59960938 -221.47801208]
[377.45202637 -204.96755981]
[362.65325928 -196.69512939]
[353.03121948 -185.18789673]
[343.40917969 -173.68066406]
[333.78713989 -162.17344666]
[324.16510010 -150.66621399]
[314.54306030 -139.15898132]
[304.92102051 -127.65175629]
[313.84429932 -116.21829987]
[320.19036865 -103.17023468]
[323.67810059 -89.07992554]
[324.15167236 -74.56603241]
[321.58776855 -60.26637650]
[316.09661865 -46.80988312]
[307.91714478 -34.78893280]
[297.40682983 -24.73327827]
[285.02581787 -17.08669853]
[271.31692505 -12.18742466]
[256.88180542 -10.25316525]
[242.35461426 -11.37143993]
[228.37396240 -15.49562645]
[215.55506897 -22.44688988]
[205.75610352 -11.08994198]
[195.95713806 0.26700559]
[186.15817261 11.62395382]
[176.35920715 22.98090172]
[182.40144348 36.61750031]
[181.92178345 51.58678055]
[174.96183777 64.91795349]
[162.85456848 73.94205475]
[147.96940613 76.82627106]
[133.24851990 72.94595337]
[123.44955444 84.30290222]
[113.65058899 95.65985107]
[110.84508514 109.35732269]
[97.70635986 114.13911438]
[98.97695923 121.53070831]
[101.51815796 136.31388855]
[102.78875732 143.70547485]
[115.81764984 151.13836670]
[128.84654236 158.57124329]
[143.44953918 152.97781372]
[158.21453857 158.12844849]
[166.16993713 171.59120178]
[163.55946350 187.00935364]
[151.61569214 197.10293579]
[135.97810364 197.10606384]
[124.03029633 187.01725769]
[121.41365814 171.60014343]
[108.38476562 164.16725159]
[95.35586548 156.73437500]
[96.13085175 171.71434021]
[96.12436676 186.71434021]
[95.33641815 201.69361877]
[93.76916504 216.61152649]
[91.42684937 231.42750549]
[88.31583405 246.10134888]
[84.44457245 260.59320068]
[79.82358551 274.86367798]
[74.46540833 288.87402344]
[68.38459778 302.58618164]
[61.59768295 315.96295166]
[54.12308502 328.96795654]
[45.98110580 341.56591797]
[37.19385910 353.72256470]
[27.78521538 365.40493774]
[17.78072548 376.58123779]
[7.20756149 387.22119141]
[-3.90555906 397.29583740]
[-15.52845287 406.77783203]
[-27.62955284 415.64141846]
[-40.17599106 423.86254883]
[-53.13369370 431.41888428]
[-66.46746063 438.28985596]
[-80.14109039 444.45687866]
[-94.11743164 449.90313721]
[-108.35853577 454.61386108]
[-122.82571411 458.57629395]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[89 160]
[91 158]
[92 157]
[93 156]
[99 150]
[100 149]
[101 148]
[102 147]
[103 146]
[116 132]
[117 131]
[118 130]
[119 129]
[120 128]
[121 127]
[122 126]
[163 175]
[164 174]
[165 173]
] def

init

% Start Annotations
89 160 0.32 1 colorpair
92 157 0.16 0.6 colorpair
93 156 0.0 1 colorpair
99 150 0.16 0.6 colorpair
102 147 0.0 0.2 colorpair
103 146 0.32 0.6 colorpair
116 132 0.16 1 colorpair
117 131 0.0 0.2 colorpair
118 130 0.16 0.2 colorpair
119 129 0.0 0.6 colorpair
120 128 0.0 0.6 colorpair
121 127 0.32 0.6 colorpair
122 126 0.16 1 colorpair
163 175 0.16 0.6 colorpair
164 174 0.0 1 colorpair
165 173 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
89 cmark
160 cmark
91 158 3 gmark
91 cmark
158 cmark
92 157 1 gmark
92 cmark
99 150 1 gmark
150 cmark
100 149 3 gmark
100 cmark
149 cmark
101 148 3 gmark
101 cmark
148 cmark
102 147 2 gmark
103 146 1 gmark
103 cmark
146 cmark
116 cmark
117 131 2 gmark
118 130 2 gmark
118 cmark
130 cmark
119 129 1 gmark
120 128 1 gmark
121 127 1 gmark
121 cmark
127 cmark
122 cmark
163 175 1 gmark
175 cmark
165 cmark

% End Annotations
showpage
end
%%EOF
