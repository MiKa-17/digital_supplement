%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 23:47:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAGAGGCUAACCU_AUGUAGACUAAGCAUAGAGAU_GCCUCACAUUGAUUUAUAGA___U__CAGG___________UA__UGGGGCUUUCUUCUAUCUGCCUCUCG____GGCAAUA______________CCUGAGGCAGAAAGCCUCAAGCACCCG__________\
) } def
/len { sequence length } bind def

/coor [
[88.31588745 231.33892822]
[68.50403595 228.04075623]
[49.42292404 221.77188110]
[31.51527023 212.67773438]
[15.19654751 200.96932983]
[0.84537500 186.91830444]
[-10.97851181 196.14845276]
[-22.80239868 205.37860107]
[-34.62628555 214.60876465]
[-46.45017242 223.83891296]
[-58.27405930 233.06906128]
[-70.09794617 242.29920959]
[-76.58473969 259.51531982]
[-94.02646637 261.30960083]
[-105.68080139 270.75292969]
[-117.33512878 280.19625854]
[-122.05459595 288.05972290]
[-129.28790283 289.70294189]
[-141.11178589 298.93307495]
[-152.93568420 308.16323853]
[-164.75956726 317.39340210]
[-165.13076782 333.02658081]
[-175.50267029 344.72946167]
[-190.97799683 346.97628784]
[-204.24975586 338.70620728]
[-209.05145264 323.82409668]
[-203.11584473 309.35678101]
[-189.24555969 302.13534546]
[-173.98971558 305.56951904]
[-162.16583252 296.33935547]
[-150.34194946 287.10919189]
[-138.51805115 277.87905884]
[-126.77846527 268.54193115]
[-115.12413025 259.09860229]
[-103.46980286 249.65525818]
[-101.88843536 237.63993835]
[-92.22506714 229.67909241]
[-79.32810211 230.47532654]
[-67.50421143 221.24517822]
[-55.68032455 212.01501465]
[-43.85643768 202.78486633]
[-32.03255081 193.55471802]
[-20.20866394 184.32456970]
[-8.38477612 175.09442139]
[-14.33454704 165.68136597]
[-19.46884918 155.79986572]
[-23.75106621 145.52038574]
[-27.15065193 134.91622925]
[-29.64336014 124.06304169]
[-31.21141624 113.03823853]
[-31.84363174 101.92043304]
[-31.53549957 90.78893280]
[-30.28921700 79.72313690]
[-28.11367226 68.80194855]
[-25.02438354 58.10328293]
[-21.04338264 47.70343781]
[-16.19906616 37.67658234]
[-10.52598190 28.09423828]
[-4.06459332 19.02474785]
[3.13901424 10.53279591]
[11.03346348 2.67895126]
[19.56244850 -4.48077059]
[28.66513824 -10.89530468]
[38.27660751 -16.51889992]
[48.32830811 -21.31144905]
[58.74854660 -25.23876762]
[69.46300507 -28.27284622]
[80.39525604 -30.39204407]
[91.46733856 -31.58124733]
[102.60028076 -31.83197594]
[113.71467590 -31.14243698]
[124.73124695 -29.51755333]
[135.57144165 -26.96891022]
[146.15791321 -23.51468658]
[156.41517639 -19.17952156]
[166.27008057 -13.99433136]
[175.65231323 -7.99609995]
[184.49497986 -1.22760820]
[192.73500061 6.26286888]
[200.31361389 14.42190742]
[207.17675781 23.19131470]
[213.27548218 32.50854492]
[218.56628418 42.30714035]
[223.01144409 52.51722336]
[226.57925415 63.06596375]
[241.19447327 59.69022369]
[255.80967712 56.31448364]
[270.42489624 52.93874359]
[285.00885010 49.43044281]
[299.56033325 45.78986740]
[314.11184692 42.14929581]
[328.66336060 38.50872040]
[332.96606445 23.83105659]
[343.96524048 13.34699535]
[358.63775635 9.79967308]
[373.01962280 14.04443836]
[383.27670288 24.84525681]
[397.82821655 21.20468140]
[412.37969971 17.56410789]
[426.93121338 13.92353439]
[441.48269653 10.28295994]
[456.03421021 6.64238596]
[470.58572388 3.00181222]
[485.13720703 -0.63876176]
[499.68872070 -4.27933598]
[514.24023438 -7.91990995]
[528.79174805 -11.56048393]
[527.96411133 -26.58418465]
[529.99499512 -41.49297333]
[534.81091309 -55.74791336]
[542.23785400 -68.83368683]
[552.00726318 -80.27726746]
[563.76599121 -89.66496277]
[577.08892822 -96.65740967]
[591.49456787 -101.00185394]
[606.46209717 -102.54123688]
[621.45043945 -101.21990204]
[635.91784668 -97.08563232]
[649.34118652 -90.28786469]
[661.23535156 -81.07233429]
[671.17028809 -69.77219391]
[678.78686523 -56.79591370]
[683.80981445 -42.61259460]
[686.05749512 -27.73494720]
[685.44873047 -12.70079231]
[682.00543213 1.94639778]
[675.85211182 15.67713451]
[667.21118164 27.99506187]
[656.39508057 38.45489120]
[643.79473877 46.67850876]
[629.86566162 52.36863708]
[615.11138916 55.31958008]
[600.06524658 55.42466354]
[585.27124023 52.68008423]
[571.26403809 47.18506622]
[558.55004883 39.13824081]
[547.58892822 28.83050537]
[538.77679443 16.63446999]
[532.43231201 2.99101877]
[517.88079834 6.63159275]
[503.32928467 10.27216625]
[488.77780151 13.91274071]
[474.22628784 17.55331421]
[459.67477417 21.19388771]
[445.12329102 24.83446312]
[430.57177734 28.47503662]
[416.02029419 32.11561203]
[401.46878052 35.75618362]
[386.91726685 39.39675903]
[382.95465088 53.75514221]
[372.26599121 64.27218628]
[357.65161133 68.05201721]
[343.01141357 63.98255157]
[332.30392456 53.06022263]
[317.75241089 56.70079803]
[303.20092773 60.34136963]
[288.64941406 63.98194504]
[282.90316772 68.67253113]
[273.80062866 67.55395508]
[259.18542480 70.92969513]
[244.57020569 74.30543518]
[229.95500183 77.68117523]
[231.83715820 97.67729950]
[230.66052246 117.72731018]
[226.45240784 137.36602783]
[219.31042480 156.13780212]
[209.40028381 173.60711670]
[196.95193481 189.36865234]
[182.25415039 203.05670166]
[165.64797974 214.35371399]
[147.51869202 222.99757385]
[128.28691101 228.78773499]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 44]
[7 43]
[8 42]
[9 41]
[10 40]
[11 39]
[12 38]
[14 35]
[15 34]
[16 33]
[18 32]
[19 31]
[20 30]
[21 29]
[85 162]
[86 161]
[87 160]
[88 159]
[89 157]
[90 156]
[91 155]
[92 154]
[97 149]
[98 148]
[99 147]
[100 146]
[101 145]
[102 144]
[103 143]
[104 142]
[105 141]
[106 140]
[107 139]
] def

init

% Start Annotations
6 44 0.0 1 colorpair
7 43 0.0 1 colorpair
8 42 0.0 1 colorpair
9 41 0.0 1 colorpair
10 40 0.0 1 colorpair
11 39 0.16 0.6 colorpair
12 38 0.0 0.6 colorpair
14 35 0.16 0.6 colorpair
15 34 0.0 1 colorpair
16 33 0.0 1 colorpair
18 32 0.0 1 colorpair
19 31 0.0 0.6 colorpair
20 30 0.0 1 colorpair
21 29 0.16 1 colorpair
85 162 0.16 1 colorpair
86 161 0.0 0.6 colorpair
87 160 0.0 1 colorpair
88 159 0.0 1 colorpair
89 157 0.0 1 colorpair
90 156 0.0 1 colorpair
91 155 0.0 1 colorpair
92 154 0.0 0.6 colorpair
97 149 0.0 1 colorpair
98 148 0.0 1 colorpair
99 147 0.32 1 colorpair
100 146 0.0 1 colorpair
101 145 0.0 0.6 colorpair
102 144 0.0 1 colorpair
103 143 0.0 1 colorpair
104 142 0.0 0.6 colorpair
105 141 0.16 1 colorpair
106 140 0.0 0.6 colorpair
107 139 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
11 39 1 gmark
39 cmark
12 38 1 gmark
14 35 1 gmark
14 cmark
35 cmark
19 31 1 gmark
29 cmark
85 cmark
86 161 1 gmark
92 154 1 gmark
99 cmark
147 cmark
101 145 1 gmark
104 142 1 gmark
105 cmark
141 cmark
106 140 1 gmark
107 139 1 gmark
107 cmark

% End Annotations
showpage
end
%%EOF
