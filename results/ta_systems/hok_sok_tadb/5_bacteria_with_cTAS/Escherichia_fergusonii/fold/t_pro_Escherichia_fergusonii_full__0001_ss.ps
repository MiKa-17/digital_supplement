%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 23:47:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_________________________________CAUG___CUGACGAAAUAUGCCCUUGU__GGCA_GUCAUAGUGCUGUGUUUCACGGUGCUGGGAUUCACGCUGCUGAUAGGCGACUCGCUGUGUGAGUUGACUAUCAAAGAACGUAAUAUUGAGUUCACGGCUGUUCUCGCUUACGAAUCGAAGAA_____________\
) } def
/len { sequence length } bind def

/coor [
[130.15643311 527.44879150]
[115.92720795 528.21508789]
[101.68036652 528.50793457]
[87.43167114 528.32684326]
[73.19686890 527.67211914]
[58.99171066 526.54449463]
[44.83190155 524.94512939]
[30.73309898 522.87579346]
[16.71089363 520.33886719]
[2.78079557 517.33715820]
[-11.04179287 513.87390137]
[-24.74158669 509.95291138]
[-38.30343628 505.57861328]
[-51.71234131 500.75582886]
[-64.95347595 495.48983765]
[-78.01219177 489.78649902]
[-90.87406158 483.65213013]
[-103.52484894 477.09347534]
[-115.95056915 470.11782837]
[-128.13748169 462.73291016]
[-140.07209778 454.94683838]
[-151.74124146 446.76824951]
[-163.13200378 438.20617676]
[-174.23176575 429.27011108]
[-185.02827454 419.96990967]
[-195.50958252 410.31588745]
[-205.66410828 400.31869507]
[-215.48060608 389.98937988]
[-224.94824219 379.33941650]
[-234.05653381 368.38052368]
[-242.79539490 357.12481689]
[-251.15518188 345.58480835]
[-259.12664795 333.77319336]
[-266.70098877 321.70309448]
[-273.86978149 309.38778687]
[-280.62515259 296.84094238]
[-286.95959473 284.07644653]
[-292.86611938 271.10836792]
[-298.33819580 257.95104980]
[-303.36978149 244.61909485]
[-307.95529175 231.12719727]
[-312.08966064 217.49029541]
[-315.76834106 203.72346497]
[-318.98721313 189.84191895]
[-321.74276733 175.86103821]
[-324.03195190 161.79626465]
[-325.85220337 147.66314697]
[-327.20150757 133.47732544]
[-328.07839966 119.25449371]
[-328.48193359 105.01035309]
[-328.41159058 90.76068115]
[-327.86752319 76.52122498]
[-326.85028076 62.30773163]
[-325.36099243 48.13591766]
[-323.40133667 34.02146149]
[-320.97344971 19.97996521]
[-318.08004761 6.02695942]
[-314.72430420 -7.82212591]
[-310.90994263 -21.55197525]
[-306.64117432 -35.14740753]
[-301.92272949 -48.59338760]
[-296.75979614 -61.87504578]
[-291.15811157 -74.97769165]
[-285.12387085 -87.88684082]
[-278.66375732 -100.58821869]
[-271.78488159 -113.06777191]
[-264.49484253 -125.31170654]
[-256.80175781 -137.30647278]
[-248.71411133 -149.03881836]
[-240.24082947 -160.49577332]
[-231.39128113 -171.66464233]
[-222.17527771 -182.53311157]
[-212.60299683 -193.08912659]
[-202.68501282 -203.32102966]
[-192.43231201 -213.21751404]
[-181.85621643 -222.76760864]
[-170.96844482 -231.96078491]
[-159.78102112 -240.78686523]
[-148.30630493 -249.23608398]
[-136.55700684 -257.29910278]
[-124.54611206 -264.96697998]
[-112.28691101 -272.23129272]
[-99.79293823 -279.08395386]
[-87.07803345 -285.51739502]
[-74.15625000 -291.52453613]
[-61.04187012 -297.09869385]
[-47.74940491 -302.23373413]
[-34.29355240 -306.92395020]
[-20.68918991 -311.16418457]
[-6.95136309 -314.94970703]
[6.90473557 -318.27639771]
[20.86378288 -321.14050293]
[34.91034317 -323.53890991]
[49.02888489 -325.46893311]
[63.20379257 -326.92843628]
[77.41938782 -327.91586304]
[91.65995789 -328.43005371]
[105.90975189 -328.47045898]
[120.15300751 -328.03704834]
[134.37397766 -327.13031006]
[148.55693054 -325.75119019]
[162.68618774 -323.90130615]
[176.74612427 -321.58261108]
[190.72120667 -318.79772949]
[204.59594727 -315.54968262]
[218.35502625 -311.84213257]
[231.98321533 -307.67916870]
[245.46545410 -303.06533813]
[258.78683472 -298.00576782]
[271.93261719 -292.50610352]
[284.88827515 -286.57235718]
[297.63946533 -280.21112061]
[310.17211914 -273.42944336]
[322.47232056 -266.23480225]
[334.52651978 -258.63516235]
[346.32135010 -250.63891602]
[357.84381104 -242.25492859]
[369.08111572 -233.49244690]
[378.70315552 -244.99967957]
[388.32519531 -256.50689697]
[397.94723511 -268.01412964]
[407.56927490 -279.52136230]
[413.09115601 -295.55087280]
[430.02285767 -294.68218994]
[433.87527466 -278.17175293]
[419.07650757 -269.89932251]
[409.45446777 -258.39208984]
[399.83242798 -246.88487244]
[390.21038818 -235.37763977]
[380.58834839 -223.87040710]
[393.67306519 -212.05445862]
[406.26068115 -199.71028137]
[418.32986450 -186.85877991]
[429.86019897 -173.52168274]
[440.83215332 -159.72158813]
[451.22717285 -145.48184204]
[461.02764893 -130.82656860]
[470.21697998 -115.78054810]
[478.77963257 -100.36927032]
[486.70111084 -84.61882019]
[493.96801758 -68.55584717]
[500.56799316 -52.20755768]
[506.48992920 -35.60161972]
[511.72378540 -18.76613617]
[516.26068115 -1.72961402]
[520.09295654 15.47911263]
[523.21411133 32.83090973]
[525.61883545 50.29640961]
[527.30316162 67.84604645]
[528.26409912 85.45011139]
[528.50018311 103.07880402]
[528.01086426 120.70228577]
[526.79699707 138.29072571]
[524.86071777 155.81434631]
[522.20520020 173.24348450]
[518.83508301 190.54864502]
[514.75592041 207.70053101]
[509.97467041 224.67010498]
[504.49945068 241.42863464]
[498.33950806 257.94778442]
[491.50527954 274.19952393]
[484.00833130 290.15643311]
[475.86135864 305.79141235]
[488.89025879 313.22430420]
[501.91912842 320.65719604]
[516.52215576 315.06375122]
[531.28710938 320.21441650]
[539.24255371 333.67715454]
[536.63208008 349.09530640]
[524.68829346 359.18887329]
[509.05068970 359.19201660]
[497.10290527 349.10321045]
[494.48626709 333.68609619]
[481.45736694 326.25320435]
[468.42846680 318.82031250]
[460.94903564 330.94946289]
[453.07043457 342.82324219]
[444.80142212 354.42846680]
[436.15109253 365.75231934]
[427.12902832 376.78231812]
[417.74523926 387.50622559]
[408.01004028 397.91220093]
[397.93423462 407.98873901]
[387.52896118 417.72467041]
[376.80572510 427.10925293]
[365.77636719 436.13208008]
[354.45312500 444.78323364]
[342.84848022 453.05307007]
[330.97528076 460.93252563]
[318.84667969 468.41281128]
[306.47604370 475.48568726]
[293.87707520 482.14334106]
[281.06372070 488.37841797]
[268.05014038 494.18399048]
[254.85070801 499.55364990]
[241.48004150 504.48147583]
[227.95291138 508.96200562]
[214.28428650 512.99029541]
[200.48928833 516.56182861]
[186.58316040 519.67272949]
[172.58128357 522.31958008]
[158.49914551 524.49938965]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[118 130]
[119 129]
[120 128]
[121 127]
[122 126]
[163 175]
[164 174]
[165 173]
] def

init

% Start Annotations
119 129 0.0 0.2 colorpair
120 128 0.0 0.2 colorpair
121 127 0.32 0.2 colorpair
122 126 0.16 1 colorpair
163 175 0.16 0.2 colorpair
164 174 0.0 1 colorpair
165 173 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
118 130 4 gmark
118 cmark
130 cmark
119 129 2 gmark
120 128 2 gmark
121 127 2 gmark
121 cmark
127 cmark
122 cmark
163 175 2 gmark
175 cmark
165 cmark

% End Annotations
showpage
end
%%EOF
