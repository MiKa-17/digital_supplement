%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 23:47:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__CCCUUGU___GGCUGUCAUAGUGCUGUGUUUCACAGUGCUGGUAUUCACGUUUCUGAUAGGAGACUCGCUGUGUGAGUUGCGUAUCAAAGAAGGUAAUAUUGAGUUGACGGCUUUUCUCGCUUACGAAUCGAAGAAGUA_GCAGUCUU__GCGGGGAGUA_AUCCCCGCCUAUCCAGUUGU_A_GUUAGGUUGGCUA__GAAGCCCCCUUAA_A_____________\
) } def
/len { sequence length } bind def

/coor [
[123.19239807 537.00921631]
[109.74147034 537.51574707]
[96.28132629 537.60839844]
[82.82469940 537.28704834]
[69.38432312 536.55194092]
[55.97291183 535.40386963]
[42.60315323 533.84393311]
[29.28769302 531.87347412]
[16.03913307 529.49450684]
[2.87000275 526.70916748]
[-10.20723629 523.52014160]
[-23.18021202 519.93041992]
[-36.03665543 515.94348145]
[-48.76439667 511.56298828]
[-61.35139847 506.79315186]
[-73.78575897 501.63845825]
[-86.05570221 496.10379028]
[-98.14962769 490.19439697]
[-110.05609131 483.91586304]
[-121.76383209 477.27410889]
[-133.26176453 470.27542114]
[-144.53903198 462.92645264]
[-155.58493042 455.23413086]
[-166.38905334 447.20571899]
[-176.94114685 438.84884644]
[-187.23123169 430.17141724]
[-197.24958801 421.18161011]
[-206.98672485 411.88793945]
[-216.43344116 402.29922485]
[-225.58079529 392.42449951]
[-234.42012024 382.27313232]
[-242.94306946 371.85470581]
[-251.14158630 361.17910767]
[-259.00790405 350.25640869]
[-266.53454590 339.09695435]
[-273.71444702 327.71130371]
[-280.54080200 316.11022949]
[-287.00714111 304.30471802]
[-293.10733032 292.30590820]
[-298.83563232 280.12515259]
[-304.18661499 267.77398682]
[-309.15521240 255.26411438]
[-313.73672485 242.60734558]
[-317.92681885 229.81565857]
[-321.72152710 216.90116882]
[-325.11727905 203.87608337]
[-328.11083984 190.75271606]
[-330.69937134 177.54348755]
[-332.88043213 164.26091003]
[-334.65197754 150.91754150]
[-336.01232910 137.52598572]
[-336.96017456 124.09894562]
[-337.49459839 110.64909363]
[-337.61517334 97.18917084]
[-337.32171631 83.73191071]
[-336.61453247 70.29003906]
[-335.49429321 56.87627411]
[-333.96206665 43.50330734]
[-332.01925659 30.18378830]
[-329.66775513 16.93032074]
[-326.90972900 3.75544167]
[-323.74786377 -9.32838535]
[-320.18508911 -22.30878067]
[-316.22479248 -35.17346573]
[-311.87072754 -47.91026688]
[-307.12701416 -60.50714111]
[-301.99810791 -72.95216370]
[-315.67337036 -79.11553955]
[-329.34863281 -85.27891541]
[-343.02389526 -91.44229126]
[-356.69915771 -97.60567474]
[-373.62384033 -98.60148621]
[-377.35217285 -115.14041138]
[-362.49169922 -123.30145264]
[-350.53579712 -111.28092957]
[-336.86053467 -105.11755371]
[-323.18527222 -98.95417786]
[-309.51000977 -92.79080200]
[-295.83474731 -86.62742615]
[-288.81829834 -100.83644104]
[-281.29199219 -114.78211212]
[-273.26571655 -128.44613647]
[-264.75000000 -141.81062317]
[-255.75599670 -154.85801697]
[-246.29550171 -167.57124329]
[-236.38092041 -179.93359375]
[-226.02525330 -191.92887878]
[-215.24208069 -203.54138184]
[-204.04554749 -214.75584412]
[-192.45033264 -225.55760193]
[-180.47161865 -235.93244934]
[-168.12515259 -245.86680603]
[-155.42709351 -255.34762573]
[-142.39410400 -264.36251831]
[-129.04327393 -272.89959717]
[-115.39210510 -280.94775391]
[-101.45850372 -288.49633789]
[-87.26073456 -295.53552246]
[-72.81741333 -302.05606079]
[-58.14748383 -308.04940796]
[-43.27018356 -313.50765991]
[-28.20501709 -318.42373657]
[-12.97174072 -322.79110718]
[2.40967155 -326.60412598]
[17.91905022 -329.85772705]
[33.53606033 -332.54766846]
[49.24022293 -334.67044067]
[65.01094055 -336.22323608]
[80.82754517 -337.20401001]
[96.66928101 -337.61151123]
[112.51538849 -337.44519043]
[128.34509277 -336.70526123]
[129.57302856 -351.65493774]
[130.80097961 -366.60458374]
[119.55844116 -377.47378540]
[117.98416901 -393.03192139]
[126.82148743 -405.93292236]
[141.89767456 -410.08532715]
[156.09422302 -403.52850342]
[162.70796204 -389.35836792]
[158.61607361 -374.26565552]
[145.75062561 -365.37664795]
[144.52268982 -350.42697144]
[143.29473877 -335.47732544]
[162.34776306 -333.16012573]
[181.28085327 -330.00973511]
[200.05760193 -326.03216553]
[218.64189148 -321.23513794]
[236.99795532 -315.62783813]
[255.09049988 -309.22106934]
[272.88473511 -302.02713013]
[290.34640503 -294.05987549]
[307.44192505 -285.33462524]
[324.13845825 -275.86819458]
[340.40380859 -265.67874146]
[356.20675659 -254.78590393]
[371.51687622 -243.21060181]
[386.30471802 -230.97514343]
[400.54183960 -218.10302734]
[414.20086670 -204.61901855]
[427.25552368 -190.54907227]
[439.68066406 -175.92024231]
[451.45242310 -160.76066589]
[462.54815674 -145.09951782]
[472.94650269 -128.96688843]
[482.62747192 -112.39384460]
[491.57244873 -95.41225433]
[499.76422119 -78.05477142]
[507.18704224 -60.35480118]
[513.82659912 -42.34637833]
[518.51153564 -46.98069763]
[524.00799561 -48.35706329]
[528.54583740 -46.90763474]
[542.93298340 -51.15149307]
[557.32006836 -55.39534760]
[571.70721436 -59.63920593]
[586.09436035 -63.88306046]
[600.48150635 -68.12692261]
[606.56701660 -82.53179169]
[620.51153564 -89.60880280]
[635.73089600 -86.01639557]
[645.03900146 -73.45080566]
[644.04077148 -57.84511948]
[633.20758057 -46.56785583]
[617.65460205 -44.94380188]
[604.72534180 -53.73978424]
[590.33819580 -49.49592590]
[575.95111084 -45.25207138]
[561.56396484 -41.00821304]
[547.17681885 -36.76435471]
[532.78967285 -32.52050018]
[518.46185303 -28.08053017]
[522.20294189 -15.15040112]
[525.54461670 -2.11133313]
[528.48370361 11.02433777]
[531.01739502 24.24418449]
[533.14331055 37.53570175]
[534.85949707 50.88631058]
[536.16424561 64.28338623]
[537.05639648 77.71425629]
[537.53503418 91.16619873]
[537.59973145 104.62651062]
[537.25048828 118.08243561]
[536.48748779 131.52125549]
[535.31164551 144.93026733]
[533.72393799 158.29675293]
[531.72589111 171.60809326]
[529.31939697 184.85169983]
[526.50671387 198.01501465]
[523.29058838 211.08561707]
[519.67401123 224.05111694]
[515.66033936 236.89926147]
[511.25347900 249.61788940]
[506.45755005 262.19497681]
[501.27706909 274.61859131]
[495.71694946 286.87704468]
[489.78247070 298.95867920]
[483.47924805 310.85208130]
[476.81323242 322.54602051]
[469.79071045 334.02941895]
[462.41836548 345.29141235]
[454.70312500 356.32135010]
[446.65234375 367.10876465]
[438.27359009 377.64349365]
[429.57482910 387.91558838]
[420.56423950 397.91525269]
[411.25039673 407.63308716]
[401.64212036 417.05990601]
[391.74844360 426.18673706]
[381.57876587 435.00500488]
[371.14266968 443.50631714]
[360.45010376 451.68264771]
[349.51110840 459.52627563]
[338.33605957 467.02978516]
[326.93554688 474.18606567]
[315.32031250 480.98831177]
[303.50140381 487.43014526]
[291.48995972 493.50543213]
[279.29736328 499.20846558]
[266.93511963 504.53381348]
[254.41496277 509.47644043]
[241.74871826 514.03167725]
[228.94837952 518.19525146]
[216.02603149 521.96313477]
[202.99392700 525.33184814]
[189.86437988 528.29815674]
[176.64982605 530.85931396]
[163.36274719 533.01281738]
[150.01571655 534.75665283]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[67 79]
[68 78]
[69 77]
[70 76]
[71 75]
[112 124]
[113 123]
[114 122]
[150 172]
[153 171]
[154 170]
[155 169]
[156 168]
[157 167]
[158 166]
] def

init

% Start Annotations
68 78 0.0 0.6 colorpair
69 77 0.0 0.6 colorpair
70 76 0.32 0.6 colorpair
71 75 0.16 1 colorpair
112 124 0.16 0.6 colorpair
113 123 0.0 1 colorpair
114 122 0.16 1 colorpair
150 172 0.32 0.2 colorpair
153 171 0.0 1 colorpair
154 170 0.0 0.2 colorpair
155 169 0.0 1 colorpair
156 168 0.0 1 colorpair
157 167 0.0 0.2 colorpair
158 166 0.16 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
67 79 3 gmark
67 cmark
79 cmark
68 78 1 gmark
69 77 1 gmark
70 76 1 gmark
70 cmark
76 cmark
71 cmark
112 124 1 gmark
124 cmark
114 cmark
150 172 2 gmark
150 cmark
172 cmark
154 170 2 gmark
157 167 2 gmark
158 166 2 gmark
158 cmark
166 cmark

% End Annotations
showpage
end
%%EOF
