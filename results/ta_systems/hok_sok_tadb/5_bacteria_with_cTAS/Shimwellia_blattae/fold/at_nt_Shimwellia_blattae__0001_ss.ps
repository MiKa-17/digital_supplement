%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:41:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCAGUAUGGUGUCUGUUGAUAGUGUGUUUAACGCUGUUACUGCUCACCUUAAUUAUCCACCCCAGGCUAUGUGAAAUUCGCGUAACCAUGGGUUCCCGGGAAAUUGCGGCCAUUAUGGCUUGUG\
) } def
/len { sequence length } bind def

/coor [
[117.62031555 196.59236145]
[131.62591553 201.96861267]
[126.18693542 187.98942566]
[120.74797058 174.01023865]
[115.30899811 160.03105164]
[109.87002563 146.05187988]
[104.43105316 132.07269287]
[89.65267944 130.67938232]
[77.04922485 122.83754730]
[69.26981354 110.19546509]
[54.32600021 111.49253082]
[39.38218307 112.78960419]
[24.43836975 114.08666992]
[18.96763039 128.29344177]
[7.91616058 138.67381287]
[-6.48738050 143.20791626]
[-21.37005043 141.04756165]
[-33.78764725 132.67422485]
[-41.30715561 119.79313660]
[-56.25096893 121.09020233]
[-71.19478607 122.38727570]
[-86.13860321 123.68434143]
[-101.08241272 124.98140717]
[-116.02622986 126.27848053]
[-130.97004700 127.57554626]
[-145.91386414 128.87261963]
[-160.85768127 130.16967773]
[-172.23770142 141.47784424]
[-188.15687561 139.48806763]
[-196.40338135 125.72672272]
[-190.65119934 110.75033569]
[-175.31291199 106.04752350]
[-162.15473938 115.22586823]
[-147.21092224 113.92879486]
[-132.26712036 112.63172913]
[-117.32329559 111.33466339]
[-102.37948608 110.03759766]
[-87.43566895 108.74052429]
[-72.49185181 107.44345856]
[-57.54803848 106.14639282]
[-42.60422134 104.84931946]
[-37.41650772 90.86528778]
[-26.62729073 80.47769165]
[-12.33940315 75.78543854]
[2.62994289 77.77009583]
[15.30462456 86.09111786]
[23.14130211 99.14285278]
[38.08511734 97.84578705]
[53.02893066 96.54871368]
[67.97274780 95.25164795]
[70.19174957 87.36037445]
[74.32148743 80.27930450]
[80.09723663 74.46234894]
[87.14875793 70.28237152]
[95.02406311 68.00731659]
[103.21832275 67.78301239]
[111.20628357 69.62384033]
[118.47592163 73.41180420]
[129.65614319 63.41166687]
[140.83634949 53.41152954]
[140.47344971 32.49311829]
[155.29443359 18.13717651]
[175.61584473 19.13834190]
[185.75350952 8.08266354]
[195.89115906 -2.97301412]
[206.02880859 -14.02869129]
[216.02894592 -25.20890808]
[225.89004517 -36.51195145]
[229.13201904 -51.99743271]
[243.32934570 -56.50134277]
[253.19044495 -67.80438995]
[263.05154419 -79.10742950]
[272.91262817 -90.41047668]
[282.77374268 -101.71352386]
[292.63482666 -113.01656342]
[302.49591064 -124.31961060]
[308.35253906 -140.22987366]
[325.26226807 -139.00654602]
[328.76785278 -122.41897583]
[313.79895020 -114.45851898]
[303.93786621 -103.15547180]
[294.07678223 -91.85242462]
[284.21566772 -80.54938507]
[274.35458374 -69.24633789]
[264.49349976 -57.94329453]
[254.63240051 -46.64025116]
[252.09573364 -31.96323776]
[237.19308472 -26.65085793]
[227.33198547 -15.34781361]
[225.28346252 -8.16208076]
[217.08448792 -3.89103961]
[206.94683838 7.16463804]
[196.80917358 18.22031593]
[186.67152405 29.27599335]
[190.00692749 38.27137756]
[189.77471924 47.92081451]
[185.96467590 56.85276031]
[179.07818604 63.78166580]
[170.06269836 67.69297028]
[160.18142700 67.99153137]
[150.83648682 64.59174347]
[139.65628052 74.59188080]
[128.47605896 84.59201813]
[131.48741150 107.53886414]
[118.41023254 126.63372040]
[123.84920502 140.61289978]
[129.28817749 154.59208679]
[134.72715759 168.57127380]
[140.16612244 182.55046082]
[145.60508728 196.52963257]
[152.23249817 209.98614502]
[159.99865723 222.81916809]
[167.76483154 235.65220642]
[175.53100586 248.48522949]
[188.90449524 258.90570068]
[182.59341431 274.64120483]
[165.72575378 272.93280029]
[162.69798279 256.25140381]
[154.93180847 243.41836548]
[147.16563416 230.58534241]
[139.39945984 217.75231934]
[135.12510681 232.13043213]
[122.72447968 240.56987000]
[107.78083038 239.27088928]
[97.02239990 228.81832886]
[95.29306030 213.91835022]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 110]
[3 109]
[4 108]
[5 107]
[6 106]
[7 105]
[10 50]
[11 49]
[12 48]
[13 47]
[19 41]
[20 40]
[21 39]
[22 38]
[23 37]
[24 36]
[25 35]
[26 34]
[27 33]
[58 103]
[59 102]
[60 101]
[63 94]
[64 93]
[65 92]
[66 91]
[67 89]
[68 88]
[70 86]
[71 85]
[72 84]
[73 83]
[74 82]
[75 81]
[76 80]
[111 121]
[112 120]
[113 119]
[114 118]
] def

init

% Start Annotations
2 110 0.0 1 colorpair
3 109 0.0 1 colorpair
4 108 0.0 1 colorpair
5 107 0.0 1 colorpair
6 106 0.0 1 colorpair
7 105 0.0 1 colorpair
10 50 0.0 1 colorpair
11 49 0.0 1 colorpair
12 48 0.0 1 colorpair
13 47 0.0 1 colorpair
19 41 0.0 1 colorpair
20 40 0.0 1 colorpair
21 39 0.0 1 colorpair
22 38 0.0 1 colorpair
23 37 0.0 1 colorpair
24 36 0.0 1 colorpair
25 35 0.0 1 colorpair
26 34 0.0 1 colorpair
27 33 0.0 1 colorpair
58 103 0.0 1 colorpair
59 102 0.0 1 colorpair
60 101 0.0 1 colorpair
63 94 0.0 1 colorpair
64 93 0.0 1 colorpair
65 92 0.0 1 colorpair
66 91 0.0 1 colorpair
67 89 0.0 1 colorpair
68 88 0.0 1 colorpair
70 86 0.0 1 colorpair
71 85 0.0 1 colorpair
72 84 0.0 1 colorpair
73 83 0.0 1 colorpair
74 82 0.0 1 colorpair
75 81 0.0 1 colorpair
76 80 0.0 1 colorpair
111 121 0.0 1 colorpair
112 120 0.0 1 colorpair
113 119 0.0 1 colorpair
114 118 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
