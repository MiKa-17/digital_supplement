%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:41:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAGCGGCUACUCUGAUGUUCUUGGGCAUAGAGUAGGCCUCGUGGAUUAAUGAAAAUUAACUACGGGGCUUUAUUCUUUCUGCCUUAC__________________________________________________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[216.74784851 117.67729950]
[215.20292664 102.75225830]
[200.21586609 103.37541199]
[185.22882080 103.99856567]
[170.24177551 104.62171936]
[155.25471497 105.24486542]
[140.27336121 105.99255371]
[125.29874420 106.86473083]
[110.32411957 107.73690033]
[96.60073090 113.79236603]
[85.86272430 124.26591492]
[75.12472534 134.73947144]
[64.38671875 145.21301270]
[53.64871979 155.68656921]
[42.91071701 166.16012573]
[32.17271423 176.63368225]
[21.43471146 187.10722351]
[17.46626854 195.35609436]
[10.43010616 197.66377258]
[-0.48049870 207.95739746]
[-11.39110374 218.25102234]
[-22.30170822 228.54464722]
[-26.48412132 244.40148926]
[-42.37665558 248.44616699]
[-53.63043213 236.51786804]
[-48.66853333 220.88739014]
[-32.59533310 217.63404846]
[-21.68472862 207.34042358]
[-10.77412319 197.04679871]
[0.13648134 186.75317383]
[10.96115875 176.36923218]
[21.69916153 165.89567566]
[32.43716431 155.42211914]
[43.17516708 144.94856262]
[53.91316986 134.47502136]
[64.65116882 124.00146484]
[75.38917542 113.52791595]
[86.12717438 103.05435944]
[82.30513763 88.54946136]
[67.80023956 84.72742462]
[53.29534531 80.90538025]
[38.79045105 77.08333588]
[24.28555298 73.26129150]
[9.78065872 69.43924713]
[-4.72423649 65.61720276]
[-19.22913170 61.79516220]
[-33.73402786 57.97312164]
[-42.84928131 58.81240463]
[-48.44721985 53.96512604]
[-62.88658524 49.90251923]
[-77.32595062 45.83991241]
[-91.76531219 41.77730560]
[-106.20467377 37.71469879]
[-121.95454407 42.28345871]
[-133.59716797 30.73438072]
[-129.15562439 14.94816399]
[-113.19897461 11.16431618]
[-102.14206696 23.27533531]
[-87.70270538 27.33794212]
[-73.26334381 31.40054893]
[-58.82397842 35.46315765]
[-44.38461304 39.52576447]
[-29.91198349 43.46822357]
[-15.40708923 47.29026794]
[-0.90219355 51.11231232]
[13.60270214 54.93435287]
[28.10759735 58.75639725]
[42.61249161 62.57844162]
[57.11738586 66.40048218]
[71.62228394 70.22252655]
[86.12717438 74.04457092]
[83.75377655 59.23352814]
[88.50498962 45.00587845]
[99.30175018 34.59290695]
[113.69197845 30.35953903]
[128.40745544 33.26722336]
[140.10610962 42.65558624]
[146.13102722 56.39241409]
[145.11387634 71.35788727]
[137.28564453 84.15315247]
[124.42424011 91.87223816]
[109.45195007 92.76228333]
[124.42656708 91.89010620]
[139.40118408 91.01793671]
[147.80494690 87.38898468]
[154.63156128 90.25782013]
[169.61862183 89.63466644]
[184.60566711 89.01151276]
[199.59271240 88.38835907]
[214.57977295 87.76520538]
[214.88037109 72.76343536]
[216.10391235 57.80861664]
[218.24578857 42.95748520]
[221.29783630 28.26638031]
[225.24850464 13.79102612]
[230.08280945 -0.41366535]
[235.78237915 -14.29380989]
[242.32563782 -27.79675674]
[249.68772888 -40.87128067]
[257.84072876 -53.46779251]
[266.75375366 -65.53849792]
[276.39291382 -77.03762054]
[286.72174072 -87.92153168]
[297.70095825 -98.14894867]
[309.28897095 -107.68106842]
[321.44183350 -116.48174286]
[334.11340332 -124.51758575]
[347.25564575 -131.75810242]
[360.81869507 -138.17584229]
[374.75112915 -143.74644470]
[389.00003052 -148.44879150]
[403.51141357 -152.26504517]
[418.23019409 -155.18072510]
[433.10052490 -157.18476868]
[448.06607056 -158.26956177]
[463.06997681 -158.43101501]
[478.05538940 -157.66850281]
[492.96542358 -155.98492432]
[507.74353027 -153.38665771]
[522.33367920 -149.88356018]
[536.68048096 -145.48893738]
[550.72949219 -140.21942139]
[564.42755127 -134.09503174]
[577.72253418 -127.13899994]
[590.56408691 -119.37770844]
[602.90350342 -110.84059143]
[614.69396973 -101.56003571]
[625.89074707 -91.57125092]
[636.45141602 -80.91212463]
[646.33581543 -69.62309265]
[655.50646973 -57.74697876]
[663.92864990 -45.32883072]
[671.57043457 -32.41575623]
[678.40270996 -19.05674362]
[684.39965820 -5.30246210]
[689.53851318 8.79491043]
[693.79974365 23.18189812]
[697.16723633 37.80392456]
[699.62817383 52.60552597]
[701.17327881 67.53054810]
[701.79663086 82.52238464]
[701.49591064 97.52415466]
[700.27215576 112.47895813]
[698.13018799 127.33007050]
[695.07794189 142.02114868]
[691.12713623 156.49645996]
[686.29272461 170.70111084]
[680.59301758 184.58119202]
[674.04962158 198.08407593]
[666.68737793 211.15852356]
[658.53424072 223.75495911]
[649.62115479 235.82557678]
[639.98187256 247.32460022]
[629.65295410 258.20840454]
[618.67358398 268.43572998]
[607.08551025 277.96774292]
[594.93255615 286.76828003]
[582.26086426 294.80398560]
[569.11859131 302.04440308]
[555.55548096 308.46200562]
[541.62298584 314.03247070]
[527.37402344 318.73468018]
[512.86260986 322.55078125]
[498.14382935 325.46630859]
[483.27346802 327.47021484]
[468.30792236 328.55487061]
[453.30401611 328.71615601]
[438.31860352 327.95352173]
[423.40859985 326.26977539]
[408.63049316 323.67135620]
[394.04040527 320.16812134]
[379.69363403 315.77334595]
[365.64462280 310.50372314]
[351.94668579 304.37918091]
[338.65173340 297.42303467]
[325.81024170 289.66159058]
[313.47091675 281.12435913]
[301.68054199 271.84368896]
[290.48385620 261.85479736]
[279.92333984 251.19557190]
[270.03906250 239.90643311]
[260.86849976 228.03022766]
[252.44642639 215.61199951]
[244.80480957 202.69885254]
[237.97264099 189.33976746]
[231.97583008 175.58543396]
[226.83711243 161.48800659]
[222.57600403 147.10098267]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 90]
[3 89]
[4 88]
[5 87]
[6 86]
[7 84]
[8 83]
[9 82]
[10 38]
[11 37]
[12 36]
[13 35]
[14 34]
[15 33]
[16 32]
[17 31]
[19 30]
[20 29]
[21 28]
[22 27]
[39 71]
[40 70]
[41 69]
[42 68]
[43 67]
[44 66]
[45 65]
[46 64]
[47 63]
[49 62]
[50 61]
[51 60]
[52 59]
[53 58]
] def

init

% Start Annotations
2 90 0.0 1 colorpair
3 89 0.0 1 colorpair
4 88 0.0 1 colorpair
5 87 0.0 1 colorpair
6 86 0.0 1 colorpair
7 84 0.0 1 colorpair
8 83 0.0 1 colorpair
9 82 0.0 1 colorpair
10 38 0.0 1 colorpair
11 37 0.0 1 colorpair
12 36 0.0 1 colorpair
13 35 0.0 1 colorpair
14 34 0.0 1 colorpair
15 33 0.0 1 colorpair
16 32 0.0 1 colorpair
17 31 0.0 1 colorpair
19 30 0.0 1 colorpair
20 29 0.0 1 colorpair
21 28 0.0 1 colorpair
22 27 0.0 1 colorpair
39 71 0.0 1 colorpair
40 70 0.0 1 colorpair
41 69 0.0 1 colorpair
42 68 0.0 1 colorpair
43 67 0.0 1 colorpair
44 66 0.0 1 colorpair
45 65 0.0 1 colorpair
46 64 0.0 1 colorpair
47 63 0.0 1 colorpair
49 62 0.0 1 colorpair
50 61 0.0 1 colorpair
51 60 0.0 1 colorpair
52 59 0.0 1 colorpair
53 58 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
