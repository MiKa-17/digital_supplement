%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:15:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAGAGGCUACGCUGACGUUGCUUAGGCGUCGGUGUAGCCUCGGGUUAAUUGAAAAAUUGACUCGGGGCUUUCAUCUUUCUGCCUCACAUCAUUUCUGCAUAACGUCUUAAAGCACAGCCAUGAGGCAAAAAGCCUCAAGCGCCGCCCGCAUAAUA\
) } def
/len { sequence length } bind def

/coor [
[100.88888550 147.34500122]
[98.23553467 132.58154297]
[95.58217621 117.81808472]
[88.68905640 114.86261749]
[74.90280151 108.95166779]
[68.00967407 105.99620056]
[55.48641586 114.25258636]
[42.96315384 122.50897217]
[30.43989182 130.76535034]
[17.91662979 139.02174377]
[5.39336777 147.27812195]
[-7.12989426 155.53451538]
[-19.65315628 163.79089355]
[-32.17641830 172.04728699]
[-44.69968033 180.30368042]
[-57.22294235 188.56005859]
[-69.74620056 196.81645203]
[-82.26946259 205.07283020]
[-94.79272461 213.32922363]
[-107.31598663 221.58560181]
[-119.83924866 229.84199524]
[-132.36251831 238.09837341]
[-136.98493958 253.46107483]
[-151.93099976 259.29159546]
[-165.73533630 251.11726379]
[-167.80845642 235.20872498]
[-156.56002808 223.76965332]
[-140.61889648 225.57511902]
[-128.09564209 217.31872559]
[-115.57237244 209.06234741]
[-103.04911041 200.80595398]
[-90.52584839 192.54957581]
[-78.00258636 184.29318237]
[-65.47932434 176.03680420]
[-52.95606613 167.78041077]
[-40.43280411 159.52403259]
[-27.90954208 151.26763916]
[-15.38628006 143.01124573]
[-2.86301851 134.75486755]
[9.66024303 126.49848175]
[22.18350410 118.24209595]
[34.70676804 109.98571014]
[47.23003006 101.72932434]
[59.75329208 93.47293854]
[60.04964828 78.47586060]
[47.86234283 69.73117065]
[35.67504120 60.98647690]
[23.48773766 52.24178696]
[11.30043507 43.49709320]
[-0.88686830 34.75240326]
[-13.07417107 26.00770950]
[-25.26147461 17.26301765]
[-37.44877625 8.51832581]
[-53.81244659 7.44017887]
[-60.81687546 -7.38783550]
[-51.25650787 -20.71192741]
[-34.96623230 -18.82541466]
[-28.70408630 -3.66897750]
[-16.51678276 5.07571459]
[-4.32947922 13.82040691]
[7.85782385 22.56509972]
[20.04512787 31.30979156]
[32.23242950 40.05448151]
[44.41973495 48.79917526]
[56.60703659 57.54386902]
[68.79434204 66.28855896]
[109.55473328 88.48674011]
[122.69075775 81.24485779]
[131.04054260 67.80641937]
[145.92176819 68.43761444]
[159.05778503 61.19573212]
[172.19381714 53.95384979]
[185.32983398 46.71196365]
[185.73468018 31.42198944]
[193.68591309 18.47305870]
[206.96278381 11.29036522]
[221.95196533 11.71484661]
[234.63075256 19.53240204]
[247.76676941 12.29051876]
[260.90280151 5.04863596]
[274.03881836 -2.19324708]
[282.38861084 -15.63168716]
[297.26983643 -15.00049019]
[310.40585327 -22.24237251]
[323.54187012 -29.48425674]
[336.67788696 -36.72613907]
[349.81393433 -43.96802139]
[362.94995117 -51.20990372]
[376.08596802 -58.45178986]
[373.68417358 -71.05457306]
[374.93820190 -83.80470276]
[379.73577881 -95.66477966]
[387.67678833 -105.67272186]
[398.10659790 -113.01978302]
[410.16992188 -117.11591339]
[422.88104248 -117.63713074]
[435.20437622 -114.55112457]
[446.13873291 -108.11906433]
[454.79879761 -98.87354279]
[468.34075928 -105.32451630]
[481.88272095 -111.77549744]
[481.44940186 -126.99824524]
[487.25122070 -141.07868958]
[498.28292847 -151.57731628]
[512.63323975 -156.67515564]
[527.81591797 -155.48898315]
[541.20037842 -148.22431946]
[550.46777344 -136.13981628]
[554.01245117 -121.32916260]
[551.22021484 -106.35841370]
[542.57489014 -93.82132721]
[529.57434082 -85.89004517]
[514.47094727 -83.93870544]
[499.88150024 -88.30538177]
[488.33370972 -98.23352814]
[474.79174805 -91.78255463]
[461.24975586 -85.33157349]
[462.69628906 -68.09098816]
[457.43353271 -51.57289886]
[446.23492432 -38.29315186]
[430.78015137 -30.28509521]
[413.40316772 -28.78826141]
[396.73980713 -34.05657578]
[383.32785034 -45.31576538]
[370.19183350 -38.07388306]
[357.05581665 -30.83199883]
[343.91976929 -23.59011459]
[330.78375244 -16.34823227]
[317.64773560 -9.10634899]
[304.51171875 -1.86446619]
[297.10150146 11.05598545]
[281.28070068 10.94277668]
[268.14468384 18.18465996]
[255.00865173 25.42654228]
[241.87263489 32.66842651]
[241.71488953 47.56274414]
[234.07225037 60.46414185]
[220.91108704 67.85671997]
[205.71697998 67.66780090]
[192.57171631 59.84798813]
[179.43569946 67.08987427]
[166.29966736 74.33175659]
[153.16365051 81.57363892]
[145.75344849 94.49408722]
[129.93264771 94.38088226]
[116.79661560 101.62276459]
[110.34564209 115.16473389]
[112.99899292 129.92819214]
[115.65234375 144.69165039]
[130.12919617 149.82157898]
[140.08935547 161.51307678]
[142.85356140 176.62118530]
[137.67826843 191.08187866]
[125.95561218 201.00534058]
[110.83892059 203.72216797]
[96.39450836 198.50158691]
[86.50785065 186.74787903]
[83.83840942 171.62274170]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[6 44]
[7 43]
[8 42]
[9 41]
[10 40]
[11 39]
[12 38]
[13 37]
[14 36]
[15 35]
[16 34]
[17 33]
[18 32]
[19 31]
[20 30]
[21 29]
[22 28]
[45 66]
[46 65]
[47 64]
[48 63]
[49 62]
[50 61]
[51 60]
[52 59]
[53 58]
[67 146]
[68 145]
[70 143]
[71 142]
[72 141]
[73 140]
[78 135]
[79 134]
[80 133]
[81 132]
[83 130]
[84 129]
[85 128]
[86 127]
[87 126]
[88 125]
[89 124]
[99 117]
[100 116]
[101 115]
] def

init

% Start Annotations
1 149 0.0 1 colorpair
2 148 0.0 1 colorpair
3 147 0.0 1 colorpair
6 44 0.0 1 colorpair
7 43 0.0 1 colorpair
8 42 0.0 1 colorpair
9 41 0.0 1 colorpair
10 40 0.0 1 colorpair
11 39 0.0 1 colorpair
12 38 0.0 1 colorpair
13 37 0.0 1 colorpair
14 36 0.0 1 colorpair
15 35 0.0 1 colorpair
16 34 0.0 1 colorpair
17 33 0.0 1 colorpair
18 32 0.0 1 colorpair
19 31 0.0 1 colorpair
20 30 0.0 1 colorpair
21 29 0.0 1 colorpair
22 28 0.0 1 colorpair
45 66 0.0 1 colorpair
46 65 0.0 1 colorpair
47 64 0.0 1 colorpair
48 63 0.0 1 colorpair
49 62 0.0 1 colorpair
50 61 0.0 1 colorpair
51 60 0.0 1 colorpair
52 59 0.0 1 colorpair
53 58 0.0 1 colorpair
67 146 0.0 1 colorpair
68 145 0.0 1 colorpair
70 143 0.0 1 colorpair
71 142 0.0 1 colorpair
72 141 0.0 1 colorpair
73 140 0.0 1 colorpair
78 135 0.0 1 colorpair
79 134 0.0 1 colorpair
80 133 0.0 1 colorpair
81 132 0.0 1 colorpair
83 130 0.0 1 colorpair
84 129 0.0 1 colorpair
85 128 0.0 1 colorpair
86 127 0.0 1 colorpair
87 126 0.0 1 colorpair
88 125 0.0 1 colorpair
89 124 0.0 1 colorpair
99 117 0.0 1 colorpair
100 116 0.0 1 colorpair
101 115 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
