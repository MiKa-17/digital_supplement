%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:22:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__UAAGAGGCUACUCUCAACCUGUUGGGAGUUGAGG__G_____UAGCCUCG__GGUAAAUGAAAAUUUCCC______GGGGCUUUCUACUUUCUGUCCCUCAACA__________________AUGCU_CAAGACAGAAAGUCUUAAGCACCCGCCG_______\
) } def
/len { sequence length } bind def

/coor [
[69.81936646 210.82638550]
[53.64866638 205.09477234]
[38.51206207 197.01850891]
[24.74724770 186.77777100]
[12.66131783 174.60102844]
[2.52390766 160.75993347]
[-10.69653797 167.84652710]
[-23.91698456 174.93312073]
[-37.13743210 182.01971436]
[-50.35787582 189.10630798]
[-63.57832336 196.19290161]
[-64.91817474 217.47145081]
[-78.67475891 233.58554077]
[-99.21963501 238.18850708]
[-118.29365540 229.59381104]
[-130.62599182 238.13275146]
[-138.08178711 254.94767761]
[-155.59356689 255.75096130]
[-167.76210022 264.52172852]
[-179.93064880 273.29251099]
[-179.00555420 288.69213867]
[-186.57289124 302.13604736]
[-200.21795654 309.33438110]
[-215.58663940 307.99014282]
[-227.77487183 298.53231812]
[-232.89341736 283.97882080]
[-229.30897522 268.97363281]
[-218.16531372 258.30487061]
[-203.01835632 255.37689209]
[-188.70143127 261.12399292]
[-176.53288269 252.35319519]
[-164.36434937 243.58241272]
[-162.10520935 231.67057800]
[-152.00082397 224.26847839]
[-139.16493225 225.80041504]
[-126.83258820 217.26147461]
[-129.06860352 208.31912231]
[-128.74348450 199.08364868]
[-125.86960602 190.27592468]
[-120.65876770 182.58705139]
[-113.50667572 176.62408447]
[-104.96290588 172.86219788]
[-95.68865967 171.60671997]
[-86.40565491 172.96849060]
[-77.83988953 176.85415649]
[-70.66491699 182.97245789]
[-57.44446945 175.88586426]
[-44.22402573 168.79927063]
[-31.00357819 161.71267700]
[-17.78313255 154.62608337]
[-4.56268597 147.53948975]
[-9.27815151 135.37858582]
[-12.58451653 122.76148224]
[-14.43914795 109.85087585]
[-14.81812954 96.81324768]
[-13.71657658 83.81671906]
[-11.14869118 71.02886200]
[-7.14758539 58.61457825]
[-1.76485300 46.73394012]
[4.93009806 35.54014969]
[12.85093975 25.17754555]
[21.89553452 15.77974796]
[31.94725609 7.46793795]
[42.87649155 0.34929353]
[54.54231644 -5.48439312]
[66.79429626 -9.95789909]
[79.47445679 -13.01354027]
[92.41928101 -14.61191463]
[105.46185303 -14.73241234]
[118.43400574 -13.37347984]
[131.16845703 -10.55263901]
[143.50099182 -6.30626488]
[155.27261353 -0.68911177]
[166.33149719 6.22638893]
[176.53507996 14.35106468]
[185.75177002 23.58015060]
[193.86271667 33.79463959]
[200.76333618 44.86282349]
[206.36465454 56.64197922]
[220.59500122 51.89886475]
[231.24049377 40.19484329]
[245.76132202 43.51068497]
[259.99166870 38.76756668]
[274.22201538 34.02445221]
[288.45239258 29.28133774]
[293.22683716 14.63514900]
[305.56570435 5.71295357]
[320.61431885 5.76652193]
[332.60232544 14.56573296]
[346.83267212 9.82261848]
[361.06301880 5.07950306]
[375.29336548 0.33638805]
[389.52371216 -4.40672684]
[396.64065552 -18.26265907]
[411.13983154 -22.87013626]
[424.30548096 -15.99982929]
[438.53582764 -20.74294472]
[452.76617432 -25.48605919]
[450.48770142 -40.34932327]
[450.75408936 -55.38385010]
[453.55764771 -70.15707397]
[458.81771851 -84.24392700]
[466.38299561 -97.23912048]
[476.03576660 -108.76873779]
[487.49829102 -118.50106049]
[500.44082642 -126.15606689]
[514.49096680 -131.51350403]
[529.24438477 -134.41923523]
[544.27673340 -134.78965759]
[559.15539551 -132.61408997]
[573.45233154 -127.95516205]
[586.75616455 -120.94690704]
[598.68414307 -111.79095459]
[608.89306641 -100.75075531]
[617.08923340 -88.14395142]
[623.03674316 -74.33325958]
[626.56451416 -59.71605301]
[627.57104492 -44.71289062]
[626.02740479 -29.75544548]
[621.97796631 -15.27407265]
[615.53930664 -1.68542945]
[606.89654541 10.61951065]
[596.29852295 21.28671074]
[584.05004883 30.00925446]
[570.50354004 36.53617477]
[556.04882812 40.67967987]
[541.10174561 42.32055664]
[526.09234619 41.41159058]
[511.45248413 37.97893143]
[497.60342407 32.12134933]
[484.94357300 24.00737762]
[473.83721924 13.87046814]
[464.60391235 2.00228190]
[457.50927734 -11.25570965]
[443.27893066 -6.51259470]
[429.04858398 -1.76947951]
[422.63769531 11.62588692]
[408.27365112 16.63879776]
[394.26681519 9.82362270]
[380.03646851 14.56673813]
[365.80612183 19.30985260]
[351.57577515 24.05296898]
[337.34542847 28.79608345]
[333.03396606 43.02806091]
[321.02682495 52.09958267]
[305.80239868 52.36450577]
[293.19549561 43.51168823]
[278.96514893 48.25480270]
[264.73480225 52.99791718]
[250.50444031 57.74103165]
[240.87680054 69.10579681]
[225.33811951 66.12921143]
[211.10777283 70.87232971]
[214.20687866 87.74652100]
[214.75802612 104.89408875]
[212.74894714 121.93247223]
[208.22444153 138.48153687]
[201.28544617 154.17208862]
[192.08679199 168.65406799]
[180.83369446 181.60437012]
[167.77719116 192.73408508]
[153.20858765 201.79492188]
[137.45289612 208.58470154]
[120.86164093 212.95198059]
[103.80496216 214.79930115]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 51]
[7 50]
[8 49]
[9 48]
[10 47]
[11 46]
[15 36]
[16 35]
[18 32]
[19 31]
[20 30]
[79 153]
[80 152]
[82 150]
[83 149]
[84 148]
[85 147]
[89 143]
[90 142]
[91 141]
[92 140]
[93 139]
[96 136]
[97 135]
[98 134]
] def

init

% Start Annotations
6 51 0.16 1 colorpair
7 50 0.0 0.2 colorpair
8 49 0.0 0.6 colorpair
9 48 0.16 1 colorpair
10 47 0.0 1 colorpair
11 46 0.32 0.6 colorpair
15 36 0.0 1 colorpair
16 35 0.16 1 colorpair
19 31 0.16 0.2 colorpair
20 30 0.16 0.2 colorpair
79 153 0.0 0.6 colorpair
80 152 0.0 0.6 colorpair
82 150 0.0 0.6 colorpair
83 149 0.0 0.6 colorpair
84 148 0.0 0.6 colorpair
85 147 0.0 0.2 colorpair
90 142 0.0 0.6 colorpair
91 141 0.0 0.2 colorpair
92 140 0.16 0.6 colorpair
93 139 0.0 0.6 colorpair
96 136 0.0 0.2 colorpair
98 134 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
51 cmark
7 50 2 gmark
8 49 1 gmark
48 cmark
11 46 1 gmark
11 cmark
46 cmark
35 cmark
18 32 3 gmark
18 cmark
32 cmark
19 31 2 gmark
19 cmark
31 cmark
20 30 2 gmark
20 cmark
30 cmark
79 153 1 gmark
80 152 1 gmark
82 150 1 gmark
83 149 1 gmark
84 148 1 gmark
85 147 2 gmark
89 143 4 gmark
89 cmark
143 cmark
90 142 1 gmark
91 141 2 gmark
92 140 1 gmark
92 cmark
140 cmark
93 139 1 gmark
96 136 2 gmark
97 135 3 gmark
97 cmark
135 cmark
98 134 2 gmark

% End Annotations
showpage
end
%%EOF
