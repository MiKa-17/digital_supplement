%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:15:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_____GA_GC__AACAAGGCAAUCGUUAUUGCCCUGAUAGUCUUGGGUAUUACCGUCAUGAUGUCGGUACUGGUCACACGCAAAGAUCUUUGCGAGGUCCAUAUCCGAAGCGGACAGACAGAGGUCGCCGUCUUCACAGCUUACGAAUCUGUUAAG\
) } def
/len { sequence length } bind def

/coor [
[24.64679909 302.49459839]
[35.86250305 312.45492554]
[43.89921570 325.12030029]
[48.13460159 339.50991821]
[48.24069595 354.50955200]
[44.20927429 368.95764160]
[36.35251999 381.73541260]
[25.27883148 391.85339355]
[11.84571457 398.52807617]
[-2.90661979 401.24258423]
[-17.83580399 399.78674316]
[-31.78577423 394.27328491]
[-43.67630005 385.12915039]
[-52.58661652 373.06240845]
[-57.82674408 359.00747681]
[-58.99090195 344.05270386]
[-55.98894882 329.35617065]
[-49.05617523 316.05987549]
[-61.84185791 323.90374756]
[-74.62754059 331.74761963]
[-87.41321564 339.59149170]
[-100.19889832 347.43536377]
[-103.63644409 362.86126709]
[-117.01955414 371.26770020]
[-132.40826416 367.66726685]
[-140.67271423 354.19601440]
[-136.90977478 338.84622192]
[-123.35191345 330.72467041]
[-108.04277039 334.64968872]
[-95.25709534 326.80581665]
[-82.47141266 318.96194458]
[-69.68572998 311.11807251]
[-56.90005112 303.27416992]
[-53.21221542 295.65524292]
[-44.47485733 291.92031860]
[-35.51301956 279.89178467]
[-26.55118370 267.86325073]
[-17.58934784 255.83473206]
[-8.62751007 243.80619812]
[0.33432636 231.77767944]
[9.05369282 219.57223511]
[17.52709770 207.19477844]
[18.33211136 192.32194519]
[32.51227951 185.30529785]
[40.98568344 172.92784119]
[49.45909119 160.55038452]
[57.93249512 148.17292786]
[66.40589905 135.79547119]
[56.02828217 121.82585144]
[51.17651367 105.11340332]
[52.46030807 87.75836945]
[59.71833420 71.94171906]
[72.03848267 59.65110779]
[87.87251282 52.43106461]
[105.23057556 51.18892670]
[109.08869171 36.69358826]
[112.94681549 22.19824600]
[102.93157196 13.94767380]
[96.82022095 2.55405021]
[95.49635315 -10.26005268]
[99.12279510 -22.57255745]
[107.12248993 -32.55018234]
[118.27004242 -38.72140884]
[130.87928772 -40.19345093]
[135.31427002 -54.52282333]
[139.74925232 -68.85219574]
[144.18423462 -83.18156433]
[135.06147766 -95.59452057]
[134.99786377 -110.82112122]
[143.80821228 -123.02119446]
[157.94386292 -127.63871765]
[162.37884521 -141.96809387]
[166.81382751 -156.29747009]
[163.50268555 -171.76831055]
[174.65707397 -181.63891602]
[174.20794678 -190.81967163]
[179.32681274 -196.20901489]
[176.32588196 -211.74301147]
[187.67555237 -221.38845825]
[192.39636230 -235.62622070]
[197.11717224 -249.86398315]
[201.83798218 -264.10174561]
[206.55879211 -278.33950806]
[199.24534607 -292.34982300]
[204.06040955 -307.40277100]
[218.14726257 -314.56768799]
[233.14845276 -309.59375000]
[240.16401672 -295.43191528]
[235.03175354 -280.48416138]
[220.79655457 -273.61871338]
[216.07574463 -259.38095093]
[211.35493469 -245.14317322]
[206.63412476 -230.90541077]
[201.91331482 -216.66764832]
[205.25190735 -202.15202332]
[193.56457520 -191.48820496]
[188.98645020 -177.20391846]
[192.61482239 -162.75801086]
[181.14320374 -151.86248779]
[176.70822144 -137.53311157]
[172.27323914 -123.20373535]
[181.32904053 -111.40838623]
[181.70727539 -96.36441803]
[173.05337524 -83.83591461]
[158.51361084 -78.74658203]
[154.07862854 -64.41721344]
[149.64364624 -50.08783722]
[145.20866394 -35.75846481]
[157.34063721 -23.60663605]
[161.70193481 -6.90682602]
[157.01312256 9.79611206]
[144.47042847 21.90966797]
[127.44215393 26.05636597]
[123.58403778 40.55170822]
[119.72591400 55.04704666]
[129.54695129 60.79722977]
[137.78001404 68.65433502]
[143.98260498 78.19609070]
[147.82138062 88.90968323]
[149.09004211 100.21932220]
[147.72038269 111.51716614]
[161.59288025 117.22274017]
[175.46539307 122.92830658]
[189.33790588 128.63388062]
[203.82565308 122.31878662]
[218.50474548 128.17541504]
[224.66630554 142.72914124]
[218.65480042 157.34547424]
[204.03675842 163.35282898]
[189.48478699 157.18713379]
[183.63232422 142.50639343]
[169.75982666 136.80081177]
[155.88731384 131.09524536]
[142.01480103 125.38967133]
[132.82432556 136.50265503]
[120.80122375 144.46559143]
[106.98305511 148.59132385]
[92.56228638 148.52380371]
[78.78335571 144.26887512]
[70.30995178 156.64633179]
[61.83654404 169.02378845]
[53.36314011 181.40124512]
[44.88973618 193.77870178]
[43.47864914 209.53684998]
[29.90455246 215.66818237]
[21.43114853 228.04563904]
[20.53281021 234.68725586]
[16.92798996 239.17164612]
[12.36285400 240.73951721]
[3.40101743 252.76803589]
[-5.56081915 264.79656982]
[-14.52265644 276.82510376]
[-23.48449326 288.85363770]
[-32.44633102 300.88214111]
[-18.57574272 295.17190552]
[-3.66864634 293.50503540]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 33]
[19 32]
[20 31]
[21 30]
[22 29]
[35 154]
[36 153]
[37 152]
[38 151]
[39 150]
[40 149]
[41 146]
[42 145]
[44 143]
[45 142]
[46 141]
[47 140]
[48 139]
[55 115]
[56 114]
[57 113]
[64 108]
[65 107]
[66 106]
[67 105]
[71 101]
[72 100]
[73 99]
[75 97]
[77 96]
[79 94]
[80 93]
[81 92]
[82 91]
[83 90]
[121 134]
[122 133]
[123 132]
[124 131]
] def

init

% Start Annotations
18 33 0.16 1 colorpair
19 32 0.16 1 colorpair
20 31 0.0 0.6 colorpair
21 30 0.0 0.6 colorpair
22 29 0.0 0.6 colorpair
35 154 0.0 0.6 colorpair
36 153 0.16 1 colorpair
37 152 0.0 0.6 colorpair
38 151 0.16 1 colorpair
39 150 0.0 1 colorpair
40 149 0.16 1 colorpair
41 146 0.0 1 colorpair
42 145 0.0 0.6 colorpair
44 143 0.16 1 colorpair
45 142 0.16 1 colorpair
46 141 0.0 0.6 colorpair
47 140 0.0 1 colorpair
48 139 0.0 1 colorpair
55 115 0.0 0.6 colorpair
56 114 0.0 1 colorpair
57 113 0.16 1 colorpair
64 108 0.16 1 colorpair
65 107 0.16 1 colorpair
66 106 0.16 1 colorpair
67 105 0.16 1 colorpair
71 101 0.0 0.6 colorpair
72 100 0.0 1 colorpair
73 99 0.0 0.6 colorpair
75 97 0.16 1 colorpair
77 96 0.16 1 colorpair
79 94 0.0 1 colorpair
80 93 0.0 1 colorpair
81 92 0.16 1 colorpair
82 91 0.16 1 colorpair
83 90 0.0 0.6 colorpair
121 134 0.16 1 colorpair
122 133 0.0 1 colorpair
123 132 0.0 0.6 colorpair
124 131 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
18 cmark
33 cmark
19 cmark
32 cmark
20 31 1 gmark
21 30 1 gmark
22 29 1 gmark
35 154 1 gmark
153 cmark
37 152 1 gmark
151 cmark
149 cmark
42 145 1 gmark
143 cmark
45 cmark
46 141 1 gmark
55 115 1 gmark
57 cmark
108 cmark
65 cmark
107 cmark
66 cmark
106 cmark
67 cmark
105 cmark
71 101 1 gmark
73 99 1 gmark
75 cmark
97 cmark
77 cmark
96 cmark
81 cmark
82 cmark
83 90 1 gmark
134 cmark
123 132 1 gmark
131 cmark

% End Annotations
showpage
end
%%EOF
