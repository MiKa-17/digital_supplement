%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:18:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
____________________________________________GGGUUAAUAGCAAUAUUCUCCCGGCCUCACCACAUUCUG__UCCCUCCCGACCGCAGAAGACAAAAAGCCUCAAGCGCC____________\
) } def
/len { sequence length } bind def

/coor [
[187.40055847 355.21701050]
[173.08187866 359.67984009]
[158.53730774 363.33999634]
[143.81179810 366.18621826]
[128.95086670 368.20965576]
[114.00045776 369.40408325]
[99.00676727 369.76580811]
[84.01615143 369.29370117]
[69.07493591 367.98919678]
[54.22931290 365.85638428]
[39.52516174 362.90182495]
[25.00793266 359.13464355]
[10.72250080 354.56649780]
[-3.28697968 349.21151733]
[-16.97720718 343.08621216]
[-30.30586624 336.20956421]
[-43.23175812 328.60278320]
[-55.71492767 320.28942871]
[-67.71679688 311.29516602]
[-79.20025635 301.64782715]
[-90.12982941 291.37716675]
[-100.47171783 280.51498413]
[-110.19396210 269.09484863]
[-119.26651001 257.15206909]
[-127.66131592 244.72352600]
[-135.35244751 231.84764099]
[-142.31610107 218.56423950]
[-148.53077698 204.91435242]
[-153.97726440 190.94020081]
[-158.63873291 176.68493652]
[-162.50076294 162.19265747]
[-165.55140686 147.50813293]
[-167.78125000 132.67677307]
[-169.18341064 117.74441528]
[-169.75354004 102.75720215]
[-169.48986816 87.76146698]
[-168.39323425 72.80356598]
[-166.46701050 57.92972183]
[-163.71714783 43.18591690]
[-160.15216064 28.61772156]
[-155.78305054 14.27016258]
[-150.62333679 0.18758923]
[-144.68896484 -13.58647060]
[-137.99826050 -27.00944138]
[-130.57192993 -40.03983307]
[-122.43292236 -52.63737106]
[-113.60638428 -64.76312256]
[-104.11960602 -76.37959290]
[-94.00189972 -87.45088959]
[-83.28454590 -97.94278717]
[-72.00067902 -107.82286072]
[-60.18516541 -117.06056213]
[-47.87452698 -125.62734222]
[-35.10682297 -133.49671936]
[-21.92150879 -140.64437866]
[-8.35934353 -147.04823303]
[5.53775358 -152.68846130]
[19.72682762 -157.54765320]
[34.16402054 -161.61077881]
[48.80470657 -164.86528015]
[63.60363388 -167.30110168]
[78.51506042 -168.91070557]
[93.49289703 -169.68913269]
[108.49084473 -169.63397217]
[123.46255493 -168.74539185]
[138.36174011 -167.02612305]
[153.14234924 -164.48150635]
[167.75869751 -161.11938477]
[182.16560364 -156.95016479]
[196.31855774 -151.98672485]
[210.17378235 -146.24441528]
[223.68846130 -139.74098206]
[236.82084656 -132.49652100]
[249.53031921 -124.53342438]
[261.77758789 -115.87631226]
[273.52484131 -106.55194092]
[284.73571777 -96.58913422]
[295.37561035 -86.01867676]
[305.41159058 -74.87325287]
[314.81265259 -63.18730164]
[323.54974365 -50.99695206]
[331.59588623 -38.33988190]
[338.92614746 -25.25521088]
[345.51791382 -11.78338432]
[351.35079956 2.03395772]
[356.40679932 16.15410614]
[360.67022705 30.53341675]
[364.12796021 45.12744522]
[366.76928711 59.89107895]
[368.58602905 74.77868652]
[369.57260132 89.74425507]
[369.72595215 104.74152374]
[369.04559326 119.72413635]
[367.53363037 134.64578247]
[365.19473267 149.46034241]
[362.03613281 164.12200928]
[358.06762695 178.58549500]
[372.29003906 183.35237122]
[386.51242065 188.11923218]
[400.73483276 192.88610840]
[414.95724487 197.65298462]
[429.17965698 202.41984558]
[443.40206909 207.18672180]
[457.62448120 211.95359802]
[471.84689331 216.72045898]
[486.06930542 221.48733521]
[501.01358032 215.65223694]
[514.82043457 223.82235718]
[516.89837646 239.73025513]
[505.65347290 251.17277527]
[489.71179199 249.37219238]
[481.30242920 235.70974731]
[467.08001709 230.94287109]
[452.85760498 226.17601013]
[438.63519287 221.40913391]
[424.41278076 216.64225769]
[410.19036865 211.87539673]
[395.96798706 207.10852051]
[381.74557495 202.34164429]
[367.52316284 197.57476807]
[353.30075073 192.80790710]
[347.75149536 206.74159241]
[341.43649292 220.34533691]
[334.37518311 233.57710266]
[326.58947754 246.39599609]
[318.10336304 258.76239014]
[308.94311523 270.63806152]
[299.13705444 281.98629761]
[288.71545410 292.77200317]
[277.71054077 302.96188354]
[266.15637207 312.52444458]
[254.08859253 321.43008423]
[241.54454041 329.65130615]
[228.56298828 337.16265869]
[215.18405151 343.94097900]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[97 121]
[98 120]
[99 119]
[100 118]
[101 117]
[102 116]
[103 115]
[104 114]
[105 113]
[106 112]
] def

init

% Start Annotations
97 121 0.16 0.6 colorpair
98 120 0.0 1 colorpair
99 119 0.0 1 colorpair
100 118 0.0 0.2 colorpair
101 117 0.0 0.2 colorpair
102 116 0.16 1 colorpair
103 115 0.0 1 colorpair
104 114 0.0 1 colorpair
105 113 0.16 0.6 colorpair
106 112 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
97 121 1 gmark
97 cmark
121 cmark
100 118 2 gmark
101 117 2 gmark
102 cmark
116 cmark
105 113 1 gmark
105 cmark
113 cmark

% End Annotations
showpage
end
%%EOF
