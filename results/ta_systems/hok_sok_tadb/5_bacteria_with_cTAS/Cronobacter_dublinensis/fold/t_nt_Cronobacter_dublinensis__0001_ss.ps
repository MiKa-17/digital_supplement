%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:18:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGCGGCUAAU_UCAACUUGU_GG_AGUUGAGGGAUAGCCUCGGGUUAAUAGAAAUAUUGUCCGGGGCUUUCUUCUUUCUGUCCCUCACGUAGGCUUAAGACAGAAAGCCUUAAGC_______\
) } def
/len { sequence length } bind def

/coor [
[95.02138519 409.08285522]
[80.13371277 410.91510010]
[65.13371277 410.92193604]
[50.24438095 409.10321045]
[35.68705368 405.48602295]
[21.67814255 400.12408447]
[8.42590237 393.09710693]
[-3.87265921 384.50961304]
[-15.03471279 374.48919678]
[-24.89432335 363.18484497]
[-33.30492020 350.76464844]
[-40.14146805 337.41317749]
[-45.30233765 323.32894897]
[-48.71081161 308.72134399]
[-50.31621170 293.80749512]
[-50.09468079 278.80911255]
[-48.04950714 263.94921875]
[-44.21109009 249.44863892]
[-38.63650131 235.52297974]
[-31.40860558 222.37925720]
[-22.63485336 210.21284485]
[-12.44567680 199.20463562]
[-0.99254489 189.51826477]
[11.55427933 181.29772949]
[25.00827599 174.66523743]
[39.16943741 169.71939087]
[53.82724762 166.53369141]
[68.76380157 165.15553284]
[83.75705719 165.60537720]
[98.58412170 167.87654114]
[113.02457428 171.93525696]
[126.85933685 177.71903992]
[120.69003296 164.04644775]
[114.52072144 150.37387085]
[108.35141754 136.70127869]
[102.18210602 123.02869415]
[96.01280212 109.35610199]
[90.02664948 103.81606293]
[89.86486816 95.26488495]
[84.03834534 81.44274139]
[78.21182251 67.62059784]
[72.38529968 53.79845428]
[66.55877686 39.97631073]
[60.73225784 26.15416908]
[54.90573502 12.33202553]
[49.07921219 -1.49011779]
[37.39020157 -7.10999966]
[32.85238266 -18.82965469]
[37.40851593 -30.10946274]
[31.92840004 -44.07257080]
[26.44828606 -58.03567505]
[20.96817017 -71.99877930]
[15.48805428 -85.96189117]
[2.33630490 -95.75798798]
[4.51258087 -112.01208496]
[19.77811623 -118.00337219]
[32.42903900 -107.56851196]
[29.45116043 -91.44200134]
[34.93127823 -77.47889709]
[40.41139221 -63.51579285]
[45.89150620 -49.55268478]
[51.37162399 -35.58958054]
[65.65328217 -25.47247696]
[62.90135574 -7.31663990]
[68.72788239 6.50550365]
[74.55439758 20.32764626]
[80.38092041 34.14979172]
[86.20744324 47.97193146]
[92.03396606 61.79407501]
[97.86048889 75.61621857]
[103.68701172 89.43836212]
[109.68539429 103.18679810]
[115.85469818 116.85938263]
[122.02400208 130.53196716]
[128.19331360 144.20455933]
[134.36260986 157.87715149]
[140.53192139 171.54972839]
[143.12342834 172.76087952]
[145.31069946 174.46998596]
[160.29205322 173.72229004]
[175.27340698 172.97460938]
[190.25476074 172.22691345]
[205.23611450 171.47923279]
[220.21746826 170.73153687]
[235.19882202 169.98385620]
[239.64308167 155.49163818]
[248.77844238 143.39530945]
[261.50173950 135.15556335]
[276.27658081 131.76737976]
[291.31884766 133.63990784]
[304.81207275 140.54702759]
[315.12692261 151.65466309]
[321.01782227 165.62152100]
[321.77340698 180.76103210]
[317.30242920 195.24504089]
[308.14480591 207.32450867]
[295.40634155 215.54080200]
[280.62527466 218.90174866]
[265.58648682 217.00149536]
[252.10601807 210.06951904]
[241.81164551 198.94290161]
[235.94650269 184.96520996]
[220.96514893 185.71289062]
[205.98379517 186.46058655]
[191.00244141 187.20826721]
[176.02108765 187.95596313]
[161.03973389 188.70364380]
[146.05838013 189.45133972]
[157.52032471 199.12727356]
[167.71952820 210.12620544]
[176.50434875 222.28460693]
[183.74420166 235.42175293]
[189.33146667 249.34233093]
[193.18309021 263.83938599]
[195.24179077 278.69744873]
[195.47697449 293.69561768]
[193.88514709 308.61090088]
[190.48997498 323.22161865]
[185.34193420 337.31051636]
[178.51754761 350.66821289]
[170.11825562 363.09609985]
[160.26893616 374.40939331]
[149.11601257 384.43997192]
[136.82527161 393.03866577]
[123.57943726 400.07769775]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 77]
[33 76]
[34 75]
[35 74]
[36 73]
[37 72]
[39 71]
[40 70]
[41 69]
[42 68]
[43 67]
[44 66]
[45 65]
[46 64]
[49 62]
[50 61]
[51 60]
[52 59]
[53 58]
[79 108]
[80 107]
[81 106]
[82 105]
[83 104]
[84 103]
[85 102]
] def

init

% Start Annotations
32 77 0.16 1 colorpair
33 76 0.0 0.6 colorpair
34 75 0.0 0.6 colorpair
35 74 0.16 1 colorpair
36 73 0.0 1 colorpair
37 72 0.16 1 colorpair
39 71 0.0 0.6 colorpair
40 70 0.0 0.6 colorpair
41 69 0.0 0.6 colorpair
42 68 0.0 0.6 colorpair
43 67 0.0 0.6 colorpair
44 66 0.16 1 colorpair
45 65 0.0 0.6 colorpair
46 64 0.0 0.6 colorpair
49 62 0.0 0.6 colorpair
50 61 0.16 1 colorpair
51 60 0.16 1 colorpair
52 59 0.0 0.6 colorpair
53 58 0.0 0.6 colorpair
79 108 0.0 0.6 colorpair
80 107 0.16 1 colorpair
81 106 0.16 1 colorpair
82 105 0.0 0.6 colorpair
83 104 0.0 0.6 colorpair
84 103 0.16 1 colorpair
85 102 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
32 cmark
77 cmark
33 76 1 gmark
34 75 1 gmark
35 cmark
74 cmark
37 cmark
72 cmark
39 71 1 gmark
40 70 1 gmark
41 69 1 gmark
42 68 1 gmark
43 67 1 gmark
44 cmark
45 65 1 gmark
46 64 1 gmark
49 62 1 gmark
50 cmark
61 cmark
51 cmark
60 cmark
52 59 1 gmark
53 58 1 gmark
79 108 1 gmark
80 cmark
107 cmark
81 cmark
106 cmark
82 105 1 gmark
83 104 1 gmark
84 cmark
103 cmark
85 102 1 gmark

% End Annotations
showpage
end
%%EOF
