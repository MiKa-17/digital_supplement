%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:18:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GA_GCCACUCA____AAUAUCUGU_UCGCAUGUUUCGUUGUAGUCUGCGUCACGAUAUUAAUUUUCGCUUUAAUUAACCACGGCACGUUAUGCGAGUUAACCAUAAAGCACGGAAACAAGGAGGUGGCGGCACGGCUUGCCUGC_____CAGG___\
) } def
/len { sequence length } bind def

/coor [
[22.44272041 385.60977173]
[8.11959839 390.06491089]
[-6.61219788 392.88876343]
[-21.56750298 394.04586792]
[-36.55833817 393.52166748]
[-51.39628983 391.32275391]
[-65.89485168 387.47674561]
[-79.87178802 382.03201294]
[-93.15142822 375.05694580]
[-105.56684875 366.63928223]
[-116.96201324 356.88476562]
[-127.19367981 345.91604614]
[-136.13325500 333.87097168]
[-143.66836548 320.90093994]
[-149.70431519 307.16894531]
[-154.16523743 292.84762573]
[-156.99505615 278.11697388]
[-158.15818787 263.16213989]
[-157.64004517 248.17109680]
[-155.44711304 233.33226013]
[-151.60697937 218.83213806]
[-146.16789246 204.85299683]
[-139.19821167 191.57054138]
[-130.78555298 179.15171814]
[-121.03565979 167.75262451]
[-110.07106781 157.51652527]
[-98.02960205 148.57208252]
[-85.06260681 141.03172302]
[-71.33306122 134.99021912]
[-57.01354599 130.52351379]
[-42.28403854 127.68775177]
[-27.32967377 126.51856232]
[-12.33841801 127.03065491]
[2.50130391 129.21759033]
[17.00296783 133.05186462]
[30.98430252 138.48530579]
[44.26957321 145.44961548]
[56.69179916 153.85725403]
[68.09484100 163.60253906]
[78.33537292 174.56298828]
[87.28179169 186.59646606]
[88.18170166 171.62348938]
[89.08161926 156.65049744]
[89.98153687 141.67752075]
[90.88145447 126.70453644]
[91.78136444 111.73155975]
[85.70185852 99.14064026]
[93.24565125 87.36852264]
[94.14556885 72.39554596]
[95.04547882 57.42256165]
[86.34825134 69.64378357]
[74.04836273 78.22939301]
[59.57789230 82.17976379]
[44.62163925 81.03495789]
[30.92097282 74.92826843]
[20.07106209 64.57068634]
[13.33516598 51.16816330]
[11.49754906 36.28115082]
[14.77216339 21.64295006]
[22.77774620 8.95789337]
[34.58220291 -0.29709288]
[48.81113815 -5.04444838]
[63.80787277 -4.73143673]
[77.82633209 0.60549772]
[89.23433685 10.34497452]
[96.70365143 23.35302162]
[99.36464691 38.11788940]
[104.93113708 24.18899345]
[110.49762726 10.26009750]
[116.06411743 -3.66879988]
[121.63061523 -17.59769630]
[127.19710541 -31.52659416]
[123.37039185 -51.28100967]
[138.95994568 -62.66490936]
[143.96469116 -76.80536652]
[148.96943665 -90.94582367]
[153.97418213 -105.08628082]
[158.97892761 -119.22673798]
[163.84194946 -133.41656494]
[168.56275940 -147.65432739]
[173.28356934 -161.89208984]
[178.00437927 -176.12985229]
[168.85011292 -188.65898132]
[168.84225464 -204.17605591]
[177.98384094 -216.71444702]
[192.75973511 -221.45288086]
[207.48829651 -216.56933594]
[216.50610352 -203.94163513]
[216.34562683 -188.42538452]
[207.06855774 -175.98690796]
[192.24214172 -171.40904236]
[187.52133179 -157.17127991]
[182.80052185 -142.93351746]
[178.07971191 -128.69575500]
[178.96464539 -121.31572723]
[173.11938477 -114.22199249]
[168.11463928 -100.08153534]
[163.10989380 -85.94107819]
[158.10514832 -71.80062103]
[153.10040283 -57.66016388]
[158.33934021 -48.80763626]
[157.79936218 -38.31467056]
[151.41755676 -29.69237900]
[141.12600708 -25.96010208]
[135.55950928 -12.03120518]
[129.99301147 1.89769197]
[124.42652130 15.82658863]
[118.86003113 29.75548553]
[113.29354095 43.68438339]
[110.01846313 58.32247925]
[109.11854553 73.29546356]
[108.21863556 88.26844025]
[114.29814148 100.85935974]
[106.75434875 112.63147736]
[105.85443115 127.60445404]
[104.95452118 142.57743835]
[104.05460358 157.55041504]
[103.15468597 172.52339172]
[102.25476837 187.49638367]
[109.05125427 200.86828613]
[124.84465790 201.80581665]
[131.38059998 215.18980408]
[144.00677490 223.28793335]
[156.63293457 231.38606262]
[169.25910950 239.48419189]
[181.88528442 247.58232117]
[194.59185791 255.55372620]
[207.37753296 263.39761353]
[222.68667603 259.47256470]
[236.24453735 267.59414673]
[240.00747681 282.94393921]
[231.74302673 296.41516113]
[216.35430908 300.01562500]
[202.97120667 291.60919189]
[199.53366089 276.18328857]
[186.74797058 268.33941650]
[179.36064148 267.51770020]
[173.78715515 260.20849609]
[161.16098022 252.11036682]
[148.53480530 244.01223755]
[135.90863037 235.91410828]
[123.28246307 227.81597900]
[108.39216614 227.45765686]
[100.95311737 213.49446106]
[105.40245819 227.81938171]
[108.22036743 242.55230713]
[109.37142181 257.50808716]
[108.84115601 272.49871826]
[106.63623810 287.33575439]
[102.78437042 301.83276367]
[97.33398438 315.80752563]
[90.35357666 329.08432007]
[81.93088531 341.49633789]
[72.17178345 352.88757324]
[61.19892120 363.11480713]
[49.15022659 372.04949951]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[41 119]
[42 118]
[43 117]
[44 116]
[45 115]
[46 114]
[48 112]
[49 111]
[50 110]
[67 109]
[68 108]
[69 107]
[70 106]
[71 105]
[72 104]
[74 100]
[75 99]
[76 98]
[77 97]
[78 96]
[79 94]
[80 93]
[81 92]
[82 91]
[120 144]
[122 142]
[123 141]
[124 140]
[125 139]
[126 138]
[127 136]
[128 135]
] def

init

% Start Annotations
41 119 0.0 0.6 colorpair
42 118 0.16 0.2 colorpair
43 117 0.0 0.2 colorpair
44 116 0.16 1 colorpair
45 115 0.0 0.2 colorpair
46 114 0.16 0.6 colorpair
48 112 0.0 1 colorpair
49 111 0.0 1 colorpair
50 110 0.16 1 colorpair
67 109 0.0 0.2 colorpair
68 108 0.0 0.6 colorpair
69 107 0.32 1 colorpair
70 106 0.0 0.6 colorpair
71 105 0.16 0.6 colorpair
72 104 0.0 0.6 colorpair
74 100 0.0 0.6 colorpair
75 99 0.32 1 colorpair
76 98 0.0 0.6 colorpair
77 97 0.0 0.6 colorpair
78 96 0.16 0.6 colorpair
79 94 0.0 1 colorpair
80 93 0.16 1 colorpair
81 92 0.0 0.2 colorpair
82 91 0.0 1 colorpair
120 144 0.16 1 colorpair
122 142 0.0 1 colorpair
123 141 0.16 1 colorpair
124 140 0.0 1 colorpair
125 139 0.0 0.6 colorpair
126 138 0.16 1 colorpair
127 136 0.0 1 colorpair
128 135 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
41 119 1 gmark
42 118 2 gmark
42 cmark
118 cmark
43 117 2 gmark
116 cmark
45 115 2 gmark
46 114 1 gmark
114 cmark
110 cmark
67 109 2 gmark
68 108 1 gmark
69 cmark
107 cmark
70 106 1 gmark
71 105 1 gmark
71 cmark
105 cmark
72 104 1 gmark
74 100 1 gmark
75 cmark
99 cmark
76 98 1 gmark
77 97 1 gmark
78 96 1 gmark
78 cmark
96 cmark
80 cmark
93 cmark
81 92 2 gmark
144 cmark
141 cmark
125 139 1 gmark
126 cmark
138 cmark
128 cmark
135 cmark

% End Annotations
showpage
end
%%EOF
