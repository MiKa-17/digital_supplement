%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 23:49:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUGGUGGCAAGCGU___CGUACUGUGUCUCACGGUGCUGGGAUUUACGUUUAUGGUGCGCAACUCGCUGUGCGAACUCAGGAUCAAAGAGCGUAAUAUGGAGUUGGAGGCUGUUCUCGCUUACGAAUC___GAAGAAGUAGC__A__UCGGCGGGG_G_GGAAACCCCGCGUAUUCG_____UAGUCUGGCUG_ACAACCCUC_____A_ACGCAUUUUUGAUGUG_UUA___CGG\
) } def
/len { sequence length } bind def

/coor [
[114.28672791 583.24932861]
[100.51316071 583.46014404]
[86.73916626 583.27856445]
[72.97594452 582.70458984]
[59.23466492 581.73870850]
[45.52647400 580.38177490]
[31.86251068 578.63482666]
[18.25386429 576.49926758]
[4.71158171 573.97692871]
[-8.75334072 571.06976318]
[-22.12997246 567.78015137]
[-35.40745544 564.11077881]
[-48.57500458 560.06463623]
[-61.62193680 555.64495850]
[-74.53765869 550.85540771]
[-87.31167603 545.69982910]
[-99.93363190 540.18237305]
[-112.39327240 534.30761719]
[-124.68048096 528.08020020]
[-136.78527832 521.50531006]
[-148.69784546 514.58819580]
[-160.40852356 507.33450317]
[-171.90777588 499.75012207]
[-183.18627930 491.84121704]
[-194.23487854 483.61416626]
[-205.04461670 475.07571411]
[-215.60670471 466.23272705]
[-225.91255188 457.09243774]
[-235.95382690 447.66223145]
[-245.72235107 437.94979858]
[-255.21020508 427.96298218]
[-264.40966797 417.70989990]
[-273.31332397 407.19891357]
[-281.91387939 396.43850708]
[-290.20437622 385.43746948]
[-298.17810059 374.20468140]
[-305.82855225 362.74926758]
[-313.14956665 351.08056641]
[-320.13513184 339.20800781]
[-326.77963257 327.14126587]
[-333.07763672 314.89010620]
[-339.02404785 302.46450806]
[-344.61407471 289.87451172]
[-349.84310913 277.13037109]
[-354.70697021 264.24246216]
[-359.20166016 251.22117615]
[-363.32354736 238.07714844]
[-367.06927490 224.82101440]
[-370.43585205 211.46353149]
[-373.42047119 198.01557922]
[-376.02075195 184.48803711]
[-378.23458862 170.89190674]
[-380.06018066 157.23823547]
[-381.49603271 143.53808594]
[-382.54098511 129.80258179]
[-383.19418335 116.04289246]
[-383.45510864 102.27017975]
[-383.32354736 88.49562073]
[-382.79959106 74.73040771]
[-381.88369751 60.98570251]
[-380.57656860 47.27267456]
[-378.87927246 33.60245132]
[-376.79321289 19.98613167]
[-374.32009888 6.43477201]
[-371.46188354 -7.04062700]
[-368.22091675 -20.42912483]
[-364.59982300 -33.71985626]
[-378.94854736 -38.09180832]
[-393.29727173 -42.46376419]
[-410.21099854 -41.29647827]
[-416.01486206 -57.22606277]
[-402.31445312 -67.21284485]
[-388.92532349 -56.81249237]
[-374.57659912 -52.44054031]
[-360.22787476 -48.06858444]
[-355.10592651 -63.13370895]
[-349.49096680 -78.02211761]
[-343.38909912 -92.71768951]
[-336.80694580 -107.20449066]
[-329.75158691 -121.46684265]
[-322.23074341 -135.48928833]
[-314.25247192 -149.25665283]
[-305.82550049 -162.75399780]
[-296.95889282 -175.96672058]
[-287.66229248 -188.88049316]
[-277.94577026 -201.48133850]
[-267.81982422 -213.75559998]
[-257.29544067 -225.69000244]
[-246.38400269 -237.27159119]
[-235.09735107 -248.48782349]
[-223.44770813 -259.32656860]
[-211.44769287 -269.77606201]
[-199.11029053 -279.82501221]
[-186.44888306 -289.46249390]
[-173.47718811 -298.67810059]
[-160.20924377 -307.46185303]
[-146.65942383 -315.80419922]
[-132.84240723 -323.69613647]
[-118.77317810 -331.12908936]
[-104.46694946 -338.09503174]
[-89.93923950 -344.58642578]
[-75.20577240 -350.59619141]
[-60.28251648 -356.11785889]
[-45.18563080 -361.14544678]
[-29.93147659 -365.67349243]
[-14.53657341 -369.69711304]
[0.98240203 -373.21191406]
[16.60863876 -376.21411133]
[32.32520676 -378.70043945]
[48.11508560 -380.66824341]
[46.73683548 -395.60479736]
[45.35858536 -410.54132080]
[32.40438461 -419.30047607]
[28.16089439 -434.35128784]
[34.63176346 -448.58721924]
[48.76164246 -455.28649902]
[63.87883759 -451.28594971]
[72.84546661 -438.47448730]
[71.42777252 -422.90130615]
[60.29513168 -411.91958618]
[61.67338181 -396.98303223]
[63.05163193 -382.04647827]
[81.02079010 -383.08776855]
[99.01625061 -383.45944214]
[117.01306915 -383.16101074]
[134.98631287 -382.19287109]
[152.91105652 -380.55636597]
[170.76246643 -378.25378418]
[188.51579285 -375.28826904]
[206.14643860 -371.66400146]
[223.62994385 -367.38595581]
[240.94209290 -362.46008301]
[258.05886841 -356.89318848]
[274.95657349 -350.69302368]
[291.61178589 -343.86813354]
[308.00140381 -336.42800903]
[324.10269165 -328.38296509]
[339.89340210 -319.74417114]
[355.35156250 -310.52355957]
[370.45578003 -300.73391724]
[385.18515015 -290.38882446]
[399.51919556 -279.50262451]
[413.43811035 -268.09039307]
[426.92257690 -256.16796875]
[439.95388794 -243.75187683]
[452.51400757 -230.85931396]
[464.58547974 -217.50814819]
[476.15164185 -203.71687317]
[487.19641113 -189.50463867]
[497.70449829 -174.89112854]
[507.66134644 -159.89659119]
[517.05310059 -144.54180908]
[525.86682129 -128.84808350]
[534.09027100 -112.83714294]
[547.65930176 -119.23097229]
[556.84490967 -132.11254883]
[571.65612793 -130.53842163]
[585.22515869 -136.93225098]
[587.99237061 -152.20059204]
[599.22882080 -162.90206909]
[614.61389160 -164.92175293]
[628.23168945 -157.48301697]
[634.84594727 -143.44622803]
[631.91326904 -128.20880127]
[620.56140137 -117.62984467]
[605.15527344 -115.77718353]
[591.61895752 -123.36320496]
[578.04992676 -116.96938324]
[569.83483887 -104.54512787]
[554.05310059 -105.66192627]
[540.48406982 -99.26809692]
[545.98242188 -86.63782501]
[551.11871338 -73.85601807]
[555.88873291 -60.93307877]
[560.28869629 -47.87948227]
[564.31494141 -34.70582962]
[567.96423340 -21.42281723]
[571.23358154 -8.04122925]
[574.12042236 5.42807150]
[576.62231445 18.97414970]
[578.73724365 32.58600998]
[580.46356201 46.25259781]
[581.79980469 59.96282196]
[582.74487305 73.70555115]
[583.29803467 87.46962738]
[583.45886230 101.24387360]
[583.22717285 115.01711273]
[582.60314941 128.77815247]
[581.58740234 142.51583862]
[580.18060303 156.21900940]
[578.38403320 169.87652588]
[576.19903564 183.47732544]
[573.62750244 197.01034546]
[570.67138672 210.46461487]
[567.33319092 223.82920837]
[563.61560059 237.09326172]
[559.52160645 250.24601746]
[555.05456543 263.27679443]
[550.21813965 276.17504883]
[545.01611328 288.93023682]
[539.45288086 301.53204346]
[533.53283691 313.97024536]
[527.26086426 326.23474121]
[520.64196777 338.31558228]
[513.68164062 350.20294189]
[506.38543701 361.88717651]
[498.75930786 373.35876465]
[490.80944824 384.60845947]
[482.54229736 395.62710571]
[473.96459961 406.40573120]
[465.08331299 416.93560791]
[455.90560913 427.20816040]
[446.43899536 437.21511841]
[436.69110107 446.94827271]
[426.66986084 456.39974976]
[416.38345337 465.56192017]
[405.84014893 474.42730713]
[395.04858398 482.98867798]
[384.01745605 491.23916626]
[372.75576782 499.17199707]
[361.27264404 506.78079224]
[349.57739258 514.05932617]
[337.67953491 521.00170898]
[325.58871460 527.60229492]
[313.31475830 533.85577393]
[300.86761475 539.75695801]
[288.25741577 545.30120850]
[275.49435425 550.48388672]
[262.58883667 555.30084229]
[249.55131531 559.74816895]
[236.39237976 563.82226562]
[223.12272644 567.51983643]
[209.75311279 570.83782959]
[196.29438782 573.77355957]
[182.75749207 576.32464600]
[169.15341187 578.48907471]
[155.49317932 580.26501465]
[141.78790283 581.65106201]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[67 75]
[68 74]
[69 73]
[110 122]
[111 121]
[112 120]
[154 171]
[155 170]
[157 168]
[158 167]
] def

init

% Start Annotations
67 75 0.0 0.2 colorpair
69 73 0.16 1 colorpair
110 122 0.32 0.2 colorpair
111 121 0.0 0.6 colorpair
112 120 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
67 75 2 gmark
68 74 3 gmark
68 cmark
74 cmark
69 cmark
110 122 2 gmark
110 cmark
122 cmark
111 121 1 gmark
112 cmark
154 171 7 gmark
154 cmark
171 cmark
155 170 5 gmark
155 cmark
170 cmark
157 168 4 gmark
157 cmark
168 cmark
158 167 4 gmark
158 cmark
167 cmark

% End Annotations
showpage
end
%%EOF
