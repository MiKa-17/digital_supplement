%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 23:49:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAGAGGCUAUCCUGAUGUUGUCUAGGCAUACGGG___AGCCUCGUGGGUGAUUUAUCAUCAACU____GGGGCUUUUCUCUGUCUGCCUCAC_________GCUAAACGCC_________UGAGGCAAAAAGCCUCAAGCGCCAG__________\
) } def
/len { sequence length } bind def

/coor [
[77.42550659 208.55331421]
[61.35910416 203.92454529]
[46.17139816 196.93251038]
[32.20776367 187.73620605]
[19.78573990 176.54476929]
[9.18780422 163.61268616]
[-3.65186238 171.36787415]
[-16.49152946 179.12306213]
[-29.33119583 186.87826538]
[-42.17086411 194.63345337]
[-55.01052856 202.38864136]
[-58.87152863 219.42453003]
[-73.55612946 228.24661255]
[-89.75943756 223.83248901]
[-102.44338226 231.83982849]
[-115.12731934 239.84718323]
[-127.81126404 247.85453796]
[-140.41548157 255.98680115]
[-152.93873596 264.24319458]
[-165.46200562 272.49957275]
[-165.17906189 287.92434692]
[-173.29974365 301.04144287]
[-187.23275757 307.66522217]
[-202.53211975 305.68212891]
[-214.31588745 295.72488403]
[-218.82386780 280.97085571]
[-214.61761475 266.12796021]
[-203.03930664 255.93255615]
[-187.78353882 253.63793945]
[-173.71838379 259.97631836]
[-161.19512939 251.71992493]
[-148.67185974 243.46354675]
[-144.79782104 237.12249756]
[-135.81861877 235.17059326]
[-123.13467407 227.16323853]
[-110.45072937 219.15589905]
[-97.76679230 211.14854431]
[-96.70270538 198.27635193]
[-88.28065491 188.22807312]
[-75.41555023 184.83146667]
[-62.76572037 189.54896545]
[-49.92605209 181.79377747]
[-37.08638382 174.03858948]
[-24.24671745 166.28340149]
[-11.40705204 158.52821350]
[1.43261516 150.77302551]
[-3.97305369 138.51017761]
[-7.85974598 125.68471527]
[-10.17067909 112.48401642]
[-10.87209320 99.10093689]
[-9.95373917 85.73099518]
[-7.42903519 72.56951141]
[-3.33486509 59.80876923]
[2.26895857 47.63519287]
[9.30056763 36.22663498]
[17.65723419 25.74975967]
[27.21687317 16.35763168]
[37.83982468 8.18746281]
[49.37089539 1.35861337]
[61.64162445 -4.02915144]
[74.47274017 -7.89711952]
[87.67679596 -10.18878365]
[101.06088257 -10.87066269]
[114.42947388 -9.93279552]
[127.58725739 -7.38888407]
[140.34201050 -3.27609301]
[152.50740051 2.34549284]
[163.90568542 9.39374542]
[174.37034607 17.76569557]
[183.74850464 27.33903313]
[191.90316772 37.97389984]
[198.71517944 49.51492310]
[212.50143433 43.60398102]
[222.13595581 31.05461884]
[236.88237000 33.15049744]
[250.66860962 27.23955154]
[264.45486450 21.32860756]
[278.24111938 15.41766167]
[280.15206909 0.24217054]
[289.34170532 -11.85938072]
[303.26226807 -17.69753075]
[318.13650513 -15.79671288]
[329.98239136 -6.76674700]
[343.76864624 -12.67769146]
[357.55490112 -18.58863640]
[371.34115601 -24.49958038]
[374.88015747 -39.49230194]
[386.43368530 -49.41041946]
[401.43457031 -50.60941696]
[414.11325073 -42.83840179]
[427.89950562 -48.74934387]
[424.39199829 -63.37142944]
[423.40625000 -78.37596893]
[424.97061157 -93.33126068]
[429.04010010 -107.80700684]
[435.49761963 -121.38671112]
[444.15737915 -133.67965698]
[454.77023315 -144.33216858]
[467.03079224 -153.03771973]
[480.58630371 -159.54586792]
[495.04675293 -163.66932678]
[509.99612427 -165.28948975]
[525.00421143 -164.35972595]
[539.63928223 -160.90676880]
[553.48022461 -155.02999878]
[566.12884521 -146.89848328]
[577.22113037 -136.74620056]
[586.43798828 -124.86522675]
[593.51422119 -111.59741211]
[598.24621582 -97.32450104]
[600.49786377 -82.45715332]
[600.20440674 -67.42313385]
[597.37420654 -52.65499115]
[592.08868408 -38.57764435]
[584.50000000 -25.59612274]
[574.82647705 -14.08393097]
[563.34637451 -4.37229919]
[550.39007568 3.25935125]
[536.33032227 8.59144115]
[521.57165527 11.47055721]
[506.53869629 11.81385994]
[491.66394043 9.61147308]
[477.37545776 4.92676353]
[464.08425903 -2.10548091]
[452.17282104 -11.28292847]
[441.98382568 -22.34152412]
[433.81045532 -34.96309280]
[420.02420044 -29.05214882]
[416.91210938 -14.51072884]
[405.70156860 -4.47141409]
[390.55200195 -2.94039679]
[377.25210571 -10.71332932]
[363.46585083 -4.80238438]
[349.67959595 1.10856020]
[335.89334106 7.01950502]
[334.26733398 21.82564163]
[325.38946533 33.91032410]
[311.56335449 39.96875000]
[296.46194458 38.28213501]
[284.15206909 29.20391273]
[270.36581421 35.11485672]
[256.57955933 41.02580261]
[242.79330444 46.93674850]
[234.14486694 59.06332016]
[218.41236877 57.39023209]
[204.62612915 63.30117416]
[208.95489502 79.45099640]
[210.80599976 96.06810760]
[210.13735962 112.77462769]
[206.96417236 129.19065857]
[201.35861206 144.94287109]
[193.44812012 159.67309570]
[183.41261292 173.04632568]
[171.48028564 184.75846863]
[157.92247009 194.54319763]
[143.04750061 202.17799377]
[127.19361115 207.48924255]
[110.72134399 210.35615540]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 46]
[7 45]
[8 44]
[9 43]
[10 42]
[11 41]
[14 37]
[15 36]
[16 35]
[17 34]
[18 32]
[19 31]
[20 30]
[72 146]
[73 145]
[75 143]
[76 142]
[77 141]
[78 140]
[83 135]
[84 134]
[85 133]
[86 132]
[90 128]
[91 127]
] def

init

% Start Annotations
6 46 0.0 1 colorpair
7 45 0.0 1 colorpair
8 44 0.0 1 colorpair
9 43 0.0 0.6 colorpair
10 42 0.0 1 colorpair
11 41 0.32 1 colorpair
14 37 0.32 0.2 colorpair
15 36 0.0 1 colorpair
16 35 0.16 1 colorpair
17 34 0.16 0.6 colorpair
18 32 0.16 1 colorpair
19 31 0.0 1 colorpair
20 30 0.0 1 colorpair
72 146 0.0 0.2 colorpair
73 145 0.0 0.2 colorpair
75 143 0.0 0.2 colorpair
76 142 0.0 0.2 colorpair
77 141 0.0 0.2 colorpair
78 140 0.0 0.2 colorpair
83 135 0.0 0.2 colorpair
84 134 0.0 0.2 colorpair
86 132 0.0 0.2 colorpair
90 128 0.16 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
9 43 1 gmark
11 cmark
41 cmark
14 37 2 gmark
14 cmark
37 cmark
35 cmark
17 34 1 gmark
17 cmark
34 cmark
18 cmark
72 146 2 gmark
73 145 2 gmark
75 143 2 gmark
76 142 2 gmark
77 141 2 gmark
78 140 2 gmark
83 135 2 gmark
84 134 2 gmark
85 133 3 gmark
85 cmark
133 cmark
86 132 2 gmark
90 128 2 gmark
90 cmark
128 cmark
91 127 3 gmark

% End Annotations
showpage
end
%%EOF
