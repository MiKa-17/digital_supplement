%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 23:49:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__CCGCUGGUGGGCAUAAUAGUGCUGUGUCUCACAGUGCUGGUAUUUACGUUGAUGGUGCGCAACUCGCUGUGCGAACUCCGGAUCAAAGAGCGGAAUAUGGAGUUGGAGGCUGUUCUCGCUUACG_AAUC___GAAGAAG______UAGC__A__UCGG__CGGGG_G_GGAAACCCCGCCUAUCCG______AGGCUGGCUG_AC___CCU______A_ACGCAUUUUU_AU_UG_UUA___CGG\
) } def
/len { sequence length } bind def

/coor [
[9.52405453 538.87469482]
[-2.64096904 536.19000244]
[-14.72666168 533.16815186]
[-26.72368240 529.81158447]
[-38.62276077 526.12274170]
[-50.41469574 522.10461426]
[-62.09037399 517.76019287]
[-73.64077759 513.09289551]
[-85.05696869 508.10635376]
[-96.33013153 502.80435181]
[-107.45155334 497.19104004]
[-118.41263580 491.27072144]
[-129.20491028 485.04800415]
[-139.82003784 478.52770996]
[-150.24980164 471.71481323]
[-160.48614502 464.61465454]
[-170.52116394 457.23266602]
[-180.34709167 449.57455444]
[-189.95634460 441.64627075]
[-199.34149170 433.45394897]
[-208.49528503 425.00390625]
[-217.41062927 416.30264282]
[-226.08065796 407.35690308]
[-234.49865723 398.17364502]
[-242.65812683 388.75988770]
[-250.55274963 379.12298584]
[-258.17642212 369.27032471]
[-265.52328491 359.20956421]
[-272.58761597 348.94845581]
[-279.36398315 338.49493408]
[-285.84716797 327.85705566]
[-292.03210449 317.04309082]
[-297.91403198 306.06137085]
[-303.48843384 294.92041016]
[-308.75094604 283.62875366]
[-313.69757080 272.19519043]
[-318.32443237 260.62854004]
[-322.62799072 248.93774414]
[-326.60488892 237.13183594]
[-330.25207520 225.21992493]
[-333.56671143 213.21124268]
[-336.54623413 201.11506653]
[-339.18835449 188.94071960]
[-341.49102783 176.69764709]
[-343.45248413 164.39527893]
[-345.07119751 152.04315186]
[-346.34591675 139.65080261]
[-347.27566528 127.22779846]
[-347.85971069 114.78376007]
[-348.09759521 102.32828522]
[-347.98913574 89.87101746]
[-347.53445435 77.42157745]
[-346.73385620 64.98958588]
[-345.58798218 52.58465576]
[-344.09771729 40.21637344]
[-342.26422119 27.89429474]
[-340.08889771 15.62794876]
[-337.57339478 3.42681289]
[-334.71972656 -8.69968224]
[-331.53005981 -20.74216270]
[-328.00686646 -32.69132233]
[-324.15286255 -44.53792572]
[-319.97103882 -56.27281570]
[-315.46463013 -67.88692474]
[-310.63708496 -79.37126923]
[-305.49215698 -90.71697998]
[-300.03384399 -101.91529083]
[-294.26635742 -112.95753479]
[-288.19412231 -123.83518982]
[-281.82186890 -134.53984070]
[-275.15447998 -145.06321716]
[-287.57348633 -153.47560120]
[-299.99249268 -161.88798523]
[-312.41152954 -170.30036926]
[-323.81143188 -160.41581726]
[-337.38162231 -153.81945801]
[-352.19689941 -150.96105957]
[-367.24707031 -152.03547668]
[-381.50604248 -156.96949768]
[-394.00158691 -165.42668152]
[-403.88171387 -176.83041382]
[-410.47283936 -190.40315247]
[-413.32553101 -205.21952820]
[-412.24530029 -220.26928711]
[-407.30578613 -234.52633667]
[-398.84378052 -247.01861572]
[-387.43621826 -256.89434814]
[-373.86093140 -263.48022461]
[-359.04345703 -266.32720947]
[-343.99411011 -265.24114990]
[-329.73895264 -260.29614258]
[-317.24996948 -251.82929993]
[-307.37863159 -240.41793823]
[-300.79800415 -226.84010315]
[-297.95675659 -212.02154541]
[-299.04861450 -196.97261047]
[-303.99914551 -182.71937561]
[-291.58010864 -174.30699158]
[-279.16110229 -165.89460754]
[-266.74209595 -157.48223877]
[-246.72328186 -183.86587524]
[-224.81050110 -208.69889832]
[-201.12342834 -231.84567261]
[-175.79148865 -253.17973328]
[-148.95304871 -272.58456421]
[-120.75469208 -289.95413208]
[-91.35047150 -305.19360352]
[-60.90100098 -318.21972656]
[-29.57261467 -328.96130371]
[2.46356201 -337.35971069]
[-0.55591583 -352.05264282]
[-3.57539368 -366.74560547]
[-17.41774559 -374.02044678]
[-23.29755211 -388.51049805]
[-18.43855095 -403.37402344]
[-5.13501310 -411.59289551]
[10.33153820 -409.28643799]
[20.65826988 -397.54367065]
[20.96921539 -381.90917969]
[11.11755562 -369.76507568]
[14.13703346 -355.07214355]
[17.15651131 -340.37918091]
[29.43033600 -342.51190186]
[41.75870514 -344.30261230]
[54.13208771 -345.74993896]
[66.54092407 -346.85272217]
[78.97561646 -347.61013794]
[91.42656708 -348.02160645]
[103.88413239 -348.08679199]
[116.33870697 -347.80566406]
[128.78063965 -347.17843628]
[141.20034790 -346.20556641]
[153.58819580 -344.88781738]
[165.93463135 -343.22622681]
[178.23010254 -341.22207642]
[190.46511841 -338.87689209]
[202.63020325 -336.19250488]
[214.71597290 -333.17098999]
[226.71307373 -329.81469727]
[238.61224365 -326.12615967]
[250.40428162 -322.10830688]
[262.08007812 -317.76419067]
[273.63058472 -313.09719849]
[285.04690552 -308.11090088]
[296.32019043 -302.80920410]
[307.44174194 -297.19616699]
[318.40298462 -291.27612305]
[329.19540405 -285.05368042]
[339.81069946 -278.53363037]
[350.24063110 -271.72100830]
[360.47714233 -264.62106323]
[370.51235962 -257.23931885]
[380.33847046 -249.58148193]
[389.94790649 -241.65344238]
[399.33325195 -233.46133423]
[408.48727417 -225.01150513]
[417.40283203 -216.31047058]
[426.07305908 -207.36495972]
[434.49130249 -198.18188477]
[442.65100098 -188.76835632]
[450.54586792 -179.13163757]
[458.16979980 -169.27915955]
[465.51687622 -159.21858215]
[472.58148193 -148.95764160]
[479.35812378 -138.50428772]
[485.84152222 -127.86658478]
[492.02673340 -117.05277252]
[497.90893555 -106.07119751]
[503.48361206 -94.93035889]
[508.74642944 -83.63884735]
[513.69329834 -72.20540619]
[518.32049561 -60.63887405]
[522.62432861 -48.94817734]
[526.60150146 -37.14236069]
[530.24896240 -25.23054886]
[533.56390381 -13.22194576]
[536.54376221 -1.12583399]
[539.18615723 11.04843807]
[541.48913574 23.29146004]
[543.45092773 35.59376907]
[545.06994629 47.94586182]
[546.34497070 60.33818054]
[547.27496338 72.76116180]
[547.85931396 85.20518494]
[548.09753418 97.66065216]
[547.98937988 110.11792755]
[547.53503418 122.56737518]
[546.73474121 134.99938965]
[545.58917236 147.40434265]
[544.09918213 159.77265930]
[542.26599121 172.09478760]
[540.09094238 184.36119080]
[537.57580566 196.56239319]
[534.72241211 208.68894958]
[531.53302002 220.73150635]
[528.01013184 232.68075562]
[524.15643311 244.52745056]
[519.97491455 256.26245117]
[515.46875000 267.87667847]
[510.64151001 279.36114502]
[505.49688721 290.70697021]
[500.03884888 301.90542603]
[494.27160645 312.94781494]
[488.19964600 323.82562256]
[481.82763672 334.53042603]
[475.16052246 345.05395508]
[468.20346069 355.38809204]
[460.96179199 365.52484131]
[453.44116211 375.45639038]
[445.64733887 385.17501831]
[437.58636475 394.67321777]
[429.26449585 403.94369507]
[420.68811035 412.97924805]
[411.86389160 421.77288818]
[402.79861450 430.31784058]
[393.49929810 438.60748291]
[383.97314453 446.63543701]
[374.22750854 454.39544678]
[364.26992798 461.88156128]
[354.10809326 469.08798218]
[343.74987793 476.00912476]
[333.20324707 482.63967896]
[322.47637939 488.97445679]
[311.57754517 495.00860596]
[300.51519775 500.73745728]
[289.29788208 506.15658569]
[277.93423462 511.26181030]
[266.43307495 516.04913330]
[254.80329895 520.51495361]
[243.05384827 524.65570068]
[231.19384766 528.46826172]
[219.23243713 531.94964600]
[207.17887878 535.09716797]
[195.04248047 537.90844727]
[182.83262634 540.38122559]
[170.55874634 542.51367188]
[158.23033142 544.30407715]
[145.85690308 545.75103760]
[133.44804382 546.85357666]
[121.01333618 547.61065674]
[108.56237793 548.02185059]
[96.10480499 548.08673096]
[83.65024567 547.80523682]
[71.20832062 547.17773438]
[58.78864670 546.20452881]
[46.40082550 544.88647461]
[34.05443192 543.22460938]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[71 100]
[72 99]
[73 98]
[74 97]
[110 122]
[111 121]
[112 120]
] def

init

% Start Annotations
72 99 0.0 0.6 colorpair
73 98 0.16 0.6 colorpair
111 121 0.0 0.6 colorpair
112 120 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
71 100 4 gmark
71 cmark
100 cmark
72 99 1 gmark
73 98 1 gmark
98 cmark
74 97 11 gmark
74 cmark
97 cmark
110 122 4 gmark
110 cmark
122 cmark
111 121 1 gmark
112 cmark

% End Annotations
showpage
end
%%EOF
