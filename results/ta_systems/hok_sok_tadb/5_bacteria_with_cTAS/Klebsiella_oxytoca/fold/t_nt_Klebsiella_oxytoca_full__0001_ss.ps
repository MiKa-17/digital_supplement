%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 23:49:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAGAGGCUAUCCUGAUGUUGUCUAGGCAUAGGG___GAGCCUCGU_GGUGAUUUAUCAUUAGC____CGGGGCUUUCUUCUUUCUGCCUC_________CCGCAAAACGCC_________UGAGGCAAAAAGCCUCAAGCGCCCG__________\
) } def
/len { sequence length } bind def

/coor [
[77.42550659 208.55331421]
[61.35910416 203.92454529]
[46.17139816 196.93251038]
[32.20776367 187.73620605]
[19.78573990 176.54476929]
[9.18780422 163.61268616]
[-3.65186238 171.36787415]
[-16.49152946 179.12306213]
[-24.30388832 192.88088989]
[-39.19843292 192.83808899]
[-52.03809738 200.59327698]
[-53.23133469 217.44003296]
[-64.10792542 230.14288330]
[-80.24671936 233.84176636]
[-95.26587677 227.27651978]
[-107.94981384 235.28385925]
[-120.63375092 243.29121399]
[-133.23797607 251.42347717]
[-145.76123047 259.67987061]
[-158.28450012 267.93624878]
[-158.00155640 283.36102295]
[-166.12223816 296.47811890]
[-180.05525208 303.10192871]
[-195.35461426 301.11880493]
[-207.13838196 291.16156006]
[-211.64636230 276.40753174]
[-207.44010925 261.56463623]
[-195.86180115 251.36924744]
[-180.60603333 249.07461548]
[-166.54087830 255.41299438]
[-154.01762390 247.15660095]
[-141.49435425 238.90022278]
[-137.62031555 232.55917358]
[-128.64109802 230.60726929]
[-115.95716095 222.59992981]
[-103.27322388 214.59257507]
[-103.63800812 201.21743774]
[-97.28336334 189.31959534]
[-85.78081512 182.06918335]
[-72.08908081 181.45805359]
[-59.79328918 187.75361633]
[-46.95362091 179.99842834]
[-40.05964279 166.79530334]
[-24.24671745 166.28340149]
[-11.40705204 158.52821350]
[1.43261516 150.77302551]
[-3.97305369 138.51017761]
[-7.85974598 125.68471527]
[-10.17067909 112.48401642]
[-10.87209320 99.10093689]
[-9.95373917 85.73099518]
[-7.42903519 72.56951141]
[-3.33486509 59.80876923]
[2.26895857 47.63519287]
[9.30056763 36.22663498]
[17.65723419 25.74975967]
[27.21687317 16.35763168]
[37.83982468 8.18746281]
[49.37089539 1.35861337]
[61.64162445 -4.02915144]
[74.47274017 -7.89711952]
[87.67679596 -10.18878365]
[101.06088257 -10.87066269]
[114.42947388 -9.93279552]
[127.58725739 -7.38888407]
[140.34201050 -3.27609301]
[152.50740051 2.34549284]
[163.90568542 9.39374542]
[174.37034607 17.76569557]
[183.74850464 27.33903313]
[191.90316772 37.97389984]
[198.71517944 49.51492310]
[212.50143433 43.60398102]
[222.13595581 31.05461884]
[236.88237000 33.15049744]
[250.66860962 27.23955154]
[264.45486450 21.32860756]
[278.24111938 15.41766167]
[278.11978149 0.24330953]
[283.80200195 -13.78364277]
[294.39303589 -24.53740120]
[308.25683594 -30.40111542]
[323.26858521 -30.50992584]
[337.14053345 -24.87839317]
[347.77053833 -14.39352703]
[361.55679321 -20.30447197]
[371.19131470 -32.85383224]
[385.93771362 -30.75795555]
[399.72396851 -36.66889954]
[413.51022339 -42.57984543]
[427.29647827 -48.49079132]
[423.78897095 -63.11287308]
[422.80322266 -78.11741638]
[424.36758423 -93.07270813]
[428.43707275 -107.54845428]
[434.89459229 -121.12815857]
[443.55435181 -133.42111206]
[454.16717529 -144.07360840]
[466.42773438 -152.77917480]
[479.98327637 -159.28730774]
[494.44372559 -163.41078186]
[509.39309692 -165.03092957]
[524.40118408 -164.10116577]
[539.03625488 -160.64822388]
[552.87719727 -154.77145386]
[565.52575684 -146.63993835]
[576.61810303 -136.48764038]
[585.83496094 -124.60667419]
[592.91119385 -111.33885956]
[597.64318848 -97.06594849]
[599.89483643 -82.19860077]
[599.60137939 -67.16457367]
[596.77117920 -52.39643478]
[591.48565674 -38.31908798]
[583.89697266 -25.33756638]
[574.22344971 -13.82537651]
[562.74334717 -4.11374426]
[549.78704834 3.51790619]
[535.72729492 8.84999657]
[520.96862793 11.72911263]
[505.93563843 12.07241535]
[491.06091309 9.87002850]
[476.77239990 5.18531847]
[463.48123169 -1.84692585]
[451.56979370 -11.02437305]
[441.38079834 -22.08296967]
[433.20742798 -34.70453644]
[419.42117310 -28.79359436]
[405.63491821 -22.88264847]
[391.84866333 -16.97170448]
[383.20022583 -4.84513283]
[367.46774292 -6.51822042]
[353.68148804 -0.60727578]
[353.94760132 14.32116890]
[348.46310425 28.25191116]
[338.03472900 39.05071640]
[324.22924805 45.05038452]
[309.13796997 45.30809784]
[295.05999756 39.75344849]
[284.15206909 29.20391273]
[270.36581421 35.11485672]
[256.57955933 41.02580261]
[242.79330444 46.93674850]
[234.14486694 59.06332016]
[218.41236877 57.39023209]
[204.62612915 63.30117416]
[208.95489502 79.45099640]
[210.80599976 96.06810760]
[210.13735962 112.77462769]
[206.96417236 129.19065857]
[201.35861206 144.94287109]
[193.44812012 159.67309570]
[183.41261292 173.04632568]
[171.48028564 184.75846863]
[157.92247009 194.54319763]
[143.04750061 202.17799377]
[127.19361115 207.48924255]
[110.72134399 210.35615540]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 46]
[7 45]
[8 44]
[10 42]
[11 41]
[15 36]
[16 35]
[17 34]
[18 32]
[19 31]
[20 30]
[72 146]
[73 145]
[75 143]
[76 142]
[77 141]
[78 140]
[85 133]
[86 132]
[88 130]
[89 129]
[90 128]
[91 127]
] def

init

% Start Annotations
6 46 0.0 1 colorpair
7 45 0.0 1 colorpair
8 44 0.0 1 colorpair
10 42 0.0 1 colorpair
11 41 0.32 1 colorpair
15 36 0.0 1 colorpair
16 35 0.16 1 colorpair
18 32 0.16 1 colorpair
19 31 0.0 1 colorpair
20 30 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
11 cmark
41 cmark
35 cmark
17 34 6 gmark
17 cmark
34 cmark
18 cmark
72 146 4 gmark
73 145 4 gmark
75 143 4 gmark
76 142 4 gmark
77 141 4 gmark
78 140 4 gmark
85 133 6 gmark
85 cmark
133 cmark
86 132 4 gmark
88 130 4 gmark
130 cmark
89 129 5 gmark
90 128 4 gmark
90 cmark
128 cmark
91 127 4 gmark

% End Annotations
showpage
end
%%EOF
