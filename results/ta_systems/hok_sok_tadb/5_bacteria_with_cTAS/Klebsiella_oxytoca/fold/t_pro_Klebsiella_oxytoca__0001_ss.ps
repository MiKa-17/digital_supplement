%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 23:49:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_______________GAGAUGCUGCCAAAAUACGCCCUGGUGGGAUUCG___UAGUACUGUGUCUCACGGUACUGGUAUUUACGUUUAUGGUGCGCAACUCGCUGUGCGAACUCCGGAUCAAAGAGCGGAAUAUGGAGUUGGAGGCUGUUCUCGCUUACGAAUCG___AAGAAG\
) } def
/len { sequence length } bind def

/coor [
[139.55961609 470.84564209]
[125.23367310 472.09503174]
[110.87021637 472.79122925]
[96.49060059 472.93316650]
[82.11620331 472.52062988]
[67.76839447 471.55426025]
[53.46850204 470.03549194]
[39.23779297 467.96658325]
[25.09742355 465.35058594]
[11.06841183 462.19143677]
[-2.82838011 458.49377441]
[-16.57229233 454.26312256]
[-30.14289093 449.50576782]
[-43.52000046 444.22879028]
[-56.68373489 438.44003296]
[-69.61451721 432.14810181]
[-82.29312897 425.36236572]
[-94.70071411 418.09289551]
[-106.81883240 410.35049438]
[-118.62946320 402.14666748]
[-130.11503601 393.49365234]
[-141.25849915 384.40426636]
[-152.04327393 374.89205933]
[-162.45332336 364.97113037]
[-172.47317505 354.65628052]
[-182.08792114 343.96282959]
[-191.28326416 332.90664673]
[-200.04556274 321.50421143]
[-208.36175537 309.77243042]
[-216.21949768 297.72879028]
[-223.60711670 285.39117432]
[-230.51359558 272.77792358]
[-236.92869568 259.90780640]
[-242.84286499 246.79994202]
[-248.24731445 233.47383118]
[-253.13400269 219.94926453]
[-257.49566650 206.24636841]
[-261.32583618 192.38551331]
[-264.61880493 178.38731384]
[-267.36968994 164.27255249]
[-269.57437134 150.06225586]
[-271.22961426 135.77751160]
[-272.33291626 121.43958282]
[-272.88265991 107.06977844]
[-272.87802124 92.68946075]
[-272.31900024 78.32001495]
[-271.20642090 63.98279953]
[-269.54199219 49.69913483]
[-267.32812500 35.49025345]
[-264.56811523 21.37728119]
[-261.26611328 7.38120031]
[-257.42700195 -6.47717953]
[-253.05648804 -20.17725563]
[-248.16105652 -33.69865799]
[-242.74800110 -47.02128220]
[-236.82537842 -60.12532806]
[-230.40197754 -72.99130249]
[-223.48733521 -85.60009003]
[-216.09176636 -97.93292999]
[-208.22625732 -109.97150421]
[-199.90248108 -121.69789886]
[-191.13282776 -133.09468079]
[-181.93032837 -144.14491272]
[-172.30868530 -154.83216858]
[-162.28218079 -165.14054871]
[-151.86573792 -175.05473328]
[-141.07481384 -184.55998230]
[-129.92549133 -193.64216614]
[-118.43432617 -202.28778076]
[-106.61840057 -210.48396301]
[-94.49529266 -218.21853638]
[-82.08300781 -225.47999573]
[-69.40002441 -232.25755310]
[-56.46517944 -238.54113770]
[-43.29771042 -244.32139587]
[-29.91719818 -249.58972168]
[-16.34353065 -254.33830261]
[-2.59688854 -258.56008911]
[11.30228806 -262.24877930]
[25.33333588 -265.39889526]
[39.47539139 -268.00573730]
[53.70743561 -270.06546021]
[68.00830078 -271.57501221]
[82.35673523 -272.53210449]
[96.73139954 -272.93533325]
[111.11091614 -272.78411865]
[125.47392273 -272.07867432]
[139.79905701 -270.82000732]
[154.06500244 -269.01007080]
[168.25057983 -266.65148926]
[182.33468628 -263.74777222]
[196.29638672 -260.30328369]
[210.11491394 -256.32312012]
[223.76972961 -251.81317139]
[237.24052429 -246.78018188]
[250.50729370 -241.23161316]
[263.55029297 -235.17572021]
[276.35012817 -228.62150574]
[288.88775635 -221.57870483]
[301.14459229 -214.05781555]
[313.10235596 -206.06999207]
[321.91912842 -218.20524597]
[330.73590088 -230.34049988]
[335.15432739 -246.70857239]
[352.10586548 -246.99397278]
[357.07275391 -230.78390503]
[342.87115479 -221.52372742]
[334.05438232 -209.38847351]
[325.23760986 -197.25321960]
[338.38519287 -186.81694031]
[351.04983521 -175.79960632]
[363.20593262 -164.22357178]
[374.82879639 -152.11225891]
[385.89489746 -139.49020386]
[396.38183594 -126.38299561]
[406.26834106 -112.81716919]
[415.53442383 -98.82021332]
[424.16128540 -84.42048645]
[432.13143921 -69.64715576]
[439.42877197 -54.53014374]
[446.03845215 -39.10008240]
[451.94714355 -23.38823128]
[457.14285278 -7.42641640]
[461.61505127 8.75302601]
[465.35467529 25.11731911]
[468.35415649 41.63331223]
[470.60742188 58.26754379]
[472.10989380 74.98632050]
[472.85852051 91.75576782]
[472.85183716 108.54191589]
[472.08981323 125.31076050]
[470.57397461 142.02833557]
[468.30743408 158.66076660]
[465.29476929 175.17434692]
[461.54208374 191.53565979]
[457.05697632 207.71151733]
[451.84854126 223.66918945]
[445.92730713 239.37631226]
[439.30529785 254.80108643]
[431.99588013 269.91226196]
[424.01394653 284.67922974]
[415.37557983 299.07208252]
[406.09835815 313.06161499]
[396.20098877 326.61956787]
[407.92846680 335.97189331]
[419.65594482 345.32424927]
[434.94659424 342.04858398]
[448.74121094 349.41357422]
[454.52636719 363.94168091]
[449.57049561 378.77316284]
[436.21365356 386.90509033]
[420.76245117 384.49780273]
[410.51254272 372.68789673]
[410.30358887 357.05172729]
[398.57611084 347.69937134]
[386.84866333 338.34701538]
[377.44686890 349.22817993]
[367.63256836 359.73883057]
[357.42037964 369.86328125]
[346.82550049 379.58654785]
[335.86361694 388.89410400]
[324.55108643 397.77218628]
[312.90469360 406.20751953]
[300.94177246 414.18762207]
[288.68008423 421.70059204]
[276.13790894 428.73529053]
[263.33383179 435.28125000]
[250.28694153 441.32870483]
[237.01660156 446.86871338]
[223.54254150 451.89300537]
[209.88482666 456.39413452]
[196.06373596 460.36538696]
[182.09980774 463.80087280]
[168.01383972 466.69546509]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[101 109]
[102 108]
[103 107]
[144 156]
[145 155]
[146 154]
] def

init

% Start Annotations
101 109 0.0 0.2 colorpair
103 107 0.16 1 colorpair
144 156 0.32 0.2 colorpair
145 155 0.0 0.6 colorpair
146 154 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
101 109 2 gmark
102 108 3 gmark
102 cmark
108 cmark
103 cmark
144 156 2 gmark
144 cmark
156 cmark
145 155 1 gmark
146 cmark

% End Annotations
showpage
end
%%EOF
