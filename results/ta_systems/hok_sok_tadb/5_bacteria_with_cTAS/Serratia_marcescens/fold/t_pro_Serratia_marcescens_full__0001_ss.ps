%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:21:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__________________________________U___GAUGCCGAACAAACGGAGCCUGUUAAAACUGGUGGUUAUUUGUGCCACGGUAAUAUCACUGGCAUGGAUAACCCGCAGCACGCUGUGUGAGCUGCGGAUCCGAUCGGGCAAUACGGAGGUUGCGGCCAUUUUGGCUUACGAAUCCGAA____\
) } def
/len { sequence length } bind def

/coor [
[198.88151550 337.74694824]
[188.89236450 341.65948486]
[178.74891663 345.15252686]
[168.46876526 348.22003174]
[158.06974792 350.85665894]
[147.56994629 353.05783081]
[136.98756409 354.81970215]
[126.34096527 356.13925171]
[115.64865112 357.01416016]
[104.92916870 357.44293213]
[94.20113373 357.42480469]
[83.48316193 356.95983887]
[72.79386139 356.04879761]
[62.15179062 354.69329834]
[51.57542038 352.89566040]
[41.08310699 350.65905762]
[30.69306755 347.98730469]
[20.42333603 344.88510132]
[10.29173946 341.35778809]
[0.31586742 337.41152954]
[-9.48696518 333.05313110]
[-19.09974098 328.29019165]
[-28.50577354 323.13095093]
[-37.68873596 317.58441162]
[-46.63268280 311.66012573]
[-55.32209778 305.36846924]
[-63.74188614 298.72027588]
[-71.87744141 291.72717285]
[-79.71463776 284.40121460]
[-87.23986816 276.75515747]
[-94.44007111 268.80230713]
[-101.30275726 260.55639648]
[-107.81599426 252.03181458]
[-113.96849060 243.24330139]
[-119.74956512 234.20614624]
[-125.14917755 224.93600464]
[-130.15795898 215.44900513]
[-134.76721191 205.76159668]
[-138.96893311 195.89059448]
[-142.75582886 185.85314941]
[-146.12133789 175.66665649]
[-149.05961609 165.34883118]
[-151.56553650 154.91755676]
[-153.63478088 144.39096069]
[-155.26374817 133.78729248]
[-156.44960022 123.12499237]
[-157.19027710 112.42253876]
[-157.48451233 101.69851685]
[-157.33178711 90.97155762]
[-156.73236084 80.26026154]
[-155.68727112 69.58323669]
[-154.19833374 58.95901108]
[-152.26815796 48.40602493]
[-149.90005493 37.94260406]
[-147.09815979 27.58690453]
[-143.86734009 17.35690689]
[-140.21318054 7.27036762]
[-136.14204407 -2.65520358]
[-131.66099548 -12.40257740]
[-126.77781677 -21.95483398]
[-121.50096893 -31.29538918]
[-115.83962250 -40.40803146]
[-109.80360413 -49.27694321]
[-103.40339661 -57.88672638]
[-96.65009308 -66.22243500]
[-89.55543518 -74.26960754]
[-82.13172913 -82.01425934]
[-74.39186859 -89.44296265]
[-66.34928131 -96.54280853]
[-58.01792526 -103.30148315]
[-49.41227341 -109.70725250]
[-40.54726028 -115.74899292]
[-31.43827057 -121.41621399]
[-22.10112000 -126.69908905]
[-12.55201626 -131.58843994]
[-2.80753565 -136.07577515]
[7.11540699 -140.15330505]
[17.19958687 -143.81396484]
[27.42749786 -147.05139160]
[37.78138733 -149.85997009]
[48.24327850 -152.23481750]
[58.79501724 -154.17181396]
[56.82693100 -169.04212952]
[54.85884857 -183.91246033]
[52.89076233 -198.78279114]
[38.37316132 -203.49470520]
[27.34361076 -214.04513550]
[21.99203110 -228.33930969]
[23.38098526 -243.53909302]
[31.23469543 -256.62655640]
[43.99379730 -265.00320435]
[59.12496948 -267.00579834]
[73.62390137 -262.23678589]
[84.61182404 -251.64299011]
[89.90706635 -237.32785034]
[88.45826721 -222.13365173]
[80.55308533 -209.07719421]
[67.76109314 -200.75086975]
[69.72917175 -185.88055420]
[71.69725800 -171.01022339]
[73.66534424 -156.13989258]
[96.51181793 -157.46649170]
[119.38584137 -156.75932312]
[142.10673523 -154.02398682]
[164.49502563 -149.28207397]
[186.37385559 -142.57106018]
[207.57040405 -133.94393921]
[227.91725159 -123.46887207]
[247.25366211 -111.22859192]
[265.42687988 -97.31980133]
[282.29339600 -81.85234833]
[297.71994019 -64.94842529]
[309.51306152 -74.21787262]
[321.30615234 -83.48731232]
[333.09927368 -92.75675964]
[344.89236450 -102.02620697]
[356.68548584 -111.29565430]
[362.75390625 -125.90676880]
[377.54153442 -127.68863678]
[389.33465576 -136.95808411]
[392.66320801 -152.65203857]
[407.07250977 -159.70555115]
[421.50894165 -152.70776367]
[424.89813232 -137.02679443]
[414.64016724 -124.69172668]
[398.60409546 -125.16497040]
[386.81100464 -115.89553070]
[381.58609009 -101.94742584]
[365.95492554 -99.50254822]
[354.16183472 -90.23310089]
[342.36871338 -80.96365356]
[330.57559204 -71.69420624]
[318.78250122 -62.42476273]
[306.98937988 -53.15531540]
[318.43103027 -36.34165192]
[328.51000977 -18.67743874]
[337.16345215 -0.27287337]
[344.33740234 18.75722885]
[349.98709106 38.29415512]
[354.07727051 58.21602249]
[356.58242798 78.39855194]
[357.48690796 98.71584320]
[356.78512573 119.04113770]
[354.48138428 139.24765015]
[350.59011841 159.20933533]
[345.13558960 178.80163574]
[338.15182495 197.90234375]
[329.68237305 216.39230347]
[319.78005981 234.15617371]
[308.50671387 251.08311462]
[295.93261719 267.06756592]
[282.13623047 282.00976562]
[292.43316650 292.91723633]
[302.73010254 303.82470703]
[313.02706909 314.73217773]
[325.88467407 315.88610840]
[334.23684692 325.19726562]
[334.00607300 337.30230713]
[344.12225342 348.37765503]
[354.23840332 359.45300293]
[371.91033936 364.60025024]
[375.02746582 381.86282349]
[385.32440186 392.77029419]
[395.62133789 403.67776489]
[405.91830444 414.58523560]
[416.21524048 425.49270630]
[431.48489380 432.85977173]
[428.63281250 449.57211304]
[411.78405762 451.45788574]
[405.30776978 435.78964233]
[395.01083374 424.88217163]
[384.71386719 413.97470093]
[374.41693115 403.06726074]
[364.11999512 392.15979004]
[352.03103638 391.49475098]
[343.36300659 382.47689819]
[343.16305542 369.56915283]
[333.04690552 358.49380493]
[322.93072510 347.41845703]
[305.94592285 343.03332520]
[302.11959839 325.02911377]
[291.82263184 314.12167358]
[281.52569580 303.21420288]
[271.22875977 292.30673218]
[263.06961060 299.27233887]
[254.62741089 305.89202881]
[245.91679382 312.15429688]
[236.95288086 318.04830933]
[227.75123596 323.56381226]
[218.32781982 328.69125366]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[82 101]
[83 100]
[84 99]
[85 98]
[112 134]
[113 133]
[114 132]
[115 131]
[116 130]
[117 129]
[119 127]
[120 126]
[152 184]
[153 183]
[154 182]
[155 181]
[158 179]
[159 178]
[160 177]
[162 174]
[163 173]
[164 172]
[165 171]
[166 170]
] def

init

% Start Annotations
82 101 0.32 0.2 colorpair
83 100 0.32 1 colorpair
84 99 0.16 0.2 colorpair
85 98 0.0 0.2 colorpair
112 134 0.0 1 colorpair
113 133 0.0 0.2 colorpair
114 132 0.32 1 colorpair
115 131 0.16 1 colorpair
116 130 0.16 0.2 colorpair
119 127 0.0 1 colorpair
120 126 0.32 0.2 colorpair
152 184 0.0 0.2 colorpair
153 183 0.0 1 colorpair
154 182 0.0 1 colorpair
155 181 0.0 1 colorpair
158 179 0.0 1 colorpair
159 178 0.0 0.2 colorpair
160 177 0.0 1 colorpair
162 174 0.0 1 colorpair
163 173 0.0 1 colorpair
164 172 0.0 1 colorpair
165 171 0.16 1 colorpair
166 170 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
82 101 2 gmark
82 cmark
101 cmark
83 cmark
100 cmark
84 99 2 gmark
84 cmark
99 cmark
85 98 2 gmark
113 133 2 gmark
114 cmark
132 cmark
115 cmark
116 130 2 gmark
130 cmark
117 129 10 gmark
117 cmark
129 cmark
120 126 2 gmark
120 cmark
126 cmark
152 184 2 gmark
159 178 2 gmark
165 cmark
166 170 2 gmark

% End Annotations
showpage
end
%%EOF
