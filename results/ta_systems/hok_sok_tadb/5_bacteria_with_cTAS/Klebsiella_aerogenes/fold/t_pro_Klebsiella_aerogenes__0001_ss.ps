%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 23:48:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__________________AAACUGCCGCAAAACAAUCUGCUCUGGUGCGUAUUAAUCGUGUGUUUAACGCUCUUGAUAUUCACAUGCCUGACCCGGAAAUCGCUU_UGCGAAGUCCGGCUCAAGGACGGGAACAGGGAGGUCGCGGCAAUCCUGGCUUACGAAUCCAACAAG___\
) } def
/len { sequence length } bind def

/coor [
[138.55659485 240.50308228]
[131.18641663 242.32054138]
[123.73159790 243.75166321]
[116.21235657 244.79257202]
[108.64910889 245.44042969]
[101.06237793 245.69351196]
[93.47277069 245.55110168]
[85.90087891 245.01359558]
[78.36725616 244.08244324]
[70.89235687 242.76019287]
[63.49646759 241.05041504]
[56.19966888 238.95776367]
[49.02176666 236.48789978]
[41.98224258 233.64755249]
[35.10020828 230.44441223]
[28.39434433 226.88719177]
[21.88285255 222.98551941]
[15.58340931 218.75001526]
[9.51311398 214.19216919]
[3.68844461 209.32434082]
[-1.87478757 204.15975952]
[-7.16148186 198.71243286]
[-12.15728664 192.99714661]
[-16.84864235 187.02943420]
[-21.22281265 180.82546997]
[-25.26792526 174.40211487]
[-28.97299767 167.77679443]
[-32.32797623 160.96748352]
[-35.32374954 153.99269104]
[-37.95219040 146.87132263]
[-40.20615768 139.62272644]
[-42.07953644 132.26658630]
[-43.56724548 124.82284546]
[-44.66524124 117.31172943]
[-45.37054062 109.75361633]
[-45.68123627 102.16902924]
[-45.59648132 94.57855988]
[-45.11650467 87.00279999]
[-44.24261475 79.46231842]
[-42.97717285 71.97759247]
[-41.32362366 64.56893158]
[-39.28645325 57.25645065]
[-36.87119293 50.05999374]
[-34.08439255 42.99909592]
[-30.93362427 36.09292984]
[-27.42743683 29.36023903]
[-23.57534790 22.81929779]
[-19.38781548 16.48786354]
[-14.87620640 10.38312244]
[-26.21245003 0.56021154]
[-37.54869461 -9.26269913]
[-48.88493729 -19.08561134]
[-60.22117996 -28.90852165]
[-71.55742645 -38.73143387]
[-82.89366913 -48.55434418]
[-94.39820099 -45.40785217]
[-105.87223053 -48.19199371]
[-114.47842407 -56.09877396]
[-118.14661407 -67.06855011]
[-116.07109833 -78.32556915]
[-127.04951477 -88.54683685]
[-138.02792358 -98.76810455]
[-154.04756165 -99.63475037]
[-163.24034119 -112.78283691]
[-158.55438232 -128.12628174]
[-143.58432007 -133.89489746]
[-129.81391907 -125.66350555]
[-127.80666351 -109.74652100]
[-116.82824707 -99.52525330]
[-105.84982300 -89.30398560]
[-87.65324402 -91.07696533]
[-73.67829132 -78.80063629]
[-73.07075500 -59.89058685]
[-61.73451233 -50.06767654]
[-50.39826965 -40.24476624]
[-39.06202698 -30.42185402]
[-27.72578239 -20.59894371]
[-16.38953972 -10.77603245]
[-5.05329561 -0.95312107]
[14.07500267 -17.66317368]
[35.81459045 -30.79740334]
[59.50479507 -39.95665741]
[84.42565918 -44.86258316]
[109.81983948 -45.36608505]
[134.91558838 -41.45186234]
[158.95024109 -33.23887253]
[181.19337463 -20.97670937]
[190.18254089 -32.98482895]
[199.17169189 -44.99294662]
[195.74572754 -63.59998322]
[206.79179382 -78.56634521]
[224.94940186 -80.70185089]
[233.50424194 -93.02316284]
[235.83970642 -101.88823700]
[242.32336426 -105.48619080]
[251.09675598 -117.65284729]
[259.87014771 -129.81950378]
[255.18261719 -144.49372864]
[259.97848511 -158.94548035]
[272.21966553 -167.69860840]
[287.08981323 -167.56677246]
[295.86318970 -179.73342896]
[304.63659668 -191.90008545]
[305.75332642 -208.26115417]
[320.59780884 -215.23060608]
[333.89932251 -205.63885498]
[331.97439575 -189.35307312]
[316.80325317 -183.12667847]
[308.02984619 -170.96002197]
[299.25643921 -158.79336548]
[304.07751465 -144.72584534]
[299.63809204 -130.34684753]
[287.44042969 -121.23255157]
[272.03680420 -121.04609680]
[263.26339722 -108.87944031]
[254.49000549 -96.71279144]
[245.82554626 -84.46832275]
[237.27070618 -72.14701080]
[241.69165039 -61.58843231]
[240.43907166 -50.08962250]
[233.71026611 -40.53415680]
[223.09027100 -35.37466049]
[211.17982483 -36.00378418]
[202.19065857 -23.99566460]
[193.20149231 -11.98754501]
[207.59127808 1.75619626]
[219.97418213 17.33245850]
[230.11924744 34.45070267]
[237.83720398 52.79162216]
[242.98413086 72.01311493]
[245.46400452 91.75663757]
[245.23056030 111.65391541]
[242.28816223 131.33383179]
[236.69168091 150.42927551]
[228.54553223 168.58406067]
[218.00164795 185.45957947]
[229.68127441 194.87161255]
[241.36088562 204.28364563]
[254.71105957 197.06915283]
[269.76568604 195.51969910]
[284.22753906 199.84043884]
[295.90173340 209.34309387]
[303.02899170 222.55546570]
[304.55065918 237.44943237]
[300.26577759 251.75219727]
[311.94540405 261.16421509]
[323.62500000 270.57626343]
[338.93215942 267.37863159]
[352.68902588 274.81387329]
[358.40002441 289.37127686]
[353.36859131 304.17733765]
[339.97042847 312.24102783]
[324.53173828 309.75494385]
[314.34219360 297.89294434]
[314.21298218 282.25588989]
[302.53335571 272.84384155]
[290.85372925 263.43182373]
[277.78863525 270.65905762]
[262.91162109 272.33810425]
[248.48617554 268.18222046]
[236.71914673 258.79473877]
[229.42308044 245.58184814]
[227.73701477 230.54188538]
[231.94885254 215.96327209]
[220.26924133 206.55123901]
[208.58961487 197.13920593]
[203.38291931 202.66304016]
[197.89559937 207.90820312]
[192.14253235 212.86045837]
[186.13934326 217.50634766]
[179.90234375 221.83326721]
[173.44844055 225.82946777]
[166.79516602 229.48410034]
[159.96057129 232.78726196]
[152.96321106 235.72996521]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 79]
[50 78]
[51 77]
[52 76]
[53 75]
[54 74]
[55 73]
[60 70]
[61 69]
[62 68]
[87 125]
[88 124]
[89 123]
[92 118]
[93 117]
[95 116]
[96 115]
[97 114]
[101 110]
[102 109]
[103 108]
[136 166]
[137 165]
[138 164]
[145 157]
[146 156]
[147 155]
] def

init

% Start Annotations
49 79 0.16 0.2 colorpair
50 78 0.0 1 colorpair
51 77 0.16 0.6 colorpair
52 76 0.32 0.6 colorpair
53 75 0.16 1 colorpair
54 74 0.0 0.6 colorpair
55 73 0.32 0.2 colorpair
60 70 0.32 1 colorpair
61 69 0.16 0.2 colorpair
62 68 0.0 1 colorpair
87 125 0.16 0.6 colorpair
88 124 0.16 0.2 colorpair
89 123 0.16 1 colorpair
92 118 0.16 0.6 colorpair
93 117 0.16 0.6 colorpair
95 116 0.0 0.6 colorpair
96 115 0.32 0.6 colorpair
97 114 0.16 1 colorpair
101 110 0.0 1 colorpair
102 109 0.32 0.6 colorpair
103 108 0.0 1 colorpair
136 166 0.16 0.2 colorpair
137 165 0.16 0.2 colorpair
138 164 0.0 0.2 colorpair
145 157 0.32 1 colorpair
146 156 0.0 1 colorpair
147 155 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
49 79 2 gmark
49 cmark
51 77 1 gmark
51 cmark
77 cmark
52 76 1 gmark
52 cmark
76 cmark
75 cmark
54 74 1 gmark
55 73 2 gmark
55 cmark
73 cmark
60 cmark
70 cmark
61 69 2 gmark
69 cmark
87 125 1 gmark
87 cmark
125 cmark
88 124 2 gmark
88 cmark
124 cmark
123 cmark
92 118 1 gmark
92 cmark
93 117 1 gmark
93 cmark
117 cmark
95 116 1 gmark
96 115 1 gmark
96 cmark
115 cmark
97 cmark
102 109 1 gmark
102 cmark
109 cmark
136 166 2 gmark
136 cmark
166 cmark
137 165 2 gmark
165 cmark
138 164 2 gmark
145 cmark
157 cmark

% End Annotations
showpage
end
%%EOF
