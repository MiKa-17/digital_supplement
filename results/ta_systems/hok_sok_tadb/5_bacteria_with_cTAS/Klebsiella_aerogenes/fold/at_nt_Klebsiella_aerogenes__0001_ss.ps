%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 23:48:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCU__UGUGGCGCUUAUUA_UACUCUGUAUUACGCUACUGGUAUUCACGUGGCUGGUCCGCAA_CUCACUAUGCGAACUCCGGAUUAAGGAGCGUAAUAUUGAGGUUGAAGCUGUUCUCGCUUACGAAUC______GAAGAAGUAGCAUCCGCGCGGGGGCAACCCCGCGUA_______________UGG_GUUGUCAGGACGCAUCCUA_UAGCACCCAUGAUGGGGUU_C___\
) } def
/len { sequence length } bind def

/coor [
[78.26312256 569.45690918]
[64.01094818 568.57989502]
[49.79199600 567.27020264]
[35.61939621 565.52923584]
[21.50622749 563.35839844]
[7.46552372 560.75988770]
[-6.48975515 557.73596191]
[-20.34672546 554.28955078]
[-34.09259415 550.42364502]
[-47.71467590 546.14196777]
[-61.20038986 541.44848633]
[-74.53728485 536.34741211]
[-87.71305847 530.84350586]
[-100.71553802 524.94183350]
[-113.53272247 518.64794922]
[-126.15277863 511.96749878]
[-138.56405640 504.90676880]
[-150.75509644 497.47225952]
[-162.71464539 489.67077637]
[-174.43167114 481.50958252]
[-185.89535522 472.99618530]
[-197.09509277 464.13845825]
[-208.02056885 454.94454956]
[-218.66168213 445.42297363]
[-229.00862122 435.58251953]
[-239.05183411 425.43225098]
[-250.03794861 435.64526367]
[-261.02404785 445.85824585]
[-263.04330444 461.77374268]
[-276.81991577 469.99475098]
[-291.78561401 464.21484375]
[-296.46002197 448.86788940]
[-287.25732422 435.72671509]
[-271.23706055 434.87213135]
[-260.25094604 424.65914917]
[-249.26483154 414.44613647]
[-258.53176880 403.83758545]
[-267.47659302 392.95605469]
[-276.09130859 381.81134033]
[-284.36813354 370.41345215]
[-292.29968262 358.77264404]
[-299.87875366 346.89932251]
[-307.09860229 334.80422974]
[-313.95272827 322.49819946]
[-320.43496704 309.99224854]
[-326.53948975 297.29766846]
[-332.26083374 284.42581177]
[-337.59381104 271.38830566]
[-342.53369141 258.19680786]
[-347.07601929 244.86320496]
[-351.21667480 231.39945984]
[-354.95199585 217.81765747]
[-358.27856445 204.13000488]
[-361.19345093 190.34881592]
[-363.69400024 176.48645020]
[-365.77798462 162.55538940]
[-367.44351196 148.56811523]
[-368.68911743 134.53720093]
[-369.51364136 120.47527313]
[-369.91638184 106.39495087]
[-369.89697266 92.30887604]
[-369.45538330 78.22971344]
[-368.59207153 64.17011261]
[-367.30776978 50.14269638]
[-365.60366821 36.16007233]
[-363.48126221 22.23480034]
[-360.94247437 8.37939167]
[-357.98959351 -5.39370823]
[-354.62527466 -19.07212448]
[-350.85250854 -32.64356995]
[-346.67471313 -46.09584808]
[-342.09564209 -59.41688156]
[-337.11941528 -72.59469604]
[-331.75045776 -85.61745453]
[-325.99365234 -98.47345734]
[-319.85412598 -111.15116119]
[-313.33743286 -123.63916779]
[-306.44940186 -135.92626953]
[-299.19619751 -148.00140381]
[-291.58438110 -159.85374451]
[-283.62078857 -171.47264099]
[-275.31253052 -182.84765625]
[-266.66714478 -193.96856689]
[-257.69232178 -204.82537842]
[-248.39614868 -215.40835571]
[-238.78700256 -225.70796204]
[-228.87348938 -235.71496582]
[-218.66452026 -245.42036438]
[-208.16928101 -254.81544495]
[-197.39718628 -263.89178467]
[-186.35791016 -272.64117432]
[-175.06137085 -281.05581665]
[-163.51773071 -289.12814331]
[-151.73736572 -296.85086060]
[-139.73081970 -304.21707153]
[-127.50892639 -311.22012329]
[-115.08263397 -317.85375977]
[-102.46311951 -324.11199951]
[-89.66171265 -329.98922729]
[-76.68991852 -335.48016357]
[-63.55939102 -340.57989502]
[-50.28192902 -345.28378296]
[-36.86945343 -349.58764648]
[-23.33401680 -353.48760986]
[-9.68778133 -356.98019409]
[4.05699587 -360.06222534]
[17.88796616 -362.73092651]
[31.79270363 -364.98394775]
[45.75871658 -366.81921387]
[59.77346039 -368.23513794]
[73.82434082 -369.23037720]
[73.22799683 -384.21850586]
[72.63164520 -399.20666504]
[60.15254211 -408.63034058]
[56.70083237 -423.88223267]
[63.90630722 -437.76080322]
[78.36676025 -443.71307373]
[93.25440979 -438.92849731]
[101.53975677 -425.66625977]
[99.31072235 -410.18838501]
[87.61978912 -399.80300903]
[88.21613312 -384.81484985]
[88.81248474 -369.82672119]
[107.20767212 -369.90463257]
[125.59181213 -369.26257324]
[143.93675232 -367.90155029]
[162.21437073 -365.82366943]
[180.39666748 -363.03204346]
[198.45578003 -359.53103638]
[216.36405945 -355.32592773]
[234.09403992 -350.42324829]
[251.61857605 -344.83044434]
[268.91082764 -338.55609131]
[285.94427490 -331.60983276]
[302.69281006 -324.00225830]
[319.13082886 -315.74508667]
[335.23309326 -306.85095215]
[350.97497559 -297.33346558]
[366.33230591 -287.20718384]
[381.28158569 -276.48767090]
[395.79989624 -265.19134521]
[409.86502075 -253.33549500]
[423.45541382 -240.93827820]
[436.55020142 -228.01870728]
[449.12936401 -214.59657288]
[461.17358398 -200.69242859]
[472.66448975 -186.32759094]
[483.58438110 -171.52406311]
[493.91659546 -156.30451965]
[503.64529419 -140.69229126]
[512.75555420 -124.71129608]
[521.23339844 -108.38601685]
[529.06585693 -91.74145508]
[542.85656738 -97.64205170]
[556.64721680 -103.54265594]
[570.43792725 -109.44325256]
[584.22857666 -115.34384918]
[593.87255859 -127.88597870]
[608.61737061 -125.77903748]
[622.40808105 -131.67964172]
[631.80120850 -145.12211609]
[648.11383057 -143.43923950]
[654.56481934 -128.36221313]
[644.51794434 -115.40097809]
[628.30865479 -117.88895416]
[614.51794434 -111.98835754]
[605.86041260 -99.86827850]
[590.12921143 -101.55316925]
[576.33850098 -95.65256500]
[562.54785156 -89.75196838]
[548.75714111 -83.85137177]
[534.96649170 -77.95077515]
[540.17187500 -64.65425110]
[544.97094727 -51.20572662]
[549.35919189 -37.61761093]
[553.33264160 -23.90245438]
[556.88757324 -10.07291222]
[560.02075195 3.85824561]
[562.72918701 17.87815857]
[565.01049805 31.97388458]
[566.86248779 46.13241196]
[568.28350830 60.34066391]
[569.27221680 74.58553314]
[569.82769775 88.85385895]
[569.94946289 103.13247681]
[569.63739014 117.40820312]
[568.89172363 131.66786194]
[567.71319580 145.89828491]
[566.10290527 160.08633423]
[564.06231689 174.21891785]
[561.59332275 188.28297424]
[558.69824219 202.26553345]
[555.37963867 216.15368652]
[551.64068604 229.93461609]
[547.48474121 243.59558105]
[542.91577148 257.12399292]
[537.93786621 270.50735474]
[532.55566406 283.73330688]
[526.77410889 296.78964233]
[520.59863281 309.66427612]
[514.03479004 322.34539795]
[507.08880615 334.82122803]
[499.76696777 347.08029175]
[492.07608032 359.11126709]
[484.02325439 370.90301514]
[475.61590576 382.44470215]
[466.86178589 393.72561646]
[457.76898193 404.73538208]
[448.34591675 415.46383667]
[438.60125732 425.90103149]
[428.54403687 436.03738403]
[418.18347168 445.86352539]
[407.52920532 455.37036133]
[396.59100342 464.54913330]
[385.37902832 473.39138794]
[373.90359497 481.88891602]
[362.17529297 490.03387451]
[350.20495605 497.81878662]
[338.00363159 505.23645020]
[325.58258057 512.28002930]
[312.95330811 518.94293213]
[300.12741089 525.21911621]
[287.11679077 531.10278320]
[273.93341064 536.58843994]
[260.58947754 541.67108154]
[247.09729004 546.34594727]
[233.46929932 550.60876465]
[219.71809387 554.45556641]
[205.85636902 557.88287354]
[191.89691162 560.88745117]
[177.85263062 563.46661377]
[163.73646545 565.61785889]
[149.56147766 567.33923340]
[135.34072876 568.62921143]
[121.08734894 569.48657227]
[106.81450653 569.91046143]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 36]
[27 35]
[28 34]
[111 123]
[112 122]
[113 121]
[153 172]
[154 171]
[155 170]
[156 169]
[157 168]
[159 166]
[160 165]
] def

init

% Start Annotations
26 36 0.32 1 colorpair
27 35 0.16 0.2 colorpair
28 34 0.0 1 colorpair
111 123 0.32 1 colorpair
112 122 0.0 1 colorpair
113 121 0.0 1 colorpair
153 172 0.32 0.2 colorpair
156 169 0.32 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
26 cmark
36 cmark
27 35 2 gmark
35 cmark
111 cmark
123 cmark
153 172 2 gmark
153 cmark
172 cmark
154 171 3 gmark
154 cmark
171 cmark
155 170 3 gmark
155 cmark
170 cmark
156 169 2 gmark
156 cmark
169 cmark
157 168 3 gmark
159 166 3 gmark
166 cmark
160 165 3 gmark

% End Annotations
showpage
end
%%EOF
