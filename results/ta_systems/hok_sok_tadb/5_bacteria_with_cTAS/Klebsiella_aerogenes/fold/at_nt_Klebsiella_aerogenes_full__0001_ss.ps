%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 23:48:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__CUGUUCUGGUGCGUAUUAAUCGUGUGUUUAACGCUCUUGAUAUUCACAUGCCUGACCCGGAAAUCGCUU_UGCGAAGUCCGGCUCAAGGACGGGAACAGGGAGGUCGCGGCAAUCCUGGCUUACGAAUC___C__UAAGUAGCAACCUCCGGGCGGGGGAAACCCCGCCUAU_CA___________UGC_GUUGUC_GGACAUGCCUGAAG_GCCUUUAUGAAGGGGUU_CC__\
) } def
/len { sequence length } bind def

/coor [
[64.46250916 476.03323364]
[53.83242035 474.87658691]
[43.23932648 473.41952515]
[32.69172287 471.66317749]
[22.19806290 469.60894775]
[11.76675701 467.25851440]
[1.40616524 464.61370850]
[-8.87541008 461.67672729]
[-19.06972694 458.44985962]
[-29.16861725 454.93572998]
[-39.16398621 451.13714600]
[-49.04782486 447.05712891]
[-58.81221008 442.69897461]
[-68.44931793 438.06616211]
[-77.95141602 433.16241455]
[-87.31090546 427.99166870]
[-96.52027130 422.55804443]
[-105.57213593 416.86590576]
[-114.45925140 410.91983032]
[-123.17449188 404.72454834]
[-131.71086121 398.28506470]
[-140.06153870 391.60653687]
[-148.21981812 384.69427490]
[-156.17916870 377.55386353]
[-163.93319702 370.19100952]
[-171.47570801 362.61160278]
[-182.46182251 372.82458496]
[-193.44792175 383.03759766]
[-195.46717834 398.95306396]
[-209.24377441 407.17407227]
[-224.20947266 401.39419556]
[-228.88389587 386.04721069]
[-219.68119812 372.90606689]
[-203.66093445 372.05148315]
[-192.67481995 361.83847046]
[-181.68870544 351.62548828]
[-189.92333984 342.09164429]
[-197.83544922 332.28851318]
[-205.41625977 322.22695923]
[-212.65730286 311.91821289]
[-219.55053711 301.37368774]
[-226.08828735 290.60519409]
[-232.26330566 279.62463379]
[-238.06869507 268.44427490]
[-243.49800110 257.07650757]
[-248.54519653 245.53402710]
[-253.20466614 233.82963562]
[-257.47122192 221.97637939]
[-261.34011841 209.98742676]
[-264.80703735 197.87612915]
[-267.86813354 185.65594482]
[-270.52001953 173.34046936]
[-272.75973511 160.94342041]
[-274.58474731 148.47856140]
[-275.99310303 135.95979309]
[-276.98315430 123.40100861]
[-277.55386353 110.81619263]
[-277.70455933 98.21934509]
[-277.43508911 85.62448120]
[-276.74575806 73.04560852]
[-275.63732910 60.49672318]
[-274.11102295 47.99177933]
[-272.16854858 35.54468918]
[-269.81204224 23.16930199]
[-267.04418945 10.87938404]
[-263.86798096 -1.31139374]
[-260.28701782 -13.38947010]
[-274.50289917 -18.17574501]
[-288.71881104 -22.96201897]
[-304.67922974 -19.19407654]
[-315.72406006 -31.31611061]
[-310.49133301 -46.85801315]
[-294.36401367 -49.83160400]
[-283.93252563 -37.17790985]
[-269.71664429 -32.39163589]
[-255.50074768 -27.60536194]
[-249.13597107 -44.11100769]
[-242.00534058 -60.30053329]
[-234.12448120 -76.13842010]
[-225.51068115 -91.58993530]
[-216.18286133 -106.62117767]
[-206.16145325 -121.19918060]
[-195.46844482 -135.29196167]
[-184.12731934 -148.86860657]
[-172.16291809 -161.89932251]
[-159.60150146 -174.35556030]
[-146.47062683 -186.20996094]
[-132.79910278 -197.43653870]
[-118.61689758 -208.01065063]
[-103.95514679 -217.90911865]
[-88.84600067 -227.11022949]
[-96.08624268 -240.24714661]
[-103.32647705 -253.38407898]
[-118.56367493 -252.49487305]
[-132.67445374 -258.31283569]
[-142.85711670 -269.68280029]
[-147.08987427 -284.34725952]
[-144.53233337 -299.39459229]
[-135.69227600 -311.83709717]
[-122.32491302 -319.20434570]
[-107.08433533 -320.03353882]
[-92.99657440 -314.16006470]
[-82.85877228 -302.75006104]
[-78.68378448 -288.06906128]
[-81.30056763 -273.03192139]
[-90.18955231 -260.62432861]
[-82.94931030 -247.48739624]
[-75.70906830 -234.35046387]
[-26.83180618 -255.77746582]
[24.57749176 -270.10180664]
[77.49250793 -277.03756714]
[76.89615631 -292.02569580]
[76.29981232 -307.01385498]
[63.82070923 -316.43753052]
[60.36899948 -331.68942261]
[67.57447052 -345.56799316]
[82.03492737 -351.52026367]
[96.92257690 -346.73571777]
[105.20792389 -333.47344971]
[102.97888947 -317.99557495]
[91.28794861 -307.61019897]
[91.88430023 -292.62203979]
[92.48064423 -277.63391113]
[103.17330170 -277.69543457]
[113.86341858 -277.45425415]
[124.54241943 -276.91058350]
[135.20175171 -276.06481934]
[145.83288574 -274.91766357]
[156.42727661 -273.47003174]
[166.97644043 -271.72311401]
[177.47192383 -269.67825317]
[187.90531921 -267.33712769]
[198.26828003 -264.70159912]
[208.55247498 -261.77377319]
[218.74966431 -258.55603027]
[228.85168457 -255.05091858]
[238.85044861 -251.26124573]
[248.73791504 -247.19006348]
[258.50619507 -242.84063721]
[268.14743042 -238.21643066]
[277.65390015 -233.32116699]
[287.01800537 -228.15876770]
[296.23220825 -222.73336792]
[305.28915405 -217.04931641]
[314.18157959 -211.11117554]
[322.90234375 -204.92369080]
[331.44445801 -198.49182129]
[339.80111694 -191.82073975]
[347.96554565 -184.91577148]
[355.93127441 -177.78245544]
[363.69186401 -170.42652893]
[371.24114990 -162.85386658]
[378.57302856 -155.07054138]
[385.68164062 -147.08279419]
[392.56130981 -138.89701843]
[399.20651245 -130.51977539]
[405.61190796 -121.95780182]
[411.77239990 -113.21793365]
[417.68298340 -104.30718231]
[423.33898926 -95.23268890]
[428.73587036 -86.00173187]
[433.86926270 -76.62170410]
[438.73507690 -67.10012817]
[443.32943726 -57.44462585]
[447.64862061 -47.66294479]
[451.68917847 -37.76291656]
[455.44790649 -27.75248337]
[458.92175293 -17.63966370]
[462.10794067 -7.43256140]
[465.00390625 2.86064148]
[467.60736084 13.23169518]
[469.91619873 23.67228889]
[471.92855835 34.17405701]
[473.64285278 44.72857666]
[475.05767822 55.32739639]
[476.17193604 65.96201324]
[476.98471069 76.62391663]
[477.49533081 87.30455017]
[477.70343018 97.99536133]
[477.60882568 108.68777466]
[477.21160889 119.37322998]
[476.51205444 130.04315186]
[475.51074219 140.68901062]
[474.20849609 151.30224609]
[472.60632324 161.87437439]
[470.70553589 172.39691162]
[468.50765991 182.86141968]
[466.01443481 193.25952148]
[463.22787476 203.58288574]
[460.15020752 213.82322693]
[456.78390503 223.97235107]
[453.13168335 234.02212524]
[449.19641113 243.96447754]
[444.98129272 253.79145813]
[440.48971558 263.49517822]
[435.72521973 273.06787109]
[430.69168091 282.50186157]
[425.39309692 291.78958130]
[419.83374023 300.92358398]
[414.01803589 309.89657593]
[407.95068359 318.70135498]
[401.63653564 327.33084106]
[395.08062744 335.77813721]
[388.28823853 344.03646851]
[381.26480103 352.09924316]
[374.01593018 359.95993042]
[366.54748535 367.61230469]
[358.86538696 375.05020142]
[350.97583008 382.26766968]
[342.88516235 389.25891113]
[334.59979248 396.01831055]
[326.12643433 402.54049683]
[317.47183228 408.82019043]
[308.64294434 414.85238647]
[299.64685059 420.63226318]
[290.49072266 426.15515137]
[281.18197632 431.41665649]
[271.72796631 436.41256714]
[262.13638306 441.13882446]
[252.41481018 445.59170532]
[242.57110596 449.76760864]
[232.61314392 453.66320801]
[222.54888916 457.27536011]
[212.38642883 460.60116577]
[202.13389587 463.63796997]
[191.79949951 466.38336182]
[181.39154053 468.83508301]
[170.91835022 470.99124146]
[160.38832092 472.85006714]
[149.80989075 474.41006470]
[139.19154358 475.66998291]
[128.54179382 476.62884521]
[117.86915588 477.28582764]
[107.18220520 477.64047241]
[96.48949432 477.69244385]
[85.79959869 477.44174194]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 36]
[27 35]
[28 34]
[67 76]
[68 75]
[69 74]
[91 108]
[92 107]
[93 106]
[111 123]
[112 122]
[113 121]
] def

init

% Start Annotations
26 36 0.32 1 colorpair
28 34 0.0 1 colorpair
67 76 0.0 1 colorpair
69 74 0.0 1 colorpair
92 107 0.0 1 colorpair
93 106 0.32 1 colorpair
111 123 0.32 1 colorpair
112 122 0.0 1 colorpair
113 121 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
26 cmark
36 cmark
27 35 4 gmark
35 cmark
68 75 5 gmark
68 cmark
75 cmark
91 108 4 gmark
91 cmark
108 cmark
93 cmark
106 cmark
111 cmark
123 cmark

% End Annotations
showpage
end
%%EOF
