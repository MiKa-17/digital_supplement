%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:27:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_GUAAGAGGCUAACCUUAUGGUGUCUAGACAUAGAG_AG_GCCUCAU____GUUAAUG_U_____________________AAAGUAA_____UAUGGGGCUUUUCUCUGUCUGCCUUUCGAC_AUGA_UA_________________CCUGAGGCAGAAAGCCUCAAGCACCCG__________\
) } def
/len { sequence length } bind def

/coor [
[163.79536438 262.99795532]
[160.12982178 247.07046509]
[158.19734192 230.84053040]
[158.02046204 214.49617004]
[159.60139465 198.22674561]
[162.92198181 182.22076416]
[167.94389343 166.66369629]
[174.60911560 151.73585510]
[161.61874390 144.23585510]
[148.62835693 136.73585510]
[143.12927246 143.05932617]
[136.81472778 148.56866455]
[129.80410767 153.15971375]
[122.22998810 156.74563599]
[114.23554993 159.25866699]
[105.97195435 160.65126038]
[97.59544373 160.89710999]
[89.26440430 159.99156189]
[81.13633728 157.95172119]
[73.36493683 154.81617737]
[66.09713745 150.64421082]
[59.47034454 145.51467896]
[53.60985947 139.52461243]
[48.62648773 132.78721619]
[44.61445236 125.42992401]
[41.64960861 117.59180450]
[39.78801727 109.42108154]
[39.06486893 101.07222748]
[39.49384308 92.70309448]
[41.06682587 84.47193146]
[43.75407791 76.53436279]
[47.50479126 69.04046631]
[52.24804306 62.13193512]
[41.73139572 51.43613815]
[31.21474457 40.74034119]
[19.17907906 44.20954514]
[6.88318014 42.23511124]
[-3.34190631 35.25366592]
[-9.58428764 24.64510727]
[-10.70860577 12.46023941]
[-6.56208658 1.02440774]
[-16.71149635 -10.02047729]
[-26.86090469 -21.06536293]
[-37.01031494 -32.11024857]
[-47.15972137 -43.15513229]
[-57.30913162 -54.20001984]
[-67.45854187 -65.24490356]
[-79.72697449 -56.57808304]
[-93.00300598 -49.55131912]
[-107.06861877 -44.27999496]
[-121.69284821 -40.85067368]
[-136.63554382 -39.31966400]
[-151.65135193 -39.71210861]
[-166.49368286 -42.02156830]
[-180.91880798 -46.21010971]
[-194.68986511 -52.20896149]
[-207.58073425 -59.91961288]
[-219.37969971 -69.21545410]
[-229.89303589 -79.94382477]
[-238.94810486 -91.92857361]
[-246.39620972 -104.97288513]
[-252.11503601 -118.86256409]
[-256.01068115 -133.36953735]
[-258.01919556 -148.25558472]
[-258.10757446 -163.27624512]
[-256.27438354 -178.18489075]
[-252.54969788 -192.73669434]
[-246.99468994 -206.69271851]
[-239.70060730 -219.82376099]
[-230.78718567 -231.91423035]
[-220.40081787 -242.76557922]
[-208.71205139 -252.19961548]
[-195.91281128 -260.06140137]
[-182.21328735 -266.22189331]
[-167.83845520 -270.57989502]
[-153.02432251 -273.06384277]
[-138.01417542 -273.63293457]
[-123.05449677 -272.27786255]
[-108.39092255 -269.02087402]
[-94.26425934 -263.91543579]
[-80.90646362 -257.04534912]
[-68.53689575 -248.52349854]
[-57.35866928 -238.48977661]
[-47.55533981 -227.10896301]
[-39.28788757 -214.56793213]
[-32.69207382 -201.07261658]
[-27.87620544 -186.84461975]
[-24.91936493 -172.11758423]
[-23.87010384 -157.13334656]
[-24.74565506 -142.13795471]
[-27.53163910 -127.37765503]
[-32.18230820 -113.09481049]
[-38.62129593 -99.52397156]
[-46.74286652 -86.88796997]
[-56.41365433 -75.39431763]
[-46.26424789 -64.34942627]
[-36.11483765 -53.30454254]
[-25.96542931 -42.25965881]
[-15.81601906 -31.21477318]
[-5.66661024 -20.16988754]
[4.48279905 -9.12500095]
[21.89455986 -11.97007942]
[37.67512131 -3.73592591]
[45.43666840 12.45662117]
[41.91054153 30.22369003]
[52.42718887 40.91948700]
[62.94384003 51.61528397]
[83.23758698 41.40596390]
[105.86033630 39.33785248]
[127.66884613 45.69829941]
[145.63296509 59.60356522]
[157.25672913 79.12162018]
[160.92509460 101.54056549]
[156.12835693 123.74546814]
[169.11874390 131.24546814]
[182.10911560 138.74546814]
[190.10539246 127.51583099]
[199.08660889 117.05783844]
[208.97872925 107.45760345]
[219.70019531 98.79414368]
[231.16261292 91.13876343]
[243.27153015 84.55445862]
[255.92713928 79.09539795]
[269.02511597 74.80647278]
[282.45758057 71.72293091]
[296.11383057 69.87008667]
[309.88131714 69.26313019]
[323.64666748 69.90696716]
[337.29647827 71.79620361]
[350.71826172 74.91519165]
[363.80154419 79.23815918]
[376.43847656 84.72940063]
[388.52508545 91.34359741]
[399.96176147 99.02619171]
[410.65435791 107.71380615]
[420.51486206 117.33482361]
[429.46209717 127.80989838]
[437.42242432 139.05270386]
[444.33029175 150.97053528]
[450.12890625 163.46519470]
[454.77056885 176.43370056]
[458.21713257 189.76919556]
[460.44027710 203.36178589]
[461.42175293 217.09947205]
[461.15359497 230.86909485]
[459.63809204 244.55720520]
[456.88778687 258.05105591]
[452.92547607 271.23947144]
[447.78384399 284.01385498]
[441.50534058 296.26901245]
[434.14175415 307.90399170]
[446.00338745 317.08557129]
[457.86502075 326.26715088]
[469.72665405 335.44876099]
[481.58828735 344.63034058]
[493.44995117 353.81192017]
[509.48205566 353.21957397]
[519.83135986 365.47811890]
[516.55871582 381.18383789]
[502.17468262 388.28863525]
[487.71340942 381.34234619]
[484.26834106 365.67355347]
[472.40670776 356.49197388]
[460.54507446 347.31039429]
[448.68344116 338.12878418]
[436.82180786 328.94720459]
[424.96017456 319.76562500]
[413.69174194 331.58343506]
[401.21783447 342.12213135]
[387.68283081 351.25946045]
[373.24353027 358.88946533]
[358.06707764 364.92358398]
[342.32928467 369.29174805]
[326.21243286 371.94320679]
[309.90322876 372.84710693]
[293.59060669 371.99276733]
[277.46359253 369.38998413]
[261.70901489 365.06872559]
[246.50947571 359.07888794]
[232.04113770 351.48977661]
[218.47167969 342.38909912]
[205.95841980 331.88223267]
[194.64642334 320.09075928]
[184.66687012 307.15115356]
[176.13551331 293.21325684]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 116]
[9 115]
[10 114]
[33 107]
[34 106]
[35 105]
[41 101]
[42 100]
[43 99]
[44 98]
[45 97]
[46 96]
[47 95]
[151 167]
[152 166]
[153 165]
[154 164]
[155 163]
[156 162]
] def

init

% Start Annotations
8 116 0.0 1 colorpair
9 115 0.0 1 colorpair
10 114 0.0 1 colorpair
35 105 0.32 0.2 colorpair
41 101 0.0 1 colorpair
42 100 0.0 1 colorpair
43 99 0.0 1 colorpair
44 98 0.0 1 colorpair
45 97 0.0 1 colorpair
46 96 0.16 1 colorpair
47 95 0.32 1 colorpair
151 167 0.0 0.6 colorpair
152 166 0.0 1 colorpair
153 165 0.0 1 colorpair
154 164 0.0 1 colorpair
155 163 0.16 0.6 colorpair
156 162 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
33 107 4 gmark
33 cmark
34 106 3 gmark
34 cmark
106 cmark
35 105 2 gmark
35 cmark
105 cmark
46 cmark
96 cmark
47 cmark
95 cmark
151 167 1 gmark
155 163 1 gmark
155 cmark
163 cmark

% End Annotations
showpage
end
%%EOF
