%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:27:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__CCCUU_G__UGGCA_GUCAUAGUGCUGUGUUUCACGGUGCUGGUAUUCACAUUGAUGAUAGGAGACUCGCUGUGUGAGUUGCGUAUCAAAGAAGGUAAUAUGGAGUUUACGGCAUUUCUCGCUUACGAAUCG___AAGAA__GUAGCAA__UCGGGCGG_GGGGUCAU_CCCCGCCUUUCC__AAGG_UGUUGGUUAGU_CUGACUGCACCCA__CUU_UU_____________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50414276 92.11376953]
[62.52319717 91.34155273]
[47.56710434 90.18386841]
[32.64577866 88.64147949]
[17.76910973 86.71540833]
[2.94696832 84.40692902]
[-11.81082153 81.71758270]
[-26.49447250 78.64913940]
[-41.09424973 75.20364380]
[-55.60047531 71.38336945]
[-70.00352478 67.19086456]
[-84.29385376 62.62889862]
[-98.46197510 57.70050049]
[-112.49851227 52.40893173]
[-126.39414978 46.75770950]
[-140.13966370 40.75057602]
[-153.72595215 34.39151764]
[-167.14401245 27.68474579]
[-180.38493347 20.63471031]
[-193.43994141 13.24608803]
[-206.30038452 5.52377510]
[-218.95771790 -2.52710724]
[-231.40356445 -10.90122032]
[-243.62968445 -19.59301186]
[-255.62792969 -28.59671974]
[-267.39038086 -37.90637207]
[-278.90924072 -47.51579666]
[-290.17684937 -57.41862106]
[-301.18576050 -67.60827637]
[-311.92861938 -78.07801819]
[-322.39837646 -88.82089233]
[-332.58804321 -99.82977295]
[-342.49090576 -111.09737396]
[-352.10034180 -122.61621857]
[-361.41000366 -134.37866211]
[-370.41372681 -146.37690735]
[-379.10552979 -158.60301208]
[-387.47964478 -171.04885864]
[-395.53054810 -183.70617676]
[-403.25286865 -196.56660461]
[-410.64151001 -209.62161255]
[-417.69155884 -222.86251831]
[-424.39834595 -236.28057861]
[-430.75741577 -249.86685181]
[-436.76455688 -263.61236572]
[-442.41580200 -277.50799561]
[-447.70736694 -291.54452515]
[-452.63580322 -305.71264648]
[-457.19778442 -320.00296021]
[-461.39028931 -334.40600586]
[-465.21057129 -348.91223145]
[-468.65609741 -363.51202393]
[-471.72454834 -378.19564819]
[-474.41390991 -392.95343018]
[-476.72241211 -407.77557373]
[-478.64849854 -422.65225220]
[-480.19091797 -437.57357788]
[-481.34860229 -452.52966309]
[-482.12084961 -467.51062012]
[-482.50708008 -482.50646973]
[-482.50708008 -497.50729370]
[-482.12084961 -512.50317383]
[-481.34863281 -527.48413086]
[-480.19094849 -542.44018555]
[-478.64855957 -557.36151123]
[-476.72247314 -572.23815918]
[-474.41400146 -587.06030273]
[-471.72463989 -601.81811523]
[-468.65618896 -616.50177002]
[-465.21069336 -631.10156250]
[-461.39041138 -645.60778809]
[-457.19790649 -660.01080322]
[-452.63592529 -674.30114746]
[-447.70751953 -688.46923828]
[-442.41595459 -702.50579834]
[-436.76470947 -716.40142822]
[-430.75756836 -730.14697266]
[-424.39852905 -743.73321533]
[-417.69174194 -757.15130615]
[-410.64169312 -770.39221191]
[-403.25308228 -783.44720459]
[-395.53076172 -796.30761719]
[-387.47985840 -808.96496582]
[-379.10574341 -821.41082764]
[-370.41397095 -833.63696289]
[-361.41024780 -845.63519287]
[-352.10058594 -857.39764404]
[-342.49114990 -868.91650391]
[-332.58831787 -880.18408203]
[-322.39868164 -891.19299316]
[-311.92892456 -901.93585205]
[-301.18606567 -912.40563965]
[-290.17715454 -922.59527588]
[-278.90954590 -932.49810791]
[-267.39071655 -942.10754395]
[-255.62826538 -951.41723633]
[-243.63002014 -960.42089844]
[-231.40391541 -969.11273193]
[-218.95806885 -977.48687744]
[-206.30073547 -985.53771973]
[-193.44030762 -993.26007080]
[-180.38529968 -1000.64868164]
[-167.14437866 -1007.69873047]
[-153.72633362 -1014.40551758]
[-140.14004517 -1020.76458740]
[-126.39453125 -1026.77172852]
[-112.49890137 -1032.42297363]
[-98.46237183 -1037.71459961]
[-84.29424286 -1042.64294434]
[-70.00392151 -1047.20495605]
[-55.60087585 -1051.39746094]
[-41.09465408 -1055.21777344]
[-26.49487877 -1058.66320801]
[-11.81122971 -1061.73168945]
[2.94655800 -1064.42102051]
[17.76869774 -1066.72949219]
[32.64536285 -1068.65563965]
[47.56668854 -1070.19799805]
[62.52278137 -1071.35571289]
[77.50372314 -1072.12792969]
[92.49958038 -1072.51416016]
[107.50041962 -1072.51416016]
[122.49627686 -1072.12792969]
[137.47721863 -1071.35571289]
[152.43330383 -1070.19799805]
[167.35462952 -1068.65563965]
[182.23130798 -1066.72949219]
[197.05343628 -1064.42102051]
[211.81123352 -1061.73168945]
[226.49487305 -1058.66320801]
[241.09465027 -1055.21777344]
[255.60087585 -1051.39746094]
[270.00393677 -1047.20495605]
[284.29425049 -1042.64294434]
[298.46237183 -1037.71459961]
[312.49890137 -1032.42297363]
[326.39453125 -1026.77172852]
[340.14004517 -1020.76458740]
[353.72631836 -1014.40551758]
[367.14437866 -1007.69873047]
[380.38528442 -1000.64868164]
[393.44030762 -993.26007080]
[406.30072021 -985.53771973]
[418.95806885 -977.48687744]
[431.40390015 -969.11273193]
[443.63000488 -960.42089844]
[455.62826538 -951.41723633]
[467.39071655 -942.10754395]
[478.90954590 -932.49810791]
[490.17715454 -922.59527588]
[501.18606567 -912.40563965]
[511.92892456 -901.93585205]
[522.39868164 -891.19299316]
[532.58831787 -880.18408203]
[542.49114990 -868.91650391]
[552.10058594 -857.39764404]
[561.41021729 -845.63519287]
[570.41394043 -833.63696289]
[579.10577393 -821.41082764]
[587.47985840 -808.96496582]
[595.53076172 -796.30761719]
[603.25305176 -783.44720459]
[610.64172363 -770.39221191]
[617.69171143 -757.15130615]
[624.39849854 -743.73321533]
[630.75756836 -730.14697266]
[636.76470947 -716.40142822]
[642.41595459 -702.50579834]
[647.70751953 -688.46923828]
[652.63592529 -674.30114746]
[657.19787598 -660.01080322]
[661.39038086 -645.60778809]
[665.21069336 -631.10156250]
[668.65618896 -616.50177002]
[671.72460938 -601.81811523]
[674.41400146 -587.06030273]
[676.72247314 -572.23815918]
[678.64855957 -557.36151123]
[680.19091797 -542.44018555]
[681.34863281 -527.48413086]
[682.12084961 -512.50317383]
[682.50708008 -497.50729370]
[682.50708008 -482.50646973]
[682.12084961 -467.51062012]
[681.34863281 -452.52966309]
[680.19091797 -437.57357788]
[678.64849854 -422.65225220]
[676.72241211 -407.77557373]
[674.41394043 -392.95343018]
[671.72454834 -378.19564819]
[668.65606689 -363.51202393]
[665.21057129 -348.91223145]
[661.39031982 -334.40600586]
[657.19775391 -320.00296021]
[652.63580322 -305.71264648]
[647.70739746 -291.54452515]
[642.41577148 -277.50799561]
[636.76458740 -263.61236572]
[630.75738525 -249.86685181]
[624.39831543 -236.28057861]
[617.69152832 -222.86251831]
[610.64147949 -209.62161255]
[603.25286865 -196.56660461]
[595.53051758 -183.70617676]
[587.47961426 -171.04885864]
[579.10552979 -158.60301208]
[570.41369629 -146.37690735]
[561.40997314 -134.37866211]
[552.10034180 -122.61621857]
[542.49090576 -111.09737396]
[532.58807373 -99.82977295]
[522.39837646 -88.82089233]
[511.92861938 -78.07801819]
[501.18576050 -67.60827637]
[490.17684937 -57.41862106]
[478.90924072 -47.51579666]
[467.39038086 -37.90637207]
[455.62792969 -28.59671974]
[443.62966919 -19.59301186]
[431.40356445 -10.90122032]
[418.95773315 -2.52710724]
[406.30038452 5.52377510]
[393.43994141 13.24608803]
[380.38494873 20.63471031]
[367.14401245 27.68474579]
[353.72595215 34.39151764]
[340.13967896 40.75057602]
[326.39413452 46.75770950]
[312.49850464 52.40893173]
[298.46197510 57.70050049]
[284.29385376 62.62889862]
[270.00350952 67.19086456]
[255.60047913 71.38336945]
[241.09425354 75.20364380]
[226.49447632 78.64913940]
[211.81082153 81.71758270]
[197.05302429 84.40692902]
[182.23089600 86.71540833]
[167.35421753 88.64147949]
[152.43289185 90.18386841]
[137.47680664 91.34155273]
[122.49585724 92.11376953]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
