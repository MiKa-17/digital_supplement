%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:26:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUUGUUUGGAUCA___UAGUGCUGUGUUUCACGCUACUGGUAUUCACCUGGAUGGUGCGAGAUUCGCUGUGUGAAUUGCGUAUCAGACAGGGUAAUAUUGAGCUGGCGGCAUUUCUAGCUUACGAAUCGAAGAAGUAG_____CC_AUC_____UGGCGGGGAGAAAUCCCCG___CCUU__UCUGAUGGUGAGAUGCAUUCCUAAU_GCACCCUUUUAUAA____U_______\
) } def
/len { sequence length } bind def

/coor [
[97.45975494 575.43072510]
[83.63676453 575.15588379]
[69.82760620 574.47918701]
[56.04396820 573.40124512]
[42.29750061 571.92297363]
[28.59982681 570.04559326]
[14.96253395 567.77075195]
[1.39715183 565.10034180]
[-12.08484650 562.03662109]
[-25.47206116 558.58215332]
[-38.75317001 554.73992920]
[-51.91694260 550.51312256]
[-64.95224762 545.90539551]
[-77.84806061 540.92053223]
[-90.59348297 535.56280518]
[-103.17772675 529.83679199]
[-115.59014893 523.74725342]
[-127.82026672 517.29937744]
[-139.85772705 510.49862671]
[-151.69233704 503.35073853]
[-163.31411743 495.86175537]
[-174.71322632 488.03799438]
[-185.88003540 479.88610840]
[-196.80506897 471.41296387]
[-207.47912598 462.62576294]
[-217.89315796 453.53186035]
[-228.03837585 444.13903809]
[-237.90617371 434.45516968]
[-247.48823547 424.48849487]
[-256.77642822 414.24740601]
[-265.76293945 403.74057007]
[-274.44012451 392.97686768]
[-282.80065918 381.96542358]
[-290.83749390 370.71554565]
[-298.54382324 359.23672485]
[-305.91311646 347.53866577]
[-312.93914795 335.63128662]
[-319.61599731 323.52465820]
[-325.93798828 311.22900391]
[-331.89978027 298.75473022]
[-337.49633789 286.11236572]
[-342.72293091 273.31262207]
[-347.57513428 260.36633301]
[-352.04882812 247.28440857]
[-356.14028931 234.07794189]
[-359.84597778 220.75808716]
[-363.16284180 207.33612061]
[-366.08801270 193.82337952]
[-368.61901855 180.23129272]
[-370.75375366 166.57136536]
[-372.49041748 152.85514832]
[-373.82748413 139.09422302]
[-374.76388550 125.30025482]
[-375.29879761 111.48487854]
[-375.43176270 97.65979004]
[-375.16271973 83.83668518]
[-374.49182129 70.02724457]
[-373.41967773 56.24315262]
[-371.94717407 42.49606323]
[-370.07559204 28.79760170]
[-367.80648804 15.15935230]
[-365.14178467 1.59284770]
[-362.08374023 -11.89043903]
[-358.63491821 -25.27910614]
[-354.79827881 -38.56183243]
[-369.07635498 -43.15924835]
[-383.35443115 -47.75666809]
[-397.63253784 -52.35408401]
[-411.91061401 -56.95150375]
[-428.84060669 -56.05076599]
[-434.39285278 -72.06979370]
[-420.53686523 -81.83953857]
[-407.31320190 -71.22959137]
[-393.03512573 -66.63217163]
[-378.75701904 -62.03475189]
[-364.47894287 -57.43733597]
[-350.20086670 -52.83991623]
[-344.54385376 -68.58713531]
[-338.33621216 -84.12553406]
[-331.58566284 -99.43587494]
[-324.30053711 -114.49919891]
[-316.48986816 -129.29682922]
[-308.16333008 -143.81047058]
[-299.33123779 -158.02210999]
[-290.00454712 -171.91415405]
[-280.19476318 -185.46942139]
[-269.91409302 -198.67109680]
[-259.17523193 -211.50282288]
[-247.99148560 -223.94873047]
[-236.37670898 -235.99339294]
[-224.34530640 -247.62188721]
[-211.91215515 -258.81979370]
[-199.09268188 -269.57330322]
[-185.90274048 -279.86901855]
[-172.35867310 -289.69424438]
[-158.47726440 -299.03677368]
[-144.27569580 -307.88507080]
[-129.77157593 -316.22814941]
[-114.98284912 -324.05569458]
[-99.92784882 -331.35797119]
[-84.62521362 -338.12597656]
[-69.09390259 -344.35131836]
[-53.35314178 -350.02630615]
[-37.42244339 -355.14385986]
[-21.32152939 -359.69766235]
[-5.07034540 -363.68206787]
[11.31097984 -367.09219360]
[27.80215645 -369.92373657]
[44.38275909 -372.17324829]
[61.03224564 -373.83792114]
[60.03879929 -388.80496216]
[59.04535294 -403.77203369]
[46.32083130 -412.86163330]
[42.46603394 -428.01663208]
[49.30107880 -442.08135986]
[63.59866714 -448.41482544]
[78.60791016 -444.02661133]
[87.24191284 -430.98867798]
[85.42395020 -415.45712280]
[74.01242065 -404.76550293]
[75.00586700 -389.79843140]
[75.99931335 -374.83135986]
[92.67703247 -375.38113403]
[109.36377716 -375.34530640]
[126.03897858 -374.72393799]
[142.68211365 -373.51779175]
[159.27265930 -371.72830200]
[175.79020691 -369.35775757]
[192.21437073 -366.40899658]
[208.52496338 -362.88571167]
[224.70184326 -358.79220581]
[240.72512817 -354.13354492]
[256.57507324 -348.91546631]
[272.23211670 -343.14437866]
[287.67700195 -336.82742310]
[302.89068604 -329.97235107]
[317.85446167 -322.58761597]
[332.54986572 -314.68231201]
[346.95880127 -306.26617432]
[361.06350708 -297.34957886]
[374.84664917 -287.94351196]
[388.29119873 -278.05957031]
[401.38061523 -267.70989990]
[414.09878540 -256.90728760]
[426.43002319 -245.66499329]
[438.35916138 -233.99690247]
[449.87149048 -221.91737366]
[460.95281982 -209.44128418]
[471.58950806 -196.58401489]
[481.76846313 -183.36140442]
[491.47714233 -169.78973389]
[500.70358276 -155.88571167]
[509.43640137 -141.66648865]
[517.66485596 -127.14955902]
[525.37878418 -112.35282135]
[532.56878662 -97.29449463]
[539.22583008 -81.99313354]
[545.34185791 -66.46758270]
[550.90930176 -50.73696518]
[555.92132568 -34.82066345]
[570.37091064 -38.84680176]
[584.82043457 -42.87293625]
[599.27001953 -46.89907455]
[613.71960449 -50.92520905]
[621.26605225 -64.81143188]
[636.44470215 -69.21417236]
[650.25036621 -61.52135849]
[654.49237061 -46.29700851]
[646.65399170 -32.57345200]
[631.38568115 -28.49263763]
[617.74572754 -36.47563553]
[603.29614258 -32.44949722]
[588.84661865 -28.42336082]
[574.39703369 -24.39722443]
[559.94744873 -20.37108803]
[563.25299072 -6.94633341]
[566.16680908 6.56886101]
[568.68640137 20.16306496]
[570.80963135 33.82478333]
[572.53472900 47.54246140]
[573.86022949 61.30450058]
[574.78503418 75.09926605]
[575.30828857 88.91508484]
[575.42962646 102.74027252]
[575.14892578 116.56314850]
[574.46643066 130.37202454]
[573.38269043 144.15521240]
[571.89862061 157.90104675]
[570.01550293 171.59793091]
[567.73492432 185.23426819]
[565.05883789 198.79852295]
[561.98944092 212.27923584]
[558.52935791 225.66499329]
[554.68151855 238.94448853]
[550.44915771 252.10647583]
[545.83593750 265.13983154]
[540.84564209 278.03356934]
[535.48260498 290.77673340]
[529.75128174 303.35855103]
[523.65649414 315.76843262]
[517.20349121 327.99581909]
[510.39767456 340.03042603]
[503.24481201 351.86203003]
[495.75091553 363.48065186]
[487.92239380 374.87646484]
[479.76580811 386.03982544]
[471.28805542 396.96133423]
[462.49633789 407.63168335]
[453.39810181 418.04187012]
[444.00097656 428.18313599]
[434.31298828 438.04687500]
[424.34225464 447.62472534]
[414.09725952 456.90863037]
[403.58663940 465.89068604]
[392.81930542 474.56335449]
[381.80432129 482.91928101]
[370.55105591 490.95135498]
[359.06900024 498.65286255]
[347.36785889 506.01724243]
[335.45755005 513.03826904]
[323.34808350 519.71002197]
[311.04977417 526.02679443]
[298.57299805 531.98333740]
[285.92828369 537.57458496]
[273.12634277 542.79577637]
[260.17797852 547.64257812]
[247.09419250 552.11077881]
[233.88600159 556.19665527]
[220.56459045 559.89672852]
[207.14123535 563.20794678]
[193.62727356 566.12744141]
[180.03411865 568.65270996]
[166.37330627 570.78173828]
[152.65634155 572.51257324]
[138.89486694 573.84387207]
[125.10049438 574.77447510]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[65 77]
[66 76]
[67 75]
[68 74]
[69 73]
[110 122]
[111 121]
[112 120]
[160 175]
[161 174]
[162 173]
[163 172]
[164 171]
] def

init

% Start Annotations
65 77 0.16 0.2 colorpair
66 76 0.0 0.6 colorpair
67 75 0.0 0.6 colorpair
69 73 0.16 1 colorpair
110 122 0.32 0.6 colorpair
111 121 0.0 0.6 colorpair
112 120 0.16 1 colorpair
160 175 0.16 0.6 colorpair
161 174 0.0 0.6 colorpair
162 173 0.0 0.6 colorpair
163 172 0.16 0.2 colorpair
164 171 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
65 77 2 gmark
65 cmark
77 cmark
66 76 1 gmark
67 75 1 gmark
68 74 3 gmark
68 cmark
74 cmark
69 cmark
110 122 1 gmark
110 cmark
122 cmark
111 121 1 gmark
112 cmark
160 175 1 gmark
160 cmark
175 cmark
161 174 1 gmark
162 173 1 gmark
163 172 2 gmark
172 cmark
164 171 1 gmark
171 cmark

% End Annotations
showpage
end
%%EOF
