%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:26:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUUGUGUGGAUCAU__UAGUGCUGUGUCUCACGCUACUGAUAUUCACGUUGAUGGUGCGCGACUCGCUCUGCGAAAUGCGUAUCAGGGAGGGUAAUAUGGAGGUGGCGGCUUUUAUGGCUUACGAAUCCAAGAAGUAAG__AACCUG__AGGCGGGGAGAAAUCCCCGCCUU__UCGGGCUGUGGGGUUCAGUUCUCAU_GCACCCACUUUUAA____AAAG_________\
) } def
/len { sequence length } bind def

/coor [
[109.88906097 556.74658203]
[96.24375153 556.83819580]
[82.60179138 556.52221680]
[68.97535706 555.79895020]
[55.37659454 554.66912842]
[41.81764603 553.13360596]
[28.31060600 551.19384766]
[14.86752033 548.85156250]
[1.50038552 546.10882568]
[-11.77887440 542.96807861]
[-24.95841217 539.43218994]
[-38.02647018 535.50421143]
[-50.97138596 531.18774414]
[-63.78162003 526.48657227]
[-76.44573212 521.40496826]
[-88.95243835 515.94738770]
[-101.29056549 510.11871338]
[-113.44911194 503.92413330]
[-125.41723633 497.36923218]
[-137.18426514 490.45980835]
[-148.73968506 483.20205688]
[-160.07319641 475.60241699]
[-171.17468262 467.66769409]
[-182.03424072 459.40496826]
[-192.64219666 450.82159424]
[-202.98905945 441.92523193]
[-213.06562805 432.72384644]
[-222.86289978 423.22561646]
[-232.37211609 413.43899536]
[-241.58482361 403.37277222]
[-250.49279785 393.03591919]
[-259.08807373 382.43759155]
[-267.36297607 371.58731079]
[-275.31018066 360.49475098]
[-282.92251587 349.16976929]
[-290.19326782 337.62252808]
[-297.11587524 325.86325073]
[-303.68423462 313.90249634]
[-309.89242554 301.75091553]
[-315.73495483 289.41934204]
[-321.20657349 276.91876221]
[-326.30242920 264.26037598]
[-331.01797485 251.45542908]
[-335.34896851 238.51536560]
[-339.29159546 225.45172119]
[-342.84228516 212.27616882]
[-345.99792480 199.00044250]
[-348.75567627 185.63639832]
[-351.11303711 172.19593811]
[-353.06799316 158.69108582]
[-354.61871338 145.13388062]
[-355.76385498 131.53639221]
[-356.50241089 117.91077423]
[-356.83367920 104.26918030]
[-356.75741577 90.62377930]
[-356.27362061 76.98674011]
[-355.38281250 63.37023163]
[-354.08572388 49.78639984]
[-352.38351440 36.24736786]
[-350.27770996 22.76521301]
[-347.77023315 9.35196209]
[-344.86325073 -3.98041868]
[-341.55938721 -17.22003365]
[-337.86160278 -30.35507393]
[-333.77319336 -43.37381744]
[-347.93618774 -48.31442642]
[-362.09918213 -53.25503159]
[-376.26217651 -58.19563675]
[-390.42517090 -63.13624191]
[-407.37197876 -62.64428711]
[-412.53607178 -78.79261780]
[-398.44836426 -88.22518158]
[-385.48455811 -77.29924011]
[-371.32156372 -72.35863495]
[-357.15856934 -67.41802216]
[-342.99557495 -62.47742081]
[-328.83258057 -57.53681183]
[-322.95025635 -72.70880127]
[-316.53131104 -87.66167450]
[-309.58392334 -102.37647247]
[-302.11694336 -116.83451843]
[-294.13977051 -131.01747131]
[-285.66259766 -144.90733337]
[-276.69610596 -158.48649597]
[-267.25173950 -171.73773193]
[-257.34146118 -184.64421082]
[-246.97781372 -197.18957520]
[-236.17396545 -209.35789490]
[-224.94361877 -221.13374329]
[-213.30104065 -232.50218201]
[-201.26097107 -243.44877625]
[-188.83869934 -253.95965576]
[-176.05000305 -264.02148438]
[-162.91107178 -273.62145996]
[-149.43859863 -282.74746704]
[-135.64967346 -291.38787842]
[-121.56179047 -299.53173828]
[-107.19281006 -307.16873169]
[-92.56097412 -314.28915405]
[-77.68483734 -320.88400269]
[-62.58327866 -326.94485474]
[-47.27545547 -332.46408081]
[-31.78078842 -337.43463135]
[-16.11893272 -341.85025024]
[-0.30976182 -345.70526123]
[15.62666988 -348.99484253]
[31.67014313 -351.71481323]
[47.80030441 -353.86169434]
[63.99669266 -355.43276978]
[80.23875427 -356.42605591]
[79.83603668 -371.42062378]
[79.43331146 -386.41522217]
[67.07696533 -395.99929810]
[63.82252502 -411.29449463]
[71.20664978 -425.07885742]
[85.74276733 -430.84384155]
[100.56738281 -425.86743164]
[108.68075562 -412.49926758]
[106.25199890 -397.05145264]
[94.42790985 -386.81796265]
[94.83062744 -371.82336426]
[95.23334503 -356.82876587]
[113.14817047 -356.66439819]
[131.04277039 -355.79776001]
[148.88963318 -354.23016357]
[166.66131592 -351.96405029]
[184.33047485 -349.00289917]
[201.86994934 -345.35125732]
[219.25277710 -341.01473999]
[236.45220947 -336.00003052]
[253.44180298 -330.31481934]
[270.19543457 -323.96786499]
[286.68731689 -316.96893311]
[302.89212036 -309.32876587]
[318.78491211 -301.05911255]
[334.34124756 -292.17269897]
[349.53720093 -282.68319702]
[364.34942627 -272.60519409]
[378.75509644 -261.95419312]
[392.73211670 -250.74655151]
[406.25897217 -238.99954224]
[419.31481934 -226.73120117]
[431.87963867 -213.96041870]
[443.93408203 -200.70680237]
[455.45962524 -186.99075317]
[466.43850708 -172.83337402]
[476.85391235 -158.25640869]
[486.68975830 -143.28230286]
[495.93093872 -127.93406677]
[504.56323242 -112.23530579]
[512.57342529 -96.21016693]
[519.94909668 -79.88328552]
[526.67895508 -63.27978134]
[540.77435303 -68.41007996]
[551.09594727 -80.40070343]
[565.70202637 -77.48300171]
[576.02362061 -89.47362518]
[590.62963867 -86.55592346]
[604.72503662 -91.68622589]
[618.82043457 -96.81652832]
[628.94134521 -109.71997070]
[645.13616943 -107.13914490]
[650.74499512 -91.72898102]
[639.99798584 -79.34214020]
[623.95074463 -82.72113800]
[609.85534668 -77.59083557]
[595.75994873 -72.46053314]
[586.44653320 -60.83686829]
[570.83233643 -63.38761520]
[561.51892090 -51.76394653]
[545.90466309 -54.31469345]
[531.80926514 -49.18439102]
[536.07208252 -36.22171021]
[539.94592285 -23.13749695]
[543.42718506 -9.94342899]
[546.51287842 3.34872389]
[549.20025635 16.72710228]
[551.48687744 30.17977333]
[553.37066650 43.69473267]
[554.84997559 57.25992203]
[555.92358398 70.86324310]
[556.59033203 84.49256134]
[556.84985352 98.13571167]
[556.70172119 111.78052521]
[556.14617920 125.41482544]
[555.18365479 139.02645874]
[553.81506348 152.60327148]
[552.04162598 166.13314819]
[549.86492920 179.60403442]
[547.28686523 193.00390625]
[544.30969238 206.32080078]
[540.93621826 219.54283142]
[537.16931152 232.65823364]
[533.01245117 245.65527344]
[528.46923828 258.52236938]
[523.54382324 271.24804688]
[518.24047852 283.82092285]
[512.56402588 296.22982788]
[506.51953125 308.46368408]
[500.11236572 320.51153564]
[493.34823608 332.36267090]
[486.23318481 344.00650024]
[478.77352905 355.43264771]
[470.97598267 366.63092041]
[462.84750366 377.59130859]
[454.39526367 388.30404663]
[445.62689209 398.75958252]
[436.55014038 408.94860840]
[427.17315674 418.86196899]
[417.50430298 428.49087524]
[407.55218506 437.82672119]
[397.32568359 446.86117554]
[386.83392334 455.58621216]
[376.08624268 463.99398804]
[365.09228516 472.07702637]
[353.86181641 479.82812500]
[342.40487671 487.24038696]
[330.73168945 494.30715942]
[318.85263062 501.02215576]
[306.77835083 507.37936401]
[294.51959229 513.37316895]
[282.08728027 518.99816895]
[269.49252319 524.24938965]
[256.74655151 529.12207031]
[243.86076355 533.61193848]
[230.84661865 537.71496582]
[217.71574402 541.42749023]
[204.47984314 544.74621582]
[191.15072632 547.66815186]
[177.74031067 550.19073486]
[164.26052856 552.31164551]
[150.72340393 554.02905273]
[137.14105225 555.34136963]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[65 77]
[66 76]
[67 75]
[68 74]
[69 73]
[110 122]
[111 121]
[112 120]
[153 172]
[154 171]
[156 169]
[158 167]
[159 166]
[160 165]
] def

init

% Start Annotations
66 76 0.0 0.6 colorpair
67 75 0.0 0.6 colorpair
69 73 0.16 1 colorpair
110 122 0.32 0.6 colorpair
111 121 0.0 0.6 colorpair
112 120 0.16 1 colorpair
153 172 0.48 0.2 colorpair
154 171 0.16 0.6 colorpair
156 169 0.0 0.6 colorpair
158 167 0.16 0.6 colorpair
159 166 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
65 77 5 gmark
65 cmark
77 cmark
66 76 1 gmark
67 75 1 gmark
68 74 3 gmark
68 cmark
74 cmark
69 cmark
110 122 1 gmark
110 cmark
122 cmark
111 121 1 gmark
112 cmark
153 172 2 gmark
153 cmark
172 cmark
154 171 1 gmark
171 cmark
156 169 1 gmark
158 167 1 gmark
167 cmark
159 166 1 gmark
166 cmark
160 165 3 gmark
160 cmark
165 cmark

% End Annotations
showpage
end
%%EOF
