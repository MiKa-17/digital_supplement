%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:26:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_GUAAGAGGCUAAUCUUAUGGUGUCUAGGCAUAGAGA___AGCCUCACUUUAAU_____________________UAAAAGUCAGGUGGGGCUUUUCUCUGUCUGCCUCCCG_________________CUGAAUACC_UGAGACAAACAGCCUCAAGCACCCG__________\
) } def
/len { sequence length } bind def

/coor [
[98.39264679 190.72337341]
[88.79824066 179.19309998]
[83.35461426 165.21572876]
[82.62348938 150.23355103]
[86.67887878 135.79562378]
[92.97965240 122.18312073]
[80.92401886 131.10847473]
[68.86839294 140.03381348]
[56.81276703 148.95916748]
[44.75713730 157.88452148]
[32.70151138 166.80986023]
[20.80804253 175.95018005]
[9.08057117 185.30253601]
[-2.64690113 194.65487671]
[-14.37437344 204.00721741]
[-26.10184479 213.35957336]
[-37.82931900 222.71191406]
[-49.55678940 232.06427002]
[-61.28426361 241.41661072]
[-73.01173401 250.76896667]
[-84.73920441 260.12130737]
[-84.94815826 275.75750732]
[-95.19807434 287.56738281]
[-110.64925385 289.97467041]
[-124.00611877 281.84277344]
[-128.96197510 267.01126099]
[-123.17681122 252.48315430]
[-109.38220215 245.11816406]
[-94.09155273 248.39382935]
[-82.36408234 239.04148865]
[-70.63661194 229.68914795]
[-58.90913773 220.33679199]
[-47.18166351 210.98445129]
[-35.45419312 201.63209534]
[-23.72672081 192.27975464]
[-11.99924850 182.92739868]
[-0.27177584 173.57505798]
[11.45569611 164.22271729]
[12.87208366 159.62982178]
[17.20830536 155.89147949]
[23.77616119 154.75424194]
[35.83179092 145.82888794]
[47.88741684 136.90353394]
[59.94304657 127.97819519]
[71.99867249 119.05284119]
[84.05429840 110.12749481]
[85.53293610 95.20055389]
[75.46266937 84.08345795]
[65.39240265 72.96636963]
[55.32213211 61.84927750]
[47.21284485 57.57091522]
[45.17307663 50.44105911]
[35.30399704 39.14498520]
[25.43491745 27.84891319]
[12.17214775 34.99361038]
[-2.34807873 39.00743103]
[-17.39743614 39.68904114]
[-32.22105408 37.00424957]
[-46.07538605 31.08772850]
[-58.26550293 22.23624611]
[-68.17995453 10.89378738]
[-75.32144165 -2.37071157]
[-79.33174133 -16.89191055]
[-80.00970459 -31.94143295]
[-77.32132721 -46.76440048]
[-71.40144348 -60.61729813]
[-62.54700851 -72.80526733]
[-51.20214844 -82.71697235]
[-37.93592072 -89.85524750]
[-23.41374969 -93.86203003]
[-8.36406422 -94.53634644]
[6.45825052 -91.84436798]
[20.30971336 -85.92113495]
[32.49554062 -77.06374359]
[42.40449905 -65.71648407]
[49.53955460 -52.44852829]
[53.54281616 -37.92538834]
[54.21348572 -22.87553787]
[51.51792145 -8.05387592]
[45.59133148 5.79615116]
[36.73098755 17.97983170]
[46.60007095 29.27590370]
[56.46915054 40.57197571]
[66.43922424 51.77901077]
[76.50949097 62.89610291]
[86.57975769 74.01319122]
[96.65002441 85.13028717]
[110.91587067 89.76554108]
[125.59735107 86.69078064]
[140.27882385 83.61601257]
[154.93211365 80.40959930]
[169.55604553 77.07178497]
[184.17996216 73.73397064]
[198.80387878 70.39615631]
[203.41027832 55.81094742]
[214.62461853 45.55739975]
[229.36759949 42.31532669]
[243.65826416 46.85763550]
[253.68901062 57.86898422]
[268.31292725 54.53116989]
[282.93685913 51.19335556]
[297.56076050 47.85554123]
[312.18469238 44.51772690]
[326.80859375 41.17991257]
[341.43252563 37.84209824]
[356.05642700 34.50428391]
[370.68035889 31.16647148]
[385.30429077 27.82865715]
[399.92819214 24.49084282]
[399.41253662 9.45320320]
[401.75238037 -5.41023159]
[406.86309814 -19.56215858]
[414.55996704 -32.49099350]
[424.56472778 -43.72936630]
[436.51574707 -52.87101746]
[449.98098755 -59.58548737]
[464.47366333 -63.63004303]
[479.46990967 -64.85848236]
[494.42761230 -63.22639465]
[508.80606079 -58.79278183]
[522.08544922 -51.71791077]
[533.78582764 -42.25754166]
[543.48413086 -30.75365829]
[550.82977295 -17.62211418]
[555.55731201 -3.33761168]
[557.49578857 11.58347607]
[556.57513428 26.60176086]
[552.82861328 41.17433929]
[546.39166260 54.77442551]
[537.49700928 66.91037750]
[526.46612549 77.14350128]
[513.69781494 85.10385895]
[499.65368652 90.50370789]
[484.84136963 93.14782715]
[469.79629517 92.94065094]
[455.06240845 89.88965607]
[441.17227173 84.10513306]
[428.62802124 75.79620361]
[417.88311768 65.26321411]
[409.32601929 52.88693619]
[403.26602173 39.11476135]
[388.64208984 42.45257568]
[374.01818848 45.79039001]
[359.39425659 49.12820435]
[344.77032471 52.46601868]
[330.14642334 55.80383301]
[315.52249146 59.14164734]
[300.89859009 62.47946167]
[286.27465820 65.81727600]
[271.65075684 69.15509033]
[257.02682495 72.49290466]
[252.76708984 86.76596069]
[241.86245728 97.05892944]
[227.17282104 100.53466034]
[212.62019348 96.16225433]
[202.14169312 85.02007294]
[187.51777649 88.35788727]
[172.89385986 91.69570160]
[158.26992798 95.03351593]
[152.42890930 99.60274506]
[143.35359192 98.29749298]
[128.67211914 101.37226105]
[113.99063110 104.44702148]
[128.34896851 108.78733826]
[143.18748474 110.98236084]
[156.56448364 117.76881409]
[167.09960938 128.44641113]
[173.70576477 141.91336060]
[175.70127869 156.78002930]
[172.88023376 171.51237488]
[165.53372192 184.59016418]
[154.41983032 194.66395569]
[140.68536377 200.69425964]
[125.74755859 202.05879211]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 46]
[7 45]
[8 44]
[9 43]
[10 42]
[11 41]
[12 38]
[13 37]
[14 36]
[15 35]
[16 34]
[17 33]
[18 32]
[19 31]
[20 30]
[21 29]
[47 87]
[48 86]
[49 85]
[50 84]
[52 83]
[53 82]
[54 81]
[88 163]
[89 162]
[90 161]
[91 159]
[92 158]
[93 157]
[94 156]
[99 151]
[100 150]
[101 149]
[102 148]
[103 147]
[104 146]
[105 145]
[106 144]
[107 143]
[108 142]
[109 141]
] def

init

% Start Annotations
6 46 0.0 1 colorpair
7 45 0.0 0.6 colorpair
8 44 0.0 1 colorpair
9 43 0.0 1 colorpair
10 42 0.0 1 colorpair
11 41 0.16 1 colorpair
12 38 0.0 0.2 colorpair
13 37 0.0 0.2 colorpair
14 36 0.16 0.6 colorpair
15 35 0.16 0.2 colorpair
16 34 0.0 0.6 colorpair
17 33 0.0 0.6 colorpair
18 32 0.0 0.6 colorpair
19 31 0.16 1 colorpair
20 30 0.16 1 colorpair
21 29 0.16 0.2 colorpair
47 87 0.16 1 colorpair
48 86 0.32 1 colorpair
49 85 0.32 1 colorpair
50 84 0.0 1 colorpair
52 83 0.16 1 colorpair
53 82 0.0 1 colorpair
54 81 0.16 0.6 colorpair
88 163 0.0 0.6 colorpair
89 162 0.0 1 colorpair
90 161 0.0 1 colorpair
91 159 0.0 1 colorpair
92 158 0.0 1 colorpair
93 157 0.0 1 colorpair
94 156 0.0 1 colorpair
99 151 0.0 1 colorpair
100 150 0.0 1 colorpair
101 149 0.32 1 colorpair
102 148 0.0 1 colorpair
103 147 0.16 0.2 colorpair
104 146 0.0 1 colorpair
105 145 0.0 1 colorpair
106 144 0.16 0.2 colorpair
107 143 0.0 1 colorpair
108 142 0.0 0.6 colorpair
109 141 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
7 45 1 gmark
41 cmark
12 38 2 gmark
13 37 2 gmark
14 36 1 gmark
14 cmark
15 35 2 gmark
15 cmark
35 cmark
16 34 1 gmark
17 33 1 gmark
18 32 1 gmark
19 cmark
31 cmark
20 cmark
30 cmark
21 29 2 gmark
29 cmark
47 cmark
87 cmark
48 cmark
86 cmark
49 cmark
85 cmark
52 cmark
83 cmark
54 81 1 gmark
81 cmark
88 163 1 gmark
101 cmark
149 cmark
103 147 2 gmark
103 cmark
147 cmark
106 144 2 gmark
106 cmark
144 cmark
108 142 1 gmark
109 cmark

% End Annotations
showpage
end
%%EOF
