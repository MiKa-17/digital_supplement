%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:17:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAUGCCGCGAAAAUUCGCGUUGUCCAGUAAAAUUGUGAUUUGUAUCACAAUUUUACUUUUCACCUUGCUGAUACGUGAUUCACUGUGUGAGUUACGUAUCAAACAAGGUAACACGGAGGUAGCGGUGUUCCUGAACUACGAACUUAAGAGC\
) } def
/len { sequence length } bind def

/coor [
[197.11849976 378.36242676]
[209.04478455 369.13125610]
[203.09317017 355.36248779]
[197.14157104 341.59375000]
[191.18997192 327.82501221]
[185.23837280 314.05624390]
[179.28677368 300.28750610]
[173.33517456 286.51876831]
[167.38357544 272.75000000]
[161.43196106 258.98126221]
[147.75988770 258.29623413]
[135.66488647 251.74453735]
[127.54437256 240.55975342]
[125.03600311 226.90007019]
[128.68760681 213.43196106]
[137.83882141 202.80963135]
[132.16931152 188.92233276]
[126.49981689 175.03504944]
[120.83031464 161.14776611]
[108.85649109 152.28904724]
[110.80382538 136.58815002]
[105.13432312 122.70085907]
[99.46482086 108.81356812]
[96.42678070 111.32721710]
[92.19247437 112.72009277]
[87.16454315 112.58053589]
[81.86817932 110.63450623]
[76.90634918 106.77880096]
[62.21739197 103.73998260]
[47.52842712 100.70117188]
[32.83946609 97.66236115]
[18.15050316 94.62354279]
[3.46154046 91.58473206]
[-11.22742176 88.54592133]
[-25.91638374 85.50710297]
[-40.60534668 82.46829224]
[-55.29430771 79.42948151]
[-69.98326874 76.39067078]
[-84.67223358 73.35185242]
[-99.36119843 70.31304169]
[-114.05015564 67.27423096]
[-129.44039917 72.93749237]
[-141.86514282 62.23432541]
[-138.54287720 46.17522812]
[-122.89126587 41.28042603]
[-111.01134491 52.58526611]
[-96.32238007 55.62408066]
[-81.63342285 58.66289139]
[-66.94445801 61.70170593]
[-52.25549698 64.74051666]
[-37.56653214 67.77933502]
[-22.87757111 70.81814575]
[-8.18860912 73.85695648]
[6.50035334 76.89576721]
[21.18931580 79.93458557]
[35.87827682 82.97339630]
[50.56724167 86.01220703]
[65.25620270 89.05102539]
[79.94516754 92.08983612]
[69.13676453 81.68894958]
[71.35597229 66.85401917]
[84.73492432 60.07140732]
[98.01272583 67.04994202]
[100.01361084 81.91596985]
[106.24483490 68.27148438]
[112.47605896 54.62700653]
[118.70728302 40.98252869]
[124.93850708 27.33804703]
[131.16973877 13.69356728]
[128.97215271 -4.56091595]
[143.59440613 -14.21783352]
[149.54600525 -27.98658180]
[155.49760437 -41.75532913]
[161.44920349 -55.52407837]
[167.40080261 -69.29283142]
[173.35240173 -83.06157684]
[179.30401611 -96.83032227]
[185.25561523 -110.59907532]
[191.20721436 -124.36782074]
[197.15881348 -138.13656616]
[203.11041260 -151.90531921]
[209.06201172 -165.67407227]
[215.01361084 -179.44282532]
[220.96522522 -193.21156311]
[226.91682434 -206.98031616]
[227.65133667 -223.91835022]
[244.13075256 -227.90145874]
[252.52015686 -213.16868591]
[240.68556213 -201.02871704]
[234.73396301 -187.25996399]
[228.78236389 -173.49121094]
[222.83076477 -159.72247314]
[216.87916565 -145.95372009]
[210.92756653 -132.18496704]
[204.97596741 -118.41622162]
[199.02435303 -104.64747620]
[193.07275391 -90.87872314]
[187.12115479 -77.10997772]
[181.16955566 -63.34122849]
[175.21795654 -49.57247925]
[169.26635742 -35.80373001]
[163.31475830 -22.03498077]
[157.36314392 -8.26623249]
[161.53080750 3.12985373]
[156.63693237 14.67100048]
[144.81420898 19.92479324]
[138.58299255 33.56927109]
[132.35176086 47.21375275]
[126.12053680 60.85823059]
[119.88931274 74.50271606]
[113.65808868 88.14719391]
[113.35211182 103.14407349]
[119.02161407 117.03135681]
[124.69110870 130.91864014]
[137.07046509 140.77067566]
[134.71760559 155.47825623]
[140.38710022 169.36555481]
[146.05661011 183.25283813]
[151.72610474 197.14012146]
[168.10310364 199.19978333]
[181.14283752 209.16618347]
[187.35771179 224.25503540]
[185.14538574 240.32844543]
[175.20071411 253.02966309]
[181.15231323 266.79840088]
[187.10391235 280.56716919]
[193.05552673 294.33590698]
[199.00712585 308.10464478]
[204.95872498 321.87341309]
[210.91032410 335.64215088]
[216.86192322 349.41088867]
[222.81352234 363.17965698]
[237.70880127 360.81710815]
[252.72357178 362.23391724]
[266.91400146 367.34100342]
[279.38809204 375.81735229]
[289.36166382 387.13012695]
[296.20779419 400.56817627]
[299.49612427 415.28680420]
[299.01995850 430.36074829]
[294.80920410 444.84246826]
[287.12860107 457.82165527]
[276.46090698 468.48239136]
[263.47674561 476.15454102]
[248.99226379 480.35583496]
[233.91799927 480.82217407]
[219.20152283 477.52423096]
[205.76794434 470.66934204]
[194.46168518 460.68838501]
[185.99348450 448.20880127]
[180.89564514 434.01501465]
[179.48861694 418.99932861]
[181.86087036 404.10559082]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 132]
[3 131]
[4 130]
[5 129]
[6 128]
[7 127]
[8 126]
[9 125]
[10 124]
[16 119]
[17 118]
[18 117]
[19 116]
[21 114]
[22 113]
[23 112]
[28 59]
[29 58]
[30 57]
[31 56]
[32 55]
[33 54]
[34 53]
[35 52]
[36 51]
[37 50]
[38 49]
[39 48]
[40 47]
[41 46]
[64 111]
[65 110]
[66 109]
[67 108]
[68 107]
[69 106]
[71 103]
[72 102]
[73 101]
[74 100]
[75 99]
[76 98]
[77 97]
[78 96]
[79 95]
[80 94]
[81 93]
[82 92]
[83 91]
[84 90]
[85 89]
] def

init

% Start Annotations
2 132 0.0 1 colorpair
3 131 0.0 1 colorpair
4 130 0.0 1 colorpair
5 129 0.0 1 colorpair
6 128 0.0 1 colorpair
7 127 0.0 1 colorpair
8 126 0.0 1 colorpair
9 125 0.0 1 colorpair
10 124 0.0 1 colorpair
16 119 0.0 1 colorpair
17 118 0.0 1 colorpair
18 117 0.0 1 colorpair
19 116 0.0 1 colorpair
21 114 0.0 1 colorpair
22 113 0.0 1 colorpair
23 112 0.0 1 colorpair
28 59 0.0 1 colorpair
29 58 0.0 1 colorpair
30 57 0.0 1 colorpair
31 56 0.0 1 colorpair
32 55 0.0 1 colorpair
33 54 0.0 1 colorpair
34 53 0.0 1 colorpair
35 52 0.0 1 colorpair
36 51 0.0 1 colorpair
37 50 0.0 1 colorpair
38 49 0.0 1 colorpair
39 48 0.0 1 colorpair
40 47 0.0 1 colorpair
41 46 0.0 1 colorpair
64 111 0.0 1 colorpair
65 110 0.0 1 colorpair
66 109 0.0 1 colorpair
67 108 0.0 1 colorpair
68 107 0.0 1 colorpair
69 106 0.0 1 colorpair
71 103 0.0 1 colorpair
72 102 0.0 1 colorpair
73 101 0.0 1 colorpair
74 100 0.0 1 colorpair
75 99 0.0 1 colorpair
76 98 0.0 1 colorpair
77 97 0.0 1 colorpair
78 96 0.0 1 colorpair
79 95 0.0 1 colorpair
80 94 0.0 1 colorpair
81 93 0.0 1 colorpair
82 92 0.0 1 colorpair
83 91 0.0 1 colorpair
84 90 0.0 1 colorpair
85 89 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
