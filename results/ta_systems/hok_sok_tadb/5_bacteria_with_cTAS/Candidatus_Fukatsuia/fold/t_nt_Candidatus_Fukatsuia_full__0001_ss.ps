%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:17:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAGAGGCUAUCCUUACGUUGAUUGGACAUAUUGAUGGCCUCGGGUUAAUUGAAAAAUAACUC_GGGCUUUCGUCUUUCUGCCUAUCACGACUGCUCAAGACAGAAAGCCUCAAGCACCCA\
) } def
/len { sequence length } bind def

/coor [
[54.05990601 171.88676453]
[39.06075668 172.04655457]
[29.38108826 160.58775330]
[32.04618454 145.82563782]
[18.15132332 151.47654724]
[4.25646448 157.12747192]
[-9.63839531 162.77839661]
[-23.53325462 168.42930603]
[-37.42811584 174.08023071]
[-51.32297516 179.73114014]
[-65.21783447 185.38206482]
[-79.11269379 191.03298950]
[-85.32128906 205.31903076]
[-99.49315643 210.85192871]
[-113.07445526 204.84494019]
[-126.96931458 210.49584961]
[-136.83789062 222.86201477]
[-151.54231262 220.48948669]
[-165.43717957 226.14039612]
[-179.33203125 231.79132080]
[-186.86650085 245.95506287]
[-202.66358948 248.75355530]
[-214.60511780 238.04005432]
[-213.53059387 222.03303528]
[-200.26426697 213.01170349]
[-184.98295593 217.89645386]
[-171.08810425 212.24554443]
[-157.19323730 206.59461975]
[-148.31851196 194.63265991]
[-132.62022400 196.60099792]
[-118.72537231 190.95007324]
[-113.19163513 177.16917419]
[-99.18077087 171.24040222]
[-84.76361084 177.13812256]
[-70.86875153 171.48719788]
[-56.97389221 165.83628845]
[-43.07903290 160.18536377]
[-29.18417358 154.53445435]
[-15.28931332 148.88352966]
[-1.39445376 143.23262024]
[12.50040531 137.58169556]
[26.39526558 131.93077087]
[39.89780426 125.39767456]
[52.95208359 118.00945282]
[66.00636292 110.62123108]
[79.06063843 103.23300934]
[80.99364471 90.63690948]
[89.80242157 81.42801666]
[102.30029297 78.93776703]
[113.96601105 84.06702423]
[127.20619202 77.01737213]
[140.44638062 69.96772003]
[153.68655396 62.91807175]
[138.91145325 60.33032990]
[126.63642883 51.70920563]
[119.18839264 38.68896103]
[117.97923279 23.73777580]
[123.23815918 9.68986893]
[133.96826172 -0.79177296]
[148.13549805 -5.72019863]
[163.05426025 -4.16115236]
[175.89646912 3.58982515]
[184.22770691 16.06342125]
[186.46864319 30.89508247]
[182.19448853 45.27325058]
[172.21434021 56.47314835]
[186.97129822 53.78393555]
[201.72827148 51.09472656]
[216.48524475 48.40551376]
[231.24221802 45.71630096]
[245.99917603 43.02709198]
[260.75616455 40.33787918]
[275.47726440 37.45889664]
[290.16009521 34.39061356]
[304.84295654 31.32233238]
[319.52578735 28.25405121]
[334.20861816 25.18577003]
[340.28076172 13.08373642]
[352.06082153 6.81404495]
[365.10327148 8.48694611]
[374.63220215 17.26220131]
[389.38916016 14.57298946]
[393.89617920 -0.05389029]
[404.69256592 -10.90266895]
[419.29748535 -15.48037624]
[434.35476685 -12.73508835]
[446.40438843 -3.29765296]
[452.67742920 10.66327667]
[451.73239136 25.93958092]
[443.78643799 39.02087784]
[430.66546631 46.90118027]
[415.38464355 47.76965332]
[401.45532227 41.42672729]
[392.07839966 29.32995796]
[377.32141113 32.01916885]
[368.41235352 46.21997452]
[351.67166138 49.70832825]
[337.27688599 39.86860657]
[322.59405518 42.93688583]
[307.91122437 46.00516891]
[293.22839355 49.07344818]
[278.54556274 52.14173126]
[272.57104492 56.64311218]
[263.44537354 55.09484863]
[248.68838501 57.78406143]
[233.93142700 60.47327042]
[219.17445374 63.16248322]
[204.41748047 65.85169220]
[189.66050720 68.54090881]
[174.90354919 71.23011780]
[160.73620605 76.15825653]
[147.49601746 83.20790100]
[134.25584412 90.25755310]
[121.01566315 97.30720520]
[116.60774994 113.15643311]
[102.18775940 121.07421875]
[86.44886017 116.28729248]
[73.39458466 123.67550659]
[60.34030533 131.06373596]
[47.28602600 138.45195007]
[60.51477432 145.52304077]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 42]
[5 41]
[6 40]
[7 39]
[8 38]
[9 37]
[10 36]
[11 35]
[12 34]
[15 31]
[16 30]
[18 28]
[19 27]
[20 26]
[43 120]
[44 119]
[45 118]
[46 117]
[50 114]
[51 113]
[52 112]
[53 111]
[66 110]
[67 109]
[68 108]
[69 107]
[70 106]
[71 105]
[72 104]
[73 102]
[74 101]
[75 100]
[76 99]
[77 98]
[81 95]
[82 94]
] def

init

% Start Annotations
4 42 0.0 1 colorpair
5 41 0.0 1 colorpair
6 40 0.0 1 colorpair
7 39 0.0 1 colorpair
8 38 0.0 1 colorpair
9 37 0.0 1 colorpair
10 36 0.0 1 colorpair
11 35 0.0 1 colorpair
12 34 0.0 1 colorpair
15 31 0.0 1 colorpair
16 30 0.0 1 colorpair
18 28 0.0 1 colorpair
19 27 0.0 1 colorpair
20 26 0.0 1 colorpair
43 120 0.0 1 colorpair
44 119 0.0 1 colorpair
45 118 0.0 1 colorpair
46 117 0.0 1 colorpair
50 114 0.0 1 colorpair
51 113 0.0 1 colorpair
52 112 0.0 1 colorpair
53 111 0.0 1 colorpair
66 110 0.0 1 colorpair
67 109 0.0 1 colorpair
68 108 0.0 1 colorpair
69 107 0.0 1 colorpair
70 106 0.0 1 colorpair
71 105 0.0 1 colorpair
72 104 0.0 1 colorpair
73 102 0.0 1 colorpair
74 101 0.0 1 colorpair
75 100 0.0 1 colorpair
76 99 0.0 1 colorpair
77 98 0.0 1 colorpair
81 95 0.0 1 colorpair
82 94 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
