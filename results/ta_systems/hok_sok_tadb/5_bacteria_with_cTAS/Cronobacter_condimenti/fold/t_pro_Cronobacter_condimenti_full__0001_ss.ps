%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:18:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______AU_CAACGGCAAUA__UUUACCGGCAGCGUUAUUA_UGGUCAGCCUAACGCCAUUCAUGUUAAC__ACCAAUCAAGCGAAACACGUUACGCGAGCCGACCACAAGACGCG_GUAAAAAGGCGGUCGCGGCAAAGCCUUACCAAUCCAGC___\
) } def
/len { sequence length } bind def

/coor [
[152.61355591 589.73181152]
[147.86239624 575.46063232]
[145.73602295 560.57043457]
[146.30278015 545.53985596]
[149.54444885 530.85205078]
[155.35684204 516.97918701]
[163.55308533 504.36724854]
[173.86972046 493.42160034]
[185.97509766 484.49417114]
[199.48010254 477.87185669]
[195.38354492 463.44210815]
[184.46450806 453.31173706]
[188.13879395 437.92309570]
[184.04223633 423.49334717]
[179.94566345 409.06356812]
[175.84910583 394.63378906]
[171.75254822 380.20404053]
[167.65599060 365.77426147]
[163.55943298 351.34448242]
[150.46679688 344.33602905]
[146.10675049 329.76055908]
[153.54663086 316.07531738]
[149.45007324 301.64553833]
[145.35351562 287.21578979]
[141.25695801 272.78601074]
[137.16040039 258.35623169]
[133.06382751 243.92648315]
[128.96726990 229.49670410]
[118.04824066 219.36636353]
[121.72252655 203.97772217]
[117.62596130 189.54795837]
[113.52940369 175.11817932]
[109.43284607 160.68841553]
[105.33628082 146.25865173]
[101.23972321 131.82888794]
[97.14316559 117.39911652]
[88.13253021 113.04047394]
[82.94637299 104.47933960]
[83.25600433 94.47467041]
[88.96163940 86.25062561]
[85.43835449 71.67028046]
[81.91506195 57.08993530]
[78.39176941 42.50959396]
[74.86847687 27.92924881]
[71.34519196 13.34890461]
[67.82189941 -1.23143864]
[64.29860687 -15.81178284]
[51.29850388 -28.81841850]
[56.84628296 -45.44351196]
[53.03561401 -59.95139694]
[49.22494507 -74.45928192]
[45.41427612 -88.96717072]
[41.60360336 -103.47505951]
[37.79293442 -117.98294830]
[33.98226547 -132.49082947]
[30.17159843 -146.99871826]
[14.92118549 -155.51658630]
[10.60847569 -172.09571838]
[19.42164993 -186.39115906]
[15.32509041 -200.82092285]
[11.22853088 -215.25070190]
[7.13197088 -229.68046570]
[3.03541064 -244.11022949]
[-2.34609556 -251.55842590]
[-0.99651664 -258.86566162]
[-4.80718565 -273.37353516]
[-8.61785507 -287.88143921]
[-23.54675674 -291.25582886]
[-35.18996429 -301.19030762]
[-40.87195206 -315.40206909]
[-39.28704453 -330.62527466]
[-30.79943848 -343.36181641]
[-17.35952377 -350.68487549]
[-2.05569696 -350.91168213]
[11.59533691 -343.99014282]
[20.45666885 -331.51074219]
[22.49203110 -316.34118652]
[17.23371124 -301.96728516]
[5.89003277 -291.69210815]
[9.70070171 -277.18420410]
[13.51137066 -262.67633057]
[17.46517754 -248.20678711]
[21.56173897 -233.77702332]
[25.65829849 -219.34725952]
[29.75485802 -204.91748047]
[33.85141754 -190.48771667]
[45.89822769 -185.82940674]
[53.15691376 -174.91105652]
[52.77946091 -161.61047363]
[44.67948532 -150.80938721]
[48.49015427 -136.30149841]
[52.30082321 -121.79361725]
[56.11149216 -107.28572845]
[59.92216110 -92.77783966]
[63.73283005 -78.26995087]
[67.54350281 -63.76206589]
[71.35417175 -49.25418091]
[81.66184235 -42.86000061]
[84.93352509 -30.76323318]
[78.87895203 -19.33507347]
[82.40224457 -4.75472927]
[85.92552948 9.82561398]
[89.44882202 24.40595818]
[92.97211456 38.98630142]
[96.49540710 53.56664658]
[100.01869202 68.14698792]
[103.54198456 82.72733307]
[117.05362701 95.52066040]
[111.57292938 113.30255127]
[115.66949463 127.73232269]
[119.76605225 142.16209412]
[123.86260986 156.59185791]
[127.95916748 171.02162170]
[132.05572510 185.45138550]
[136.15229797 199.88116455]
[147.36433411 211.04362488]
[143.39704895 225.40014648]
[147.49360657 239.82992554]
[151.59016418 254.25968933]
[155.68672180 268.68945312]
[159.78327942 283.11923218]
[163.87983704 297.54898071]
[167.97639465 311.97875977]
[181.49729919 319.71331787]
[185.44622803 334.40548706]
[177.98919678 347.24792480]
[182.08575439 361.67770386]
[186.18231201 376.10748291]
[190.27886963 390.53723145]
[194.37544250 404.96701050]
[198.47200012 419.39678955]
[202.56855774 433.82653809]
[213.78060913 444.98901367]
[209.81330872 459.34552002]
[213.90986633 473.77529907]
[228.87994385 472.31362915]
[243.87042236 473.54864502]
[258.39941406 477.44070435]
[271.99987793 483.86465454]
[284.23461914 492.61398315]
[294.71035767 503.40747070]
[303.09030151 515.89813232]
[309.10507202 529.68438721]
[312.56137085 544.32318115]
[313.34802246 559.34387207]
[311.43978882 574.26361084]
[306.89801025 588.60278320]
[299.86865234 601.90045166]
[290.57772827 613.72918701]
[279.32385254 623.70867920]
[266.46884155 631.51812744]
[252.42587280 636.90655518]
[237.64640808 639.70068359]
[222.60554504 639.81079102]
[207.78677368 637.23321533]
[193.66645813 632.05090332]
[180.69851685 624.43035889]
[169.29980469 614.61663818]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 135]
[11 134]
[13 132]
[14 131]
[15 130]
[16 129]
[17 128]
[18 127]
[19 126]
[22 123]
[23 122]
[24 121]
[25 120]
[26 119]
[27 118]
[28 117]
[30 115]
[31 114]
[32 113]
[33 112]
[34 111]
[35 110]
[36 109]
[40 107]
[41 106]
[42 105]
[43 104]
[44 103]
[45 102]
[46 101]
[47 100]
[49 97]
[50 96]
[51 95]
[52 94]
[53 93]
[54 92]
[55 91]
[56 90]
[59 86]
[60 85]
[61 84]
[62 83]
[63 82]
[65 81]
[66 80]
[67 79]
] def

init

% Start Annotations
10 135 0.16 1 colorpair
11 134 0.16 1 colorpair
13 132 0.0 0.2 colorpair
14 131 0.0 0.2 colorpair
15 130 0.0 1 colorpair
16 129 0.0 1 colorpair
17 128 0.0 0.2 colorpair
18 127 0.0 0.2 colorpair
19 126 0.0 1 colorpair
22 123 0.0 0.2 colorpair
23 122 0.0 0.2 colorpair
24 121 0.0 0.2 colorpair
25 120 0.0 1 colorpair
26 119 0.0 1 colorpair
27 118 0.16 1 colorpair
28 117 0.0 0.2 colorpair
30 115 0.0 1 colorpair
31 114 0.0 0.2 colorpair
32 113 0.0 0.2 colorpair
33 112 0.0 0.2 colorpair
34 111 0.0 0.2 colorpair
35 110 0.0 0.2 colorpair
36 109 0.0 0.2 colorpair
40 107 0.16 1 colorpair
41 106 0.0 0.2 colorpair
42 105 0.0 0.2 colorpair
43 104 0.0 0.2 colorpair
44 103 0.16 1 colorpair
45 102 0.16 1 colorpair
46 101 0.0 0.2 colorpair
47 100 0.0 0.2 colorpair
49 97 0.0 1 colorpair
50 96 0.0 1 colorpair
51 95 0.0 0.2 colorpair
52 94 0.16 1 colorpair
53 93 0.16 1 colorpair
54 92 0.0 0.2 colorpair
55 91 0.0 1 colorpair
56 90 0.0 0.2 colorpair
59 86 0.0 0.2 colorpair
60 85 0.0 1 colorpair
61 84 0.0 1 colorpair
62 83 0.16 1 colorpair
63 82 0.0 0.2 colorpair
65 81 0.16 1 colorpair
66 80 0.0 1 colorpair
67 79 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
10 cmark
135 cmark
11 cmark
134 cmark
13 132 2 gmark
14 131 2 gmark
17 128 2 gmark
18 127 2 gmark
22 123 2 gmark
23 122 2 gmark
24 121 2 gmark
27 cmark
28 117 2 gmark
31 114 2 gmark
32 113 2 gmark
33 112 2 gmark
34 111 2 gmark
35 110 2 gmark
36 109 2 gmark
107 cmark
41 106 2 gmark
42 105 2 gmark
43 104 2 gmark
44 cmark
103 cmark
102 cmark
46 101 2 gmark
47 100 2 gmark
51 95 2 gmark
94 cmark
53 cmark
54 92 2 gmark
56 90 2 gmark
59 86 2 gmark
62 cmark
83 cmark
63 82 2 gmark
65 cmark
81 cmark
67 79 2 gmark

% End Annotations
showpage
end
%%EOF
