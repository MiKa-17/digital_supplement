%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:25:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_________________________________________C_____AUGCUGCAAAAAUAUGCCCUUGUGGCAGUCAUAGUGAUGUGUUUAACGGUUCUGGGAUUCACGCUGCUGGUCGGAGAUUCGCUGUGUGAGUUGCGUAUCAAGGAAGGUAAUAUGGAGUUUACGGCAGUUCUCGCUUACGAAUCGAAG___AA_____________\
) } def
/len { sequence length } bind def

/coor [
[60.64167404 585.42114258]
[45.71177292 583.97888184]
[30.83336639 582.07751465]
[16.02056885 579.71887207]
[1.28742945 576.90521240]
[-13.35207462 573.63916016]
[-27.88405609 569.92382812]
[-42.29473495 565.76275635]
[-56.57043457 561.15991211]
[-70.69762421 556.11956787]
[-84.66288757 550.64660645]
[-98.45299530 544.74615479]
[-112.05485535 538.42388916]
[-125.45556641 531.68572998]
[-138.64242554 524.53802490]
[-151.60290527 516.98767090]
[-164.32473755 509.04180908]
[-176.79583740 500.70791626]
[-189.00437927 491.99392700]
[-200.93878174 482.90808105]
[-212.58772278 473.45907593]
[-223.94017029 463.65579224]
[-234.98532104 453.50753784]
[-245.71273804 443.02398682]
[-256.11221313 432.21505737]
[-266.17388916 421.09100342]
[-275.88824463 409.66238403]
[-285.24603271 397.94000244]
[-294.23840332 385.93502808]
[-302.85681152 373.65884399]
[-311.09307861 361.12304688]
[-318.93939209 348.33956909]
[-326.38833618 335.32052612]
[-333.43280029 322.07827759]
[-340.06616211 308.62533569]
[-346.28207397 294.97454834]
[-352.07464600 281.13879395]
[-357.43841553 267.13122559]
[-362.36828613 252.96510315]
[-366.85955811 238.65390015]
[-370.90798950 224.21118164]
[-374.50973511 209.65063477]
[-377.66137695 194.98606873]
[-380.35995483 180.23141479]
[-382.60284424 165.40065002]
[-384.38796997 150.50785828]
[-385.71362305 135.56715393]
[-386.57855225 120.59270477]
[-386.98193359 105.59872437]
[-386.92340088 90.59943390]
[-386.40295410 75.60906219]
[-385.42114258 60.64182281]
[-383.97888184 45.71192169]
[-382.07754517 30.83351326]
[-379.71890259 16.02071571]
[-376.90524292 1.28757536]
[-373.63922119 -13.35192966]
[-369.92388916 -27.88391304]
[-365.76281738 -42.29459000]
[-361.15994263 -56.57029343]
[-356.11962891 -70.69747925]
[-350.64666748 -84.66275024]
[-344.74624634 -98.45285797]
[-358.34863281 -104.77542114]
[-371.95104980 -111.09797668]
[-387.45260620 -106.96511078]
[-400.26266479 -116.62337494]
[-400.55441284 -132.66377258]
[-388.10406494 -142.78149414]
[-372.46243286 -139.21507263]
[-365.62847900 -124.70037842]
[-352.02609253 -118.37781525]
[-338.42367554 -112.05525208]
[-331.68548584 -125.45596313]
[-324.53784180 -138.64280701]
[-316.98745728 -151.60328674]
[-309.04156494 -164.32511902]
[-300.70764160 -176.79620361]
[-291.99365234 -189.00474548]
[-282.90780640 -200.93913269]
[-273.45877075 -212.58807373]
[-263.65548706 -223.94050598]
[-253.50724792 -234.98565674]
[-243.02368164 -245.71304321]
[-232.21473694 -256.11251831]
[-221.09068298 -266.17419434]
[-209.66203308 -275.88851929]
[-197.93966675 -285.24630737]
[-185.93467712 -294.23864746]
[-173.65846252 -302.85705566]
[-161.12266541 -311.09332275]
[-148.33918762 -318.93963623]
[-135.32012939 -326.38854980]
[-122.07786560 -333.43301392]
[-108.62494659 -340.06634521]
[-94.97413635 -346.28225708]
[-81.13837433 -352.07482910]
[-67.13079834 -357.43856812]
[-52.96468353 -362.36843872]
[-38.65347672 -366.85968018]
[-24.21074867 -370.90811157]
[-9.65019703 -374.50985718]
[5.01436329 -377.66146851]
[19.76902390 -380.36001587]
[34.59978867 -382.60290527]
[49.49258804 -384.38803101]
[64.43329620 -385.71368408]
[79.40774536 -386.57858276]
[94.40172577 -386.98193359]
[109.40101624 -386.92337036]
[124.39138794 -386.40295410]
[139.35862732 -385.42111206]
[154.28852844 -383.97885132]
[169.16693115 -382.07748413]
[183.97972107 -379.71884155]
[198.71286011 -376.90515137]
[213.35237122 -373.63909912]
[227.88433838 -369.92376709]
[242.29501343 -365.76269531]
[256.57070923 -361.15982056]
[270.69790649 -356.11947632]
[284.66317749 -350.64651489]
[298.45327759 -344.74606323]
[312.05511475 -338.42373657]
[325.45584106 -331.68557739]
[338.64266968 -324.53790283]
[351.60314941 -316.98754883]
[364.32498169 -309.04162598]
[376.79608154 -300.70773315]
[389.00460815 -291.99374390]
[400.93902588 -282.90789795]
[412.58795166 -273.45886230]
[423.94039917 -263.65557861]
[434.98553467 -253.50735474]
[445.71295166 -243.02378845]
[456.11242676 -232.21485901]
[466.17410278 -221.09078979]
[475.88842773 -209.66215515]
[485.24621582 -197.93977356]
[494.23858643 -185.93479919]
[502.85696411 -173.65858459]
[511.09323120 -161.12278748]
[518.93957520 -148.33930969]
[526.38848877 -135.32026672]
[533.43292236 -122.07799530]
[540.06628418 -108.62508392]
[546.28216553 -94.97427368]
[552.07476807 -81.13851166]
[557.43853760 -67.13093567]
[562.36840820 -52.96482849]
[566.85961914 -38.65362167]
[570.90808105 -24.21089172]
[574.50982666 -9.65034199]
[577.66143799 5.01421738]
[580.35998535 19.76887703]
[582.60290527 34.59963989]
[584.38800049 49.49243927]
[585.71368408 64.43315125]
[586.57855225 79.40759277]
[586.98193359 94.40157318]
[586.92340088 109.40086365]
[586.40295410 124.39123535]
[585.42114258 139.35847473]
[583.97888184 154.28837585]
[582.07751465 169.16677856]
[579.71887207 183.97958374]
[576.90521240 198.71272278]
[573.63916016 213.35221863]
[569.92382812 227.88420105]
[565.76275635 242.29487610]
[561.15985107 256.57058716]
[556.11956787 270.69775391]
[550.64654541 284.66302490]
[544.74609375 298.45312500]
[538.42382812 312.05499268]
[531.68560791 325.45568848]
[524.53796387 338.64254761]
[516.98760986 351.60302734]
[509.04171753 364.32485962]
[500.70782471 376.79595947]
[491.99383545 389.00448608]
[482.90798950 400.93890381]
[473.45895386 412.58782959]
[463.65567017 423.94027710]
[453.50744629 434.98544312]
[443.02389526 445.71282959]
[432.21496582 456.11230469]
[421.09091187 466.17398071]
[409.66226196 475.88833618]
[397.93991089 485.24612427]
[385.93490601 494.23849487]
[373.65872192 502.85687256]
[361.12292480 511.09313965]
[348.33944702 518.93945312]
[335.32040405 526.38842773]
[322.07812500 533.43286133]
[308.62521362 540.06622314]
[294.97439575 546.28210449]
[281.13864136 552.07470703]
[267.13107300 557.43847656]
[252.96496582 562.36834717]
[238.65376282 566.85961914]
[224.21102905 570.90802002]
[209.65048218 574.50976562]
[194.98593140 577.66143799]
[180.23127747 580.35998535]
[165.40051270 582.60284424]
[150.50770569 584.38800049]
[135.56700134 585.71362305]
[120.59255219 586.57855225]
[105.59857178 586.98193359]
[90.59928131 586.92340088]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[63 73]
[64 72]
[65 71]
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
63 73 34 gmark
63 cmark
73 cmark
64 72 36 gmark
64 cmark
72 cmark
65 71 26 gmark
65 cmark
71 cmark

% End Annotations
showpage
end
%%EOF
