%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:17:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCUGUUUGCGUGUUUAUUAGUUAUUUGCGUAACAGUACUGUUUUUUUCUUUAUUUAAUCGCGGUCUGCUU_UGCGAAUUAAGAAUAAAGAACGGAAAUCAGGAGGUGGCGGCGAAAUUAGCCUGCA______________________________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[246.82641602 125.18019867]
[246.13613892 117.75093842]
[245.81083679 110.29666138]
[230.81781006 109.83922577]
[215.82478333 109.38178253]
[200.82870483 109.03867340]
[185.83045959 108.80992889]
[170.83219910 108.58117676]
[157.98841858 116.12348938]
[144.30784607 108.17663574]
[129.30958557 107.94789124]
[114.31132507 107.71914673]
[99.87601471 116.25988770]
[85.57262421 107.50000000]
[70.57262421 107.50000000]
[55.57262039 107.50000000]
[40.57262039 107.50000000]
[25.57262039 107.50000000]
[10.57262039 107.50000000]
[2.83620358 120.69451141]
[-10.37860489 128.19555664]
[-25.47337151 128.07571411]
[-38.39499283 120.46732330]
[-45.72398758 107.50000000]
[-60.72398758 107.50000000]
[-75.72398376 107.50000000]
[-90.72398376 107.50000000]
[-105.72398376 107.50000000]
[-120.72398376 107.50000000]
[-135.72398376 107.50000000]
[-145.47717285 121.31694031]
[-161.38569641 126.54743195]
[-177.11981201 121.31881714]
[-186.54277039 107.87908936]
[-201.54101562 108.10784149]
[-216.53927612 108.33658600]
[-225.07612610 111.59755707]
[-231.76759338 108.45270538]
[-246.76759338 108.45270538]
[-261.76757812 108.45270538]
[-276.76757812 108.45270538]
[-291.76757812 108.45270538]
[-302.90072632 119.34725952]
[-318.11285400 119.13358307]
[-328.43054199 108.45270538]
[-343.43054199 108.45270538]
[-351.04037476 121.79383850]
[-364.30935669 129.52880859]
[-379.66818237 129.57695007]
[-392.98538208 121.92531586]
[-400.67874146 108.63215637]
[-400.67874146 93.27326202]
[-392.98538208 79.98010254]
[-379.66818237 72.32846832]
[-364.30935669 72.37660980]
[-351.04037476 80.11157990]
[-343.43054199 93.45270538]
[-328.43054199 93.45270538]
[-318.11285400 82.77183533]
[-302.90072632 82.55815887]
[-291.76757812 93.45270538]
[-276.76757812 93.45270538]
[-261.76757812 93.45270538]
[-246.76759338 93.45270538]
[-231.76759338 93.45270538]
[-216.76802063 93.33833313]
[-201.76977539 93.10958099]
[-186.77151489 92.88083649]
[-180.13465881 81.29409790]
[-168.54573059 74.44574738]
[-154.97821045 74.21720123]
[-142.97518921 80.77513123]
[-135.72398376 92.50000000]
[-120.72398376 92.50000000]
[-105.72398376 92.50000000]
[-90.72398376 92.50000000]
[-75.72398376 92.50000000]
[-60.72398758 92.50000000]
[-45.72398758 92.50000000]
[-38.39499283 79.53267670]
[-25.47337151 71.92427826]
[-10.37860489 71.80444336]
[2.83620358 79.30548859]
[10.57262039 92.50000000]
[25.57262039 92.50000000]
[40.57262039 92.50000000]
[55.57262039 92.50000000]
[70.57262421 92.50000000]
[85.57262421 92.50000000]
[94.29143524 84.77464294]
[105.94008636 84.86346436]
[114.54007721 92.72088623]
[129.53833008 92.94963837]
[144.53659058 93.17838287]
[158.45314026 85.65243530]
[171.06094360 93.58292389]
[186.05920410 93.81166840]
[201.05746460 94.04042053]
[209.68977356 91.04130554]
[216.28222656 94.38875580]
[231.27525330 94.84619904]
[246.26828003 95.30364227]
[252.04658508 64.30118561]
[264.08993530 35.15963364]
[281.87942505 9.13006020]
[304.64944458 -12.67044449]
[331.42071533 -29.30673027]
[361.04235840 -40.06569290]
[392.24145508 -44.48684311]
[423.67761230 -42.38201141]
[454.00064087 -33.84336090]
[460.21292114 -47.49646759]
[466.42523193 -61.14957428]
[459.52191162 -75.18089294]
[463.30297852 -90.35446930]
[475.98318481 -99.50580597]
[491.57525635 -98.31391144]
[502.71716309 -87.34156799]
[504.14797974 -71.76958466]
[495.19216919 -58.95056534]
[480.07833862 -54.93727112]
[473.86602783 -41.28416443]
[467.65374756 -27.63105965]
[474.19165039 -24.05420494]
[480.54647827 -20.16112328]
[486.70294189 -15.96116161]
[492.64617920 -11.46441174]
[498.36196899 -6.68167543]
[503.83651733 -1.62444270]
[509.05664062 3.69513488]
[514.00982666 9.26427555]
[518.68414307 15.06959724]
[523.06829834 21.09714890]
[527.15185547 27.33244705]
[530.92486572 33.76050186]
[534.37829590 40.36587143]
[537.50390625 47.13267517]
[540.29406738 54.04465103]
[542.74206543 61.08518219]
[544.84204102 68.23735046]
[546.58898926 75.48395538]
[547.97863770 82.80758667]
[549.00762939 90.19063568]
[549.67346191 97.61535645]
[549.97460938 105.06388855]
[549.91021729 112.51834106]
[549.48052979 119.96077728]
[548.68658447 127.37330627]
[547.53015137 134.73811340]
[546.01416016 142.03749084]
[544.14208984 149.25387573]
[541.91857910 156.36993408]
[539.34887695 163.36854553]
[536.43914795 170.23286438]
[533.19641113 176.94641113]
[529.62841797 183.49302673]
[525.74377441 189.85697937]
[521.55175781 196.02293396]
[517.06256104 201.97608948]
[512.28680420 207.70211792]
[507.23608398 213.18724060]
[501.92245483 218.41827393]
[496.35876465 223.38262939]
[490.55831909 228.06835938]
[484.53506470 232.46418762]
[478.30349731 236.55955505]
[471.87860107 240.34460449]
[465.27578735 243.81021118]
[458.51095581 246.94802856]
[451.60034180 249.75053406]
[444.56054688 252.21096802]
[437.40853882 254.32337952]
[430.16143799 256.08273315]
[422.83673096 257.48471069]
[415.45199585 258.52603149]
[408.02502441 259.20410156]
[400.57360840 259.51730347]
[393.11569214 259.46487427]
[385.66918945 259.04693604]
[378.25204468 258.26449585]
[370.88204956 257.11938477]
[363.57696533 255.61437988]
[356.35430908 253.75308228]
[349.23147583 251.53994751]
[342.22558594 248.98030090]
[335.35348511 246.08027649]
[328.63171387 242.84683228]
[322.07641602 239.28775024]
[315.70336914 235.41156006]
[309.52789307 231.22756958]
[303.56488037 226.74584961]
[297.82858276 221.97715759]
[292.33288574 216.93293762]
[287.09097290 211.62533569]
[282.11544800 206.06707764]
[277.41830444 200.27153015]
[273.01083374 194.25262451]
[268.90362549 188.02482605]
[265.10656738 181.60308838]
[261.62878418 175.00285339]
[258.47869873 168.23999023]
[255.66384888 161.33074951]
[253.19102478 154.29174805]
[251.06617737 147.13987732]
[249.29441833 139.89234924]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 102]
[4 101]
[5 100]
[6 98]
[7 97]
[8 96]
[10 94]
[11 93]
[12 92]
[14 89]
[15 88]
[16 87]
[17 86]
[18 85]
[19 84]
[24 79]
[25 78]
[26 77]
[27 76]
[28 75]
[29 74]
[30 73]
[34 68]
[35 67]
[36 66]
[38 65]
[39 64]
[40 63]
[41 62]
[42 61]
[45 58]
[46 57]
[111 123]
[112 122]
[113 121]
] def

init

% Start Annotations
3 102 0.0 0.6 colorpair
4 101 0.16 1 colorpair
5 100 0.16 1 colorpair
6 98 0.0 1 colorpair
7 97 0.0 1 colorpair
8 96 0.0 1 colorpair
10 94 0.16 1 colorpair
11 93 0.0 0.6 colorpair
12 92 0.0 1 colorpair
14 89 0.0 1 colorpair
15 88 0.0 0.6 colorpair
16 87 0.0 0.6 colorpair
17 86 0.0 1 colorpair
18 85 0.0 1 colorpair
19 84 0.16 0.6 colorpair
24 79 0.16 1 colorpair
25 78 0.16 1 colorpair
26 77 0.0 0.6 colorpair
27 76 0.0 1 colorpair
28 75 0.0 1 colorpair
29 74 0.16 1 colorpair
30 73 0.0 0.6 colorpair
34 68 0.0 1 colorpair
35 67 0.16 1 colorpair
36 66 0.0 0.6 colorpair
38 65 0.32 1 colorpair
39 64 0.0 1 colorpair
40 63 0.0 1 colorpair
41 62 0.0 0.6 colorpair
42 61 0.0 0.6 colorpair
45 58 0.16 1 colorpair
46 57 0.0 1 colorpair
111 123 0.16 1 colorpair
112 122 0.0 1 colorpair
113 121 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
3 102 1 gmark
4 cmark
101 cmark
5 cmark
100 cmark
10 cmark
94 cmark
11 93 1 gmark
15 88 1 gmark
16 87 1 gmark
19 84 1 gmark
84 cmark
24 cmark
78 cmark
26 77 1 gmark
29 cmark
30 73 1 gmark
35 cmark
67 cmark
36 66 1 gmark
38 cmark
65 cmark
41 62 1 gmark
42 61 1 gmark
58 cmark
123 cmark

% End Annotations
showpage
end
%%EOF
