%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:24:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__UAAGAGGCUACUCU_CAACUUGUUGGACAUUCAGGGGUAGCCUCG_____GGUAAAUGAAAAUUUCC______CGGGGCUUUCUACUUUCUGUCCCUC____________AACAAUGCUCA_______AGACAGAAAGUCUUAAGCACCCGCCGCAU____\
) } def
/len { sequence length } bind def

/coor [
[-35.01353073 342.99063110]
[-44.57550430 354.55563354]
[-54.91258240 365.43338013]
[-65.97550201 375.57202148]
[-77.71154022 384.92330933]
[-90.06477356 393.44259644]
[-102.97632599 401.08932495]
[-116.38468170 407.82702637]
[-130.22592163 413.62362671]
[-144.43411255 418.45147705]
[-158.94151306 422.28759766]
[-173.67901611 425.11370850]
[-188.57637024 426.91629028]
[-203.56260681 427.68679810]
[-218.56626892 427.42153931]
[-233.51589966 426.12179565]
[-248.34024048 423.79376221]
[-262.96862793 420.44851685]
[-277.33139038 416.10198975]
[-291.36004639 410.77493286]
[-304.98773193 404.49270630]
[-318.14953613 397.28524780]
[-330.78274536 389.18692017]
[-342.82711792 380.23629761]
[-354.22528076 370.47607422]
[-364.92294312 359.95269775]
[-374.86904907 348.71633911]
[-384.01626587 336.82058716]
[-392.32098389 324.32208252]
[-399.74359131 311.28042603]
[-406.24877930 297.75772095]
[-411.80551147 283.81845093]
[-416.38732910 269.52902222]
[-419.97235107 254.95753479]
[-422.54354858 240.17343140]
[-424.08862305 225.24716187]
[-424.60021973 210.24986267]
[-424.07595825 195.25300598]
[-422.51824951 180.32804871]
[-419.93457031 165.54612732]
[-416.33721924 150.97767639]
[-411.74334717 136.69212341]
[-406.17483521 122.75755310]
[-399.65823364 109.24036407]
[-392.22457886 96.20497131]
[-383.90930176 83.71349335]
[-374.75204468 71.82546234]
[-364.79644775 60.59753036]
[-354.08990479 50.08320618]
[-342.68350220 40.33259201]
[-330.63156128 31.39215660]
[-317.99151611 23.30450630]
[-304.82363892 16.10817909]
[-291.19061279 9.83747196]
[-277.15747070 4.52226734]
[-262.79104614 0.18789467]
[-248.15983582 -3.14499044]
[-233.33354187 -5.46050501]
[-218.38282776 -6.74761486]
[-203.37892151 -7.00018597]
[-188.39335632 -6.21701479]
[-173.49752808 -4.40183353]
[-158.76242065 -1.56329226]
[-144.25825500 2.28508162]
[-130.05416870 7.12494898]
[-116.21781921 12.93324566]
[-102.81517029 19.68229103]
[-89.91007996 27.33992386]
[-77.56405640 35.86965179]
[-65.83592224 45.23082352]
[-54.78157425 55.37883377]
[-44.45369339 66.26531982]
[-34.90149689 77.83840179]
[-26.17050171 90.04292297]
[-18.30231857 102.82073212]
[-11.33444405 116.11093140]
[-5.30008173 129.85018921]
[8.81701851 124.77993011]
[18.17982674 113.19601440]
[33.78305817 115.81320953]
[47.90015793 110.74295807]
[62.01726151 105.67269897]
[76.13436127 100.60244751]
[80.30161285 86.51277161]
[91.93044281 77.53193665]
[106.61594391 77.06179810]
[118.79538727 85.28044891]
[132.91249084 80.21019745]
[147.02958679 75.13994598]
[161.14668274 70.06969452]
[175.26379395 64.99943542]
[185.63635254 53.05286407]
[200.22982788 56.03271484]
[214.34692383 50.96245956]
[228.46403503 45.89220810]
[242.58113098 40.82195282]
[239.96026611 26.01523018]
[239.87960815 10.97855854]
[242.34149170 -3.85542679]
[247.27508545 -18.05992126]
[254.53843689 -31.22623634]
[263.92254639 -42.97554779]
[275.15744019 -52.96980286]
[287.91986084 -60.92145157]
[301.84262085 -66.60170746]
[316.52508545 -69.84713745]
[331.54486084 -70.56436157]
[346.46978760 -68.73274994]
[360.87042236 -64.40499878]
[374.33245850 -57.70562744]
[386.46856689 -48.82738495]
[396.92953491 -38.02571869]
[405.41439819 -25.61141777]
[411.67904663 -11.94166183]
[415.54321289 2.59024096]
[416.89575195 17.56617928]
[415.69769287 32.55526352]
[411.98352051 47.12623215]
[405.86013794 60.85984421]
[397.50369263 73.36096191]
[387.15463257 84.26989746]
[375.11071777 93.27278137]
[361.71847534 100.11058044]
[347.36318970 104.58656311]
[332.45794678 106.57194519]
[317.43157959 106.00959778]
[302.71643066 102.91571045]
[288.73587036 97.37928772]
[275.89215088 89.55963135]
[264.55484009 79.68173218]
[255.05007935 68.02979279]
[247.65138245 54.93905640]
[233.53428650 60.00930786]
[219.41717529 65.07955933]
[205.30007935 70.14981079]
[195.93727112 81.73373413]
[180.33404541 79.11653900]
[166.21693420 84.18679047]
[152.09983826 89.25704193]
[137.98274231 94.32730103]
[123.86563873 99.39755249]
[119.69838715 113.48722839]
[108.06955719 122.46806335]
[93.38405609 122.93820190]
[81.20461273 114.71955109]
[67.08751678 119.78980255]
[52.97041321 124.86005402]
[38.85331345 129.93031311]
[28.48075485 141.87687683]
[13.88727188 138.89703369]
[-0.22982861 143.96728516]
[3.85622382 158.40629578]
[6.93637228 173.09278870]
[8.99593830 187.95680237]
[10.02510738 202.92749023]
[10.01897526 217.93351746]
[8.97756958 232.90335083]
[6.90585518 247.76567078]
[3.81370354 262.44964600]
[-0.28414920 276.88531494]
[-5.36817503 291.00387573]
[-11.41414547 304.73800659]
[-18.39324951 318.02230835]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[77 151]
[78 150]
[80 148]
[81 147]
[82 146]
[83 145]
[87 141]
[88 140]
[89 139]
[90 138]
[91 137]
[93 135]
[94 134]
[95 133]
[96 132]
] def

init

% Start Annotations
77 151 0.0 0.6 colorpair
78 150 0.0 0.6 colorpair
80 148 0.0 0.6 colorpair
81 147 0.0 0.6 colorpair
82 146 0.0 0.6 colorpair
83 145 0.0 0.2 colorpair
88 140 0.0 0.6 colorpair
89 139 0.0 0.2 colorpair
90 138 0.0 0.6 colorpair
91 137 0.0 0.6 colorpair
93 135 0.0 0.6 colorpair
94 134 0.0 0.2 colorpair
95 133 0.16 0.6 colorpair
96 132 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
77 151 1 gmark
78 150 1 gmark
80 148 1 gmark
81 147 1 gmark
82 146 1 gmark
83 145 2 gmark
87 141 3 gmark
87 cmark
141 cmark
88 140 1 gmark
89 139 2 gmark
90 138 1 gmark
91 137 1 gmark
93 135 1 gmark
94 134 2 gmark
95 133 1 gmark
95 cmark
133 cmark
96 132 1 gmark

% End Annotations
showpage
end
%%EOF
