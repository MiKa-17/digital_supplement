%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:24:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUGCUGUGGGGUUUGUUUAUGAUUUGUCUGACGCUGUUGAUCUUCACCUGGAUGACGCGCGACUCGCUGUGCGAGCUGCGCUUCAGAAAGGAGAAAACGGAGGUGGCGGCAGUGUUGGCUUACGAAGC___AGGAAAGUAGC___UAUUGGCGGGG_CGCGUUCCCCGCCUCUCCAGAG___________UGGUUAAGCCUCAACGCACCCUUAUCAAUGGCCUGC___\
) } def
/len { sequence length } bind def

/coor [
[334.17132568 971.12219238]
[319.41687012 968.41168213]
[304.75900269 965.21990967]
[290.21343994 961.55023193]
[275.79571533 957.40661621]
[261.52127075 952.79351807]
[247.40542603 947.71582031]
[233.46327209 942.17895508]
[219.70974731 936.18890381]
[206.15956116 929.75201416]
[192.82725525 922.87530518]
[179.72708130 915.56597900]
[166.87307739 907.83197021]
[154.27899170 899.68151855]
[141.95834351 891.12341309]
[129.92430115 882.16668701]
[118.18975067 872.82110596]
[106.76726532 863.09649658]
[95.66907501 853.00341797]
[84.90706635 842.55261230]
[74.49275970 831.75524902]
[64.43730927 820.62298584]
[54.75148010 809.16760254]
[45.44564438 797.40148926]
[36.52976990 785.33715820]
[28.01340294 772.98760986]
[19.90566254 760.36596680]
[12.21523094 747.48583984]
[4.95034266 734.36102295]
[-1.88122272 721.00549316]
[-8.27215004 707.43359375]
[-14.21559429 693.65985107]
[-19.70519257 679.69903564]
[-24.73506737 665.56604004]
[-29.29982948 651.27606201]
[-33.39459229 636.84442139]
[-37.01497269 622.28649902]
[-40.15709305 607.61791992]
[-42.81758499 592.85437012]
[-44.99360657 578.01165771]
[-46.68281937 563.10571289]
[-47.88342285 548.15252686]
[-48.59412384 533.16802979]
[-48.81416702 518.16827393]
[-48.54331589 503.16937256]
[-47.78186035 488.18737793]
[-46.53061295 473.23831177]
[-44.79091263 458.33816528]
[-42.56462860 443.50292969]
[-39.85414124 428.74850464]
[-36.66234970 414.09063721]
[-32.99267960 399.54507446]
[-28.84905243 385.12734985]
[-24.23591042 370.85290527]
[-19.15819168 356.73706055]
[-13.62133408 342.79492188]
[-7.63126612 329.04138184]
[-1.19440234 315.49121094]
[5.68236446 302.15890503]
[12.99166965 289.05874634]
[20.72568893 276.20474243]
[28.87613678 263.61065674]
[37.43428802 251.29002380]
[46.39097595 239.25598145]
[55.73661423 227.52143860]
[65.46118927 216.09896851]
[75.55429077 205.00077820]
[86.00511932 194.23878479]
[96.80246735 183.82447815]
[107.93477631 173.76904297]
[119.39013672 164.08322144]
[131.15628052 154.77738953]
[122.24119568 142.71417236]
[113.32611084 130.65095520]
[98.72891235 133.39836121]
[84.38276672 129.54942322]
[73.12110138 119.86431122]
[67.16815948 106.25590515]
[67.69967651 91.41192627]
[74.61067200 78.26412964]
[65.69558716 66.20091248]
[51.65758133 71.73234558]
[36.66615677 73.44104004]
[21.74345589 71.21047974]
[7.90693092 65.19275665]
[-3.90001941 55.79816437]
[-12.87237835 43.66724396]
[-18.39839554 29.62710571]
[-20.10129547 14.63502216]
[-17.86497688 -0.28681681]
[-11.84191036 -14.12101650]
[-2.44276118 -25.92433929]
[9.69162083 -34.89201355]
[23.73389435 -40.41260910]
[38.72663498 -42.10972214]
[53.64760971 -39.86763763]
[67.47948456 -33.83923340]
[79.27917480 -24.43552589]
[88.24216461 -12.29768276]
[93.75733185 1.74672127]
[95.44866180 16.74011421]
[93.20081329 31.66022301]
[87.16706848 45.48976517]
[77.75880432 57.28582764]
[86.67388916 69.34904480]
[101.27108765 66.60163879]
[115.61723328 70.45058441]
[126.87889862 80.13568878]
[132.83183289 93.74409485]
[132.30032349 108.58807373]
[125.38932800 121.73587036]
[134.30441284 133.79908752]
[143.21949768 145.86230469]
[155.56904602 137.34591675]
[168.19062805 129.23814392]
[181.07073975 121.54768372]
[194.19557190 114.28276825]
[207.55108643 107.45117188]
[221.12297058 101.06021881]
[234.89669800 95.11674500]
[248.85751343 89.62711334]
[262.99047852 84.59720612]
[277.28042603 80.03241730]
[291.71209717 75.93762207]
[306.27001953 72.31720734]
[320.93859863 69.17505646]
[335.70211792 66.51452637]
[350.54479980 64.33847809]
[365.45074463 62.64923096]
[380.40396118 61.44859314]
[395.38845825 60.73785782]
[410.38818359 60.51778030]
[425.38708496 60.78860092]
[440.36911011 61.55002594]
[455.31817627 62.80123901]
[470.21832275 64.54090881]
[485.05355835 66.76715851]
[499.80798340 69.47761536]
[514.46588135 72.66937256]
[529.01147461 76.33901215]
[543.42919922 80.48260498]
[557.70361328 85.09571838]
[571.81945801 90.17340088]
[585.76165771 95.71022797]
[599.51519775 101.70027161]
[613.06536865 108.13710022]
[626.39770508 115.01383972]
[639.49786377 122.32312012]
[652.35186768 130.05711365]
[664.94598389 138.20751953]
[677.26666260 146.76565552]
[689.30072021 155.72232056]
[701.03527832 165.06793213]
[712.45776367 174.79248047]
[723.55596924 184.88555908]
[734.31799316 195.33634949]
[744.73229980 206.13368225]
[754.78778076 217.26597595]
[764.47363281 228.72131348]
[773.77947998 240.48742676]
[782.69537354 252.55172729]
[791.21173096 264.90127563]
[799.31951904 277.52285767]
[807.00994873 290.40298462]
[814.27484131 303.52783203]
[821.10644531 316.88333130]
[827.49737549 330.45523071]
[833.44085693 344.22897339]
[838.93048096 358.18978882]
[843.96038818 372.32272339]
[848.52514648 386.61270142]
[852.61993408 401.04437256]
[856.24035645 415.60229492]
[859.38250732 430.27087402]
[862.04302979 445.03442383]
[864.21905518 459.87710571]
[865.90826416 474.78302002]
[867.10888672 489.73626709]
[867.81964111 504.72076416]
[868.03967285 519.72045898]
[867.76885986 534.71936035]
[867.00744629 549.70141602]
[865.75622559 564.65045166]
[864.01654053 579.55059814]
[861.79028320 594.38580322]
[859.07977295 609.14025879]
[855.88806152 623.79815674]
[852.21838379 638.34375000]
[848.07476807 652.76147461]
[843.46166992 667.03588867]
[838.38397217 681.15173340]
[832.84710693 695.09387207]
[826.85705566 708.84741211]
[820.42022705 722.39764404]
[813.54345703 735.72991943]
[806.23419189 748.83013916]
[798.50018311 761.68414307]
[790.34979248 774.27819824]
[781.79162598 786.59887695]
[772.83496094 798.63293457]
[763.48931885 810.36749268]
[753.76477051 821.78997803]
[743.67169189 832.88818359]
[733.22088623 843.65020752]
[722.42358398 854.06451416]
[711.29125977 864.11993408]
[699.83593750 873.80578613]
[688.06976318 883.11163330]
[676.00549316 892.02752686]
[663.65594482 900.54388428]
[651.03430176 908.65167236]
[638.15417480 916.34210205]
[625.02935791 923.60699463]
[611.67382812 930.43853760]
[598.10192871 936.82946777]
[584.32818604 942.77294922]
[570.36737061 948.26257324]
[556.23443604 953.29241943]
[541.94445801 957.85723877]
[527.51275635 961.95196533]
[512.95483398 965.57238770]
[498.28628540 968.71453857]
[483.52273560 971.37500000]
[468.68005371 973.55102539]
[453.77410889 975.24029541]
[438.82089233 976.44085693]
[423.83639526 977.15161133]
[408.83666992 977.37164307]
[393.83776855 977.10083008]
[378.85574341 976.33935547]
[363.90667725 975.08813477]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[72 113]
[73 112]
[74 111]
[80 105]
[81 104]
] def

init

% Start Annotations
73 112 0.0 1 colorpair
74 111 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
72 113 6 gmark
113 cmark
74 cmark
80 105 3 gmark
80 cmark
105 cmark
81 104 5 gmark
81 cmark

% End Annotations
showpage
end
%%EOF
