%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:29:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_______________________CAUGCUG___ACAAAAUAUGCCCUUGUGGCAGUCAUAGUGCUGUGUUUUACGGUACUGGGAUUCACGCUGAUGGUAGGAGACUCGCUGUGUGAGUUGAGUAUCAAAGAACGUGAUAUUGAGUUUAAGGCAGUUCUCGCUUACGAAUCGAAG___AAG____________\
) } def
/len { sequence length } bind def

/coor [
[101.58670807 428.36602783]
[89.51194000 428.20233154]
[77.45134735 427.59475708]
[65.42124939 426.54415894]
[53.43792343 425.05191040]
[41.51756287 423.12005615]
[29.67629814 420.75122070]
[17.93013954 417.94860840]
[6.29497433 414.71597290]
[-5.21346283 411.05770874]
[-16.57960701 406.97879028]
[-27.78808784 402.48468018]
[-38.82374573 397.58148193]
[-49.67165375 392.27584839]
[-60.31714249 386.57492065]
[-70.74581909 380.48641968]
[-80.94357300 374.01861572]
[-90.89661407 367.18020630]
[-100.59148407 359.98043823]
[-110.01507568 352.42907715]
[-119.15463257 344.53634644]
[-127.99780273 336.31286621]
[-136.53262329 327.76983643]
[-144.74755859 318.91873169]
[-152.63148499 309.77157593]
[-160.17375183 300.34069824]
[-167.36415100 290.63888550]
[-174.19296265 280.67926025]
[-180.65095520 270.47528076]
[-186.72938538 260.04074097]
[-192.42004395 249.38973999]
[-197.71520996 238.53672791]
[-202.60775757 227.49633789]
[-207.09104919 216.28353882]
[-211.15902710 204.91346741]
[-214.80618286 193.40150452]
[-218.02758789 181.76322937]
[-220.81889343 170.01437378]
[-223.17631531 158.17082214]
[-225.09666443 146.24861145]
[-226.57734680 134.26385498]
[-227.61636353 122.23274231]
[-228.21229553 110.17157745]
[-243.21180725 110.29365540]
[-258.21130371 110.41574097]
[-270.44244385 120.79739380]
[-286.15673828 117.56629944]
[-293.29956055 103.20107269]
[-286.39151001 88.72148132]
[-270.73187256 85.23503876]
[-258.33337402 95.41623688]
[-243.33387756 95.29415131]
[-228.33438110 95.17207336]
[-227.62881470 77.95164490]
[-226.02070618 60.79195404]
[-223.51448059 43.74027634]
[-220.11703491 26.84358406]
[-215.83772278 10.14842033]
[-210.68835449 -6.29922009]
[-204.68309021 -22.45402718]
[-197.83848572 -38.27149963]
[-190.17340088 -53.70806122]
[-181.70895386 -68.72118378]
[-172.46844482 -83.26952362]
[-162.47735596 -97.31298828]
[-151.76318359 -110.81288910]
[-140.35545349 -123.73204803]
[-128.28559875 -136.03486633]
[-115.58685303 -147.68746948]
[-102.29421997 -158.65773010]
[-88.44429779 -168.91545105]
[-74.07525635 -178.43235779]
[-59.22667313 -187.18223572]
[-43.93945312 -195.14099121]
[-28.25570488 -202.28669739]
[-12.21864128 -208.59965515]
[4.12756300 -214.06250000]
[20.73787689 -218.66014099]
[37.56653976 -222.37995911]
[54.56719589 -225.21166992]
[71.69300842 -227.14750671]
[88.89680481 -228.18209839]
[106.13118744 -228.31262207]
[123.34867859 -227.53872681]
[140.50184631 -225.86250305]
[142.69148254 -240.70182800]
[144.88111877 -255.54115295]
[147.07075500 -270.38046265]
[149.26039124 -285.21978760]
[135.35302734 -291.05386353]
[123.33397675 -300.16390991]
[113.95874023 -311.97729492]
[107.81666565 -325.75137329]
[105.29383850 -340.62036133]
[106.54885864 -355.64950562]
[111.50283051 -369.89413452]
[119.84433746 -382.45877075]
[131.04904175 -392.55358887]
[144.41258240 -399.54406738]
[159.09492493 -402.99072266]
[174.17312622 -402.67691040]
[188.69937134 -398.62240601]
[201.76051331 -391.08200073]
[212.53552246 -380.52975464]
[220.34706116 -367.62896729]
[224.70410156 -353.19058228]
[225.33276367 -338.12219238]
[222.19351196 -323.37106323]
[215.48368835 -309.86444092]
[205.62509155 -298.45135498]
[193.23741150 -289.84921265]
[179.09938049 -284.59881592]
[164.09971619 -283.03015137]
[161.91007996 -268.19082642]
[159.72044373 -253.35151672]
[157.53080750 -238.51219177]
[155.34117126 -223.67286682]
[172.36991882 -220.29574585]
[189.19639587 -216.02337646]
[205.77355957 -210.86770630]
[222.05506897 -204.84312439]
[237.99543762 -197.96649170]
[253.55009460 -190.25703430]
[268.67556763 -181.73626709]
[283.32958984 -172.42803955]
[297.47119141 -162.35835266]
[311.06082153 -151.55535889]
[324.06054688 -140.04925537]
[336.43399048 -127.87219238]
[348.14660645 -115.05821228]
[359.16561890 -101.64312744]
[369.46026611 -87.66443634]
[379.00173950 -73.16120911]
[387.76339722 -58.17398834]
[395.72070312 -42.74465561]
[402.85147095 -26.91634369]
[409.13574219 -10.73329258]
[414.55596924 5.75926638]
[419.09698486 22.51523399]
[422.74609375 39.48777771]
[425.49313354 56.62945557]
[427.33035278 73.89235687]
[428.25268555 91.22823334]
[428.25753784 108.58863068]
[427.34487915 125.92501831]
[425.51727295 143.18894958]
[422.77981567 160.33215332]
[419.14016724 177.30673218]
[414.60848999 194.06523132]
[409.19747925 210.56080627]
[423.20263672 215.93252563]
[437.20779419 221.30424500]
[450.79400635 213.56156921]
[466.16918945 216.41423035]
[476.07366943 228.51527405]
[475.83084106 244.15097046]
[465.55538940 255.93862915]
[450.09902954 258.31243896]
[436.75979614 250.15161133]
[431.83609009 235.30941772]
[417.83093262 229.93769836]
[403.82577515 224.56597900]
[399.04013062 235.65312195]
[393.85009766 246.55680847]
[388.26263428 257.26229858]
[382.28533936 267.75506592]
[375.92623901 278.02099609]
[369.19400024 288.04617310]
[362.09771729 297.81701660]
[354.64694214 307.32031250]
[346.85177612 316.54324341]
[338.72274780 325.47332764]
[330.27090454 334.09844971]
[321.50759888 342.40698242]
[312.44476318 350.38769531]
[303.09457397 358.02978516]
[293.46975708 365.32287598]
[283.58325195 372.25717163]
[273.44848633 378.82324219]
[263.07913208 385.01223755]
[252.48922729 390.81576538]
[241.69309998 396.22598267]
[230.70535278 401.23559570]
[219.54081726 405.83779907]
[208.21463013 410.02639771]
[196.74208069 413.79571533]
[185.13870239 417.14062500]
[173.42018127 420.05664062]
[161.60235596 422.53979492]
[149.70121765 424.58676147]
[137.73287964 426.19473267]
[125.71349335 427.36157227]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[43 53]
[44 52]
[45 51]
[85 117]
[86 116]
[87 115]
[88 114]
[89 113]
[150 162]
[151 161]
[152 160]
] def

init

% Start Annotations
45 51 0.48 0.2 colorpair
85 117 0.16 0.6 colorpair
86 116 0.0 0.6 colorpair
87 115 0.16 0.6 colorpair
89 113 0.0 0.2 colorpair
151 161 0.16 1 colorpair
152 160 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
43 53 4 gmark
43 cmark
53 cmark
44 52 3 gmark
44 cmark
52 cmark
45 51 2 gmark
45 cmark
51 cmark
85 117 1 gmark
117 cmark
86 116 1 gmark
87 115 1 gmark
87 cmark
88 114 3 gmark
88 cmark
114 cmark
89 113 2 gmark
150 162 3 gmark
162 cmark
161 cmark
152 160 1 gmark
152 cmark

% End Annotations
showpage
end
%%EOF
