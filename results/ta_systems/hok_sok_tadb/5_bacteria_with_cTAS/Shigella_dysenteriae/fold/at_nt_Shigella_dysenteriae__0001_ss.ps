%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:29:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUUGUGGCA___GUCAUAGUGCUGUGUUUUACGGUACUGGGAUUCACGCUGAUGGUAGGAGACUCGCUGUGUGAGUUGAGUAUCAAAGAACGUGAUAUGGAGUUUAAGGCAGUUCUCGCUUACGAAUCGA__AGAAGUAGCCGUCGU__GCG_GG__GAGCAAUCCCCGCGUAUCCGAUUGUGAUGUUAGGGU_GUAAUGCACCCU_CUUUUAA__________________\
) } def
/len { sequence length } bind def

/coor [
[31.64801407 503.22180176]
[18.44784546 500.76058960]
[5.33558750 497.86737061]
[-7.67462492 494.54528809]
[-20.56876564 490.79788208]
[-33.33293915 486.62918091]
[-45.95338058 482.04373169]
[-58.41648865 477.04644775]
[-70.70882416 471.64270020]
[-82.81714630 465.83834839]
[-94.72839355 459.63961792]
[-106.42972565 453.05322266]
[-117.90853119 446.08621216]
[-129.15243530 438.74615479]
[-140.14932251 431.04095459]
[-150.88734436 422.97885132]
[-161.35490417 414.56863403]
[-171.54072571 405.81927490]
[-181.43383789 396.74029541]
[-191.02357483 387.34140015]
[-200.29959106 377.63278198]
[-209.25189209 367.62487793]
[-217.87083435 357.32846069]
[-226.14710999 346.75466919]
[-234.07180786 335.91488647]
[-241.63638306 324.82077026]
[-248.83268738 313.48431396]
[-255.65296936 301.91772461]
[-262.08984375 290.13348389]
[-268.13641357 278.14428711]
[-273.78613281 265.96304321]
[-279.03292847 253.60290527]
[-283.87112427 241.07717896]
[-288.29550171 228.39936829]
[-292.30133057 215.58316040]
[-295.88427734 202.64234924]
[-299.04043579 189.59088135]
[-301.76647949 176.44285583]
[-304.05938721 163.21241760]
[-305.91674805 149.91383362]
[-307.33654785 136.56146240]
[-308.31723022 123.16966248]
[-308.85778809 109.75289154]
[-308.95758057 96.32559967]
[-308.61654663 82.90227509]
[-323.58938599 82.00045013]
[-338.56225586 81.09861755]
[-353.53512573 80.19679260]
[-368.50799561 79.29496765]
[-383.48086548 78.39313507]
[-398.45373535 77.49131012]
[-403.75479126 91.64723206]
[-412.99417114 103.61071777]
[-425.35034180 112.31798553]
[-439.72460938 116.99477386]
[-454.83877563 117.22524261]
[-469.34893799 112.98889923]
[-481.96484375 104.66242218]
[-491.56469727 92.98620605]
[-497.29492188 78.99848938]
[-498.64593506 63.94305801]
[-495.49761963 49.15861893]
[-488.12997437 35.95980072]
[-477.19805908 25.52023125]
[-463.67395020 18.76819038]
[-448.76019287 16.30406761]
[-433.78295898 18.34696770]
[-420.07397461 24.71524048]
[-408.85220337 34.84262085]
[-401.11553955 47.82859039]
[-397.55191040 62.51844406]
[-382.57904053 63.42027283]
[-367.60617065 64.32209778]
[-352.63330078 65.22393036]
[-337.66043091 66.12575531]
[-322.68756104 67.02758026]
[-307.71469116 67.92941284]
[-305.93685913 50.25000763]
[-303.39279175 32.66450882]
[-300.08724976 15.20611668]
[-296.02648926 -2.09221888]
[-291.21820068 -19.19784355]
[-285.67144775 -36.07846832]
[-279.39666748 -52.70222855]
[-272.40576172 -69.03775024]
[-264.71188354 -85.05418396]
[-256.32955933 -100.72131348]
[-247.27464294 -116.00955963]
[-237.56419373 -130.89006042]
[-227.21655273 -145.33473206]
[-216.25125122 -159.31629944]
[-204.68899536 -172.80838013]
[-192.55160522 -185.78550720]
[-179.86199951 -198.22319031]
[-166.64410400 -210.09793091]
[-152.92289734 -221.38732910]
[-138.72425842 -232.07006836]
[-124.07501221 -242.12599182]
[-109.00279999 -251.53610229]
[-93.53606415 -260.28265381]
[-77.70401001 -268.34915161]
[-61.53651428 -275.72030640]
[-45.06410217 -282.38229370]
[-28.31786728 -288.32244873]
[-11.32941532 -293.52963257]
[5.86918259 -297.99395752]
[23.24546432 -301.70703125]
[40.76662827 -304.66183472]
[58.39960098 -306.85281372]
[76.11109924 -308.27578735]
[75.50968170 -323.26373291]
[74.90825653 -338.25167847]
[62.42596817 -347.67114258]
[58.96909714 -362.92184448]
[66.16987610 -376.80288696]
[80.62831116 -382.76000977]
[95.51757812 -377.98049927]
[103.80741882 -364.72106934]
[101.58361816 -349.24243164]
[89.89619446 -338.85308838]
[90.49761963 -323.86514282]
[91.09903717 -308.87722778]
[107.36448669 -308.90777588]
[123.61828613 -308.29153442]
[139.83471680 -307.02947998]
[155.98815918 -305.12359619]
[172.05302429 -302.57690430]
[188.00392151 -299.39343262]
[203.81561279 -295.57821655]
[219.46310425 -291.13726807]
[234.92163086 -286.07766724]
[250.16673279 -280.40734863]
[265.17431641 -274.13534546]
[279.92062378 -267.27151489]
[294.38235474 -259.82678223]
[308.53662109 -251.81286621]
[322.36099243 -243.24246216]
[335.83367920 -234.12913513]
[348.93331909 -224.48728943]
[361.63922119 -214.33219910]
[373.93124390 -203.67988586]
[385.78997803 -192.54724121]
[397.19668579 -180.95184326]
[408.13327026 -168.91204834]
[418.58245850 -156.44689941]
[428.52774048 -143.57611084]
[437.95336914 -130.32005310]
[446.84442139 -116.69966888]
[455.18685913 -102.73651886]
[462.96746826 -88.45269012]
[470.17395020 -73.87077332]
[476.79492188 -59.01383591]
[490.71929932 -64.59159088]
[496.49557495 -76.11188507]
[508.19494629 -80.47573853]
[519.36395264 -75.85746765]
[533.36163330 -81.24858856]
[537.78875732 -86.12289429]
[543.19934082 -87.79186249]
[547.80627441 -86.59121704]
[554.37512207 -100.96570587]
[569.21325684 -106.40676880]
[583.51751709 -99.68631744]
[588.80139160 -84.79148102]
[581.93005371 -70.55909729]
[566.98022461 -65.43299103]
[552.82128906 -72.45439148]
[538.75274658 -67.25087738]
[524.75506592 -61.85976028]
[514.46740723 -47.63375854]
[496.29705811 -50.66720200]
[482.37268066 -45.08944702]
[486.92959595 -32.45867157]
[491.06939697 -19.68511009]
[494.78765869 -6.78253126]
[498.08035278 6.23515701]
[500.94390869 19.35392189]
[503.37524414 32.55961990]
[505.37179565 45.83801651]
[506.93133545 59.17480087]
[508.05221558 72.55559540]
[508.73321533 85.96597290]
[508.97363281 99.39147186]
[508.77319336 112.81763458]
[508.13208008 126.22998047]
[507.05102539 139.61404419]
[505.53115845 152.95541382]
[503.57415771 166.23968506]
[501.18212891 179.45256042]
[498.35760498 192.57978821]
[495.10366821 205.60722351]
[491.42382812 218.52081299]
[487.32205200 231.30664062]
[482.80273438 243.95091248]
[477.87078857 256.44003296]
[472.53146362 268.76049805]
[466.79058838 280.89901733]
[460.65432739 292.84255981]
[454.12927246 304.57821655]
[447.22250366 316.09335327]
[439.94140625 327.37554932]
[432.29388428 338.41262817]
[424.28814697 349.19271851]
[415.93283081 359.70416260]
[407.23693848 369.93566895]
[398.20986938 379.87619019]
[388.86132812 389.51501465]
[379.20141602 398.84173584]
[369.24050903 407.84631348]
[358.98937988 416.51904297]
[348.45907593 424.85058594]
[337.66091919 432.83193970]
[326.60656738 440.45449829]
[315.30795288 447.71005249]
[303.77725220 454.59078979]
[292.02685547 461.08929443]
[280.06948853 467.19854736]
[267.91799927 472.91198730]
[255.58549500 478.22341919]
[243.08526611 483.12713623]
[230.43080139 487.61785889]
[217.63574219 491.69073486]
[204.71386719 495.34136963]
[191.67912292 498.56585693]
[178.54554749 501.36068726]
[165.32730103 503.72286987]
[152.03862000 505.64984131]
[138.69386292 507.13952637]
[125.30738068 508.19033813]
[111.89362335 508.80111694]
[98.46704102 508.97122192]
[85.04211426 508.70046997]
[71.63331604 507.98913574]
[58.25508881 506.83801270]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[45 77]
[46 76]
[47 75]
[48 74]
[49 73]
[50 72]
[51 71]
[110 122]
[111 121]
[112 120]
[152 172]
[153 171]
[156 169]
[157 168]
[160 167]
] def

init

% Start Annotations
45 77 0.16 0.2 colorpair
46 76 0.0 0.2 colorpair
47 75 0.16 0.2 colorpair
49 73 0.0 0.2 colorpair
111 121 0.16 1 colorpair
112 120 0.16 0.6 colorpair
152 172 0.0 0.2 colorpair
156 169 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
45 77 2 gmark
77 cmark
46 76 2 gmark
47 75 2 gmark
47 cmark
48 74 4 gmark
48 cmark
74 cmark
49 73 2 gmark
50 72 5 gmark
50 cmark
51 71 4 gmark
51 cmark
110 122 4 gmark
122 cmark
121 cmark
112 120 1 gmark
112 cmark
152 172 2 gmark
153 171 4 gmark
153 cmark
171 cmark
156 169 2 gmark
157 168 3 gmark
160 167 7 gmark
160 cmark
167 cmark

% End Annotations
showpage
end
%%EOF
