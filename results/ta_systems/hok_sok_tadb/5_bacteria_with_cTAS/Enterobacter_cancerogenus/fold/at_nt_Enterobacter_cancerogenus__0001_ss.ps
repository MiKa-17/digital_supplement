%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:22:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUGCUGUUAGGUUUGUUUUUGAUCUGUACGACGCUGUUGAUCUUCACCUGGAUGGUGCGCGAUUCGCUAUGUGAAUUGCAUUUCAGACAGGAGAAAACAGAGCUGGCGGCAGUGUUGGCUUACGAAGCAAAACGUUAGCGGUAUUGGCGGGGGAAGUGUCCCCGCCUCUCCAGAGUGGUUGAGCCUCAACGCACCCUUAUCAAUGGCCCGCAUU\
) } def
/len { sequence length } bind def

/coor [
[488.54486084 184.05221558]
[486.26721191 169.22615051]
[496.32928467 158.10090637]
[481.44271851 156.25970459]
[466.55615234 154.41848755]
[451.66958618 152.57727051]
[436.78302002 150.73606873]
[421.89645386 148.89485168]
[407.00988770 147.05364990]
[392.12332153 145.21243286]
[377.23675537 143.37121582]
[362.35018921 141.53001404]
[348.76940918 147.64656067]
[336.02334595 138.27383423]
[321.13674927 136.43261719]
[306.25018311 134.59141541]
[291.36361694 132.75019836]
[276.47705078 130.90898132]
[261.59048462 129.06777954]
[246.70391846 127.22656250]
[231.81735229 125.38535309]
[216.93078613 123.54414368]
[207.20509338 130.73228455]
[194.79032898 129.32316589]
[186.40083313 119.53015137]
[171.54248047 117.47361755]
[156.68412781 115.41709137]
[141.82577515 113.36055756]
[126.96742249 111.30403137]
[114.27603912 141.02053833]
[72.16777802 150.45994568]
[59.21374130 158.02255249]
[46.25970459 165.58515930]
[33.30566788 173.14775085]
[22.67535782 186.35505676]
[7.04143858 179.79632568]
[9.01594925 162.95774841]
[25.74306679 160.19372559]
[38.69710159 152.63111877]
[51.65113831 145.06851196]
[64.60517883 137.50592041]
[62.51586914 130.30281067]
[48.10964966 134.48141479]
[33.54411697 130.89738464]
[43.93103790 120.07519531]
[58.33726120 115.89658356]
[56.24795532 108.69347382]
[41.25777817 109.23625946]
[26.26760292 109.77903748]
[11.27742672 110.32182312]
[-0.65768212 121.04248810]
[-16.45644569 118.25347137]
[-23.99940300 104.09425354]
[-17.50024605 89.42658997]
[-1.94456875 85.50224304]
[10.73464298 95.33164978]
[25.72481918 94.78886414]
[40.71499634 94.24607849]
[55.70517349 93.70329285]
[59.04312515 79.07872772]
[62.38079834 64.45545959]
[49.11062241 57.46243286]
[35.84044647 50.46940994]
[22.57026863 43.47638321]
[9.30009079 36.48336029]
[-3.97008657 29.49033546]
[-17.24026299 22.49731064]
[-30.51044083 15.50428581]
[-43.78061676 8.51126099]
[-60.61197281 6.47609758]
[-63.31572723 -10.26086903]
[-47.98131943 -17.49221230]
[-36.78759384 -4.75891638]
[-23.51741600 2.23410821]
[-10.24723911 9.22713280]
[3.02293825 16.22015762]
[16.29311562 23.21318245]
[29.56329346 30.20620728]
[42.83346939 37.19923019]
[56.10364914 44.19225693]
[69.37382507 51.18527985]
[83.54600525 48.48545456]
[97.07062531 49.55474472]
[109.01837158 53.89168549]
[118.66935730 60.78335190]
[125.55643463 69.37774658]
[129.48580933 78.76361847]
[130.53424072 88.05094147]
[129.02394104 96.44567871]
[143.88230896 98.50220490]
[158.74066162 100.55873871]
[173.59901428 102.61526489]
[188.45736694 104.67179871]
[205.35339355 97.34497070]
[218.77198792 108.65756989]
[233.65855408 110.49878693]
[248.54513550 112.33999634]
[263.43170166 114.18120575]
[278.31826782 116.02241516]
[293.20483398 117.86363220]
[308.09140015 119.70484161]
[322.97796631 121.54605103]
[337.86453247 123.38726044]
[352.51010132 117.40241241]
[364.19137573 126.64344025]
[379.07794189 128.48464966]
[393.96453857 130.32586670]
[408.85110474 132.16706848]
[423.73767090 134.00828552]
[438.62423706 135.84950256]
[453.51080322 137.69070435]
[468.39736938 139.53192139]
[483.28393555 141.37313843]
[498.17050171 143.21434021]
[513.11395264 144.51567078]
[528.09472656 145.27540588]
[543.07543945 146.03514099]
[557.24981689 139.00674438]
[569.56884766 147.37873840]
[584.54962158 148.13847351]
[599.53033447 148.89820862]
[614.51110840 149.65794373]
[624.28735352 137.75285339]
[639.02679443 133.93173218]
[653.02447510 139.45710754]
[660.98913574 152.01504517]
[675.96990967 152.77478027]
[689.54962158 129.82142639]
[722.32525635 126.72759247]
[732.73822021 115.93079376]
[729.08660889 100.94181061]
[734.14001465 86.36556244]
[746.28576660 76.85327148]
[761.64831543 75.44028473]
[775.32543945 82.57746887]
[782.95288086 95.98738861]
[782.09667969 111.39097595]
[773.03015137 123.87300873]
[758.64630127 129.45051575]
[743.53497314 126.34372711]
[733.12207031 137.14051819]
[740.01885986 150.46096802]
[754.84588623 148.18955994]
[760.23535156 135.50593567]
[771.10131836 127.20651245]
[784.54156494 125.37344360]
[797.03222656 130.37942505]
[805.35156250 140.81806946]
[820.20989990 138.76153564]
[835.06823730 136.70500183]
[849.92657471 134.64846802]
[864.78497314 132.59194946]
[879.64331055 130.53541565]
[894.50164795 128.47888184]
[909.35998535 126.42235565]
[920.14929199 114.54923248]
[936.14916992 115.72561646]
[945.08587646 129.04907227]
[940.10394287 144.29899597]
[925.02514648 149.77694702]
[911.41656494 141.28071594]
[896.55816650 143.33723450]
[881.69982910 145.39376831]
[866.84149170 147.45030212]
[851.98315430 149.50682068]
[837.12475586 151.56335449]
[822.26641846 153.61988831]
[807.40808105 155.67642212]
[800.13696289 170.39633179]
[785.37615967 177.95603943]
[768.85430908 175.19897461]
[757.11730957 163.01658630]
[742.29028320 165.28799438]
[738.32067871 179.75320435]
[749.91149902 189.27435303]
[765.48638916 192.05511475]
[770.40985107 206.11245728]
[782.00073242 215.63360596]
[793.59155273 225.15473938]
[805.25103760 234.59173584]
[816.97851562 243.94407654]
[828.70599365 253.29643250]
[840.43347168 262.64877319]
[852.16094971 272.00112915]
[868.31427002 277.14944458]
[867.83886719 294.09671021]
[851.42230225 298.33135986]
[842.80859375 283.72860718]
[831.08111572 274.37625122]
[819.35363770 265.02389526]
[807.62615967 255.67155457]
[795.89868164 246.31921387]
[788.71252441 244.60717773]
[784.07043457 236.74559021]
[772.47955322 227.22445679]
[760.88873291 217.70330811]
[746.14288330 215.60354614]
[740.39038086 200.86520386]
[728.79949951 191.34405518]
[702.83068848 197.53378296]
[682.17272949 186.58926392]
[675.21014404 167.75553894]
[660.22943115 166.99580383]
[651.03509521 178.68353271]
[636.55029297 182.76443481]
[622.27301025 177.47175598]
[613.75134277 164.63870239]
[598.77062988 163.87896729]
[583.78985596 163.11921692]
[568.80908203 162.35948181]
[555.70629883 169.44223022]
[542.31573486 161.01588440]
[527.33496094 160.25614929]
[512.35418701 159.49641418]
[520.34167480 172.19287109]
[515.53607178 186.40222168]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 114]
[4 113]
[5 112]
[6 111]
[7 110]
[8 109]
[9 108]
[10 107]
[11 106]
[12 105]
[14 103]
[15 102]
[16 101]
[17 100]
[18 99]
[19 98]
[20 97]
[21 96]
[22 95]
[25 93]
[26 92]
[27 91]
[28 90]
[29 89]
[31 41]
[32 40]
[33 39]
[34 38]
[47 59]
[48 58]
[49 57]
[50 56]
[61 81]
[62 80]
[63 79]
[64 78]
[65 77]
[66 76]
[67 75]
[68 74]
[69 73]
[115 214]
[116 213]
[117 212]
[119 210]
[120 209]
[121 208]
[122 207]
[126 203]
[127 202]
[129 141]
[130 140]
[142 173]
[143 172]
[148 168]
[149 167]
[150 166]
[151 165]
[152 164]
[153 163]
[154 162]
[155 161]
[174 199]
[175 198]
[177 196]
[178 195]
[179 194]
[180 192]
[181 191]
[182 190]
[183 189]
[184 188]
] def

init

% Start Annotations
3 114 0.0 1 colorpair
4 113 0.0 1 colorpair
5 112 0.0 1 colorpair
6 111 0.0 1 colorpair
7 110 0.0 1 colorpair
8 109 0.0 1 colorpair
9 108 0.0 1 colorpair
10 107 0.0 1 colorpair
11 106 0.0 1 colorpair
12 105 0.0 1 colorpair
14 103 0.0 1 colorpair
15 102 0.0 1 colorpair
16 101 0.0 1 colorpair
17 100 0.0 1 colorpair
18 99 0.0 1 colorpair
19 98 0.0 1 colorpair
20 97 0.0 1 colorpair
21 96 0.0 1 colorpair
22 95 0.0 1 colorpair
25 93 0.0 1 colorpair
26 92 0.0 1 colorpair
27 91 0.0 1 colorpair
28 90 0.0 1 colorpair
29 89 0.0 1 colorpair
31 41 0.0 1 colorpair
32 40 0.0 1 colorpair
33 39 0.0 1 colorpair
34 38 0.0 1 colorpair
47 59 0.0 1 colorpair
48 58 0.0 1 colorpair
49 57 0.0 1 colorpair
50 56 0.0 1 colorpair
61 81 0.0 1 colorpair
62 80 0.0 1 colorpair
63 79 0.0 1 colorpair
64 78 0.0 1 colorpair
65 77 0.0 1 colorpair
66 76 0.0 1 colorpair
67 75 0.0 1 colorpair
68 74 0.0 1 colorpair
69 73 0.0 1 colorpair
115 214 0.0 1 colorpair
116 213 0.0 1 colorpair
117 212 0.0 1 colorpair
119 210 0.0 1 colorpair
120 209 0.0 1 colorpair
121 208 0.0 1 colorpair
122 207 0.0 1 colorpair
126 203 0.0 1 colorpair
127 202 0.0 1 colorpair
129 141 0.0 1 colorpair
130 140 0.0 1 colorpair
142 173 0.0 1 colorpair
143 172 0.0 1 colorpair
148 168 0.0 1 colorpair
149 167 0.0 1 colorpair
150 166 0.0 1 colorpair
151 165 0.0 1 colorpair
152 164 0.0 1 colorpair
153 163 0.0 1 colorpair
154 162 0.0 1 colorpair
155 161 0.0 1 colorpair
174 199 0.0 1 colorpair
175 198 0.0 1 colorpair
177 196 0.0 1 colorpair
178 195 0.0 1 colorpair
179 194 0.0 1 colorpair
180 192 0.0 1 colorpair
181 191 0.0 1 colorpair
182 190 0.0 1 colorpair
183 189 0.0 1 colorpair
184 188 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
