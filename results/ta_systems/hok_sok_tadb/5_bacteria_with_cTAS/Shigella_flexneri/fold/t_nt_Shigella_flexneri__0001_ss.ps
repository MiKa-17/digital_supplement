%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:33:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_GUAAGAGGCUAACCUGAAGGUGUUCAG_CAUA_GAGUGAGCCUCA__GAUUAAUGAAAA_GUAACUU_C_ACGGGGCUUACUGCUAUCUGCCGCAUUUCACUA__UACCAUUCCAUCUUCAUGCC_UGAGACAGAAAGCCUCAAGCACCCG__________\
) } def
/len { sequence length } bind def

/coor [
[88.94729614 141.92413330]
[101.45198059 133.38529968]
[97.45346832 118.92806244]
[84.89947510 111.69317627]
[81.03703308 97.72794342]
[88.08929443 85.07045746]
[84.09077454 70.61321259]
[80.09226227 56.15596771]
[76.09375000 41.69872665]
[72.09523773 27.24148178]
[68.09671783 12.78423977]
[53.45774841 16.06929016]
[38.67522049 18.63208199]
[23.78474808 20.46644211]
[8.82220364 21.56795120]
[-6.17636633 21.93395424]
[-21.17482758 21.56357002]
[-36.13705063 20.45769119]
[-51.02698517 18.61898232]
[-65.80876160 16.05187225]
[-80.44677734 12.76254654]
[-94.90575409 8.75892830]
[-109.15087128 4.05066252]
[-123.14780426 -1.35090733]
[-136.86282349 -7.43276882]
[-150.26290894 -14.18027020]
[-163.31578064 -21.57715607]
[-175.98995972 -29.60560608]
[-188.25494385 -38.24628067]
[-200.08117676 -47.47835922]
[-211.44017029 -57.27960587]
[-222.30455017 -67.62640381]
[-232.64814758 -78.49383545]
[-242.44604492 -89.85570526]
[-251.67463684 -101.68466187]
[-260.31170654 -113.95218658]
[-268.33642578 -126.62873840]
[-275.72946167 -139.68377686]
[-282.47302246 -153.08584595]
[-288.55084229 -166.80267334]
[-293.94827271 -180.80119324]
[-298.65234375 -195.04768372]
[-302.65170288 -209.50784302]
[-305.93673706 -224.14682007]
[-308.49948120 -238.92936707]
[-310.33380127 -253.81983948]
[-311.43527222 -268.78237915]
[-311.80123901 -283.78094482]
[-311.43081665 -298.77941895]
[-310.32489014 -313.74163818]
[-308.48614502 -328.63156128]
[-305.91900635 -343.41333008]
[-302.62963867 -358.05133057]
[-298.62600708 -372.51031494]
[-293.91769409 -386.75540161]
[-288.51608276 -400.75231934]
[-282.43420410 -414.46734619]
[-275.68664551 -427.86740112]
[-268.28973389 -440.92025757]
[-260.26126099 -453.59442139]
[-251.62055969 -465.85937500]
[-242.38844299 -477.68560791]
[-232.58717346 -489.04455566]
[-222.24034119 -499.90890503]
[-211.37289429 -510.25247192]
[-200.01098633 -520.05035400]
[-188.18202209 -529.27893066]
[-175.91447449 -537.91595459]
[-163.23789978 -545.94061279]
[-150.18284607 -553.33361816]
[-136.78074646 -560.07714844]
[-123.06391907 -566.15496826]
[-109.06538391 -571.55236816]
[-94.81887054 -576.25640869]
[-80.35870361 -580.25573730]
[-65.71971130 -583.54071045]
[-50.93717194 -586.10339355]
[-36.04669189 -587.93768311]
[-21.08414268 -589.03912354]
[-6.08557081 -589.40509033]
[8.91288948 -589.03460693]
[23.87510490 -587.92864990]
[38.76503372 -586.08990479]
[53.54679871 -583.52270508]
[68.18479156 -580.23327637]
[82.64375305 -576.22961426]
[96.88884735 -571.52124023]
[110.88574982 -566.11962891]
[124.60074615 -560.03771973]
[138.00079346 -553.29016113]
[151.05361938 -545.89318848]
[163.72776794 -537.86468506]
[175.99270630 -529.22393799]
[187.81889343 -519.99182129]
[199.17784119 -510.19049072]
[210.04216003 -499.84362793]
[220.38571167 -488.97616577]
[230.18354797 -477.61422729]
[239.41209412 -465.78524780]
[248.04908752 -453.51766968]
[256.07373047 -440.84106445]
[263.46670532 -427.78601074]
[270.21020508 -414.38391113]
[276.28796387 -400.66705322]
[281.68533325 -386.66848755]
[286.38934326 -372.42196655]
[290.38861084 -357.96179199]
[293.67355347 -343.32281494]
[296.23623657 -328.54025269]
[298.07049561 -313.64978027]
[299.17190552 -298.68722534]
[299.53778076 -283.68862915]
[299.16729736 -268.69018555]
[298.06130981 -253.72796631]
[296.22247314 -238.83804321]
[293.65527344 -224.05628967]
[290.36581421 -209.41830444]
[286.36209106 -194.95935059]
[281.65371704 -180.71427917]
[276.25204468 -166.71737671]
[270.17007446 -153.00239563]
[263.42248535 -139.60235596]
[256.02551270 -126.54956055]
[247.99696350 -113.87542725]
[239.35620117 -101.61051178]
[230.12402344 -89.78434753]
[220.32269287 -78.42543793]
[209.97581482 -67.56113434]
[199.10830688 -57.21761322]
[187.74636841 -47.41979599]
[175.91734314 -38.19128799]
[163.64974976 -29.55431938]
[150.97314453 -21.52969742]
[137.91804504 -14.13675404]
[124.51592255 -7.39330006]
[110.79905701 -1.31558096]
[96.80049896 4.08176136]
[82.55396271 8.78572464]
[86.55247498 23.24296761]
[90.55099487 37.70021057]
[94.54950714 52.15745544]
[98.54801941 66.61470032]
[102.54653168 81.07193756]
[115.10052490 88.30682373]
[118.96296692 102.27205658]
[111.91070557 114.92954254]
[115.90922546 129.38679504]
[131.02441406 130.28665161]
[145.02748108 136.04795837]
[156.39949036 146.04577637]
[163.90687561 159.19558716]
[166.73530579 174.07102966]
[164.57797241 189.05851746]
[157.66886902 202.53230286]
[146.75746155 213.03088379]
[133.02734375 219.41542053]
[117.96783447 220.99337769]
[103.21248627 217.59359741]
[90.36185455 209.58485413]
[80.80987549 197.83587646]
[75.59267426 183.62110901]
[75.27617645 168.48246765]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 147]
[3 146]
[6 143]
[7 142]
[8 141]
[9 140]
[10 139]
[11 138]
] def

init

% Start Annotations
2 147 0.0 1 colorpair
3 146 0.0 1 colorpair
6 143 0.0 1 colorpair
7 142 0.0 1 colorpair
8 141 0.0 1 colorpair
9 140 0.16 1 colorpair
10 139 0.0 1 colorpair
11 138 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
140 cmark
11 138 1 gmark

% End Annotations
showpage
end
%%EOF
