%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:33:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_GUAAGAGGCUAACCUACAUGUGUUCAG_CAUG_GAUUGAGCCUCA__GAUUAAUGUUAAGCGUCUUGC_AGGACGCGUAAUGUUAACUGGGGCUUUUCUCUAUCUGCCUUUUGGUGUUCAUGCCUGAGACAGAUAGCCUCAAGCACCCG__________\
) } def
/len { sequence length } bind def

/coor [
[165.86448669 415.98022461]
[178.34046936 407.39950562]
[174.29351807 392.95574951]
[161.22505188 385.90234375]
[156.91510010 371.31198120]
[164.40197754 357.65237427]
[160.35502625 343.20861816]
[156.30807495 328.76486206]
[152.26112366 314.32110596]
[148.21417236 299.87734985]
[134.98979187 302.61114502]
[121.61449432 304.47094727]
[108.14595032 305.44876099]
[94.64227295 305.54037476]
[81.16170502 304.74539185]
[67.76239777 303.06719971]
[54.50215149 300.51309204]
[41.43815994 297.09405518]
[28.62677765 292.82482910]
[16.12326813 287.72387695]
[3.98156428 281.81314087]
[-7.74595928 275.11813354]
[-19.00871468 267.66778564]
[-29.75812149 259.49417114]
[-39.94780731 250.63255310]
[-49.53382492 241.12120056]
[-58.47481918 231.00109863]
[-66.73222351 220.31591797]
[-74.27042389 209.11175537]
[-81.05689240 197.43693542]
[-87.06237030 185.34181213]
[-92.26094055 172.87857056]
[-96.63018799 160.10095215]
[-100.15126038 147.06408691]
[-102.80896759 133.82421875]
[-104.59185028 120.43843842]
[-105.49221802 106.96450043]
[-105.50617981 93.46051788]
[-120.47121429 92.43688202]
[-135.43624878 91.41324615]
[-151.65107727 96.36458588]
[-160.89762878 82.15411377]
[-149.80220032 69.33506775]
[-134.41261292 76.44821167]
[-119.44757843 77.47184753]
[-104.48254395 78.49548340]
[-100.89553833 56.22170258]
[-94.88979340 34.47500229]
[-86.53761292 13.51720619]
[-75.93957520 -6.39935684]
[-63.22325516 -25.03489494]
[-48.54176712 -42.16504288]
[-32.07186890 -57.58355713]
[-14.01185894 -71.10479736]
[5.42082930 -82.56597900]
[25.99222946 -91.82910919]
[21.10716820 -106.01135254]
[16.22210884 -120.19360352]
[11.33704948 -134.37585449]
[-3.65812659 -132.87872314]
[-18.59428787 -134.88066101]
[-32.66594696 -140.27372742]
[-45.11423874 -148.76707458]
[-55.26783752 -159.90264893]
[-62.57917404 -173.07994080]
[-66.65396118 -187.58831787]
[-67.27244568 -202.64533997]
[-64.40127563 -217.43902588]
[-58.19529343 -231.17155457]
[-48.98917389 -243.10237122]
[-37.27939224 -252.58802795]
[-23.69744492 -259.11700439]
[-8.97578812 -262.33715820]
[6.09165812 -262.07489014]
[20.69232559 -258.34429932]
[34.03881836 -251.34660339]
[45.41137314 -241.45915222]
[54.19668961 -229.21517944]
[59.92098236 -215.27497864]
[62.27554703 -200.39033508]
[61.13340759 -185.36395264]
[56.55615616 -171.00617981]
[48.79063797 -158.09132385]
[38.25564194 -147.31587219]
[25.51929855 -139.26091003]
[30.40435791 -125.07866669]
[35.28941727 -110.89641571]
[40.17447662 -96.71416473]
[52.84197617 -100.12915039]
[65.70147705 -102.72929382]
[78.70063019 -104.50401306]
[91.78650665 -105.44608307]
[104.90582275 -105.55166626]
[118.00515747 -104.82033539]
[131.03118896 -103.25506592]
[143.93087769 -100.86222839]
[156.65170288 -97.65156555]
[169.14186096 -93.63615417]
[181.35049438 -88.83233643]
[193.22792053 -83.25968170]
[204.72575378 -76.94087219]
[215.79719543 -69.90163422]
[226.39715576 -62.17063522]
[236.48248291 -53.77934647]
[246.01211548 -44.76193619]
[254.94725037 -35.15511703]
[263.25149536 -24.99800491]
[270.89108276 -14.33195591]
[277.83483887 -3.20039797]
[284.05456543 8.35134697]
[289.52487183 20.27624512]
[294.22354126 32.52574539]
[298.13140869 45.04996872]
[301.23254395 57.79792404]
[303.51437378 70.71771240]
[304.96759033 83.75672150]
[305.58624268 96.86186981]
[305.36785889 109.97978973]
[304.31329346 123.05707550]
[302.42687988 136.04049683]
[299.71624756 148.87716675]
[296.19247437 161.51481628]
[291.86987305 173.90202332]
[286.76605225 185.98832703]
[280.90182495 197.72453308]
[274.30105591 209.06283569]
[266.99057007 219.95709229]
[259.00021362 230.36293030]
[250.36244202 240.23797607]
[241.11247253 249.54205322]
[231.28796387 258.23724365]
[220.92889404 266.28817749]
[210.07746887 273.66204834]
[198.77784729 280.32885742]
[187.07604980 286.26141357]
[175.01971436 291.43563843]
[162.65792847 295.83038330]
[166.70487976 310.27413940]
[170.75183105 324.71789551]
[174.79878235 339.16165161]
[178.84573364 353.60540771]
[192.33996582 361.38638306]
[196.23840332 376.09207153]
[188.73727417 388.90881348]
[192.78422546 403.35256958]
[207.90235901 404.20175171]
[221.92465210 409.91610718]
[233.33010864 419.87573242]
[240.88153076 433.00030518]
[243.75981140 447.86618042]
[241.65272522 462.86080933]
[234.78881836 476.35769653]
[223.91267395 486.89279175]
[210.20402527 493.32330322]
[195.14988708 494.95172119]
[180.38322449 491.60144043]
[167.50582886 483.63580322]
[157.91452026 471.91891479]
[152.64970398 457.72171021]
[152.28245544 442.58422852]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 145]
[3 144]
[6 141]
[7 140]
[8 139]
[9 138]
[10 137]
[38 46]
[39 45]
[40 44]
[56 88]
[57 87]
[58 86]
[59 85]
] def

init

% Start Annotations
2 145 0.0 0.6 colorpair
3 144 0.0 0.6 colorpair
6 141 0.0 0.6 colorpair
7 140 0.0 0.6 colorpair
8 139 0.0 0.6 colorpair
9 138 0.16 0.6 colorpair
10 137 0.0 0.6 colorpair
38 46 0.16 0.2 colorpair
40 44 0.32 0.2 colorpair
56 88 0.32 1 colorpair
57 87 0.32 1 colorpair
58 86 0.16 0.6 colorpair
59 85 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
2 145 1 gmark
3 144 1 gmark
6 141 1 gmark
7 140 1 gmark
8 139 1 gmark
9 138 1 gmark
138 cmark
10 137 1 gmark
38 46 2 gmark
46 cmark
39 45 5 gmark
45 cmark
40 44 2 gmark
40 cmark
44 cmark
56 cmark
88 cmark
57 cmark
87 cmark
58 86 1 gmark
58 cmark
86 cmark
59 85 1 gmark

% End Annotations
showpage
end
%%EOF
