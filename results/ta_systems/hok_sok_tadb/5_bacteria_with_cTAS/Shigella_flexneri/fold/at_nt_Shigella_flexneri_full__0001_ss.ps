%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:33:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__CCCUUGUGGCAU___UCAUCGUGAUGUGUUUUACGGUUCUGGUAUUCACGCUGCUGACCGGAGACUCGCUGUGUGAGUUGCGUAUCAGAGAAGGUAAUAUGGAGUUUGCGGCGGUUCUAGCUUACGAAUCGAA___GAAGUA_GCCACCGUGCG_GGGGGAAAACCCCGCGUAUCCGG___UUGUG__GGUCAGGCUUCCUCGACGCAUC_____UUUA__A____________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50442505 92.10067749]
[62.52479553 91.30231476]
[47.57172775 90.10546112]
[32.65582275 88.51097870]
[17.78764534 86.51998138]
[2.97773957 84.13390350]
[-11.76339817 81.35441589]
[-26.42532158 78.18350220]
[-40.99763489 74.62339783]
[-55.47001648 70.67663574]
[-69.83219910 66.34600830]
[-84.07401276 61.63459015]
[-98.18535614 56.54571533]
[-112.15623474 51.08299255]
[-125.97673798 45.25029373]
[-139.63706970 39.05175400]
[-153.12756348 32.49176407]
[-166.43862915 25.57497597]
[-179.56086731 18.30628967]
[-192.48493958 10.69085979]
[-205.20172119 2.73408246]
[-217.70217896 -5.55840206]
[-229.97744751 -14.18071651]
[-242.01884460 -23.12675095]
[-253.81782532 -32.39016342]
[-265.36602783 -41.96438599]
[-276.65527344 -51.84263611]
[-287.67752075 -62.01791000]
[-298.42501831 -72.48299408]
[-308.89013672 -83.23047638]
[-319.06542969 -94.25273895]
[-328.94369507 -105.54196167]
[-338.51791382 -117.09015656]
[-347.78134155 -128.88911438]
[-356.72738647 -140.93051147]
[-365.34973145 -153.20576477]
[-373.64221191 -165.70622253]
[-381.59899902 -178.42298889]
[-389.21444702 -191.34706116]
[-396.48315430 -204.46928406]
[-403.39996338 -217.78034973]
[-409.95996094 -231.27082825]
[-416.15853882 -244.93115234]
[-421.99124146 -258.75164795]
[-427.45397949 -272.72250366]
[-432.54287720 -286.83386230]
[-437.25430298 -301.07565308]
[-441.58496094 -315.43783569]
[-445.53173828 -329.91021729]
[-449.09185791 -344.48251343]
[-452.26278687 -359.14443970]
[-455.04229736 -373.88558960]
[-457.42837524 -388.69549561]
[-459.41940308 -403.56365967]
[-461.01388550 -418.47955322]
[-462.21075439 -433.43261719]
[-463.00915527 -448.41226196]
[-463.40847778 -463.40783691]
[-463.40850830 -478.40872192]
[-463.00915527 -493.40429688]
[-462.21078491 -508.38391113]
[-461.01394653 -523.33697510]
[-459.41943359 -538.25286865]
[-457.42846680 -553.12109375]
[-455.04235840 -567.93096924]
[-452.26287842 -582.67211914]
[-449.09194946 -597.33404541]
[-445.53182983 -611.90637207]
[-441.58508301 -626.37872314]
[-437.25445557 -640.74090576]
[-432.54302979 -654.98272705]
[-427.45413208 -669.09405518]
[-421.99142456 -683.06494141]
[-416.15869141 -696.88543701]
[-409.96014404 -710.54577637]
[-403.40017700 -724.03625488]
[-396.48336792 -737.34735107]
[-389.21469116 -750.46954346]
[-381.59924316 -763.39361572]
[-373.64245605 -776.11041260]
[-365.34997559 -788.61083984]
[-356.72766113 -800.88610840]
[-347.78161621 -812.92755127]
[-338.51818848 -824.72650146]
[-328.94396973 -836.27471924]
[-319.06570435 -847.56390381]
[-308.89044189 -858.58618164]
[-298.42535400 -869.33367920]
[-287.67785645 -879.79876709]
[-276.65560913 -889.97406006]
[-265.36636353 -899.85229492]
[-253.81817627 -909.42657471]
[-242.01919556 -918.69000244]
[-229.97781372 -927.63604736]
[-217.70254517 -936.25836182]
[-205.20210266 -944.55084229]
[-192.48532104 -952.50762939]
[-179.56124878 -960.12304688]
[-166.43902588 -967.39178467]
[-153.12796021 -974.30853271]
[-139.63748169 -980.86859131]
[-125.97714233 -987.06713867]
[-112.15664673 -992.89984131]
[-98.18577576 -998.36254883]
[-84.07443237 -1003.45141602]
[-69.83262634 -1008.16290283]
[-55.47044373 -1012.49353027]
[-40.99806595 -1016.44030762]
[-26.42575455 -1020.00042725]
[-11.76383495 -1023.17132568]
[2.97730136 -1025.95080566]
[17.78720474 -1028.33691406]
[32.65538025 -1030.32788086]
[47.57128525 -1031.92236328]
[62.52435303 -1033.11926270]
[77.50398254 -1033.91760254]
[92.49955750 -1034.31701660]
[107.50044250 -1034.31701660]
[122.49601746 -1033.91760254]
[137.47564697 -1033.11926270]
[152.42871094 -1031.92236328]
[167.34461975 -1030.32788086]
[182.21279907 -1028.33691406]
[197.02270508 -1025.95080566]
[211.76383972 -1023.17132568]
[226.42575073 -1020.00042725]
[240.99806213 -1016.44030762]
[255.47044373 -1012.49353027]
[269.83261108 -1008.16290283]
[284.07443237 -1003.45141602]
[298.18576050 -998.36254883]
[312.15664673 -992.89984131]
[325.97714233 -987.06713867]
[339.63748169 -980.86859131]
[353.12796021 -974.30853271]
[366.43902588 -967.39178467]
[379.56124878 -960.12304688]
[392.48532104 -952.50762939]
[405.20208740 -944.55084229]
[417.70254517 -936.25836182]
[429.97781372 -927.63604736]
[442.01919556 -918.69000244]
[453.81817627 -909.42657471]
[465.36636353 -899.85229492]
[476.65560913 -889.97406006]
[487.67785645 -879.79876709]
[498.42535400 -869.33367920]
[508.89044189 -858.58618164]
[519.06573486 -847.56390381]
[528.94396973 -836.27471924]
[538.51818848 -824.72650146]
[547.78161621 -812.92755127]
[556.72766113 -800.88610840]
[565.34997559 -788.61083984]
[573.64245605 -776.11041260]
[581.59924316 -763.39361572]
[589.21466064 -750.46954346]
[596.48339844 -737.34735107]
[603.40014648 -724.03625488]
[609.96014404 -710.54577637]
[616.15869141 -696.88543701]
[621.99139404 -683.06494141]
[627.45416260 -669.09405518]
[632.54302979 -654.98272705]
[637.25445557 -640.74090576]
[641.58508301 -626.37872314]
[645.53186035 -611.90637207]
[649.09197998 -597.33404541]
[652.26287842 -582.67211914]
[655.04235840 -567.93096924]
[657.42846680 -553.12109375]
[659.41943359 -538.25286865]
[661.01391602 -523.33697510]
[662.21081543 -508.38391113]
[663.00915527 -493.40429688]
[663.40850830 -478.40872192]
[663.40850830 -463.40783691]
[663.00915527 -448.41226196]
[662.21075439 -433.43261719]
[661.01391602 -418.47955322]
[659.41937256 -403.56365967]
[657.42840576 -388.69549561]
[655.04229736 -373.88558960]
[652.26275635 -359.14443970]
[649.09185791 -344.48251343]
[645.53173828 -329.91021729]
[641.58496094 -315.43783569]
[637.25433350 -301.07565308]
[632.54284668 -286.83386230]
[627.45397949 -272.72250366]
[621.99127197 -258.75164795]
[616.15850830 -244.93115234]
[609.95996094 -231.27082825]
[603.39996338 -217.78034973]
[596.48315430 -204.46928406]
[589.21447754 -191.34706116]
[581.59899902 -178.42298889]
[573.64221191 -165.70622253]
[565.34973145 -153.20576477]
[556.72741699 -140.93051147]
[547.78137207 -128.88911438]
[538.51794434 -117.09015656]
[528.94366455 -105.54196167]
[519.06542969 -94.25273895]
[508.89013672 -83.23047638]
[498.42501831 -72.48299408]
[487.67752075 -62.01791000]
[476.65527344 -51.84263611]
[465.36602783 -41.96438599]
[453.81784058 -32.39016342]
[442.01885986 -23.12675095]
[429.97744751 -14.18071651]
[417.70217896 -5.55840206]
[405.20172119 2.73408246]
[392.48495483 10.69085979]
[379.56085205 18.30628967]
[366.43862915 25.57497597]
[353.12756348 32.49176407]
[339.63708496 39.05175400]
[325.97674561 45.25029373]
[312.15621948 51.08299255]
[298.18536377 56.54571533]
[284.07400513 61.63459015]
[269.83221436 66.34600830]
[255.47001648 70.67663574]
[240.99763489 74.62339783]
[226.42532349 78.18350220]
[211.76339722 81.35441589]
[197.02226257 84.13390350]
[182.21235657 86.51998138]
[167.34417725 88.51097870]
[152.42826843 90.10546112]
[137.47520447 91.30231476]
[122.49557495 92.10067749]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
