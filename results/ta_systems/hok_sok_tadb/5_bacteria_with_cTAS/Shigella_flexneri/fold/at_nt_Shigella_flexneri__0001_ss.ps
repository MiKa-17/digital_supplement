%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:33:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__CCCUUGUGGCA___GUCAUAGUGCUGUGUUUUACGGUACUGGUAUUCACGCUGCUGACCGGAGACUCGCUGUGUGAGUUGCGGAUCAAAGAAGGUAAUAUGGAGGUUACGGCAGUUCUCGCUUACGAAUCGA___AGAAGUA_GCCGCCUG__GCGGGGGGUA_AACCCCGCCUAUCCGGUGGUGA_GGUCAGGUUG___CCAAU___GCACCUU____UUUUAAA____________\
) } def
/len { sequence length } bind def

/coor [
[117.85980225 646.40539551]
[102.86296844 646.68975830]
[87.86398315 646.56250000]
[72.87413025 646.02386475]
[57.90469742 645.07415771]
[42.96695328 643.71417236]
[28.07214165 641.94488525]
[13.23147392 639.76763916]
[-1.54387653 637.18402100]
[-16.24278831 634.19610596]
[-30.85419464 630.80603027]
[-45.36709976 627.01635742]
[-59.77057648 622.83001709]
[-74.05378723 618.25006104]
[-88.20597076 613.28002930]
[-102.21647644 607.92358398]
[-116.07476044 602.18481445]
[-129.77040100 596.06799316]
[-143.29306030 589.57769775]
[-156.63258362 582.71893311]
[-169.77893066 575.49676514]
[-182.72218323 567.91668701]
[-195.45262146 559.98437500]
[-207.96064758 551.70574951]
[-220.23686218 543.08715820]
[-232.27200317 534.13500977]
[-244.05700684 524.85601807]
[-255.58303833 515.25720215]
[-266.84136963 505.34585571]
[-277.82357788 495.12933350]
[-288.52136230 484.61538696]
[-298.92669678 473.81192017]
[-309.03170776 462.72705078]
[-318.82882690 451.36914062]
[-328.31066895 439.74670410]
[-337.47009277 427.86853027]
[-346.30020142 415.74356079]
[-354.79434204 403.38088989]
[-362.94613647 390.78985596]
[-370.74942017 377.97994995]
[-378.19836426 364.96075439]
[-385.28732300 351.74209595]
[-392.01095581 338.33395386]
[-398.36422729 324.74639893]
[-404.34237671 310.98965454]
[-409.94082642 297.07409668]
[-415.15545654 283.01019287]
[-419.98226929 268.80850220]
[-424.41763306 254.47975159]
[-428.45825195 240.03471375]
[-432.10107422 225.48426819]
[-435.34335327 210.83934021]
[-438.18261719 196.11099243]
[-440.61676025 181.31028748]
[-442.64395142 166.44837952]
[-444.26266479 151.53645325]
[-445.47167969 136.58573914]
[-446.27005005 121.60746765]
[-446.65722656 106.61293793]
[-446.63290405 91.61343384]
[-446.19708252 76.62023926]
[-445.35009766 61.64464188]
[-444.09259033 46.69792175]
[-442.42550659 31.79132271]
[-440.35009766 16.93606949]
[-437.86795044 2.14334464]
[-434.98089600 -12.57571697]
[-431.69113159 -27.21003532]
[-428.00112915 -41.74859238]
[-423.91366577 -56.18044662]
[-419.43182373 -70.49473572]
[-414.55895996 -84.68067932]
[-409.29873657 -98.72760010]
[-403.65515137 -112.62492371]
[-397.63241577 -126.36219788]
[-391.23507690 -139.92906189]
[-384.46795654 -153.31532288]
[-377.33615112 -166.51089478]
[-369.84503174 -179.50584412]
[-362.00021362 -192.29039001]
[-353.80761719 -204.85491943]
[-345.27340698 -217.18995667]
[-336.40399170 -229.28620911]
[-327.20608521 -241.13459778]
[-317.68658447 -252.72619629]
[-307.85269165 -264.05227661]
[-297.71173096 -275.10427856]
[-287.27142334 -285.87396240]
[-276.53958130 -296.35314941]
[-265.52429199 -306.53396606]
[-254.23384094 -316.40875244]
[-242.67672729 -325.97009277]
[-230.86166382 -335.21078491]
[-218.79754639 -344.12384033]
[-206.49343872 -352.70257568]
[-193.95861816 -360.94055176]
[-181.20251465 -368.83154297]
[-168.23472595 -376.36959839]
[-155.06503296 -383.54907227]
[-141.70332336 -390.36453247]
[-128.15966797 -396.81085205]
[-114.44425964 -402.88320923]
[-100.56742096 -408.57699585]
[-86.53961182 -413.88796997]
[-72.37137604 -418.81207275]
[-58.07338333 -423.34564209]
[-43.65639877 -427.48526001]
[-29.13127518 -431.22781372]
[-14.50894451 -434.57043457]
[0.19958371 -437.51068115]
[14.98323917 -440.04629517]
[29.83089256 -442.17538452]
[44.73136520 -443.89636230]
[59.67344666 -445.20788574]
[74.64588165 -446.10897827]
[89.63739777 -446.59899902]
[104.63672638 -446.67755127]
[119.63255310 -446.34460449]
[134.61360168 -445.60037231]
[149.56860352 -444.44540405]
[164.48628235 -442.88064575]
[179.35542297 -440.90716553]
[194.16482544 -438.52655029]
[208.90335083 -435.74053955]
[223.55989075 -432.55123901]
[238.12341309 -428.96102905]
[252.58297729 -424.97265625]
[266.92767334 -420.58911133]
[281.14669800 -415.81365967]
[295.22937012 -410.64993286]
[309.16506958 -405.10180664]
[322.94332886 -399.17343140]
[336.55377197 -392.86932373]
[349.98614502 -386.19418335]
[363.23031616 -379.15307617]
[376.27636719 -371.75125122]
[389.11441040 -363.99429321]
[401.73483276 -355.88809204]
[414.12811279 -347.43869019]
[426.28494263 -338.65246582]
[438.19613647 -329.53607178]
[449.85275269 -320.09631348]
[461.24603271 -310.34030151]
[472.36734009 -300.27542114]
[483.20837402 -289.90924072]
[493.76092529 -279.24951172]
[504.01705933 -268.30432129]
[513.96905518 -257.08187866]
[523.60949707 -245.59062195]
[532.93096924 -233.83923340]
[541.92657471 -221.83653259]
[550.58953857 -209.59156799]
[558.91326904 -197.11354065]
[566.89160156 -184.41186523]
[574.51843262 -171.49609375]
[581.78802490 -158.37594604]
[588.69500732 -145.06130981]
[595.23406982 -131.56219482]
[608.90795898 -137.72866821]
[622.58184814 -143.89514160]
[625.60345459 -159.11517334]
[637.01696777 -169.62763977]
[652.43359375 -171.39027405]
[665.92535400 -163.72531128]
[672.30438232 -149.58007812]
[669.11785889 -134.39372253]
[657.59100342 -124.00569153]
[642.15612793 -122.41040802]
[628.74829102 -130.22128296]
[615.07446289 -124.05480194]
[601.40057373 -117.88832092]
[607.18939209 -104.05086517]
[612.59643555 -90.05980682]
[617.61761475 -75.92568207]
[622.24914551 -61.65911865]
[626.48754883 -47.27086639]
[630.32965088 -32.77175522]
[633.77252197 -18.17269325]
[636.81353760 -3.48467708]
[639.45050049 11.28123951]
[641.68139648 26.11394119]
[643.50451660 41.00226212]
[644.91845703 55.93499374]
[645.92224121 70.90089417]
[646.51507568 85.88870239]
[646.69653320 100.88713074]
[646.46643066 115.88489532]
[645.82495117 130.87069702]
[644.77258301 145.83326721]
[643.31018066 160.76133728]
[641.43872070 175.64366150]
[639.15972900 190.46903992]
[636.47485352 205.22631836]
[633.38616943 219.90438843]
[629.89593506 234.49220276]
[626.00683594 248.97875977]
[621.72174072 263.35317993]
[617.04394531 277.60464478]
[611.97692871 291.72241211]
[606.52453613 305.69583130]
[600.69079590 319.51443481]
[594.48016357 333.16778564]
[587.89733887 346.64562988]
[580.94720459 359.93777466]
[573.63500977 373.03427124]
[565.96630859 385.92523193]
[557.94683838 398.60095215]
[549.58264160 411.05191040]
[540.88006592 423.26870728]
[531.84552002 435.24215698]
[522.48596191 446.96322632]
[512.80834961 458.42312622]
[502.81994629 469.61325073]
[492.52835083 480.52508545]
[481.94128418 491.15051270]
[471.06668091 501.48147583]
[459.91275024 511.51022339]
[448.48788452 521.22918701]
[436.80072021 530.63110352]
[424.85998535 539.70880127]
[412.67471313 548.45556641]
[400.25408936 556.86468506]
[387.60742188 564.92993164]
[374.74426270 572.64514160]
[361.67428589 580.00457764]
[348.40734863 587.00274658]
[334.95339966 593.63421631]
[321.32257080 599.89416504]
[307.52514648 605.77777100]
[293.57150269 611.28070068]
[279.47216797 616.39868164]
[265.23770142 621.12799072]
[250.87886047 625.46496582]
[236.40644836 629.40643311]
[221.83134460 632.94934082]
[207.16453552 636.09106445]
[192.41705322 638.82922363]
[177.60000610 641.16180420]
[162.72453308 643.08697510]
[147.80186462 644.60339355]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[158 171]
[159 170]
[160 169]
] def

init

% Start Annotations
158 171 0.0 0.2 colorpair
159 170 0.0 0.2 colorpair
160 169 0.32 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
158 171 2 gmark
159 170 2 gmark
160 169 2 gmark
160 cmark
169 cmark

% End Annotations
showpage
end
%%EOF
