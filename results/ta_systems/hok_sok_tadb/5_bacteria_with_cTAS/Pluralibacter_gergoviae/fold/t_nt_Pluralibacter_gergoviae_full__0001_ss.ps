%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:16:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGCUACUAUCAUGUUGUUCAUGCAUAACAGAGAGCCUCAAGUUGAUUGAAAAAUCGCUUGGGGCUUUUUGCUGUCUGCCGCAGUCACCCGAAGCAGACGGCUUCAGGCA__\
) } def
/len { sequence length } bind def

/coor [
[96.99175262 207.64866638]
[108.50384521 197.37854004]
[106.05619812 182.57958984]
[103.60855103 167.78063965]
[101.16091156 152.98168945]
[98.71326447 138.18272400]
[96.26562500 123.38377380]
[89.65423584 119.84265137]
[82.57179260 133.06532288]
[69.34922791 125.98267365]
[76.43145752 112.76041412]
[69.82006836 109.21929169]
[56.14480591 115.38266754]
[42.46954727 121.54604340]
[28.79428291 127.70942688]
[15.11902237 133.87280273]
[1.44376051 140.03617859]
[-2.62362528 155.13552856]
[-15.47462368 164.04539490]
[-31.04138756 162.55882263]
[-41.97376633 151.37771606]
[-43.10982132 135.78146362]
[-33.91315079 123.13411713]
[-18.72613144 119.40738678]
[-4.71961689 126.36091614]
[8.95564461 120.19754028]
[22.63090706 114.03416443]
[36.30616760 107.87078094]
[49.98143005 101.70740509]
[63.65669250 95.54402924]
[69.82006836 81.86876678]
[65.38009644 67.54093933]
[60.94012833 53.21311188]
[56.50016022 38.88528442]
[52.06018829 24.55745506]
[47.62022018 10.22962570]
[43.18024826 -4.09820223]
[38.74028015 -18.42603111]
[34.30030823 -32.75386047]
[29.86033821 -47.08168793]
[25.42037010 -61.40951538]
[20.98040009 -75.73734283]
[16.54043007 -90.06517029]
[12.10045910 -104.39299774]
[7.66048908 -118.72083282]
[2.05837345 -126.11122131]
[3.30070186 -133.50097656]
[-0.74624979 -147.94474792]
[-4.79320145 -162.38850403]
[-8.84015274 -176.83226013]
[-20.93917847 -187.90229797]
[-17.13803482 -203.85482788]
[-1.34701312 -208.27926636]
[10.18943787 -196.62413025]
[5.60360622 -180.87921143]
[9.65055752 -166.43545532]
[13.69750977 -151.99169922]
[17.74446106 -137.54792786]
[21.98831749 -123.16079712]
[26.42828751 -108.83296967]
[30.86825752 -94.50514221]
[35.30822754 -80.17731476]
[39.74819946 -65.84948730]
[44.18816757 -51.52165604]
[48.62813568 -37.19382858]
[53.06810760 -22.86600113]
[57.50807571 -8.53817272]
[61.94804764 5.78965616]
[66.38801575 20.11748505]
[70.82798767 34.44531250]
[75.26795959 48.77313995]
[79.70792389 63.10097122]
[84.14789581 77.42879486]
[101.26372528 73.71762085]
[116.29341125 80.98112488]
[123.29099274 95.22765350]
[138.17779541 97.06699371]
[153.06459045 98.90633392]
[167.95140076 100.74566650]
[182.83819580 102.58500671]
[197.72499084 104.42433929]
[210.11001587 94.97718048]
[225.18115234 97.05459595]
[234.11125183 108.92004395]
[244.60366821 97.48812103]
[259.81835938 94.43978119]
[273.90499878 100.94718933]
[281.44696045 114.50810242]
[279.54421997 129.90808105]
[268.92843628 141.22550964]
[253.68154907 144.10861206]
[239.66633606 137.44877625]
[232.27191162 123.80684662]
[220.72238159 133.14193726]
[205.59884644 131.48864746]
[195.88565063 119.31114197]
[180.99885559 117.47180939]
[166.11206055 115.63246918]
[151.22525024 113.79312897]
[136.33845520 111.95379639]
[121.45165253 110.11445618]
[111.06457520 120.93613434]
[113.51222229 135.73509216]
[115.95986176 150.53404236]
[118.40750885 165.33299255]
[120.85514832 180.13194275]
[123.30279541 194.93090820]
[137.50859070 200.94746399]
[146.18757629 213.70202637]
[146.57032776 229.12463379]
[138.53471375 242.29400635]
[124.64485168 249.00784302]
[109.33296967 247.12377930]
[97.48501587 237.24301147]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 107]
[3 106]
[4 105]
[5 104]
[6 103]
[7 102]
[12 30]
[13 29]
[14 28]
[15 27]
[16 26]
[17 25]
[31 73]
[32 72]
[33 71]
[34 70]
[35 69]
[36 68]
[37 67]
[38 66]
[39 65]
[40 64]
[41 63]
[42 62]
[43 61]
[44 60]
[45 59]
[47 58]
[48 57]
[49 56]
[50 55]
[76 101]
[77 100]
[78 99]
[79 98]
[80 97]
[81 96]
[84 93]
] def

init

% Start Annotations
2 107 0.0 1 colorpair
3 106 0.0 1 colorpair
4 105 0.0 1 colorpair
5 104 0.0 1 colorpair
6 103 0.0 1 colorpair
7 102 0.0 1 colorpair
12 30 0.0 1 colorpair
13 29 0.0 0.2 colorpair
14 28 0.0 1 colorpair
15 27 0.0 1 colorpair
16 26 0.0 1 colorpair
17 25 0.0 1 colorpair
31 73 0.0 1 colorpair
32 72 0.0 1 colorpair
33 71 0.0 1 colorpair
34 70 0.16 1 colorpair
35 69 0.16 1 colorpair
36 68 0.16 1 colorpair
37 67 0.0 1 colorpair
38 66 0.0 1 colorpair
39 65 0.0 1 colorpair
40 64 0.0 1 colorpair
41 63 0.0 1 colorpair
42 62 0.0 1 colorpair
43 61 0.0 1 colorpair
44 60 0.0 1 colorpair
45 59 0.0 1 colorpair
47 58 0.0 1 colorpair
48 57 0.0 1 colorpair
49 56 0.0 1 colorpair
50 55 0.0 1 colorpair
76 101 0.0 1 colorpair
77 100 0.0 1 colorpair
78 99 0.0 1 colorpair
79 98 0.0 1 colorpair
80 97 0.0 1 colorpair
81 96 0.0 1 colorpair
84 93 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
13 29 2 gmark
34 cmark
35 cmark
36 cmark

% End Annotations
showpage
end
%%EOF
