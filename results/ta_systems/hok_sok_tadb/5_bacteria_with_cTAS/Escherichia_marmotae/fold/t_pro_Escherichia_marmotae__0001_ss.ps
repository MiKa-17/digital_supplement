%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 23:48:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_ACA_GCU_ACGAAAUAUGCCCUUGUGGCA_GUC__AUAGUACUGUGUUUCACAGUACUGGGAUUCACGCUCCUGGUCGGAGACUCGCUGUGUGAGUUGAACAUCAGGGAACGUGAUAUGGAGUUUAAGGCUGUUCUCGCUUACGAACCGAAGAA_\
) } def
/len { sequence length } bind def

/coor [
[147.30789185 230.38798523]
[142.36511230 244.55023193]
[133.66009521 256.76589966]
[121.88703156 266.06079102]
[107.98484802 271.69366455]
[93.06222534 273.21530151]
[78.30924225 270.50433350]
[64.90243530 263.77694702]
[53.91099167 253.56968689]
[46.21148300 240.69654846]
[42.41793442 226.18417358]
[42.83288574 211.18992615]
[47.42323685 196.90956116]
[55.82291794 184.48194885]
[67.35874176 174.90023804]
[74.02450562 161.46269226]
[80.69027710 148.02514648]
[87.35604095 134.58760071]
[75.06398010 143.18441772]
[62.77191925 151.78123474]
[50.47985840 160.37805176]
[46.28058624 175.86177063]
[31.50009918 182.10009766]
[17.47671700 174.30752563]
[14.96798038 158.46183777]
[25.89837646 146.71849060]
[41.88304138 148.08598328]
[54.17510223 139.48916626]
[66.46716309 130.89236450]
[78.75922394 122.29553986]
[70.37387848 103.78099060]
[75.41613770 84.73245239]
[61.32645798 79.58647919]
[47.23677826 74.44051361]
[37.59054184 79.61700439]
[26.90996742 78.61865997]
[18.73322678 72.02056885]
[15.63386345 62.21202087]
[1.76135552 56.50645065]
[-12.11115170 50.80088043]
[-25.98365974 45.09530640]
[-39.85616684 39.38973618]
[-53.72867584 33.68416595]
[-67.60118103 27.97859764]
[-81.47368622 22.27302551]
[-95.34619904 16.56745529]
[-109.21870422 10.86188507]
[-126.16712189 10.42899227]
[-130.44293213 -5.97691393]
[-115.86184692 -14.62723446]
[-103.51313782 -3.01062226]
[-89.64062500 2.69494820]
[-75.76811981 8.40051842]
[-61.89561081 14.10608959]
[-48.02310562 19.81165886]
[-34.15059662 25.51723099]
[-20.27808952 31.22280121]
[-6.40558147 36.92837143]
[7.46692610 42.63394165]
[21.33943367 48.33951187]
[40.22011566 44.32114410]
[52.38274765 60.35083389]
[66.47242737 65.49680328]
[80.56210327 70.64276886]
[94.54599762 65.21591949]
[101.47592163 51.91267776]
[108.40584564 38.60943985]
[115.33577728 25.30620384]
[122.26570129 12.00296783]
[121.77923584 -3.81075811]
[134.52125549 -11.52375793]
[141.45117188 -24.82699394]
[148.38110352 -38.13022995]
[155.17758179 -51.50213623]
[161.83995056 -64.94136810]
[168.50230408 -78.38059998]
[175.16465759 -91.81983948]
[181.82701111 -105.25907135]
[188.48937988 -118.69830322]
[183.67326355 -133.51190186]
[190.62129211 -147.04629517]
[204.77348328 -151.54641724]
[211.43583679 -164.98565674]
[218.09819031 -178.42489624]
[224.76055908 -191.86412048]
[231.42291260 -205.30335999]
[238.08526611 -218.74258423]
[234.34323120 -234.34312439]
[244.32032776 -246.90644836]
[260.36297607 -246.79504395]
[270.16467285 -234.09439087]
[266.20632935 -218.54731750]
[251.52450562 -212.08023071]
[244.86213684 -198.64100647]
[238.19978333 -185.20176697]
[231.53742981 -171.76252747]
[224.87507629 -158.32330322]
[218.21270752 -144.88406372]
[223.19955444 -130.89596558]
[216.63442993 -117.17176056]
[201.92860413 -112.03594208]
[195.26625061 -98.59671021]
[188.60389709 -85.15747833]
[181.94152832 -71.71824646]
[175.27917480 -58.27901077]
[168.61682129 -44.83977890]
[168.46272278 -37.40848541]
[161.68434143 -31.20030594]
[154.75440979 -17.89706802]
[147.82449341 -4.59383106]
[148.80662537 10.26835823]
[135.56893921 18.93289375]
[128.63900757 32.23612976]
[121.70908356 45.53936768]
[114.77915955 58.84260559]
[107.84923553 72.14584351]
[124.92366028 84.11152649]
[129.78498840 104.83930206]
[119.39012909 123.92247009]
[130.95547485 133.47457886]
[142.52082825 143.02668762]
[158.04244995 141.71638489]
[169.63528442 151.56832886]
[170.78880310 166.37390137]
[182.35415649 175.92601013]
[197.87577820 174.61570740]
[209.46861267 184.46765137]
[210.62213135 199.27322388]
[222.18746948 208.82533264]
[233.75282288 218.37744141]
[245.31817627 227.92955017]
[253.97967529 231.00627136]
[257.01687622 237.79032898]
[273.22253418 240.30194092]
[278.89715576 255.68800354]
[268.20315552 268.12063599]
[252.14161682 264.81021118]
[247.23526001 249.16223145]
[235.76606750 239.49488831]
[224.20071411 229.94277954]
[212.63537598 220.39068604]
[201.07002258 210.83857727]
[186.31318665 212.50340271]
[174.44821167 202.98095703]
[172.80204773 187.49134827]
[161.23669434 177.93925476]
[146.47987366 179.60408020]
[134.61488342 170.08163452]
[132.96871948 154.59202576]
[121.40337372 145.03993225]
[109.83802032 135.48782349]
[115.40805054 149.41529846]
[120.97807312 163.34278870]
[126.54809570 177.27027893]
[137.28324890 187.74674988]
[144.66143799 200.80670166]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 30]
[19 29]
[20 28]
[21 27]
[32 64]
[33 63]
[34 62]
[38 60]
[39 59]
[40 58]
[41 57]
[42 56]
[43 55]
[44 54]
[45 53]
[46 52]
[47 51]
[65 116]
[66 115]
[67 114]
[68 113]
[69 112]
[71 110]
[72 109]
[73 108]
[74 106]
[75 105]
[76 104]
[77 103]
[78 102]
[79 101]
[82 98]
[83 97]
[84 96]
[85 95]
[86 94]
[87 93]
[119 151]
[120 150]
[121 149]
[124 146]
[125 145]
[128 142]
[129 141]
[130 140]
[131 139]
[133 138]
] def

init

% Start Annotations
18 30 0.16 1 colorpair
19 29 0.0 0.6 colorpair
20 28 0.0 1 colorpair
21 27 0.0 1 colorpair
32 64 0.0 1 colorpair
33 63 0.0 1 colorpair
34 62 0.0 0.6 colorpair
38 60 0.0 1 colorpair
39 59 0.0 0.6 colorpair
40 58 0.0 0.6 colorpair
41 57 0.0 1 colorpair
42 56 0.16 0.6 colorpair
43 55 0.0 0.6 colorpair
44 54 0.16 1 colorpair
45 53 0.0 0.6 colorpair
46 52 0.0 1 colorpair
47 51 0.16 0.6 colorpair
65 116 0.16 1 colorpair
66 115 0.16 1 colorpair
67 114 0.0 1 colorpair
68 113 0.0 1 colorpair
69 112 0.0 0.6 colorpair
71 110 0.0 1 colorpair
72 109 0.16 0.6 colorpair
73 108 0.0 0.6 colorpair
74 106 0.0 0.6 colorpair
75 105 0.0 0.6 colorpair
76 104 0.16 1 colorpair
77 103 0.0 0.6 colorpair
78 102 0.16 0.6 colorpair
79 101 0.16 0.6 colorpair
82 98 0.0 0.6 colorpair
83 97 0.0 0.6 colorpair
84 96 0.0 0.6 colorpair
85 95 0.0 0.6 colorpair
86 94 0.0 1 colorpair
87 93 0.0 1 colorpair
119 151 0.0 0.6 colorpair
120 150 0.16 0.6 colorpair
121 149 0.0 1 colorpair
124 146 0.16 1 colorpair
125 145 0.16 1 colorpair
128 142 0.0 0.6 colorpair
129 141 0.0 0.6 colorpair
130 140 0.0 1 colorpair
131 139 0.0 1 colorpair
133 138 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
18 cmark
30 cmark
19 29 1 gmark
34 62 1 gmark
39 59 1 gmark
40 58 1 gmark
42 56 1 gmark
42 cmark
43 55 1 gmark
54 cmark
45 53 1 gmark
47 51 1 gmark
51 cmark
116 cmark
66 cmark
115 cmark
69 112 1 gmark
72 109 1 gmark
72 cmark
73 108 1 gmark
74 106 1 gmark
75 105 1 gmark
76 cmark
77 103 1 gmark
78 102 1 gmark
78 cmark
102 cmark
79 101 1 gmark
79 cmark
101 cmark
82 98 1 gmark
83 97 1 gmark
84 96 1 gmark
85 95 1 gmark
119 151 1 gmark
120 150 1 gmark
120 cmark
150 cmark
124 cmark
146 cmark
145 cmark
128 142 1 gmark
129 141 1 gmark
133 cmark
138 cmark

% End Annotations
showpage
end
%%EOF
