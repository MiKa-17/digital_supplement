%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:14:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_______________AUGAAACUGCCGCGAAACAAUCUGUUCUGGUGCGUAUUAAUAGUGUGCUUCACACUUUUGAUAUUCACCUGCCUGACCCGGAAAUCGCUAUGCGAAAUCCGGCUCAGGGACGGAAACAGGGAGGUGGCGGCAUUCCUGGCUUACGAAUCC___GAUAAG\
) } def
/len { sequence length } bind def

/coor [
[143.83612061 489.05938721]
[128.90191650 490.45294189]
[113.92530060 491.27343750]
[98.92824554 491.51968384]
[83.93276215 491.19134521]
[68.96086121 490.28884888]
[54.03451157 488.81356812]
[39.17562485 486.76763916]
[24.40600586 484.15408325]
[9.74733257 480.97674561]
[-4.77888346 477.24023438]
[-19.15132141 472.95010376]
[-33.34888840 468.11260986]
[-47.35074997 462.73486328]
[-61.13635254 456.82473755]
[-74.68546295 450.39093018]
[-87.97820282 443.44287109]
[-100.99505615 435.99078369]
[-113.71692657 428.04556274]
[-126.12512970 419.61889648]
[-138.20147705 410.72314453]
[-149.92822266 401.37136841]
[-161.28816223 391.57730103]
[-172.26461792 381.35528564]
[-182.84150696 370.72033691]
[-193.00328064 359.68807983]
[-202.73501587 348.27468872]
[-212.02246094 336.49694824]
[-220.85197449 324.37207031]
[-229.21058655 311.91793823]
[-237.08604431 299.15277100]
[-244.46676636 286.09530640]
[-251.34194946 272.76473999]
[-257.70147705 259.18060303]
[-263.53604126 245.36285400]
[-268.83706665 231.33175659]
[-273.59677124 217.10792542]
[-277.80816650 202.71221924]
[-281.46508789 188.16575623]
[-284.56216431 173.48991394]
[-287.09481812 158.70620728]
[-289.05935669 143.83634949]
[-290.45291138 128.90214539]
[-291.27343750 113.92552948]
[-291.51968384 98.92847443]
[-291.19134521 83.93299103]
[-290.28887939 68.96109009]
[-288.81359863 54.03474045]
[-286.76766968 39.17585373]
[-284.15414429 24.40623283]
[-280.97677612 9.74755669]
[-277.24029541 -4.77866125]
[-272.95016479 -19.15110207]
[-268.11270142 -33.34867096]
[-262.73495483 -47.35053635]
[-256.82482910 -61.13614273]
[-250.39103699 -74.68525696]
[-243.44299316 -87.97800446]
[-235.99090576 -100.99485779]
[-228.04570007 -113.71672821]
[-219.61903381 -126.12494659]
[-210.72329712 -138.20129395]
[-201.37152100 -149.92803955]
[-191.57745361 -161.28797913]
[-181.35543823 -172.26445007]
[-170.72050476 -182.84133911]
[-159.68826294 -193.00311279]
[-148.27487183 -202.73487854]
[-136.49711609 -212.02232361]
[-124.37226868 -220.85183716]
[-111.91812134 -229.21046448]
[-99.15295410 -237.08592224]
[-86.09550476 -244.46665955]
[-72.76493835 -251.34184265]
[-59.18080902 -257.70138550]
[-45.36306381 -263.53598022]
[-31.33197784 -268.83700562]
[-17.10814476 -273.59671021]
[-2.71243882 -277.80810547]
[11.83401203 -281.46502686]
[26.50985718 -284.56210327]
[41.29356003 -287.09478760]
[56.16342545 -289.05935669]
[71.09762573 -290.45291138]
[86.07424164 -291.27343750]
[101.07129669 -291.51968384]
[116.06678009 -291.19134521]
[131.03868103 -290.28887939]
[145.96502686 -288.81362915]
[160.82391357 -286.76773071]
[175.59353638 -284.15417480]
[190.25221252 -280.97683716]
[204.77844238 -277.24035645]
[219.15087891 -272.95025635]
[233.34844971 -268.11276245]
[247.35032654 -262.73501587]
[261.13592529 -256.82492065]
[274.68505859 -250.39114380]
[287.97781372 -243.44309998]
[300.99465942 -235.99101257]
[313.71655273 -228.04582214]
[326.12475586 -219.61917114]
[338.20111084 -210.72343445]
[349.92785645 -201.37167358]
[361.28781128 -191.57760620]
[372.26428223 -181.35560608]
[382.84118652 -170.72067261]
[393.00296021 -159.68843079]
[402.73474121 -148.27505493]
[412.02218628 -136.49729919]
[420.85171509 -124.37245941]
[429.21032715 -111.91831970]
[437.08581543 -99.15315247]
[444.46655273 -86.09571075]
[451.34173584 -72.76514435]
[457.70129395 -59.18102264]
[463.53588867 -45.36327744]
[468.83691406 -31.33219528]
[473.59664917 -17.10836411]
[477.80804443 -2.71266150]
[481.46499634 11.83378696]
[484.56207275 26.50963211]
[487.09475708 41.29333115]
[489.05932617 56.16319275]
[490.45288086 71.09738922]
[491.27340698 86.07401276]
[491.51968384 101.07106781]
[491.19137573 116.06654358]
[490.28890991 131.03845215]
[488.81365967 145.96479797]
[486.76776123 160.82368469]
[484.15423584 175.59330750]
[480.97689819 190.25199890]
[477.24044800 204.77821350]
[472.95031738 219.15066528]
[468.11285400 233.34823608]
[462.73510742 247.35011292]
[456.82501221 261.13571167]
[450.39123535 274.68484497]
[443.44320679 287.97760010]
[435.99114990 300.99447632]
[428.04595947 313.71633911]
[419.61929321 326.12457275]
[410.72357178 338.20092773]
[422.45104980 347.55328369]
[434.17852783 356.90560913]
[449.46917725 353.62994385]
[463.26376343 360.99493408]
[469.04895020 375.52304077]
[464.09307861 390.35455322]
[450.73620605 398.48645020]
[435.28503418 396.07916260]
[425.03512573 384.26928711]
[424.82617188 368.63308716]
[413.09869385 359.28073120]
[401.37121582 349.92840576]
[391.57714844 361.28833008]
[381.35513306 372.26480103]
[370.72018433 382.84167480]
[359.68789673 393.00341797]
[348.27450562 402.73516846]
[336.49676514 412.02261353]
[324.37188721 420.85211182]
[311.91772461 429.21072388]
[299.15255737 437.08615112]
[286.09509277 444.46688843]
[272.76452637 451.34204102]
[259.18038940 457.70156860]
[245.36264038 463.53613281]
[231.33154297 468.83715820]
[217.10771179 473.59683228]
[202.71199036 477.80822754]
[188.16554260 481.46514893]
[173.48968506 484.56219482]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[144 156]
[145 155]
[146 154]
] def

init

% Start Annotations
144 156 0.32 1 colorpair
145 155 0.0 0.6 colorpair
146 154 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
144 cmark
156 cmark
145 155 1 gmark
146 154 1 gmark

% End Annotations
showpage
end
%%EOF
