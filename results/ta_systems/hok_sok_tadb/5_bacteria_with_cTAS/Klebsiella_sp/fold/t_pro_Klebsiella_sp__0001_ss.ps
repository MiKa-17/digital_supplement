%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:13:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_______________G_AAUGCUGACAAAAUAUGCCCUGGU__GGCAAUCAUCG_UGCUGUGUAUCACGGUACUGGGAUUUACGUUGAUGGUGCGCGACUCGCUGUGCGAACUGAGGAUCAAAGAGCGUAGUAUGGAGUUUAAGGCUGUUCUCGCUUACGAAAC___GAAGAAG\
) } def
/len { sequence length } bind def

/coor [
[102.16426086 336.42520142]
[92.03788757 336.30099487]
[81.92612457 335.74325562]
[71.84752655 334.75305176]
[61.82057190 333.33212280]
[51.86366272 331.48315430]
[41.99506760 329.20947266]
[32.23289108 326.51528931]
[22.59504128 323.40551758]
[13.09920025 319.88589478]
[3.76279044 315.96286011]
[-5.39705896 311.64361572]
[-14.36354446 306.93606567]
[-23.12021446 301.84887695]
[-31.65100288 296.39135742]
[-39.94026184 290.57354736]
[-47.97278214 284.40609741]
[-55.73382568 277.90032959]
[-63.20915604 271.06817627]
[-70.38505554 263.92221069]
[-77.24836731 256.47546387]
[-83.78648376 248.74166870]
[-89.98742676 240.73497009]
[-95.83981323 232.47007751]
[-101.33290100 223.96215820]
[-106.45661926 215.22682190]
[-111.20156860 206.28007507]
[-115.55903625 197.13833618]
[-119.52103424 187.81838989]
[-123.08029175 178.33734131]
[-126.23027802 168.71255493]
[-128.96520996 158.96171570]
[-131.28009033 149.10270691]
[-133.17063904 139.15361023]
[-148.03489685 141.16709900]
[-162.89913940 143.18060303]
[-171.09829712 156.49629211]
[-185.95460510 161.37730408]
[-200.45335388 155.51895142]
[-207.74868774 141.68739319]
[-204.39596558 126.41345215]
[-191.97824097 116.90901947]
[-176.35879517 117.66180420]
[-164.91264343 128.31636047]
[-150.04838562 126.30285645]
[-135.18414307 124.28936005]
[-136.23573303 109.70730591]
[-136.38406372 95.08813477]
[-135.62857056 80.48773956]
[-133.97215271 65.96195221]
[-131.42111206 51.56631470]
[-127.98523712 37.35586548]
[-123.67764282 23.38493538]
[-118.51480103 9.70694923]
[-112.51646423 -3.62579823]
[-105.70555878 -16.56232643]
[-98.10813141 -29.05317497]
[-89.75322723 -41.05058289]
[-80.67279053 -52.50867462]
[-70.90155029 -63.38364410]
[-60.47685242 -73.63391113]
[-49.43856430 -83.22027588]
[-37.82889557 -92.10609436]
[-25.69222641 -100.25737762]
[-13.07496929 -107.64297485]
[-0.02536503 -114.23464203]
[13.40669155 -120.00716400]
[27.16984177 -124.93848419]
[41.21146011 -129.00973511]
[55.47785950 -132.20536804]
[69.91448975 -134.51315308]
[84.46615601 -135.92425537]
[99.07721710 -136.43328857]
[113.69181061 -136.03831482]
[128.25404358 -134.74084473]
[142.70825195 -132.54582214]
[156.99916077 -129.46165466]
[171.07212830 -125.50012207]
[184.87335205 -120.67639160]
[198.35006714 -115.00888062]
[211.45071411 -108.51927948]
[224.12524414 -101.23239899]
[236.32516479 -93.17609406]
[245.35836792 -105.15112305]
[254.39155579 -117.12615204]
[249.23304749 -133.21794128]
[254.61718750 -149.06044006]
[268.23974609 -158.48768616]
[284.63153076 -157.95516968]
[293.44830322 -170.09042358]
[302.26510620 -182.22569275]
[296.13787842 -196.24011230]
[297.83685303 -211.34011841]
[306.80630493 -223.48161316]
[320.55676270 -229.46331787]
[335.35540771 -227.77059937]
[344.17218018 -239.90585327]
[346.02410889 -255.61830139]
[359.76461792 -261.36700439]
[368.58142090 -273.50225830]
[377.39819336 -285.63751221]
[386.21496582 -297.77276611]
[395.03173828 -309.90802002]
[399.45016479 -326.27609253]
[416.40170288 -326.56149292]
[421.36859131 -310.35140991]
[407.16699219 -301.09124756]
[398.35021973 -288.95599365]
[389.53344727 -276.82073975]
[380.71667480 -264.68548584]
[371.89987183 -252.55023193]
[370.67858887 -237.70578003]
[356.30743408 -231.08908081]
[347.49066162 -218.95381165]
[353.67358398 -205.40254211]
[352.23376465 -190.47662354]
[343.45822144 -178.19425964]
[329.62228394 -171.91226196]
[314.40036011 -173.40890503]
[305.58355713 -161.27365112]
[296.76678467 -149.13839722]
[302.05657959 -136.86021423]
[300.56835938 -123.46505737]
[292.58520508 -112.47203064]
[280.11062622 -106.82237244]
[266.36660767 -108.09295654]
[257.33340454 -96.11792755]
[248.30020142 -84.14289856]
[265.24966431 -69.09790802]
[280.68078613 -52.49921799]
[294.45175171 -34.49932861]
[306.43606567 -15.26362610]
[316.52359009 5.03114176]
[324.62167358 26.19850540]
[330.65585327 48.04397202]
[334.57073975 70.36682129]
[336.33032227 92.96195221]
[335.91845703 115.62174988]
[333.33889771 138.13800049]
[328.61538696 160.30384827]
[321.79132080 181.91560364]
[312.92938232 202.77468872]
[302.11099243 222.68946838]
[289.43554688 241.47694397]
[301.16302490 250.82929993]
[312.89050293 260.18164062]
[328.18115234 256.90597534]
[341.97573853 264.27096558]
[347.76092529 278.79907227]
[342.80505371 293.63058472]
[329.44818115 301.76248169]
[313.99700928 299.35519409]
[303.74710083 287.54528809]
[303.53814697 271.90911865]
[291.81066895 262.55676270]
[280.08319092 253.20442200]
[273.35736084 260.77554321]
[266.31347656 268.05169678]
[258.96447754 275.01956177]
[251.32383728 281.66632080]
[243.40557861 287.97976685]
[235.22421265 293.94836426]
[226.79475403 299.56112671]
[218.13269043 304.80776978]
[209.25387573 309.67868042]
[200.17463684 314.16488647]
[190.91160583 318.25817871]
[181.48179626 321.95104980]
[171.90249634 325.23672485]
[162.19126892 328.10919189]
[152.36595154 330.56314087]
[142.44456482 332.59408569]
[132.44529724 334.19833374]
[122.38651276 335.37289429]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 46]
[35 45]
[36 44]
[83 128]
[84 127]
[85 126]
[89 121]
[90 120]
[91 119]
[96 114]
[97 113]
[99 111]
[100 110]
[101 109]
[102 108]
[103 107]
[144 156]
[145 155]
[146 154]
] def

init

% Start Annotations
34 46 0.48 1 colorpair
35 45 0.32 0.6 colorpair
36 44 0.32 1 colorpair
83 128 0.0 0.2 colorpair
84 127 0.32 0.2 colorpair
89 121 0.0 1 colorpair
90 120 0.16 0.2 colorpair
91 119 0.16 0.2 colorpair
97 113 0.16 1 colorpair
100 110 0.0 0.6 colorpair
101 109 0.0 0.6 colorpair
103 107 0.16 1 colorpair
144 156 0.32 1 colorpair
145 155 0.0 0.6 colorpair
146 154 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
34 cmark
46 cmark
35 45 1 gmark
35 cmark
45 cmark
36 cmark
44 cmark
83 128 2 gmark
84 127 2 gmark
84 cmark
127 cmark
85 126 3 gmark
85 cmark
126 cmark
90 120 2 gmark
120 cmark
91 119 2 gmark
91 cmark
96 114 6 gmark
96 cmark
114 cmark
97 cmark
99 111 7 gmark
99 cmark
111 cmark
100 110 1 gmark
101 109 1 gmark
102 108 3 gmark
102 cmark
108 cmark
103 cmark
144 cmark
156 cmark
145 155 1 gmark

% End Annotations
showpage
end
%%EOF
