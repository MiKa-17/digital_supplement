%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:13:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__CUCUUGUGGCGAUUAUUA_UGCUGUGUAUCACAGUACUGGGAUUUACGUUGAUGGUGCGCAACUCGCUGUGCGAACUACGGAUCAAAGAGCGUAAUAUGGAGUUGGAGGCUGUUCUCGCUUACGAAUCG___AAGAAGUAGC__AUCCGCGC_GGGGGCAACCCCGCCUAUUCGUUGGCUGG___A_______GAA_CCU_A_GCAC__CUAUUUA__G_UUA________________\
) } def
/len { sequence length } bind def

/coor [
[107.32920837 582.04510498]
[93.65982056 582.05914307]
[79.99552917 581.68560791]
[66.34732056 580.92486572]
[52.72616196 579.77746582]
[39.14301300 578.24432373]
[25.60878944 576.32672119]
[12.13437080 574.02618408]
[-1.26940942 571.34460449]
[-14.59177494 568.28399658]
[-27.82201576 564.84698486]
[-40.94949722 561.03625488]
[-53.96366119 556.85491943]
[-66.85404968 552.30621338]
[-79.61029816 547.39392090]
[-92.22214508 542.12200928]
[-104.67946625 536.49456787]
[-116.97222900 530.51623535]
[-129.09056091 524.19183350]
[-141.02471924 517.52636719]
[-152.76512146 510.52526855]
[-164.30229187 503.19412231]
[-175.62699890 495.53881836]
[-186.73011780 487.56555176]
[-197.60270691 479.28067017]
[-208.23605347 470.69088745]
[-218.62159729 461.80310059]
[-228.75099182 452.62442017]
[-238.61608887 443.16229248]
[-248.20895386 433.42425537]
[-257.52188110 423.41815186]
[-266.54739380 413.15206909]
[-275.27819824 402.63421631]
[-283.70733643 391.87307739]
[-291.82797241 380.87728882]
[-299.63360596 369.65567017]
[-307.11798096 358.21728516]
[-314.27502441 346.57128906]
[-321.09902954 334.72708130]
[-327.58450317 322.69418335]
[-333.72622681 310.48220825]
[-339.51925659 298.10104370]
[-344.95892334 285.56063843]
[-350.04089355 272.87103271]
[-354.76104736 260.04244995]
[-359.11560059 247.08520508]
[-363.10107422 234.00970459]
[-366.71423340 220.82647705]
[-369.95217896 207.54611206]
[-372.81228638 194.17929077]
[-375.29229736 180.73674011]
[-377.39022827 167.22929382]
[-379.10433960 153.66780090]
[-380.43328857 140.06315613]
[-381.37600708 126.42630768]
[-381.93170166 112.76821136]
[-382.09997559 99.09985352]
[-381.88067627 85.43221283]
[-381.27395630 71.77629089]
[-380.28033447 58.14305115]
[-378.90060425 44.54346848]
[-377.13583374 30.98846626]
[-374.98751831 17.48894501]
[-372.45730591 4.05575943]
[-369.54727173 -9.30029392]
[-366.25976562 -22.56847572]
[-380.70581055 -26.60727501]
[-395.15185547 -30.64607239]
[-409.59790039 -34.68487167]
[-426.48007202 -33.12656403]
[-432.65093994 -48.91759872]
[-419.18527222 -59.21869659]
[-405.55908203 -49.13091278]
[-391.11306763 -45.09211349]
[-376.66702271 -41.05331421]
[-362.22097778 -37.01451874]
[-357.38037109 -52.39554977]
[-352.02810669 -67.60610199]
[-346.17013550 -82.62915039]
[-339.81304932 -97.44789886]
[-332.96395874 -112.04576111]
[-325.63052368 -126.40640259]
[-317.82092285 -140.51377869]
[-309.54391479 -154.35208130]
[-300.80874634 -167.90585327]
[-291.62521362 -181.15991211]
[-282.00357056 -194.09944153]
[-271.95455933 -206.70996094]
[-261.48947144 -218.97738647]
[-250.61997986 -230.88795471]
[-239.35824585 -242.42835999]
[-227.71687317 -253.58570862]
[-215.70889282 -264.34750366]
[-203.34773254 -274.70169067]
[-190.64721680 -284.63671875]
[-177.62156677 -294.14144897]
[-164.28533936 -303.20523071]
[-150.65344238 -311.81799316]
[-136.74116516 -319.97003174]
[-122.56403351 -327.65225220]
[-108.13792419 -334.85607910]
[-93.47896576 -341.57342529]
[-78.60357666 -347.79678345]
[-63.52837753 -353.51919556]
[-48.27024078 -358.73428345]
[-32.84623718 -363.43615723]
[-17.27361870 -367.61959839]
[-1.56980741 -371.27993774]
[14.24762917 -374.41305542]
[30.16099548 -377.01541138]
[28.21919250 -391.88922119]
[26.27738953 -406.76300049]
[13.00138474 -415.02627563]
[8.19207191 -429.90594482]
[14.12025928 -444.37628174]
[27.98683929 -451.60482788]
[43.24443436 -448.17849731]
[52.68888092 -435.71508789]
[51.86079407 -420.09945679]
[41.15117264 -408.70480347]
[43.09297562 -393.83102417]
[45.03477859 -378.95724487]
[63.42431641 -380.71136475]
[81.86755371 -381.75970459]
[100.33741760 -382.10070801]
[118.80678558 -381.73385620]
[137.24853516 -380.65969849]
[155.63560486 -378.87982178]
[173.94097900 -376.39682007]
[192.13780212 -373.21435547]
[210.19932556 -369.33709717]
[228.09906006 -364.77072144]
[245.81071472 -359.52197266]
[263.30828857 -353.59851074]
[280.56607056 -347.00906372]
[297.55874634 -339.76327515]
[314.26135254 -331.87182617]
[330.64935303 -323.34628296]
[346.69873047 -314.19915771]
[362.38589478 -304.44387817]
[377.68777466 -294.09478760]
[392.58197021 -283.16705322]
[407.04656982 -271.67672729]
[421.06036377 -259.64071655]
[434.60275269 -247.07664490]
[447.65386963 -234.00297546]
[460.19451904 -220.43891907]
[472.20635986 -206.40437317]
[483.67166138 -191.91995239]
[494.57366943 -177.00691223]
[504.89633179 -161.68716431]
[517.61932373 -169.63227844]
[530.34234619 -177.57739258]
[533.99597168 -189.93307495]
[544.73925781 -196.29165649]
[556.54571533 -193.71908569]
[569.37078857 -201.49838257]
[572.88610840 -216.90675354]
[586.31146240 -225.24557495]
[601.68182373 -221.56755066]
[609.87823486 -208.05479431]
[606.03790283 -192.72419739]
[592.43927002 -184.67111206]
[577.15008545 -188.67329407]
[564.32501221 -180.89401245]
[556.70996094 -165.07351685]
[538.28747559 -164.85438538]
[525.56445312 -156.90927124]
[512.84143066 -148.96414185]
[519.73388672 -137.15962219]
[526.28887939 -125.16442871]
[532.50109863 -112.98822021]
[538.36566162 -100.64078522]
[543.87786865 -88.13204193]
[549.03314209 -75.47205353]
[553.82745361 -62.67099762]
[558.25689697 -49.73916245]
[562.31793213 -36.68694687]
[566.00732422 -23.52484512]
[569.32202148 -10.26343632]
[572.25946045 3.08661842]
[574.81719971 16.51458549]
[576.99322510 30.00966835]
[578.78582764 43.56101990]
[580.19342041 57.15774536]
[581.21502686 70.78891754]
[581.84979248 84.44356537]
[582.09710693 98.11072540]
[581.95690918 111.77940369]
[581.42919922 125.43860626]
[580.51446533 139.07736206]
[579.21343994 152.68470764]
[577.52716064 166.24969482]
[575.45697021 179.76141357]
[573.00451660 193.20901489]
[570.17181396 206.58168030]
[566.96112061 219.86866760]
[563.37506104 233.05928040]
[559.41644287 246.14292908]
[555.08843994 259.10906982]
[550.39465332 271.94732666]
[545.33874512 284.64730835]
[539.92474365 297.19888306]
[534.15716553 309.59188843]
[528.04052734 321.81643677]
[521.57971191 333.86260986]
[514.78002930 345.72079468]
[507.64691162 357.38143921]
[500.18603516 368.83517456]
[492.40341187 380.07275391]
[484.30535889 391.08520508]
[475.89834595 401.86361694]
[467.18911743 412.39935303]
[458.18469238 422.68395996]
[448.89230347 432.70913696]
[439.31942749 442.46682739]
[429.47378540 451.94918823]
[419.36325073 461.14862061]
[408.99597168 470.05770874]
[398.38024902 478.66928101]
[387.52468872 486.97644043]
[376.43795776 494.97247314]
[365.12896729 502.65100098]
[353.60687256 510.00579834]
[341.88085938 517.03100586]
[329.96038818 523.72094727]
[317.85507202 530.07019043]
[305.57458496 536.07373047]
[293.12884521 541.72668457]
[280.52783203 547.02447510]
[267.78170776 551.96295166]
[254.90066528 556.53802490]
[241.89511108 560.74609375]
[228.77548218 564.58380127]
[215.55230713 568.04791260]
[202.23625183 571.13580322]
[188.83801270 573.84490967]
[175.36833191 576.17309570]
[161.83807373 578.11846924]
[148.25810242 579.67944336]
[134.63932800 580.85479736]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 76]
[67 75]
[68 74]
[69 73]
[110 122]
[111 121]
[112 120]
[151 169]
[152 168]
[153 167]
[156 165]
[157 164]
] def

init

% Start Annotations
66 76 0.0 0.2 colorpair
67 75 0.0 0.2 colorpair
69 73 0.16 1 colorpair
110 122 0.32 1 colorpair
111 121 0.0 0.6 colorpair
112 120 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
66 76 2 gmark
67 75 2 gmark
68 74 4 gmark
68 cmark
74 cmark
69 cmark
110 cmark
122 cmark
111 121 1 gmark
151 169 4 gmark
151 cmark
169 cmark
152 168 5 gmark
152 cmark
168 cmark
153 167 3 gmark
156 165 4 gmark
165 cmark
157 164 5 gmark
164 cmark

% End Annotations
showpage
end
%%EOF
