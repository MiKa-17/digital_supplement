%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:13:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__CCCUUGU__GGCAAUCAUCG_UGCUGUGUUUCACAGUACUGGGAUUUACGUUGAUGGUGCGCGACUCGCUGUGCGAACUAAGGAUCAAAGAGCGUAAUAUGGAGUUUAAGGCUGUUCUCGCUUACGAAUCG___AAGAAGUAGC__AUCCGCGC_GGGGGCAACCCCGCGUAUUGGUUGUCAGG___A_G___A_CUUC__GCACC__CUUUUU_______________________\
) } def
/len { sequence length } bind def

/coor [
[374.79043579 623.71832275]
[363.68035889 619.02862549]
[352.71807861 614.00317383]
[341.91369629 608.64660645]
[331.27725220 602.96386719]
[320.81854248 596.96020508]
[310.54730225 590.64123535]
[300.47296143 584.01275635]
[290.60491943 577.08087158]
[280.95227051 569.85205078]
[271.52395630 562.33300781]
[262.32867432 554.53063965]
[253.37498474 546.45214844]
[244.67112732 538.10510254]
[236.22518921 529.49713135]
[228.04496765 520.63623047]
[220.13804626 511.53063965]
[212.51173401 502.18875122]
[205.17309570 492.61920166]
[198.12890625 482.83084106]
[191.38569641 472.83273315]
[184.94970703 462.63415527]
[178.82690430 452.24450684]
[173.02293396 441.67343140]
[167.54318237 430.93069458]
[162.39271545 420.02624512]
[157.57630920 408.97018433]
[153.09840393 397.77270508]
[148.96315002 386.44421387]
[145.17439270 374.99514771]
[141.73561096 363.43615723]
[138.65000916 351.77786255]
[135.92044067 340.03112793]
[133.54940796 328.20678711]
[131.53913879 316.31579590]
[129.89147949 304.36914062]
[128.60795593 292.37786865]
[127.68976593 280.35311890]
[127.13774109 268.30596924]
[126.95240021 256.24758911]
[127.13392639 244.18914795]
[127.68214417 232.14179993]
[128.59654236 220.11668396]
[129.87628174 208.12492371]
[131.52018738 196.17762756]
[133.52671814 184.28584290]
[135.89402771 172.46058655]
[138.61993408 160.71279907]
[141.70190430 149.05334473]
[145.13710022 137.49301147]
[148.92231750 126.04250336]
[134.84945679 120.85074615]
[120.77658081 115.65898895]
[107.41532135 124.93759155]
[91.15511322 124.46708679]
[78.35272217 114.43141937]
[74.01312256 98.75392914]
[59.87350082 93.74682617]
[45.73387909 88.73972321]
[34.03679276 98.59494781]
[19.07606697 101.25454712]
[4.88711357 96.10285187]
[-4.75360727 84.61753082]
[-7.33364010 69.94753265]
[-21.47326279 64.94042969]
[-37.06464005 67.62733459]
[-46.47913361 56.08538437]
[-60.61875534 51.07828140]
[-74.75837708 46.07117844]
[-88.89800262 41.06407547]
[-103.03762054 36.05697250]
[-119.98655701 36.46929169]
[-125.07469177 20.29687119]
[-110.94283295 10.93060875]
[-98.03051758 21.91735077]
[-83.89089966 26.92445374]
[-69.75127411 31.93155670]
[-55.61165237 36.93865967]
[-41.47203064 41.94576263]
[-26.89200974 38.90071106]
[-16.46615982 50.80080414]
[-2.32653713 55.80790710]
[8.91065788 46.03084183]
[23.63084793 43.17217636]
[37.89980316 48.09794998]
[47.85272980 59.57994080]
[50.74098206 74.60009766]
[64.88059998 79.60720062]
[79.02022552 84.61430359]
[89.29492188 76.28772736]
[102.33578491 74.08833313]
[114.77308655 78.58443451]
[123.39305878 88.61425781]
[125.96833801 101.58612061]
[140.04121399 106.77787781]
[154.11407471 111.96963501]
[165.18629456 86.33570862]
[178.03527832 61.54501343]
[192.59721375 37.72050858]
[208.79986572 14.98036194]
[226.56278992 -6.56263971]
[245.79783630 -26.80165482]
[266.40957642 -45.63631058]
[288.29568481 -62.97320175]
[311.34759521 -78.72635651]
[335.45092773 -92.81767273]
[360.48605347 -105.17726898]
[386.32879639 -115.74387360]
[412.85092163 -124.46511078]
[439.92083740 -131.29776001]
[467.40423584 -136.20797729]
[495.16479492 -139.17141724]
[494.37976074 -154.15086365]
[493.59472656 -169.13031006]
[480.99795532 -178.39611816]
[477.35446167 -193.60331726]
[484.38458252 -207.57153320]
[498.76895142 -213.70541382]
[513.71563721 -209.10870361]
[522.16735840 -195.95185852]
[520.13342285 -180.44711304]
[508.57415771 -169.91534424]
[509.35922241 -154.93589783]
[510.14425659 -139.95646667]
[522.20001221 -140.17665100]
[534.25695801 -140.03004456]
[546.30383301 -139.51676941]
[558.32952881 -138.63731384]
[570.32293701 -137.39247131]
[582.27301025 -135.78341675]
[594.16851807 -133.81163025]
[605.99865723 -131.47892761]
[617.75231934 -128.78747559]
[629.41870117 -125.73975372]
[640.98699951 -122.33858490]
[652.44653320 -118.58712769]
[663.78662109 -114.48883820]
[674.99682617 -110.04751587]
[686.06677246 -105.26727295]
[696.98626709 -100.15251923]
[707.74505615 -94.70800018]
[718.33337402 -88.93874359]
[728.74127197 -82.85009766]
[738.95916748 -76.44768524]
[748.97760010 -69.73743439]
[758.78729248 -62.72555923]
[768.37921143 -55.41854095]
[777.74444580 -47.82314682]
[786.87432861 -39.94639587]
[795.76037598 -31.79558563]
[804.39447021 -23.37825394]
[812.76849365 -14.70218945]
[820.87481689 -5.77542067]
[828.70581055 3.39379263]
[836.25433350 12.79696560]
[843.51336670 22.42539787]
[850.47613525 32.27017975]
[857.13629150 42.32220078]
[863.48760986 52.57215881]
[869.52423096 63.01057053]
[875.24060059 73.62777710]
[880.63134766 84.41395569]
[885.69152832 95.35912323]
[890.41644287 106.45314789]
[894.80181885 117.68577576]
[898.84344482 129.04660034]
[902.53765869 140.52510071]
[905.88104248 152.11068726]
[908.87048340 163.79260254]
[911.50317383 175.56007385]
[913.77679443 187.40217590]
[915.68914795 199.30796814]
[917.23846436 211.26643372]
[918.42333984 223.26651001]
[919.24267578 235.29707336]
[919.69573975 247.34701538]
[919.78204346 259.40518188]
[919.50152588 271.46038818]
[918.85449219 283.50149536]
[917.84149170 295.51739502]
[916.46343994 307.49691772]
[914.72167969 319.42898560]
[912.61779785 331.30258179]
[910.15374756 343.10668945]
[907.33178711 354.83041382]
[904.15454102 366.46286011]
[900.62493896 377.99334717]
[896.74621582 389.41110229]
[892.52203369 400.70565796]
[887.95623779 411.86648560]
[883.05310059 422.88330078]
[877.81707764 433.74588013]
[872.25311279 444.44418335]
[866.36633301 454.96832275]
[860.16210938 465.30853271]
[853.64630127 475.45526123]
[846.82482910 485.39913940]
[839.70404053 495.13092041]
[832.29052734 504.64163208]
[824.59118652 513.92248535]
[816.61309814 522.96478271]
[808.36364746 531.76031494]
[799.85052490 540.30084229]
[791.08148193 548.57849121]
[782.06475830 556.58563232]
[772.80865479 564.31475830]
[763.32165527 571.75878906]
[753.61267090 578.91082764]
[743.69067383 585.76428223]
[733.56469727 592.31274414]
[723.24426270 598.55023193]
[712.73889160 604.47088623]
[702.05828857 610.06927490]
[691.21228027 615.34020996]
[680.21099854 620.27880859]
[669.06457520 624.88055420]
[657.78332520 629.14111328]
[646.37768555 633.05657959]
[634.85821533 636.62329102]
[623.23559570 639.83795166]
[611.52050781 642.69769287]
[599.72387695 645.19970703]
[587.85662842 647.34179688]
[575.92962646 649.12188721]
[563.95404053 650.53839111]
[551.94085693 651.59002686]
[539.90130615 652.27575684]
[527.84637451 652.59497070]
[515.78735352 652.54736328]
[503.73532104 652.13299561]
[491.70144653 651.35223389]
[479.69689941 650.20581055]
[467.73275757 648.69476318]
[455.82009888 646.82049561]
[443.96994019 644.58477783]
[432.19323730 641.98962402]
[420.50094604 639.03747559]
[408.90380859 635.73107910]
[397.41262817 632.07342529]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 96]
[52 95]
[53 94]
[57 89]
[58 88]
[59 87]
[64 82]
[65 81]
[67 79]
[68 78]
[69 77]
[70 76]
[71 75]
[112 124]
[113 123]
[114 122]
] def

init

% Start Annotations
51 96 0.0 0.2 colorpair
52 95 0.32 0.2 colorpair
57 89 0.0 1 colorpair
58 88 0.16 0.2 colorpair
59 87 0.16 0.2 colorpair
65 81 0.16 1 colorpair
68 78 0.0 0.6 colorpair
69 77 0.0 0.6 colorpair
71 75 0.16 1 colorpair
112 124 0.32 1 colorpair
113 123 0.0 0.6 colorpair
114 122 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
51 96 2 gmark
52 95 2 gmark
52 cmark
95 cmark
53 94 3 gmark
53 cmark
94 cmark
58 88 2 gmark
88 cmark
59 87 2 gmark
59 cmark
64 82 4 gmark
64 cmark
82 cmark
65 cmark
67 79 6 gmark
67 cmark
79 cmark
68 78 1 gmark
69 77 1 gmark
70 76 3 gmark
70 cmark
76 cmark
71 cmark
112 cmark
124 cmark
113 123 1 gmark

% End Annotations
showpage
end
%%EOF
