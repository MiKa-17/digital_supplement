%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:17:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_____ACUACCGCGAAACACCCUGCUCGGGUGCGUAUUAAUAGUGUGCCUAACACUCCUGAUAUUCACAUACCUCACCCGGAAACCACUAUGCGAAAUCCGGCAAAAGGACACGAACAGGGAGGUCGCGGCAAGCCUGGCUUACGAAUCCAA___UA__\
) } def
/len { sequence length } bind def

/coor [
[136.48367310 468.89773560]
[136.32603455 453.86169434]
[138.71192932 439.01528931]
[143.57273865 424.78570557]
[150.76856995 411.58239746]
[160.09240723 399.78518677]
[171.27598572 389.73352051]
[183.99751282 381.71664429]
[178.25726318 367.85845947]
[172.51701355 354.00024414]
[166.77676392 340.14205933]
[161.03651428 326.28387451]
[155.29626465 312.42565918]
[149.55601501 298.56747437]
[143.81576538 284.70928955]
[130.57322693 282.80072021]
[119.92571259 274.52117920]
[114.73059082 261.95666504]
[116.44902802 248.36022949]
[124.73696899 237.30989075]
[119.26990509 223.34167480]
[113.80284882 209.37344360]
[108.33579254 195.40522766]
[102.86873627 181.43699646]
[91.02493286 172.40519714]
[93.20026398 156.73425293]
[87.73320770 142.76602173]
[82.26615143 128.79780579]
[71.55593109 118.29583740]
[57.48305893 113.10408020]
[43.41019058 107.91233063]
[29.33732033 102.72057343]
[13.71210670 105.20316315]
[4.44950199 93.53897095]
[-9.62336826 88.34721375]
[-23.69623756 83.15545654]
[-37.76910782 77.96370697]
[-51.84197998 72.77194977]
[-65.91484833 67.58019257]
[-79.98771667 62.38843536]
[-94.06058502 57.19667816]
[-108.13346100 52.00492477]
[-122.20632935 46.81316757]
[-136.27920532 41.62141037]
[-150.35206604 36.42965698]
[-164.42494202 31.23789978]
[-178.49780273 26.04614449]
[-195.45068359 26.23657417]
[-200.32669067 9.99893761]
[-186.07344055 0.81845731]
[-173.30604553 11.97327423]
[-159.23318481 17.16503143]
[-145.16030884 22.35678673]
[-131.08744812 27.54854202]
[-117.01457214 32.74029922]
[-102.94170380 37.93205261]
[-88.86883545 43.12380981]
[-74.79595947 48.31556702]
[-60.72309113 53.50732040]
[-46.65022278 58.69907761]
[-32.57735062 63.89083481]
[-18.50448227 69.08258820]
[-4.43161201 74.27434540]
[9.64125824 79.46610260]
[24.25988579 76.61215973]
[34.52907562 88.64770508]
[48.60194778 93.83945465]
[62.67481613 99.03121185]
[76.74768829 104.22296906]
[79.63615417 91.19284058]
[88.72486115 82.59156036]
[100.25295258 80.70673370]
[106.26418304 66.96391296]
[112.27542114 53.22109604]
[103.52852631 38.77288818]
[105.08229828 22.12148094]
[116.12999725 9.78812408]
[132.18572998 6.48490286]
[137.92597961 -7.37329006]
[143.66622925 -21.23148346]
[149.40647888 -35.08967590]
[155.14674377 -48.94786835]
[144.14916992 -59.40817261]
[137.67648315 -73.13656616]
[136.60404968 -88.27639008]
[141.07690430 -102.78011322]
[150.49014282 -114.68622589]
[163.57069397 -122.38452148]
[178.54951477 -124.83386993]
[193.40084839 -121.70301056]
[206.11618042 -113.41538239]
[214.97584534 -101.09180450]
[218.78167725 -86.39894104]
[217.01895142 -71.32389069]
[209.92605591 -57.90542221]
[198.46224976 -47.95827484]
[184.17793274 -42.82771683]
[169.00492859 -43.20761871]
[163.26467896 -29.34942436]
[157.52442932 -15.49123192]
[151.78417969 -1.63303852]
[146.04393005 12.22515488]
[154.05824280 22.93860054]
[155.73266602 36.32204056]
[150.52171326 48.88000488]
[139.69245911 57.27901840]
[126.01824188 59.23233032]
[120.00700378 72.97515106]
[113.99577332 86.71796417]
[120.18917847 97.22232056]
[118.98057556 110.02159882]
[110.06056976 120.17939758]
[96.23437500 123.33074188]
[101.70143127 137.29896545]
[107.16848755 151.26719666]
[119.40333557 161.29809570]
[116.83695984 175.96994019]
[122.30401611 189.93817139]
[127.77107239 203.90638733]
[133.23812866 217.87461853]
[138.70518494 231.84283447]
[155.10659790 235.87428284]
[165.78224182 248.74728394]
[166.69134521 265.28018188]
[157.67395020 278.96902466]
[163.41419983 292.82723999]
[169.15444946 306.68542480]
[174.89469910 320.54360962]
[180.63496399 334.40179443]
[186.37521362 348.26000977]
[192.11546326 362.11819458]
[197.85571289 375.97637939]
[212.51998901 372.64968872]
[227.53556824 371.84930420]
[242.47039795 373.59823608]
[256.89477539 377.84619141]
[270.39370728 384.47091675]
[282.57879639 393.28179932]
[293.09942627 404.02536011]
[301.65292358 416.39248657]
[307.99316406 430.02734375]
[311.93774414 444.53762817]
[313.37316895 459.50585938]
[312.25814819 474.50134277]
[308.62475586 489.09265137]
[302.57751465 502.85995483]
[294.29043579 515.40716553]
[284.00192261 526.37322998]
[272.00805664 535.44268799]
[258.65386963 542.35455322]
[244.32360840 546.90997314]
[229.42958069 548.97784424]
[214.40032959 548.49871826]
[199.66827393 545.48638916]
[185.65725708 540.02746582]
[172.77044678 532.27905273]
[161.37858582 522.46405029]
[151.80944824 510.86495972]
[144.33837891 497.81539917]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 132]
[9 131]
[10 130]
[11 129]
[12 128]
[13 127]
[14 126]
[15 125]
[20 121]
[21 120]
[22 119]
[23 118]
[24 117]
[26 115]
[27 114]
[28 113]
[29 69]
[30 68]
[31 67]
[32 66]
[34 64]
[35 63]
[36 62]
[37 61]
[38 60]
[39 59]
[40 58]
[41 57]
[42 56]
[43 55]
[44 54]
[45 53]
[46 52]
[47 51]
[72 109]
[73 108]
[74 107]
[78 102]
[79 101]
[80 100]
[81 99]
[82 98]
] def

init

% Start Annotations
8 132 0.0 0.2 colorpair
9 131 0.0 0.2 colorpair
10 130 0.0 1 colorpair
11 129 0.0 1 colorpair
12 128 0.0 1 colorpair
13 127 0.0 1 colorpair
14 126 0.0 0.2 colorpair
15 125 0.0 1 colorpair
20 121 0.0 1 colorpair
21 120 0.16 1 colorpair
22 119 0.0 1 colorpair
23 118 0.0 1 colorpair
24 117 0.0 1 colorpair
26 115 0.0 1 colorpair
27 114 0.0 1 colorpair
28 113 0.16 1 colorpair
29 69 0.0 0.2 colorpair
30 68 0.0 1 colorpair
31 67 0.0 1 colorpair
32 66 0.0 1 colorpair
34 64 0.0 1 colorpair
35 63 0.0 1 colorpair
36 62 0.0 1 colorpair
37 61 0.0 1 colorpair
38 60 0.0 1 colorpair
39 59 0.0 1 colorpair
40 58 0.0 0.2 colorpair
41 57 0.0 0.2 colorpair
42 56 0.0 0.2 colorpair
43 55 0.0 1 colorpair
44 54 0.16 1 colorpair
45 53 0.0 1 colorpair
46 52 0.0 1 colorpair
47 51 0.0 0.2 colorpair
72 109 0.0 1 colorpair
73 108 0.0 1 colorpair
74 107 0.16 1 colorpair
78 102 0.0 1 colorpair
79 101 0.0 1 colorpair
80 100 0.0 1 colorpair
81 99 0.0 1 colorpair
82 98 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
8 132 2 gmark
9 131 2 gmark
14 126 2 gmark
21 cmark
28 cmark
113 cmark
29 69 2 gmark
40 58 2 gmark
41 57 2 gmark
42 56 2 gmark
54 cmark
47 51 2 gmark
107 cmark

% End Annotations
showpage
end
%%EOF
