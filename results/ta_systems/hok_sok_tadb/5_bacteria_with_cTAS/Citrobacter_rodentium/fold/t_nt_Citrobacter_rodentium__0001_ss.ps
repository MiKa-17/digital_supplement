%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:18:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAGAGGCUACCCUUAUGGUGUUCAUGCAUAGAGGUGGCCUCACUUUGAUUUAUAGUCAGGUGGGGCUUUUCUCUGUCUGCCUUCUGGUGAAUACCUGAGACACACAGUCUCAAGCACCCGCG\
) } def
/len { sequence length } bind def

/coor [
[44.48914719 131.89970398]
[37.04735184 130.96711731]
[29.54735184 143.95750427]
[22.04735184 156.94787598]
[14.54735184 169.93826294]
[7.04735184 182.92864990]
[5.43573189 192.03404236]
[-0.80502522 196.14604187]
[-8.62655354 208.94540405]
[-11.72634792 225.61357117]
[-28.60121918 227.24913025]
[-34.84428406 211.48649597]
[-21.42591667 201.12388611]
[-13.60438824 188.32452393]
[-5.94302893 175.42864990]
[1.55697095 162.43826294]
[9.05697060 149.44787598]
[16.55697060 136.45750427]
[24.05697060 123.46711731]
[91.74382782 91.62026215]
[88.77163696 76.91767883]
[85.79944611 62.21508789]
[82.82724762 47.51250076]
[79.85505676 32.80991364]
[76.88286591 18.10732841]
[73.91067505 3.40474033]
[70.93848419 -11.29784679]
[67.96629333 -26.00043488]
[63.90368271 -40.43979645]
[58.77338028 -54.53518677]
[53.64307785 -68.63057709]
[48.16296387 -82.59368134]
[42.33644104 -96.41582489]
[36.50991821 -110.23796844]
[30.68339729 -124.06011200]
[24.85687447 -137.88226318]
[19.03035355 -151.70439148]
[4.11169863 -162.41146851]
[6.84117842 -179.69935608]
[0.67187202 -193.37194824]
[-5.49743462 -207.04454041]
[-11.66674137 -220.71711731]
[-17.83604813 -234.38970947]
[-24.00535393 -248.06230164]
[-30.17466164 -261.73489380]
[-36.34396744 -275.40747070]
[-42.51327515 -289.08007812]
[-48.68257904 -302.75265503]
[-55.13483047 -309.37640381]
[-54.83051682 -316.84387207]
[-60.65703964 -330.66601562]
[-66.48355865 -344.48815918]
[-72.31008148 -358.31030273]
[-84.03411102 -370.55706787]
[-75.51147461 -385.21316528]
[-59.06885147 -381.08081055]
[-58.48793793 -364.13681030]
[-52.66141510 -350.31466675]
[-46.83489609 -336.49252319]
[-41.00837326 -322.67037964]
[-35.00999069 -308.92196655]
[-28.84068680 -295.24935913]
[-22.67137909 -281.57678223]
[-16.50207329 -267.90420532]
[-10.33276653 -254.23161316]
[-4.16345978 -240.55902100]
[2.00584674 -226.88642883]
[8.17515373 -213.21383667]
[14.34445953 -199.54125977]
[20.51376724 -185.86866760]
[31.76986885 -181.25427246]
[36.99110794 -169.82270813]
[32.85249710 -157.53091431]
[38.67901993 -143.70877075]
[44.50553894 -129.88662720]
[50.33206177 -116.06449127]
[56.15858459 -102.24234772]
[61.98510742 -88.42020416]
[66.09209442 -85.79141235]
[68.53002167 -80.50440216]
[67.73846436 -73.76087952]
[72.86876678 -59.66548920]
[77.99906921 -45.57009888]
[85.93090820 -58.30139923]
[100.48820496 -61.91872406]
[113.45668793 -54.38092041]
[117.51859283 -39.94136047]
[110.38190460 -26.74788857]
[96.07365417 -22.24521828]
[82.66887665 -28.97262573]
[85.64106750 -14.27003956]
[88.61325836 0.43254808]
[91.58545685 15.13513565]
[94.55764771 29.83772278]
[97.52983856 44.54030991]
[100.50202942 59.24289703]
[103.47422028 73.94548798]
[106.44641113 88.64807129]
[114.58460999 101.24845886]
[126.76367950 110.00461578]
[138.94274902 118.76077271]
[151.12182617 127.51692963]
[163.30088806 136.27308655]
[175.47996521 145.02923584]
[191.48107910 143.87001038]
[202.25762939 155.75468445]
[199.54275513 171.56636047]
[185.41908264 179.17567444]
[170.72108459 172.74540710]
[166.72380066 157.20831299]
[154.54473877 148.45214844]
[142.36566162 139.69599915]
[130.18659973 130.93983459]
[118.00752258 122.18368530]
[105.82845306 113.42752838]
[99.68481445 117.72935486]
[81.25389099 130.63482666]
[85.31649780 145.07418823]
[97.42752075 156.13110352]
[93.64366913 172.08773804]
[77.85745239 176.52929688]
[66.30837250 164.88667297]
[70.87713623 149.13679504]
[66.81452942 134.69743347]
[59.37273407 133.76484680]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 19]
[3 18]
[4 17]
[5 16]
[6 15]
[8 14]
[9 13]
[20 98]
[21 97]
[22 96]
[23 95]
[24 94]
[25 93]
[26 92]
[27 91]
[28 90]
[29 83]
[30 82]
[31 81]
[32 78]
[33 77]
[34 76]
[35 75]
[36 74]
[37 73]
[39 70]
[40 69]
[41 68]
[42 67]
[43 66]
[44 65]
[45 64]
[46 63]
[47 62]
[48 61]
[50 60]
[51 59]
[52 58]
[53 57]
[99 115]
[100 114]
[101 113]
[102 112]
[103 111]
[104 110]
[117 124]
[118 123]
] def

init

% Start Annotations
2 19 0.0 1 colorpair
3 18 0.0 1 colorpair
4 17 0.0 1 colorpair
5 16 0.0 1 colorpair
6 15 0.0 1 colorpair
8 14 0.0 1 colorpair
9 13 0.0 1 colorpair
20 98 0.0 1 colorpair
21 97 0.0 1 colorpair
22 96 0.0 1 colorpair
23 95 0.0 1 colorpair
24 94 0.0 1 colorpair
25 93 0.0 1 colorpair
26 92 0.0 1 colorpair
27 91 0.0 1 colorpair
28 90 0.0 1 colorpair
29 83 0.0 1 colorpair
30 82 0.0 1 colorpair
31 81 0.0 1 colorpair
32 78 0.0 1 colorpair
33 77 0.0 1 colorpair
34 76 0.0 1 colorpair
35 75 0.0 1 colorpair
36 74 0.0 1 colorpair
37 73 0.0 1 colorpair
39 70 0.0 1 colorpair
40 69 0.0 1 colorpair
41 68 0.0 1 colorpair
42 67 0.0 1 colorpair
43 66 0.0 1 colorpair
44 65 0.0 1 colorpair
45 64 0.0 1 colorpair
46 63 0.0 1 colorpair
47 62 0.0 1 colorpair
48 61 0.0 1 colorpair
50 60 0.0 1 colorpair
51 59 0.0 1 colorpair
52 58 0.0 1 colorpair
53 57 0.0 1 colorpair
99 115 0.0 1 colorpair
100 114 0.0 1 colorpair
101 113 0.0 1 colorpair
102 112 0.0 1 colorpair
103 111 0.0 1 colorpair
104 110 0.0 1 colorpair
117 124 0.0 1 colorpair
118 123 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
