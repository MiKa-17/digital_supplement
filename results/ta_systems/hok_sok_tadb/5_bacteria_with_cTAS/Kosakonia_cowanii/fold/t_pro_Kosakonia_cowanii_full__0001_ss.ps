%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:15:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_________________________________CAAACUUUUAUCUGCUGCGUGUUUAUUCUCUGCUUCACGCUGCUGAUAUUCACCUAUCUGACCCGCAAAUCCCUGUGCGAGCUUCGCUACCGGGACAAGGAGAGAGAGGUGGCGGCUUUGAUGGCUUACGAAUCCGGUAA_\
) } def
/len { sequence length } bind def

/coor [
[127.01513672 215.20037842]
[123.06717682 229.67150879]
[117.31909943 243.52645874]
[109.86338806 256.54229736]
[100.81999969 268.50964355]
[90.33443451 279.23590088]
[78.57540131 288.54855347]
[65.73209381 296.29769897]
[52.01115036 302.35870361]
[37.63333511 306.63403320]
[22.82997704 309.05490112]
[7.83925343 309.58236694]
[-7.09764481 308.20791626]
[-21.74039268 304.95370483]
[-35.85339737 299.87203979]
[-49.20958710 293.04473877]
[-61.59407425 284.58160400]
[-72.80759430 274.61883545]
[-82.66973877 263.31671143]
[-91.02182007 250.85707092]
[-97.72946930 237.44038391]
[-102.68475342 223.28251648]
[-105.80795288 208.61126709]
[-107.04882050 193.66267395]
[-106.38738251 178.67726135]
[-103.83428192 163.89613342]
[-99.43060303 149.55711365]
[-93.24719238 135.89089966]
[-85.38354492 123.11737061]
[-75.96617126 111.44205475]
[-65.14659882 101.05278778]
[-53.09890366 92.11673737]
[-40.01692581 84.77766418]
[-26.11115074 79.15367126]
[-11.60530663 75.33522797]
[3.26721287 73.38377380]
[18.26711845 73.33071136]
[33.15307236 75.17689514]
[47.68556976 78.89260864]
[61.63078690 84.41808319]
[74.76435852 91.66440582]
[86.87833405 100.51779938]
[74.82270813 91.59245300]
[62.76707840 82.66709900]
[50.71145248 73.74175262]
[35.01626205 71.74886322]
[29.39111900 57.95730972]
[17.33548927 49.03195953]
[1.64030087 47.03907394]
[-3.98484302 33.24751663]
[-16.04047012 24.32216835]
[-28.09609795 15.39682102]
[-40.15172577 6.47147274]
[-52.20735550 -2.45387530]
[-65.22100067 5.40191507]
[-80.25106812 7.67466974]
[-95.00559235 4.01780939]
[-107.23459625 -5.01102066]
[-115.07326508 -18.03499031]
[-117.32624817 -33.06803894]
[-113.64997864 -47.81773376]
[-104.60507202 -60.03485489]
[-91.57080078 -67.85637665]
[-76.53480530 -70.08958435]
[-61.78995514 -66.39392090]
[-49.58474350 -57.33294678]
[-41.78036880 -44.28839874]
[-39.56694794 -29.24947548]
[-43.28200531 -14.50950336]
[-31.22637939 -5.58415508]
[-19.17075157 3.34119272]
[-7.11512280 12.26654053]
[4.94050503 21.19188881]
[19.77339554 22.54637718]
[26.26083755 36.97633362]
[38.31646729 45.90167999]
[53.14935684 47.25616837]
[59.63679886 61.68612671]
[71.69242859 70.61147308]
[83.74805450 79.53681946]
[95.80368042 88.46217346]
[100.56655121 83.29831696]
[108.55741119 80.66361237]
[120.77131653 71.95611572]
[132.98522949 63.24861526]
[145.19912720 54.54111862]
[157.41302490 45.83361816]
[169.62693787 37.12611771]
[176.37236023 22.81494331]
[191.22717285 21.72693825]
[203.44108582 13.01943970]
[215.65498352 4.31194019]
[218.39596558 -11.02184010]
[230.90663147 -19.67849159]
[245.50816345 -16.97089386]
[257.72207642 -25.67839432]
[255.82322693 -37.04129028]
[258.30651855 -48.23825836]
[264.77294922 -57.64819717]
[274.24975586 -63.92354202]
[285.33657837 -66.18318176]
[296.41229248 -64.13601685]
[305.87210083 -58.11783981]
[318.53701782 -66.15524292]
[331.20193481 -74.19264221]
[343.86688232 -82.23004150]
[351.37289429 -96.15736389]
[366.26473999 -96.44416046]
[378.92965698 -104.48155975]
[391.52191162 -112.63231659]
[404.04052734 -120.89577484]
[416.55911255 -129.15922546]
[429.07769775 -137.42268372]
[438.96572876 -151.19451904]
[454.93661499 -145.50537109]
[453.89099121 -128.58369446]
[437.34115601 -124.90408325]
[424.82257080 -116.64063263]
[412.30395508 -108.37717438]
[399.78536987 -100.11371613]
[395.92230225 -93.78345490]
[386.96704102 -91.81664276]
[374.30212402 -83.77924347]
[367.70199585 -70.42681122]
[351.90426636 -69.56512451]
[339.23934937 -61.52772522]
[326.57443237 -53.49032211]
[313.90951538 -45.45291901]
[313.84454346 -26.79721260]
[302.48989868 -11.80681705]
[284.26159668 -6.60933208]
[266.42956543 -13.46448898]
[254.21566772 -4.75698996]
[252.01463318 9.92943382]
[239.75202942 18.93406868]
[224.36248779 16.52584457]
[212.14859009 25.23334312]
[199.93467712 33.94084167]
[194.06286621 47.62919998]
[178.33442688 49.34002304]
[166.12052917 58.04752350]
[153.90663147 66.75502014]
[141.69271851 75.46252441]
[129.47882080 84.17002106]
[117.26491547 92.87751770]
[114.85192871 107.68216705]
[123.66870880 119.81742096]
[132.48548889 131.95266724]
[146.85662842 138.56938171]
[148.07792664 153.41383362]
[156.89469910 165.54908752]
[165.71148682 177.68434143]
[174.52825928 189.81959534]
[190.04475403 189.68492126]
[202.65742493 198.72372437]
[207.51646423 213.46040344]
[202.75344849 228.22837830]
[190.19987488 237.34909058]
[174.68284607 237.31542969]
[162.16896057 228.14033508]
[157.47007751 213.35182190]
[162.39300537 198.63636780]
[153.57623291 186.50111389]
[144.75944519 174.36585999]
[135.94267273 162.23060608]
[122.20216370 156.48190308]
[120.35023499 140.76945496]
[111.53345490 128.63420105]
[102.71667480 116.49893951]
[111.45865631 128.68818665]
[118.58729553 141.88601685]
[123.98789215 155.88006592]
[127.57355499 170.44519043]
[129.28659058 185.34706116]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 81]
[43 80]
[44 79]
[45 78]
[47 76]
[48 75]
[50 73]
[51 72]
[52 71]
[53 70]
[54 69]
[83 145]
[84 144]
[85 143]
[86 142]
[87 141]
[88 140]
[90 138]
[91 137]
[92 136]
[95 133]
[96 132]
[103 128]
[104 127]
[105 126]
[106 125]
[108 123]
[109 122]
[110 120]
[111 119]
[112 118]
[113 117]
[146 169]
[147 168]
[148 167]
[150 165]
[151 164]
[152 163]
[153 162]
] def

init

% Start Annotations
42 81 0.0 1 colorpair
43 80 0.0 1 colorpair
44 79 0.0 1 colorpair
45 78 0.0 1 colorpair
47 76 0.16 1 colorpair
48 75 0.0 1 colorpair
50 73 0.0 1 colorpair
51 72 0.0 1 colorpair
52 71 0.0 1 colorpair
53 70 0.0 1 colorpair
54 69 0.0 1 colorpair
83 145 0.0 1 colorpair
84 144 0.0 1 colorpair
85 143 0.0 1 colorpair
86 142 0.0 1 colorpair
87 141 0.0 1 colorpair
88 140 0.0 1 colorpair
90 138 0.0 1 colorpair
91 137 0.0 1 colorpair
92 136 0.0 1 colorpair
95 133 0.0 1 colorpair
96 132 0.0 1 colorpair
103 128 0.0 1 colorpair
104 127 0.0 1 colorpair
105 126 0.0 1 colorpair
106 125 0.0 1 colorpair
108 123 0.0 1 colorpair
109 122 0.0 1 colorpair
110 120 0.0 1 colorpair
111 119 0.0 1 colorpair
112 118 0.0 1 colorpair
113 117 0.0 1 colorpair
146 169 0.0 1 colorpair
147 168 0.0 1 colorpair
148 167 0.0 1 colorpair
150 165 0.0 1 colorpair
151 164 0.0 1 colorpair
152 163 0.0 1 colorpair
153 162 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
76 cmark

% End Annotations
showpage
end
%%EOF
