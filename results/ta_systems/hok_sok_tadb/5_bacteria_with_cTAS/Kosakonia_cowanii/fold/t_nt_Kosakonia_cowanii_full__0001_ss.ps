%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:15:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAGAGGCUACGCUGACGUUGU____GCGU_GGUGUAGCCUCGGGUUAAUUGAAAAAUUGACUCGGGGCUUUCAUCUUUCUGCCUCACAACAUUUCUGC_UA__ACUUC__AA_GCA__GCCAUGAGGCAAAAAGCCUCAAGCGCCGCCCGCAUCAUA\
) } def
/len { sequence length } bind def

/coor [
[36.45379257 246.43408203]
[21.61726952 239.05828857]
[7.62521601 230.18432617]
[-5.37162066 219.90780640]
[-17.23321724 208.33943176]
[-27.83178139 195.60385132]
[-40.25277710 204.01329041]
[-52.67377472 212.42274475]
[-65.09477234 220.83219910]
[-77.51576996 229.24165344]
[-89.93675995 237.65109253]
[-102.35775757 246.06054688]
[-114.77875519 254.47000122]
[-127.19975281 262.87945557]
[-139.62074280 271.28890991]
[-152.04174805 279.69836426]
[-164.46273804 288.10778809]
[-176.88374329 296.51724243]
[-189.30473328 304.92669678]
[-201.72572327 313.33615112]
[-214.14672852 321.74560547]
[-215.57423401 337.31790161]
[-226.71379089 348.29260254]
[-242.30563354 349.48782349]
[-254.98777771 340.33917236]
[-258.77209473 325.16641235]
[-251.87173462 311.13360596]
[-237.54486084 304.86666870]
[-222.55616760 309.32461548]
[-210.13517761 300.91516113]
[-197.71418762 292.50570679]
[-185.29318237 284.09625244]
[-172.87219238 275.68679810]
[-160.45118713 267.27734375]
[-148.03019714 258.86788940]
[-135.60920715 250.45845032]
[-123.18820190 242.04899597]
[-110.76721191 233.63955688]
[-98.34621429 225.23010254]
[-85.92521667 216.82064819]
[-73.50421906 208.41119385]
[-61.08322525 200.00175476]
[-48.66222763 191.59230042]
[-36.24123383 183.18284607]
[-42.81095886 171.31683350]
[-48.34964371 158.93592834]
[-52.81729889 146.12951660]
[-56.18167114 132.99008179]
[-58.41846848 119.61247253]
[-59.51154327 106.09326172]
[-59.45300293 92.53006744]
[-58.24327087 79.02079773]
[-55.89108276 65.66298676]
[-52.41341782 52.55308151]
[-47.83538437 39.78572464]
[-42.19003296 27.45309067]
[-35.51812363 15.64421940]
[-27.86782455 4.44436550]
[-19.29436684 -6.06561184]
[-9.85964775 -15.80983448]
[0.36821768 -24.71795464]
[11.31538773 -32.72565460]
[22.90282822 -39.77512741]
[35.04687881 -45.81547165]
[47.65987015 -50.80308533]
[60.65073776 -54.70195770]
[73.92568970 -57.48393631]
[72.17353058 -72.38124847]
[70.42137146 -87.27856445]
[68.66921234 -102.17587280]
[66.91704559 -117.07318878]
[52.46932983 -121.99520111]
[41.59399033 -132.70452881]
[36.45033264 -147.07482910]
[38.05963516 -162.25286865]
[46.10237503 -175.22503662]
[58.98165131 -183.41569519]
[74.14028168 -185.19859314]
[88.56850433 -180.21972656]
[99.40158844 -169.46765137]
[104.48861694 -155.07720947]
[102.81954956 -139.90562439]
[94.72579193 -126.96523285]
[81.81436157 -118.82534790]
[83.56652069 -103.92803955]
[85.31867981 -89.03072357]
[87.07084656 -74.13340759]
[88.82300568 -59.23609924]
[97.68153381 -59.61104202]
[106.54722595 -59.49355316]
[115.39270782 -58.88399887]
[124.19070435 -57.78425217]
[132.91406250 -56.19770813]
[141.53588867 -54.12926483]
[150.02955627 -51.58530045]
[158.36888123 -48.57366562]
[166.52812195 -45.10365295]
[174.48210144 -41.18596268]
[182.20629883 -36.83269119]
[189.67686462 -32.05725861]
[196.87077332 -26.87440300]
[203.76580811 -21.30011559]
[210.34069824 -15.35159302]
[216.57518005 -9.04718781]
[222.44998169 -2.40634942]
[227.94702148 4.55043268]
[233.04931641 11.80169582]
[237.74111938 19.32506943]
[242.00796509 27.09733963]
[245.83668518 35.09453201]
[249.21548462 43.29196548]
[252.13391113 51.66436005]
[254.58297729 60.18587875]
[256.55511475 68.83023071]
[258.04425049 77.57074738]
[259.04580688 86.38046265]
[259.55667114 95.23220062]
[259.57525635 104.09864044]
[259.10153198 112.95243835]
[258.13693237 121.76628113]
[256.68444824 130.51296997]
[254.74858093 139.16551208]
[252.33526611 147.69721985]
[249.45198059 156.08178711]
[246.10758972 164.29331970]
[242.31243896 172.30648804]
[255.35133362 179.72184753]
[268.39022827 187.13719177]
[281.42910767 194.55253601]
[294.46798706 201.96788025]
[307.50689697 209.38323975]
[323.29486084 206.53382874]
[335.27087402 217.20878601]
[334.24795532 233.21919250]
[321.01077271 242.28323364]
[305.71380615 237.44775391]
[300.09152222 222.42211914]
[287.05264282 215.00677490]
[274.01376343 207.59143066]
[260.97488403 200.17607117]
[247.93597412 192.76072693]
[234.89709473 185.34538269]
[210.08752441 215.59324646]
[178.66584778 238.89833069]
[185.43655396 252.28329468]
[192.20726013 265.66827393]
[206.94087219 272.01654053]
[211.02465820 287.53112793]
[201.32591248 300.31054688]
[185.28466797 300.55154419]
[175.20640564 288.06924438]
[178.82229614 272.43896484]
[172.05158997 259.05401611]
[165.28086853 245.66903687]
[149.82968140 251.65112305]
[133.84164429 255.99937439]
[117.48899841 258.66693115]
[100.94793701 259.62506104]
[84.39666748 258.86346436]
[68.01349640 256.39028931]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 44]
[7 43]
[8 42]
[9 41]
[10 40]
[11 39]
[12 38]
[13 37]
[14 36]
[15 35]
[16 34]
[17 33]
[18 32]
[19 31]
[20 30]
[21 29]
[67 88]
[68 87]
[69 86]
[70 85]
[71 84]
[126 142]
[127 141]
[128 140]
[129 139]
[130 138]
[131 137]
[144 154]
[145 153]
[146 152]
] def

init

% Start Annotations
6 44 0.0 0.2 colorpair
7 43 0.0 0.2 colorpair
8 42 0.0 0.2 colorpair
9 41 0.0 0.2 colorpair
10 40 0.0 0.2 colorpair
11 39 0.0 0.2 colorpair
12 38 0.0 0.2 colorpair
13 37 0.0 0.2 colorpair
14 36 0.0 0.2 colorpair
15 35 0.0 0.2 colorpair
16 34 0.16 0.2 colorpair
18 32 0.0 0.2 colorpair
19 31 0.0 0.2 colorpair
20 30 0.0 0.2 colorpair
21 29 0.16 0.2 colorpair
67 88 0.0 0.2 colorpair
68 87 0.0 0.2 colorpair
69 86 0.0 0.2 colorpair
70 85 0.0 0.2 colorpair
71 84 0.0 0.2 colorpair
126 142 0.0 1 colorpair
127 141 0.0 1 colorpair
128 140 0.0 1 colorpair
129 139 0.0 1 colorpair
130 138 0.0 1 colorpair
131 137 0.0 1 colorpair
144 154 0.16 1 colorpair
145 153 0.0 1 colorpair
146 152 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
6 44 2 gmark
7 43 2 gmark
8 42 2 gmark
9 41 2 gmark
10 40 2 gmark
11 39 2 gmark
12 38 2 gmark
13 37 2 gmark
14 36 2 gmark
15 35 2 gmark
16 34 2 gmark
34 cmark
17 33 3 gmark
33 cmark
18 32 2 gmark
19 31 2 gmark
20 30 2 gmark
21 29 2 gmark
29 cmark
67 88 2 gmark
68 87 2 gmark
69 86 2 gmark
70 85 2 gmark
71 84 2 gmark
154 cmark

% End Annotations
showpage
end
%%EOF
