%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:15:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGGCAAGGAGUUAUAGGCGAUGAAAAUCCCGCAAACUUUUAUCUGCUGCGUGUUUAUUCUCUGCUUCACGCUGCUGAUAUUCACCUAUCUGACCCGCAAAUCCCUGUGCGAGCUUCGCUACCGGGAUAAGGAGAGAGAGGUGGCGGCUUUGAUGGCUUACGAAUCCGGUAAG\
) } def
/len { sequence length } bind def

/coor [
[78.04021454 315.48065186]
[68.48789978 327.04583740]
[56.31489182 335.81042480]
[42.31710815 341.20132446]
[27.40977669 342.86611938]
[12.56759930 340.69592285]
[-1.23898613 334.83264160]
[-13.10725117 325.65960693]
[-22.26120377 313.77664185]
[-28.10232162 299.96066284]
[-30.24869156 285.11502075]
[-28.55997467 270.21035767]
[-23.14658546 256.22125244]
[-14.36247253 244.06233215]
[-2.78197527 234.52859497]
[10.83772850 228.24340820]
[25.60612869 225.61770630]
[40.55761337 226.82316589]
[54.71459198 231.78097534]
[67.15142822 240.16697693]
[77.05496216 251.43286133]
[83.77642822 264.83853149]
[84.31486511 249.84820557]
[77.03941345 236.85139465]
[85.26710510 223.33786011]
[85.80554199 208.34751892]
[86.34398651 193.35719299]
[78.71138000 186.50204468]
[76.07412720 176.36019897]
[79.54285431 166.23899841]
[88.19507599 159.57820129]
[89.27126312 144.61685181]
[90.34745789 129.65551758]
[91.42364502 114.69416809]
[85.51206970 128.48014832]
[72.39865112 135.76287842]
[57.57113647 133.49465942]
[47.23460388 122.62468719]
[45.71472931 107.70188904]
[53.64754868 94.97119904]
[67.71331024 89.76021576]
[82.02673340 94.25038910]
[69.97110748 85.32504272]
[57.91548157 76.39969635]
[45.85985184 67.47434998]
[30.16466331 65.48146057]
[24.53952026 51.68990326]
[12.48389149 42.76455307]
[-3.21129799 40.77166367]
[-8.83644199 26.98010826]
[-20.89206886 18.05476189]
[-32.94769669 9.12941265]
[-45.00332642 0.20406514]
[-57.05895233 -8.72128296]
[-70.07260132 -0.86549228]
[-85.10266876 1.40726209]
[-99.85718536 -2.24959803]
[-112.08619690 -11.27842808]
[-119.92486572 -24.30239677]
[-122.17784119 -39.33544540]
[-118.50157928 -54.08514023]
[-109.45666504 -66.30226135]
[-96.42240143 -74.12378693]
[-81.38639832 -76.35698700]
[-66.64155579 -72.66132355]
[-54.43634033 -63.60035324]
[-46.63196945 -50.55580521]
[-44.41854858 -35.51688385]
[-48.13360596 -20.77691078]
[-36.07797623 -11.85156250]
[-24.02235031 -2.92621493]
[-11.96672153 5.99913311]
[0.08890624 14.92448139]
[14.92179680 16.27896881]
[21.40923882 30.70892525]
[33.46486664 39.63427353]
[48.29775620 40.98876190]
[54.78520203 55.41871643]
[66.84082794 64.34406281]
[78.89645386 73.26941681]
[90.95208740 82.19476318]
[97.44586945 83.29070282]
[102.29675293 86.35749054]
[105.02149200 90.47724915]
[117.23539734 81.76974487]
[129.44929504 73.06224823]
[141.66320801 64.35475159]
[153.87710571 55.64725113]
[160.62254333 41.33607483]
[175.47735596 40.24806976]
[187.69125366 31.54057121]
[199.90516663 22.83307076]
[202.64613342 7.49929094]
[215.15681458 -1.15735984]
[229.75833130 1.55023670]
[241.97224426 -7.15726280]
[241.05395508 -17.84505272]
[244.64477539 -27.86743355]
[252.02821350 -35.42454910]
[261.81332397 -39.18922043]
[272.19641113 -38.53975677]
[281.29345703 -33.66156006]
[293.95837402 -41.69896317]
[306.62329102 -49.73636246]
[319.28820801 -57.77376556]
[331.95315552 -65.81116486]
[339.45916748 -79.73848724]
[354.35101318 -80.02528381]
[367.01593018 -88.06268311]
[379.60818481 -96.21343994]
[392.12680054 -104.47689819]
[404.64538574 -112.74034882]
[417.16397095 -121.00380707]
[427.05200195 -134.77565002]
[443.02288818 -129.08650208]
[441.97726440 -112.16482544]
[425.42742920 -108.48520660]
[412.90884399 -100.22174835]
[400.39022827 -91.95829773]
[387.87164307 -83.69483948]
[384.00857544 -77.36457825]
[375.05331421 -75.39776611]
[362.38839722 -67.36036682]
[355.78826904 -54.00793076]
[339.99053955 -53.14624786]
[327.32562256 -45.10884476]
[314.66070557 -37.07144547]
[301.99578857 -29.03404236]
[289.33087158 -20.99664116]
[286.52896118 -1.74664211]
[270.25283813 9.45232010]
[250.67973328 5.05664158]
[238.46583557 13.76414108]
[236.26480103 28.45056534]
[224.00221252 37.45520020]
[208.61265564 35.04697418]
[196.39875793 43.75447464]
[184.18484497 52.46197510]
[178.31304932 66.15032959]
[162.58460999 67.86115265]
[150.37069702 76.56865692]
[138.15679932 85.27615356]
[125.94289398 93.98365021]
[113.72898865 102.69115448]
[106.38499451 115.77036285]
[105.30879974 130.73170471]
[104.23260498 145.69305420]
[103.15641785 160.65438843]
[112.78578186 178.33926392]
[101.33432007 193.89562988]
[100.79587555 208.88597107]
[100.25743866 223.87629700]
[107.49437714 237.94531250]
[99.30519867 250.38664246]
[98.76675415 265.37698364]
[102.56393433 271.01647949]
[103.25293732 277.15988159]
[101.22034454 282.34378052]
[105.98346710 296.56744385]
[110.74658203 310.79110718]
[115.50969696 325.01477051]
[120.27281189 339.23846436]
[134.88902283 344.79727173]
[142.46736145 358.47583008]
[139.42958069 373.81552124]
[127.21002197 383.57339478]
[111.57838440 383.14212036]
[99.91545868 372.72528076]
[97.72811127 357.24145508]
[106.04914856 344.00155640]
[101.28602600 329.77789307]
[96.52291107 315.55422974]
[91.75979614 301.33056641]
[86.99668121 287.10690308]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 155]
[23 154]
[25 152]
[26 151]
[27 150]
[31 148]
[32 147]
[33 146]
[34 145]
[42 81]
[43 80]
[44 79]
[45 78]
[47 76]
[48 75]
[50 73]
[51 72]
[52 71]
[53 70]
[54 69]
[84 144]
[85 143]
[86 142]
[87 141]
[88 140]
[90 138]
[91 137]
[92 136]
[95 133]
[96 132]
[102 129]
[103 128]
[104 127]
[105 126]
[106 125]
[108 123]
[109 122]
[110 120]
[111 119]
[112 118]
[113 117]
[158 174]
[159 173]
[160 172]
[161 171]
[162 170]
] def

init

% Start Annotations
22 155 0.0 1 colorpair
23 154 0.0 1 colorpair
25 152 0.0 1 colorpair
26 151 0.0 1 colorpair
27 150 0.0 1 colorpair
31 148 0.0 1 colorpair
32 147 0.0 1 colorpair
33 146 0.0 1 colorpair
34 145 0.0 1 colorpair
42 81 0.0 1 colorpair
43 80 0.0 1 colorpair
44 79 0.0 1 colorpair
45 78 0.0 1 colorpair
47 76 0.16 1 colorpair
48 75 0.0 1 colorpair
50 73 0.0 1 colorpair
51 72 0.0 1 colorpair
52 71 0.0 1 colorpair
53 70 0.0 1 colorpair
54 69 0.0 1 colorpair
84 144 0.0 1 colorpair
85 143 0.0 1 colorpair
86 142 0.0 1 colorpair
87 141 0.0 1 colorpair
88 140 0.0 1 colorpair
90 138 0.0 1 colorpair
91 137 0.0 1 colorpair
92 136 0.0 1 colorpair
95 133 0.0 1 colorpair
96 132 0.0 1 colorpair
102 129 0.0 0.6 colorpair
103 128 0.0 1 colorpair
104 127 0.0 1 colorpair
105 126 0.0 1 colorpair
106 125 0.0 1 colorpair
108 123 0.0 1 colorpair
109 122 0.0 1 colorpair
110 120 0.0 1 colorpair
111 119 0.0 1 colorpair
112 118 0.0 1 colorpair
113 117 0.0 1 colorpair
158 174 0.0 1 colorpair
159 173 0.0 1 colorpair
160 172 0.0 1 colorpair
161 171 0.0 1 colorpair
162 170 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
76 cmark
102 129 1 gmark

% End Annotations
showpage
end
%%EOF
