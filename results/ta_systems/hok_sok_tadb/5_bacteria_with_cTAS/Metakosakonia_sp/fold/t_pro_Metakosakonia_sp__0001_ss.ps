%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:16:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGAGAAGUCAGCUAUGAAACUGCCACGAAGUACCCUGCUCUGGUGCGUGUUAAUAGUGUGUCUCACACUGCUGAUAUUCACUUACCUGACCCGUAAAUCGCUCUGCGAAAUCCGGUACAGGGACACGAACAGGGAGGUGGCGGCUUUCAUGGCUUACGAAUCCGGUAAG\
) } def
/len { sequence length } bind def

/coor [
[107.60744476 658.81951904]
[113.04965973 644.38391113]
[125.44601440 635.20056152]
[124.35108185 620.24060059]
[123.25615692 605.28057861]
[110.52305603 597.59906006]
[104.68569183 583.72863770]
[108.17586517 568.90728760]
[119.85911560 558.86694336]
[118.76418304 543.90698242]
[110.11849213 531.77844238]
[116.82780457 517.45031738]
[115.73287964 502.49032593]
[114.63794708 487.53033447]
[113.54301453 472.57034302]
[112.44808960 457.61035156]
[111.35315704 442.65039062]
[110.25822449 427.69039917]
[109.16329956 412.73040771]
[108.06836700 397.77041626]
[106.97343445 382.81045532]
[105.74193573 367.86108398]
[104.37395477 352.92358398]
[103.00598145 337.98608398]
[101.63800049 323.04861450]
[100.27002716 308.11111450]
[98.90204620 293.17361450]
[97.53407288 278.23614502]
[88.77620697 274.72192383]
[81.87168884 268.20449829]
[77.80918884 259.55862427]
[77.19171143 249.96768188]
[80.14751434 240.76167297]
[86.30632782 233.23289490]
[94.84523773 228.45446777]
[94.57128143 213.45697021]
[94.29731750 198.45947266]
[94.02336121 183.46197510]
[93.74939728 168.46447754]
[85.78093719 155.88064575]
[93.26490021 141.94145203]
[92.99093628 126.94396210]
[74.47743988 111.12216949]
[75.49279022 86.79013824]
[64.69423676 76.37902832]
[53.89568329 65.96791077]
[43.09712982 55.55680084]
[27.79207802 51.54856873]
[23.99993134 37.14478683]
[13.20137882 26.73367310]
[2.40282702 16.32256126]
[-8.39572525 5.91144753]
[-19.19427681 -4.49966526]
[-29.99282837 -14.91077805]
[-45.29788208 -18.91901207]
[-49.09002686 -33.32279205]
[-59.88858032 -43.73390579]
[-70.68713379 -54.14501953]
[-81.48568726 -64.55612946]
[-92.28424072 -74.96724701]
[-103.08278656 -85.37835693]
[-113.88134003 -95.78946686]
[-129.48059082 -102.43022156]
[-127.41767120 -119.25819397]
[-110.67626953 -121.93433380]
[-103.47023010 -106.58802032]
[-92.67167664 -96.17691040]
[-81.87312317 -85.76579285]
[-71.07456970 -75.35468292]
[-60.27602005 -64.94357300]
[-49.47746658 -54.53245926]
[-38.67891693 -44.12134552]
[-24.14624786 -40.85778427]
[-19.58171654 -25.70932961]
[-8.78316402 -15.29821777]
[2.01538777 -4.88710451]
[12.81394005 5.52400875]
[23.61249161 15.93512154]
[34.41104507 26.34623528]
[48.94371033 29.60979652]
[53.50824356 44.75824738]
[64.30679321 55.16936111]
[75.10534668 65.58047485]
[85.90390015 75.99158478]
[94.10112000 72.79141235]
[102.88765717 72.30947113]
[111.38571167 74.59391022]
[120.98080444 63.06420135]
[130.57589722 51.53449249]
[140.17098999 40.00478745]
[138.91848755 24.47838974]
[148.81352234 12.92231274]
[163.62329102 11.82392216]
[173.21838379 0.29421526]
[182.81347656 -11.23549175]
[177.62033081 -25.62223816]
[180.30783081 -40.57798004]
[190.05566406 -52.10387421]
[204.16944885 -57.16915512]
[218.82490540 -54.50771713]
[228.41999817 -66.03742218]
[238.01509094 -77.56713104]
[247.61018372 -89.09683990]
[253.09454346 -105.13922119]
[270.02822876 -104.31016541]
[273.91925049 -87.80876923]
[259.13989258 -79.50174713]
[249.54479980 -67.97203827]
[239.94970703 -56.44232941]
[230.35459900 -44.91262436]
[235.63374329 -30.98436737]
[233.21630859 -16.18531418]
[223.65269470 -4.50610876]
[209.43388367 0.85320085]
[194.34318542 -1.64039648]
[184.74809265 9.88931084]
[175.15299988 21.41901779]
[176.76287842 36.18194199]
[167.19633484 48.01138687]
[151.70069885 49.59988022]
[142.10560608 61.12958908]
[132.51051331 72.65929413]
[122.91541290 84.18900299]
[126.67810059 92.03868103]
[127.83270264 100.66666412]
[126.26634216 109.22946930]
[122.13214874 116.88999939]
[115.83428192 122.89933014]
[107.98843384 126.66999817]
[108.26239777 141.66749573]
[116.25045013 155.32405090]
[108.74689484 168.19052124]
[109.02085876 183.18801880]
[109.29481506 198.18551636]
[109.56877899 213.18301392]
[109.84273529 228.18051147]
[125.90628052 241.69520569]
[126.84040833 262.37478638]
[112.47156525 276.86816406]
[113.83953857 291.80563354]
[115.20751953 306.74313354]
[116.57549286 321.68063354]
[117.94347382 336.61813354]
[119.31144714 351.55560303]
[120.67942810 366.49310303]
[124.59102631 374.78939819]
[121.93342590 381.71551514]
[123.02835083 396.67550659]
[124.12328339 411.63546753]
[125.21820831 426.59545898]
[126.31314087 441.55545044]
[127.40807343 456.51544189]
[128.50300598 471.47540283]
[129.59793091 486.43539429]
[130.69285583 501.39538574]
[131.78779602 516.35534668]
[140.51179504 529.55395508]
[133.72416687 542.81207275]
[134.81909180 557.77203369]
[147.83972168 566.00427246]
[153.45071411 580.15948486]
[149.69511414 594.73205566]
[138.21614075 604.18566895]
[139.31106567 619.14562988]
[140.40600586 634.10565186]
[154.00735474 641.38616943]
[161.49340820 654.87554932]
[160.47538757 670.26928711]
[151.27812195 682.65533447]
[136.83644104 688.08129883]
[121.75863647 684.81585693]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 165]
[4 164]
[5 163]
[9 159]
[10 158]
[12 156]
[13 155]
[14 154]
[15 153]
[16 152]
[17 151]
[18 150]
[19 149]
[20 148]
[21 147]
[22 145]
[23 144]
[24 143]
[25 142]
[26 141]
[27 140]
[28 139]
[35 136]
[36 135]
[37 134]
[38 133]
[39 132]
[41 130]
[42 129]
[44 84]
[45 83]
[46 82]
[47 81]
[49 79]
[50 78]
[51 77]
[52 76]
[53 75]
[54 74]
[56 72]
[57 71]
[58 70]
[59 69]
[60 68]
[61 67]
[62 66]
[87 123]
[88 122]
[89 121]
[90 120]
[93 117]
[94 116]
[95 115]
[100 110]
[101 109]
[102 108]
[103 107]
] def

init

% Start Annotations
3 165 0.0 1 colorpair
4 164 0.0 1 colorpair
5 163 0.0 1 colorpair
9 159 0.0 1 colorpair
10 158 0.0 1 colorpair
12 156 0.0 1 colorpair
13 155 0.0 1 colorpair
14 154 0.0 1 colorpair
15 153 0.0 1 colorpair
16 152 0.0 1 colorpair
17 151 0.0 1 colorpair
18 150 0.0 1 colorpair
19 149 0.0 1 colorpair
20 148 0.0 1 colorpair
21 147 0.0 1 colorpair
22 145 0.0 1 colorpair
23 144 0.0 1 colorpair
24 143 0.0 1 colorpair
25 142 0.0 1 colorpair
26 141 0.0 1 colorpair
27 140 0.0 1 colorpair
28 139 0.0 1 colorpair
35 136 0.0 1 colorpair
36 135 0.0 1 colorpair
37 134 0.0 1 colorpair
38 133 0.0 1 colorpair
39 132 0.0 1 colorpair
41 130 0.0 1 colorpair
42 129 0.0 1 colorpair
44 84 0.0 1 colorpair
45 83 0.0 1 colorpair
46 82 0.0 1 colorpair
47 81 0.0 1 colorpair
49 79 0.0 1 colorpair
50 78 0.0 1 colorpair
51 77 0.0 1 colorpair
52 76 0.0 1 colorpair
53 75 0.0 1 colorpair
54 74 0.0 1 colorpair
56 72 0.0 1 colorpair
57 71 0.0 1 colorpair
58 70 0.0 1 colorpair
59 69 0.0 1 colorpair
60 68 0.0 1 colorpair
61 67 0.0 1 colorpair
62 66 0.0 1 colorpair
87 123 0.0 1 colorpair
88 122 0.0 1 colorpair
89 121 0.0 1 colorpair
90 120 0.0 1 colorpair
93 117 0.0 1 colorpair
94 116 0.0 1 colorpair
95 115 0.0 1 colorpair
100 110 0.0 1 colorpair
101 109 0.0 1 colorpair
102 108 0.0 1 colorpair
103 107 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
