%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:17:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GACAUGCUGACAAAAUAUGCCCUGGUGGCGAUUGUAGUGCUGUGUUUCACGGUGCUGGGAUUUACGUUAAUGGUACGAGAUUCGCUGUGCGAGUUAAGUAUUAAAGAGCGUAAUAUGGAGUUUAAAGCUGUUCUCGCUUACGAACCGAAGAAG\
) } def
/len { sequence length } bind def

/coor [
[203.76406860 323.23348999]
[197.53283691 309.58901978]
[191.30162048 295.94454956]
[185.07038879 282.30004883]
[179.39677429 277.49319458]
[178.85438538 268.31311035]
[172.90278625 254.54435730]
[166.95118713 240.77560425]
[160.58111572 227.19538879]
[153.79853821 213.81643677]
[147.01596069 200.43746948]
[132.30494690 198.26397705]
[121.56761169 187.72009277]
[119.06855011 172.69984436]
[125.97287750 158.92898560]
[119.19029999 145.55001831]
[112.40772247 132.17105103]
[105.62514496 118.79209900]
[91.11019135 115.00842285]
[78.65943909 123.37375641]
[66.20868683 131.73908997]
[61.72045517 147.14152527]
[46.82583618 153.10223389]
[32.95070648 145.04862976]
[30.73887634 129.15878296]
[41.88707352 117.62200928]
[57.84335327 119.28833008]
[70.29410553 110.92300415]
[82.74485779 102.55767059]
[80.61013794 87.71035004]
[66.30694580 83.19165802]
[52.00374603 78.67296600]
[37.70055008 74.15427399]
[22.21061325 77.37489319]
[12.40540218 66.16297913]
[-1.89779401 61.64428711]
[-16.20099068 57.12559509]
[-30.50418663 52.60689926]
[-44.80738068 48.08820724]
[-59.11057663 43.56951523]
[-73.41377258 39.05082321]
[-87.71697235 34.53213120]
[-102.02016449 30.01343727]
[-116.32336426 25.49474335]
[-133.24815369 26.48873138]
[-138.88853455 10.50053596]
[-125.08657837 0.65460402]
[-111.80467224 11.19154739]
[-97.50147247 15.71024036]
[-83.19828033 20.22893333]
[-68.89508057 24.74762535]
[-54.59188461 29.26631927]
[-40.28868866 33.78501129]
[-25.98549271 38.30370331]
[-11.68229675 42.82239914]
[2.62089896 47.34109116]
[16.92409515 51.85978317]
[31.39097214 48.31595230]
[42.21924210 59.85107422]
[56.52243805 64.36976624]
[70.82563782 68.88845825]
[85.12882996 73.40715027]
[98.83615875 67.31542206]
[105.06738281 53.67094421]
[111.29860687 40.02646255]
[117.52983093 26.38198280]
[123.76106262 12.73750305]
[129.99227905 -0.90697646]
[123.57471466 -17.14970970]
[130.72180176 -32.71486664]
[146.58680725 -38.21273422]
[152.53840637 -51.98148346]
[158.49002075 -65.75023651]
[164.44161987 -79.51898193]
[170.39321899 -93.28773499]
[176.34481812 -107.05648041]
[170.76185608 -121.59842682]
[176.99375916 -135.47711182]
[190.89169312 -140.71000671]
[196.84329224 -154.47874451]
[202.79490662 -168.24749756]
[208.74650574 -182.01625061]
[214.69810486 -195.78498840]
[220.64970398 -209.55374146]
[226.60130310 -223.32249451]
[227.33581543 -240.26052856]
[243.81523132 -244.24362183]
[252.20463562 -229.51086426]
[240.37005615 -217.37089539]
[234.41845703 -203.60214233]
[228.46685791 -189.83338928]
[222.51524353 -176.06465149]
[216.56364441 -162.29589844]
[210.61204529 -148.52714539]
[204.66044617 -134.75839233]
[210.37081909 -121.04974365]
[204.53118896 -107.00148773]
[190.11357117 -101.10488129]
[184.16197205 -87.33612823]
[178.21035767 -73.56738281]
[172.25875854 -59.79863358]
[166.30715942 -46.02988434]
[160.35556030 -32.26113510]
[166.74310303 -21.03038597]
[165.45803833 -7.97837687]
[156.74780273 2.08591843]
[143.63676453 5.32424879]
[137.40553284 18.96872902]
[131.17431641 32.61320877]
[124.94309235 46.25769043]
[118.71186066 59.90216827]
[112.48063660 73.54664612]
[119.00410461 112.00952148]
[125.78668213 125.38848114]
[132.56925964 138.76744080]
[139.35183716 152.14640808]
[154.54060364 154.71697998]
[165.17897034 165.61094666]
[167.33715820 180.50410461]
[160.39492798 193.65489197]
[167.17750549 207.03385925]
[173.96008301 220.41281128]
[178.43775940 223.32385254]
[181.05006409 227.28094482]
[181.71304321 231.38146973]
[180.71994019 234.82400513]
[186.67153931 248.59275818]
[192.62313843 262.36151123]
[198.71487427 276.06881714]
[204.94609070 289.71331787]
[211.17732239 303.35778809]
[217.40853882 317.00225830]
[226.41047668 323.79830933]
[227.24548340 333.77590942]
[236.11170959 345.87509155]
[244.97792053 357.97427368]
[260.19625854 364.08441162]
[262.24569702 380.35501099]
[249.01795959 390.04821777]
[234.12059021 383.19253540]
[232.87873840 366.84048462]
[224.01252747 354.74130249]
[215.14630127 342.64212036]
[214.32543945 357.61962891]
[206.87796021 370.64019775]
[194.38412476 378.94104004]
[179.49491882 380.76086426]
[165.36962891 375.71347046]
[155.00540161 364.86993408]
[150.60139465 350.53100586]
[153.09204102 335.73922729]
[161.94889832 323.63317871]
[175.29264832 316.78161621]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 132]
[2 131]
[3 130]
[4 129]
[6 128]
[7 127]
[8 126]
[9 122]
[10 121]
[11 120]
[15 116]
[16 115]
[17 114]
[18 113]
[19 29]
[20 28]
[21 27]
[30 62]
[31 61]
[32 60]
[33 59]
[35 57]
[36 56]
[37 55]
[38 54]
[39 53]
[40 52]
[41 51]
[42 50]
[43 49]
[44 48]
[63 112]
[64 111]
[65 110]
[66 109]
[67 108]
[68 107]
[71 103]
[72 102]
[73 101]
[74 100]
[75 99]
[76 98]
[79 95]
[80 94]
[81 93]
[82 92]
[83 91]
[84 90]
[85 89]
[134 143]
[135 142]
[136 141]
] def

init

% Start Annotations
1 132 0.0 1 colorpair
2 131 0.0 1 colorpair
3 130 0.0 1 colorpair
4 129 0.0 1 colorpair
6 128 0.0 1 colorpair
7 127 0.0 1 colorpair
8 126 0.0 1 colorpair
9 122 0.0 1 colorpair
10 121 0.0 1 colorpair
11 120 0.0 1 colorpair
15 116 0.0 1 colorpair
16 115 0.0 1 colorpair
17 114 0.0 1 colorpair
18 113 0.0 1 colorpair
19 29 0.0 1 colorpair
20 28 0.0 1 colorpair
21 27 0.0 1 colorpair
30 62 0.0 1 colorpair
31 61 0.0 1 colorpair
32 60 0.0 1 colorpair
33 59 0.0 1 colorpair
35 57 0.0 1 colorpair
36 56 0.0 1 colorpair
37 55 0.0 1 colorpair
38 54 0.0 1 colorpair
39 53 0.0 1 colorpair
40 52 0.0 1 colorpair
41 51 0.0 1 colorpair
42 50 0.0 1 colorpair
43 49 0.0 1 colorpair
44 48 0.0 1 colorpair
63 112 0.0 1 colorpair
64 111 0.0 1 colorpair
65 110 0.0 1 colorpair
66 109 0.0 1 colorpair
67 108 0.0 1 colorpair
68 107 0.0 1 colorpair
71 103 0.0 1 colorpair
72 102 0.0 1 colorpair
73 101 0.0 1 colorpair
74 100 0.0 1 colorpair
75 99 0.0 1 colorpair
76 98 0.0 1 colorpair
79 95 0.0 1 colorpair
80 94 0.0 1 colorpair
81 93 0.0 1 colorpair
82 92 0.0 1 colorpair
83 91 0.0 1 colorpair
84 90 0.0 1 colorpair
85 89 0.0 1 colorpair
134 143 0.0 1 colorpair
135 142 0.0 1 colorpair
136 141 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
