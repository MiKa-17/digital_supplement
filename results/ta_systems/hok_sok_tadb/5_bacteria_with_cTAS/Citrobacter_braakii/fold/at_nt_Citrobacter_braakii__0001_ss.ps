%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:17:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUGGUGGCGAUUGUAGUGCUGUGUUUCACGGUGCUGGGAUUUACGUUAAUGGUACGAGAUUCGCUGUGCGAGUUAAGUAUUAAAGAGCGUAAUAUGGAGUUUAAAGCUGUUCUCGCUUACGAACCGAAGAAGUAGCAACAACGCGGGGGAAACCCCGCGUCCUGAUGGCCUGGUUUUGUCCUCUCGCACCCAUUCCCGAAGUACGCGCCAG\
) } def
/len { sequence length } bind def

/coor [
[66.00128174 204.34298706]
[52.76005936 193.75494385]
[59.26877213 178.10014343]
[59.70912170 163.10661316]
[60.14946747 148.11306763]
[60.58981323 133.11953735]
[61.03016281 118.12600708]
[61.47050858 103.13246918]
[58.52545547 96.35581207]
[62.02897644 87.92251587]
[62.68937683 72.93705750]
[48.98321152 66.84271240]
[38.29904175 77.37117767]
[27.61487389 87.89964294]
[23.21610641 103.09705353]
[8.71995926 106.51918793]
[-1.96420991 117.04765320]
[-12.64837933 127.57611084]
[-23.33254814 138.10456848]
[-34.01671982 148.63304138]
[-44.70088959 159.16149902]
[-55.38505936 169.68995667]
[-66.06922913 180.21842957]
[-76.75339508 190.74688721]
[-87.43756866 201.27534485]
[-94.47551727 216.69947815]
[-111.24516296 214.20639038]
[-113.49180603 197.40194702]
[-97.96602631 190.59118652]
[-87.28186035 180.06271362]
[-76.59768677 169.53425598]
[-65.91352081 159.00579834]
[-55.22935104 148.47732544]
[-44.54518127 137.94886780]
[-33.86101151 127.42040253]
[-23.17684174 116.89194489]
[-12.49267197 106.36347961]
[-1.80850279 95.83501434]
[1.82606089 81.39067078]
[17.08641052 77.21546936]
[27.77058029 66.68701172]
[38.45475006 56.15854645]
[35.93440247 41.37179947]
[22.36575127 34.97714233]
[8.79709816 28.58248329]
[-4.77155542 22.18782616]
[-18.34020805 15.79316807]
[-31.90886116 9.39850998]
[-45.47751617 3.00385141]
[-61.83035278 9.22012424]
[-77.31412506 1.83066642]
[-82.55632019 -14.15034199]
[-96.21738434 -20.34512520]
[-109.87844849 -26.53990936]
[-123.53951263 -32.73469543]
[-137.20057678 -38.92947769]
[-150.86163330 -45.12425995]
[-165.50028992 -39.80000305]
[-179.26629639 -46.27700043]
[-184.25195312 -60.26552582]
[-197.91300964 -66.46031189]
[-211.57408142 -72.65509796]
[-225.23513794 -78.84987640]
[-238.89620972 -85.04466248]
[-252.55726624 -91.23944855]
[-266.21832275 -97.43422699]
[-283.14068604 -98.46893311]
[-286.83099365 -115.01638031]
[-271.95178223 -123.14325714]
[-260.02355957 -111.09529114]
[-246.36248779 -104.90051270]
[-232.70141602 -98.70572662]
[-219.04035950 -92.51094055]
[-205.37930298 -86.31615448]
[-191.71823120 -80.12137604]
[-178.05717468 -73.92658997]
[-164.24942017 -79.39300537]
[-150.30691528 -73.30522156]
[-144.66685486 -58.78532410]
[-131.00578308 -52.59054184]
[-117.34472656 -46.39575577]
[-103.68366241 -40.20097351]
[-90.02259827 -34.00619125]
[-76.36153412 -27.81140518]
[-65.05524445 -33.98903275]
[-52.06118774 -32.50522995]
[-42.14791870 -23.67903709]
[-39.08285522 -10.56480122]
[-25.51420403 -4.17014360]
[-11.94554996 2.22451472]
[1.62310302 8.61917305]
[15.19175625 15.01383114]
[28.76040840 21.40848923]
[42.32906342 27.80314827]
[33.48721313 15.68614769]
[24.64536095 3.56914878]
[12.41612625 -5.11680698]
[5.68019247 -18.51931381]
[6.00694704 -33.51575470]
[13.32026100 -46.61214447]
[25.91622353 -54.75718689]
[40.86013031 -56.05319214]
[54.67023849 -50.19820404]
[64.12896729 -38.55635834]
[67.03254700 -23.84006882]
[62.70603561 -9.48066235]
[63.15940475 5.51248407]
[63.61277008 20.50563049]
[70.40299988 7.13055086]
[77.19322968 -6.24452972]
[83.98345947 -19.61960983]
[90.67533112 -33.04417038]
[97.26848602 -46.51749039]
[103.86164093 -59.99081039]
[110.45479584 -73.46412659]
[116.94887543 -86.98548126]
[123.34353638 -100.55413055]
[115.07237244 -113.57685852]
[115.17769623 -129.00386047]
[123.62589264 -141.91244507]
[137.72117615 -148.18351746]
[152.96580505 -145.81600952]
[164.49525452 -135.56538391]
[168.63052368 -120.70258331]
[164.05207825 -105.97026062]
[152.22085571 -96.06945038]
[136.91218567 -94.15946960]
[130.51753235 -80.59082031]
[130.50950623 -73.20188904]
[123.92811584 -66.87097168]
[117.33496094 -53.39765549]
[110.74180603 -39.92433548]
[104.14865112 -26.45101738]
[104.03215790 -19.06299782]
[97.35854340 -12.82938099]
[90.56831360 0.54569989]
[83.77808380 13.92078018]
[76.98785400 27.29586029]
[81.63321686 33.18403244]
[93.40970612 23.89348412]
[102.70007324 35.67011642]
[90.92395020 44.96037674]
[95.56931305 50.84855270]
[110.15743256 47.35757828]
[124.74554443 43.86660385]
[139.33366394 40.37562943]
[153.92178345 36.88465881]
[168.50988770 33.39368439]
[183.09800720 29.90270996]
[197.68612671 26.41173744]
[209.21127319 14.74542236]
[225.00657654 19.15455627]
[228.82318115 35.10340118]
[216.73487854 46.18515015]
[201.17709351 40.99985123]
[186.58897400 44.49082565]
[172.00086975 47.98180008]
[157.41275024 51.47277069]
[142.82463074 54.96374512]
[128.23652649 58.45471954]
[113.64840698 61.94569397]
[99.06028748 65.43666840]
[128.15582275 81.66110992]
[129.47262573 113.99597168]
[141.18046570 123.37289429]
[156.07278442 119.43276215]
[170.26376343 124.95269012]
[178.38722229 137.62049866]
[177.50424194 152.46496582]
[189.21206665 161.84188843]
[204.71220398 160.29808044]
[216.45204163 169.97439575]
[217.82830811 184.76092529]
[229.53613281 194.13784790]
[241.24397278 203.51477051]
[251.96507263 201.69702148]
[261.71643066 205.99012756]
[267.37707520 214.75636292]
[267.28140259 224.97138977]
[278.70889282 234.68797302]
[290.13641357 244.40455627]
[305.86703491 242.88021851]
[318.01483154 252.98992920]
[319.37277222 268.73577881]
[309.13519287 280.77603149]
[293.37588501 281.96740723]
[281.44454956 271.60311890]
[280.41983032 255.83207703]
[268.99230957 246.11549377]
[257.56481934 236.39891052]
[238.33993530 234.31510925]
[231.86705017 215.22259521]
[220.15922546 205.84567261]
[208.45138550 196.46876526]
[193.72129822 198.35554504]
[181.71430969 189.01280212]
[179.83514404 173.54972839]
[168.12731934 164.17280579]
[153.83416748 168.27694702]
[139.69784546 163.11666870]
[131.21147156 150.47409058]
[131.80354309 135.08073425]
[120.09570312 125.70380402]
[87.94010162 131.01449585]
[66.53732300 105.59024811]
[77.67483521 73.59745789]
[77.01443481 88.58291626]
[76.46404266 103.57281494]
[76.02369690 118.56635284]
[75.58335114 133.55989075]
[75.14300537 148.55342102]
[74.70265198 163.54695129]
[74.26230621 178.54049683]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 213]
[4 212]
[5 211]
[6 210]
[7 209]
[8 208]
[10 207]
[11 206]
[12 42]
[13 41]
[14 40]
[16 38]
[17 37]
[18 36]
[19 35]
[20 34]
[21 33]
[22 32]
[23 31]
[24 30]
[25 29]
[43 94]
[44 93]
[45 92]
[46 91]
[47 90]
[48 89]
[49 88]
[52 84]
[53 83]
[54 82]
[55 81]
[56 80]
[57 79]
[60 76]
[61 75]
[62 74]
[63 73]
[64 72]
[65 71]
[66 70]
[108 138]
[109 137]
[110 136]
[111 135]
[112 133]
[113 132]
[114 131]
[115 130]
[116 128]
[117 127]
[143 162]
[144 161]
[145 160]
[146 159]
[147 158]
[148 157]
[149 156]
[150 155]
[164 203]
[165 202]
[169 198]
[170 197]
[173 194]
[174 193]
[175 192]
[179 190]
[180 189]
[181 188]
] def

init

% Start Annotations
3 213 0.0 1 colorpair
4 212 0.0 1 colorpair
5 211 0.0 1 colorpair
6 210 0.0 1 colorpair
7 209 0.0 1 colorpair
8 208 0.0 1 colorpair
10 207 0.0 1 colorpair
11 206 0.0 1 colorpair
12 42 0.0 1 colorpair
13 41 0.0 1 colorpair
14 40 0.0 1 colorpair
16 38 0.0 1 colorpair
17 37 0.0 1 colorpair
18 36 0.0 1 colorpair
19 35 0.0 1 colorpair
20 34 0.0 1 colorpair
21 33 0.0 1 colorpair
22 32 0.0 1 colorpair
23 31 0.0 1 colorpair
24 30 0.0 1 colorpair
25 29 0.0 1 colorpair
43 94 0.0 1 colorpair
44 93 0.0 1 colorpair
45 92 0.0 1 colorpair
46 91 0.0 1 colorpair
47 90 0.0 1 colorpair
48 89 0.0 1 colorpair
49 88 0.0 1 colorpair
52 84 0.0 1 colorpair
53 83 0.0 1 colorpair
54 82 0.0 1 colorpair
55 81 0.0 1 colorpair
56 80 0.0 1 colorpair
57 79 0.0 1 colorpair
60 76 0.0 1 colorpair
61 75 0.0 1 colorpair
62 74 0.0 1 colorpair
63 73 0.0 1 colorpair
64 72 0.0 1 colorpair
65 71 0.0 1 colorpair
66 70 0.0 1 colorpair
108 138 0.0 1 colorpair
109 137 0.0 1 colorpair
110 136 0.0 1 colorpair
111 135 0.0 1 colorpair
112 133 0.0 1 colorpair
113 132 0.0 1 colorpair
114 131 0.0 1 colorpair
115 130 0.0 1 colorpair
116 128 0.0 1 colorpair
117 127 0.0 1 colorpair
143 162 0.0 1 colorpair
144 161 0.0 1 colorpair
145 160 0.0 1 colorpair
146 159 0.0 1 colorpair
147 158 0.0 1 colorpair
148 157 0.0 1 colorpair
149 156 0.0 1 colorpair
150 155 0.0 1 colorpair
164 203 0.0 1 colorpair
165 202 0.0 1 colorpair
169 198 0.0 1 colorpair
170 197 0.0 1 colorpair
173 194 0.0 1 colorpair
174 193 0.0 1 colorpair
175 192 0.0 1 colorpair
179 190 0.0 1 colorpair
180 189 0.0 1 colorpair
181 188 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
