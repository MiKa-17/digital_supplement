%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:17:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGGCUAUCCUGACAUUGCUUAGGUGUCGUUGGUAGCCUCGGGUUGAUUGAAUAAUUAACUCGGGGCUUUCUUCUUAUUACGCCUUGAACAACACUGCUCAAGACCCAUAAGCCUCAAGCACCCGC\
) } def
/len { sequence length } bind def

/coor [
[99.83178711 117.41632080]
[93.39463043 117.74633026]
[86.77622986 115.60494232]
[73.43609619 122.46357727]
[60.09596252 129.32220459]
[46.75583267 136.18084717]
[33.41569901 143.03947449]
[20.07556725 149.89811707]
[6.73543549 156.75674438]
[-6.60469675 163.61538696]
[-19.94482994 170.47401428]
[-29.49274063 186.16329956]
[-46.94005966 184.74623108]
[-60.10922241 191.92768860]
[-73.27838135 199.10913086]
[-86.44754791 206.29057312]
[-99.61670685 213.47203064]
[-112.78586578 220.65347290]
[-125.95503235 227.83491516]
[-131.84457397 242.75781250]
[-147.22543335 247.31950378]
[-160.29870605 238.02062988]
[-161.03572083 221.99452209]
[-148.87109375 211.53501892]
[-133.13647461 214.66575623]
[-119.96731567 207.48431396]
[-106.79815674 200.30287170]
[-93.62899017 193.12141418]
[-80.45983124 185.93997192]
[-67.29066467 178.75852966]
[-54.12150574 171.57707214]
[-50.37018204 160.00885010]
[-39.36965179 153.94017029]
[-26.80346298 157.13388062]
[-13.46333122 150.27525330]
[-0.12319945 143.41661072]
[13.21693325 136.55798340]
[26.55706596 129.69934082]
[39.89719772 122.84071350]
[53.23732758 115.98207855]
[66.57746124 109.12344360]
[79.91759491 102.26480865]
[84.06385803 87.84924316]
[76.40623474 74.95114899]
[68.74861908 62.05305481]
[61.09099579 49.15496063]
[53.43337631 36.25686646]
[45.77575684 23.35877037]
[38.11813736 10.46067524]
[30.46051598 -2.43741989]
[22.80289650 -15.33551502]
[8.24499893 -22.88532829]
[7.77478409 -39.27773285]
[21.87596703 -47.64962769]
[36.04246140 -39.38872528]
[35.70099258 -22.99313545]
[43.35861206 -10.09504032]
[51.01623154 2.80305457]
[58.67385101 15.70114994]
[66.33147430 28.59924507]
[73.98908997 41.49734116]
[81.64671326 54.39543533]
[89.30432892 67.29352570]
[96.96195221 80.19162750]
[110.21758270 87.21218872]
[125.18978882 86.29949951]
[140.16200256 85.38680267]
[155.12197876 84.29187775]
[170.06752014 83.01486969]
[185.01306152 81.73786163]
[199.95860291 80.46085358]
[206.54364014 66.65561676]
[219.07188416 58.05677795]
[234.12205505 56.89110184]
[247.64448547 63.37180710]
[256.05084229 75.66810608]
[270.99636841 74.39109802]
[285.94192505 73.11408997]
[300.88745117 71.83708191]
[315.83300781 70.56008148]
[321.13464355 57.55515289]
[331.48822021 48.16477203]
[344.82022095 44.19207001]
[358.49392700 46.36286926]
[369.83078003 54.19384384]
[376.63525391 66.09863281]
[391.60745239 65.18594360]
[406.57965088 64.27325439]
[421.55184937 63.36056137]
[436.52407837 62.44787216]
[449.82788086 53.88522339]
[463.00234985 60.83378220]
[477.97457886 59.92109299]
[491.34542847 50.42623520]
[506.13888550 57.50335693]
[507.13671875 73.87211609]
[493.31240845 82.69374084]
[478.88726807 74.89330292]
[463.91506958 75.80599213]
[451.68215942 84.30335999]
[437.43676758 77.42008209]
[422.46456909 78.33277130]
[407.49234009 79.24546051]
[392.52014160 80.15814972]
[377.54794312 81.07083893]
[370.72637939 95.66674042]
[357.41525269 104.90848541]
[341.16921997 106.21362305]
[326.38470459 99.13462067]
[317.11001587 85.50562286]
[302.16445923 86.78263092]
[287.21893311 88.05963898]
[272.27337646 89.33664703]
[257.32785034 90.61364746]
[251.12940979 104.15783691]
[238.90243530 112.83868408]
[223.87266541 114.24315643]
[210.06724548 107.89437103]
[201.23561096 95.40639496]
[186.29006958 96.68340302]
[171.34452820 97.96041107]
[156.39898682 99.23741913]
[149.93556213 102.98012543]
[141.07469177 100.35901642]
[126.10247803 101.27170563]
[111.13027191 102.18439484]
[111.02815247 106.61748505]
[109.08296204 111.14810944]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 42]
[4 41]
[5 40]
[6 39]
[7 38]
[8 37]
[9 36]
[10 35]
[11 34]
[13 31]
[14 30]
[15 29]
[16 28]
[17 27]
[18 26]
[19 25]
[43 64]
[44 63]
[45 62]
[46 61]
[47 60]
[48 59]
[49 58]
[50 57]
[51 56]
[65 126]
[66 125]
[67 124]
[68 122]
[69 121]
[70 120]
[71 119]
[76 114]
[77 113]
[78 112]
[79 111]
[80 110]
[86 105]
[87 104]
[88 103]
[89 102]
[90 101]
[92 99]
[93 98]
] def

init

% Start Annotations
3 42 0.0 1 colorpair
4 41 0.0 1 colorpair
5 40 0.0 1 colorpair
6 39 0.0 1 colorpair
7 38 0.0 1 colorpair
8 37 0.0 1 colorpair
9 36 0.0 1 colorpair
10 35 0.0 1 colorpair
11 34 0.0 1 colorpair
13 31 0.0 1 colorpair
14 30 0.0 1 colorpair
15 29 0.0 1 colorpair
16 28 0.0 1 colorpair
17 27 0.0 1 colorpair
18 26 0.0 1 colorpair
19 25 0.0 1 colorpair
43 64 0.0 1 colorpair
44 63 0.0 1 colorpair
45 62 0.0 1 colorpair
46 61 0.0 1 colorpair
47 60 0.0 1 colorpair
48 59 0.0 1 colorpair
49 58 0.0 1 colorpair
50 57 0.0 1 colorpair
51 56 0.0 1 colorpair
65 126 0.0 1 colorpair
66 125 0.0 1 colorpair
67 124 0.0 1 colorpair
68 122 0.0 1 colorpair
69 121 0.0 1 colorpair
70 120 0.0 1 colorpair
71 119 0.0 1 colorpair
76 114 0.0 1 colorpair
77 113 0.0 1 colorpair
78 112 0.0 1 colorpair
79 111 0.0 1 colorpair
80 110 0.0 1 colorpair
86 105 0.0 1 colorpair
87 104 0.0 1 colorpair
88 103 0.0 1 colorpair
89 102 0.0 1 colorpair
90 101 0.0 1 colorpair
92 99 0.0 1 colorpair
93 98 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
