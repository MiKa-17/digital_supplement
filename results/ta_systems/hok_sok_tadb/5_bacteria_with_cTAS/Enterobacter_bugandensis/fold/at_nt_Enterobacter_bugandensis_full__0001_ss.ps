%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:22:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAUGAUACGAGUUUUGUUUAUUAUCUGUAUGACGAUAAUGAUCUUAACCUUGAUGACGCGCGAUACACUGUGCGAGUUCCAAUUAAGAAACGAAAAACAAGAGGUGGCGGCGAAGUUGGCUUG_CGA__C_____GU__G__G_A__G__G_GGG__________G_G_C_CCGC_U____AG___GG__G__C__C___G___CC__AU_AA_GG_________\
) } def
/len { sequence length } bind def

/coor [
[-55.21051025 204.45713806]
[-47.92463303 191.34547424]
[-39.44100952 178.97502136]
[-29.83445168 167.45486450]
[-19.18966484 156.88658142]
[-7.60051107 147.36337280]
[4.83081770 138.96920776]
[17.99470520 131.77809143]
[31.77507782 125.85345459]
[46.05041885 121.24752045]
[60.69485855 118.00091553]
[75.57443237 116.14263916]
[60.60351181 115.20906830]
[45.63259125 114.27549744]
[30.66167068 113.34192657]
[15.69075108 112.40835571]
[0.71983111 111.47478485]
[-14.25108910 110.54121399]
[-28.43123627 115.43237305]
[-39.64300156 125.39712524]
[-50.85476303 135.36187744]
[-62.06652451 145.32664490]
[-73.27828979 155.29139709]
[-84.49005127 165.25614929]
[-95.70181274 175.22091675]
[-106.91358185 185.18566895]
[-105.25734711 200.61410522]
[-113.01520538 214.05267334]
[-127.20410156 220.33398438]
[-142.36811829 217.04273987]
[-152.67637634 205.44448853]
[-154.16514587 189.99899292]
[-146.26194763 176.64537048]
[-132.00575256 170.51835632]
[-116.87833405 173.97390747]
[-105.66657257 164.00914001]
[-94.45481110 154.04438782]
[-83.24304199 144.07963562]
[-72.03128052 134.11488342]
[-60.81951904 124.15012360]
[-49.60775757 114.18536377]
[-38.39599228 104.22061157]
[-39.63584137 96.82379913]
[-51.20758438 106.36815643]
[-65.25914001 101.11900330]
[-67.73911285 86.32543182]
[-56.16754532 76.78086090]
[-42.11553574 82.03018188]
[-43.35538483 74.63337708]
[-57.20362473 68.86915588]
[-71.05186462 63.10493851]
[-84.90010834 57.34072113]
[-99.36495972 63.12049866]
[-113.32693481 57.07749176]
[-118.74792480 43.25184631]
[-132.59616089 37.48762894]
[-146.44441223 31.72341347]
[-162.15824890 33.56346893]
[-170.93498230 21.52941704]
[-186.64881897 23.36947250]
[-195.42553711 11.33542156]
[-209.27378845 5.57120419]
[-223.12202454 -0.19301257]
[-227.38014221 0.51300478]
[-231.25454712 -0.10403115]
[-234.37794495 -1.76269925]
[-236.51147461 -4.09153366]
[-237.56282043 -6.67843056]
[-251.07092285 -13.20004272]
[-264.57901001 -19.72165489]
[-280.13961792 -15.81685829]
[-292.80645752 -25.66218185]
[-292.86264038 -41.70513535]
[-280.26507568 -51.63893890]
[-264.67749023 -47.84323120]
[-258.05740356 -33.22974777]
[-244.54930115 -26.70813560]
[-231.04121399 -20.18652344]
[-217.35780334 -14.04125404]
[-203.50956726 -8.27703762]
[-189.66131592 -2.51282072]
[-174.93800354 -4.76517057]
[-165.17076111 7.68117523]
[-150.44743347 5.42882538]
[-140.68019104 17.87517166]
[-126.83195496 23.63938904]
[-112.98371124 29.40360451]
[-99.35380554 23.50774193]
[-85.22760010 29.15620422]
[-79.13589478 43.49248123]
[-65.28765106 49.25669861]
[-51.43940735 55.02091599]
[-37.59116745 60.78513336]
[-29.80959511 63.63279343]
[-23.28122520 67.83074951]
[-18.21310616 73.00452423]
[-14.71570587 78.75465393]
[-12.80185986 84.67968750]
[-12.39088345 90.39839935]
[-13.31751823 95.57029724]
[1.65340137 96.50386810]
[16.62432098 97.43743896]
[31.59524155 98.37100983]
[46.56616211 99.30458069]
[61.53708267 100.23814392]
[76.50800323 101.17171478]
[65.55240631 90.92598724]
[69.90547943 76.57151794]
[84.70653534 74.13663483]
[93.42867279 86.34131622]
[94.46582031 71.37721252]
[95.50296021 56.41311264]
[84.12269592 45.68820953]
[82.35009003 30.15141869]
[91.02211761 17.13873482]
[106.04411316 12.79435158]
[120.32315063 19.16955185]
[127.11709595 33.25416183]
[123.21807098 48.39786148]
[110.46706390 57.45025635]
[109.42991638 72.41436005]
[108.39277649 87.37845612]
[113.96404266 92.39950562]
[122.04839325 79.76450348]
[130.13275146 67.12950134]
[138.21710205 54.49450302]
[146.30145264 41.85950089]
[154.38580322 29.22449875]
[162.47015381 16.58949852]
[170.55450439 3.95449615]
[178.63885498 -8.68050575]
[180.77812195 -23.52717400]
[188.43920898 -36.42320633]
[200.45439148 -45.40293121]
[214.99224854 -49.09761429]
[229.83685303 -46.94409561]
[242.72552490 -39.27062988]
[251.69371033 -27.24683380]
[255.37443542 -12.70543575]
[253.20668030 2.13709760]
[245.52084351 15.01839828]
[233.48843384 23.97503662]
[218.94157410 27.64190102]
[207.21218872 36.99186325]
[195.48281860 46.34182739]
[183.75344849 55.69179153]
[172.02407837 65.04175568]
[160.29470825 74.39171600]
[148.56533813 83.74168396]
[136.83595276 93.09164429]
[125.10659027 102.44161224]
[130.67785645 107.46266174]
[145.45396423 104.88065338]
[160.23007202 102.29865265]
[175.00616455 99.71664429]
[189.78227234 97.13464355]
[204.55838013 94.55263519]
[219.33448792 91.97063446]
[234.11058044 89.38863373]
[239.99783325 75.12876129]
[252.67300415 66.33424377]
[268.09149170 65.81137848]
[281.33334351 73.72701263]
[288.17309570 87.55529022]
[286.42822266 102.88365936]
[276.65551758 114.82089996]
[261.97338867 119.55787659]
[247.06687927 115.58303070]
[236.69259644 104.16473389]
[221.91648865 106.74674225]
[207.14038086 109.32874298]
[192.36427307 111.91074371]
[177.58818054 114.49275208]
[162.81207275 117.07475281]
[148.03596497 119.65676117]
[133.25985718 122.23876190]
[147.42681885 127.16797638]
[161.06896973 133.40431213]
[174.06600952 140.89276123]
[186.30332947 149.56732178]
[197.67303467 159.35148621]
[208.07485962 170.15898132]
[217.41708374 181.89451599]
[225.61734009 194.45460510]
[232.60331726 207.72850037]
[238.31341553 221.59913635]
[242.69726562 235.94424438]
[245.71624756 250.63729858]
[247.34370422 265.54873657]
[247.56530762 280.54711914]
[246.37910461 295.50012207]
[243.79553223 310.27597046]
[239.83740234 324.74432373]
[234.53959656 338.77758789]
[227.94883728 352.25207520]
[220.12322998 365.04895020]
[211.13179016 377.05538940]
[201.05380249 388.16546631]
[189.97811890 398.28128052]
[178.00242615 407.31356812]
[165.23229980 415.18273926]
[151.78034973 421.81939697]
[137.76519775 427.16500854]
[123.31042480 431.17242432]
[108.54347992 433.80633545]
[93.59458923 435.04351807]
[78.59555817 434.87301636]
[63.67864609 433.29638672]
[48.97538757 430.32751465]
[34.61543655 425.99258423]
[20.72540665 420.32980347]
[7.42778254 413.38909912]
[-5.16018200 405.23171997]
[-16.92748833 395.92953491]
[-27.77037811 385.56460571]
[-37.59323883 374.22833252]
[-46.30945206 362.02062988]
[-53.84216690 349.04919434]
[-60.12495804 335.42837524]
[-65.10243225 321.27828979]
[-68.73068237 306.72372437]
[-70.97773743 291.89297485]
[-71.82376099 276.91687012]
[-71.26131439 261.92739868]
[-69.29534149 247.05680847]
[-65.94318390 232.43617249]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 106]
[13 105]
[14 104]
[15 103]
[16 102]
[17 101]
[18 100]
[19 42]
[20 41]
[21 40]
[22 39]
[23 38]
[24 37]
[25 36]
[26 35]
[49 93]
[50 92]
[51 91]
[52 90]
[55 87]
[56 86]
[57 85]
[59 83]
[61 81]
[62 80]
[63 79]
[68 78]
[69 77]
[70 76]
[110 122]
[111 121]
[112 120]
[152 176]
[153 175]
[154 174]
[155 173]
[156 172]
[157 171]
[158 170]
[159 169]
] def

init

% Start Annotations
12 106 0.16 1 colorpair
13 105 0.16 1 colorpair
14 104 0.32 1 colorpair
15 103 0.0 0.6 colorpair
16 102 0.16 1 colorpair
17 101 0.16 0.6 colorpair
18 100 0.16 0.6 colorpair
19 42 0.0 1 colorpair
20 41 0.16 1 colorpair
21 40 0.0 0.6 colorpair
22 39 0.16 0.6 colorpair
23 38 0.0 0.6 colorpair
24 37 0.16 1 colorpair
25 36 0.0 0.6 colorpair
26 35 0.16 1 colorpair
49 93 0.0 1 colorpair
50 92 0.16 0.6 colorpair
51 91 0.16 0.6 colorpair
52 90 0.16 1 colorpair
55 87 0.0 0.6 colorpair
56 86 0.32 1 colorpair
57 85 0.16 1 colorpair
59 83 0.32 1 colorpair
61 81 0.16 1 colorpair
62 80 0.16 0.6 colorpair
63 79 0.16 1 colorpair
68 78 0.16 0.6 colorpair
69 77 0.0 1 colorpair
70 76 0.0 1 colorpair
110 122 0.32 1 colorpair
111 121 0.0 0.6 colorpair
112 120 0.0 1 colorpair
152 176 0.0 0.6 colorpair
153 175 0.0 0.2 colorpair
154 174 0.0 0.6 colorpair
155 173 0.0 0.6 colorpair
156 172 0.16 0.6 colorpair
157 171 0.0 0.2 colorpair
158 170 0.16 0.6 colorpair
159 169 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
12 cmark
13 cmark
105 cmark
14 cmark
104 cmark
15 103 1 gmark
16 cmark
17 101 1 gmark
17 cmark
101 cmark
18 100 1 gmark
18 cmark
100 cmark
20 cmark
41 cmark
21 40 1 gmark
22 39 1 gmark
39 cmark
23 38 1 gmark
24 cmark
25 36 1 gmark
26 cmark
35 cmark
50 92 1 gmark
50 cmark
92 cmark
51 91 1 gmark
91 cmark
52 cmark
90 cmark
55 87 1 gmark
56 cmark
86 cmark
57 cmark
59 cmark
83 cmark
81 cmark
62 80 1 gmark
62 cmark
80 cmark
63 cmark
68 78 1 gmark
68 cmark
110 cmark
122 cmark
111 121 1 gmark
152 176 1 gmark
153 175 2 gmark
154 174 1 gmark
155 173 1 gmark
156 172 1 gmark
172 cmark
157 171 2 gmark
158 170 1 gmark
158 cmark
170 cmark
159 169 2 gmark

% End Annotations
showpage
end
%%EOF
