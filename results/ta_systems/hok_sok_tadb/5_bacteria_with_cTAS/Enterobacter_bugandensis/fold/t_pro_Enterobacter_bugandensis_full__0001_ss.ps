%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:22:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___CCAUCAAAAACUAC_UCAGGUAUCGA_UUUAUU____AUCUGUAUGACGAUAAUGAUCUUAACCUUGAUGACGCGCGAUACACUGUGCGAGUUCCAAUUAAGAAACGAAAAACAAGAGGUGGCGGCGAAGUUGGCUUGC_GAAGCAG_____\
) } def
/len { sequence length } bind def

/coor [
[27.05943108 341.17077637]
[18.16916466 329.08926392]
[11.76544762 315.52487183]
[8.08683109 300.98294067]
[7.27035189 286.00518799]
[9.34642696 271.14956665]
[14.23771667 256.96945190]
[21.76200867 243.99313354]
[31.63900757 232.70397949]
[43.50077057 223.52255249]
[56.90541458 216.79087830]
[71.35359192 212.75971985]
[86.30707550 211.57926941]
[101.20880127 213.29347229]
[115.50365448 217.83850098]
[128.65910339 225.04501343]
[140.18811035 234.64759827]
[134.84498596 229.47897339]
[134.90626526 220.28601074]
[129.87069702 206.15649414]
[124.83512115 192.02699280]
[119.79955292 177.89747620]
[114.76398468 163.76797485]
[109.72842407 149.63845825]
[97.92006683 150.54000854]
[86.22573090 148.67121887]
[75.28642273 144.13453674]
[65.70178223 137.17863464]
[57.99718857 128.18479919]
[52.59497070 117.64601135]
[49.79124069 106.13996887]
[49.73969269 94.29736328]
[35.25080490 90.41507721]
[20.76191711 86.53279114]
[6.27302933 82.65050507]
[-8.21585846 78.76821899]
[-12.48958492 80.08937836]
[-16.54393768 79.95890808]
[-19.94022560 78.63185120]
[-22.37144089 76.48182678]
[-23.68995285 73.94629669]
[-37.81946182 68.91072845]
[-51.94897461 63.87516022]
[-64.67813873 72.74916077]
[-80.19156647 72.41270447]
[-92.52402496 62.99516296]
[-96.93343353 48.11777115]
[-91.72428131 33.50119019]
[-78.89959717 24.76579857]
[-63.39073181 25.27052879]
[-51.16115952 34.82130051]
[-46.91340637 49.74565125]
[-32.78389740 54.78121948]
[-18.65438461 59.81678772]
[-4.33357239 64.27933502]
[10.15531540 68.16162109]
[24.64420319 72.04390717]
[39.13309097 75.92618561]
[53.62197876 79.80847168]
[58.61649323 70.91351318]
[65.29418182 63.20156479]
[73.38343811 56.98630905]
[82.55526733 52.52053070]
[92.43661499 49.98586273]
[102.62558746 49.48539734]
[112.70776367 51.03949356]
[118.58726501 37.23979950]
[124.46676636 23.44010925]
[130.34626770 9.64041710]
[124.68730927 -4.87212992]
[130.84654236 -18.78322411]
[144.71691895 -24.08873367]
[150.59640503 -37.88842392]
[156.47590637 -51.68811798]
[154.76696777 -67.41675568]
[166.87377930 -76.09281921]
[165.16482544 -91.82145691]
[177.27165222 -100.49752045]
[183.15115356 -114.29721832]
[189.03065491 -128.09690857]
[188.32305908 -132.51387024]
[189.02189636 -136.50967407]
[190.81297302 -139.68580627]
[193.28326416 -141.79083252]
[195.97889709 -142.74000549]
[202.94973755 -156.02185059]
[209.92059326 -169.30369568]
[206.53970337 -184.98646545]
[216.80418396 -197.31610107]
[232.84001160 -196.83435059]
[242.34585571 -183.91079712]
[238.02964783 -168.45925903]
[223.20242310 -162.33283997]
[216.23158264 -149.05101013]
[209.26072693 -135.76916504]
[202.83035278 -122.21740723]
[196.95085144 -108.41771698]
[191.07135010 -94.61802673]
[193.20083618 -79.87643433]
[180.67347717 -70.21331787]
[182.80296326 -55.47172928]
[170.27560425 -45.80861664]
[164.39610291 -32.00892639]
[158.51660156 -18.20923424]
[164.29859924 -4.53063393]
[158.53253174 9.54797173]
[144.14595032 15.51991653]
[138.26646423 29.31960869]
[132.38696289 43.11930084]
[126.50746155 56.91899109]
[141.76371765 71.46212769]
[149.76849365 90.96033478]
[149.13189697 112.02811432]
[139.96446228 131.00743103]
[123.85793304 144.60289001]
[128.89349365 158.73240662]
[133.92906189 172.86190796]
[138.96463013 186.99142456]
[144.00019836 201.12092590]
[149.03576660 215.25044250]
[154.21334839 229.32853699]
[157.85797119 231.40263367]
[160.56982422 234.26319885]
[162.21520996 237.56701660]
[162.77378845 240.96250916]
[174.58154297 250.21328735]
[186.48184204 259.34469604]
[198.47348022 268.35583496]
[210.46511841 277.36697388]
[225.65522766 273.65283203]
[239.65597534 280.61795044]
[245.85664368 294.97363281]
[241.32948303 309.94155884]
[228.21205139 318.45434570]
[212.69802856 316.49246216]
[202.11264038 304.98233032]
[201.45399475 289.35861206]
[189.46235657 280.34747314]
[177.47070312 271.33636475]
[170.19230652 269.82360840]
[165.33076477 262.02102661]
[153.52301025 252.77024841]
[159.25964355 266.62994385]
[162.22688293 281.33352661]
[162.31416321 296.33328247]
[159.51826477 311.07040405]
[153.94331360 324.99591064]
[145.79699707 337.59106445]
[135.38279724 348.38662720]
[123.08866119 356.98049927]
[109.37257385 363.05245972]
[94.74548340 366.37637329]
[79.75229645 366.82836914]
[64.95153809 364.39166260]
[50.89457703 359.15701294]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 121]
[19 120]
[20 119]
[21 118]
[22 117]
[23 116]
[24 115]
[32 59]
[33 58]
[34 57]
[35 56]
[36 55]
[41 54]
[42 53]
[43 52]
[66 110]
[67 109]
[68 108]
[69 107]
[72 104]
[73 103]
[74 102]
[76 100]
[78 98]
[79 97]
[80 96]
[85 95]
[86 94]
[87 93]
[125 142]
[126 141]
[127 139]
[128 138]
[129 137]
] def

init

% Start Annotations
17 121 0.16 1 colorpair
19 120 0.0 0.2 colorpair
20 119 0.16 1 colorpair
21 118 0.16 0.2 colorpair
22 117 0.16 0.2 colorpair
23 116 0.0 0.2 colorpair
24 115 0.16 0.2 colorpair
32 59 0.0 1 colorpair
33 58 0.16 1 colorpair
34 57 0.16 1 colorpair
35 56 0.16 0.2 colorpair
36 55 0.0 1 colorpair
41 54 0.16 1 colorpair
42 53 0.0 0.2 colorpair
43 52 0.16 1 colorpair
66 110 0.0 1 colorpair
67 109 0.16 0.2 colorpair
68 108 0.16 0.2 colorpair
69 107 0.16 1 colorpair
72 104 0.0 0.2 colorpair
73 103 0.32 1 colorpair
74 102 0.16 1 colorpair
76 100 0.32 1 colorpair
78 98 0.16 1 colorpair
79 97 0.16 0.2 colorpair
80 96 0.16 1 colorpair
85 95 0.16 0.2 colorpair
86 94 0.0 1 colorpair
87 93 0.0 1 colorpair
125 142 0.16 1 colorpair
126 141 0.0 0.2 colorpair
127 139 0.32 1 colorpair
128 138 0.0 0.2 colorpair
129 137 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
17 cmark
121 cmark
19 120 2 gmark
20 cmark
21 118 2 gmark
21 cmark
118 cmark
22 117 2 gmark
117 cmark
23 116 2 gmark
24 115 2 gmark
115 cmark
33 cmark
58 cmark
34 cmark
35 56 2 gmark
56 cmark
41 cmark
42 53 2 gmark
43 cmark
52 cmark
67 109 2 gmark
67 cmark
109 cmark
68 108 2 gmark
108 cmark
69 cmark
107 cmark
72 104 2 gmark
73 cmark
103 cmark
74 cmark
76 cmark
100 cmark
98 cmark
79 97 2 gmark
79 cmark
97 cmark
80 cmark
85 95 2 gmark
85 cmark
125 cmark
142 cmark
126 141 2 gmark
127 cmark
139 cmark
128 138 2 gmark

% End Annotations
showpage
end
%%EOF
