%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:42:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAAGGCUACCGUAAUGUUGUUCGGCAUUACAGAGAGCCUCGUAUUAAAUAACAUUGAUACGGGGCUUUUCUCUGUCUACUCUCAACCUGAAAUAAGCACCUAAAGCAGACAGCUUCAAGCACCCGCCAC\
) } def
/len { sequence length } bind def

/coor [
[99.57778931 249.88563538]
[98.86942291 234.90235901]
[85.10022736 229.16871643]
[75.14497375 217.97932434]
[71.01825714 203.51795959]
[73.59008026 188.63824463]
[82.40312195 176.30061340]
[95.75296021 168.98327637]
[95.04459381 154.00001526]
[94.33622742 139.01675415]
[86.93331909 137.19740295]
[80.01892853 133.98738098]
[73.85156250 129.50668335]
[68.66179657 123.92284393]
[55.22507095 130.59025574]
[41.78834534 137.25765991]
[28.35161781 143.92507935]
[14.91489124 150.59248352]
[1.47816443 157.25990295]
[-11.95856190 163.92730713]
[-25.39528847 170.59472656]
[-34.01701355 184.54455566]
[-50.39844131 183.78245544]
[-57.68776703 169.09240723]
[-48.38635254 155.58625793]
[-32.06270218 157.15800476]
[-18.62597466 150.49058533]
[-5.18924761 143.82318115]
[8.24747944 137.15576172]
[21.68420601 130.48835754]
[35.12093353 123.82093811]
[48.55765915 117.15352631]
[61.99438477 110.48611450]
[61.78071976 90.32156372]
[71.56590271 72.68906403]
[62.92198944 60.43007278]
[54.27807617 48.17108536]
[45.63416672 35.91209793]
[36.99025726 23.65310669]
[28.34634399 11.39411831]
[19.70243263 -0.86486995]
[11.05852222 -13.12385845]
[2.41461158 -25.38284683]
[-6.22929955 -37.64183426]
[-14.87320995 -49.90082550]
[-23.51712227 -62.15981293]
[-32.16103363 -74.41880035]
[-40.80494308 -86.67778778]
[-49.44885254 -98.93678284]
[-58.09276581 -111.19577026]
[-73.70662689 -113.64176941]
[-82.95006561 -126.46106720]
[-80.33911896 -142.04818726]
[-67.42281342 -151.15557861]
[-51.86416245 -148.37998962]
[-42.89383698 -135.36811829]
[-45.83377838 -119.83967590]
[-37.18986511 -107.58068848]
[-28.54595566 -95.32170105]
[-19.90204430 -83.06271362]
[-11.25813293 -70.80372620]
[-2.61422181 -58.54473495]
[6.02968931 -46.28574753]
[14.67360020 -34.02676010]
[23.31751060 -21.76776886]
[31.96142197 -9.50878048]
[40.60533142 2.75020766]
[49.24924469 15.00919628]
[57.89315414 27.26818466]
[66.53706360 39.52717209]
[75.18097687 51.78616333]
[83.82489014 64.04515076]
[104.06024170 60.78393555]
[123.19822693 68.12167358]
[136.06640625 84.07520294]
[150.69033813 80.73738861]
[165.31425476 77.39957428]
[179.93817139 74.06175995]
[194.56208801 70.72394562]
[209.18600464 67.38613129]
[220.91847229 56.77199173]
[235.04835510 61.48321915]
[249.67227173 58.14540482]
[252.24583435 42.31980896]
[260.65844727 28.71574211]
[273.60482788 19.38802910]
[289.09762573 15.73233318]
[304.77236938 18.27637672]
[318.24835205 26.60399437]
[327.49023438 39.42287445]
[342.03125000 35.74059296]
[349.90487671 22.03726578]
[365.18368530 17.99578094]
[378.80300903 26.01387405]
[382.68273926 41.33455658]
[374.52108765 54.86833572]
[359.16024780 58.58586502]
[345.71353149 50.28159714]
[331.17251587 53.96387863]
[329.66702271 67.96520233]
[323.44552612 80.63174438]
[313.24166870 90.42336273]
[300.27465820 96.14167786]
[286.10363770 97.07671356]
[272.44018555 93.09497833]
[260.94165039 84.65808868]
[253.01008606 72.76932526]
[238.38616943 76.10713959]
[227.69970703 86.48252869]
[212.52381897 82.01004791]
[197.89990234 85.34786224]
[183.27598572 88.68567657]
[168.65206909 92.02349091]
[154.02815247 95.36130524]
[139.40422058 98.69911957]
[138.68211365 107.62099457]
[135.96611023 116.15003967]
[131.39624023 123.84662628]
[125.20803070 130.31404114]
[117.72045898 135.21890259]
[109.31948853 138.30838013]
[110.02785492 153.29165649]
[110.73622131 168.27491760]
[124.71685791 174.30014038]
[134.65457153 185.75128174]
[138.61872864 200.32200623]
[135.87474060 215.10820007]
[127.01953888 227.18688965]
[113.85269165 234.19400024]
[114.56105804 249.17726135]
[121.34864044 264.71319580]
[108.29885864 275.53628540]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 130]
[2 129]
[8 123]
[9 122]
[10 121]
[14 33]
[15 32]
[16 31]
[17 30]
[18 29]
[19 28]
[20 27]
[21 26]
[35 72]
[36 71]
[37 70]
[38 69]
[39 68]
[40 67]
[41 66]
[42 65]
[43 64]
[44 63]
[45 62]
[46 61]
[47 60]
[48 59]
[49 58]
[50 57]
[75 115]
[76 114]
[77 113]
[78 112]
[79 111]
[80 110]
[82 108]
[83 107]
[90 99]
[91 98]
] def

init

% Start Annotations
1 130 0.0 1 colorpair
2 129 0.0 1 colorpair
8 123 0.0 1 colorpair
9 122 0.0 1 colorpair
10 121 0.0 1 colorpair
14 33 0.0 1 colorpair
15 32 0.0 1 colorpair
16 31 0.0 1 colorpair
17 30 0.0 1 colorpair
18 29 0.0 1 colorpair
19 28 0.0 1 colorpair
20 27 0.0 1 colorpair
21 26 0.0 1 colorpair
35 72 0.0 1 colorpair
36 71 0.0 1 colorpair
37 70 0.0 1 colorpair
38 69 0.0 1 colorpair
39 68 0.0 1 colorpair
40 67 0.0 1 colorpair
41 66 0.0 1 colorpair
42 65 0.0 1 colorpair
43 64 0.0 1 colorpair
44 63 0.0 1 colorpair
45 62 0.0 1 colorpair
46 61 0.0 1 colorpair
47 60 0.0 1 colorpair
48 59 0.0 1 colorpair
49 58 0.0 1 colorpair
50 57 0.0 1 colorpair
75 115 0.0 1 colorpair
76 114 0.0 1 colorpair
77 113 0.0 1 colorpair
78 112 0.0 1 colorpair
79 111 0.0 1 colorpair
80 110 0.0 1 colorpair
82 108 0.0 1 colorpair
83 107 0.0 1 colorpair
90 99 0.0 1 colorpair
91 98 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
