%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:20:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUGCAGCAGGAACGGGUCGUUCUUAGGCUGAUGAUUAUCUGCAUAACGCUUAUCGCGCUGAUGUGGAUCACUCGCGGUUCACUGUGUGAAUUGCGCAUCAAACUGGGGGACACGGAGGUUGCAGCCAUUUUGGCUUACGAACCCGAACGG\
) } def
/len { sequence length } bind def

/coor [
[68.10339355 349.10284424]
[57.08227539 359.41967773]
[43.68585968 366.37948608]
[28.90825844 369.46572876]
[13.84606171 368.44946289]
[-0.38301209 363.40603638]
[-12.72307205 354.70974731]
[-22.25840378 343.00592041]
[-28.28142166 329.16299438]
[-30.34517860 314.20828247]
[-28.29652977 299.25149536]
[-22.28749847 285.40252686]
[-12.76399517 273.68905640]
[-0.43272695 264.98028564]
[13.79124451 259.92251587]
[28.85240555 258.89102173]
[31.89122009 244.20205688]
[34.93003082 229.51309204]
[37.96884537 214.82412720]
[41.00765991 200.13516235]
[43.89648819 185.41596985]
[46.63503647 170.66807556]
[49.37358475 155.92018127]
[87.87360382 90.41174316]
[82.20410156 76.52445221]
[76.53459930 62.63716507]
[70.86509705 48.74987793]
[65.19560242 34.86259079]
[59.52610016 20.97530174]
[45.23176193 14.78581905]
[39.67991257 0.62137020]
[45.66872787 -12.96795177]
[39.99922943 -26.85523987]
[34.32972717 -40.74252701]
[28.66022682 -54.62981415]
[22.99072647 -68.51710510]
[15.16829014 -64.68032837]
[5.10369921 -64.22858429]
[-5.72523212 -68.10587311]
[-15.50558853 -76.62956238]
[-27.03984642 -86.21918488]
[-38.57410431 -95.80881500]
[-50.10836029 -105.39843750]
[-61.64262009 -114.98806000]
[-73.17687988 -124.57768250]
[-84.71113586 -134.16731262]
[-96.24539185 -143.75692749]
[-113.60234070 -141.82096863]
[-126.75008392 -152.79783630]
[-127.89749908 -169.54922485]
[-139.62496948 -178.90156555]
[-151.35244751 -188.25392151]
[-167.39144897 -187.89372253]
[-177.56219482 -200.30079651]
[-174.06256104 -215.95748901]
[-159.57714844 -222.85333252]
[-145.21795654 -215.69841003]
[-142.00009155 -199.98138428]
[-130.27262878 -190.62904358]
[-118.54515076 -181.27668762]
[-106.03284454 -184.49734497]
[-93.77394867 -179.83624268]
[-86.34445953 -168.79264832]
[-86.65576935 -155.29119873]
[-75.12151337 -145.70156860]
[-63.58725357 -136.11193848]
[-52.05299377 -126.52231598]
[-40.51873779 -116.93269348]
[-28.98447990 -107.34307098]
[-17.45022202 -97.75344849]
[-5.91596365 -88.16381836]
[1.37859273 -89.90721893]
[-2.10796666 -104.49639130]
[12.48126221 -107.98271179]
[15.96770573 -93.39402008]
[23.26226234 -95.13742065]
[29.21386337 -108.90617371]
[35.16546631 -122.67491913]
[41.11706543 -136.44366455]
[47.06866837 -150.21241760]
[53.02026749 -163.98117065]
[58.97187042 -177.74992371]
[64.92346954 -191.51866150]
[70.87506866 -205.28741455]
[76.82667542 -219.05616760]
[77.56118774 -235.99418640]
[94.04060364 -239.97729492]
[102.43000031 -225.24453735]
[90.59542084 -213.10456848]
[84.64382172 -199.33581543]
[78.69222260 -185.56706238]
[72.74061584 -171.79830933]
[66.78901672 -158.02957153]
[60.83741760 -144.26081848]
[54.88581467 -130.49206543]
[48.93421173 -116.72332001]
[42.98261261 -102.95457458]
[37.03100967 -89.18582153]
[36.87801361 -74.18659973]
[42.54751587 -60.29931641]
[48.21701431 -46.41202927]
[53.88651657 -32.52473831]
[59.55601501 -18.63745117]
[73.34431458 -13.12215900]
[79.29182434 0.88076198]
[73.41338348 15.30580044]
[79.08288574 29.19308853]
[84.75238800 43.08037567]
[90.42189026 56.96766281]
[96.09138489 70.85494995]
[101.76088715 84.74224091]
[113.86006927 93.60845947]
[128.81016541 94.83109283]
[143.76025391 96.05373383]
[155.64556885 85.63669586]
[171.41001892 86.75828552]
[181.70080566 98.75308228]
[180.41261292 114.50478363]
[168.30969238 124.66818237]
[152.57247925 123.21352386]
[142.53761292 111.00382233]
[127.58751678 109.78118134]
[112.63742828 108.55854797]
[109.87364960 115.53073883]
[104.34609222 129.47512817]
[101.58231354 136.44732666]
[113.30978394 145.79968262]
[125.03726196 155.15202332]
[136.76472473 164.50437927]
[148.49220276 173.85671997]
[164.64556885 179.00503540]
[164.17013550 195.95231628]
[147.75355530 200.18695068]
[139.13986206 185.58419800]
[127.41238403 176.23184204]
[115.68491364 166.87950134]
[103.95744324 157.52714539]
[92.22996521 148.17480469]
[85.20284271 150.79579163]
[64.12147522 158.65873718]
[61.38293076 173.40661621]
[58.64438248 188.15451050]
[60.15836334 197.22514343]
[55.69662094 203.17398071]
[52.65780640 217.86294556]
[49.61899567 232.55189514]
[46.58018112 247.24085999]
[43.54137039 261.92984009]
[56.95698547 268.85250854]
[68.00661469 279.13885498]
[75.87028503 292.02548218]
[79.96446991 306.55615234]
[79.98535919 321.65255737]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 148]
[17 147]
[18 146]
[19 145]
[20 144]
[21 142]
[22 141]
[23 140]
[24 111]
[25 110]
[26 109]
[27 108]
[28 107]
[29 106]
[32 103]
[33 102]
[34 101]
[35 100]
[36 99]
[40 71]
[41 70]
[42 69]
[43 68]
[44 67]
[45 66]
[46 65]
[47 64]
[50 60]
[51 59]
[52 58]
[76 98]
[77 97]
[78 96]
[79 95]
[80 94]
[81 93]
[82 92]
[83 91]
[84 90]
[85 89]
[112 123]
[113 122]
[114 121]
[126 138]
[127 137]
[128 136]
[129 135]
[130 134]
] def

init

% Start Annotations
16 148 0.0 0.6 colorpair
17 147 0.0 1 colorpair
18 146 0.0 1 colorpair
19 145 0.16 1 colorpair
20 144 0.0 0.6 colorpair
21 142 0.16 1 colorpair
22 141 0.0 1 colorpair
23 140 0.0 1 colorpair
24 111 0.0 0.6 colorpair
25 110 0.0 1 colorpair
26 109 0.0 1 colorpair
27 108 0.0 0.6 colorpair
28 107 0.0 0.6 colorpair
29 106 0.16 1 colorpair
32 103 0.0 0.6 colorpair
33 102 0.0 1 colorpair
34 101 0.16 1 colorpair
35 100 0.0 1 colorpair
36 99 0.16 1 colorpair
40 71 0.0 1 colorpair
41 70 0.0 1 colorpair
42 69 0.16 1 colorpair
43 68 0.0 1 colorpair
44 67 0.0 1 colorpair
45 66 0.16 1 colorpair
46 65 0.16 1 colorpair
47 64 0.16 1 colorpair
50 60 0.0 0.6 colorpair
51 59 0.0 0.6 colorpair
52 58 0.16 1 colorpair
76 98 0.0 1 colorpair
77 97 0.0 1 colorpair
78 96 0.0 1 colorpair
79 95 0.16 1 colorpair
80 94 0.16 1 colorpair
81 93 0.16 1 colorpair
82 92 0.0 0.6 colorpair
83 91 0.0 0.6 colorpair
84 90 0.0 1 colorpair
85 89 0.0 1 colorpair
112 123 0.16 1 colorpair
113 122 0.0 1 colorpair
114 121 0.0 1 colorpair
126 138 0.16 1 colorpair
127 137 0.0 1 colorpair
128 136 0.0 1 colorpair
129 135 0.0 1 colorpair
130 134 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
16 148 1 gmark
19 cmark
145 cmark
20 144 1 gmark
21 cmark
24 111 1 gmark
27 108 1 gmark
28 107 1 gmark
29 cmark
106 cmark
32 103 1 gmark
34 cmark
36 cmark
99 cmark
42 cmark
45 cmark
66 cmark
46 cmark
65 cmark
47 cmark
64 cmark
50 60 1 gmark
51 59 1 gmark
52 cmark
58 cmark
79 cmark
94 cmark
81 cmark
93 cmark
82 92 1 gmark
83 91 1 gmark
112 cmark
126 cmark

% End Annotations
showpage
end
%%EOF
