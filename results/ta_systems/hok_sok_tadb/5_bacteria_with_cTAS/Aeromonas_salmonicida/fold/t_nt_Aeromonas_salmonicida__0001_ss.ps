%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:16:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGCUAACAUCAGUUUUGC___GAACAUGAU__UGGGCCUCGUUGGUUAAUGAAAAUUGACCUUCGGGGCUUUCGUCUAUCUGGCUCUUGCUUGCGCUUGAGACAGACAGCCUCAAGCACCCACC\
) } def
/len { sequence length } bind def

/coor [
[79.04632568 203.77481079]
[91.06260681 194.41912842]
[87.41790771 179.86866760]
[83.77320862 165.31819153]
[80.12850189 150.76771545]
[76.48380280 136.21725464]
[72.83909607 121.66678619]
[73.36509705 136.65756226]
[70.21939850 151.32400513]
[63.59194946 164.78048706]
[53.88294220 176.21443176]
[41.67866135 184.93540955]
[27.71605873 190.41680908]
[12.83826542 192.32763672]
[-2.05632687 190.55249023]
[-16.06830788 185.19857788]
[-28.35156631 176.58918762]
[-38.16437912 165.24420166]
[-44.91419983 151.84867859]
[-48.19343948 137.21151733]
[-47.80408859 122.21657562]
[-43.76964951 107.76931763]
[-36.33374405 94.74214172]
[-25.94539261 83.92169189]
[-13.23188972 75.96135712]
[1.03905833 71.34183502]
[16.00570297 70.34205627]
[30.76428413 73.02240753]
[44.42360687 79.22102356]
[56.15885544 88.56361389]
[65.25907135 100.48204041]
[58.84574890 86.92220306]
[52.43242264 73.36236572]
[39.25407410 70.28857422]
[30.40686226 60.30869293]
[28.97779274 47.24502563]
[35.26851273 35.92976379]
[29.18989182 22.21661758]
[23.11127281 8.50347233]
[17.03265381 -5.20967436]
[10.95403385 -18.92282104]
[4.87541389 -32.63596725]
[-1.20320594 -46.34911346]
[-7.28182554 -60.06225967]
[-21.75333405 -65.82534790]
[-27.72257042 -79.81902313]
[-22.13916397 -93.57987976]
[-28.21778297 -107.29302216]
[-34.29640198 -121.00617218]
[-40.37502289 -134.71931458]
[-46.45364380 -148.43246460]
[-52.53226089 -162.14561462]
[-58.61088181 -175.85874939]
[-72.17382050 -185.07714844]
[-70.70224762 -201.41012573]
[-55.70998764 -208.05574036]
[-42.61979294 -198.17753601]
[-44.89773560 -181.93737793]
[-38.81911469 -168.22422791]
[-32.74049759 -154.51107788]
[-26.66187668 -140.79792786]
[-20.58325577 -127.08478546]
[-14.50463676 -113.37164307]
[-8.42601681 -99.65849304]
[5.51969147 -94.55429840]
[11.87962532 -80.73381042]
[6.43132067 -66.14087677]
[12.50994015 -52.42773438]
[18.58856010 -38.71458817]
[24.66717911 -25.00144005]
[30.74580002 -11.28829384]
[36.82442093 2.42485237]
[42.90303802 16.13799858]
[48.98165894 29.85114479]
[64.88162231 35.18283081]
[72.19591522 50.64670563]
[65.99226379 66.94903564]
[72.40558624 80.50888062]
[78.81891632 94.06871796]
[90.22024536 81.81778717]
[105.90064240 81.62926483]
[116.11328888 92.10218048]
[131.10876465 91.73406219]
[146.10424805 91.36594391]
[161.09973145 90.99782562]
[174.70587158 82.92418671]
[187.61918640 90.34680939]
[202.61466980 89.97869110]
[217.61015320 89.61057281]
[228.47256470 78.44608307]
[243.68534851 78.28636932]
[254.26205444 88.71082306]
[269.25753784 88.34270477]
[282.96453857 79.33989716]
[297.49108887 86.94982147]
[297.89355469 103.34403229]
[283.75787354 111.65756989]
[269.62564087 103.33818054]
[254.63017273 103.70629883]
[244.57771301 114.63716888]
[229.37541199 115.22410583]
[217.97827148 104.60605621]
[202.98278809 104.97417450]
[187.98730469 105.34229279]
[175.45375061 113.38960266]
[161.46784973 105.99330902]
[146.47236633 106.36142731]
[131.47688293 106.72954559]
[116.48140717 107.09766388]
[105.45759583 119.21009827]
[87.38956451 118.02207947]
[91.03427124 132.57255554]
[94.67897034 147.12301636]
[98.32367706 161.67349243]
[101.96837616 176.22395325]
[105.61308289 190.77442932]
[120.62073517 193.36096191]
[133.27525330 201.83343506]
[141.38418579 214.72395325]
[143.54258728 229.79913330]
[139.37651062 244.44712830]
[129.60774231 256.13006592]
[115.92881012 262.82382202]
[100.70964050 263.36868286]
[86.58705902 257.67019653]
[76.00788879 246.71569824]
[70.80503845 232.40310669]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 116]
[3 115]
[4 114]
[5 113]
[6 112]
[7 111]
[31 79]
[32 78]
[33 77]
[37 74]
[38 73]
[39 72]
[40 71]
[41 70]
[42 69]
[43 68]
[44 67]
[47 64]
[48 63]
[49 62]
[50 61]
[51 60]
[52 59]
[53 58]
[82 109]
[83 108]
[84 107]
[85 106]
[87 104]
[88 103]
[89 102]
[92 99]
[93 98]
] def

init

% Start Annotations
2 116 0.0 1 colorpair
3 115 0.0 1 colorpair
4 114 0.0 1 colorpair
5 113 0.0 1 colorpair
6 112 0.0 1 colorpair
7 111 0.0 1 colorpair
31 79 0.0 0.6 colorpair
32 78 0.0 1 colorpair
33 77 0.16 1 colorpair
37 74 0.0 1 colorpair
38 73 0.16 1 colorpair
39 72 0.0 1 colorpair
40 71 0.0 1 colorpair
41 70 0.0 1 colorpair
42 69 0.0 1 colorpair
43 68 0.0 1 colorpair
44 67 0.0 1 colorpair
47 64 0.0 1 colorpair
48 63 0.0 1 colorpair
49 62 0.0 1 colorpair
50 61 0.0 1 colorpair
51 60 0.0 1 colorpair
52 59 0.0 1 colorpair
53 58 0.0 1 colorpair
82 109 0.0 1 colorpair
83 108 0.16 1 colorpair
84 107 0.0 1 colorpair
85 106 0.0 1 colorpair
87 104 0.0 1 colorpair
88 103 0.0 1 colorpair
89 102 0.0 1 colorpair
92 99 0.0 1 colorpair
93 98 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
31 79 1 gmark
33 cmark
38 cmark
83 cmark
93 98 1 gmark

% End Annotations
showpage
end
%%EOF
