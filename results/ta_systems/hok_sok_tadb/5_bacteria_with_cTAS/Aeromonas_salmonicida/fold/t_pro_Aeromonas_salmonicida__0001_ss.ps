%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:16:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___AUGCUUGGAAAAACCGCCGUGAUGGCGUUGCUCAUUGUGUGUGUCACGGUGCUGGCGUUUACCGCGCUGGUACGAGAUUCACUGUGUGAGUUAAGUGUGCGGCAAGGCGGCACGGAAAUCCGGGCAUAUCUUGCUUACGAACCGAGAGAG\
) } def
/len { sequence length } bind def

/coor [
[154.33181763 278.42425537]
[154.31300354 271.50268555]
[156.48310852 264.87551880]
[160.65383911 259.22225952]
[154.70223999 245.45350647]
[148.75062561 231.68476868]
[142.79902649 217.91601562]
[136.84742737 204.14726257]
[130.89582825 190.37850952]
[124.94422913 176.60977173]
[118.99262238 162.84101868]
[113.04102325 149.07226562]
[103.95472717 150.62130737]
[94.73809814 150.50216675]
[85.69487762 148.71878052]
[77.12306213 145.32992554]
[69.30513000 140.44726562]
[62.49871826 134.23170471]
[50.04796600 142.59704590]
[37.59721375 150.96237183]
[25.14645958 159.32769775]
[12.69570732 167.69302368]
[2.92040706 181.54510498]
[-13.09639072 175.98646545]
[-12.18887329 159.05682373]
[4.33037710 155.24227905]
[16.78112984 146.87695312]
[29.23188400 138.51161194]
[41.68263626 130.14628601]
[54.13338852 121.78096008]
[49.22508621 100.25299835]
[53.91861343 78.67720032]
[67.32640076 61.13366699]
[59.47587967 48.35206223]
[51.62536240 35.57046127]
[43.77484131 22.78886032]
[35.92432022 10.00725937]
[28.07380295 -2.77434278]
[12.72605896 -4.09834146]
[1.23512411 -14.08892727]
[-2.12981772 -28.75661850]
[3.71741390 -42.42950821]
[-4.13310575 -55.21110916]
[-11.98362541 -67.99270630]
[-25.79920006 -75.70247650]
[-25.86724091 -90.59692383]
[-33.71776199 -103.37852478]
[-41.56827927 -116.16012573]
[-54.97661209 -117.77344513]
[-64.85047150 -126.69897461]
[-67.71950531 -139.49644470]
[-62.75095367 -151.42304993]
[-70.33911896 -164.36212158]
[-77.92727661 -177.30120850]
[-85.51543427 -190.24029541]
[-93.10359955 -203.17936707]
[-100.69175720 -216.11845398]
[-108.27991486 -229.05754089]
[-115.86808014 -241.99661255]
[-123.45623779 -254.93569946]
[-131.04440308 -267.87478638]
[-146.14349365 -273.29663086]
[-151.18205261 -288.52795410]
[-142.29492188 -301.88452148]
[-126.29953766 -303.12036133]
[-115.46620178 -291.28744507]
[-118.10531616 -275.46295166]
[-110.51715851 -262.52386475]
[-102.92899323 -249.58477783]
[-95.34083557 -236.64569092]
[-87.75267792 -223.70661926]
[-80.16451263 -210.76753235]
[-72.57635498 -197.82844543]
[-64.98819733 -184.88937378]
[-57.40003586 -171.95028687]
[-49.81187439 -159.01119995]
[-33.39429474 -155.49150085]
[-24.40026474 -140.91540527]
[-28.78667831 -124.01065063]
[-20.93615913 -111.22904968]
[-13.08563900 -98.44744110]
[0.16841359 -91.65190887]
[0.79797596 -75.84323120]
[8.64849567 -63.06162643]
[16.49901581 -50.28002548]
[31.33823967 -49.31285477]
[42.89927292 -39.67924500]
[46.61430740 -24.91266251]
[40.85540390 -10.62486267]
[48.70592499 2.15673923]
[56.55644226 14.93834114]
[64.40695953 27.71994209]
[72.25748444 40.50154495]
[80.10800171 53.28314590]
[94.99513245 49.47171783]
[110.34069824 50.28857422]
[124.73908234 55.65888977]
[136.87141418 65.09075928]
[145.62640381 77.72024536]
[159.92959595 73.20155334]
[174.23278809 68.68286133]
[188.53599548 64.16416931]
[202.83918762 59.64547348]
[213.66746521 48.11035156]
[228.13433838 51.65418243]
[242.43753052 47.13549042]
[255.71943665 36.59854507]
[269.52139282 46.44447708]
[263.88101196 62.43267441]
[246.95622253 61.43868637]
[232.65303040 65.95738220]
[222.84780884 77.16929626]
[207.35787964 73.94866943]
[193.05468750 78.46736145]
[178.75148010 82.98605347]
[164.44828796 87.50474548]
[150.14509583 92.02343750]
[150.62622070 103.89121246]
[148.33711243 115.54606628]
[143.40299988 126.35024261]
[136.09391785 135.71253967]
[126.80977631 143.12066650]
[132.76136780 156.88941956]
[138.71298218 170.65817261]
[144.66458130 184.42691040]
[150.61618042 198.19566345]
[156.56777954 211.96441650]
[162.51937866 225.73316956]
[168.47097778 239.50190735]
[174.42257690 253.27066040]
[194.92634583 265.46322632]
[192.15647888 288.44003296]
[199.74464417 301.37911987]
[207.33279419 314.31820679]
[214.92095947 327.25729370]
[222.50912476 340.19638062]
[237.92749023 340.72286987]
[250.60060120 349.52038574]
[256.48446655 363.78164673]
[253.70161438 378.95593262]
[243.13999939 390.20120239]
[228.16983032 393.92910767]
[213.56800842 388.95010376]
[203.99394226 376.85299683]
[202.50265503 361.49786377]
[209.57003784 347.78451538]
[201.98187256 334.84545898]
[194.39372253 321.90637207]
[186.80555725 308.96728516]
[179.21739197 296.02819824]
[172.55752563 296.21343994]
[166.12626648 294.28463745]
[160.58259583 290.40548706]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 130]
[5 129]
[6 128]
[7 127]
[8 126]
[9 125]
[10 124]
[11 123]
[12 122]
[18 30]
[19 29]
[20 28]
[21 27]
[22 26]
[33 94]
[34 93]
[35 92]
[36 91]
[37 90]
[38 89]
[42 85]
[43 84]
[44 83]
[46 81]
[47 80]
[48 79]
[52 76]
[53 75]
[54 74]
[55 73]
[56 72]
[57 71]
[58 70]
[59 69]
[60 68]
[61 67]
[99 117]
[100 116]
[101 115]
[102 114]
[103 113]
[105 111]
[106 110]
[132 150]
[133 149]
[134 148]
[135 147]
[136 146]
] def

init

% Start Annotations
4 130 0.0 1 colorpair
5 129 0.0 0.6 colorpair
6 128 0.0 1 colorpair
7 127 0.0 1 colorpair
8 126 0.16 1 colorpair
9 125 0.0 1 colorpair
10 124 0.0 1 colorpair
11 123 0.0 1 colorpair
12 122 0.0 1 colorpair
18 30 0.0 1 colorpair
19 29 0.0 1 colorpair
20 28 0.0 1 colorpair
21 27 0.0 1 colorpair
22 26 0.16 1 colorpair
33 94 0.16 1 colorpair
34 93 0.0 1 colorpair
35 92 0.0 1 colorpair
36 91 0.0 1 colorpair
37 90 0.0 1 colorpair
38 89 0.0 1 colorpair
42 85 0.0 1 colorpair
43 84 0.0 1 colorpair
44 83 0.0 1 colorpair
46 81 0.0 1 colorpair
47 80 0.0 1 colorpair
48 79 0.0 1 colorpair
52 76 0.0 1 colorpair
53 75 0.0 1 colorpair
54 74 0.16 1 colorpair
55 73 0.0 1 colorpair
56 72 0.0 1 colorpair
57 71 0.0 1 colorpair
58 70 0.0 1 colorpair
59 69 0.0 1 colorpair
60 68 0.0 1 colorpair
61 67 0.0 1 colorpair
99 117 0.0 1 colorpair
100 116 0.0 1 colorpair
101 115 0.0 1 colorpair
102 114 0.0 1 colorpair
103 113 0.0 1 colorpair
105 111 0.0 1 colorpair
106 110 0.0 1 colorpair
132 150 0.0 1 colorpair
133 149 0.0 1 colorpair
134 148 0.0 1 colorpair
135 147 0.0 1 colorpair
136 146 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
5 129 1 gmark
8 cmark
26 cmark
94 cmark
54 cmark

% End Annotations
showpage
end
%%EOF
