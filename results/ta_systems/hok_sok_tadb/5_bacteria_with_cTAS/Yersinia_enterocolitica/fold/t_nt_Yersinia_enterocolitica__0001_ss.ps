%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:42:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAGAAGCUACCGUAAUAUUGUCUAGGUAUUACAGAGAGCCUCGUAUUGAUUAACUUCAGUACGGGGCCUUUCUCUGUCUACUCUCAGCCAAACACAAGCACUAAAAGCAGACAGCUUCAAGCACCCGCCG\
) } def
/len { sequence length } bind def

/coor [
[117.51385498 266.40621948]
[115.75952148 251.50917053]
[114.00519562 236.61212158]
[98.99908447 226.24682617]
[96.19309998 207.90547180]
[107.80355072 193.02816772]
[105.35289001 178.22970581]
[102.90222931 163.43125916]
[100.45156860 148.63279724]
[98.00090790 133.83435059]
[95.55024719 119.03588867]
[88.98303223 115.41349792]
[76.14167023 123.16587067]
[75.84860992 108.16870880]
[69.28140259 104.54631042]
[55.45708847 110.36769104]
[41.63277817 116.18907166]
[27.80846977 122.01044464]
[13.98415852 127.83182526]
[0.15984820 133.65319824]
[-13.66446209 139.47457886]
[-27.48877335 145.29595947]
[-34.84846878 159.55128479]
[-50.60994339 162.54385376]
[-62.68234253 151.97802734]
[-61.80475235 135.95899963]
[-48.65038681 126.77519226]
[-33.31015015 131.47164917]
[-19.48583984 125.65026855]
[-5.66152954 119.82888794]
[8.16278076 114.00751495]
[21.98709106 108.18613434]
[35.81140137 102.36475372]
[49.63571167 96.54338074]
[63.46002197 90.72200012]
[68.62702942 76.64002228]
[61.84852219 63.25899887]
[55.07001495 49.87797165]
[48.29151154 36.49694443]
[41.51300812 23.11591721]
[34.26821899 9.98149586]
[26.56610489 -2.89007950]
[18.86399269 -15.76165485]
[11.16187954 -28.63323021]
[3.45976686 -41.50480652]
[-4.24234581 -54.37638092]
[-11.94445896 -67.24795532]
[-19.64657211 -80.11952972]
[-27.34868431 -92.99111176]
[-35.05079651 -105.86268616]
[-42.75291061 -118.73426056]
[-50.45502472 -131.60583496]
[-65.84201050 -135.21363831]
[-74.10003662 -148.68881226]
[-70.32975769 -164.03680420]
[-56.76801682 -172.15190125]
[-41.46075439 -168.21955872]
[-33.48949432 -154.57278442]
[-37.58344650 -139.30795288]
[-29.88133430 -126.43637085]
[-22.17922211 -113.56479645]
[-14.47710896 -100.69322205]
[-6.77499628 -87.82164764]
[0.92711669 -74.95007324]
[8.62922955 -62.07849503]
[16.33134270 -49.20692062]
[24.03345490 -36.33534241]
[31.73556900 -23.46376801]
[39.43767929 -10.59219265]
[47.13979340 2.27938294]
[50.54919434 3.48003340]
[53.51920700 6.44561577]
[55.20169449 10.93781185]
[54.89403534 16.33741379]
[61.67253876 29.71843910]
[68.45104218 43.09946823]
[75.22954559 56.48049164]
[82.00804901 69.86151886]
[116.62924957 89.58980560]
[131.42770386 87.13914490]
[146.22615051 84.68848419]
[161.02461243 82.23782349]
[173.37525940 72.34985352]
[187.19561768 77.90383911]
[201.99407959 75.45317841]
[207.73069763 58.92692947]
[220.94282532 47.59642029]
[237.97651672 44.47795105]
[254.17959595 50.33271027]
[265.17224121 63.48344803]
[279.83956909 60.34184647]
[285.18069458 45.86856842]
[297.51254272 36.59877014]
[312.90005493 35.49040985]
[326.43310547 42.89715958]
[333.79336548 56.45555496]
[332.63220215 71.83915710]
[323.32015991 84.13911438]
[308.82864380 89.43056488]
[293.78186035 86.02501678]
[282.98117065 75.00917053]
[268.31384277 78.15077209]
[265.71173096 90.61769867]
[258.53460693 101.19514465]
[247.83297729 108.27125549]
[235.19764709 110.75135040]
[222.52316284 108.22715759]
[211.72387695 101.04348755]
[204.44473267 90.25163269]
[189.64628601 92.70229340]
[178.35412598 102.41498566]
[163.47526550 97.03627777]
[148.67681885 99.48693848]
[133.87835693 101.93759918]
[119.07991028 104.38825989]
[110.34870148 116.58522797]
[112.79936218 131.38368225]
[115.25002289 146.18214417]
[117.70068359 160.98059082]
[120.15134430 175.77905273]
[122.60200500 190.57749939]
[133.52767944 195.53979492]
[140.59350586 205.08924866]
[142.11279297 216.74952698]
[137.81869507 227.56674194]
[128.90225220 234.85778809]
[130.65658569 249.75483704]
[132.41090393 264.65188599]
[144.97027588 274.24554443]
[146.98451233 289.92095947]
[137.25862122 302.37817383]
[121.56278992 304.22656250]
[109.20908356 294.36950684]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 128]
[2 127]
[3 126]
[6 121]
[7 120]
[8 119]
[9 118]
[10 117]
[11 116]
[15 35]
[16 34]
[17 33]
[18 32]
[19 31]
[20 30]
[21 29]
[22 28]
[36 78]
[37 77]
[38 76]
[39 75]
[40 74]
[41 70]
[42 69]
[43 68]
[44 67]
[45 66]
[46 65]
[47 64]
[48 63]
[49 62]
[50 61]
[51 60]
[52 59]
[79 115]
[80 114]
[81 113]
[82 112]
[84 110]
[85 109]
[90 102]
[91 101]
] def

init

% Start Annotations
1 128 0.0 1 colorpair
2 127 0.0 1 colorpair
3 126 0.0 1 colorpair
6 121 0.0 1 colorpair
7 120 0.0 1 colorpair
8 119 0.0 1 colorpair
9 118 0.0 1 colorpair
10 117 0.0 1 colorpair
11 116 0.0 1 colorpair
15 35 0.0 1 colorpair
16 34 0.0 1 colorpair
17 33 0.0 1 colorpair
18 32 0.0 1 colorpair
19 31 0.0 1 colorpair
20 30 0.0 1 colorpair
21 29 0.0 1 colorpair
22 28 0.0 1 colorpair
36 78 0.0 1 colorpair
37 77 0.0 1 colorpair
38 76 0.0 1 colorpair
39 75 0.0 1 colorpair
40 74 0.0 1 colorpair
41 70 0.0 1 colorpair
42 69 0.0 1 colorpair
43 68 0.0 1 colorpair
44 67 0.0 1 colorpair
45 66 0.0 1 colorpair
46 65 0.0 1 colorpair
47 64 0.0 1 colorpair
48 63 0.0 1 colorpair
49 62 0.0 1 colorpair
50 61 0.0 1 colorpair
51 60 0.0 1 colorpair
52 59 0.0 1 colorpair
79 115 0.0 1 colorpair
80 114 0.0 1 colorpair
81 113 0.0 1 colorpair
82 112 0.0 1 colorpair
84 110 0.0 1 colorpair
85 109 0.0 1 colorpair
90 102 0.0 1 colorpair
91 101 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
