%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 23:53:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
____________________________________________________________AAUGCCGCAAAAUAAUCUGUUGUGGGGCUUAUUAGUAAUCUGUUUCACGAUAUUGGUAUUGACCUGGAUGGUUCGUAACUCGCUAUGCGAAUUACGGCUCAGGGAGGGAAAUAUUGAGCUGGUGGCUUUCCUAGCUUACGAAUCUAA___AAA___________________\
) } def
/len { sequence length } bind def

/coor [
[137.01902771 628.69152832]
[122.04283142 629.52734375]
[107.04898834 629.93908691]
[92.04949951 629.92633057]
[77.05637360 629.48907471]
[62.08162689 628.62774658]
[47.13725281 627.34301758]
[32.23522186 625.63586426]
[17.38747025 623.50769043]
[2.60588789 620.96020508]
[-12.09768200 617.99542236]
[-26.71146393 614.61572266]
[-41.22375107 610.82379150]
[-55.62292099 606.62274170]
[-69.89743805 602.01593018]
[-84.03587341 597.00695801]
[-98.02689362 591.59991455]
[-111.85929871 585.79907227]
[-125.52201080 579.60913086]
[-139.00407410 573.03503418]
[-152.29470825 566.08209229]
[-165.38325500 558.75573730]
[-178.25923157 551.06201172]
[-190.91232300 543.00689697]
[-203.33241272 534.59704590]
[-215.50952148 525.83898926]
[-227.43391418 516.73992920]
[-239.09605408 507.30700684]
[-250.48655701 497.54785156]
[-261.59634399 487.47024536]
[-272.41650391 477.08230591]
[-282.93832397 466.39233398]
[-293.15347290 455.40887451]
[-303.05368042 444.14074707]
[-312.63104248 432.59698486]
[-321.87789917 420.78677368]
[-330.78683472 408.71966553]
[-339.35070801 396.40524292]
[-347.56268311 383.85339355]
[-355.41616821 371.07421875]
[-362.90487671 358.07791138]
[-370.02279663 344.87484741]
[-376.76422119 331.47567749]
[-383.12377930 317.89111328]
[-389.09637451 304.13198853]
[-394.67718506 290.20938110]
[-399.86178589 276.13439941]
[-404.64599609 261.91833496]
[-409.02597046 247.57258606]
[-412.99826050 233.10862732]
[-416.55963135 218.53805542]
[-419.70724487 203.87254333]
[-422.43856812 189.12382507]
[-424.75143433 174.30371094]
[-426.64398193 159.42408752]
[-428.11471558 144.49687195]
[-429.16241455 129.53401184]
[-429.78625488 114.54749298]
[-429.98577881 99.54932404]
[-429.76077271 84.55151367]
[-429.11141968 69.56607819]
[-428.03826904 54.60502243]
[-426.54217529 39.68032455]
[-424.62432861 24.80394173]
[-422.28625488 9.98779011]
[-419.52981567 -4.75626326]
[-416.35726929 -19.41640854]
[-412.77114868 -33.98089981]
[-408.77426147 -48.43807983]
[-404.36987305 -62.77635956]
[-399.56149292 -76.98426056]
[-394.35296631 -91.05039215]
[-388.74847412 -104.96350098]
[-382.75250244 -118.71244049]
[-376.36987305 -132.28619385]
[-369.60565186 -145.67387390]
[-362.46527100 -158.86479187]
[-354.95449829 -171.84835815]
[-347.07928467 -184.61416626]
[-338.84597778 -197.15202332]
[-330.26116943 -209.45184326]
[-321.33172607 -221.50381470]
[-312.06478882 -233.29826355]
[-302.46780396 -244.82572937]
[-292.54843140 -256.07702637]
[-282.31466675 -267.04309082]
[-271.77465820 -277.71514893]
[-260.93685913 -288.08465576]
[-249.80993652 -298.14334106]
[-238.40284729 -307.88311768]
[-226.72468567 -317.29617310]
[-214.78483582 -326.37496948]
[-202.59284973 -335.11227417]
[-190.15847778 -343.50103760]
[-177.49169922 -351.53457642]
[-164.60266113 -359.20642090]
[-151.50167847 -366.51046753]
[-138.19923401 -373.44085693]
[-124.70600891 -379.99200439]
[-111.03279114 -386.15869141]
[-97.19053650 -391.93597412]
[-83.19033813 -397.31924438]
[-69.04341125 -402.30413818]
[-54.76107788 -406.88668823]
[-40.35478210 -411.06326294]
[-25.83606911 -414.83047485]
[-11.21656036 -418.18530273]
[3.49203134 -421.12506104]
[18.27792358 -423.64743042]
[33.12927628 -425.75033569]
[48.03418732 -427.43215942]
[62.98072433 -428.69149780]
[77.95691681 -429.52734375]
[92.95075989 -429.93908691]
[107.95024872 -429.92633057]
[122.94337463 -429.48910522]
[137.91812134 -428.62777710]
[152.86250305 -427.34304810]
[167.76452637 -425.63589478]
[182.61228943 -423.50772095]
[197.39385986 -420.96023560]
[212.09744263 -417.99545288]
[226.71122742 -414.61575317]
[241.22351074 -410.82388306]
[255.62268066 -406.62283325]
[269.89718628 -402.01599121]
[284.03564453 -397.00704956]
[298.02667236 -391.60000610]
[311.85906982 -385.79919434]
[325.52178955 -379.60925293]
[339.00384521 -373.03518677]
[352.29449463 -366.08218384]
[365.38302612 -358.75588989]
[378.25903320 -351.06213379]
[390.91210938 -343.00704956]
[403.33221436 -334.59716797]
[415.50930786 -325.83914185]
[427.43371582 -316.74005127]
[439.09585571 -307.30715942]
[450.48638916 -297.54800415]
[461.59616089 -287.47042847]
[472.41632080 -277.08248901]
[482.93817139 -266.39251709]
[493.15328979 -255.40907288]
[503.05349731 -244.14094543]
[512.63085938 -232.59716797]
[521.87774658 -220.78698730]
[530.78668213 -208.71984863]
[539.35058594 -196.40544128]
[547.56256104 -183.85362244]
[555.41601562 -171.07443237]
[562.90472412 -158.07810974]
[570.02264404 -144.87509155]
[576.76409912 -131.47590637]
[583.12365723 -117.89132690]
[589.09625244 -104.13221741]
[594.67706299 -90.20960236]
[599.86169434 -76.13462830]
[604.64593506 -61.91857529]
[609.02593994 -47.57282639]
[612.99816895 -33.10887527]
[616.55957031 -18.53830528]
[619.70721436 -3.87278819]
[622.43853760 10.87592983]
[624.75140381 25.69603539]
[626.64398193 40.57565689]
[628.11468506 55.50287628]
[629.16241455 70.46573639]
[629.78625488 85.45225525]
[629.98577881 100.45042419]
[629.76074219 115.44823456]
[629.11145020 130.43367004]
[628.03826904 145.39472961]
[626.54217529 160.31942749]
[624.62432861 175.19581604]
[622.28631592 190.01196289]
[619.52990723 204.75601196]
[616.35736084 219.41616821]
[612.77117920 233.98065186]
[608.77435303 248.43783569]
[604.36993408 262.77612305]
[599.56158447 276.98400879]
[594.35308838 291.05017090]
[588.74859619 304.96325684]
[602.49798584 310.95944214]
[616.24737549 316.95562744]
[630.16809082 309.83181763]
[645.39941406 313.37310791]
[654.74957275 325.90734863]
[653.80377197 341.51632690]
[643.00854492 352.82989502]
[627.46105957 354.50616455]
[614.50238037 345.75366211]
[610.25122070 330.70501709]
[596.50183105 324.70883179]
[582.75238037 318.71267700]
[576.36975098 332.28640747]
[569.60552979 345.67410278]
[562.46514893 358.86502075]
[554.95434570 371.84857178]
[547.07916260 384.61437988]
[538.84582520 397.15222168]
[530.26104736 409.45205688]
[521.33154297 421.50402832]
[512.06463623 433.29846191]
[502.46765137 444.82592773]
[492.54827881 456.07720947]
[482.31448364 467.04327393]
[471.77447510 477.71533203]
[460.93667603 488.08483887]
[449.80975342 498.14352417]
[438.40264893 507.88327026]
[426.72448730 517.29632568]
[414.78463745 526.37512207]
[402.59265137 535.11242676]
[390.15826416 543.50115967]
[377.49148560 551.53472900]
[364.60244751 559.20654297]
[351.50146484 566.51062012]
[338.19900513 573.44097900]
[324.70578003 579.99212646]
[311.03256226 586.15881348]
[297.19030762 591.93609619]
[283.19009399 597.31933594]
[269.04318237 602.30419922]
[254.76083374 606.88677979]
[240.35453796 611.06329346]
[225.83583069 614.83050537]
[211.21630859 618.18536377]
[196.50772095 621.12512207]
[181.72183228 623.64746094]
[166.87046814 625.75036621]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[184 196]
[185 195]
[186 194]
] def

init

% Start Annotations
185 195 0.0 0.2 colorpair
186 194 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
184 196 4 gmark
184 cmark
196 cmark
185 195 2 gmark
186 cmark
194 cmark

% End Annotations
showpage
end
%%EOF
