%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 23:53:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
G_UAAGAGGCUAUUCUGAUGUUGUCUAGGCA_UACAGGUGGCCUCG_U_G__G__GU____UAAUGAAAA____UUA______UACGGGGCUUUCUUCUUUCUGCCUCACAAC_______CAAACCACC____C__CAUGAGGCAAAAAGCCUCAAGCGCCCGC___A__AUA\
) } def
/len { sequence length } bind def

/coor [
[75.00218964 238.82336426]
[56.15754700 234.06959534]
[38.14520264 226.77066040]
[21.30710411 217.06512451]
[5.96290112 205.13723755]
[-7.59611130 191.21343994]
[-19.53750801 200.29106140]
[-31.47890282 209.36866760]
[-43.42029953 218.44628906]
[-55.36169434 227.52389526]
[-55.63606262 241.01083374]
[-63.52202225 251.71441650]
[-75.95223999 255.84994507]
[-88.30579376 252.11672974]
[-100.40912628 260.97726440]
[-112.51246643 269.83779907]
[-124.61580658 278.69836426]
[-136.63865662 287.66778564]
[-148.49761963 296.85284424]
[-160.27317810 306.14456177]
[-158.67919922 321.48934937]
[-165.65467834 335.24969482]
[-178.97373962 343.03466797]
[-194.38635254 342.36013794]
[-206.97439575 333.44134521]
[-212.72106934 319.12423706]
[-209.79261780 303.97735596]
[-199.12353516 292.83401489]
[-184.11824036 289.25003052]
[-169.56491089 294.36901855]
[-157.78935242 285.07727051]
[-154.47465515 278.44244385]
[-145.71627808 275.72640991]
[-142.28233337 269.15249634]
[-133.47634888 266.59500122]
[-121.37300873 257.73446655]
[-109.26966858 248.87393188]
[-97.16633606 240.01339722]
[-95.31992340 223.31292725]
[-81.70858765 212.89682007]
[-64.43930817 215.58250427]
[-52.49791336 206.50488281]
[-40.55651474 197.42727661]
[-28.61511993 188.34967041]
[-16.67372513 179.27204895]
[-22.78540993 169.43025208]
[-28.06884766 159.12010193]
[-32.48839569 148.41116333]
[-36.01424789 137.37567139]
[-38.62261581 126.08805084]
[-40.29590607 114.62445831]
[-41.02283096 103.06222534]
[-40.79848862 91.47932434]
[-39.62438965 79.95390320]
[-37.50845718 68.56370544]
[-34.46496201 57.38556290]
[-30.51443291 46.49487305]
[-25.68352127 35.96509933]
[-20.00481224 25.86727524]
[-13.51661301 16.26951218]
[-6.26268721 7.23655176]
[1.70803261 -1.17067313]
[10.34177971 -8.89545250]
[19.58031654 -15.88567829]
[29.36132240 -22.09419823]
[39.61882019 -27.47913170]
[50.28361893 -32.00415802]
[61.28378296 -35.63874817]
[72.54510498 -38.35839081]
[83.99162292 -40.14473724]
[95.54611969 -40.98574066]
[107.13066864 -40.87572479]
[118.66711426 -39.81542969]
[130.07763672 -37.81201553]
[141.28527832 -34.87899017]
[152.21443176 -31.03613853]
[162.79136658 -26.30938339]
[172.94474792 -20.73060989]
[182.60607910 -14.33745003]
[191.71018982 -7.17302704]
[200.19566345 0.71433026]
[208.00527954 9.27141857]
[215.08634949 18.44051552]
[221.39109802 28.15977097]
[226.87699890 38.36362457]
[231.50706482 48.98324585]
[235.25004578 59.94699860]
[249.83874512 56.45848846]
[261.46105957 45.72387314]
[275.63882446 50.28906631]
[290.22750854 46.80055618]
[304.81622314 43.31204605]
[304.68600464 28.25252914]
[307.90884399 13.54872990]
[314.31994629 -0.06261022]
[323.59487915 -11.90021801]
[335.26596069 -21.37239075]
[348.74581909 -28.00657272]
[363.35699463 -31.47292900]
[378.36596680 -31.60074043]
[393.01992798 -28.38681221]
[406.58468628 -21.99547386]
[418.38125610 -12.75017548]
[427.82003784 -1.11712408]
[434.43011475 12.31822777]
[449.01882935 8.82971668]
[448.04061890 -6.17532158]
[449.61254883 -21.12982178]
[453.68933105 -35.60351562]
[460.15371704 -49.17996216]
[468.81967163 -61.46854401]
[479.43786621 -72.11569214]
[491.70281982 -80.81506348]
[505.26162720 -87.31636810]
[519.72418213 -91.43254089]
[534.67431641 -93.04515839]
[549.68194580 -92.10781860]
[564.31530762 -88.64749908]
[578.15325928 -82.76374817]
[590.79772949 -74.62585449]
[601.88488770 -64.46797180]
[611.09576416 -52.58235168]
[618.16534424 -39.31097412]
[622.89013672 -25.03567886]
[625.13433838 -10.16719532]
[624.83325195 4.86667824]
[621.99560547 19.63338852]
[616.70300293 33.70806885]
[609.10778809 46.68576050]
[599.42840576 58.19307327]
[587.94348145 67.89891052]
[574.98327637 75.52403259]
[560.92083740 80.84902954]
[546.16070557 83.72070312]
[531.12756348 84.05641937]
[516.25396729 81.84653473]
[501.96780396 77.15461731]
[488.68017578 70.11566925]
[476.77337646 60.93222046]
[466.58996582 49.86848450]
[458.42294312 37.24279785]
[452.50732422 23.41842079]
[437.91864014 26.90693283]
[438.10150146 41.87918854]
[434.94631958 56.52375412]
[428.60824585 70.10549164]
[419.40219116 81.94187927]
[407.78732300 91.43731689]
[394.34414673 98.11309814]
[379.74542236 101.63153076]
[364.72259521 101.81304169]
[350.02899170 98.64530182]
[336.40225220 92.28403473]
[324.52716064 83.04537201]
[315.00125122 71.39010620]
[308.30471802 57.90074921]
[293.71603394 61.38925934]
[279.12731934 64.87776947]
[268.54846191 75.36286926]
[253.32725525 71.04719543]
[238.73855591 74.53570557]
[240.92184448 93.84767151]
[240.42988586 113.27644348]
[237.27201843 132.45317078]
[231.50820923 151.01380920]
[223.24784851 168.60600281]
[212.64776611 184.89579773]
[199.90919495 199.57392883]
[185.27395630 212.36177063]
[169.01989746 223.01654053]
[151.45555115 231.33598328]
[132.91439819 237.16215515]
[113.74839020 240.38446045]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 45]
[7 44]
[8 43]
[9 42]
[10 41]
[14 38]
[15 37]
[16 36]
[17 35]
[18 33]
[19 31]
[20 30]
[87 161]
[88 160]
[90 158]
[91 157]
[92 156]
[105 143]
[106 142]
] def

init

% Start Annotations
6 45 0.0 1 colorpair
7 44 0.0 1 colorpair
8 43 0.0 1 colorpair
9 42 0.0 1 colorpair
10 41 0.0 1 colorpair
15 37 0.0 1 colorpair
16 36 0.16 1 colorpair
17 35 0.16 0.2 colorpair
19 31 0.0 1 colorpair
20 30 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
14 38 6 gmark
14 cmark
38 cmark
36 cmark
17 35 2 gmark
17 cmark
35 cmark
18 33 3 gmark
18 cmark
33 cmark
87 161 6 gmark
88 160 6 gmark
90 158 6 gmark
91 157 6 gmark
92 156 6 gmark
105 143 6 gmark
105 cmark
143 cmark
106 142 6 gmark

% End Annotations
showpage
end
%%EOF
