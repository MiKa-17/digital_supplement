%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 23:53:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__CCCUUGU__GGUGCUUAUUAAUAGUGUGUUUCACGCUAUUGAUAUUCACGUGGCUGACCCGGAACUCACUAUGCGAACUCCGGCUCAAGGACGGGAACAGGGAGGUGGCGGCUUUUCUGGCUUACGAAUCC_____UAAGUAGCAACCUCCGGGCGGG_GGCAACCCCG__CCUAUU_AGG_GGU___UGUCAGUCU_GACA_UGCCUGAAGCGCCUUUAUGAAGGGG_UU______\
) } def
/len { sequence length } bind def

/coor [
[-341.20184326 786.86859131]
[-355.06552124 787.96777344]
[-368.95492554 788.67102051]
[-382.85873413 788.97766113]
[-396.76562500 788.88751221]
[-410.66424561 788.40063477]
[-424.54333496 787.51745605]
[-438.39157104 786.23864746]
[-452.19766235 784.56524658]
[-465.95037842 782.49865723]
[-479.63854980 780.04058838]
[-493.25097656 777.19293213]
[-506.77664185 773.95812988]
[-520.20446777 770.33874512]
[-533.52362061 766.33770752]
[-546.72314453 761.95837402]
[-559.79235840 757.20422363]
[-572.72058105 752.07910156]
[-585.49737549 746.58728027]
[-598.11224365 740.73315430]
[-610.55493164 734.52148438]
[-622.81530762 727.95739746]
[-634.88348389 721.04620361]
[-646.74951172 713.79351807]
[-658.40380859 706.20520020]
[-669.83685303 698.28753662]
[-681.03936768 690.04693604]
[-692.00213623 681.49005127]
[-702.71636963 672.62390137]
[-713.17327881 663.45568848]
[-723.36431885 653.99285889]
[-733.28131104 644.24316406]
[-742.91601562 634.21447754]
[-752.26074219 623.91503906]
[-761.30773926 613.35314941]
[-770.04980469 602.53753662]
[-778.47967529 591.47686768]
[-786.59057617 580.18023682]
[-794.37585449 568.65673828]
[-801.82922363 556.91589355]
[-808.94451904 544.96716309]
[-815.71612549 532.82031250]
[-822.13836670 520.48522949]
[-828.20605469 507.97195435]
[-833.91424561 495.29064941]
[-839.25836182 482.45169067]
[-844.23400879 469.46545410]
[-848.83709717 456.34259033]
[-853.06396484 443.09375000]
[-856.91107178 429.72970581]
[-860.37536621 416.26138306]
[-863.45397949 402.69967651]
[-866.14440918 389.05569458]
[-868.44445801 375.34051514]
[-870.35235596 361.56527710]
[-871.86639404 347.74124146]
[-872.98547363 333.87966919]
[-873.70861816 319.99179077]
[-874.03521729 306.08895874]
[-873.96502686 292.18249512]
[-873.49816895 278.28366089]
[-872.63494873 264.40383911]
[-871.37603760 250.55432129]
[-869.72259521 236.74633789]
[-867.67584229 222.99116516]
[-865.23748779 209.30000305]
[-862.40954590 195.68397522]
[-859.19427490 182.15419006]
[-855.59429932 168.72164917]
[-851.61254883 155.39730835]
[-847.25231934 142.19197083]
[-842.51708984 129.11643982]
[-837.41076660 116.18132019]
[-831.93750000 103.39716339]
[-826.10168457 90.77436829]
[-819.90820312 78.32321167]
[-813.36193848 66.05384064]
[-806.46832275 53.97623062]
[-799.23297119 42.10022354]
[-791.66174316 30.43548012]
[-783.76074219 18.99149895]
[-775.53656006 7.77759981]
[-766.99572754 -3.19709134]
[-758.14532471 -13.92363930]
[-748.99243164 -24.39331055]
[-739.54461670 -34.59758377]
[-729.80957031 -44.52815247]
[-719.79510498 -54.17692947]
[-709.50946045 -63.53606033]
[-698.96099854 -72.59792328]
[-688.15832520 -81.35514832]
[-677.11016846 -89.80060577]
[-665.82562256 -97.92741394]
[-654.31378174 -105.72896576]
[-642.58410645 -113.19889832]
[-630.64605713 -120.33113861]
[-618.50939941 -127.11988068]
[-606.18395996 -133.55960083]
[-593.67987061 -139.64505005]
[-581.00726318 -145.37126160]
[-568.17645264 -150.73361206]
[-555.19787598 -155.72770691]
[-542.08215332 -160.34948730]
[-528.83984375 -164.59518433]
[-515.48187256 -168.46134949]
[-502.01901245 -171.94485474]
[-488.46224976 -175.04283142]
[-474.82263184 -177.75276184]
[-461.11126709 -180.07246399]
[-447.33932495 -182.00003052]
[-433.51800537 -183.53390503]
[-419.65853882 -184.67282104]
[-420.44357300 -199.65226746]
[-421.22860718 -214.63171387]
[-433.82540894 -223.89752197]
[-437.46890259 -239.10472107]
[-430.43875122 -253.07293701]
[-416.05441284 -259.20681763]
[-401.10769653 -254.61012268]
[-392.65600586 -241.45326233]
[-394.68994141 -225.94851685]
[-406.24917603 -215.41674805]
[-405.46414185 -200.43731689]
[-404.67910767 -185.45787048]
[-385.19342041 -185.79061890]
[-365.70996094 -185.34407043]
[-346.25982666 -184.11897278]
[-326.87417603 -182.11724854]
[-307.58395386 -179.34208679]
[-288.42001343 -175.79794312]
[-269.41302490 -171.49047852]
[-250.59336853 -166.42654419]
[-231.99113464 -160.61425781]
[-213.63606262 -154.06289673]
[-195.55749512 -146.78294373]
[-177.78437805 -138.78601074]
[-160.34509277 -130.08488464]
[-143.26754761 -120.69348907]
[-126.57904053 -110.62682343]
[-110.30625916 -99.90097809]
[-94.47524261 -88.53309631]
[-79.11128235 -76.54135132]
[-64.23896790 -63.94491196]
[-49.88207626 -50.76391602]
[-36.06356812 -37.01943588]
[-22.80553818 -22.73343849]
[-10.12919426 -7.92876768]
[1.94519126 7.37091208]
[13.39830780 23.14113998]
[24.21183777 39.35670471]
[34.36848450 55.99168396]
[43.85200500 73.01947784]
[52.64723206 90.41287231]
[60.74008942 108.14404297]
[74.59828186 102.40379333]
[88.45647430 96.66354370]
[102.23834229 90.74238586]
[107.97774506 76.26146698]
[121.96163177 70.26934052]
[135.73161316 75.83022308]
[142.28259277 69.49339294]
[149.65431213 69.74030304]
[159.02743530 56.28383636]
[175.34249878 57.94238281]
[181.81596375 73.00977325]
[171.78848267 85.98596954]
[155.57546997 83.52217102]
[141.83265686 89.53340149]
[136.75128174 103.48744965]
[122.94122314 109.86998749]
[108.33939362 104.44556427]
[105.41010284 108.77127075]
[100.27143860 111.15748596]
[94.19673157 110.52173615]
[80.33853912 116.26198578]
[66.48033905 122.00223541]
[71.41900635 135.00364685]
[75.98473358 148.14067078]
[80.17379761 161.40258789]
[83.98278809 174.77861023]
[87.40861511 188.25784302]
[90.44847870 201.82933044]
[93.09990692 215.48199463]
[95.36074829 229.20475769]
[97.22916412 242.98640442]
[98.70362091 256.81576538]
[99.78292847 270.68151855]
[100.46620941 284.57244873]
[100.75289917 298.47717285]
[100.64277649 312.38442993]
[100.13592529 326.28286743]
[99.23275757 340.16119385]
[97.93400574 354.00808716]
[96.24073792 367.81225586]
[94.15432739 381.56253052]
[91.67647552 395.24765015]
[88.80919647 408.85647583]
[85.55483246 422.37799072]
[81.91602325 435.80111694]
[77.89573669 449.11495972]
[73.49724579 462.30868530]
[68.72412872 475.37152100]
[63.58028412 488.29287720]
[58.06988525 501.06219482]
[52.19742966 513.66912842]
[45.96769333 526.10333252]
[39.38574982 538.35473633]
[32.45695496 550.41339111]
[25.18695450 562.26947021]
[17.58166695 573.91326904]
[9.64728260 585.33532715]
[1.39026237 596.52642822]
[-7.18267107 607.47729492]
[-16.06453705 618.17919922]
[-25.24810600 628.62329102]
[-34.72590256 638.80114746]
[-44.49020386 648.70440674]
[-54.53306580 658.32513428]
[-64.84630585 667.65533447]
[-75.42153931 676.68756104]
[-86.25014496 685.41430664]
[-97.32331085 693.82861328]
[-108.63201904 701.92358398]
[-120.16706848 709.69262695]
[-131.91906738 717.12933350]
[-143.87843323 724.22778320]
[-156.03544617 730.98217773]
[-168.38020325 737.38690186]
[-180.90266418 743.43682861]
[-193.59260559 749.12707520]
[-206.43972778 754.45294189]
[-219.43354797 759.41009521]
[-232.56350708 763.99450684]
[-245.81889343 768.20245361]
[-259.18893433 772.03051758]
[-272.66275024 775.47558594]
[-286.22933960 778.53479004]
[-299.87768555 781.20574951]
[-313.59667969 783.48620605]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[112 124]
[113 123]
[114 122]
[154 176]
[155 175]
[156 174]
[157 171]
[160 168]
[162 167]
] def

init

% Start Annotations
112 124 0.32 0.2 colorpair
113 123 0.0 0.6 colorpair
114 122 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
112 124 2 gmark
112 cmark
124 cmark
113 123 1 gmark
114 cmark
122 cmark
154 176 15 gmark
154 cmark
176 cmark
155 175 13 gmark
155 cmark
175 cmark
156 174 13 gmark
156 cmark
174 cmark
157 171 13 gmark
157 cmark
171 cmark
160 168 11 gmark
160 cmark
168 cmark
162 167 10 gmark
162 cmark
167 cmark

% End Annotations
showpage
end
%%EOF
