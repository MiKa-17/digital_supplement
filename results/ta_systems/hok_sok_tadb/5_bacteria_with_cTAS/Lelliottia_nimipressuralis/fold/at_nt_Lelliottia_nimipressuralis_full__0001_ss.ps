%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:16:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAUGAUACGAGUUUUGUUUAUUGUUUGUAUGACGAUAAUGAUCUUAACCUUGAUGACCCGCGAUACGCUGUGCGAGUUCCAUUUAAGAAACGAAAAACAAGAGGUGGCGGCAAAGUUGGCUUG_CGA__C___A_GU__G__G_A_GG__G_GG_____________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[128.35162354 400.24066162]
[120.10549927 387.71063232]
[112.56275940 374.74502563]
[105.74634552 361.38327026]
[99.67699432 347.66601562]
[94.37317657 333.63500977]
[89.85102081 319.33288574]
[86.12427521 304.80322266]
[83.20429993 290.09017944]
[81.09995270 275.23852539]
[79.81765747 260.29342651]
[79.36129761 245.30036926]
[79.73227692 230.30496216]
[80.92945099 215.35281372]
[82.94918823 200.48941040]
[85.78534698 185.75997925]
[89.42929077 171.20932007]
[93.86993408 156.88169861]
[99.09392548 142.82032776]
[87.50307465 152.34147644]
[75.91222382 161.86262512]
[64.32137299 171.38377380]
[52.73052216 180.90490723]
[41.13967133 190.42605591]
[29.54882240 199.94720459]
[17.95797157 209.46833801]
[19.01287651 224.94952393]
[10.73820496 238.07618713]
[-3.68426204 243.80087280]
[-18.70879173 239.92233276]
[-28.55814552 227.93193054]
[-29.44504738 212.44021606]
[-21.02846336 199.40408325]
[-6.54474306 193.83618164]
[8.43682766 197.87748718]
[20.02767754 188.35635376]
[31.61852837 178.83520508]
[43.20937729 169.31405640]
[54.80022812 159.79292297]
[66.39108276 150.27177429]
[77.98193359 140.75062561]
[89.57278442 131.22947693]
[88.81401825 123.76796722]
[76.64910126 132.54377747]
[62.96653366 126.39663696]
[61.44873428 111.47362518]
[73.61348724 102.69759369]
[87.29649353 108.84492493]
[86.53772736 101.38340759]
[73.26755524 94.39038086]
[59.99737549 87.39735413]
[46.72719955 80.40432739]
[31.79890442 84.85222626]
[18.44067574 77.57126617]
[14.29228497 63.31200790]
[1.02210808 56.31898117]
[-12.24806881 49.32595825]
[-26.12624550 56.01194382]
[-41.10515976 53.27598572]
[-51.47816086 42.37347031]
[-53.41904831 27.62996483]
[-66.68922424 20.63694000]
[-79.95940399 13.64391518]
[-93.22958374 6.65089035]
[-106.49975586 -0.34213445]
[-122.31561279 0.06922557]
[-129.96801758 -12.70927238]
[-143.23818970 -19.70229721]
[-156.50837708 -26.69532204]
[-173.33972168 -28.73048592]
[-176.04347229 -45.46745300]
[-160.70907593 -52.69879532]
[-149.51535034 -39.96549988]
[-136.24516296 -32.97247314]
[-122.97499084 -25.97945023]
[-108.10830688 -26.89099884]
[-99.50673676 -13.61231136]
[-86.23655701 -6.61928701]
[-72.96637726 0.37373772]
[-59.69620132 7.36676264]
[-46.42602539 14.35978699]
[-33.16723633 7.62609863]
[-18.31001854 10.01922703]
[-7.58542681 20.82832146]
[-5.25504446 36.05578232]
[8.01513290 43.04880524]
[21.28531075 50.04182816]
[35.39258194 45.40281296]
[48.95004654 52.30569458]
[53.72022247 67.13415527]
[66.99040222 74.12717438]
[80.26058197 81.12020111]
[93.53075409 88.11322784]
[100.35709381 85.00659943]
[92.06404877 72.50757599]
[83.77100372 60.00856018]
[70.97064972 52.18865204]
[66.53253174 37.86025238]
[72.67151642 24.17402267]
[86.32390594 17.96014977]
[100.67640686 22.31970406]
[108.56632233 35.07702255]
[106.05519104 49.86713791]
[110.03247833 64.33023834]
[114.00975800 78.79333496]
[120.83609772 75.68670654]
[124.27967834 61.08732986]
[114.80906677 46.37672043]
[118.83082581 29.69703674]
[133.38058472 21.25834274]
[136.61244202 6.61064577]
[139.84431458 -8.03705120]
[130.16949463 -20.32248497]
[130.70675659 -35.95083618]
[141.20239258 -47.54287720]
[156.70071411 -49.62519836]
[169.88388062 -41.21459198]
[174.52719116 -26.28228951]
[168.43823242 -11.87886715]
[154.49201965 -4.80518150]
[151.26014709 9.84251499]
[148.02827454 24.49021149]
[156.41250610 34.27116013]
[157.65228271 47.28945541]
[151.07217407 58.81515884]
[138.87905884 64.53091431]
[135.43547058 79.13028717]
[144.88288879 67.47926331]
[154.95829773 56.36684036]
[165.63107300 45.82682419]
[176.86872864 35.89128113]
[188.63708496 26.59043312]
[200.90034485 17.95257759]
[213.62120056 10.00399208]
[226.76094055 2.76885629]
[240.27960205 -3.73081899]
[254.13604736 -9.47526073]
[268.28814697 -14.44699478]
[282.69284058 -18.63089371]
[297.30630493 -22.01423264]
[312.08404541 -24.58671761]
[326.98117065 -26.34052086]
[341.95233154 -27.27031136]
[356.95196533 -27.37325668]
[371.93447876 -26.64904404]
[386.85427856 -25.09987831]
[401.66595459 -22.73047256]
[416.32446289 -19.54803276]
[430.78521729 -15.56224155]
[445.00424194 -10.78522396]
[458.93823242 -5.23151302]
[472.54483032 1.08199668]
[485.78265381 8.13609886]
[498.61138916 15.90933228]
[510.99206543 24.37805176]
[522.88696289 33.51649475]
[534.25994873 43.29685593]
[545.07635498 53.68938828]
[555.30334473 64.66246796]
[564.90979004 76.18272400]
[573.86645508 88.21510315]
[582.14611816 100.72300720]
[589.72351074 113.66837311]
[596.57568359 127.01183319]
[602.68176270 140.71278381]
[608.02313232 154.72955322]
[612.58355713 169.01950073]
[616.34918213 183.53913879]
[619.30853271 198.24432373]
[621.45263672 213.09028625]
[622.77496338 228.03189087]
[623.27142334 243.02366638]
[622.94061279 258.02001953]
[621.78344727 272.97531128]
[619.80352783 287.84408569]
[617.00683594 302.58105469]
[613.40185547 317.14141846]
[608.99957275 331.48086548]
[603.81341553 345.55578613]
[597.85913086 359.32339478]
[591.15478516 372.74172974]
[583.72082520 385.77001953]
[575.57989502 398.36865234]
[566.75671387 410.49923706]
[557.27813721 422.12493896]
[547.17303467 433.21035767]
[536.47210693 443.72174072]
[525.20788574 453.62716675]
[513.41461182 462.89648438]
[501.12829590 471.50146484]
[488.38623047 479.41598511]
[475.22714233 486.61590576]
[461.69113159 493.07934570]
[447.81936646 498.78668213]
[433.65399170 503.72052002]
[419.23815918 507.86584473]
[404.61569214 511.21002197]
[389.83111572 513.74291992]
[374.92935181 515.45684814]
[359.95574951 516.34655762]
[344.95587158 516.40936279]
[329.97537231 515.64501953]
[315.05978394 514.05590820]
[300.25448608 511.64688110]
[285.60455322 508.42520142]
[271.15451050 504.40069580]
[256.94836426 499.58563232]
[243.02926636 493.99462891]
[229.43962097 487.64471436]
[216.22074890 480.55520630]
[203.41285706 472.74765015]
[191.05490112 464.24581909]
[179.18450928 455.07556152]
[167.83775330 445.26477051]
[157.04917908 434.84332275]
[146.85160828 423.84289551]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 42]
[20 41]
[21 40]
[22 39]
[23 38]
[24 37]
[25 36]
[26 35]
[49 93]
[50 92]
[51 91]
[52 90]
[55 87]
[56 86]
[57 85]
[61 81]
[62 80]
[63 79]
[64 78]
[65 77]
[67 75]
[68 74]
[69 73]
[106 127]
[107 126]
[110 122]
[111 121]
[112 120]
] def

init

% Start Annotations
19 42 0.0 1 colorpair
20 41 0.16 1 colorpair
21 40 0.0 0.6 colorpair
22 39 0.16 0.6 colorpair
23 38 0.0 0.6 colorpair
24 37 0.16 1 colorpair
25 36 0.0 0.6 colorpair
26 35 0.32 1 colorpair
49 93 0.0 1 colorpair
50 92 0.16 0.6 colorpair
51 91 0.16 0.6 colorpair
52 90 0.16 1 colorpair
55 87 0.0 0.6 colorpair
56 86 0.32 1 colorpair
57 85 0.16 1 colorpair
61 81 0.16 1 colorpair
62 80 0.16 0.6 colorpair
63 79 0.16 1 colorpair
64 78 0.16 0.6 colorpair
65 77 0.16 0.6 colorpair
67 75 0.0 0.6 colorpair
68 74 0.16 0.6 colorpair
69 73 0.16 1 colorpair
106 127 0.16 1 colorpair
107 126 0.0 1 colorpair
110 122 0.32 1 colorpair
111 121 0.0 0.6 colorpair
112 120 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
20 cmark
41 cmark
21 40 1 gmark
22 39 1 gmark
39 cmark
23 38 1 gmark
24 cmark
25 36 1 gmark
26 cmark
35 cmark
50 92 1 gmark
50 cmark
92 cmark
51 91 1 gmark
91 cmark
52 cmark
90 cmark
55 87 1 gmark
56 cmark
86 cmark
57 cmark
81 cmark
62 80 1 gmark
62 cmark
80 cmark
63 cmark
64 78 1 gmark
64 cmark
65 77 1 gmark
77 cmark
67 75 1 gmark
68 74 1 gmark
74 cmark
69 cmark
127 cmark
110 cmark
122 cmark
111 121 1 gmark

% End Annotations
showpage
end
%%EOF
