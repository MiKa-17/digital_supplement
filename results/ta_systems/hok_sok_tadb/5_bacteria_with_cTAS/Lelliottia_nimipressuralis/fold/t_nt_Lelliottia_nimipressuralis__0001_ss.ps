%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:16:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAGAGGCUACUCUCAACCUGUUGGGAGUUGAGGGAGUAGCCUCGGGUUAAUGAAAAUAUCCCGGGGCUUUCUACUUUCUGUCCCUCAACAAUGCUCAAGACAGAAAGUCUUAAGCACCCGUCGCA\
) } def
/len { sequence length } bind def

/coor [
[96.47518158 160.09268188]
[86.45594788 148.92956543]
[83.23236847 134.28004456]
[87.64014435 119.94241333]
[73.72930145 125.55386353]
[59.81845474 131.16531372]
[45.90761185 136.77676392]
[31.99676704 142.38822937]
[18.08592224 147.99967957]
[4.17507744 153.61112976]
[-9.73576736 159.22257996]
[-23.64661217 164.83403015]
[-37.55745697 170.44548035]
[-51.32524872 176.39930725]
[-64.94156647 182.69183350]
[-78.55788422 188.98435974]
[-92.17419434 195.27688599]
[-105.79051208 201.56941223]
[-119.32796478 208.02987671]
[-132.78446960 214.65727234]
[-141.44766235 228.58139038]
[-157.82675171 227.77053833]
[-165.07234192 213.05885315]
[-155.73077393 199.58045959]
[-139.41186523 201.20075989]
[-125.95536041 194.57336426]
[-121.29482269 188.73294067]
[-112.08304596 187.95310974]
[-98.46672821 181.66056824]
[-84.85041046 175.36804199]
[-71.23409271 169.07551575]
[-57.61777878 162.78298950]
[-55.13050079 158.59107971]
[-49.93214417 155.97550964]
[-43.16891098 156.53463745]
[-29.25806427 150.92318726]
[-15.34722042 145.31173706]
[-1.43637550 139.70028687]
[12.47446918 134.08883667]
[26.38531303 128.47737122]
[40.29615784 122.86592865]
[54.20700455 117.25447083]
[68.11784363 111.64302063]
[82.02869415 106.03157043]
[87.12023163 91.92212677]
[79.99820709 78.72074127]
[72.87617493 65.51934814]
[65.75414276 52.31795883]
[50.39954376 51.95497894]
[37.29191589 43.94962311]
[29.95714760 30.45530128]
[30.36825752 15.10191154]
[38.41465759 2.01944160]
[51.93190765 -5.27299070]
[67.28392792 -4.81375742]
[80.34111786 3.27361012]
[87.59114075 16.81365013]
[87.08379364 32.16416168]
[78.95553589 45.19593048]
[86.07756042 58.39731979]
[93.19959259 71.59870911]
[100.32162476 84.80010223]
[113.77812958 91.42749786]
[128.58464050 89.02602386]
[143.39115906 86.62454987]
[158.19767761 84.22307587]
[172.97335815 81.63865662]
[187.71594238 78.87168884]
[202.45854187 76.10472107]
[217.20112610 73.33774567]
[223.92002869 59.47548294]
[237.35610962 52.31130600]
[252.25808716 54.40770340]
[262.94027710 64.75317383]
[277.68286133 61.98620224]
[292.42544556 59.21923447]
[307.16806030 56.45226288]
[321.91064453 53.68529510]
[336.65322876 50.91832352]
[351.39581299 48.15135574]
[366.13839722 45.38438416]
[380.88098145 42.61741638]
[395.62356567 39.85044479]
[398.06701660 24.89031792]
[405.48245239 11.66962147]
[416.97448730 1.78481770]
[431.15533447 -3.57045436]
[446.31265259 -3.74951982]
[460.61605835 1.26924467]
[472.33840942 10.87979889]
[480.06411743 23.92162132]
[482.86029053 38.81984711]
[480.38928223 53.77544785]
[472.94949341 66.98246002]
[461.43927002 76.84606171]
[447.24856567 82.17519379]
[432.09094238 82.32632446]
[417.79681396 77.28121185]
[406.09219360 67.64907074]
[398.39053345 54.59303284]
[383.64794922 57.36000443]
[368.90536499 60.12697220]
[354.16278076 62.89394379]
[339.42019653 65.66091156]
[324.67761230 68.42787933]
[309.93502808 71.19484711]
[295.19241333 73.96182251]
[280.44982910 76.72879028]
[265.70724487 79.49575806]
[259.50326538 93.01051331]
[246.37557983 100.36767578]
[231.25617981 98.56295013]
[219.96809387 88.08033752]
[205.22550964 90.84730530]
[190.48292542 93.61427307]
[175.74032593 96.38124084]
[169.68159485 100.75421906]
[160.59915161 99.02959442]
[145.79263306 101.43106842]
[130.98611450 103.83254242]
[116.17960358 106.23401642]
[130.12640381 111.75549316]
[139.54638672 123.42871094]
[141.99723816 138.22712708]
[136.84350586 152.31398010]
[125.42140961 162.03692627]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 44]
[5 43]
[6 42]
[7 41]
[8 40]
[9 39]
[10 38]
[11 37]
[12 36]
[13 35]
[14 32]
[15 31]
[16 30]
[17 29]
[18 28]
[19 26]
[20 25]
[45 62]
[46 61]
[47 60]
[48 59]
[63 121]
[64 120]
[65 119]
[66 118]
[67 116]
[68 115]
[69 114]
[70 113]
[74 109]
[75 108]
[76 107]
[77 106]
[78 105]
[79 104]
[80 103]
[81 102]
[82 101]
[83 100]
] def

init

% Start Annotations
4 44 0.0 1 colorpair
5 43 0.0 1 colorpair
6 42 0.0 1 colorpair
7 41 0.0 1 colorpair
8 40 0.0 1 colorpair
9 39 0.0 1 colorpair
10 38 0.0 1 colorpair
11 37 0.0 1 colorpair
12 36 0.0 1 colorpair
13 35 0.0 1 colorpair
14 32 0.0 1 colorpair
15 31 0.0 1 colorpair
16 30 0.0 1 colorpair
17 29 0.0 1 colorpair
18 28 0.0 1 colorpair
19 26 0.0 1 colorpair
20 25 0.0 1 colorpair
45 62 0.0 1 colorpair
46 61 0.0 1 colorpair
47 60 0.0 1 colorpair
48 59 0.0 1 colorpair
63 121 0.0 1 colorpair
64 120 0.0 1 colorpair
65 119 0.0 1 colorpair
66 118 0.0 1 colorpair
67 116 0.0 1 colorpair
68 115 0.0 1 colorpair
69 114 0.0 1 colorpair
70 113 0.0 1 colorpair
74 109 0.0 1 colorpair
75 108 0.0 1 colorpair
76 107 0.0 1 colorpair
77 106 0.0 1 colorpair
78 105 0.0 1 colorpair
79 104 0.0 1 colorpair
80 103 0.0 1 colorpair
81 102 0.0 1 colorpair
82 101 0.0 1 colorpair
83 100 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
