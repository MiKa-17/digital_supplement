%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:16:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___CAAUUAAAAACUGC_CUUAGGCAUUAUGUUUAUUGCUUGCC____UGACGAUAGUGAUCUUUACCUUGAUGACUCGCGAUAAGCUCUGCGAGUUUCCAAUAAAAAAUGAACAUCAGGAGGUGGCGGCUAAAUUAGCCUGCAACCCAGGC___\
) } def
/len { sequence length } bind def

/coor [
[93.76195526 211.23661804]
[84.28997040 210.29820251]
[74.93265533 208.55471802]
[65.75830841 206.01889038]
[56.83389282 202.70922852]
[48.22454453 198.64988708]
[39.99310684 193.87049866]
[32.19966125 188.40596008]
[24.90109062 182.29612732]
[18.15066910 175.58561707]
[11.99766922 168.32341003]
[6.48699903 160.56251526]
[1.65888250 152.35955811]
[-2.45144010 143.77442932]
[-5.81396770 134.86979675]
[-8.40415668 125.71064758]
[-10.20310116 116.36383820]
[-11.19767094 106.89758301]
[-11.38060665 97.38098907]
[-10.75057220 87.88350677]
[-9.31216812 78.47446442]
[-23.80105591 74.59217834]
[-38.28994370 70.70989227]
[-52.77883148 66.82760620]
[-67.26771545 62.94532013]
[-81.75660706 59.06303406]
[-96.71180725 68.08530426]
[-113.24736786 63.61587906]
[-121.29752350 48.87940598]
[-135.86164856 45.28967285]
[-150.42578125 41.69993591]
[-165.67660522 45.90980911]
[-176.18238831 35.35150146]
[-190.74650574 31.76176834]
[-205.31063843 28.17203331]
[-219.87477112 24.58229828]
[-234.43888855 20.99256325]
[-249.00302124 17.40282822]
[-263.56713867 13.81309319]
[-278.13128662 10.22335815]
[-289.26455688 20.90294838]
[-304.40866089 23.84565926]
[-318.73117065 18.11248016]
[-327.66180420 5.53285074]
[-328.35086060 -9.87911701]
[-320.57843018 -23.20552063]
[-306.82470703 -30.19395065]
[-291.47842407 -28.61442757]
[-279.43652344 -18.97096825]
[-274.54153442 -4.34076881]
[-259.97741699 -0.75103378]
[-245.41328430 2.83870125]
[-230.84916687 6.42843628]
[-216.28503418 10.01817131]
[-201.72090149 13.60790634]
[-187.15678406 17.19764137]
[-172.59265137 20.78737640]
[-158.38356018 16.32074356]
[-146.83604431 27.13580894]
[-132.27191162 30.72554398]
[-117.70779419 34.31527710]
[-107.69118500 26.15713310]
[-94.60830688 25.26222992]
[-83.24103546 32.18308640]
[-77.87432098 44.57415009]
[-63.38543320 48.45643234]
[-48.89654541 52.33871841]
[-34.40765762 56.22100449]
[-19.91876984 60.10329056]
[-5.42988205 63.98557663]
[9.61268044 34.86451721]
[32.47835922 11.38100147]
[61.18811035 -4.43244648]
[93.25707245 -11.20715618]
[125.90963745 -8.35676956]
[130.37217712 -22.67758179]
[134.83473206 -36.99839401]
[139.29727173 -51.31921005]
[143.75981140 -65.64002228]
[148.22236633 -79.96083069]
[152.68490601 -94.28164673]
[157.14746094 -108.60246277]
[149.58183289 -122.47822571]
[154.12387085 -137.61578369]
[168.07885742 -145.03427124]
[183.16754150 -140.33244324]
[190.43807983 -126.29981995]
[185.57698059 -111.26168823]
[171.46826172 -104.13991547]
[167.00572205 -89.81909943]
[162.54318237 -75.49829102]
[158.08062744 -61.17747498]
[153.61808777 -46.85666275]
[149.15553284 -32.53585052]
[144.69299316 -18.21503639]
[140.23045349 -3.89422345]
[147.47157288 -0.79160678]
[154.47535706 2.81494927]
[161.20677185 6.90741253]
[167.63215637 11.46532154]
[173.71940613 16.46588707]
[179.43806458 21.88410759]
[184.75955200 27.69289207]
[189.65725708 33.86320114]
[194.10668945 40.36418152]
[198.08560181 47.16332626]
[201.57411194 54.22664642]
[204.55476379 61.51882553]
[207.01266479 69.00340271]
[208.93551636 76.64295959]
[210.31372070 84.39929199]
[211.14036560 92.23363495]
[211.41134644 100.10679626]
[211.12527466 107.97943115]
[210.28359985 115.81217194]
[208.89053345 123.56584930]
[206.95303345 131.20170593]
[204.48078918 138.68154907]
[201.48616028 145.96800232]
[197.98411560 153.02462769]
[193.99217224 159.81613159]
[189.53028870 166.30856323]
[200.95597839 176.02729797]
[212.38165283 185.74603271]
[227.90653992 188.79377747]
[232.58793640 202.93356323]
[244.01362610 212.65229797]
[255.53659058 222.25549316]
[267.15567017 231.74217224]
[278.77474976 241.22885132]
[290.39379883 250.71553040]
[306.43591309 250.53993225]
[316.46319580 263.06323242]
[312.78363037 278.67861938]
[298.21981812 285.40728760]
[283.94390869 278.08761597]
[280.90713501 262.33459473]
[269.28805542 252.84793091]
[257.66897583 243.36125183]
[246.04991150 233.87457275]
[238.83831787 232.06996155]
[234.29489136 224.07798767]
[222.86920166 214.35925293]
[208.16157532 212.00665283]
[202.66293335 197.17170715]
[191.23724365 187.45298767]
[179.81155396 177.73425293]
[172.88517761 184.26298523]
[165.42680359 190.17668152]
[157.49087524 195.43215942]
[149.13531494 199.99108887]
[140.42112732 203.82019043]
[131.41189575 206.89149475]
[122.17340088 209.18260193]
[112.77304840 210.67677307]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 70]
[22 69]
[23 68]
[24 67]
[25 66]
[26 65]
[29 61]
[30 60]
[31 59]
[33 57]
[34 56]
[35 55]
[36 54]
[37 53]
[38 52]
[39 51]
[40 50]
[75 96]
[76 95]
[77 94]
[78 93]
[79 92]
[80 91]
[81 90]
[82 89]
[122 147]
[123 146]
[124 145]
[126 143]
[127 142]
[128 140]
[129 139]
[130 138]
[131 137]
] def

init

% Start Annotations
21 70 0.16 0.2 colorpair
22 69 0.16 0.6 colorpair
23 68 0.0 0.6 colorpair
24 67 0.0 0.2 colorpair
25 66 0.0 0.2 colorpair
26 65 0.32 1 colorpair
29 61 0.16 1 colorpair
30 60 0.0 0.6 colorpair
31 59 0.16 0.6 colorpair
33 57 0.16 0.6 colorpair
34 56 0.0 1 colorpair
35 55 0.16 1 colorpair
36 54 0.0 0.6 colorpair
37 53 0.16 1 colorpair
38 52 0.0 0.6 colorpair
39 51 0.0 0.2 colorpair
40 50 0.0 1 colorpair
75 96 0.16 0.6 colorpair
76 95 0.16 1 colorpair
77 94 0.0 0.2 colorpair
78 93 0.0 0.6 colorpair
79 92 0.16 1 colorpair
80 91 0.16 0.6 colorpair
81 90 0.16 1 colorpair
82 89 0.0 0.2 colorpair
122 147 0.16 0.6 colorpair
123 146 0.0 0.6 colorpair
124 145 0.16 1 colorpair
126 143 0.16 1 colorpair
127 142 0.0 0.6 colorpair
128 140 0.32 1 colorpair
129 139 0.0 0.6 colorpair
130 138 0.0 1 colorpair
131 137 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
21 70 2 gmark
21 cmark
70 cmark
22 69 1 gmark
22 cmark
69 cmark
23 68 1 gmark
24 67 2 gmark
25 66 2 gmark
26 cmark
65 cmark
29 cmark
30 60 1 gmark
31 59 1 gmark
31 cmark
59 cmark
33 57 1 gmark
57 cmark
35 cmark
36 54 1 gmark
53 cmark
38 52 1 gmark
39 51 2 gmark
75 96 1 gmark
75 cmark
76 cmark
95 cmark
77 94 2 gmark
78 93 1 gmark
92 cmark
80 91 1 gmark
80 cmark
81 cmark
82 89 2 gmark
122 147 1 gmark
122 cmark
147 cmark
123 146 1 gmark
145 cmark
126 cmark
143 cmark
127 142 1 gmark
128 cmark
140 cmark
129 139 1 gmark
131 137 2 gmark

% End Annotations
showpage
end
%%EOF
