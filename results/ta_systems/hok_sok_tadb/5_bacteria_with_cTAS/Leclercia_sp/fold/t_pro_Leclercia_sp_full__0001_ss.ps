%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:15:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
____________________ACUGCCGAAACAAACCGUUGUUUUGUGCGUAUUGAUAGUAUGUCUUACGCUGCUGAUAUUCACCUGGCUGACGCGCAAUUCGCUCUGCGAACUGCGGCUGAAAGACGGAAAGCGGGAAGUGGCGGCUGUGAUAGACUACGAAUCCGGUAA_\
) } def
/len { sequence length } bind def

/coor [
[-1.45079279 507.64099121]
[-14.86946106 500.93731689]
[-26.98741531 492.09677124]
[-37.46761322 481.36526489]
[-46.01855850 469.04125977]
[-52.40242767 455.46749878]
[-56.44165802 441.02160645]
[-58.02390671 426.10528564]
[-57.10515976 411.13345337]
[-53.71097946 396.52249146]
[-47.93576431 382.67883301]
[-39.94014740 369.98751831]
[-29.94651031 358.80148315]
[-18.23281288 349.43188477]
[-5.12485361 342.13931274]
[9.01278782 337.12661743]
[23.78689575 334.53323364]
[38.78654861 334.43124390]
[53.59455490 336.82351685]
[67.79904938 341.64349365]
[81.00495911 348.75714111]
[92.84498596 357.96658325]
[102.98980713 369.01568604]
[111.15406036 381.59115601]
[110.60623169 366.60116577]
[110.05839539 351.61117554]
[109.51056671 336.62115479]
[108.96273804 321.63116455]
[94.94068909 316.50170898]
[83.92092896 306.36709595]
[77.60376740 292.74877930]
[76.98010254 277.70889282]
[82.17607880 263.53796387]
[92.42915344 252.40612793]
[106.19981384 246.03082275]
[105.65198517 231.04083252]
[105.10415649 216.05084229]
[104.00922394 201.09085083]
[102.36865997 186.18083191]
[100.72808838 171.27082825]
[99.08752441 156.36080933]
[97.44695282 141.45079041]
[95.80638885 126.54077911]
[94.16581726 111.63076019]
[61.50152588 98.47267914]
[50.70297241 88.06156158]
[39.90441895 77.65045166]
[24.59936905 73.64221954]
[20.80722237 59.23843765]
[10.00866890 48.82732391]
[-0.78988278 38.41621017]
[-11.58843517 28.00509834]
[-22.38698769 17.59398460]
[-33.18553925 7.18287230]
[-48.49059296 3.17463827]
[-52.28273773 -11.22914219]
[-63.08129120 -21.64025497]
[-73.87984467 -32.05136871]
[-84.67839813 -42.46248245]
[-99.66676331 -38.80839539]
[-114.24386597 -43.85930634]
[-123.75819397 -56.00348282]
[-125.17377472 -71.36576080]
[-118.03888702 -85.04409790]
[-104.63025665 -92.67378998]
[-89.22652435 -91.82022095]
[-76.74296570 -82.75576019]
[-71.16304016 -68.37285614]
[-74.26728058 -53.26103210]
[-63.46873093 -42.84991837]
[-52.67017746 -32.43880844]
[-41.87162399 -22.02769470]
[-27.33895683 -18.76413345]
[-22.77442551 -3.61567974]
[-11.97587395 6.79543304]
[-1.17732191 17.20654678]
[9.62123013 27.61765862]
[20.41978264 38.02877045]
[31.21833420 48.43988419]
[45.75100327 51.70344543]
[50.31553268 66.85189819]
[61.11408615 77.26301575]
[71.91263580 87.67412567]
[79.40138245 87.26336670]
[73.99195099 73.27272797]
[85.62635040 63.80484772]
[98.22595978 71.94424438]
[94.37886810 86.44184875]
[101.86761475 86.03108978]
[111.46270752 74.50138092]
[121.05780029 62.97167587]
[119.80529785 47.44528198]
[129.70033264 35.88920212]
[144.51010132 34.79081345]
[154.10519409 23.26110649]
[163.70028687 11.73139954]
[173.29537964 0.20169210]
[176.17572021 -15.35511303]
[190.26426697 -20.18855286]
[199.85935974 -31.71825981]
[209.45446777 -43.24796677]
[219.04956055 -54.77767181]
[228.64465332 -66.30738068]
[234.12901306 -82.34976196]
[251.06268311 -81.52070618]
[254.95372009 -65.01931000]
[240.17436218 -56.71228409]
[230.57926941 -45.18257904]
[220.98417664 -33.65287018]
[211.38906860 -22.12316322]
[201.79397583 -10.59345627]
[199.59994507 4.13866663]
[184.82508850 9.79678726]
[175.22999573 21.32649422]
[165.63490295 32.85620117]
[156.03979492 44.38591003]
[157.64968872 59.14883041]
[148.08312988 70.97827911]
[132.58750916 72.56677246]
[122.99241638 84.09648132]
[113.39731598 95.62619019]
[109.07582855 109.99019623]
[110.71640015 124.90020752]
[112.35697174 139.81022644]
[113.99753571 154.72024536]
[115.63810730 169.63024902]
[117.27867126 184.54026794]
[118.91924286 199.45028687]
[121.66898346 202.91864014]
[123.01322937 206.70349121]
[123.02752686 210.31687927]
[121.94034576 213.34718323]
[120.09414673 215.50300598]
[120.64197540 230.49299622]
[121.18981171 245.48298645]
[135.38909912 250.83609009]
[146.42739868 261.18978882]
[152.64392090 274.94366455]
[153.11976624 289.98895264]
[147.81353760 304.03204346]
[137.56294250 314.94403076]
[123.95272827 321.08334351]
[124.50055695 336.07333374]
[125.04839325 351.06332397]
[125.59622192 366.05331421]
[126.14405060 381.04330444]
[131.37434387 395.10189819]
[140.75726318 406.80493164]
[150.14018250 418.50796509]
[159.52308655 430.21099854]
[175.25801086 431.69018555]
[185.27383423 443.91549683]
[183.62837219 459.63391113]
[171.29783630 469.51992798]
[155.59771729 467.70837402]
[145.84262085 455.27401733]
[147.82006836 439.59390259]
[138.43714905 427.89086914]
[129.05422974 416.18786621]
[119.67131805 404.48483276]
[121.71206665 419.34536743]
[121.25471497 434.33837891]
[118.31198883 449.04690552]
[112.96574402 463.06179810]
[105.36466217 475.99328613]
[95.72016144 487.48171997]
[84.30049133 497.20751953]
[71.42327881 504.90017700]
[57.44667053 510.34576416]
[42.75941467 513.39282227]
[27.77001190 513.95660400]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 146]
[25 145]
[26 144]
[27 143]
[28 142]
[35 135]
[36 134]
[37 133]
[38 128]
[39 127]
[40 126]
[41 125]
[42 124]
[43 123]
[44 122]
[45 83]
[46 82]
[47 81]
[49 79]
[50 78]
[51 77]
[52 76]
[53 75]
[54 74]
[56 72]
[57 71]
[58 70]
[59 69]
[89 121]
[90 120]
[91 119]
[94 116]
[95 115]
[96 114]
[97 113]
[99 111]
[100 110]
[101 109]
[102 108]
[103 107]
[147 160]
[148 159]
[149 158]
[150 157]
] def

init

% Start Annotations
24 146 0.0 1 colorpair
25 145 0.0 1 colorpair
26 144 0.0 0.2 colorpair
27 143 0.0 0.2 colorpair
28 142 0.16 0.2 colorpair
35 135 0.0 0.2 colorpair
36 134 0.0 0.2 colorpair
37 133 0.0 0.2 colorpair
38 128 0.16 1 colorpair
39 127 0.0 0.2 colorpair
40 126 0.16 1 colorpair
41 125 0.0 1 colorpair
42 124 0.32 1 colorpair
43 123 0.16 1 colorpair
44 122 0.16 0.2 colorpair
45 83 0.0 0.2 colorpair
46 82 0.0 0.2 colorpair
47 81 0.0 1 colorpair
49 79 0.0 0.2 colorpair
50 78 0.16 0.2 colorpair
51 77 0.32 1 colorpair
52 76 0.16 1 colorpair
53 75 0.0 1 colorpair
54 74 0.0 1 colorpair
56 72 0.16 1 colorpair
57 71 0.16 1 colorpair
58 70 0.16 1 colorpair
59 69 0.16 1 colorpair
89 121 0.0 1 colorpair
90 120 0.16 0.2 colorpair
91 119 0.16 1 colorpair
94 116 0.0 1 colorpair
95 115 0.0 1 colorpair
96 114 0.16 1 colorpair
97 113 0.16 1 colorpair
99 111 0.16 0.2 colorpair
100 110 0.0 1 colorpair
101 109 0.0 1 colorpair
102 108 0.16 1 colorpair
103 107 0.0 1 colorpair
147 160 0.16 0.2 colorpair
148 159 0.0 1 colorpair
149 158 0.0 1 colorpair
150 157 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
26 144 2 gmark
27 143 2 gmark
28 142 2 gmark
28 cmark
142 cmark
35 135 2 gmark
36 134 2 gmark
37 133 2 gmark
128 cmark
39 127 2 gmark
40 cmark
126 cmark
42 cmark
124 cmark
123 cmark
44 122 2 gmark
122 cmark
45 83 2 gmark
46 82 2 gmark
49 79 2 gmark
50 78 2 gmark
78 cmark
51 cmark
77 cmark
52 cmark
76 cmark
72 cmark
57 cmark
58 cmark
70 cmark
69 cmark
90 120 2 gmark
90 cmark
120 cmark
91 cmark
96 cmark
114 cmark
97 cmark
99 111 2 gmark
99 cmark
111 cmark
108 cmark
147 160 2 gmark
147 cmark

% End Annotations
showpage
end
%%EOF
