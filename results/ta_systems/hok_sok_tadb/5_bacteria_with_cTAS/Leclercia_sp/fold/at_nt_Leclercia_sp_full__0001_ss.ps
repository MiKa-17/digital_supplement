%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:15:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGUUGUCUUGUGCGUGUUGAUAGUAUGUCUCACGCUGCUGAUAUUCACCUGGCUGACCCGCAAAUCGCUCUGCGAACUGCGGCUGAAAGACGGAAAGCGGGAGGUGGCGGCCGUGAUAGCCUACGAAUCCGGUAAGUAGC____UGAAAGGCGGGGGAAACCCCCCCC_______GCUUCUGAUGUCGUUCAGCAAG_CCACAAGCACC_UUUAUAAAAGGGUUGCU__\
) } def
/len { sequence length } bind def

/coor [
[35.22720337 391.03948975]
[43.21815109 378.34552002]
[45.70262527 363.55270386]
[48.18709946 348.75988770]
[40.73715591 347.89483643]
[31.46476936 359.68560791]
[22.19238472 371.47640991]
[12.92000008 383.26721191]
[18.50925064 397.50476074]
[16.23661613 412.52911377]
[6.81145239 424.32034302]
[-7.15676689 429.77423096]
[-21.88025475 427.51934814]
[-31.15263939 439.31011963]
[-40.42502213 451.10092163]
[-49.69740677 462.89172363]
[-58.96979141 474.68252563]
[-58.21490479 487.54934692]
[-66.16896057 497.17700195]
[-78.15292358 498.75738525]
[-87.58480072 510.42098999]
[-97.01667786 522.08459473]
[-106.44855499 533.74822998]
[-111.70659637 549.86621094]
[-128.65025330 549.27551270]
[-132.77314758 532.83056641]
[-118.11215973 524.31634521]
[-108.68028259 512.65270996]
[-99.24840546 500.98913574]
[-89.81652832 489.32553101]
[-88.01390076 471.86334229]
[-70.76058960 465.41012573]
[-61.48820496 453.61932373]
[-52.21582031 441.82855225]
[-42.94343567 430.03775024]
[-33.67105103 418.24694824]
[-39.33356857 404.47009277]
[-37.32655716 389.60983276]
[-28.08978844 377.67047119]
[-14.02471828 371.91976929]
[1.12920356 373.99481201]
[10.40158844 362.20404053]
[19.67397308 350.41323853]
[28.94635773 338.62243652]
[14.82143402 320.73223877]
[9.35771751 299.09716797]
[13.13002110 277.59094238]
[25.09418106 259.90234375]
[42.83601761 248.90251160]
[63.04905319 246.18124390]
[65.68725586 231.41506958]
[68.32545471 216.64889526]
[70.96365356 201.88272095]
[73.60185242 187.11654663]
[76.24005127 172.35037231]
[78.87825012 157.58419800]
[81.51644897 142.81802368]
[84.15464783 128.05184937]
[86.79284668 113.28567505]
[79.38135529 100.24459839]
[65.34501648 94.95487976]
[51.30867004 89.66516113]
[37.27233124 84.37544250]
[21.63019180 86.74906921]
[12.44911098 75.02059937]
[-1.58723128 69.73088074]
[-15.62357330 64.44116974]
[-29.65991592 59.15145111]
[-43.69625854 53.86173248]
[-60.65005112 53.93399811]
[-65.41276550 37.66276932]
[-51.09587860 28.58185768]
[-38.40653992 39.82539368]
[-24.37019920 45.11510849]
[-10.33385658 50.40482712]
[3.70248532 55.69454193]
[17.73882675 60.98425674]
[32.37699127 58.23227692]
[42.56204605 70.33910370]
[56.59838867 75.62882233]
[70.63472748 80.91853333]
[84.67107391 86.20825195]
[96.58687592 77.09707642]
[95.16104126 62.16499710]
[93.73519897 47.23291779]
[92.30935669 32.30083847]
[78.05595398 26.95277023]
[67.58070374 15.99119282]
[62.92259598 1.62727261]
[64.95458221 -13.27346706]
[73.22055817 -25.76278496]
[86.03635406 -33.39305115]
[84.61051178 -48.32513046]
[83.18466949 -63.25720978]
[68.69592285 -67.76850891]
[57.06952286 -77.45716095]
[50.05722046 -90.82283783]
[48.70000458 -105.81435394]
[53.17367172 -120.14443207]
[62.76678848 -131.63867188]
[75.99359894 -138.56547546]
[74.56776428 -153.49755859]
[70.64164734 -161.72923279]
[73.22547913 -168.64219666]
[64.38908386 -181.76577759]
[71.06324768 -195.08135986]
[69.84060669 -210.03144836]
[68.61796570 -224.98153687]
[67.39533234 -239.93162537]
[66.17269135 -254.88171387]
[56.40289688 -268.05300903]
[63.17205429 -282.98989868]
[79.51663208 -284.32659912]
[88.62273407 -270.68801880]
[81.12277985 -256.10437012]
[82.34542084 -241.15426636]
[83.56805420 -226.20417786]
[84.79069519 -211.25408936]
[86.01333618 -196.30400085]
[94.76228333 -184.24974060]
[88.17556763 -169.86482239]
[89.49983978 -154.92340088]
[90.92568207 -139.99131775]
[105.22437286 -135.69287109]
[116.81942749 -126.22186279]
[123.92424011 -112.99739838]
[125.42871094 -98.01994324]
[121.07260132 -83.56871033]
[111.48989868 -71.85484314]
[98.11674500 -64.68305206]
[99.54258728 -49.75096893]
[100.96842957 -34.81888962]
[114.99665833 -29.75191879]
[125.47688293 -19.05264664]
[130.29212952 -4.80573797]
[128.43658447 10.18016052]
[120.22513580 22.92610168]
[107.24143219 30.87499809]
[108.66727448 45.80707550]
[110.09311676 60.73915482]
[111.51895905 75.67123413]
[117.90975952 79.59649658]
[123.81728363 65.80877686]
[125.87490082 50.95057297]
[139.43858337 44.54538345]
[152.22006226 52.39611053]
[152.63969421 67.39023590]
[140.31782532 75.94348907]
[130.69136047 87.44701385]
[137.08215332 91.37227631]
[151.04527283 85.89215851]
[165.00837708 80.41204071]
[178.97148132 74.93193054]
[192.93458557 69.45181274]
[206.89768982 63.97169495]
[220.86079407 58.49158096]
[234.82389832 53.01146698]
[244.61999512 39.85971451]
[260.87411499 42.03599167]
[266.86538696 57.30152893]
[256.43054199 69.95244598]
[240.30401611 66.97457123]
[226.34091187 72.45468903]
[212.37780762 77.93480682]
[198.41470337 83.41491699]
[184.45159912 88.89503479]
[170.48849487 94.37515259]
[156.52537537 99.85526276]
[142.56227112 105.33538055]
[157.44335938 107.22039795]
[172.32444763 109.10541534]
[184.25787354 118.19349670]
[192.25205994 130.88574219]
[195.29415894 145.57402039]
[192.99871826 160.39733887]
[185.65658569 173.47760010]
[174.19799805 183.15751648]
[160.07475281 188.21064758]
[145.07627869 187.99676514]
[131.10287476 182.54296875]
[119.92496490 172.54025269]
[112.95879364 159.25596619]
[111.08711243 144.37059021]
[106.32306671 130.14723206]
[101.55902100 115.92387390]
[98.92082214 130.69004822]
[96.28262329 145.45622253]
[93.64442444 160.22239685]
[91.00622559 174.98857117]
[88.36802673 189.75474548]
[85.72982788 204.52091980]
[83.09162903 219.28709412]
[80.45343018 234.05326843]
[77.81523132 248.81944275]
[87.63613129 252.77238464]
[96.47825623 258.83877563]
[103.88718414 266.77841187]
[109.46704865 276.25354004]
[112.90136719 286.84313965]
[113.97056580 298.06137085]
[112.56499481 309.38000488]
[108.69297028 320.25323486]
[102.48307037 330.14398193]
[94.18070221 338.55041504]
[84.13871765 345.03121948]
[90.46258545 358.63302612]
[96.78644562 372.23480225]
[103.23295593 378.68597412]
[103.10241699 386.06484985]
[109.24071503 399.75140381]
[115.59889984 406.28961182]
[115.36801910 413.66604614]
[121.31961823 427.43481445]
[127.27121735 441.20355225]
[139.10580444 453.34353638]
[130.71640015 468.07629395]
[114.23698425 464.09317017]
[113.50247192 447.15515137]
[107.55087280 433.38641357]
[101.59926605 419.61764526]
[95.55417633 405.88970947]
[89.41587830 392.20315552]
[83.18465424 378.55868530]
[76.86079407 364.95687866]
[70.53692627 351.35510254]
[63.08698273 350.49002075]
[62.11565018 365.45855713]
[61.14431381 380.42706299]
[66.01382446 394.61465454]
[56.60655594 406.29812622]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 44]
[6 43]
[7 42]
[8 41]
[13 36]
[14 35]
[15 34]
[16 33]
[17 32]
[20 30]
[21 29]
[22 28]
[23 27]
[50 194]
[51 193]
[52 192]
[53 191]
[54 190]
[55 189]
[56 188]
[57 187]
[58 186]
[59 185]
[60 82]
[61 81]
[62 80]
[63 79]
[65 77]
[66 76]
[67 75]
[68 74]
[69 73]
[83 141]
[84 140]
[85 139]
[86 138]
[92 132]
[93 131]
[94 130]
[101 123]
[102 122]
[104 121]
[106 119]
[107 118]
[108 117]
[109 116]
[110 115]
[150 169]
[151 168]
[152 167]
[153 166]
[154 165]
[155 164]
[156 163]
[157 162]
[205 225]
[206 224]
[207 223]
[209 222]
[210 221]
[212 220]
[213 219]
[214 218]
] def

init

% Start Annotations
5 44 0.32 1 colorpair
6 43 0.16 0.6 colorpair
7 42 0.16 1 colorpair
8 41 0.16 0.6 colorpair
13 36 0.16 1 colorpair
14 35 0.16 0.2 colorpair
15 34 0.0 0.6 colorpair
16 33 0.16 1 colorpair
17 32 0.16 0.6 colorpair
20 30 0.0 0.6 colorpair
21 29 0.0 1 colorpair
22 28 0.0 1 colorpair
23 27 0.16 1 colorpair
50 194 0.16 1 colorpair
51 193 0.0 1 colorpair
52 192 0.16 0.6 colorpair
53 191 0.16 0.2 colorpair
54 190 0.16 0.2 colorpair
55 189 0.0 1 colorpair
56 188 0.0 0.2 colorpair
57 187 0.0 0.6 colorpair
58 186 0.16 1 colorpair
59 185 0.16 0.2 colorpair
60 82 0.0 1 colorpair
61 81 0.0 1 colorpair
62 80 0.16 1 colorpair
63 79 0.16 1 colorpair
65 77 0.16 0.2 colorpair
66 76 0.0 1 colorpair
67 75 0.0 1 colorpair
68 74 0.16 1 colorpair
69 73 0.0 1 colorpair
83 141 0.0 0.6 colorpair
84 140 0.16 1 colorpair
85 139 0.0 1 colorpair
86 138 0.0 0.6 colorpair
92 132 0.0 0.6 colorpair
93 131 0.0 0.6 colorpair
94 130 0.16 1 colorpair
101 123 0.16 1 colorpair
102 122 0.16 1 colorpair
104 121 0.0 0.2 colorpair
106 119 0.16 1 colorpair
107 118 0.0 0.2 colorpair
108 117 0.32 1 colorpair
109 116 0.0 1 colorpair
110 115 0.0 0.2 colorpair
150 169 0.16 0.2 colorpair
151 168 0.16 1 colorpair
152 167 0.0 0.2 colorpair
153 166 0.16 0.6 colorpair
154 165 0.16 1 colorpair
155 164 0.0 0.6 colorpair
156 163 0.0 0.6 colorpair
157 162 0.0 1 colorpair
205 225 0.16 1 colorpair
206 224 0.16 1 colorpair
207 223 0.0 0.6 colorpair
209 222 0.0 1 colorpair
210 221 0.0 1 colorpair
212 220 0.16 0.6 colorpair
213 219 0.0 1 colorpair
214 218 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
5 cmark
44 cmark
6 43 1 gmark
43 cmark
42 cmark
8 41 1 gmark
8 cmark
36 cmark
14 35 2 gmark
14 cmark
15 34 1 gmark
33 cmark
17 32 1 gmark
17 cmark
32 cmark
20 30 1 gmark
23 cmark
50 cmark
52 192 1 gmark
52 cmark
192 cmark
53 191 2 gmark
191 cmark
54 190 2 gmark
54 cmark
190 cmark
56 188 2 gmark
57 187 1 gmark
58 cmark
59 185 2 gmark
59 cmark
185 cmark
62 cmark
80 cmark
63 cmark
65 77 2 gmark
65 cmark
77 cmark
74 cmark
83 141 1 gmark
84 cmark
140 cmark
86 138 1 gmark
92 132 1 gmark
93 131 1 gmark
94 cmark
130 cmark
101 cmark
122 cmark
104 121 2 gmark
119 cmark
107 118 2 gmark
108 cmark
117 cmark
110 115 2 gmark
150 169 2 gmark
150 cmark
169 cmark
168 cmark
152 167 2 gmark
153 166 1 gmark
153 cmark
166 cmark
165 cmark
155 164 1 gmark
156 163 1 gmark
205 cmark
225 cmark
224 cmark
207 223 1 gmark
212 220 1 gmark
220 cmark

% End Annotations
showpage
end
%%EOF
