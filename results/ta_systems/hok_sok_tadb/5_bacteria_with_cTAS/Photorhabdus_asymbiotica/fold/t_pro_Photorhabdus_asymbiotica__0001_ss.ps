%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:16:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAGCCGCAAAAAAUCGCAAUAUUUAGUUUGAUCAUUAUUUGUGUGACGUUACUCAUAUUCACAUGGAUAACAAGAGGCUCACUCUGUAAACUCCACAUCAAACAAGGUAAUACAGAGGUUGCGGCAAUCAUGGCUUACGAAUCCAGCAAU\
) } def
/len { sequence length } bind def

/coor [
[271.21954346 537.95385742]
[265.55004883 524.06658936]
[259.88055420 510.17932129]
[254.21104431 496.29202271]
[239.78881836 486.33883667]
[242.35832214 468.13299561]
[236.40672302 454.36422729]
[230.45510864 440.59548950]
[224.50350952 426.82672119]
[218.55191040 413.05798340]
[212.60031128 399.28924561]
[206.64871216 385.52047729]
[193.37408447 383.81320190]
[182.59930420 375.69229126]
[177.21556091 363.20236206]
[178.73373413 349.57736206]
[186.86227417 338.40344238]
[181.19277954 324.51614380]
[175.52328491 310.62884521]
[169.85377502 296.74157715]
[164.18428040 282.85427856]
[152.21044922 273.99557495]
[154.15779114 258.29467773]
[148.48828125 244.40737915]
[142.81878662 230.52009583]
[137.14929199 216.63279724]
[131.47978210 202.74551392]
[119.50595856 193.88681030]
[121.45329285 178.18589783]
[115.78379059 164.29861450]
[110.11429596 150.41131592]
[104.44479370 136.52403259]
[98.77529144 122.63674927]
[93.10578918 108.74945831]
[84.23957062 96.65027618]
[72.70531464 87.06065369]
[61.17105865 77.47103119]
[49.63679886 67.88140106]
[38.10254288 58.29177856]
[26.56828499 48.70215607]
[15.03402710 39.11252975]
[3.49976897 29.52290726]
[-8.03448868 19.93328285]
[-19.56874657 10.34365845]
[-31.10300446 0.75403404]
[-42.63726425 -8.83559036]
[-54.17152023 -18.42521477]
[-65.70578003 -28.01483917]
[-77.24003601 -37.60446167]
[-91.10237885 -31.21710777]
[-106.36312866 -31.48552895]
[-119.99227142 -38.35643005]
[-129.28372192 -50.46558762]
[-132.39265442 -65.40872192]
[-128.70178223 -80.21886444]
[-118.94395447 -91.95544434]
[-105.05656433 -98.28816223]
[-89.79698181 -97.95964813]
[-76.19500732 -91.03513336]
[-66.95131683 -78.88947296]
[-63.90125275 -63.93421173]
[-67.65041351 -49.13872147]
[-56.11615372 -39.54909515]
[-44.58189774 -29.95947266]
[-33.04763794 -20.36984825]
[-21.51338005 -10.78022385]
[-9.97912216 -1.19059956]
[1.55513549 8.39902496]
[13.08939362 17.98864937]
[24.62365150 27.57827377]
[36.15790939 37.16789627]
[47.69216537 46.75752258]
[59.22642517 56.34714508]
[70.76068115 65.93676758]
[82.29493713 75.52639771]
[93.82920074 85.11602020]
[108.41831207 81.62921906]
[114.36991119 67.86046600]
[120.32151031 54.09172058]
[126.27311707 40.32297134]
[132.22471619 26.55422401]
[138.17631531 12.78547478]
[136.54966736 -2.95188785]
[148.70170593 -11.56450653]
[154.65330505 -25.33325577]
[155.38781738 -42.27128601]
[171.86723328 -46.25439072]
[180.25663757 -31.52162933]
[168.42205811 -19.38165474]
[162.47044373 -5.61290550]
[164.52279663 9.13962364]
[151.94506836 18.73707581]
[145.99346924 32.50582504]
[140.04187012 46.27457428]
[134.09025574 60.04332352]
[128.13865662 73.81207275]
[122.18705750 87.58081818]
[120.16880798 94.22206879]
[116.51502228 99.21138000]
[111.88446045 102.20654297]
[106.99308014 103.07995605]
[112.66258240 116.96724701]
[118.33207703 130.85453796]
[124.00157928 144.74182129]
[129.67108154 158.62910461]
[135.34057617 172.51640320]
[147.71992493 182.36842346]
[145.36706543 197.07601929]
[151.03657532 210.96330261]
[156.70606995 224.85058594]
[162.37557983 238.73788452]
[168.04507446 252.62516785]
[180.42442322 262.47720337]
[178.07156372 277.18478394]
[183.74105835 291.07208252]
[189.41056824 304.95935059]
[195.08006287 318.84664917]
[200.74957275 332.73394775]
[217.20433044 336.52398682]
[228.06701660 349.23437500]
[229.22381592 365.74789429]
[220.41746521 379.56887817]
[226.36906433 393.33764648]
[232.32066345 407.10638428]
[238.27226257 420.87512207]
[244.22386169 434.64389038]
[250.17546082 448.41262817]
[256.12707520 462.18136597]
[267.84014893 467.67523193]
[272.49758911 479.31381226]
[268.09832764 490.62252808]
[273.76785278 504.50979614]
[279.43734741 518.39709473]
[285.10684204 532.28436279]
[302.83221436 544.25671387]
[299.40515137 564.57617188]
[305.91339111 578.09069824]
[312.42166138 591.60522461]
[327.74581909 593.38671875]
[339.65966797 603.18792725]
[344.36154175 617.88128662]
[340.35107422 632.77825928]
[328.90802002 643.12524414]
[313.68380737 645.62054443]
[299.53640747 639.46795654]
[290.98022461 626.63067627]
[290.74548340 611.20513916]
[298.90710449 598.11346436]
[292.39886475 584.59893799]
[285.89059448 571.08441162]
[277.04238892 569.53118896]
[269.81307983 563.96868896]
[265.92828369 555.56311035]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 134]
[2 133]
[3 132]
[4 131]
[6 128]
[7 127]
[8 126]
[9 125]
[10 124]
[11 123]
[12 122]
[17 118]
[18 117]
[19 116]
[20 115]
[21 114]
[23 112]
[24 111]
[25 110]
[26 109]
[27 108]
[29 106]
[30 105]
[31 104]
[32 103]
[33 102]
[34 101]
[35 76]
[36 75]
[37 74]
[38 73]
[39 72]
[40 71]
[41 70]
[42 69]
[43 68]
[44 67]
[45 66]
[46 65]
[47 64]
[48 63]
[49 62]
[77 97]
[78 96]
[79 95]
[80 94]
[81 93]
[82 92]
[84 90]
[85 89]
[136 150]
[137 149]
[138 148]
] def

init

% Start Annotations
1 134 0.0 1 colorpair
2 133 0.0 1 colorpair
3 132 0.0 1 colorpair
4 131 0.0 1 colorpair
6 128 0.0 1 colorpair
7 127 0.0 1 colorpair
8 126 0.0 1 colorpair
9 125 0.0 1 colorpair
10 124 0.0 1 colorpair
11 123 0.0 1 colorpair
12 122 0.0 1 colorpair
17 118 0.0 1 colorpair
18 117 0.0 0.6 colorpair
19 116 0.0 1 colorpair
20 115 0.0 0.6 colorpair
21 114 0.0 1 colorpair
23 112 0.0 1 colorpair
24 111 0.0 1 colorpair
25 110 0.0 1 colorpair
26 109 0.0 1 colorpair
27 108 0.0 1 colorpair
29 106 0.0 1 colorpair
30 105 0.0 1 colorpair
31 104 0.0 1 colorpair
32 103 0.0 1 colorpair
33 102 0.0 1 colorpair
34 101 0.0 1 colorpair
35 76 0.0 1 colorpair
36 75 0.0 0.6 colorpair
37 74 0.0 0.6 colorpair
38 73 0.0 1 colorpair
39 72 0.0 1 colorpair
40 71 0.0 1 colorpair
41 70 0.0 1 colorpair
42 69 0.0 1 colorpair
43 68 0.0 1 colorpair
44 67 0.0 1 colorpair
45 66 0.16 1 colorpair
46 65 0.0 1 colorpair
47 64 0.0 1 colorpair
48 63 0.0 1 colorpair
49 62 0.0 1 colorpair
77 97 0.0 1 colorpair
78 96 0.0 0.6 colorpair
79 95 0.0 1 colorpair
80 94 0.0 1 colorpair
81 93 0.16 1 colorpair
82 92 0.0 1 colorpair
84 90 0.0 1 colorpair
85 89 0.0 1 colorpair
136 150 0.0 1 colorpair
137 149 0.0 1 colorpair
138 148 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
18 117 1 gmark
20 115 1 gmark
36 75 1 gmark
37 74 1 gmark
66 cmark
78 96 1 gmark
81 cmark
93 cmark

% End Annotations
showpage
end
%%EOF
