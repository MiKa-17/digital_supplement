%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:16:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAGAGGCUAAUCUUAUGUUGCGAAGCAUUAGAUG_GGCCUCAAAUUGAUUGAAAGAUCAUUUGGGGCUUUCUUCUAUCCGC_____________UCCAGCACGCCAGAGACAGAUAGUCUCAAGCGCCCGCC\
) } def
/len { sequence length } bind def

/coor [
[229.29327393 154.65734863]
[215.18475342 149.56324768]
[201.85298157 156.10536194]
[187.47238159 151.14019775]
[180.70079041 137.11224365]
[166.59228516 132.01814270]
[152.48377991 126.92402649]
[138.37525940 121.82992554]
[124.26675415 116.73581696]
[114.30358124 125.77538300]
[101.36140442 129.44671631]
[88.13568878 126.98519897]
[77.38095093 118.90348053]
[63.80265045 125.27762604]
[50.22434998 131.65176392]
[36.64604950 138.02590942]
[27.44176674 150.89416504]
[12.63287258 149.29856873]
[-0.94542843 155.67271423]
[-14.52372932 162.04685974]
[-28.10203171 168.42100525]
[-41.68033218 174.79515076]
[-50.60285950 188.55453491]
[-66.96388245 187.43698120]
[-73.93258667 172.59214783]
[-64.34016418 159.29112244]
[-48.05447769 161.21684265]
[-34.47617722 154.84269714]
[-20.89787483 148.46855164]
[-7.31957436 142.09440613]
[6.25872707 135.72026062]
[14.49179745 123.30793762]
[30.27190208 124.44761658]
[43.85020447 118.07347107]
[57.42850494 111.69931793]
[71.00680542 105.32517242]
[70.72181702 96.57205963]
[73.02104187 88.12150574]
[77.70154572 80.71939850]
[69.22449493 68.34443665]
[60.74745178 55.96947479]
[52.27040482 43.59451294]
[43.79335785 31.21954918]
[35.31631088 18.84458733]
[26.83926582 6.46962500]
[18.36222076 -5.90533686]
[9.88517380 -18.28029823]
[2.38435793 -23.65278244]
[1.35911989 -31.04043961]
[-6.82982922 -43.60790253]
[-15.01877785 -56.17536545]
[-23.20772743 -68.74282837]
[-31.39667702 -81.31028748]
[-46.25681305 -88.24630737]
[-47.41036606 -104.60483551]
[-33.67065430 -113.55761719]
[-19.17191696 -105.89480591]
[-18.82921410 -89.49923706]
[-10.64026451 -76.93177795]
[-2.45131588 -64.36431122]
[5.73763323 -51.79685211]
[13.92658234 -39.22938919]
[22.26013565 -26.75734520]
[30.73718262 -14.38238335]
[39.21422958 -2.00742102]
[47.69127274 10.36754131]
[56.16831970 22.74250412]
[64.64537048 35.11746597]
[73.12241364 47.49242783]
[81.59945679 59.86738968]
[90.07650757 72.24235535]
[109.39729309 72.05982208]
[124.68078613 83.88102722]
[129.36085510 102.62730408]
[143.46937561 107.72141266]
[157.57788086 112.81552124]
[171.68638611 117.90962982]
[185.79490662 123.00373077]
[199.96621704 116.53755951]
[214.20169067 121.90469360]
[220.27886963 135.45472717]
[234.38737488 140.54884338]
[239.26412964 132.22326660]
[245.26861572 124.67377472]
[252.27934265 118.05191803]
[260.15466309 112.49051666]
[268.73556519 108.10094452]
[277.84899902 104.97093964]
[287.31115723 103.16284943]
[296.93142700 102.71237183]
[306.51605225 103.62783813]
[315.87213135 105.89010620]
[324.81143188 109.45291138]
[333.15423584 114.24385834]
[340.73291016 120.16583252]
[347.39532471 127.09903717]
[353.00784302 134.90336609]
[357.45803833 143.42126465]
[360.65692139 152.48086548]
[362.54083252 161.89952087]
[363.07247925 171.48745728]
[362.24194336 181.05155945]
[360.06661987 190.39933777]
[356.59103394 199.34271240]
[351.88583374 207.70188904]
[363.42584229 217.28459167]
[374.96585083 226.86729431]
[390.49090576 225.59809875]
[402.05761719 235.48071289]
[403.17190552 250.28929138]
[414.71191406 259.87200928]
[426.25192261 269.45471191]
[437.79193115 279.03741455]
[449.33193970 288.62008667]
[465.37493896 288.57754517]
[475.29806519 301.18353271]
[471.48910522 316.76788330]
[456.87002563 323.37557983]
[442.65530396 315.93777466]
[439.74923706 300.16012573]
[428.20922852 290.57742310]
[416.66921997 280.99472046]
[405.12921143 271.41201782]
[393.58920288 261.82931519]
[378.82803345 263.45504761]
[366.98831177 253.90121460]
[365.38314819 238.40730286]
[353.84313965 228.82460022]
[342.30313110 219.24189758]
[324.52865601 231.61552429]
[303.73797607 237.73963928]
[282.06091309 236.97590637]
[261.72161865 229.39218140]
[244.81033325 215.75660706]
[233.06849670 197.45985413]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 82]
[2 81]
[5 78]
[6 77]
[7 76]
[8 75]
[9 74]
[13 36]
[14 35]
[15 34]
[16 33]
[18 31]
[19 30]
[20 29]
[21 28]
[22 27]
[39 71]
[40 70]
[41 69]
[42 68]
[43 67]
[44 66]
[45 65]
[46 64]
[47 63]
[49 62]
[50 61]
[51 60]
[52 59]
[53 58]
[105 129]
[106 128]
[107 127]
[110 124]
[111 123]
[112 122]
[113 121]
[114 120]
] def

init

% Start Annotations
1 82 0.16 1 colorpair
2 81 0.0 1 colorpair
5 78 0.0 1 colorpair
6 77 0.0 1 colorpair
7 76 0.0 1 colorpair
8 75 0.16 1 colorpair
9 74 0.16 1 colorpair
13 36 0.0 0.6 colorpair
14 35 0.16 1 colorpair
15 34 0.0 1 colorpair
16 33 0.0 1 colorpair
18 31 0.0 1 colorpair
19 30 0.0 1 colorpair
20 29 0.0 1 colorpair
21 28 0.0 1 colorpair
22 27 0.0 1 colorpair
39 71 0.16 1 colorpair
40 70 0.0 1 colorpair
41 69 0.0 1 colorpair
42 68 0.0 1 colorpair
43 67 0.0 1 colorpair
44 66 0.0 1 colorpair
45 65 0.0 1 colorpair
46 64 0.16 1 colorpair
47 63 0.16 1 colorpair
49 62 0.16 1 colorpair
50 61 0.0 1 colorpair
51 60 0.0 1 colorpair
52 59 0.0 0.6 colorpair
53 58 0.0 1 colorpair
105 129 0.16 1 colorpair
106 128 0.0 1 colorpair
107 127 0.0 1 colorpair
110 124 0.0 0.6 colorpair
111 123 0.0 1 colorpair
112 122 0.0 1 colorpair
113 121 0.0 0.6 colorpair
114 120 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
82 cmark
75 cmark
74 cmark
13 36 1 gmark
14 cmark
35 cmark
39 cmark
46 cmark
64 cmark
47 cmark
63 cmark
49 cmark
62 cmark
52 59 1 gmark
105 cmark
129 cmark
110 124 1 gmark
113 121 1 gmark

% End Annotations
showpage
end
%%EOF
