%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:41:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUUGUGGCAU___UCAUAGUGAUGUGUUUUACGGUUCUGGGAUUCACGCUGAUGAUAGGAGACUCGCUGUGUGAAUUGAGGAUCAAAGAACGUAAUAAGGAGUUUAAGGCGGUUCUCGCCUACAAAUCGAAGAAGUAGCAAUC_UGCGGGGGGAAAUCCCAUAAGCGCUAACUUAAGGGUUG_GC_______________________\
) } def
/len { sequence length } bind def

/coor [
[234.03173828 224.42651367]
[222.62927246 214.68054199]
[211.22680664 204.93458557]
[196.44398499 206.35008240]
[184.74142456 196.62872314]
[183.35694885 181.11354065]
[171.95449829 171.36756897]
[160.55203247 161.62159729]
[149.14956665 151.87564087]
[137.74710083 142.12966919]
[126.22620392 150.11924744]
[113.09420776 155.02993774]
[99.15781403 156.56008911]
[85.27315521 154.61569214]
[72.29318237 149.31617737]
[61.01527405 140.98712158]
[49.32769012 150.38926697]
[43.42480087 165.06805420]
[28.65824699 167.01693726]
[16.97066689 176.41909790]
[5.28308487 185.82124329]
[-6.40449619 195.22338867]
[-18.09207726 204.62554932]
[-29.77965927 214.02769470]
[-41.46723938 223.42985535]
[-53.15481949 232.83200073]
[-64.84239960 242.23414612]
[-76.52998352 251.63630676]
[-85.08148956 266.27557373]
[-101.51593781 262.11080933]
[-102.06345367 245.16571045]
[-85.93213654 239.94871521]
[-74.24455261 230.54656982]
[-62.55697250 221.14442444]
[-50.86939240 211.74226379]
[-39.18180847 202.34011841]
[-27.49422836 192.93795776]
[-15.80664730 183.53581238]
[-4.11906624 174.13366699]
[7.56851530 164.73150635]
[19.25609589 155.32936096]
[24.32301331 141.32308960]
[39.92554092 138.70169067]
[51.61312103 129.29954529]
[43.53392792 103.36688995]
[48.47427368 76.65792847]
[35.75223541 68.71124268]
[23.03019905 60.76455688]
[10.30816269 52.81787491]
[-2.41387320 44.87118912]
[-18.21735191 44.12242889]
[-24.91274643 30.81750679]
[-37.63478470 22.87082291]
[-50.35681915 14.92413807]
[-63.07885742 6.97745419]
[-75.85969543 -0.87430137]
[-88.69863892 -8.63069248]
[-101.53758240 -16.38708496]
[-114.37651825 -24.14347458]
[-127.21546173 -31.89986610]
[-140.05439758 -39.65625763]
[-152.89334106 -47.41265106]
[-165.73228455 -55.16904068]
[-178.57122803 -62.92543411]
[-191.41015625 -70.68182373]
[-204.24909973 -78.43821716]
[-217.08804321 -86.19460297]
[-229.92698669 -93.95099640]
[-242.76593018 -101.70738983]
[-259.44961548 -104.72245026]
[-261.17089844 -121.58879089]
[-245.44020081 -127.91187286]
[-235.00953674 -114.54633331]
[-222.17059326 -106.78993988]
[-209.33164978 -99.03354645]
[-196.49270630 -91.27715302]
[-183.65377808 -83.52076721]
[-170.81483459 -75.76437378]
[-157.97589111 -68.00798035]
[-145.13694763 -60.25159073]
[-132.29800415 -52.49519730]
[-119.45906830 -44.73880768]
[-106.62012482 -36.98241425]
[-93.78118896 -29.22602463]
[-80.94224548 -21.46963310]
[-68.10330963 -13.71324158]
[-60.75267410 -12.94511986]
[-55.13217163 -5.74458218]
[-42.41013336 2.20210218]
[-29.68809891 10.14878654]
[-16.96606255 18.09547043]
[-2.07254934 18.27583122]
[5.53281116 32.14915466]
[18.25484657 40.09583664]
[30.97688293 48.04252243]
[43.69892120 55.98920441]
[56.42095566 63.93589020]
[67.37810516 53.78782654]
[80.60920715 46.86103058]
[95.19195557 43.63834763]
[110.10986328 44.34441757]
[114.72386932 30.07168579]
[119.33788300 15.79895210]
[116.22065735 0.28787491]
[127.49774170 -9.44232368]
[132.11175537 -23.71505737]
[125.16996765 -37.65956879]
[130.05255127 -52.06842422]
[143.38929749 -58.60041428]
[148.00329590 -72.87314606]
[152.61730957 -87.14588165]
[157.23132324 -101.41861725]
[148.77218628 -114.57069397]
[150.79737854 -130.07658386]
[162.35066223 -140.61488342]
[177.97692871 -141.20971680]
[190.29792786 -131.58024597]
[193.49607849 -116.27318573]
[186.06129456 -102.51608276]
[171.50405884 -96.80460358]
[166.89004517 -82.53187561]
[162.27603149 -68.25914001]
[157.66201782 -53.98640442]
[164.65132141 -40.88352966]
[160.17536926 -26.34321785]
[146.38447571 -19.10104752]
[141.77047729 -4.82831478]
[145.21771240 9.66188049]
[133.61061096 20.41296196]
[128.99659729 34.68569565]
[124.38259888 48.95842743]
[131.34269714 52.91084671]
[137.67526245 57.80607224]
[143.25350952 63.54609299]
[147.96574402 70.01598358]
[151.71760559 77.08621216]
[154.43400574 84.61520386]
[156.06054688 92.45223236]
[156.56465149 100.44038391]
[155.93623352 108.41971588]
[154.18786621 116.23046875]
[151.35456848 123.71625519]
[147.49307251 130.72720337]
[158.89553833 140.47317505]
[170.29798889 150.21914673]
[181.70045471 159.96510315]
[193.10292053 169.71107483]
[208.64445496 168.66296387]
[220.06933594 178.70918274]
[220.97277832 193.53211975]
[232.37522888 203.27809143]
[243.77769470 213.02404785]
[254.65371704 202.67434692]
[266.53625488 193.49780273]
[279.29937744 185.59169006]
[292.80780029 179.03981018]
[306.91827393 173.91162109]
[321.48126221 170.26150513]
[336.34237671 168.12812805]
[351.34408569 167.53411865]
[366.32736206 168.48576355]
[381.13336182 170.97299194]
[395.60513306 174.96942139]
[409.58929443 180.43269348]
[422.93759155 187.30490112]
[435.50851440 195.51318359]
[447.16882324 204.97053528]
[457.79489136 215.57669067]
[467.27407837 227.21925354]
[475.50588989 239.77476501]
[482.40310669 253.11013794]
[487.89260864 267.08404541]
[491.91613770 281.54830933]
[494.43112183 296.34960938]
[495.41085815 311.33108521]
[494.84497070 326.33386230]
[492.73947144 341.19897461]
[489.11663818 355.76876831]
[484.01492310 369.88885498]
[477.48837280 383.40951538]
[469.60620117 396.18740845]
[460.45193481 408.08715820]
[450.12265015 418.98254395]
[438.72781372 428.75811768]
[426.38821411 437.31021118]
[413.23468018 444.54818726]
[399.40661621 450.39535522]
[385.05065918 454.78967285]
[370.31893921 457.68457031]
[355.36761475 459.04937744]
[340.35525513 458.86962891]
[325.44091797 457.14721680]
[310.78271484 453.90042114]
[296.53607178 449.16363525]
[282.85198975 442.98706055]
[269.87554932 435.43621826]
[257.74426270 426.59109497]
[246.58673096 416.54550171]
[236.52127075 405.40591431]
[227.65457153 393.29040527]
[220.08059692 380.32742310]
[213.87965393 366.65435791]
[209.11749268 352.41619873]
[205.84455872 337.76382446]
[204.09558105 322.85256958]
[203.88906860 307.84054565]
[205.22723389 292.88684082]
[208.09588623 278.14996338]
[212.46461487 263.78619385]
[218.28709412 249.94775391]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[16 44]
[17 43]
[19 41]
[20 40]
[21 39]
[22 38]
[23 37]
[24 36]
[25 35]
[26 34]
[27 33]
[28 32]
[46 97]
[47 96]
[48 95]
[49 94]
[50 93]
[52 91]
[53 90]
[54 89]
[55 88]
[56 86]
[57 85]
[58 84]
[59 83]
[60 82]
[61 81]
[62 80]
[63 79]
[64 78]
[65 77]
[66 76]
[67 75]
[68 74]
[69 73]
[101 131]
[102 130]
[103 129]
[105 127]
[106 126]
[109 123]
[110 122]
[111 121]
[112 120]
] def

init

% Start Annotations
1 152 0.0 0.6 colorpair
2 151 0.16 1 colorpair
3 150 0.16 1 colorpair
6 147 0.16 0.2 colorpair
7 146 0.16 0.2 colorpair
8 145 0.16 0.6 colorpair
9 144 0.16 0.2 colorpair
10 143 0.16 0.6 colorpair
16 44 0.0 0.6 colorpair
17 43 0.32 1 colorpair
19 41 0.16 1 colorpair
20 40 0.0 0.6 colorpair
21 39 0.16 0.6 colorpair
22 38 0.16 0.2 colorpair
23 37 0.0 0.6 colorpair
24 36 0.0 0.2 colorpair
25 35 0.16 1 colorpair
26 34 0.0 0.2 colorpair
27 33 0.0 1 colorpair
28 32 0.16 0.6 colorpair
46 97 0.16 1 colorpair
47 96 0.16 0.6 colorpair
48 95 0.0 0.6 colorpair
49 94 0.0 0.6 colorpair
50 93 0.16 0.6 colorpair
52 91 0.0 0.6 colorpair
53 90 0.32 0.6 colorpair
54 89 0.0 0.2 colorpair
55 88 0.16 1 colorpair
56 86 0.16 0.6 colorpair
57 85 0.16 1 colorpair
58 84 0.16 0.6 colorpair
59 83 0.16 1 colorpair
60 82 0.16 0.2 colorpair
61 81 0.0 0.2 colorpair
62 80 0.16 0.2 colorpair
63 79 0.0 0.6 colorpair
64 78 0.0 0.6 colorpair
65 77 0.16 0.6 colorpair
66 76 0.0 0.6 colorpair
67 75 0.0 1 colorpair
68 74 0.32 1 colorpair
69 73 0.16 0.6 colorpair
101 131 0.16 0.6 colorpair
102 130 0.16 1 colorpair
103 129 0.0 0.6 colorpair
105 127 0.16 0.6 colorpair
106 126 0.16 1 colorpair
109 123 0.0 0.2 colorpair
110 122 0.16 0.6 colorpair
111 121 0.0 1 colorpair
112 120 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
1 152 1 gmark
2 cmark
3 cmark
6 147 2 gmark
147 cmark
7 146 2 gmark
7 cmark
146 cmark
8 145 1 gmark
145 cmark
9 144 2 gmark
144 cmark
10 143 1 gmark
10 cmark
143 cmark
16 44 1 gmark
17 cmark
43 cmark
41 cmark
20 40 1 gmark
21 39 1 gmark
39 cmark
22 38 2 gmark
38 cmark
23 37 1 gmark
24 36 2 gmark
35 cmark
26 34 2 gmark
28 32 1 gmark
32 cmark
97 cmark
47 96 1 gmark
47 cmark
96 cmark
48 95 1 gmark
49 94 1 gmark
50 93 1 gmark
50 cmark
93 cmark
52 91 1 gmark
53 90 1 gmark
53 cmark
90 cmark
54 89 2 gmark
88 cmark
56 86 1 gmark
86 cmark
57 cmark
58 84 1 gmark
84 cmark
59 cmark
83 cmark
60 82 2 gmark
60 cmark
82 cmark
61 81 2 gmark
62 80 2 gmark
62 cmark
80 cmark
63 79 1 gmark
64 78 1 gmark
65 77 1 gmark
65 cmark
77 cmark
66 76 1 gmark
68 cmark
74 cmark
69 73 1 gmark
69 cmark
101 131 1 gmark
101 cmark
131 cmark
130 cmark
103 129 1 gmark
105 127 1 gmark
105 cmark
127 cmark
126 cmark
109 123 2 gmark
110 122 1 gmark
122 cmark

% End Annotations
showpage
end
%%EOF
