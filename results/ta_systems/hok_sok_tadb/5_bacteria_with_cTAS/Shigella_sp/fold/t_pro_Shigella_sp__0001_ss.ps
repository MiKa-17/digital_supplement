%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:41:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___GACAUGCUGAAGAAAUAUGCCCUUGUGGCAAUCAUAGUGAUGUGUUUUACGGUUCUGGGAUUCACGCUGAUGAUAGGAGACUCGCUGUGUGAAUUGAGGAUCAAAGAACGUAAUAAGGAGUUUAAGGCGGUUCUCGCCUACAAAUCGAAGAAG\
) } def
/len { sequence length } bind def

/coor [
[115.20828247 245.47932434]
[105.86386871 257.21313477]
[94.34720612 266.82388306]
[81.13053131 273.91751099]
[66.75578308 278.20312500]
[51.81238556 279.50503540]
[36.91308975 277.76983643]
[22.66882133 273.06866455]
[9.66366100 265.59432983]
[-1.56912398 255.65328979]
[-10.56894302 243.65315247]
[-16.96676445 230.08598328]
[-20.50024986 215.50810242]
[-21.02451324 200.51727295]
[-18.51805305 185.72816467]
[-13.08365059 171.74720764]
[-4.94413567 159.14767456]
[5.56673574 148.44619751]
[18.01797295 140.08158875]
[31.89902115 134.39682007]
[46.64069748 131.62501526]
[61.63992691 131.87997437]
[75.73091125 126.73758698]
[60.89951324 124.49488068]
[46.06811905 122.25218201]
[31.23672295 120.00948334]
[16.40532684 117.76678467]
[1.57393098 115.52407837]
[-13.25746441 113.28137970]
[-28.25070763 112.83122253]
[-43.18993759 114.18008423]
[-58.12916565 115.52893829]
[-65.17766571 129.25199890]
[-78.53791809 136.96607971]
[-93.94673157 136.20965576]
[-106.48719025 127.22409821]
[-112.15769958 112.87665558]
[-109.14880371 97.74555969]
[-98.42063904 86.65908051]
[-83.39652252 83.15486908]
[-68.87059784 88.35112000]
[-59.47802734 100.58971405]
[-44.53879929 99.24085236]
[-29.59956932 97.89199066]
[-42.57831955 90.37188721]
[-51.10448074 78.03070831]
[-53.54602432 63.23074722]
[-49.43560028 48.80492401]
[-39.56000519 37.51454544]
[-25.80957031 31.52075577]
[-10.81632423 31.97085190]
[2.54980850 38.77867889]
[11.73035908 50.64111710]
[14.96803761 65.28752899]
[11.64310646 79.91438293]
[2.39200449 91.72188568]
[-11.01476383 98.44998932]
[3.81663132 100.69268799]
[18.64802742 102.93538666]
[33.47942352 105.17808533]
[48.31081772 107.42078400]
[63.14221191 109.66349030]
[77.97360992 111.90618896]
[81.27404785 87.62187958]
[101.84226990 80.22949982]
[108.77219391 66.92626190]
[115.70211792 53.62302399]
[122.63204956 40.31978607]
[129.56198120 27.01655006]
[129.07551575 11.20282459]
[141.81752014 3.48982477]
[148.74745178 -9.81341267]
[155.67738342 -23.11664963]
[162.60729980 -36.41988754]
[169.40379333 -49.79179001]
[176.06614685 -63.23102570]
[182.72850037 -76.67025757]
[189.39085388 -90.10948944]
[196.05322266 -103.54872131]
[202.71557617 -116.98796082]
[209.37792969 -130.42718506]
[216.04028320 -143.86642456]
[222.70265198 -157.30566406]
[229.36500549 -170.74488831]
[236.02735901 -184.18412781]
[242.68971252 -197.62335205]
[249.35208130 -211.06259155]
[256.01443481 -224.50183105]
[257.63229370 -241.37840271]
[274.29718018 -244.49568176]
[281.90594482 -229.34500122]
[269.45367432 -217.83946228]
[262.79132080 -204.40023804]
[256.12893677 -190.96099854]
[249.46659851 -177.52177429]
[242.80422974 -164.08253479]
[236.14187622 -150.64329529]
[229.47952271 -137.20407104]
[222.81716919 -123.76483154]
[216.15480042 -110.32559967]
[209.49244690 -96.88636780]
[202.83009338 -83.44713593]
[196.16773987 -70.00789642]
[189.50537109 -56.56866837]
[182.84301758 -43.12943268]
[182.68893433 -35.69813919]
[175.91053772 -29.48995972]
[168.98062134 -16.18672180]
[162.05068970 -2.88348556]
[155.12075806 10.41975117]
[156.10290527 25.28194046]
[142.86521912 33.94647598]
[135.93528748 47.24971390]
[129.00535583 60.55295181]
[122.07543182 73.85618591]
[115.14550781 87.15942383]
[120.75726318 95.93423462]
[121.33316803 106.98392487]
[116.09028625 117.45919037]
[105.82556152 124.35121918]
[117.39090729 133.90333557]
[128.95625305 143.45542908]
[144.52368164 146.27784729]
[149.40953064 160.34829712]
[160.97488403 169.90040588]
[176.49650574 168.59010315]
[188.08934021 178.44204712]
[189.24285889 193.24761963]
[200.80819702 202.79972839]
[212.37355042 212.35183716]
[223.93890381 221.90394592]
[239.28347778 218.89100647]
[252.94973755 226.49148560]
[258.48489380 241.11668396]
[253.27539062 255.86100769]
[239.78102112 263.76266479]
[224.37339783 261.09069824]
[214.32754517 249.10676575]
[214.38679504 233.46928406]
[202.82144165 223.91719055]
[191.25610352 214.36508179]
[179.69075012 204.81297302]
[164.93392944 206.47779846]
[153.06893921 196.95535278]
[151.42277527 181.46575928]
[139.85742188 171.91365051]
[125.11723328 169.77447510]
[119.40415192 155.02078247]
[107.83880615 145.46867371]
[96.27345276 135.91656494]
[101.84348297 149.84405518]
[112.03923035 160.84617615]
[119.80952454 173.67671204]
[124.83573914 187.80955505]
[126.91177368 202.66519165]
[125.95251465 217.63449097]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 63]
[24 62]
[25 61]
[26 60]
[27 59]
[28 58]
[29 57]
[30 44]
[31 43]
[32 42]
[65 116]
[66 115]
[67 114]
[68 113]
[69 112]
[71 110]
[72 109]
[73 108]
[74 107]
[75 105]
[76 104]
[77 103]
[78 102]
[79 101]
[80 100]
[81 99]
[82 98]
[83 97]
[84 96]
[85 95]
[86 94]
[87 93]
[88 92]
[120 150]
[121 149]
[122 148]
[124 146]
[125 145]
[128 142]
[129 141]
[130 140]
[131 139]
] def

init

% Start Annotations
23 63 0.16 0.2 colorpair
24 62 0.32 1 colorpair
25 61 0.0 0.2 colorpair
26 60 0.16 1 colorpair
27 59 0.16 0.2 colorpair
28 58 0.0 0.6 colorpair
29 57 0.16 0.2 colorpair
30 44 0.0 0.6 colorpair
31 43 0.16 1 colorpair
32 42 0.16 1 colorpair
65 116 0.16 1 colorpair
66 115 0.16 0.6 colorpair
67 114 0.0 0.6 colorpair
68 113 0.0 0.6 colorpair
69 112 0.16 0.6 colorpair
71 110 0.0 0.6 colorpair
72 109 0.32 0.6 colorpair
73 108 0.0 0.2 colorpair
74 107 0.16 1 colorpair
75 105 0.16 0.6 colorpair
76 104 0.16 1 colorpair
77 103 0.16 0.6 colorpair
78 102 0.16 1 colorpair
79 101 0.16 0.2 colorpair
80 100 0.0 0.2 colorpair
81 99 0.16 0.2 colorpair
82 98 0.0 0.6 colorpair
83 97 0.0 0.6 colorpair
84 96 0.16 0.6 colorpair
85 95 0.0 0.6 colorpair
86 94 0.0 1 colorpair
87 93 0.32 1 colorpair
88 92 0.16 0.6 colorpair
120 150 0.16 0.6 colorpair
121 149 0.16 1 colorpair
122 148 0.0 0.6 colorpair
124 146 0.16 0.6 colorpair
125 145 0.16 1 colorpair
128 142 0.0 0.2 colorpair
129 141 0.16 0.6 colorpair
130 140 0.0 1 colorpair
131 139 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
23 63 2 gmark
23 cmark
63 cmark
24 cmark
62 cmark
25 61 2 gmark
60 cmark
27 59 2 gmark
27 cmark
28 58 1 gmark
29 57 2 gmark
29 cmark
57 cmark
30 44 1 gmark
31 cmark
43 cmark
32 cmark
42 cmark
116 cmark
66 115 1 gmark
66 cmark
115 cmark
67 114 1 gmark
68 113 1 gmark
69 112 1 gmark
69 cmark
112 cmark
71 110 1 gmark
72 109 1 gmark
72 cmark
109 cmark
73 108 2 gmark
107 cmark
75 105 1 gmark
105 cmark
76 cmark
77 103 1 gmark
103 cmark
78 cmark
102 cmark
79 101 2 gmark
79 cmark
101 cmark
80 100 2 gmark
81 99 2 gmark
81 cmark
99 cmark
82 98 1 gmark
83 97 1 gmark
84 96 1 gmark
84 cmark
96 cmark
85 95 1 gmark
87 cmark
93 cmark
88 92 1 gmark
88 cmark
120 150 1 gmark
120 cmark
150 cmark
149 cmark
122 148 1 gmark
124 146 1 gmark
124 cmark
146 cmark
145 cmark
128 142 2 gmark
129 141 1 gmark
141 cmark

% End Annotations
showpage
end
%%EOF
