%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:15:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_____________________CUACCACAAGGAACCCUUAUCUGGUGCGUGUUUAUCAUGUGUUUCACACUGCUGAUAUUCACUUAUCUGACACGGAAAUCGCUGUGCGAAAUUCGUUACAAAGAUGGGUUCCGCGAGGUCGCGGCUUUCAUGGCUUACGAAUCCGGUAA_\
) } def
/len { sequence length } bind def

/coor [
[81.80752563 247.42575073]
[82.44451904 262.48199463]
[79.59154510 277.27920532]
[73.40245056 291.01937866]
[64.21100616 302.96148682]
[52.51289368 312.46151733]
[38.93898392 319.00720215]
[24.22129631 322.24545288]
[9.15353966 322.00170898]
[-5.45170259 318.28909302]
[-18.80678749 311.30780029]
[-30.19149399 301.43432617]
[-38.99185562 289.20117188]
[-44.73328400 275.26800537]
[-47.10614777 260.38626099]
[-45.98248291 245.35848999]
[-41.42288589 230.99511719]
[-33.67325211 218.07072449]
[-23.15151024 207.28231812]
[-10.42508221 199.21171570]
[3.81971169 194.29412842]
[18.81466675 192.79478455]
[33.75112534 194.79452515]
[39.10958862 180.78428650]
[44.46805191 166.77404785]
[49.82651520 152.76379395]
[55.18497849 138.75355530]
[54.09378052 109.50872040]
[67.07358551 89.65203094]
[84.78137970 83.90917969]
[97.59145355 90.51995850]
[95.40743256 75.67980194]
[93.22341919 60.83965302]
[91.03939819 45.99950409]
[88.85538483 31.15935326]
[86.67136383 16.31920242]
[84.48735046 1.47905207]
[80.65493011 -3.98140430]
[80.24542999 -9.69628334]
[82.50486755 -13.94196129]
[80.86430359 -28.85197639]
[79.22373199 -43.76198959]
[77.58316803 -58.67200470]
[66.34350586 -73.23647308]
[73.98007202 -89.01933289]
[72.06745911 -103.89689636]
[70.15484619 -118.77445984]
[52.94234085 -118.55296326]
[36.52625275 -134.12733459]
[26.51646996 -145.29891968]
[16.50668907 -156.47050476]
[0.96338469 -157.49200439]
[-9.02881432 -168.96417236]
[-7.95918083 -183.77604675]
[-17.96896362 -194.94763184]
[-27.97874451 -206.11920166]
[-37.98852539 -217.29078674]
[-47.99831009 -228.46237183]
[-67.40523529 -233.82518005]
[-70.64030457 -252.86706543]
[-81.05142212 -263.66561890]
[-91.46253204 -274.46417236]
[-101.87364960 -285.26272583]
[-117.21996307 -292.46875000]
[-114.54382324 -309.21017456]
[-97.71584320 -311.27310181]
[-91.07509613 -295.67382812]
[-80.66397858 -284.87527466]
[-70.25286865 -274.07672119]
[-59.84175491 -263.27816772]
[-49.60445023 -264.00823975]
[-40.47361755 -258.85769653]
[-35.60284805 -249.32679749]
[-36.82672501 -238.47215271]
[-26.81694412 -227.30056763]
[-16.80716324 -216.12898254]
[-6.79738045 -204.95741272]
[3.21240187 -193.78582764]
[18.05240250 -193.22904968]
[28.36288834 -182.04206848]
[27.67827034 -166.48028564]
[37.68805313 -155.30870056]
[47.69783401 -144.13711548]
[55.19658279 -144.27410889]
[51.76811600 -158.87702942]
[43.93218613 -171.66758728]
[48.23892593 -186.03602600]
[61.81843948 -192.40757751]
[75.62168121 -186.53642273]
[80.45052338 -172.33494568]
[73.08693695 -159.26646423]
[70.19408417 -144.54806519]
[77.69283295 -144.68504333]
[87.28792572 -156.21475220]
[96.88301849 -167.74446106]
[106.47811890 -179.27416992]
[116.07321167 -190.80387878]
[114.82070160 -206.33026123]
[124.71574402 -217.88633728]
[139.52551270 -218.98474121]
[149.12060547 -230.51445007]
[158.71569824 -242.04414368]
[168.31079102 -253.57385254]
[173.79515076 -269.61624146]
[190.72882080 -268.78717041]
[194.61987305 -252.28578186]
[179.84049988 -243.97875977]
[170.24540710 -232.44905090]
[160.65031433 -220.91934204]
[151.05520630 -209.38963318]
[152.66510010 -194.62672424]
[143.09854126 -182.79727173]
[127.60292053 -181.20877075]
[118.00782776 -169.67906189]
[108.41272736 -158.14936829]
[98.81763458 -146.61965942]
[89.22254181 -135.08995056]
[85.03240967 -120.68707275]
[86.94502258 -105.80950928]
[88.85763550 -90.93194580]
[98.25096893 -83.27352905]
[99.94752502 -70.86804962]
[92.49317932 -60.31257248]
[94.13375092 -45.40255737]
[95.77431488 -30.49254417]
[97.41488647 -15.58253002]
[99.32749939 -0.70496547]
[101.51151276 14.13518524]
[103.69553375 28.97533607]
[105.87954712 43.81548691]
[108.06356812 58.65563583]
[110.24758148 73.49578857]
[112.43160248 88.33593750]
[121.92100525 99.95278931]
[136.02677917 105.05447388]
[150.13255310 110.15615845]
[166.17291260 106.74460602]
[176.94503784 119.10961151]
[171.36749268 134.53111267]
[155.17796326 137.14480591]
[145.03086853 124.26193237]
[130.92509460 119.16024780]
[116.81932068 114.05856323]
[108.88861084 126.79056549]
[119.68715668 137.20167542]
[130.48571777 147.61279297]
[141.28427124 158.02389526]
[157.28634644 159.16970825]
[166.24851990 172.47605896]
[161.29576111 187.73547363]
[146.22741699 193.24223328]
[132.60261536 184.77201843]
[130.87315369 168.82244873]
[120.07460022 158.41134644]
[109.27604675 148.00022888]
[98.47749329 137.58911133]
[91.15692902 139.21984863]
[95.64219666 153.53355408]
[105.05533600 165.21228027]
[100.10110474 179.37051392]
[85.46002197 182.63221741]
[74.96430206 171.91587830]
[78.53015900 157.34542847]
[76.51578522 142.48129272]
[69.19522095 144.11201477]
[63.83675385 158.12226868]
[58.47829056 172.13250732]
[53.11982727 186.14274597]
[47.76136398 200.15298462]
[60.22008896 208.63101196]
[70.38736725 219.75410461]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 169]
[24 168]
[25 167]
[26 166]
[27 165]
[31 133]
[32 132]
[33 131]
[34 130]
[35 129]
[36 128]
[37 127]
[40 126]
[41 125]
[42 124]
[43 123]
[45 120]
[46 119]
[47 118]
[49 83]
[50 82]
[51 81]
[54 78]
[55 77]
[56 76]
[57 75]
[58 74]
[60 70]
[61 69]
[62 68]
[63 67]
[93 117]
[94 116]
[95 115]
[96 114]
[97 113]
[100 110]
[101 109]
[102 108]
[103 107]
[134 143]
[135 142]
[136 141]
[144 156]
[145 155]
[146 154]
[147 153]
] def

init

% Start Annotations
23 169 0.0 1 colorpair
24 168 0.0 1 colorpair
25 167 0.0 1 colorpair
26 166 0.0 1 colorpair
27 165 0.0 0.2 colorpair
31 133 0.0 1 colorpair
32 132 0.0 1 colorpair
33 131 0.0 1 colorpair
34 130 0.0 1 colorpair
35 129 0.0 1 colorpair
36 128 0.0 1 colorpair
37 127 0.0 1 colorpair
40 126 0.0 1 colorpair
41 125 0.0 1 colorpair
42 124 0.0 1 colorpair
43 123 0.0 1 colorpair
45 120 0.0 1 colorpair
46 119 0.0 1 colorpair
47 118 0.0 1 colorpair
49 83 0.0 1 colorpair
50 82 0.0 1 colorpair
51 81 0.0 1 colorpair
54 78 0.0 1 colorpair
55 77 0.0 1 colorpair
56 76 0.0 1 colorpair
57 75 0.0 1 colorpair
58 74 0.16 1 colorpair
60 70 0.0 1 colorpair
61 69 0.0 1 colorpair
62 68 0.0 1 colorpair
63 67 0.0 1 colorpair
93 117 0.0 1 colorpair
94 116 0.0 1 colorpair
95 115 0.0 1 colorpair
96 114 0.0 1 colorpair
97 113 0.0 1 colorpair
100 110 0.0 1 colorpair
101 109 0.0 1 colorpair
102 108 0.0 1 colorpair
103 107 0.0 1 colorpair
134 143 0.0 1 colorpair
135 142 0.0 1 colorpair
136 141 0.0 1 colorpair
144 156 0.0 1 colorpair
145 155 0.0 1 colorpair
146 154 0.0 1 colorpair
147 153 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
27 165 2 gmark
58 cmark

% End Annotations
showpage
end
%%EOF
