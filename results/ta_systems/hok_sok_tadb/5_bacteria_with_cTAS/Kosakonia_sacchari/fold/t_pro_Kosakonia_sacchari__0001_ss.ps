%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:15:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAGCCGCAGGCUAUGAAGCUACCACAAGGAACCCUUAUCUGGUGCGUGUUUAUCAUGUGUUUCACACUGCUGAUAUUCACUUAUCUGACACGGAAAUCGCUGUGCGAAAUUCGUUACAAAGAUGGGUUCCGCGAGGUCGCGGCUUUCAUGGCUUACGAAUCCGGUAAG\
) } def
/len { sequence length } bind def

/coor [
[141.79513550 730.35736084]
[147.23733521 715.92175293]
[159.63369751 706.73846436]
[158.53877258 691.77844238]
[157.44383240 676.81848145]
[146.03831482 667.30798340]
[144.71479797 652.15203857]
[154.76760864 640.25335693]
[153.67268372 625.29333496]
[145.02699280 613.16479492]
[151.73631287 598.83666992]
[150.64137268 583.87670898]
[149.54644775 568.91668701]
[148.45152283 553.95672607]
[147.35658264 538.99676514]
[146.26165771 524.03674316]
[145.16673279 509.07678223]
[144.07179260 494.11679077]
[142.97686768 479.15679932]
[141.88194275 464.19680786]
[140.65043640 449.24746704]
[139.28245544 434.30996704]
[137.91447449 419.37246704]
[136.13781738 404.47805786]
[133.95379639 389.63790894]
[131.76977539 374.79776001]
[117.87353516 369.43493652]
[108.46482086 357.75878906]
[106.14844513 342.84234619]
[111.64546204 328.67620850]
[123.57292938 319.10107422]
[121.38890839 304.26092529]
[119.20489502 289.42077637]
[117.02087402 274.58062744]
[114.83686066 259.74047852]
[112.65283966 244.90032959]
[110.46882629 230.06018066]
[107.20898438 226.52404785]
[106.15968323 220.89141846]
[108.48635101 214.63916016]
[106.84577942 199.72915649]
[105.20521545 184.81913757]
[103.56464386 169.90911865]
[92.42988586 156.36537170]
[99.92831421 139.56576538]
[98.01570129 124.68819427]
[96.10309601 109.81063080]
[78.99684906 112.11028290]
[62.47449875 94.45775604]
[52.46471786 83.28617096]
[42.45493317 72.11458588]
[26.91163063 71.09308624]
[16.91943169 59.62091827]
[17.98906517 44.80905151]
[7.97928333 33.63746643]
[-2.03049898 22.46588516]
[-12.04028130 11.29430199]
[-22.05006409 0.12271968]
[-41.45698929 -5.24007988]
[-44.69206238 -24.28197479]
[-55.10317612 -35.08052826]
[-65.51428986 -45.87907791]
[-75.92539978 -56.67763138]
[-91.27171326 -63.88367081]
[-88.59557343 -80.62507629]
[-71.76760101 -82.68799591]
[-65.12684631 -67.08874512]
[-54.71573639 -56.29019165]
[-44.30462265 -45.49163818]
[-33.89350891 -34.69308853]
[-23.65620422 -35.42315674]
[-14.52537060 -30.27259636]
[-9.65460300 -20.74170494]
[-10.87848091 -9.88706207]
[-0.86869836 1.28452027]
[9.14108372 12.45610332]
[19.15086555 23.62768555]
[29.16064835 34.79926682]
[44.00064850 35.35604477]
[54.31113434 46.54302216]
[53.62651825 62.10480499]
[63.63629913 73.27639008]
[73.64608002 84.44797516]
[81.14482880 84.31098938]
[77.71636200 69.70806122]
[69.88043213 56.91751099]
[74.18717194 42.54907227]
[87.76668549 36.17750931]
[101.56993103 42.04866791]
[106.39877319 56.25015259]
[99.03517914 69.31862640]
[96.14232635 84.03703308]
[103.64107513 83.90004730]
[113.23617554 72.37034607]
[122.83126831 60.84063721]
[132.42636108 49.31092834]
[142.02145386 37.78121948]
[140.76895142 22.25482559]
[150.66398621 10.69874859]
[165.47375488 9.60035801]
[175.06884766 -1.92934942]
[184.66394043 -13.45905685]
[194.25903320 -24.98876381]
[199.74340820 -41.03114700]
[216.67706299 -40.20208740]
[220.56811523 -23.70069122]
[205.78874207 -15.39366817]
[196.19364929 -3.86396122]
[186.59855652 7.66574574]
[177.00346375 19.19545364]
[178.61334229 33.95837402]
[169.04679871 45.78782272]
[153.55116272 47.37631607]
[143.95606995 58.90602493]
[134.36097717 70.43572998]
[124.76587677 81.96543884]
[115.17078400 93.49514771]
[110.98065948 107.89801788]
[112.89326477 122.77558136]
[114.80587769 137.65315247]
[124.53393555 146.15904236]
[125.80301666 158.61550903]
[118.47465515 168.26855469]
[120.11522675 183.17857361]
[121.75579834 198.08857727]
[123.39636230 212.99859619]
[125.30897522 227.87615967]
[127.49299622 242.71630859]
[129.67701721 257.55645752]
[131.86102295 272.39660645]
[134.04504395 287.23675537]
[136.22906494 302.07690430]
[138.41308594 316.91705322]
[152.59341431 322.64990234]
[161.93861389 334.63171387]
[164.01786804 349.58306885]
[158.37194824 363.47479248]
[146.60992432 372.61373901]
[148.79394531 387.45388794]
[150.97796631 402.29403687]
[154.26855469 406.44076538]
[155.49139404 410.98208618]
[154.84686279 415.05499268]
[152.85197449 418.00448608]
[154.21995544 432.94198608]
[155.58792114 447.87948608]
[159.49952698 456.17578125]
[156.84191895 463.10189819]
[157.93685913 478.06185913]
[159.03178406 493.02185059]
[160.12670898 507.98184204]
[161.22164917 522.94183350]
[162.31657410 537.90179443]
[163.41149902 552.86181641]
[164.50643921 567.82177734]
[165.60136414 582.78173828]
[166.69628906 597.74176025]
[175.42030334 610.94030762]
[168.63267517 624.19842529]
[169.72760010 639.15838623]
[181.40576172 649.46655273]
[182.30305481 664.65374756]
[172.40382385 675.72351074]
[173.49874878 690.68353271]
[174.59368896 705.64349365]
[188.19503784 712.92407227]
[195.68109131 726.41339111]
[194.66307068 741.80712891]
[185.46580505 754.19317627]
[171.02413940 759.61920166]
[155.94631958 756.35375977]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 165]
[4 164]
[5 163]
[8 160]
[9 159]
[11 157]
[12 156]
[13 155]
[14 154]
[15 153]
[16 152]
[17 151]
[18 150]
[19 149]
[20 148]
[21 146]
[22 145]
[23 144]
[24 140]
[25 139]
[26 138]
[31 133]
[32 132]
[33 131]
[34 130]
[35 129]
[36 128]
[37 127]
[40 126]
[41 125]
[42 124]
[43 123]
[45 120]
[46 119]
[47 118]
[49 83]
[50 82]
[51 81]
[54 78]
[55 77]
[56 76]
[57 75]
[58 74]
[60 70]
[61 69]
[62 68]
[63 67]
[93 117]
[94 116]
[95 115]
[96 114]
[97 113]
[100 110]
[101 109]
[102 108]
[103 107]
] def

init

% Start Annotations
3 165 0.0 1 colorpair
4 164 0.0 1 colorpair
5 163 0.0 1 colorpair
8 160 0.0 1 colorpair
9 159 0.0 1 colorpair
11 157 0.0 1 colorpair
12 156 0.0 1 colorpair
13 155 0.0 1 colorpair
14 154 0.16 1 colorpair
15 153 0.0 1 colorpair
16 152 0.0 1 colorpair
17 151 0.0 1 colorpair
18 150 0.0 1 colorpair
19 149 0.0 1 colorpair
20 148 0.0 1 colorpair
21 146 0.0 1 colorpair
22 145 0.0 1 colorpair
23 144 0.0 1 colorpair
24 140 0.0 1 colorpair
25 139 0.0 1 colorpair
26 138 0.0 1 colorpair
31 133 0.0 1 colorpair
32 132 0.0 1 colorpair
33 131 0.0 1 colorpair
34 130 0.0 1 colorpair
35 129 0.0 1 colorpair
36 128 0.0 1 colorpair
37 127 0.0 1 colorpair
40 126 0.0 1 colorpair
41 125 0.0 1 colorpair
42 124 0.0 1 colorpair
43 123 0.0 1 colorpair
45 120 0.0 1 colorpair
46 119 0.0 1 colorpair
47 118 0.0 1 colorpair
49 83 0.0 1 colorpair
50 82 0.0 1 colorpair
51 81 0.0 1 colorpair
54 78 0.0 1 colorpair
55 77 0.0 1 colorpair
56 76 0.0 1 colorpair
57 75 0.0 1 colorpair
58 74 0.16 1 colorpair
60 70 0.0 1 colorpair
61 69 0.0 1 colorpair
62 68 0.0 1 colorpair
63 67 0.0 1 colorpair
93 117 0.0 1 colorpair
94 116 0.0 1 colorpair
95 115 0.0 1 colorpair
96 114 0.0 1 colorpair
97 113 0.0 1 colorpair
100 110 0.0 1 colorpair
101 109 0.0 1 colorpair
102 108 0.0 1 colorpair
103 107 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
14 cmark
58 cmark

% End Annotations
showpage
end
%%EOF
