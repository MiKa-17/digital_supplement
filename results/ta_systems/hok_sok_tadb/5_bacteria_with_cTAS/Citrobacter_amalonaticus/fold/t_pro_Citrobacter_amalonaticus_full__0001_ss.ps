%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:17:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCUGACGAAAUAUGCCUUAAUGGCAGUCAUCGCACUCUGCAUUACAGUGCUGGGAUUCACACUCCUCGUGAGGGACUCACUCUGUGAGUUCAGCGUCAGGGAGCGUGGUAUUGAGUUUAAGGCAGUUCUCGCUUACGAAUCGAAGAA_\
) } def
/len { sequence length } bind def

/coor [
[146.30151367 451.33068848]
[155.83050537 439.59655762]
[168.39576721 431.19384766]
[164.08818054 416.82565308]
[159.12258911 411.28594971]
[159.84379578 402.11361694]
[155.83604431 387.65890503]
[150.98678589 382.01708984]
[151.89863586 372.86172485]
[148.19247437 358.32681274]
[144.48632812 343.79187012]
[135.19969177 339.34323120]
[129.81190491 330.31045532]
[130.33126831 319.58508301]
[136.82766724 310.76000977]
[133.72935486 296.08346558]
[130.63102722 281.40695190]
[127.53270721 266.73043823]
[124.43438721 252.05389404]
[121.33606720 237.37738037]
[118.23774719 222.70085144]
[115.13941956 208.02432251]
[101.48835754 202.12631226]
[93.83738708 189.16766357]
[95.30110931 174.01145935]
[105.52681732 162.49012756]
[102.42849731 147.81359863]
[99.33017731 133.13706970]
[96.23185730 118.46054077]
[80.46099854 110.77177429]
[75.88695526 90.87507629]
[61.47473907 86.71718597]
[47.06252289 82.55930328]
[31.65839767 86.16810608]
[21.57457352 75.20609283]
[7.16235733 71.04820251]
[-7.29233074 67.04046631]
[-22.61804581 70.96895599]
[-32.92773819 60.21909332]
[-47.42333603 56.36193466]
[-61.91893387 52.50477600]
[-76.41452789 48.64761734]
[-93.27581787 50.41769791]
[-99.64440155 34.70536041]
[-86.30910492 24.23606110]
[-72.55737305 34.15201950]
[-58.06177521 38.00917816]
[-43.56617737 41.86633682]
[-29.07057953 45.72349548]
[-14.78168678 41.51911926]
[-3.43517137 52.54486847]
[3.88481617 51.21692657]
[11.32024479 56.63599014]
[25.73246193 60.79387665]
[40.10572815 56.88767242]
[51.22041321 68.14708710]
[65.63262939 72.30496979]
[80.04484558 76.46286011]
[93.50080872 69.83436584]
[98.98783875 55.87397385]
[104.47486877 41.91358185]
[109.96190643 27.95319366]
[115.44893646 13.99280262]
[120.93596649 0.03241300]
[126.42299652 -13.92797661]
[131.91003418 -27.88836670]
[137.39706421 -41.84875488]
[142.88409424 -55.80914688]
[140.73117065 -71.48318481]
[152.58789062 -80.49804688]
[157.92939758 -94.51475525]
[163.12481689 -108.58627319]
[168.32023621 -122.65779877]
[165.84170532 -138.28366089]
[177.50830078 -147.54322815]
[182.70372009 -161.61474609]
[187.89913940 -175.68626404]
[193.09454346 -189.75778198]
[198.28996277 -203.82929993]
[203.48538208 -217.90081787]
[208.68080139 -231.97233582]
[213.87622070 -246.04385376]
[213.69018555 -262.99679565]
[229.92909241 -267.86859131]
[239.10586548 -253.61294556]
[227.94773865 -240.84844971]
[222.75231934 -226.77693176]
[217.55690002 -212.70541382]
[212.36148071 -198.63388062]
[207.16607666 -184.56236267]
[201.97065735 -170.49084473]
[196.77523804 -156.41932678]
[191.57981873 -142.34780884]
[194.42996216 -127.72843933]
[182.39175415 -117.46237946]
[177.19633484 -103.39086151]
[172.00091553 -89.31934357]
[172.63871765 -81.90726471]
[166.54827881 -75.01100922]
[169.09365845 -60.33551407]
[156.84448242 -50.32211685]
[151.35745239 -36.36172485]
[145.87042236 -22.40133476]
[140.38339233 -8.44094563]
[134.89636230 5.51944447]
[129.40933228 19.47983360]
[123.92229462 33.44022369]
[118.43526459 47.40061569]
[112.94822693 61.36100388]
[107.46119690 75.32139587]
[122.01963806 96.40286255]
[110.90837860 115.36222076]
[114.00669861 130.03874207]
[117.10502625 144.71527100]
[120.20334625 159.39179993]
[134.21342468 165.79678345]
[141.67840576 179.06808472]
[139.91819763 194.01350403]
[129.81594849 204.92599487]
[132.91427612 219.60252380]
[136.01258850 234.27905273]
[139.11091614 248.95558167]
[142.20922852 263.63211060]
[145.30755615 278.30862427]
[148.40588379 292.98516846]
[151.50419617 307.66168213]
[165.65159607 321.96200562]
[159.02125549 340.08569336]
[162.72741699 354.62063599]
[166.43357849 369.15557861]
[170.29074097 383.65118408]
[174.29847717 398.10586548]
[178.45635986 412.51806641]
[182.76394653 426.88626099]
[197.87953186 426.99026489]
[212.29240417 431.54660034]
[224.72100830 440.15017700]
[234.06018066 452.03591919]
[239.47950745 466.14700317]
[240.49708557 481.22863770]
[237.02244568 495.93981934]
[229.36454773 508.97238159]
[218.20433044 519.16754150]
[204.53414917 525.61871338]
[189.56954956 527.75225830]
[174.64117432 525.37847900]
[161.07643127 518.70843506]
[150.08149719 508.33526611]
[142.63404846 495.18127441]
[139.39628601 480.41619873]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 134]
[4 133]
[6 132]
[7 131]
[9 130]
[10 129]
[11 128]
[15 126]
[16 125]
[17 124]
[18 123]
[19 122]
[20 121]
[21 120]
[22 119]
[26 115]
[27 114]
[28 113]
[29 112]
[31 58]
[32 57]
[33 56]
[35 54]
[36 53]
[37 51]
[39 49]
[40 48]
[41 47]
[42 46]
[59 110]
[60 109]
[61 108]
[62 107]
[63 106]
[64 105]
[65 104]
[66 103]
[67 102]
[68 101]
[70 99]
[71 97]
[72 96]
[73 95]
[75 93]
[76 92]
[77 91]
[78 90]
[79 89]
[80 88]
[81 87]
[82 86]
] def

init

% Start Annotations
3 134 0.0 1 colorpair
4 133 0.0 1 colorpair
6 132 0.0 1 colorpair
7 131 0.0 1 colorpair
9 130 0.0 1 colorpair
10 129 0.0 1 colorpair
11 128 0.0 1 colorpair
15 126 0.0 0.2 colorpair
16 125 0.0 1 colorpair
17 124 0.0 1 colorpair
18 123 0.0 1 colorpair
19 122 0.0 1 colorpair
20 121 0.0 1 colorpair
21 120 0.0 1 colorpair
22 119 0.0 1 colorpair
26 115 0.0 1 colorpair
27 114 0.0 1 colorpair
28 113 0.0 1 colorpair
29 112 0.0 1 colorpair
31 58 0.0 1 colorpair
32 57 0.0 1 colorpair
33 56 0.0 1 colorpair
35 54 0.0 1 colorpair
36 53 0.0 1 colorpair
37 51 0.0 1 colorpair
39 49 0.0 1 colorpair
40 48 0.16 1 colorpair
41 47 0.0 1 colorpair
42 46 0.0 0.2 colorpair
59 110 0.0 1 colorpair
60 109 0.0 1 colorpair
61 108 0.0 1 colorpair
62 107 0.0 1 colorpair
63 106 0.0 0.2 colorpair
64 105 0.0 1 colorpair
65 104 0.0 1 colorpair
66 103 0.16 1 colorpair
67 102 0.0 1 colorpair
68 101 0.0 1 colorpair
70 99 0.0 1 colorpair
71 97 0.0 1 colorpair
72 96 0.0 1 colorpair
73 95 0.0 0.2 colorpair
75 93 0.16 1 colorpair
76 92 0.0 1 colorpair
77 91 0.0 1 colorpair
78 90 0.16 1 colorpair
79 89 0.0 1 colorpair
80 88 0.0 1 colorpair
81 87 0.0 1 colorpair
82 86 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
15 126 2 gmark
48 cmark
42 46 2 gmark
63 106 2 gmark
66 cmark
73 95 2 gmark
93 cmark
78 cmark

% End Annotations
showpage
end
%%EOF
