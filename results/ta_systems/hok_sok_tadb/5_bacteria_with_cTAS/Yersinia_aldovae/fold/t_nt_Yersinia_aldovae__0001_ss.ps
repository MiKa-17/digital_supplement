%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:42:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAUAAGGCUACCGUAACGUUGUCUGGCGUUACAGAGAGCCUCGUAUUGAUUAAUUUUAAUACGGGGCUUUUCUCUGCCUGCUUUCAGCCGAACAUAAGCACUUAAAGCAGACAGCCUCAAGCACCCGCCGC\
) } def
/len { sequence length } bind def

/coor [
[97.65653992 259.97451782]
[96.95345306 244.99099731]
[96.25036621 230.00747681]
[83.68718719 224.52604675]
[74.68330383 214.10333252]
[71.05059814 200.74897766]
[73.55789948 187.07090759]
[81.76916504 175.76599121]
[94.11798859 169.08834839]
[93.76634979 154.09246826]
[93.41471863 139.09658813]
[85.85637665 137.03872681]
[78.85016632 133.53497314]
[72.66959381 128.72209167]
[67.55593109 122.78797913]
[53.87188721 128.93183899]
[40.18784332 135.07568359]
[26.50380135 141.21954346]
[12.81975842 147.36340332]
[-0.86428493 153.50724792]
[-14.54832840 159.65110779]
[-28.23237228 165.79496765]
[-37.38606262 179.40165710]
[-53.72587585 178.00787354]
[-60.44280624 163.04743958]
[-50.62705612 149.91033936]
[-34.37622833 152.11091614]
[-20.69218445 145.96707153]
[-7.00814056 139.82321167]
[6.67590284 133.67935181]
[20.35994530 127.53549957]
[34.04399109 121.39164734]
[47.72803116 115.24778748]
[61.41207504 109.10393524]
[61.91141129 88.99231720]
[72.21758270 71.71489716]
[63.92061615 59.21848679]
[55.62364960 46.72207642]
[47.32668304 34.22566223]
[39.02971268 21.72924995]
[30.73274803 9.23283672]
[22.43577957 -3.26357603]
[14.13881302 -15.75998878]
[5.84184504 -28.25640106]
[-2.45512199 -40.75281525]
[-10.75208950 -53.24922562]
[-19.04905701 -65.74564362]
[-27.34602356 -78.24205017]
[-35.64299011 -90.73846436]
[-43.93996048 -103.23487854]
[-52.23692703 -115.73129272]
[-67.77610779 -118.61389923]
[-76.65666199 -131.68721008]
[-73.60992432 -147.19503784]
[-60.44346619 -155.93687439]
[-44.96870804 -152.72634888]
[-36.36655807 -139.46820068]
[-39.74051285 -124.02825928]
[-31.44354630 -111.53184509]
[-23.14657784 -99.03543091]
[-14.84961128 -86.53901672]
[-6.55264378 -74.04261017]
[1.74432349 -61.54619598]
[10.04129124 -49.04978180]
[18.33825874 -36.55336761]
[26.63522530 -24.05695534]
[34.93219376 -11.56054306]
[43.22916031 0.93586951]
[51.52612686 13.43228245]
[59.82309341 25.92869568]
[68.12006378 38.42510986]
[76.41703033 50.92152023]
[84.71399689 63.41793442]
[104.98068237 60.66677856]
[123.92193604 68.38275146]
[136.49722290 84.51251984]
[151.16455078 81.37091827]
[165.83186340 78.22931671]
[177.70547485 67.77330017]
[191.77096558 72.67340088]
[206.43829346 69.53179169]
[221.10562134 66.39019012]
[235.77293396 63.24858856]
[250.44026184 60.10698318]
[265.10757446 56.96537781]
[279.77490234 53.82377625]
[291.64849854 43.36776352]
[305.71401978 48.26786041]
[320.38131714 45.12625504]
[333.69735718 32.47042465]
[350.17126465 38.40137100]
[356.00161743 24.02129173]
[369.18865967 15.84315109]
[384.66168213 17.01160812]
[396.47097778 27.07736778]
[400.07568359 42.16994095]
[394.08969116 56.48592377]
[380.81472778 64.52053070]
[365.35528564 63.18429184]
[353.65585327 52.99101257]
[347.01257324 63.17001724]
[334.81475830 66.15246582]
[323.52291870 59.79357910]
[308.85562134 62.93518066]
[298.03112793 73.16648102]
[282.91650391 68.49109650]
[268.24917603 71.63269806]
[253.58186340 74.77430725]
[238.91453552 77.91590881]
[224.24722290 81.05751038]
[209.57989502 84.19911957]
[194.91258240 87.34072113]
[184.08807373 97.57202148]
[168.97348022 92.89663696]
[154.30615234 96.03823853]
[139.63882446 99.17984009]
[138.78509521 108.22349548]
[135.89535522 116.83545685]
[131.12130737 124.56365967]
[124.71357727 131.00239563]
[117.00850677 135.81369019]
[108.41059113 138.74494934]
[108.76222992 153.74082947]
[109.11386871 168.73670959]
[123.67189789 176.48199463]
[132.31144714 190.41778564]
[132.76896667 206.71440125]
[125.01441193 220.94863892]
[111.23388672 229.30439758]
[111.93696594 244.28791809]
[112.64005280 259.27142334]
[119.42215729 274.80975342]
[106.36856079 285.62823486]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 131]
[2 130]
[3 129]
[9 124]
[10 123]
[11 122]
[15 34]
[16 33]
[17 32]
[18 31]
[19 30]
[20 29]
[21 28]
[22 27]
[36 73]
[37 72]
[38 71]
[39 70]
[40 69]
[41 68]
[42 67]
[43 66]
[44 65]
[45 64]
[46 63]
[47 62]
[48 61]
[49 60]
[50 59]
[51 58]
[76 116]
[77 115]
[78 114]
[80 112]
[81 111]
[82 110]
[83 109]
[84 108]
[85 107]
[86 106]
[88 104]
[89 103]
[91 100]
] def

init

% Start Annotations
1 131 0.0 1 colorpair
2 130 0.0 1 colorpair
3 129 0.0 1 colorpair
9 124 0.0 1 colorpair
10 123 0.0 1 colorpair
11 122 0.0 1 colorpair
15 34 0.0 1 colorpair
16 33 0.0 1 colorpair
17 32 0.0 1 colorpair
18 31 0.0 1 colorpair
19 30 0.0 1 colorpair
20 29 0.0 1 colorpair
21 28 0.0 1 colorpair
22 27 0.0 1 colorpair
36 73 0.0 1 colorpair
37 72 0.0 1 colorpair
38 71 0.0 1 colorpair
39 70 0.0 1 colorpair
40 69 0.0 1 colorpair
41 68 0.0 1 colorpair
42 67 0.0 1 colorpair
43 66 0.0 1 colorpair
44 65 0.0 1 colorpair
45 64 0.0 1 colorpair
46 63 0.0 1 colorpair
47 62 0.0 1 colorpair
48 61 0.0 1 colorpair
49 60 0.0 1 colorpair
50 59 0.0 1 colorpair
51 58 0.0 1 colorpair
76 116 0.0 1 colorpair
77 115 0.0 1 colorpair
78 114 0.0 1 colorpair
80 112 0.0 1 colorpair
81 111 0.0 1 colorpair
82 110 0.0 1 colorpair
83 109 0.0 1 colorpair
84 108 0.0 1 colorpair
85 107 0.0 1 colorpair
86 106 0.0 1 colorpair
88 104 0.0 1 colorpair
89 103 0.0 1 colorpair
91 100 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
