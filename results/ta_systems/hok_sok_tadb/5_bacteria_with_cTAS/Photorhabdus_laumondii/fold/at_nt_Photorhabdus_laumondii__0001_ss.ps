%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:16:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___________________________________________________UAACAAGGAAAGAAAUCUGUAAACUCCACAUCAAAAGAGGCAAAACAGAGGUUGCGGCAAUCAUGGAUUACGAACCCAG_____GGAAAAGCAAC____GGCGGGAAGC___AACCCCCGCCAUCUC__AUGUUGUUAAG_CAUGGCUCUCAAGCACCCU______________\
) } def
/len { sequence length } bind def

/coor [
[109.15782928 387.85195923]
[102.91492462 401.50201416]
[95.49005127 414.54690552]
[86.94131470 426.88449097]
[77.33561707 438.41830444]
[66.74814606 449.05798340]
[55.26176071 458.72030640]
[42.96635818 467.32965088]
[29.95816994 474.81860352]
[16.33900261 481.12860107]
[2.21544981 486.21023560]
[-12.30195332 490.02371216]
[-27.09958458 492.53921509]
[-42.06163025 493.73703003]
[-57.07099152 493.60781860]
[-72.01020050 492.15255737]
[-86.76232147 489.38262939]
[-101.21191406 485.31976318]
[-115.24588013 479.99572754]
[-128.75439453 473.45217896]
[-141.63169861 465.74035645]
[-153.77705383 456.92059326]
[-165.09536743 447.06195068]
[-175.49807739 436.24151611]
[-184.90377808 424.54406738]
[-193.23881531 412.06109619]
[-200.43798828 398.89031982]
[-206.44494629 385.13479614]
[-211.21266174 370.90222168]
[-214.70384216 356.30395508]
[-216.89114380 341.45425415]
[-217.75746155 326.46936035]
[-217.29600525 311.46652222]
[-215.51040649 296.56320190]
[-212.41461182 281.87600708]
[-208.03286743 267.51989746]
[-202.39945984 253.60722351]
[-195.55848694 240.24688721]
[-187.56347656 227.54344177]
[-178.47702026 215.59631348]
[-168.37022400 204.49900818]
[-157.32218933 194.33837891]
[-145.41937256 185.19393921]
[-132.75494385 177.13726807]
[-119.42802429 170.23143005]
[-105.54290771 164.53044128]
[-91.20826721 160.07896423]
[-76.53629303 156.91180420]
[-61.64182281 155.05375671]
[-46.64142227 154.51936340]
[-31.65248871 155.31282043]
[-16.79233932 157.42791748]
[-2.17727566 160.84806824]
[12.07831955 165.54653931]
[25.86287308 171.48655701]
[39.06850052 178.62161255]
[47.33692932 166.10629272]
[55.60535431 153.59097290]
[63.87377930 141.07565308]
[72.14220428 128.56034851]
[64.76152039 120.36380768]
[59.78982925 110.27377319]
[57.70739365 98.99748993]
[58.78715134 87.36193848]
[63.06562424 76.25322723]
[70.33143616 66.54913330]
[59.36271286 56.31746674]
[48.39398956 46.08579636]
[37.42526245 35.85412598]
[26.45653915 25.62245750]
[15.48781300 15.39078712]
[4.51908779 5.15911770]
[-8.77256584 8.78601074]
[-22.01627350 5.40125084]
[-31.78192329 -4.00820255]
[-35.59484482 -16.90952682]
[-32.56235504 -29.90517235]
[-43.38779449 -40.28832245]
[-54.21323776 -50.67147446]
[-65.03868103 -61.05462646]
[-80.56438446 -59.18745422]
[-93.62963104 -67.78009033]
[-98.06539917 -82.77536011]
[-91.77725983 -97.09294128]
[-77.73427582 -103.97252655]
[-62.56711578 -100.16577148]
[-53.43725204 -87.47012329]
[-54.65552521 -71.88006592]
[-43.83008575 -61.49691391]
[-33.00464249 -51.11376572]
[-22.17920303 -40.73061371]
[-6.11864614 -44.15085220]
[8.96535015 -37.25152206]
[17.04139709 -22.57334900]
[14.75075722 -5.80960798]
[25.71948242 4.42206192]
[36.68820953 14.65373135]
[47.65693283 24.88540077]
[58.62565994 35.11706924]
[69.59438324 45.34873962]
[80.56311035 55.58041000]
[95.06983185 51.76530075]
[99.58593750 37.46129227]
[104.10205078 23.15727997]
[108.61816406 8.85326767]
[113.13426971 -5.45074415]
[117.65038300 -19.75475502]
[112.40393829 -31.52996254]
[116.45207214 -43.34620285]
[127.11104584 -49.05139542]
[131.82554626 -63.29124832]
[136.54005432 -77.53110504]
[141.25456238 -91.77095795]
[134.70907593 -114.02591705]
[152.01605225 -128.32722473]
[155.73023987 -142.86010742]
[159.44442749 -157.39299011]
[148.86047363 -168.61721802]
[146.04740906 -183.78594971]
[151.90289307 -198.05888367]
[164.55847168 -206.88160706]
[179.97576904 -207.43878174]
[193.23518372 -199.55265808]
[200.10571289 -185.73963928]
[198.39497375 -170.40740967]
[188.64884949 -158.44845581]
[173.97732544 -153.67880249]
[170.26312256 -139.14591980]
[166.54893494 -124.61303711]
[171.56425476 -119.62187195]
[174.57281494 -113.14263916]
[175.16078186 -105.95497894]
[173.20877075 -98.94190216]
[168.91233826 -92.98127747]
[162.76344299 -88.83599854]
[155.49441528 -87.05644989]
[150.77990723 -72.81659698]
[146.06539917 -58.57674026]
[141.35089111 -44.33688736]
[145.82116699 -27.36207008]
[131.95439148 -15.23864460]
[127.43828583 -0.93463331]
[122.92217255 13.36937809]
[118.40605927 27.67338943]
[113.88995361 41.97740173]
[109.37384033 56.28141403]
[118.57176971 58.42905045]
[127.27198029 62.52328110]
[135.06059265 68.44731903]
[141.55143738 75.99611664]
[146.40489197 84.88297272]
[161.08000183 81.77789307]
[175.75509644 78.67282104]
[190.43019104 75.56774139]
[205.10528564 72.46266174]
[219.78038025 69.35758972]
[234.45549011 66.25251007]
[249.13058472 63.14743423]
[256.32461548 49.26291275]
[270.78015137 43.29873657]
[285.67172241 48.07101059]
[293.96801758 61.32641220]
[291.75173950 76.80614471]
[280.06936646 87.20115662]
[264.43698120 87.60323334]
[252.23565674 77.82253265]
[237.56056213 80.92761230]
[222.88546753 84.03268433]
[208.21035767 87.13776398]
[193.53526306 90.24284363]
[178.86016846 93.34791565]
[164.18507385 96.45299530]
[149.50997925 99.55806732]
[147.30168152 106.72560120]
[161.66894531 111.03625488]
[176.03620911 115.34690857]
[190.40347290 119.65756226]
[204.77073669 123.96821594]
[219.13800049 128.27886963]
[233.50526428 132.58952332]
[248.50122070 132.93759155]
[253.17109680 147.19213867]
[241.28799438 156.34593201]
[228.69749451 148.19427490]
[214.39543152 143.67201233]
[200.09335327 139.14973450]
[185.79129028 134.62747192]
[171.48922729 130.10519409]
[157.18716431 125.58292389]
[142.88510132 121.06065369]
[140.67680359 128.22817993]
[148.86618042 132.24942017]
[151.12774658 139.27700806]
[161.35942078 150.24572754]
[171.59109497 161.21446228]
[181.82275391 172.18318176]
[197.74163818 174.17535400]
[205.98608398 187.93794250]
[200.23164368 202.91346741]
[184.89265442 207.61398315]
[171.73585510 198.43365479]
[170.85403442 182.41485596]
[160.62236023 171.44612122]
[150.39070129 160.47740173]
[140.15902710 149.50868225]
[129.85136414 138.61132812]
[105.82440948 143.96681213]
[84.65752411 136.82876587]
[76.38909912 149.34408569]
[68.12066650 161.85940552]
[59.85224533 174.37472534]
[51.58381653 186.89002991]
[63.32741928 196.23805237]
[74.19887543 206.58740234]
[84.11311340 217.85707092]
[92.99252319 229.95887756]
[100.76761627 242.79809570]
[107.37754059 256.27423096]
[112.77056885 270.28186035]
[116.90448761 284.71127319]
[119.74694061 299.44958496]
[121.27568054 314.38146973]
[121.47875214 329.39001465]
[120.35456085 344.35775757]
[117.91190338 359.16760254]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 212]
[57 211]
[58 210]
[59 209]
[60 208]
[66 101]
[67 100]
[68 99]
[69 98]
[70 97]
[71 96]
[72 95]
[77 91]
[78 90]
[79 89]
[80 88]
[102 146]
[103 145]
[104 144]
[105 143]
[106 142]
[107 141]
[110 139]
[111 138]
[112 137]
[113 136]
[115 129]
[116 128]
[117 127]
[151 173]
[152 172]
[153 171]
[154 170]
[155 169]
[156 168]
[157 167]
[158 166]
[191 206]
[193 205]
[194 204]
[195 203]
[196 202]
] def

init

% Start Annotations
56 212 0.0 0.6 colorpair
57 211 0.0 1 colorpair
58 210 0.0 1 colorpair
59 209 0.0 1 colorpair
60 208 0.0 0.6 colorpair
66 101 0.0 0.6 colorpair
67 100 0.0 1 colorpair
68 99 0.0 1 colorpair
69 98 0.16 1 colorpair
70 97 0.0 1 colorpair
71 96 0.0 1 colorpair
72 95 0.0 0.6 colorpair
77 91 0.16 1 colorpair
78 90 0.0 1 colorpair
79 89 0.0 0.6 colorpair
80 88 0.16 1 colorpair
102 146 0.0 1 colorpair
103 145 0.0 1 colorpair
104 144 0.0 1 colorpair
105 143 0.0 1 colorpair
106 142 0.0 1 colorpair
107 141 0.0 0.6 colorpair
110 139 0.0 0.6 colorpair
111 138 0.16 1 colorpair
112 137 0.0 0.6 colorpair
113 136 0.0 1 colorpair
115 129 0.0 1 colorpair
116 128 0.0 1 colorpair
117 127 0.0 1 colorpair
151 173 0.0 1 colorpair
152 172 0.0 1 colorpair
153 171 0.0 1 colorpair
154 170 0.0 1 colorpair
155 169 0.0 1 colorpair
156 168 0.0 1 colorpair
157 167 0.16 1 colorpair
158 166 0.16 1 colorpair
191 206 0.0 1 colorpair
193 205 0.0 1 colorpair
194 204 0.0 0.6 colorpair
195 203 0.0 1 colorpair
196 202 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
56 212 1 gmark
60 208 1 gmark
66 101 1 gmark
98 cmark
72 95 1 gmark
77 cmark
79 89 1 gmark
80 cmark
107 141 1 gmark
110 139 1 gmark
111 cmark
138 cmark
112 137 1 gmark
157 cmark
167 cmark
158 cmark
166 cmark
194 204 1 gmark

% End Annotations
showpage
end
%%EOF
