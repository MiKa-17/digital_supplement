%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:16:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUAUUUAGUUUGAUCAUUAUUUGUGUGACAUUACUCAUAUUCACGUGGAUAACAAGGGGUUCAAUCUGUAAACUCCAUAUCAAACGAGGUAAUACAGAGGUUGCGGCAAUCAUGGCUUACGAAUCCAGCGACAGGUAAGGCAACCUUAGGCGGGAGGUUUUUACUCCCGCCCUUUUAGAUGUUGUUAUGACUUGGUUCUCAGGC_CCCU______________\
) } def
/len { sequence length } bind def

/coor [
[-125.08717346 491.27017212]
[-139.92823792 489.09240723]
[-154.52919006 485.65548706]
[-168.78335571 480.98443604]
[-182.58665466 475.11343384]
[-195.83827209 468.08529663]
[-208.44143677 459.95138550]
[-220.30409241 450.77111816]
[-231.33959961 440.61151123]
[-241.46737671 429.54678345]
[-250.61343384 417.65774536]
[-258.71099854 405.03118896]
[-265.70092773 391.75939941]
[-271.53216553 377.93923950]
[-276.16210938 363.67166138]
[-279.55697632 349.06088257]
[-281.69195557 334.21359253]
[-282.55148315 319.23825073]
[-282.12921143 304.24420166]
[-280.42831421 289.34094238]
[-277.46115112 274.63732910]
[-273.24938965 260.24078369]
[-267.82382202 246.25637817]
[-261.22406006 232.78628540]
[-253.49830627 219.92889404]
[-244.70298767 207.77807617]
[-234.90232849 196.42259216]
[-224.16790771 185.94537354]
[-212.57812500 176.42291260]
[-200.21763611 167.92478943]
[-187.17669678 160.51306152]
[-173.55055237 154.24183655]
[-159.43872070 149.15693665]
[-144.94425964 145.29550171]
[-130.17303467 142.68571472]
[-115.23292542 141.34663391]
[-100.23303986 141.28807068]
[-85.28292847 142.51042175]
[-70.49177551 145.00476074]
[-55.96760178 148.75289917]
[-41.81649017 153.72743225]
[-28.14178467 159.89204407]
[-15.04335690 167.20170593]
[-2.61686921 175.60304260]
[9.04692364 185.03468323]
[19.86283875 195.42774963]
[29.75188255 206.70635986]
[38.64183426 218.78811646]
[46.46776199 231.58477783]
[53.17251968 245.00291443]
[58.70467377 258.93743896]
[61.80974960 244.26234436]
[64.91482544 229.58724976]
[68.01990509 214.91213989]
[71.12497711 200.23704529]
[74.23005676 185.56195068]
[77.33513641 170.88685608]
[72.40003204 156.83358765]
[82.82645416 144.93399048]
[71.34790802 139.27053833]
[61.65844727 130.70314026]
[54.48453522 119.78017426]
[50.38830185 107.22933197]
[49.72401810 93.90927887]
[52.60858536 80.75089264]
[58.90841293 68.69225311]
[68.24400330 58.61177444]
[57.27527618 48.38010788]
[46.30654907 38.14843750]
[35.33782578 27.91676712]
[24.36910057 17.68509674]
[13.40037441 7.45342731]
[0.10872105 11.08032036]
[-13.13498592 7.69556046]
[-22.90063667 -1.71389282]
[-26.71356010 -14.61521816]
[-23.68106651 -27.61086273]
[-34.50650787 -37.99401474]
[-49.00051498 -33.07645798]
[-64.11781311 -35.46933365]
[-76.38455963 -44.62277985]
[-82.98194885 -58.43339539]
[-82.39393616 -73.72760010]
[-74.75566101 -86.99090576]
[-61.82232666 -95.17549896]
[-46.56592941 -96.40061951]
[-32.49227524 -90.38474274]
[-22.83538246 -78.51026917]
[-19.81433868 -63.50587463]
[-24.12335777 -48.81945419]
[-13.29791546 -38.43630600]
[2.76264071 -41.85654449]
[17.84663582 -34.95721054]
[25.92268562 -20.27903938]
[23.63204384 -3.51529813]
[34.60076904 6.71637154]
[45.56949615 16.94804192]
[56.53821945 27.17971039]
[67.50694275 37.41138077]
[78.47566986 47.64305115]
[92.98239136 43.82794189]
[97.49850464 29.52393150]
[102.01461029 15.21991920]
[106.53072357 0.91590756]
[111.04683685 -13.38810349]
[115.56294250 -27.69211578]
[106.56958008 -38.12963104]
[103.92615509 -51.54099655]
[108.21775055 -64.40521240]
[118.22287750 -73.39854431]
[131.25874329 -76.25321198]
[135.97323608 -90.49306488]
[140.68774414 -104.73291779]
[130.63468933 -118.34196472]
[130.67778015 -135.09515381]
[140.60180664 -148.38581848]
[156.33398438 -153.09089661]
[160.85009766 -167.39489746]
[165.36621094 -181.69891357]
[155.42239380 -193.49400330]
[153.45668030 -208.79560852]
[160.09632874 -222.72108459]
[173.22265625 -230.82682800]
[188.64709473 -230.52633667]
[201.44775391 -221.91549683]
[207.54000854 -207.74200439]
[204.97982788 -192.52854919]
[194.58415222 -181.12971497]
[179.67022705 -177.18280029]
[175.15411377 -162.87879944]
[170.63800049 -148.57478333]
[179.53399658 -138.62771606]
[182.37872314 -125.47895050]
[178.32527161 -112.53772736]
[168.32957458 -103.21364594]
[154.92759705 -100.01840973]
[150.21308899 -85.77855682]
[145.49859619 -71.53870392]
[155.49687195 -58.51281738]
[155.75962830 -41.92792130]
[145.98500061 -28.32174873]
[129.86695862 -23.17600441]
[125.35084534 -8.87199306]
[120.83473206 5.43201828]
[116.31862640 19.73603058]
[111.80251312 34.04004288]
[107.28639984 48.34405136]
[120.22664642 53.01748276]
[131.24864197 60.79404831]
[139.64776611 71.00324249]
[144.93399048 82.82645416]
[159.60910034 79.72137451]
[174.28419495 76.61629486]
[188.95928955 73.51122284]
[203.63438416 70.40614319]
[218.30947876 67.30106354]
[232.98458862 64.19599152]
[247.65968323 61.09091187]
[254.85371399 47.20639038]
[269.30923462 41.24221420]
[284.20083618 46.01448822]
[292.49713135 59.26988983]
[290.28085327 74.74962616]
[278.59848022 85.14463043]
[262.96606445 85.54670715]
[250.76475525 75.76600647]
[236.08966064 78.87108612]
[221.41456604 81.97616577]
[206.73947144 85.08123779]
[192.06436157 88.18631744]
[177.38926697 91.29139709]
[162.71417236 94.39646912]
[148.03907776 97.50154877]
[147.67201233 106.43228912]
[145.65902710 115.14095306]
[142.06961060 123.32686615]
[137.02770996 130.70738220]
[130.70738220 137.02770996]
[123.32686615 142.06961060]
[115.14095306 145.65902710]
[106.43228912 147.67201233]
[97.50154877 148.03907776]
[102.21455383 163.14199829]
[92.01023102 173.99192810]
[88.90515137 188.66702271]
[85.80007935 203.34211731]
[82.69499969 218.01722717]
[79.58992767 232.69232178]
[76.48484802 247.36741638]
[73.37976837 262.04251099]
[74.83615875 264.72750854]
[75.60599518 267.56329346]
[75.69798279 270.38418579]
[85.92964935 281.35293579]
[96.16132355 292.32165527]
[106.39299011 303.29037476]
[122.31187439 305.28256226]
[130.55630493 319.04513550]
[124.80187988 334.02066040]
[109.46289062 338.72116089]
[96.30609131 329.54083252]
[95.42426300 313.52203369]
[85.19259644 302.55331421]
[74.96092224 291.58459473]
[64.72925568 280.61587524]
[67.18098450 295.41415405]
[68.36026764 310.36770630]
[68.25848389 325.36737061]
[66.87638855 340.30355835]
[64.22406006 355.06719971]
[60.32088089 369.55047607]
[55.19535446 383.64761353]
[48.88491058 397.25561523]
[41.43563843 410.27517700]
[32.90194321 422.61114502]
[23.34614944 434.17343140]
[12.83804512 444.87762451]
[1.45437467 454.64553833]
[-10.72172451 463.40582275]
[-23.60132599 471.09451294]
[-37.09036636 477.65542603]
[-51.09032822 483.04071045]
[-65.49897003 487.21096802]
[-80.21105957 490.13577271]
[-95.11914825 491.79373169]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[51 190]
[52 189]
[53 188]
[54 187]
[55 186]
[56 185]
[57 184]
[59 182]
[67 100]
[68 99]
[69 98]
[70 97]
[71 96]
[72 95]
[77 91]
[78 90]
[101 147]
[102 146]
[103 145]
[104 144]
[105 143]
[106 142]
[111 138]
[112 137]
[113 136]
[117 131]
[118 130]
[119 129]
[151 173]
[152 172]
[153 171]
[154 170]
[155 169]
[156 168]
[157 167]
[158 166]
[193 205]
[194 204]
[195 203]
[196 202]
] def

init

% Start Annotations
51 190 0.0 0.6 colorpair
52 189 0.16 1 colorpair
53 188 0.0 0.6 colorpair
54 187 0.0 1 colorpair
55 186 0.0 1 colorpair
56 185 0.16 1 colorpair
57 184 0.0 1 colorpair
59 182 0.0 1 colorpair
67 100 0.0 1 colorpair
68 99 0.0 1 colorpair
69 98 0.16 1 colorpair
70 97 0.0 1 colorpair
71 96 0.0 1 colorpair
72 95 0.0 0.6 colorpair
77 91 0.16 1 colorpair
78 90 0.0 1 colorpair
101 147 0.0 0.6 colorpair
102 146 0.0 1 colorpair
103 145 0.0 1 colorpair
104 144 0.0 1 colorpair
105 143 0.0 1 colorpair
106 142 0.0 1 colorpair
111 138 0.16 1 colorpair
112 137 0.0 0.6 colorpair
113 136 0.0 1 colorpair
117 131 0.0 0.6 colorpair
118 130 0.0 0.6 colorpair
119 129 0.0 1 colorpair
151 173 0.0 1 colorpair
152 172 0.0 1 colorpair
153 171 0.0 1 colorpair
154 170 0.0 1 colorpair
155 169 0.0 1 colorpair
156 168 0.0 1 colorpair
157 167 0.16 1 colorpair
158 166 0.16 1 colorpair
193 205 0.0 1 colorpair
194 204 0.0 0.6 colorpair
195 203 0.0 1 colorpair
196 202 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
51 190 1 gmark
189 cmark
53 188 1 gmark
56 cmark
98 cmark
72 95 1 gmark
77 cmark
101 147 1 gmark
111 cmark
138 cmark
112 137 1 gmark
117 131 1 gmark
118 130 1 gmark
157 cmark
167 cmark
158 cmark
166 cmark
194 204 1 gmark

% End Annotations
showpage
end
%%EOF
