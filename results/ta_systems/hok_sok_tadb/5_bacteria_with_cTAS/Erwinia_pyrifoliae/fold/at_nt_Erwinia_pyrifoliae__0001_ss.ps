%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:27:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGUUACCUGGUGCCUUGUUAUCGUCUGUCUGACGAUACUGGCAUUCACACUGUUGACCCGCCAUUCGCUUUACGAACUGCGAAUACGGGAUGGUAUCAGGGAGGUUGCGGCAGUUAUGGCUUGUGAGCCCAACCAGUAAGGGCAACCGGCGGGGAGUCAUCCCCGCCACCGCCGUGUUGAGUUGAGGCGUUCCCAG\
) } def
/len { sequence length } bind def

/coor [
[217.21934509 113.54399109]
[213.59457397 111.10971069]
[198.60212708 110.63379669]
[185.63577271 117.96338654]
[172.08802795 109.79213715]
[157.09558105 109.31621552]
[142.10313416 108.84029388]
[127.11068726 108.36437988]
[118.58435059 127.68344116]
[96.59049988 138.16217041]
[69.88532257 131.09234619]
[58.24312592 140.55064392]
[46.60092926 150.00892639]
[34.95873260 159.46722412]
[23.31653404 168.92550659]
[21.21225548 181.65795898]
[11.31174660 189.29566956]
[-0.73928505 188.17263794]
[-12.53008175 197.44502258]
[-17.34794998 205.21842957]
[-24.58230591 206.76921082]
[-36.51873398 215.85336304]
[-48.45516205 224.93750000]
[-60.39159012 234.02165222]
[-72.32801819 243.10578918]
[-84.26444244 252.18994141]
[-87.83769226 267.82998657]
[-102.35536957 274.65762329]
[-116.68076324 267.43524170]
[-119.82465363 251.70326233]
[-109.37531281 239.52989197]
[-93.34858704 240.25350952]
[-81.41216278 231.16937256]
[-69.47573090 222.08522034]
[-57.53930664 213.00108337]
[-45.60287857 203.91693115]
[-33.66645050 194.83279419]
[-21.80246544 185.65423584]
[-10.01167011 176.38185120]
[-4.38297367 159.76483154]
[13.85824394 157.28330994]
[25.50044060 147.82502747]
[37.14263916 138.36672974]
[48.78483582 128.90844727]
[60.42703247 119.45015717]
[55.85973358 105.16240692]
[40.88993454 104.21104431]
[25.92013359 103.25968933]
[14.22564983 113.89051819]
[-1.55653596 113.05496216]
[-12.06313229 101.24873352]
[-11.06076241 85.47626495]
[0.85588557 75.09507751]
[16.61687660 76.26415253]
[26.87149239 88.28988647]
[41.84129333 89.24124908]
[56.81109238 90.19260406]
[62.93387604 76.49912262]
[52.24346542 65.97699738]
[41.55305099 55.45487595]
[30.86264038 44.93275070]
[17.97541809 44.25268173]
[9.28741264 35.25972366]
[9.06779575 23.15847206]
[-1.45432746 12.46805859]
[-11.97645092 1.77764606]
[-22.49857330 -8.91276646]
[-33.02069855 -19.60317993]
[-43.54281998 -30.29359245]
[-58.38908768 -26.35862350]
[-73.20960999 -30.38946152]
[-84.01774597 -41.30183029]
[-87.90615845 -56.16035461]
[-83.82888794 -70.96817017]
[-72.88269043 -81.74205017]
[-58.01205063 -85.58386993]
[-43.21708679 -81.46019745]
[-32.47757339 -70.48029327]
[-28.68238449 -55.59767914]
[-32.85240936 -40.81571579]
[-22.33028412 -30.12530327]
[-11.80816174 -19.43489075]
[-1.28603816 -8.74447727]
[9.23608494 1.94593537]
[19.75820923 12.63634777]
[36.89671707 16.38856125]
[41.38476181 34.24234009]
[52.07517624 44.76446152]
[62.76558685 55.28658676]
[73.45600128 65.80870819]
[100.18787384 61.68628311]
[120.70425415 73.86410522]
[127.58660889 93.37192535]
[142.57905579 93.84784698]
[157.57150269 94.32376862]
[172.56394958 94.79968262]
[186.60266113 87.50413513]
[199.07804871 95.64134979]
[214.07049561 96.11726379]
[229.07049561 96.11726379]
[244.06294250 95.64134979]
[259.05538940 95.16542816]
[274.04782104 94.68950653]
[289.04028320 94.21359253]
[304.02847290 93.61874390]
[319.01150513 92.90502167]
[333.99450684 92.19129181]
[347.41088867 83.80611420]
[360.49191284 90.92906189]
[375.47491455 90.21533203]
[390.45791626 89.50160217]
[405.44091797 88.78787994]
[414.52273560 74.52447510]
[430.16003418 68.54048157]
[446.12380981 73.00762177]
[456.18054199 85.97602081]
[471.15032959 85.02465820]
[486.12014771 84.07330322]
[501.08993530 83.12194061]
[516.05975342 82.17058563]
[531.02954102 81.21922302]
[533.32727051 69.51251984]
[539.49304199 58.78744507]
[549.11376953 50.32593155]
[561.35223389 45.23844147]
[575.01702881 44.32450485]
[588.67822266 47.96147537]
[600.81683350 56.03593445]
[614.65216064 50.24075699]
[628.48748779 44.44557953]
[642.32275391 38.65040207]
[644.90039062 23.43989754]
[655.30908203 12.05297184]
[670.22753906 8.12315083]
[684.89532471 12.90442753]
[694.63195801 24.87111282]
[696.33050537 40.20468140]
[689.44903564 54.01224899]
[676.18334961 61.88787079]
[660.76654053 61.31845856]
[648.11791992 52.48571777]
[634.28265381 58.28089523]
[620.44732666 64.07607269]
[606.61199951 69.87124634]
[606.90942383 77.36534882]
[621.89764404 76.77073669]
[622.49200439 91.75895691]
[607.50427246 92.35355377]
[607.80169678 99.84764862]
[622.05273438 104.52815247]
[636.30383301 109.20865631]
[650.55487061 113.88915253]
[664.80596924 118.56965637]
[679.05700684 123.25016022]
[693.30810547 127.93066406]
[707.55914307 132.61116028]
[723.49114990 128.72471619]
[734.62573242 140.76434326]
[729.50866699 156.34469604]
[713.40386963 159.43804932]
[702.87866211 146.86222839]
[688.62756348 142.18173218]
[674.37652588 137.50122070]
[660.12542725 132.82072449]
[645.87438965 128.14022827]
[631.62335205 123.45971680]
[617.37225342 118.77922058]
[603.12121582 114.09871674]
[582.23858643 126.88390350]
[559.06750488 126.63197327]
[540.68438721 114.80320740]
[531.98089600 96.18902588]
[517.01110840 97.14038086]
[502.04129028 98.09174347]
[487.07150269 99.04309845]
[472.10168457 99.99446106]
[457.13189697 100.94581604]
[451.05883789 112.84193420]
[439.80892944 120.24085999]
[426.26419067 121.11907196]
[413.95825195 115.14021301]
[406.15466309 103.77088928]
[391.17166138 104.48461914]
[376.18862915 105.19834137]
[361.20562744 105.91207123]
[348.86093140 114.24620056]
[334.70822144 107.17430115]
[319.72521973 107.88803101]
[304.74221802 108.60176086]
[298.20355225 112.06394196]
[289.51620483 109.20603943]
[274.52374268 109.68196106]
[259.53131104 110.15787506]
[244.53886414 110.63379669]
[229.54640198 111.10971069]
[227.52890015 113.07051086]
[224.60903931 114.34587860]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 99]
[3 98]
[5 96]
[6 95]
[7 94]
[8 93]
[11 45]
[12 44]
[13 43]
[14 42]
[15 41]
[18 39]
[19 38]
[21 37]
[22 36]
[23 35]
[24 34]
[25 33]
[26 32]
[46 57]
[47 56]
[48 55]
[58 90]
[59 89]
[60 88]
[61 87]
[64 85]
[65 84]
[66 83]
[67 82]
[68 81]
[69 80]
[100 195]
[101 194]
[102 193]
[103 192]
[104 191]
[105 189]
[106 188]
[107 187]
[109 185]
[110 184]
[111 183]
[112 182]
[116 177]
[117 176]
[118 175]
[119 174]
[120 173]
[121 172]
[128 144]
[129 143]
[130 142]
[131 141]
[149 168]
[150 167]
[151 166]
[152 165]
[153 164]
[154 163]
[155 162]
[156 161]
] def

init

% Start Annotations
2 99 0.0 1 colorpair
3 98 0.0 1 colorpair
5 96 0.0 1 colorpair
6 95 0.0 1 colorpair
7 94 0.0 1 colorpair
8 93 0.0 1 colorpair
11 45 0.0 1 colorpair
12 44 0.0 1 colorpair
13 43 0.0 1 colorpair
14 42 0.0 1 colorpair
15 41 0.0 1 colorpair
18 39 0.0 1 colorpair
19 38 0.0 1 colorpair
21 37 0.0 1 colorpair
22 36 0.0 1 colorpair
23 35 0.0 1 colorpair
24 34 0.0 1 colorpair
25 33 0.0 1 colorpair
26 32 0.0 1 colorpair
46 57 0.0 1 colorpair
47 56 0.0 1 colorpair
48 55 0.0 1 colorpair
58 90 0.0 1 colorpair
59 89 0.0 1 colorpair
60 88 0.0 1 colorpair
61 87 0.0 1 colorpair
64 85 0.0 1 colorpair
65 84 0.0 1 colorpair
66 83 0.0 1 colorpair
67 82 0.0 1 colorpair
68 81 0.0 1 colorpair
69 80 0.0 1 colorpair
100 195 0.0 1 colorpair
101 194 0.0 1 colorpair
102 193 0.0 1 colorpair
103 192 0.0 1 colorpair
104 191 0.0 1 colorpair
105 189 0.0 1 colorpair
106 188 0.0 1 colorpair
107 187 0.0 1 colorpair
109 185 0.0 1 colorpair
110 184 0.0 1 colorpair
111 183 0.0 1 colorpair
112 182 0.0 1 colorpair
116 177 0.0 1 colorpair
117 176 0.0 1 colorpair
118 175 0.0 1 colorpair
119 174 0.0 1 colorpair
120 173 0.0 1 colorpair
121 172 0.0 1 colorpair
128 144 0.0 1 colorpair
129 143 0.0 1 colorpair
130 142 0.0 1 colorpair
131 141 0.0 1 colorpair
149 168 0.0 1 colorpair
150 167 0.0 1 colorpair
151 166 0.0 1 colorpair
152 165 0.0 1 colorpair
153 164 0.0 1 colorpair
154 163 0.0 1 colorpair
155 162 0.0 1 colorpair
156 161 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
