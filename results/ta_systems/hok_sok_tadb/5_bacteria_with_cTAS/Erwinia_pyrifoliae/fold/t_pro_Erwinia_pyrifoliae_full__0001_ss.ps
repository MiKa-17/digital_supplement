%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:27:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_______________________GAAGCCGCAAAGUUCUGUUACCUGGUGCCUUGUUAUCGUCUGUCUGACGAUACUGGCAUUCACACUGUUGACCCGCCAUUCGCUUUACGAACUGCGAAUACGGGAUGGUAUCAGGGAGGUUGCGGCAGUUAUGGCUUGUGAGCCCAAC___\
) } def
/len { sequence length } bind def

/coor [
[61.04249573 523.86694336]
[54.84636307 520.07128906]
[49.05189514 515.68511963]
[43.71519470 510.75061035]
[38.88794708 505.31524658]
[34.61693954 499.43142700]
[30.94359589 493.15585327]
[27.90357971 486.54901123]
[25.52644539 479.67465210]
[23.83535194 472.59912109]
[22.84683990 465.39071655]
[22.57066345 458.11898804]
[23.00970078 450.85421753]
[24.15991974 443.66659546]
[26.01041794 436.62554932]
[28.54351997 429.79916382]
[31.73495674 423.25344849]
[35.55408859 417.05169678]
[39.96420288 411.25396729]
[44.92287064 405.91638184]
[50.38234329 401.09060669]
[56.29002762 396.82345581]
[62.58898163 393.15628052]
[69.21846008 390.12469482]
[76.11452484 387.75817871]
[83.21063232 386.07977295]
[90.43827057 385.10592651]
[90.70754242 370.10833740]
[90.97680664 355.11077881]
[91.24607086 340.11318970]
[91.51533508 325.11560059]
[91.78459930 310.11801147]
[92.05386353 295.12042236]
[78.64702606 285.67419434]
[73.44887543 269.94442749]
[78.69107819 254.05438232]
[92.50000000 244.31427002]
[92.50000000 229.31427002]
[92.50000000 214.31427002]
[92.50000000 199.31427002]
[84.76270294 186.58700562]
[92.50000000 172.78683472]
[92.50000000 157.78683472]
[92.50000000 142.78683472]
[92.50000000 127.78682709]
[72.73866272 119.27601624]
[62.11597061 97.10613251]
[69.35533905 70.40693665]
[58.51341248 60.04100037]
[47.67148972 49.67506027]
[36.82956696 39.30912018]
[25.98764420 28.94318008]
[13.07715416 28.44648933]
[4.25817633 19.56138039]
[3.88382483 7.44965076]
[-6.77027225 -3.10924172]
[-15.09810543 -6.94487810]
[-17.51871490 -13.95459843]
[-27.98155212 -24.70304108]
[-38.44438934 -35.45148468]
[-48.90722656 -46.19992828]
[-59.37006760 -56.94837189]
[-69.83290100 -67.69681549]
[-85.79058838 -69.34967804]
[-94.32611084 -82.93365479]
[-88.89176178 -98.02826691]
[-73.65630341 -103.05422974]
[-60.30707550 -94.15605164]
[-59.08446121 -78.15965271]
[-48.62162399 -67.41120911]
[-38.15878677 -56.66276550]
[-27.69594765 -45.91432190]
[-17.23311043 -35.16587830]
[-6.77027225 -24.41743660]
[3.78862047 -13.76333904]
[14.44271755 -3.20444608]
[31.61916542 0.32213360]
[36.35358429 18.10125732]
[47.19550705 28.46719742]
[58.03742981 38.83313751]
[68.87935638 49.19907761]
[79.72127533 59.56501770]
[93.61779785 53.91818619]
[94.15624237 38.92785263]
[94.69468689 23.93752098]
[83.74559784 12.54045582]
[84.14589691 -3.25876307]
[95.65808868 -14.08673859]
[111.45219421 -13.51942444]
[122.15784454 -1.89339852]
[121.42357635 13.89382362]
[109.68502045 24.47596359]
[109.14657593 39.46629715]
[108.60813141 54.45663071]
[122.18053436 60.84331894]
[133.38757324 50.87324524]
[144.59460449 40.90316772]
[155.80163574 30.93309402]
[157.33853149 18.10478783]
[166.90632629 10.03156376]
[179.00875854 10.63580036]
[190.39295959 0.86850941]
[201.77716064 -8.89878178]
[213.16136169 -18.66607285]
[224.54556274 -28.43336487]
[235.92976379 -38.20065689]
[233.01812744 -53.28104019]
[238.05192566 -67.79160309]
[249.67709351 -77.82907104]
[264.76654053 -80.69342804]
[279.26126099 -75.61416626]
[289.26223755 -63.95758820]
[292.07928467 -48.85924911]
[286.95462036 -34.38052750]
[275.26672363 -24.41613197]
[260.15963745 -21.64642715]
[245.69705200 -26.81645584]
[234.31285095 -17.04916382]
[222.92864990 -7.28187275]
[211.54444885 2.48541832]
[200.16024780 12.25270939]
[188.77604675 22.02000046]
[183.87490845 38.85585022]
[165.77171326 42.14012909]
[154.56468201 52.11020279]
[143.35765076 62.08027649]
[132.15061951 72.05035400]
[137.96191406 98.42927551]
[126.92096710 119.74858856]
[107.50000000 127.78682709]
[107.50000000 142.78683472]
[107.50000000 157.78683472]
[107.50000000 172.78683472]
[115.23729706 186.58700562]
[107.50000000 199.31427002]
[107.50000000 214.31427002]
[107.50000000 229.31427002]
[107.50000000 244.31427002]
[119.23751068 251.57676697]
[125.79409790 263.59942627]
[125.54718781 277.18310547]
[118.66857147 288.77316284]
[107.05144501 295.38970947]
[106.78218079 310.38726807]
[106.51291656 325.38485718]
[106.24365234 340.38244629]
[105.97438812 355.38003540]
[105.70512390 370.37762451]
[105.43585968 385.37518311]
[130.00929260 392.84939575]
[150.54592896 408.24414062]
[164.59152222 429.70361328]
[170.47294617 454.64819336]
[167.49761963 480.08453369]
[156.03497314 502.96481323]
[137.47059631 520.55175781]
[144.45979309 533.82397461]
[151.44897461 547.09619141]
[158.43815613 560.36834717]
[172.59164429 568.65155029]
[172.22441101 585.04656982]
[157.71421814 592.68768311]
[143.98791504 583.71435547]
[145.16595459 567.35754395]
[138.17677307 554.08532715]
[131.18759155 540.81317139]
[124.19840240 527.54095459]
[117.34577942 529.92858887]
[110.29083252 531.63232422]
[103.10166168 532.63537598]
[95.84767151 532.92797852]
[88.59893799 532.50701904]
[81.42548370 531.37634277]
[74.39663696 529.54669189]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 149]
[28 148]
[29 147]
[30 146]
[31 145]
[32 144]
[33 143]
[37 138]
[38 137]
[39 136]
[40 135]
[42 133]
[43 132]
[44 131]
[45 130]
[48 82]
[49 81]
[50 80]
[51 79]
[52 78]
[55 76]
[56 75]
[58 74]
[59 73]
[60 72]
[61 71]
[62 70]
[63 69]
[83 94]
[84 93]
[85 92]
[95 127]
[96 126]
[97 125]
[98 124]
[101 122]
[102 121]
[103 120]
[104 119]
[105 118]
[106 117]
[156 167]
[157 166]
[158 165]
[159 164]
] def

init

% Start Annotations
27 149 0.0 0.2 colorpair
28 148 0.0 1 colorpair
29 147 0.0 1 colorpair
30 146 0.0 1 colorpair
31 145 0.0 1 colorpair
32 144 0.0 1 colorpair
33 143 0.0 1 colorpair
37 138 0.0 1 colorpair
38 137 0.0 1 colorpair
39 136 0.0 1 colorpair
40 135 0.0 1 colorpair
42 133 0.0 1 colorpair
43 132 0.0 1 colorpair
44 131 0.0 1 colorpair
45 130 0.0 1 colorpair
48 82 0.0 1 colorpair
49 81 0.0 1 colorpair
50 80 0.0 1 colorpair
51 79 0.0 1 colorpair
52 78 0.0 1 colorpair
55 76 0.0 1 colorpair
56 75 0.0 1 colorpair
58 74 0.0 1 colorpair
59 73 0.0 1 colorpair
60 72 0.0 1 colorpair
61 71 0.0 1 colorpair
62 70 0.0 1 colorpair
63 69 0.0 1 colorpair
83 94 0.0 1 colorpair
84 93 0.0 1 colorpair
85 92 0.0 1 colorpair
95 127 0.0 1 colorpair
96 126 0.0 1 colorpair
97 125 0.0 1 colorpair
98 124 0.0 1 colorpair
101 122 0.0 1 colorpair
102 121 0.0 1 colorpair
103 120 0.0 1 colorpair
104 119 0.0 1 colorpair
105 118 0.0 1 colorpair
106 117 0.0 1 colorpair
156 167 0.0 1 colorpair
157 166 0.0 1 colorpair
158 165 0.0 1 colorpair
159 164 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
27 149 2 gmark

% End Annotations
showpage
end
%%EOF
