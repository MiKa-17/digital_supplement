%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:16:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAGGCUAUCCUCACAUUGUUUGGAUGUGGUUAGGAUUGCCUCAGGUUAAUGAAAAUUGACCUGGGGCUUUUACUUUCUACCUCACCACACAUUUCAUGCUUCAGGCAAAAAGCCUCAAGCACCCG\
) } def
/len { sequence length } bind def

/coor [
[103.60134125 162.31542969]
[102.36139679 147.36676025]
[95.02401733 148.92008972]
[88.94539642 162.63323975]
[82.86677551 176.34638977]
[76.78815460 190.05953979]
[79.06610107 206.29969788]
[65.97590637 216.17790222]
[50.98364258 209.53228760]
[49.51206970 193.19929504]
[63.07500839 183.98091125]
[69.15363312 170.26776123]
[75.23224640 156.55462646]
[81.31086731 142.84147644]
[66.51542664 130.06414795]
[58.72013855 112.94181824]
[58.79755402 94.86414337]
[66.12329865 79.14472961]
[78.79865265 68.41387177]
[73.05840302 54.55567551]
[67.31815338 40.69748306]
[54.88872147 30.90872383]
[57.16653824 16.18932152]
[51.42628860 2.33112836]
[45.68603516 -11.52706432]
[39.44594193 -18.34513855]
[39.97957993 -25.79648209]
[34.58115387 -39.79137421]
[22.39569473 -49.88221741]
[25.03405762 -64.54129028]
[19.63563156 -78.53617859]
[14.23720646 -92.53107452]
[8.16631794 -99.50022888]
[8.88265705 -106.93623352]
[3.82930970 -121.05939484]
[-1.22403812 -135.18255615]
[-6.27738571 -149.30572510]
[-26.62474823 -156.88900757]
[-34.88793564 -176.67027283]
[-26.20783615 -195.96908569]
[-32.95200729 -209.36744690]
[-39.69617462 -222.76580811]
[-46.44034576 -236.16418457]
[-53.18451691 -249.56254578]
[-59.92868423 -262.96090698]
[-66.67285919 -276.35928345]
[-73.41702271 -289.75762939]
[-80.16119385 -303.15600586]
[-86.90536499 -316.55435181]
[-93.64953613 -329.95272827]
[-100.39370728 -343.35110474]
[-107.13787842 -356.74945068]
[-121.13680267 -365.29122925]
[-120.46842194 -381.67675781]
[-105.82030487 -389.04998779]
[-92.26118469 -379.82601929]
[-93.73950958 -363.49362183]
[-86.99533844 -350.09527588]
[-80.25117493 -336.69689941]
[-73.50700378 -323.29852295]
[-66.76283264 -309.90017700]
[-60.01866150 -296.50180054]
[-53.27449036 -283.10345459]
[-46.53032303 -269.70507812]
[-39.78615189 -256.30670166]
[-33.04198074 -242.90834045]
[-26.29781151 -229.50997925]
[-19.55364227 -216.11161804]
[-12.80947208 -202.71325684]
[-3.91406059 -202.92889404]
[4.59243822 -200.17279053]
[11.74094772 -194.72842407]
[16.70703125 -187.18722534]
[18.90593529 -178.38439941]
[18.06131172 -169.30648804]
[14.23960114 -160.98075867]
[7.84577513 -154.35906982]
[12.89912319 -140.23590088]
[17.95247078 -126.11274719]
[23.00581932 -111.98958588]
[28.23209953 -97.92949677]
[33.63052368 -83.93460846]
[39.02894974 -69.93971252]
[50.82827759 -60.84987640]
[48.57604599 -45.18980026]
[53.97447205 -31.19490814]
[59.54422760 -17.26731682]
[65.28447723 -3.40912318]
[71.02473450 10.44906998]
[83.04357910 19.24659920]
[81.17634583 34.95723343]
[86.91659546 48.81542587]
[92.65684509 62.67361832]
[108.75794983 61.49174881]
[124.49927521 67.19782257]
[136.96720886 79.25304413]
[143.64926147 95.90480042]
[142.92950439 114.43286133]
[134.44691467 131.59248352]
[145.56118774 141.66586304]
[156.67546082 151.73925781]
[167.78971863 161.81263733]
[178.90399170 171.88601685]
[194.32530212 175.42068481]
[198.55952454 189.70075989]
[209.67379761 199.77415466]
[220.78805542 209.84753418]
[231.90232849 219.92091370]
[247.93212891 220.57302856]
[257.30010986 233.59687805]
[252.81994629 249.00167847]
[237.92846680 254.97018433]
[224.04911804 246.92387390]
[221.82894897 231.03518677]
[210.71467590 220.96180725]
[199.60041809 210.88841248]
[188.48614502 200.81503296]
[173.85980225 198.00088501]
[168.83059692 183.00028992]
[157.71633911 172.92691040]
[146.60206604 162.85351562]
[135.48780823 152.78013611]
[124.37353516 142.70675659]
[117.03615570 144.26008606]
[121.96040344 158.42877197]
[127.99805450 172.16001892]
[117.55536652 182.92802429]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 14]
[4 13]
[5 12]
[6 11]
[19 93]
[20 92]
[21 91]
[23 89]
[24 88]
[25 87]
[27 86]
[28 85]
[30 83]
[31 82]
[32 81]
[34 80]
[35 79]
[36 78]
[37 77]
[40 69]
[41 68]
[42 67]
[43 66]
[44 65]
[45 64]
[46 63]
[47 62]
[48 61]
[49 60]
[50 59]
[51 58]
[52 57]
[99 123]
[100 122]
[101 121]
[102 120]
[103 119]
[105 117]
[106 116]
[107 115]
[108 114]
] def

init

% Start Annotations
3 14 0.0 1 colorpair
4 13 0.0 1 colorpair
5 12 0.0 1 colorpair
6 11 0.0 1 colorpair
19 93 0.0 1 colorpair
20 92 0.0 1 colorpair
21 91 0.0 1 colorpair
23 89 0.0 1 colorpair
24 88 0.0 1 colorpair
25 87 0.0 1 colorpair
27 86 0.0 1 colorpair
28 85 0.0 1 colorpair
30 83 0.0 1 colorpair
31 82 0.0 1 colorpair
32 81 0.0 1 colorpair
34 80 0.0 1 colorpair
35 79 0.0 1 colorpair
36 78 0.0 1 colorpair
37 77 0.0 1 colorpair
40 69 0.0 1 colorpair
41 68 0.0 1 colorpair
42 67 0.0 1 colorpair
43 66 0.0 1 colorpair
44 65 0.0 1 colorpair
45 64 0.0 1 colorpair
46 63 0.0 1 colorpair
47 62 0.0 1 colorpair
48 61 0.0 1 colorpair
49 60 0.0 1 colorpair
50 59 0.0 1 colorpair
51 58 0.0 1 colorpair
52 57 0.0 1 colorpair
99 123 0.0 1 colorpair
100 122 0.0 1 colorpair
101 121 0.0 1 colorpair
102 120 0.0 1 colorpair
103 119 0.0 1 colorpair
105 117 0.0 1 colorpair
106 116 0.0 1 colorpair
107 115 0.0 1 colorpair
108 114 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
