%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:16:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGUGAUUUAGGGACUAAUAAUCAUCUGUAUAACACUACUGACCUUCACCGGGAUCACACAUGGAUAGCUGUGCGAAAUACAAAUCAAAAACGGAAAAAAAGAGGUUGCCGCCGUCUUAAACUACGAAGAUAAACA______________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[273.39608765 126.74591064]
[282.92364502 115.16033173]
[293.27664185 104.29141998]
[278.27713013 104.41477966]
[263.27764893 104.53813934]
[248.27815247 104.66149902]
[233.27865601 104.78485870]
[218.27915955 104.90821838]
[207.01734924 117.38829803]
[189.87669373 117.87981415]
[177.43772888 105.59133911]
[162.44229126 105.96138000]
[147.44686890 106.33142853]
[132.45143127 106.70146942]
[127.73822784 121.64080811]
[116.17105865 133.53097534]
[99.62582397 139.27023315]
[81.34615326 136.86668396]
[65.30944824 126.01689148]
[51.92759323 132.79376221]
[38.54573441 139.57061768]
[29.72990990 152.70803833]
[14.87996578 151.55548096]
[1.49810708 158.33233643]
[-11.88375187 165.10919189]
[-25.26560974 171.88606262]
[-34.08143234 185.02348328]
[-48.93137741 183.87091064]
[-62.31323624 190.64778137]
[-75.69509125 197.42463684]
[-80.37716675 212.51947021]
[-94.40026855 219.80836487]
[-109.44474792 214.96696472]
[-116.58498383 200.86758423]
[-111.58479309 185.87512207]
[-97.41070557 178.88436890]
[-82.47195435 184.04278564]
[-69.09009552 177.26591492]
[-55.70824051 170.48905945]
[-47.84957886 157.83636475]
[-32.04247284 158.50419617]
[-18.66061401 151.72734070]
[-5.27875519 144.95046997]
[8.10310364 138.17361450]
[15.96176624 125.52091980]
[31.76887131 126.18875885]
[45.15073013 119.41189575]
[58.53258896 112.63503265]
[58.96411133 105.14746094]
[45.56376648 111.88769531]
[33.02632904 103.65284729]
[33.88910294 88.67768097]
[47.28932571 81.93720245]
[59.82716370 90.17230988]
[60.25868607 82.68473053]
[47.74397278 74.41539764]
[35.22925949 66.14605713]
[22.71454620 57.87672424]
[10.19983101 49.60738373]
[-2.31488276 41.33804703]
[-14.82959652 33.06871033]
[-29.31197929 38.64009094]
[-44.29452133 34.60238266]
[-54.01612854 22.50816917]
[-54.73864365 7.00792408]
[-46.18424988 -5.93819284]
[-31.64228249 -11.35213661]
[-16.70442390 -7.15213442]
[-7.11458731 5.04682684]
[-6.56025982 20.55399704]
[5.95445442 28.82333374]
[18.46916771 37.09267044]
[30.98388290 45.36200714]
[43.49859619 53.63134384]
[56.01330948 61.90068054]
[68.52802277 70.17002106]
[88.73554230 60.77960587]
[109.56732178 62.96649933]
[125.23638916 74.75920105]
[132.08137512 91.70603943]
[147.07681274 91.33599091]
[162.07225037 90.96595001]
[177.06768799 90.59590149]
[185.17678833 79.82873535]
[197.82368469 75.76245880]
[210.31668091 79.66996002]
[218.15580750 89.90872955]
[233.15530396 89.78536987]
[248.15478516 89.66201019]
[263.15429688 89.53865051]
[278.15377808 89.41529083]
[293.15325928 89.29193115]
[304.71411133 79.73436737]
[307.65557861 65.02560425]
[310.59707642 50.31684494]
[313.53854370 35.60808182]
[316.48001099 20.89931870]
[319.42150879 6.19055557]
[310.44717407 -6.81856632]
[313.38235474 -22.34790230]
[326.48562622 -31.18417358]
[341.98306274 -28.08497810]
[350.68032837 -14.88901043]
[347.41744995 0.57479268]
[334.13024902 9.13203239]
[331.18878174 23.84079552]
[328.24731445 38.54956055]
[325.30581665 53.25832367]
[322.36434937 67.96708679]
[319.42288208 82.67584991]
[332.03546143 74.55657959]
[345.20547485 67.37668610]
[358.86306763 61.17423248]
[372.93579102 55.98211670]
[387.34906006 51.82786560]
[402.02642822 48.73351288]
[416.89004517 46.71546555]
[431.86114502 45.78442383]
[446.86026001 45.94532776]
[461.80792236 47.19731903]
[476.62484741 49.53376389]
[491.23245239 52.94226837]
[505.55328369 57.40476227]
[519.51141357 62.89757919]
[533.03277588 69.39159393]
[546.04571533 76.85236359]
[558.48126221 85.24033356]
[570.27337646 94.51101685]
[581.35961914 104.61526489]
[591.68109131 115.49948120]
[601.18322754 127.10595703]
[609.81549072 139.37315369]
[617.53216553 152.23600769]
[624.29229736 165.62631226]
[630.06005859 179.47305298]
[634.80493164 193.70283508]
[638.50164795 208.24017334]
[641.13067627 223.00798035]
[642.67803955 237.92794800]
[643.13555908 252.92097473]
[642.50079346 267.90753174]
[640.77709961 282.80816650]
[637.97363281 297.54385376]
[634.10522461 312.03646851]
[629.19244385 326.20913696]
[623.26135254 339.98672485]
[616.34332275 353.29614258]
[608.47509766 366.06683350]
[599.69836426 378.23110962]
[590.05969238 389.72439575]
[579.61016846 400.48580933]
[568.40521240 410.45825195]
[556.50433350 419.58883667]
[543.97045898 427.82916260]
[530.87017822 435.13552856]
[517.27294922 441.46920776]
[503.25088501 446.79656982]
[488.87829590 451.08941650]
[474.23138428 454.32495117]
[459.38787842 456.48602295]
[444.42648315 457.56115723]
[429.42648315 457.54467773]
[414.46746826 456.43667603]
[399.62872314 454.24301147]
[384.98898315 450.97531128]
[370.62585449 446.65090942]
[356.61550903 441.29272461]
[343.03222656 434.92922974]
[329.94802856 427.59408569]
[317.43234253 419.32623291]
[305.55148315 410.16952515]
[294.36849976 400.17248535]
[283.94265747 389.38815308]
[274.32925415 377.87371826]
[265.57925415 365.69021606]
[257.73910522 352.90225220]
[250.85032654 339.57763672]
[244.94947815 325.78707886]
[240.06784058 311.60363770]
[236.23130798 297.10256958]
[233.46022034 282.36077881]
[231.76925659 267.45639038]
[231.16741943 252.46846008]
[231.65786743 237.47648621]
[233.23800659 222.55993652]
[235.89945984 207.79794312]
[239.62812805 193.26876831]
[244.40422058 179.04945374]
[250.20242310 165.21539307]
[256.99197388 151.83998108]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 92]
[4 91]
[5 90]
[6 89]
[7 88]
[8 87]
[11 83]
[12 82]
[13 81]
[14 80]
[19 48]
[20 47]
[21 46]
[23 44]
[24 43]
[25 42]
[26 41]
[28 39]
[29 38]
[30 37]
[55 76]
[56 75]
[57 74]
[58 73]
[59 72]
[60 71]
[61 70]
[93 110]
[94 109]
[95 108]
[96 107]
[97 106]
[98 105]
] def

init

% Start Annotations
3 92 0.16 1 colorpair
4 91 0.0 1 colorpair
5 90 0.16 1 colorpair
6 89 0.0 0.6 colorpair
7 88 0.0 1 colorpair
8 87 0.0 1 colorpair
11 83 0.16 1 colorpair
12 82 0.0 0.6 colorpair
13 81 0.0 1 colorpair
14 80 0.0 0.6 colorpair
19 48 0.0 1 colorpair
20 47 0.16 1 colorpair
21 46 0.16 1 colorpair
23 44 0.16 1 colorpair
24 43 0.16 1 colorpair
25 42 0.16 1 colorpair
26 41 0.0 0.6 colorpair
28 39 0.16 1 colorpair
29 38 0.0 0.6 colorpair
30 37 0.0 0.6 colorpair
55 76 0.0 1 colorpair
56 75 0.0 0.6 colorpair
57 74 0.16 1 colorpair
58 73 0.16 1 colorpair
59 72 0.0 1 colorpair
60 71 0.0 1 colorpair
61 70 0.16 1 colorpair
93 110 0.0 1 colorpair
94 109 0.0 1 colorpair
95 108 0.0 0.6 colorpair
96 107 0.0 1 colorpair
97 106 0.0 1 colorpair
98 105 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
3 cmark
92 cmark
5 cmark
90 cmark
6 89 1 gmark
11 cmark
83 cmark
12 82 1 gmark
14 80 1 gmark
20 cmark
47 cmark
21 cmark
23 cmark
44 cmark
24 cmark
43 cmark
42 cmark
26 41 1 gmark
39 cmark
29 38 1 gmark
30 37 1 gmark
56 75 1 gmark
57 cmark
74 cmark
58 cmark
61 cmark
95 108 1 gmark
98 105 1 gmark

% End Annotations
showpage
end
%%EOF
