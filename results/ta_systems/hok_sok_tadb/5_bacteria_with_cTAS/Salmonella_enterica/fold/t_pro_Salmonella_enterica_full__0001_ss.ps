%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:17:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
____________________________________GAAGCAGCAAAAGGCGAUGUUAAUCGCCCUGAUCGUCAUCUGUUUAACCGUCAUAGUGACGGCACUGGUAACGAGGAAAGACCUCUGCGAGGUACGAAUCCGAACCGGCCAGACGGAGGUCGCUGUCUUCACAGCUUACGAACCUGA___GGA____\
) } def
/len { sequence length } bind def

/coor [
[189.69406128 419.64044189]
[177.42198181 422.83258057]
[165.03695679 425.55374146]
[152.55703735 427.79992676]
[140.00044250 429.56790161]
[127.38549805 430.85507202]
[114.73059845 431.65954590]
[102.05420685 431.98016357]
[89.37481689 431.81643677]
[76.71092987 431.16864014]
[64.08101654 430.03768921]
[51.50350571 428.42523193]
[38.99674988 426.33364868]
[26.57899094 423.76596069]
[14.26834679 420.72595215]
[2.08277726 417.21798706]
[-9.95993996 413.24728394]
[-21.84223557 408.81954956]
[-33.54677582 403.94128418]
[-45.05648041 398.61959839]
[-56.35456085 392.86224365]
[-67.42453766 386.67764282]
[-78.25025177 380.07479858]
[-88.81592560 373.06335449]
[-99.10612488 365.65353394]
[-109.10585022 357.85614014]
[-118.80050659 349.68255615]
[-128.17594910 341.14471436]
[-137.21850586 332.25506592]
[-145.91499329 323.02658081]
[-154.25270081 313.47271729]
[-162.21948242 303.60742188]
[-169.80371094 293.44509888]
[-176.99432373 283.00051880]
[-183.78080750 272.28897095]
[-190.15330505 261.32608032]
[-196.10247803 250.12782288]
[-201.61967468 238.71054077]
[-206.69683838 227.09089661]
[-211.32655334 215.28584290]
[-215.50205994 203.31259155]
[-219.21730042 191.18861389]
[-222.46681213 178.93159485]
[-225.24588013 166.55943298]
[-227.55044556 154.09016418]
[-229.37715149 141.54197693]
[-230.72331238 128.93319702]
[-231.58699036 116.28219604]
[-231.96690369 103.60744476]
[-231.86251831 90.92742157]
[-231.27397156 78.26064301]
[-230.20211792 65.62557983]
[-228.64854431 53.04066467]
[-226.61549377 40.52425766]
[-224.10594177 28.09462357]
[-221.12355042 15.76988983]
[-217.67266846 3.56804109]
[-213.75833130 -8.49312210]
[-209.38624573 -20.39600372]
[-204.56278992 -32.12323761]
[-199.29501343 -43.65771866]
[-193.59059143 -54.98261261]
[-187.45783997 -66.08140564]
[-180.90571594 -76.93789673]
[-173.94378662 -87.53625488]
[-166.58218384 -97.86100769]
[-158.83168030 -107.89710999]
[-150.70355225 -117.62989807]
[-142.20967102 -127.04519653]
[-133.36242676 -136.12924194]
[-124.17472839 -144.86880493]
[-114.65998077 -153.25112915]
[-104.83206940 -161.26397705]
[-94.70532227 -168.89567566]
[-84.29451752 -176.13507080]
[-73.61484528 -182.97160339]
[-62.68188095 -189.39530945]
[-51.51158142 -195.39682007]
[-40.12023926 -200.96737671]
[-28.52447319 -206.09884644]
[-16.74120331 -210.78373718]
[-4.78761959 -215.01522827]
[7.31884050 -218.78715515]
[19.56051445 -222.09397888]
[31.91954231 -224.93090820]
[44.37789154 -227.29379272]
[42.19946289 -242.13476562]
[40.02103424 -256.97573853]
[26.21398544 -264.05703735]
[19.23619652 -277.91671753]
[21.77076721 -293.22537231]
[32.84310532 -304.09658813]
[48.19567108 -306.35009766]
[61.92508698 -299.11941528]
[68.75211334 -285.18487549]
[66.05162811 -269.90460205]
[54.86200714 -259.15417480]
[57.04043579 -244.31318665]
[59.21886444 -229.47221375]
[82.02922821 -231.49977112]
[104.92510986 -231.94998169]
[127.79754639 -230.82070923]
[150.53771973 -228.11732483]
[173.03742981 -223.85270691]
[195.18960571 -218.04713440]
[216.88885498 -210.72824097]
[238.03193665 -201.93083191]
[258.51821899 -191.69679260]
[278.25024414 -180.07479858]
[297.13412476 -167.12014771]
[315.08001709 -152.89450073]
[332.00250244 -137.46553040]
[347.82107544 -120.90665436]
[362.46047974 -103.29666901]
[375.85104370 -84.71935272]
[387.92907715 -65.26310730]
[398.63705444 -45.02051163]
[407.92407227 -24.08788300]
[415.74594116 -2.56481886]
[430.11318970 -6.87548494]
[444.48046875 -11.18615150]
[458.84771729 -15.49681759]
[457.60824585 -30.50206375]
[459.51602173 -45.43705750]
[464.48764038 -59.64891052]
[472.30575562 -72.51634216]
[482.62860107 -83.47683716]
[495.00491333 -92.05125427]
[508.89364624 -97.86475372]
[523.68762207 -100.66319275]
[538.74017334 -100.32424927]
[553.39318848 -96.86272430]
[567.00616455 -90.42994690]
[578.98400879 -81.30712891]
[588.80303955 -69.89308929]
[596.03399658 -56.68678665]
[600.36090088 -42.26555252]
[601.59448242 -27.25982094]
[599.68078613 -12.32557678]
[594.70361328 1.88431931]
[586.88043213 14.74867058]
[576.55328369 25.70510483]
[564.17358398 34.27465057]
[550.28259277 40.08268738]
[535.48748779 42.87530899]
[520.43505859 42.53044128]
[505.78338623 39.06315231]
[492.17294312 32.62501907]
[480.19873047 23.49749184]
[470.38418579 12.07958603]
[463.15838623 -1.12955785]
[448.79113770 3.18110847]
[434.42385864 7.49177504]
[420.05661011 11.80244064]
[423.19128418 24.08932304]
[425.85446167 36.48695374]
[428.04226685 48.97724152]
[429.75146484 61.54196548]
[430.97958374 74.16279602]
[431.72482300 86.82132721]
[431.98614502 99.49907684]
[431.76309204 112.17756653]
[431.05603027 124.83827972]
[429.86599731 137.46276855]
[428.19473267 150.03259277]
[426.04464722 162.52941895]
[423.41888428 174.93502808]
[420.32131958 187.23132324]
[416.75640869 199.40034485]
[412.72937012 211.42434692]
[408.24609375 223.28579712]
[403.31311035 234.96739197]
[397.93762207 246.45207214]
[392.12750244 257.72308350]
[385.89114380 268.76400757]
[379.23773193 279.55871582]
[372.17694092 290.09146118]
[364.71905518 300.34686279]
[356.87496948 310.30999756]
[348.65609741 319.96630859]
[340.07449341 329.30172729]
[331.14263916 338.30258179]
[321.87356567 346.95578003]
[312.28079224 355.24871826]
[302.37832642 363.16925049]
[292.18060303 370.70584106]
[281.70251465 377.84750366]
[270.95935059 384.58380127]
[259.96676636 390.90493774]
[248.74078369 396.80166626]
[237.29782104 402.26538086]
[225.65454102 407.28811646]
[213.82795715 411.86254883]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[86 99]
[87 98]
[88 97]
[119 154]
[120 153]
[121 152]
[122 151]
] def

init

% Start Annotations
87 98 0.16 1 colorpair
120 153 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
86 99 66 gmark
86 cmark
99 cmark
98 cmark
88 97 12 gmark
88 cmark
97 cmark
119 154 10 gmark
119 cmark
121 152 30 gmark
121 cmark
122 151 10 gmark
151 cmark

% End Annotations
showpage
end
%%EOF
