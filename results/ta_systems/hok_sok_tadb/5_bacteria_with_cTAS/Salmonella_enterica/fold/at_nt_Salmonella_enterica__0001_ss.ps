%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:17:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__CC_U__U_U__G__U_GCCUAUUAAUCGUCUGUUUCACCCUGUUAAUAUUCACCUUGCUAACGCGGAAAUCCCUCUGCGAGGUACGGAUCAGAGACGGAAAGAGGGAGGUCGCUGCCUUCAUGGCUUACGAAUCCGA___UAAG___UAACAGACCCGGCGGG_GGGAAAUC__CC_CGCC_AUCUCUGAUGUGUCAGGUAUC____CUCAA_______AGCACCUUUAUAAAAGGCGU_CC__\
) } def
/len { sequence length } bind def

/coor [
[-126.20500183 1159.69311523]
[-141.20597839 1159.70849609]
[-156.20149231 1159.30310059]
[-171.17973328 1158.47729492]
[-186.12892151 1157.23168945]
[-201.03729248 1155.56738281]
[-215.89312744 1153.48559570]
[-230.68472290 1150.98791504]
[-245.40045166 1148.07641602]
[-260.02874756 1144.75329590]
[-274.55807495 1141.02136230]
[-288.97702026 1136.88317871]
[-303.27423096 1132.34240723]
[-317.43847656 1127.40234375]
[-331.45858765 1122.06701660]
[-345.32354736 1116.34057617]
[-359.02246094 1110.22753906]
[-372.54452515 1103.73266602]
[-385.87911987 1096.86108398]
[-399.01574707 1089.61816406]
[-411.94406128 1082.00976562]
[-424.65393066 1074.04174805]
[-437.13531494 1065.72045898]
[-449.37838745 1057.05224609]
[-461.37353516 1048.04418945]
[-473.11132812 1038.70324707]
[-484.58255005 1029.03674316]
[-495.77810669 1019.05230713]
[-506.68927002 1008.75781250]
[-517.30737305 998.16137695]
[-527.62414551 987.27130127]
[-537.63146973 976.09613037]
[-547.32135010 964.64471436]
[-556.68634033 952.92602539]
[-565.71893311 940.94927979]
[-574.41204834 928.72393799]
[-582.75891113 916.25964355]
[-590.75286865 903.56610107]
[-598.38769531 890.65332031]
[-605.65740967 877.53155518]
[-612.55615234 864.21099854]
[-619.07867432 850.70227051]
[-625.21972656 837.01586914]
[-630.97448730 823.16265869]
[-636.33850098 809.15344238]
[-641.30749512 794.99932861]
[-645.87756348 780.71142578]
[-650.04510498 766.30096436]
[-653.80682373 751.77929688]
[-657.15979004 737.15783691]
[-660.10137939 722.44812012]
[-662.62921143 707.66162109]
[-664.74139404 692.81011963]
[-666.43621826 677.90515137]
[-667.71234131 662.95855713]
[-668.56872559 647.98199463]
[-669.00476074 632.98736572]
[-669.02008057 617.98638916]
[-668.61468506 602.99090576]
[-667.78887939 588.01263428]
[-666.54333496 573.06347656]
[-664.87896729 558.15509033]
[-662.79718018 543.29925537]
[-660.29949951 528.50762939]
[-657.38800049 513.79193115]
[-654.06494141 499.16363525]
[-650.33288574 484.63430786]
[-646.19476318 470.21536255]
[-641.65393066 455.91815186]
[-636.71386719 441.75390625]
[-631.37854004 427.73379517]
[-625.65209961 413.86883545]
[-619.53900146 400.16992188]
[-613.04412842 386.64785767]
[-606.17254639 373.31326294]
[-598.92968750 360.17666626]
[-591.32128906 347.24832153]
[-583.35327148 334.53848267]
[-575.03192139 322.05712891]
[-566.36376953 309.81402588]
[-557.35565186 297.81887817]
[-548.01470947 286.08108521]
[-538.34820557 274.60989380]
[-528.36376953 263.41430664]
[-518.06927490 252.50317383]
[-507.47280884 241.88504028]
[-496.58270264 231.56828308]
[-485.40756226 221.56100464]
[-473.95614624 211.87109375]
[-462.23745728 202.50614929]
[-450.26071167 193.47355652]
[-438.03536987 184.78042603]
[-425.57104492 176.43359375]
[-412.87750244 168.43962097]
[-399.96475220 160.80479431]
[-386.84295654 153.53512573]
[-373.52243042 146.63633728]
[-360.01364136 140.11384583]
[-346.32727051 133.97279358]
[-332.47402954 128.21801758]
[-318.46484375 122.85402679]
[-304.31072998 117.88505554]
[-290.02282715 113.31501007]
[-275.61236572 109.14748383]
[-261.09069824 105.38575745]
[-246.46922302 102.03278351]
[-231.75947571 99.09121704]
[-216.97300720 96.56335449]
[-202.12145996 94.45118713]
[-187.21652222 92.75638580]
[-172.26991272 91.48028564]
[-157.29339600 90.62387085]
[-142.29873657 90.18783569]
[-127.29776001 90.17251587]
[-112.30225372 90.57792664]
[-97.32401276 91.40373993]
[-82.37482452 92.64931488]
[-67.46645355 94.31367493]
[-52.61062622 96.39549255]
[-37.81902695 98.89315033]
[-23.10329819 101.80467224]
[-8.47501564 105.12776947]
[6.05431223 108.85982513]
[20.47325516 112.99790955]
[34.77046585 117.53876495]
[48.93470001 122.47881317]
[62.95481491 127.81417847]
[76.81977081 133.54064941]
[82.93244171 119.84264374]
[89.04510498 106.14464569]
[94.89533997 92.33251953]
[84.00326538 81.72916412]
[78.00261688 67.76275635]
[77.80844879 52.56306076]
[83.45037842 38.44792557]
[94.06805420 27.56980324]
[108.04234314 21.58753204]
[123.24228668 21.41336441]
[137.34999084 27.07385826]
[148.21412659 37.70582962]
[154.17800903 51.68798065]
[154.33218384 66.88813019]
[148.65313721 80.98838043]
[138.00688171 91.83852386]
[124.01689911 97.78401184]
[108.81655884 97.91819000]
[109.80149078 101.61948395]
[109.16220093 105.73627472]
[106.74940491 109.53875732]
[102.74311066 112.25730896]
[96.63044739 125.95531464]
[90.51777649 139.65332031]
[104.03984833 146.14817810]
[117.37445068 153.01971436]
[130.51107788 160.26254272]
[143.43940735 167.87095642]
[156.14926147 175.83895874]
[168.63064575 184.16030884]
[180.87374878 192.82843018]
[192.86891174 201.83650208]
[204.60671997 211.17747498]
[216.07792664 220.84396362]
[227.27351379 230.82836914]
[238.18467712 241.12284851]
[248.80282593 251.71928406]
[259.11959839 262.60937500]
[269.12689209 273.78451538]
[278.81683350 285.23590088]
[288.18176270 296.95458984]
[297.21438599 308.93130493]
[305.90753174 321.15664673]
[314.25439453 333.62097168]
[322.24838257 346.31448364]
[329.88323975 359.22723389]
[337.15292358 372.34902954]
[344.05172729 385.66952515]
[350.57421875 399.17828369]
[356.71530151 412.86468506]
[362.47009277 426.71789551]
[367.83410645 440.72708130]
[372.80310059 454.88119507]
[377.37316895 469.16909790]
[381.54071045 483.57952881]
[385.30245972 498.10119629]
[388.65542603 512.72265625]
[391.59704590 527.43243408]
[394.12490845 542.21887207]
[396.23709106 557.07043457]
[397.93191528 571.97534180]
[399.20803833 586.92199707]
[400.06448364 601.89849854]
[400.50051880 616.89312744]
[400.51586914 631.89410400]
[400.11047363 646.88964844]
[399.28469849 661.86785889]
[398.03912354 676.81707764]
[396.37481689 691.72540283]
[394.29299927 706.58123779]
[391.79537964 721.37286377]
[388.88388062 736.08862305]
[385.56079102 750.71685791]
[381.82873535 765.24621582]
[377.69067383 779.66516113]
[373.14984131 793.96240234]
[368.20980835 808.12664795]
[362.87448120 822.14672852]
[357.14801025 836.01171875]
[351.03497314 849.71063232]
[344.54010010 863.23266602]
[337.66854858 876.56726074]
[330.42572021 889.70391846]
[322.81729126 902.63226318]
[314.84927368 915.34210205]
[306.52795410 927.82348633]
[297.85980225 940.06658936]
[288.85171509 952.06170654]
[279.51074219 963.79956055]
[269.84426880 975.27075195]
[259.85983276 986.46630859]
[249.56536865 997.37750244]
[238.96891785 1007.99560547]
[228.07882690 1018.31237793]
[216.90368652 1028.31970215]
[205.45227051 1038.00964355]
[193.73359680 1047.37451172]
[181.75688171 1056.40710449]
[169.53153992 1065.10034180]
[157.06719971 1073.44714355]
[144.37367249 1081.44116211]
[131.46093750 1089.07592773]
[118.33914185 1096.34570312]
[105.01862335 1103.24450684]
[91.50986481 1109.76696777]
[77.82348633 1115.90795898]
[63.97025299 1121.66284180]
[49.96107101 1127.02685547]
[35.80696106 1131.99584961]
[21.51905823 1136.56579590]
[7.10860252 1140.73339844]
[-7.41306877 1144.49511719]
[-22.03453064 1147.84814453]
[-36.74427795 1150.78967285]
[-51.53074265 1153.31762695]
[-66.38228607 1155.42980957]
[-81.28722382 1157.12451172]
[-96.23383331 1158.40063477]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[128 152]
[129 151]
[130 150]
[131 146]
] def

init

% Start Annotations
129 151 0.0 1 colorpair
130 150 0.16 1 colorpair
131 146 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
128 152 4 gmark
128 cmark
152 cmark
130 cmark
131 146 1 gmark
131 cmark

% End Annotations
showpage
end
%%EOF
