%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:18:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_GUAAGAGGCUAAUCUGAAGUUGUUCA_GCAUGCAGAGAGCCUCGUUGGUUAAUUGAA_AAAUGACCUUCGGGGCUUUCUUCUUUCUGCC__UCACCAU_ACGGUA____CCCUGCCAACUGCAUGAGACAAAAAGCCUCAAGCGCCGCCGGCAUU___\
) } def
/len { sequence length } bind def

/coor [
[85.06181335 276.03543091]
[87.05561829 261.09820557]
[92.44101715 247.02360535]
[100.92757416 234.57067871]
[112.05762482 224.41102600]
[125.23093414 217.09249878]
[121.15932465 202.65567017]
[117.08771515 188.21885681]
[113.01611328 173.78202820]
[108.94450378 159.34519958]
[104.87290192 144.90837097]
[92.78895569 144.59268188]
[81.22139740 141.08369446]
[70.99858093 134.63270569]
[59.59249496 144.37442017]
[48.28259277 154.22764587]
[37.06996536 164.19143677]
[25.85734177 174.15522766]
[25.17724609 189.94487000]
[13.47506046 200.56723022]
[-2.30651617 199.72023010]
[-12.80455399 187.90638733]
[-11.79075241 172.13465881]
[0.13341598 161.76210022]
[15.89355469 162.94259644]
[27.10618019 152.97882080]
[38.31880569 143.01502991]
[41.24501419 136.18574524]
[49.85077286 132.96833801]
[61.25686264 123.22661591]
[55.61188126 108.37860870]
[55.45593262 92.49450684]
[60.80830765 77.53853607]
[49.21315002 68.02263641]
[37.61799240 58.50673676]
[26.02283669 48.99083710]
[14.42767906 39.47493744]
[2.83252239 29.95903778]
[-8.76263428 20.44314003]
[-20.35779190 10.92724037]
[-31.95294762 1.41134095]
[-43.54810333 -8.10455799]
[-55.14326096 -17.62045670]
[-66.73841858 -27.13635635]
[-78.33357239 -36.65225601]
[-93.85102844 -35.29343414]
[-105.47460938 -45.10908508]
[-106.67440796 -59.91098022]
[-118.26956940 -69.42687988]
[-129.86473083 -78.94277954]
[-141.45988464 -88.45867920]
[-153.05503845 -97.97457886]
[-167.40106201 -92.48938751]
[-182.56512451 -94.92792511]
[-194.46820068 -104.63423920]
[-199.90838623 -118.99738312]
[-197.42233276 -134.15373230]
[-187.67875671 -146.02632141]
[-173.29862976 -151.42146301]
[-158.15014648 -148.88790894]
[-146.30816650 -139.10716248]
[-140.95811462 -124.71020508]
[-143.53913879 -109.56973267]
[-131.94398499 -100.05383301]
[-120.34882355 -90.53793335]
[-108.75366974 -81.02203369]
[-97.15850830 -71.50613403]
[-82.40695953 -73.21709442]
[-70.51226807 -63.73179626]
[-68.81767273 -48.24741364]
[-57.22251892 -38.73151398]
[-45.62736130 -29.21561432]
[-34.03220367 -19.69971466]
[-22.43704796 -10.18381596]
[-10.84189224 -0.66791660]
[0.75326484 8.84798241]
[12.34842205 18.36388206]
[23.94357872 27.87978172]
[35.53873444 37.39567947]
[47.13389206 46.91157913]
[58.72904968 56.42747879]
[70.32420349 65.94337463]
[83.28633118 58.03382874]
[98.13710022 54.86646652]
[113.19837952 56.79920197]
[126.76823425 63.61363220]
[137.31327820 74.53973389]
[150.93542480 68.25983429]
[164.55757141 61.97993851]
[178.17971802 55.70004272]
[182.35305786 50.46439743]
[187.74176025 48.46275330]
[192.46218872 49.45276642]
[206.32038879 43.71251297]
[203.29312134 28.97371483]
[203.11016846 13.92834949]
[205.77815247 -0.87970227]
[211.20060730 -14.91513824]
[219.18151855 -27.67058754]
[229.43238831 -38.68494797]
[241.58265686 -47.56005478]
[255.19309998 -53.97508240]
[269.77169800 -57.69812775]
[284.79144287 -58.59460831]
[299.70938110 -56.63211441]
[313.98626709 -51.88159180]
[327.10595703 -44.51476669]
[338.59420776 -34.79794693]
[348.03570557 -23.08238792]
[355.08917236 -9.79159927]
[359.49963379 4.59396410]
[361.10763550 19.55427361]
[359.85504150 34.54852295]
[355.78713989 49.03467941]
[349.05099487 62.48907852]
[339.89010620 74.42535400]
[328.63565063 84.41201019]
[315.69442749 92.08804321]
[301.53427124 97.17596436]
[286.66708374 99.49185181]
[271.63031006 98.95198059]
[256.96746826 95.57588196]
[243.20867920 89.48558044]
[230.85125732 80.90125275]
[220.34193420 70.13320923]
[212.06063843 57.57070541]
[198.20243835 63.31095886]
[184.45962524 69.32218933]
[170.83747864 75.60208893]
[157.21533203 81.88198090]
[143.59318542 88.16188049]
[145.01495361 103.76307678]
[141.02261353 118.91168213]
[132.09634399 131.78570557]
[119.30973053 140.83676147]
[123.38133240 155.27359009]
[127.45294189 169.71041870]
[131.52455139 184.14724731]
[135.59616089 198.58407593]
[139.66775513 213.02090454]
[154.72377014 212.37792969]
[169.52209473 215.22502136]
[183.26470947 221.40866089]
[195.21046448 230.59536743]
[204.71516418 242.28970337]
[211.26622009 255.86102295]
[214.51033020 270.57742310]
[214.27256775 285.64526367]
[210.56573486 300.25198364]
[203.58975220 313.60983276]
[193.72080994 324.99847412]
[181.49113464 333.80368042]
[167.56027222 339.55062866]
[152.67947388 341.92941284]
[137.65124512 340.81170654]
[123.28605652 336.25781250]
[110.35858917 328.51333618]
[99.56600952 317.99588013]
[91.49034882 305.27264404]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 140]
[7 139]
[8 138]
[9 137]
[10 136]
[11 135]
[14 30]
[15 29]
[16 27]
[17 26]
[18 25]
[33 82]
[34 81]
[35 80]
[36 79]
[37 78]
[38 77]
[39 76]
[40 75]
[41 74]
[42 73]
[43 72]
[44 71]
[45 70]
[48 67]
[49 66]
[50 65]
[51 64]
[52 63]
[87 131]
[88 130]
[89 129]
[90 128]
[93 127]
[94 126]
] def

init

% Start Annotations
6 140 0.16 1 colorpair
7 139 0.0 1 colorpair
8 138 0.0 1 colorpair
9 137 0.0 1 colorpair
10 136 0.0 1 colorpair
11 135 0.0 1 colorpair
14 30 0.16 0.2 colorpair
15 29 0.0 1 colorpair
16 27 0.16 1 colorpair
17 26 0.0 0.2 colorpair
18 25 0.0 0.6 colorpair
33 82 0.0 0.2 colorpair
34 81 0.0 0.2 colorpair
35 80 0.0 1 colorpair
36 79 0.0 1 colorpair
37 78 0.16 1 colorpair
38 77 0.0 0.2 colorpair
39 76 0.16 1 colorpair
40 75 0.0 0.6 colorpair
41 74 0.0 0.6 colorpair
42 73 0.0 0.6 colorpair
43 72 0.16 1 colorpair
44 71 0.0 1 colorpair
45 70 0.0 0.6 colorpair
48 67 0.0 1 colorpair
49 66 0.0 1 colorpair
50 65 0.16 1 colorpair
51 64 0.0 0.2 colorpair
52 63 0.0 1 colorpair
87 131 0.0 1 colorpair
88 130 0.0 1 colorpair
89 129 0.16 0.6 colorpair
90 128 0.0 1 colorpair
93 127 0.0 0.2 colorpair
94 126 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
140 cmark
14 30 2 gmark
14 cmark
30 cmark
27 cmark
17 26 2 gmark
18 25 1 gmark
33 82 2 gmark
34 81 2 gmark
37 cmark
38 77 2 gmark
39 cmark
40 75 1 gmark
41 74 1 gmark
42 73 1 gmark
43 cmark
45 70 1 gmark
65 cmark
51 64 2 gmark
89 129 1 gmark
89 cmark
129 cmark
93 127 2 gmark
94 126 1 gmark

% End Annotations
showpage
end
%%EOF
