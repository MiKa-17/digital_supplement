%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:13:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
____________________AAUGCCGACAAAAUAUCCCCUUGUGGCAUUAAUAG_UAAUUUGUUUCACGGUACUGGUAUUGACCUGGAUGGUGCGCAACUCGCUAUGCGAACUACGGAUCAAGGAGGGAAAUAUUGAGCUGGAGGCAUUCCUAGCUUACGAAUCGAA___GAA_\
) } def
/len { sequence length } bind def

/coor [
[112.08396912 471.80712891]
[96.46486664 471.98666382]
[80.85198975 471.51031494]
[65.27288055 470.37899780]
[49.75499344 468.59463501]
[34.32569504 466.16040039]
[19.01218605 463.08062744]
[3.84146619 459.36068726]
[-11.15971661 455.00717163]
[-25.96491432 450.02770996]
[-40.54802322 444.43115234]
[-54.88333511 438.22732544]
[-68.94557190 431.42715454]
[-82.70993805 424.04266357]
[-96.15217590 416.08682251]
[-109.24857330 407.57373047]
[-121.97604370 398.51834106]
[-134.31214905 388.93664551]
[-146.23515320 378.84548950]
[-157.72401428 368.26275635]
[-168.75846863 357.20700073]
[-179.31909180 345.69778442]
[-189.38725281 333.75540161]
[-198.94519043 321.40084839]
[-207.97605896 308.65597534]
[-216.46392822 295.54321289]
[-224.39384460 282.08569336]
[-231.75183105 268.30712891]
[-238.52490234 254.23181152]
[-244.70112610 239.88458252]
[-250.26960754 225.29072571]
[-255.22053528 210.47596741]
[-259.54516602 195.46643066]
[-263.23587036 180.28857422]
[-266.28619385 164.96916199]
[-268.69070435 149.53521729]
[-270.44515991 134.01391602]
[-285.40695190 135.08399963]
[-300.36871338 136.15409851]
[-311.91906738 147.28822327]
[-327.80621338 145.05703735]
[-335.84289551 131.17210388]
[-329.86404419 116.28475189]
[-314.45614624 111.81529999]
[-301.43881226 121.19231415]
[-286.47702026 120.12222290]
[-271.51525879 119.05213928]
[-271.97692871 104.44228363]
[-271.86428833 89.82556915]
[-271.17752075 75.22456360]
[-269.91766357 60.66181183]
[-268.08666992 46.15979385]
[-265.68737793 31.74090385]
[-262.72348022 17.42740250]
[-259.19958496 3.24138689]
[-255.12107849 -10.79523849]
[-250.49429321 -24.66080284]
[-245.32637024 -38.33389664]
[-239.62527466 -51.79341125]
[-233.39981079 -65.01856232]
[-226.65960693 -77.98893738]
[-219.41505432 -90.68450928]
[-211.67735291 -103.08567810]
[-203.45843506 -115.17328644]
[-194.77099609 -126.92868042]
[-185.62843323 -138.33370972]
[-176.04489136 -149.37077332]
[-166.03514099 -160.02281189]
[-155.61465454 -170.27339172]
[-144.79951477 -180.10668945]
[-133.60641479 -189.50752258]
[-122.05265045 -198.46136475]
[-110.15603638 -206.95440674]
[-97.93495941 -214.97351074]
[-85.40827942 -222.50633240]
[-72.59533691 -229.54121399]
[-59.51592255 -236.06730652]
[-46.19022369 -242.07452393]
[-32.63881302 -247.55360413]
[-18.88261795 -252.49607849]
[-4.94287395 -256.89431763]
[9.15889645 -260.74154663]
[23.40092087 -264.03179932]
[37.76120758 -266.76000977]
[52.21759033 -268.92193604]
[66.74774170 -270.51431274]
[81.32923889 -271.53460693]
[95.93955994 -271.98129272]
[110.55615234 -271.85363770]
[125.15644073 -271.15188599]
[139.71789551 -269.87707520]
[154.21801758 -268.03121948]
[168.63444519 -265.61712646]
[182.94490051 -262.63854980]
[197.12728882 -259.10006714]
[211.15971375 -255.00715637]
[225.02052307 -250.36613464]
[238.68830872 -245.18417358]
[252.14196777 -239.46926880]
[265.36071777 -233.23023987]
[278.32415771 -226.47673035]
[291.01229858 -219.21914673]
[303.40551758 -211.46871948]
[315.48468018 -203.23739624]
[327.23114014 -194.53788757]
[338.62680054 -185.38363647]
[349.65399170 -175.78875732]
[360.29577637 -165.76809692]
[370.53564453 -155.33708191]
[380.35784912 -144.51185608]
[389.74716187 -133.30911255]
[398.68914795 -121.74615479]
[407.16995239 -109.84083557]
[415.17654419 -97.61152649]
[422.69647217 -85.07712555]
[429.71820068 -72.25697327]
[436.23086548 -59.17086029]
[442.22442627 -45.83900070]
[447.68957520 -32.28197479]
[452.61791992 -18.52071381]
[457.00186157 -4.57646132]
[460.83459473 9.52925014]
[464.11022949 23.77464485]
[466.82369995 38.13772583]
[468.97079468 52.59631729]
[470.54824829 67.12809753]
[471.55358887 81.71063232]
[471.98526001 96.32140350]
[471.84262085 110.93785858]
[471.12585449 125.53742218]
[469.83612061 140.09754944]
[467.97537231 154.59577942]
[465.54647827 169.00971985]
[462.55319214 183.31710815]
[459.00018311 197.49584961]
[454.89285278 211.52407837]
[450.23760986 225.38011169]
[445.04162598 239.04257202]
[439.31292725 252.49035645]
[433.06033325 265.70269775]
[426.29351807 278.65921021]
[419.02291870 291.33987427]
[411.25976562 303.72512817]
[403.01605225 315.79583740]
[394.30447388 327.53338623]
[405.98410034 336.94540405]
[417.66372681 346.35745239]
[432.97088623 343.15982056]
[446.72775269 350.59503174]
[452.43875122 365.15246582]
[447.40731812 379.95849609]
[434.00915527 388.02218628]
[418.57043457 385.53613281]
[408.38088989 373.67413330]
[408.25167847 358.03707886]
[396.57205200 348.62503052]
[384.89245605 339.21301270]
[374.59915161 350.96191406]
[363.82168579 362.26834106]
[352.57910156 373.11236572]
[340.89120483 383.47485352]
[328.77856445 393.33755493]
[316.26260376 402.68310547]
[303.36532593 411.49496460]
[290.10949707 419.75762939]
[276.51849365 427.45654297]
[262.61627197 434.57812500]
[248.42732239 441.10980225]
[233.97669983 447.04006958]
[219.28985596 452.35845947]
[204.39270020 457.05563354]
[189.31149292 461.12329102]
[174.07281494 464.55422974]
[158.70353699 467.34243774]
[143.23075867 469.48297119]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[37 47]
[38 46]
[39 45]
[145 157]
[146 156]
[147 155]
] def

init

% Start Annotations
38 46 0.16 1 colorpair
39 45 0.32 1 colorpair
145 157 0.32 1 colorpair
146 156 0.0 1 colorpair
147 155 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
37 47 12 gmark
37 cmark
47 cmark
38 cmark
39 cmark
45 cmark
145 cmark
157 cmark

% End Annotations
showpage
end
%%EOF
