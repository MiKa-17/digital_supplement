%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:13:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGAGGCUACUCUUAUGGUGUUCAUGCA_UAGGGGAGCCUCACU_______UUGAUGACUAUCAG______GUGGGGCUUUUCUCUGUCUGCCUCCCG_________CUGAAUACC_________UGAGACACACAGUCUCAAGCACCCGC_________\
) } def
/len { sequence length } bind def

/coor [
[91.02136230 197.44456482]
[85.65034485 211.44999695]
[80.27932739 225.45542908]
[74.90830231 239.46086121]
[69.53728485 253.46629333]
[64.16625977 267.47171021]
[58.79524231 281.47714233]
[61.89883423 297.57992554]
[49.32970047 308.11315918]
[34.01789093 302.24114990]
[31.71487999 286.00451660]
[44.78981018 276.10614014]
[50.16083145 262.10070801]
[55.53184891 248.09526062]
[60.90287018 234.08982849]
[66.27389526 220.08439636]
[71.64491272 206.07896423]
[77.01593018 192.07353210]
[80.59487152 177.50675964]
[82.32563019 162.60693359]
[84.05638885 147.70712280]
[85.78714752 132.80731201]
[87.51790619 117.90749359]
[78.85566711 130.15354919]
[67.00041199 139.34336853]
[52.04393768 140.48526001]
[38.93097305 133.20170593]
[31.99676704 119.90069580]
[33.53381729 104.97965240]
[43.03396606 93.37158966]
[57.35638809 88.91421509]
[71.76416779 93.07999420]
[86.39353943 96.39381409]
[75.14378357 86.47196960]
[63.89403152 76.55012512]
[52.64427948 66.62828064]
[41.39452362 56.70643234]
[30.14477158 46.78458405]
[18.89501762 36.86273956]
[7.64526367 26.94089317]
[-3.60449052 17.01904678]
[-14.85424423 7.09719992]
[-26.10399818 -2.82464671]
[-37.35375214 -12.74649334]
[-48.60350800 -22.66833878]
[-60.37214661 -16.07188416]
[-73.58099365 -13.44040489]
[-86.93373871 -15.01776218]
[-99.12437439 -20.63546181]
[-108.96496582 -29.73053551]
[-115.50138855 -41.40192032]
[-118.10584259 -54.49972153]
[-116.53711700 -67.73850250]
[-110.96285248 -79.82342529]
[-121.82188416 -90.17144012]
[-132.68090820 -100.51945496]
[-143.53994751 -110.86746979]
[-154.39898682 -121.21548462]
[-170.45571899 -124.54910278]
[-175.33946228 -140.20416260]
[-164.02621460 -152.07609558]
[-148.15409851 -147.95205688]
[-144.05096436 -132.07450867]
[-133.19194031 -121.72650146]
[-122.33290100 -111.37848663]
[-111.47386932 -101.03047180]
[-100.61483765 -90.68245697]
[-85.59475708 -97.77385712]
[-68.96742249 -98.57431030]
[-53.26664734 -92.93375397]
[-40.89582443 -81.68578339]
[-33.76001358 -66.52463531]
[-32.97259521 -49.74996185]
[-38.68165970 -33.91809464]
[-27.43190575 -23.99624634]
[-16.18215179 -14.07440090]
[-4.93239784 -4.15255404]
[6.31735611 5.76929235]
[17.56711006 15.69113827]
[28.81686401 25.61298561]
[40.06661606 35.53483200]
[51.31637192 45.45667648]
[62.56612396 55.37852478]
[73.81587982 65.30036926]
[85.06563568 75.22221375]
[96.31538391 85.14406586]
[111.06465149 87.87522888]
[125.12119293 82.63941956]
[139.17773438 77.40361786]
[153.23426819 72.16780853]
[163.46571350 60.10016251]
[178.09321594 62.90830612]
[192.14974976 57.67250061]
[206.20629883 52.43669510]
[220.26283264 47.20088959]
[234.31938171 41.96508408]
[248.37591553 36.72927475]
[245.88314819 21.89072609]
[246.24391174 6.84857321]
[249.44515991 -7.85341644]
[255.37117004 -21.68377495]
[263.80773926 -34.14254379]
[274.44985962 -44.77934647]
[286.91287231 -53.20967102]
[300.74618530 -59.12876129]
[315.44976807 -62.32265091]
[330.49209595 -62.67588425]
[345.32940674 -60.17568588]
[359.42532349 -54.91243744]
[372.27029419 -47.07640839]
[383.39996338 -36.95085907]
[392.41201782 -24.90182686]
[398.98068237 -11.36487389]
[402.86849976 3.17064691]
[403.93493652 18.17928505]
[402.14141846 33.11848831]
[397.55279541 47.44821548]
[390.33493042 60.65045166]
[380.74877930 72.24794769]
[369.14083862 81.82145691]
[355.93072510 89.02490997]
[341.59600830 93.59790802]
[326.65484619 95.37512970]
[311.64739990 94.29233551]
[297.11611938 90.38866425]
[283.58633423 83.80523682]
[271.54714966 74.78003693]
[261.43374634 63.63932037]
[253.61172485 50.78581619]
[239.55517578 56.02162170]
[225.49864197 61.25742722]
[211.44209290 66.49323273]
[197.38555908 71.72904205]
[183.32902527 76.96484375]
[174.10299683 88.65799713]
[158.47007751 86.22434998]
[144.41354370 91.46015930]
[130.35699463 96.69596100]
[116.30045319 101.93177032]
[131.29335022 102.39319611]
[142.10639954 112.78925323]
[143.15679932 127.75242615]
[133.90222168 139.55720520]
[119.12082672 142.10874939]
[106.44428253 134.08969116]
[102.41771698 119.63825226]
[100.68695831 134.53807068]
[98.95619965 149.43788147]
[97.22544098 164.33769226]
[95.49468231 179.23750305]
[105.21869659 167.81631470]
[118.70170593 161.24301147]
[133.68864441 160.61697388]
[147.67286682 166.04295349]
[158.31550598 176.61338806]
[163.83651733 190.56037903]
[163.31251526 205.55122375]
[156.83111572 219.07865906]
[145.47636414 228.88017273]
[131.14738464 233.31643677]
[116.24075317 231.64546204]
[103.24963379 224.14672852]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 18]
[2 17]
[3 16]
[4 15]
[5 14]
[6 13]
[7 12]
[19 150]
[20 149]
[21 148]
[22 147]
[23 146]
[33 86]
[34 85]
[35 84]
[36 83]
[37 82]
[38 81]
[39 80]
[40 79]
[41 78]
[42 77]
[43 76]
[44 75]
[45 74]
[54 67]
[55 66]
[56 65]
[57 64]
[58 63]
[87 139]
[88 138]
[89 137]
[90 136]
[92 134]
[93 133]
[94 132]
[95 131]
[96 130]
[97 129]
] def

init

% Start Annotations
1 18 0.0 0.2 colorpair
2 17 0.0 0.6 colorpair
3 16 0.0 0.2 colorpair
4 15 0.0 1 colorpair
5 14 0.0 1 colorpair
6 13 0.0 0.2 colorpair
7 12 0.16 1 colorpair
19 150 0.0 1 colorpair
20 149 0.0 0.6 colorpair
21 148 0.16 1 colorpair
22 147 0.0 1 colorpair
23 146 0.0 1 colorpair
33 86 0.16 0.6 colorpair
34 85 0.16 1 colorpair
35 84 0.16 1 colorpair
36 83 0.16 1 colorpair
37 82 0.0 0.2 colorpair
38 81 0.16 1 colorpair
39 80 0.0 1 colorpair
40 79 0.0 1 colorpair
41 78 0.0 1 colorpair
42 77 0.0 1 colorpair
43 76 0.0 1 colorpair
44 75 0.16 1 colorpair
45 74 0.16 1 colorpair
54 67 0.16 1 colorpair
55 66 0.0 1 colorpair
56 65 0.16 1 colorpair
57 64 0.0 1 colorpair
58 63 0.0 1 colorpair
87 139 0.0 1 colorpair
88 138 0.0 1 colorpair
89 137 0.16 1 colorpair
90 136 0.0 1 colorpair
92 134 0.0 1 colorpair
93 133 0.0 1 colorpair
94 132 0.16 0.6 colorpair
95 131 0.0 1 colorpair
96 130 0.0 0.6 colorpair
97 129 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
1 18 2 gmark
2 17 1 gmark
3 16 2 gmark
6 13 2 gmark
12 cmark
20 149 1 gmark
148 cmark
33 86 1 gmark
33 cmark
86 cmark
34 cmark
85 cmark
84 cmark
36 cmark
37 82 2 gmark
38 cmark
44 cmark
75 cmark
45 cmark
74 cmark
67 cmark
56 cmark
65 cmark
89 cmark
137 cmark
94 132 1 gmark
94 cmark
132 cmark
96 130 1 gmark

% End Annotations
showpage
end
%%EOF
