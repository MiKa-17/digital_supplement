%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:13:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__CUGUUGUGGCGCUUAUUA_UAAUCUGUUUCACGGUACUGGUAUUGACCUGGAUGGUGCGCAACUCGCUAUGCGAACUCCGGAUCAAGGAGGGAAAUAUUGAGCUGGAGGCAUUCCUAGCUUACGAAUCG___AAGAAGUAGC_AUCC___GCGCGGGG__AACCCCGC_U_U__G__G__A_GA_________CAU_C________CC_UU_U_A____GUUA______\
) } def
/len { sequence length } bind def

/coor [
[85.00202179 627.38543701]
[70.01616669 626.74597168]
[55.05454636 625.68072510]
[40.12925339 624.19061279]
[25.25235176 622.27685547]
[10.43586349 619.94091797]
[-4.30823421 617.18481445]
[-18.96802521 614.01062012]
[-33.53165817 610.42102051]
[-47.98736572 606.41888428]
[-62.32346344 602.00738525]
[-76.52836609 597.19018555]
[-90.59058380 591.97106934]
[-104.49875641 586.35437012]
[-118.24164581 580.34454346]
[-131.80813599 573.94653320]
[-145.18727112 567.16540527]
[-158.36824036 560.00671387]
[-171.34037781 552.47619629]
[-184.09320068 544.58001709]
[-196.61640930 536.32446289]
[-208.89987183 527.71624756]
[-220.93368530 518.76232910]
[-232.70808411 509.46997070]
[-244.21357727 499.84664917]
[-255.44085693 489.90014648]
[-266.38085938 479.63848877]
[-277.02471924 469.07000732]
[-287.36386108 458.20324707]
[-297.38992310 447.04693604]
[-307.09478760 435.61013794]
[-316.47061157 423.90206909]
[-325.50982666 411.93222046]
[-334.20510864 399.71023560]
[-342.54946899 387.24603271]
[-350.53613281 374.54965210]
[-358.15866089 361.63137817]
[-365.41085815 348.50161743]
[-372.28689575 335.17102051]
[-378.78121948 321.65036011]
[-384.88854980 307.95053101]
[-390.60397339 294.08264160]
[-395.92285156 280.05786133]
[-400.84094238 265.88757324]
[-405.35418701 251.58317566]
[-409.45901489 237.15628052]
[-413.15203857 222.61853027]
[-416.43032837 207.98167419]
[-419.29119873 193.25753784]
[-421.73236084 178.45802307]
[-423.75183105 163.59510803]
[-425.34799194 148.68078613]
[-426.51953125 133.72711182]
[-427.26550293 118.74617767]
[-427.58529663 103.75009155]
[-427.47869873 88.75098419]
[-426.94577026 73.76095581]
[-425.98690796 58.79214478]
[-424.60293579 43.85663605]
[-422.79495239 28.96650887]
[-420.56442261 14.13379097]
[-417.91314697 -0.62952453]
[-414.84326172 -15.31150627]
[-411.35723877 -29.90028763]
[-407.45794678 -44.38407516]
[-403.14846802 -58.75116730]
[-398.43234253 -72.98994446]
[-393.31335449 -87.08890533]
[-387.79562378 -101.03665161]
[-381.88366699 -114.82191467]
[-375.58221436 -128.43354797]
[-368.89636230 -141.86053467]
[-361.83154297 -155.09205627]
[-354.39343262 -168.11738586]
[-346.58804321 -180.92601013]
[-338.42172241 -193.50758362]
[-329.90106201 -205.85192871]
[-321.03289795 -217.94906616]
[-311.82446289 -229.78923035]
[-302.28317261 -241.36282349]
[-292.41671753 -252.66052246]
[-282.23309326 -263.67318726]
[-271.74053955 -274.39190674]
[-260.94750977 -284.80801392]
[-249.86276245 -294.91311646]
[-238.49522400 -304.69903564]
[-226.85411072 -314.15783691]
[-214.94880676 -323.28189087]
[-202.78894043 -332.06384277]
[-190.38435364 -340.49658203]
[-177.74507141 -348.57330322]
[-164.88128662 -356.28744507]
[-151.80342102 -363.63278198]
[-138.52203369 -370.60339355]
[-125.04785919 -377.19366455]
[-111.39179230 -383.39822388]
[-97.56486511 -389.21206665]
[-83.57826233 -394.63052368]
[-69.44327545 -399.64916992]
[-55.17133713 -404.26400757]
[-40.77397919 -408.47125244]
[-26.26284599 -412.26751709]
[-11.64965820 -415.64974976]
[3.05377030 -418.61523438]
[17.83555603 -421.16152954]
[32.68375015 -423.28659058]
[47.58635330 -424.98870850]
[62.53131866 -426.26647949]
[77.50656891 -427.11892700]
[92.50000000 -427.54531860]
[92.50000000 -442.54531860]
[92.50000000 -457.54531860]
[80.40541840 -467.45770264]
[77.56279755 -482.83474731]
[85.31433868 -496.41589355]
[100.00000000 -501.78854370]
[114.68566132 -496.41589355]
[122.43720245 -482.83474731]
[119.59458160 -467.45770264]
[107.50000000 -457.54531860]
[107.50000000 -442.54531860]
[107.50000000 -427.54531860]
[122.49343109 -427.11892700]
[137.46867371 -426.26647949]
[152.41365051 -424.98870850]
[167.31625366 -423.28659058]
[182.16444397 -421.16152954]
[196.94622803 -418.61523438]
[211.64965820 -415.64974976]
[226.26284790 -412.26751709]
[240.77398682 -408.47125244]
[255.17134094 -404.26400757]
[269.44326782 -399.64916992]
[283.57824707 -394.63052368]
[297.56488037 -389.21206665]
[311.39178467 -383.39822388]
[325.04785156 -377.19366455]
[338.52203369 -370.60339355]
[351.80343628 -363.63278198]
[364.88128662 -356.28744507]
[377.74505615 -348.57330322]
[390.38436890 -340.49658203]
[402.78894043 -332.06384277]
[414.94879150 -323.28189087]
[426.85409546 -314.15783691]
[438.49523926 -304.69903564]
[449.86276245 -294.91311646]
[460.94750977 -284.80801392]
[471.74053955 -274.39190674]
[482.23309326 -263.67318726]
[492.41671753 -252.66052246]
[502.28317261 -241.36282349]
[511.82446289 -229.78923035]
[521.03289795 -217.94906616]
[529.90106201 -205.85192871]
[538.42175293 -193.50758362]
[546.58807373 -180.92601013]
[554.39343262 -168.11738586]
[561.83154297 -155.09205627]
[568.89636230 -141.86053467]
[575.58221436 -128.43354797]
[581.88366699 -114.82191467]
[587.79565430 -101.03665161]
[593.31335449 -87.08890533]
[598.43231201 -72.98994446]
[603.14849854 -58.75116730]
[607.45794678 -44.38407516]
[611.35723877 -29.90028763]
[614.84326172 -15.31150627]
[617.91314697 -0.62952453]
[620.56439209 14.13379097]
[622.79498291 28.96650887]
[624.60296631 43.85663605]
[625.98693848 58.79214478]
[626.94573975 73.76095581]
[627.47869873 88.75098419]
[627.58532715 103.75009155]
[627.26550293 118.74617767]
[626.51953125 133.72711182]
[625.34796143 148.68078613]
[623.75183105 163.59510803]
[621.73236084 178.45802307]
[619.29119873 193.25753784]
[616.43029785 207.98167419]
[613.15203857 222.61853027]
[609.45898438 237.15628052]
[605.35418701 251.58317566]
[600.84094238 265.88757324]
[595.92285156 280.05786133]
[590.60394287 294.08264160]
[584.88854980 307.95053101]
[578.78118896 321.65036011]
[572.28686523 335.17102051]
[565.41082764 348.50161743]
[558.15863037 361.63137817]
[550.53613281 374.54965210]
[542.54949951 387.24603271]
[534.20513916 399.71023560]
[525.50982666 411.93222046]
[516.47058105 423.90206909]
[507.09478760 435.61013794]
[497.38992310 447.04693604]
[487.36386108 458.20324707]
[477.02471924 469.07000732]
[466.38085938 479.63848877]
[455.44085693 489.90014648]
[444.21356201 499.84664917]
[432.70806885 509.46997070]
[420.93368530 518.76232910]
[408.89987183 527.71624756]
[396.61642456 536.32446289]
[384.09320068 544.58001709]
[371.34036255 552.47619629]
[358.36825562 560.00671387]
[345.18728638 567.16540527]
[331.80813599 573.94653320]
[318.24163818 580.34454346]
[304.49874878 586.35437012]
[290.59057617 591.97106934]
[276.52835083 597.19018555]
[262.32345581 602.00738525]
[247.98736572 606.41888428]
[233.53166199 610.42102051]
[218.96801758 614.01062012]
[204.30822754 617.18481445]
[189.56413269 619.94091797]
[174.74765015 622.27685547]
[159.87074280 624.19061279]
[144.94544983 625.68072510]
[129.98382568 626.74597168]
[114.99797821 627.38543701]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[110 122]
[111 121]
[112 120]
] def

init

% Start Annotations
110 122 0.32 1 colorpair
111 121 0.0 1 colorpair
112 120 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
110 cmark
122 cmark

% End Annotations
showpage
end
%%EOF
