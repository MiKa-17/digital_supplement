%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:25:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__________________________GAUGCCGAACAAACGGAGCGUGUUAAAACUGGUGGUUAUCUGUGCCACGGUAAUAUCACUGGCAUGGAUAACCCGCAGCACGCUGUGUGAGCUGCGCAUCCGAUCGGGCAACACGGAGGUUGC_GGCCAUUUUGGCUUAC__GAAUCCGAA____\
) } def
/len { sequence length } bind def

/coor [
[97.10245514 415.79476929]
[84.69736481 415.43710327]
[72.31591034 414.59231567]
[59.97721100 413.26171875]
[47.70031357 411.44738770]
[35.50417709 409.15209961]
[23.40764046 406.37942505]
[11.42937851 403.13360596]
[-0.41210902 399.41967773]
[-12.09853649 395.24337769]
[-23.61185646 390.61114502]
[-34.93429184 385.53015137]
[-46.04835510 380.00823975]
[-56.93688583 374.05392456]
[-67.58306885 367.67639160]
[-77.97046661 360.88549805]
[-88.08303070 353.69177246]
[-97.90515137 346.10626221]
[-107.42166138 338.14068604]
[-116.61786652 329.80740356]
[-125.47955322 321.11920166]
[-133.99305725 312.08956909]
[-142.14521790 302.73242188]
[-149.92344666 293.06219482]
[-157.31573486 283.09384155]
[-164.31065369 272.84274292]
[-170.89743042 262.32473755]
[-177.06587219 251.55606079]
[-182.80645752 240.55334473]
[-188.11032104 229.33358765]
[-192.96928406 217.91409302]
[-197.37582397 206.31253052]
[-201.32315063 194.54678345]
[-204.80516052 182.63504028]
[-207.81648254 170.59568787]
[-210.35246277 158.44732666]
[-212.40917969 146.20869446]
[-213.98345947 133.89871216]
[-215.07287598 121.53637695]
[-215.67575073 109.14079285]
[-215.79115295 96.73108673]
[-215.41888428 84.32643127]
[-214.55953979 71.94598389]
[-213.21444702 59.60885239]
[-211.38568115 47.33409882]
[-209.07604980 35.14067078]
[-206.28913879 23.04740143]
[-203.02923584 11.07296467]
[-199.30139160 -0.76414680]
[-195.11135864 -12.44565487]
[-190.46559143 -23.95351982]
[-185.37129211 -35.26997375]
[-179.83630371 -46.37753296]
[-173.86917114 -57.25905609]
[-167.47914124 -67.89773560]
[-160.67604065 -78.27713776]
[-153.47041321 -88.38123322]
[-145.87335205 -98.19442749]
[-137.89660645 -107.70156860]
[-129.55249023 -116.88796234]
[-120.85390472 -125.73943329]
[-111.81425476 -134.24230957]
[-102.44751740 -142.38345337]
[-92.76815796 -150.15029907]
[-82.79111481 -157.53086853]
[-72.53179932 -164.51373291]
[-62.00605392 -171.08813477]
[-51.23012924 -177.24391174]
[-40.22067261 -182.97155762]
[-28.99468422 -188.26222229]
[-34.79468536 -202.09552002]
[-40.59468460 -215.92880249]
[-46.39468765 -229.76210022]
[-61.63992310 -230.50068665]
[-75.05084991 -237.78833008]
[-83.96471405 -250.17807007]
[-86.61167145 -265.20993042]
[-82.46614838 -279.89929199]
[-72.35125732 -291.32958984]
[-58.27531433 -297.23132324]
[-43.03310394 -296.43270874]
[-29.65098190 -289.09231567]
[-20.78597450 -276.66757202]
[-18.19823837 -261.62539673]
[-22.40156937 -246.95248413]
[-32.56139374 -235.56210327]
[-26.76139259 -221.72880554]
[-20.96139145 -207.89550781]
[-15.16139030 -194.06222534]
[10.72364521 -202.92651367]
[37.27878952 -209.51701355]
[64.30472565 -213.78430176]
[91.59858704 -215.69630432]
[118.95550537 -215.23867798]
[146.17015076 -212.41487122]
[173.03823853 -207.24607849]
[199.35810852 -199.77108765]
[224.93217468 -190.04600525]
[249.56851196 -178.14384460]
[273.08218384 -164.15391541]
[295.29669189 -148.18125916]
[304.85006714 -159.74554443]
[314.40344238 -171.30984497]
[323.95684814 -182.87414551]
[333.51022339 -194.43844604]
[327.53332520 -208.52870178]
[328.80065918 -223.78164673]
[337.02102661 -236.69227600]
[350.30541992 -244.29380798]
[365.60119629 -244.83947754]
[379.39349365 -238.20388794]
[388.51293945 -225.91186523]
[390.86398315 -210.78799438]
[385.90631104 -196.30766296]
[374.77920532 -185.79830933]
[360.03958130 -181.67494202]
[345.07452393 -184.88507080]
[335.52111816 -173.32077026]
[325.96774292 -161.75646973]
[316.41436768 -150.19216919]
[306.86099243 -138.62786865]
[316.07678223 -130.31622314]
[324.95886230 -121.64891052]
[333.49359131 -112.63932037]
[341.66772461 -103.30136108]
[349.46868896 -93.64945984]
[356.88439941 -83.69851685]
[363.90341187 -73.46389771]
[370.51489258 -62.96141434]
[376.70864868 -52.20727539]
[382.47509766 -41.21809387]
[387.80535889 -30.01083755]
[392.69116211 -18.60281372]
[397.12496948 -7.01164055]
[401.09994507 4.74478531]
[404.60995483 16.64830780]
[407.64959717 28.68054390]
[410.21414185 40.82291412]
[412.29962158 53.05667114]
[413.90286255 65.36291504]
[415.02136230 77.72264862]
[415.65338135 90.11678314]
[415.79797363 102.52618408]
[415.45489502 114.93167877]
[414.62466431 127.31411743]
[413.30859375 139.65437317]
[411.50866699 151.93339539]
[409.22775269 164.13223267]
[406.46926880 176.23200989]
[403.23754883 188.21408081]
[399.53756714 200.05993652]
[395.37500000 211.75126648]
[390.75631714 223.27001953]
[385.68862915 234.59841919]
[380.17977905 245.71897888]
[374.23828125 256.61450195]
[367.87329102 267.26818848]
[361.09460449 277.66354370]
[353.91275024 287.78457642]
[346.33880615 297.61560059]
[338.38446045 307.14147949]
[330.06198120 316.34747314]
[321.38421631 325.21936035]
[312.36459351 333.74346924]
[303.01702881 341.90664673]
[293.35595703 349.69622803]
[283.39630127 357.10025024]
[273.15344238 364.10720825]
[262.64318848 370.70635986]
[251.88177490 376.88745117]
[240.88581848 382.64099121]
[229.67230225 387.95803833]
[218.25854492 392.83041382]
[206.66215515 397.25061035]
[194.90106201 401.21176147]
[182.99342346 404.70776367]
[170.95762634 407.73324585]
[158.81224060 410.28350830]
[146.57604980 412.35461426]
[134.26791382 413.94338989]
[121.90688324 415.04733276]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 89]
[71 88]
[72 87]
[73 86]
[101 121]
[102 120]
[103 119]
[104 118]
[105 117]
] def

init

% Start Annotations
71 88 0.32 1 colorpair
73 86 0.0 1 colorpair
101 121 0.0 0.2 colorpair
102 120 0.48 1 colorpair
103 119 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
70 89 6 gmark
70 cmark
89 cmark
71 cmark
88 cmark
72 87 8 gmark
72 cmark
87 cmark
101 121 2 gmark
102 cmark
120 cmark
103 cmark
104 118 6 gmark
104 cmark
118 cmark
105 117 6 gmark
105 cmark
117 cmark

% End Annotations
showpage
end
%%EOF
