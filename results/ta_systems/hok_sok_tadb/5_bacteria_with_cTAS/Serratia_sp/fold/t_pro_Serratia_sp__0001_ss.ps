%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:25:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
________________________AUGAUGCCGAACAAACGGAGCCUGUUAAAACUGGUGGUUAUUUGUGCCACGGUAAUAUCACUGGCAUGGAUAACCCGCAGCACGCUGUGUGAGCUGCGCAUCCGAUCGGGCAACACGGAGGUUGC_GGCCAUUUUGGCUUACGAAUCCGAACGG_\
) } def
/len { sequence length } bind def

/coor [
[113.79206848 390.35739136]
[102.01508331 390.67779541]
[90.23479462 390.52069092]
[78.47054291 389.88638306]
[66.74165344 388.77590942]
[55.06740189 387.19104004]
[43.46695709 385.13446045]
[31.95937538 382.60946655]
[20.56356049 379.62026978]
[9.29823303 376.17175293]
[-1.81810439 372.26956177]
[-12.76718998 367.92013550]
[-23.53103828 363.13061523]
[-34.09196854 357.90887451]
[-44.43263626 352.26345825]
[-54.53604889 346.20367432]
[-64.38561249 339.73947144]
[-73.96514893 332.88143921]
[-83.25891876 325.64086914]
[-92.25166321 318.02966309]
[-100.92860413 310.06030273]
[-109.27548981 301.74591064]
[-117.27861023 293.10009766]
[-124.92481232 284.13708496]
[-132.20155334 274.87161255]
[-139.09686279 265.31887817]
[-145.59941101 255.49458313]
[-151.69853210 245.41487122]
[-157.38421631 235.09629822]
[-162.64709473 224.55580139]
[-167.47853088 213.81069946]
[-171.87060547 202.87864685]
[-175.81608582 191.77760315]
[-179.30848694 180.52580261]
[-182.34210205 169.14173889]
[-184.91191101 157.64408875]
[-187.01371765 146.05174255]
[-188.64407349 134.38375854]
[-189.80026245 122.65928650]
[-190.48043823 110.89759827]
[-190.68344116 99.11801147]
[-190.40895081 87.33986664]
[-189.65742493 75.58251953]
[-188.43009949 63.86528778]
[-186.72897339 52.20740891]
[-184.55686951 40.62803650]
[-181.91732788 29.14619064]
[-178.81469727 17.78073311]
[-175.25405884 6.55033302]
[-171.24128723 -4.52656221]
[-166.78295898 -15.43175602]
[-161.88639832 -26.14733696]
[-156.55966187 -36.65570068]
[-150.81147766 -46.93959045]
[-144.65129089 -56.98210526]
[-138.08924866 -66.76675415]
[-131.13609314 -76.27746582]
[-123.80326843 -85.49861908]
[-116.10280609 -94.41506195]
[-108.04737091 -103.01214600]
[-99.65018463 -111.27574921]
[-90.92504120 -119.19230652]
[-81.88627625 -126.74880981]
[-72.54873657 -133.93283081]
[-62.92776108 -140.73260498]
[-53.03915405 -147.13691711]
[-42.89915466 -153.13528442]
[-32.52442169 -158.71783447]
[-21.93199730 -163.87539673]
[-11.13928127 -168.59951782]
[-16.51480103 -182.60322571]
[-21.89031982 -196.60693359]
[-27.26583862 -210.61064148]
[-42.48146820 -211.81370544]
[-55.66395569 -219.50688171]
[-64.19590759 -232.16265869]
[-66.38329315 -247.26821899]
[-61.79182053 -261.82434082]
[-51.33311462 -272.94091797]
[-37.08376694 -278.41073608]
[-21.87299538 -277.14776611]
[-8.72090626 -269.40274048]
[-0.23885907 -256.71347046]
[1.88902986 -241.59939575]
[-2.75973296 -227.06146240]
[-13.26213264 -215.98616028]
[-7.88661337 -201.98245239]
[-2.51109409 -187.97874451]
[2.86442518 -173.97503662]
[27.13018417 -181.40296936]
[51.95132446 -186.68617249]
[77.13866425 -189.78440857]
[102.50024414 -190.67402649]
[127.84277344 -189.34826660]
[152.97309875 -185.81723022]
[177.69967651 -180.10783386]
[201.83407593 -172.26358032]
[225.19233704 -162.34426880]
[247.59643555 -150.42549133]
[268.87564087 -136.59809875]
[288.86773682 -120.96745300]
[298.90469360 -132.11462402]
[308.94165039 -143.26179504]
[318.97860718 -154.40896606]
[329.01559448 -165.55613708]
[328.36886597 -181.11955261]
[338.70657349 -192.28138733]
[353.54788208 -192.80201721]
[363.58483887 -203.94918823]
[369.68997192 -219.76574707]
[386.57849121 -218.27766418]
[389.82376099 -201.63720703]
[374.73199463 -193.91223145]
[364.69503784 -182.76506042]
[365.72860718 -167.95062256]
[355.70849609 -156.50282288]
[340.16275024 -155.51918030]
[330.12579346 -144.37200928]
[320.08883667 -133.22483826]
[310.05187988 -122.07766724]
[300.01492310 -110.93049622]
[310.66857910 -100.29076385]
[320.75701904 -89.11365509]
[330.25317383 -77.42916870]
[339.13159180 -65.26863861]
[347.36840820 -52.66469955]
[354.94155884 -39.65116882]
[361.83068848 -26.26295662]
[368.01733398 -12.53598404]
[373.48489380 1.49291754]
[378.21871948 15.78611088]
[382.20608521 30.30524635]
[385.43630981 45.01137161]
[387.90072632 59.86502838]
[389.59268188 74.82637024]
[390.50769043 89.85524750]
[390.64328003 104.91134644]
[389.99908447 119.95426178]
[388.57681274 134.94364929]
[386.38031006 149.83927917]
[383.41546631 164.60119629]
[379.69021606 179.18978882]
[375.21456909 193.56590271]
[370.00051880 207.69099426]
[364.06210327 221.52716064]
[357.41519165 235.03726196]
[350.07763672 248.18507385]
[342.06912231 260.93530273]
[333.41116333 273.25375366]
[324.12698364 285.10736084]
[314.24145508 296.46435547]
[325.03155518 306.88421631]
[335.82165527 317.30410767]
[346.61175537 327.72396851]
[357.40185547 338.14385986]
[372.99569702 344.79727173]
[370.91912842 361.62356567]
[354.17553711 364.28610229]
[346.98196411 348.93392944]
[336.19186401 338.51406860]
[325.40176392 328.09417725]
[314.61166382 317.67431641]
[303.82159424 307.25442505]
[295.25595093 315.34332275]
[286.36959839 323.07849121]
[277.17712402 330.44720459]
[267.69357300 337.43737793]
[257.93457031 344.03750610]
[247.91615295 350.23678589]
[237.65473938 356.02502441]
[227.16722107 361.39270020]
[216.47080994 366.33096313]
[205.58308411 370.83178711]
[194.52191162 374.88769531]
[183.30548096 378.49206543]
[171.95219421 381.63897705]
[160.48072815 384.32327271]
[148.90991211 386.54049683]
[137.25875854 388.28704834]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[70 89]
[71 88]
[72 87]
[73 86]
[101 121]
[102 120]
[103 119]
[104 118]
[105 117]
[108 114]
[109 113]
[151 163]
[152 162]
[153 161]
[154 160]
[155 159]
] def

init

% Start Annotations
71 88 0.32 1 colorpair
73 86 0.0 1 colorpair
101 121 0.0 0.6 colorpair
102 120 0.48 1 colorpair
103 119 0.16 1 colorpair
108 114 0.32 0.6 colorpair
109 113 0.0 0.6 colorpair
152 162 0.0 1 colorpair
153 161 0.0 0.2 colorpair
154 160 0.16 1 colorpair
155 159 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
70 89 3 gmark
70 cmark
89 cmark
71 cmark
88 cmark
72 87 4 gmark
72 cmark
87 cmark
101 121 1 gmark
102 cmark
120 cmark
103 cmark
104 118 3 gmark
104 cmark
118 cmark
105 117 3 gmark
105 cmark
117 cmark
108 114 1 gmark
108 cmark
114 cmark
109 113 1 gmark
151 163 3 gmark
151 cmark
163 cmark
153 161 2 gmark
154 cmark

% End Annotations
showpage
end
%%EOF
