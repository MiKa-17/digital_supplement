%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:26:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__CCCUGAUCUGGUGCGUAUUUAUAGUGUGUCUCACACUGCUGAUAUUCACCUUGCUGACACGAAAAUCGCUCUGCGAAAUUCGAUACAAGGACGGAGACAGGGAGGUGGCGGCUUUCAUGGCCUACGAAUCCGGUAAGU_AGCAACCUGGAGGCGGGGG__AAACCCCGCCUUUUCAGG_GCUGA_GUUGUCUG___A__UGCCCGAAGCGCCUUUAUGAAGGGG__U_CC__\
) } def
/len { sequence length } bind def

/coor [
[85.35289764 634.55999756]
[70.36625671 633.93890381]
[55.40292740 632.89776611]
[40.47468567 631.43731689]
[25.59327507 629.55883789]
[10.77040482 627.26367188]
[-3.98226452 624.55371094]
[-18.65312576 621.43103027]
[-33.23063660 617.89813232]
[-47.70333099 613.95782471]
[-62.05981827 609.61309814]
[-76.28881073 604.86749268]
[-90.37909698 599.72460938]
[-104.31961060 594.18865967]
[-118.09938049 588.26385498]
[-131.70755005 581.95489502]
[-145.13343811 575.26678467]
[-158.36645508 568.20477295]
[-171.39620972 560.77435303]
[-184.21244812 552.98144531]
[-196.80506897 544.83215332]
[-209.16419983 536.33288574]
[-221.28007507 527.49035645]
[-233.14320374 518.31152344]
[-244.74421692 508.80352783]
[-256.07400513 498.97393799]
[-267.12365723 488.83044434]
[-277.88449097 478.38104248]
[-288.34802246 467.63397217]
[-298.50601196 456.59765625]
[-308.35046387 445.28076172]
[-317.87365723 433.69223022]
[-327.06808472 421.84118652]
[-335.92654419 409.73690796]
[-344.44201660 397.38897705]
[-352.60781860 384.80706787]
[-360.41757202 372.00106812]
[-367.86505127 358.98107910]
[-374.94445801 345.75735474]
[-381.65020752 332.34027100]
[-387.97698975 318.74038696]
[-393.91989136 304.96841431]
[-399.47418213 291.03518677]
[-404.63552856 276.95166016]
[-409.39984131 262.72891235]
[-413.76339722 248.37812805]
[-417.72274780 233.91062927]
[-421.27478027 219.33776855]
[-424.41671753 204.67102051]
[-427.14605713 189.92192078]
[-429.46066284 175.10208130]
[-431.35870361 160.22314453]
[-432.83871460 145.29684448]
[-433.89953613 130.33488464]
[-434.54028320 115.34907532]
[-434.76049805 100.35118866]
[-434.55999756 85.35301971]
[-433.93890381 70.36637878]
[-432.89776611 55.40304947]
[-431.43734741 40.47480774]
[-429.55883789 25.59339714]
[-427.26370239 10.77052689]
[-424.55374146 -3.98214340]
[-421.43109131 -18.65300560]
[-417.89819336 -33.23051834]
[-413.95785522 -47.70321274]
[-409.61315918 -62.05970001]
[-404.86752319 -76.28868866]
[-399.72467041 -90.37898254]
[-394.18869019 -104.31949615]
[-388.26388550 -118.09926605]
[-381.95495605 -131.70744324]
[-375.26684570 -145.13333130]
[-368.20480347 -158.36634827]
[-360.77441406 -171.39610291]
[-352.98150635 -184.21234131]
[-344.83224487 -196.80497742]
[-336.33297729 -209.16409302]
[-327.49044800 -221.27998352]
[-318.31158447 -233.14309692]
[-308.80361938 -244.74412537]
[-298.97402954 -256.07391357]
[-288.83053589 -267.12356567]
[-278.38113403 -277.88439941]
[-267.63406372 -288.34793091]
[-256.59774780 -298.50592041]
[-245.28085327 -308.35037231]
[-233.69233704 -317.87359619]
[-221.84127808 -327.06802368]
[-209.73703003 -335.92648315]
[-197.38908386 -344.44195557]
[-184.80715942 -352.60775757]
[-172.00117493 -360.41748047]
[-158.98118591 -367.86499023]
[-145.75746155 -374.94439697]
[-132.34036255 -381.65014648]
[-118.74049377 -387.97695923]
[-104.96852112 -393.91986084]
[-91.03529358 -399.47415161]
[-76.95176697 -404.63549805]
[-62.72902298 -409.39981079]
[-48.37825394 -413.76336670]
[-33.91074753 -417.72271729]
[-19.33788872 -421.27474976]
[-4.67114115 -424.41668701]
[10.07795620 -427.14602661]
[24.89780045 -429.46063232]
[39.77672958 -431.35870361]
[54.70304108 -432.83871460]
[69.66498566 -433.89950562]
[84.65080261 -434.54028320]
[99.64868927 -434.76049805]
[99.84921265 -449.75915527]
[100.04973602 -464.75781250]
[88.08873749 -474.83099365]
[85.45193481 -490.24465942]
[93.38433838 -503.72097778]
[108.14051056 -508.89682007]
[122.75303650 -503.32833862]
[130.32232666 -489.64477539]
[127.27440643 -474.30709839]
[115.04839325 -464.55728149]
[114.84786987 -449.55862427]
[114.64734650 -434.55996704]
[129.63398743 -433.93887329]
[144.59732056 -432.89773560]
[159.52555847 -431.43731689]
[174.40696716 -429.55877686]
[189.22984314 -427.26364136]
[203.98251343 -424.55364990]
[218.65336609 -421.43099976]
[233.23088074 -417.89810181]
[247.70356750 -413.95773315]
[262.06005859 -409.61303711]
[276.28903198 -404.86740112]
[290.37933350 -399.72454834]
[304.31985474 -394.18853760]
[318.09960938 -388.26373291]
[331.70776367 -381.95477295]
[345.13366699 -375.26666260]
[358.36666870 -368.20462036]
[371.39642334 -360.77423096]
[384.21264648 -352.98132324]
[396.80526733 -344.83203125]
[409.16439819 -336.33276367]
[421.28027344 -327.49023438]
[433.14340210 -318.31134033]
[444.74441528 -308.80337524]
[456.07418823 -298.97378540]
[467.12384033 -288.83029175]
[477.88467407 -278.38088989]
[488.34817505 -267.63378906]
[498.50616455 -256.59744263]
[508.35061646 -245.28057861]
[517.87384033 -233.69204712]
[527.06823730 -221.84098816]
[535.92669678 -209.73672485]
[544.44213867 -197.38876343]
[552.60797119 -184.80685425]
[560.41766357 -172.00085449]
[567.86517334 -158.98086548]
[574.94458008 -145.75712585]
[581.65032959 -132.34004211]
[587.97711182 -118.74015045]
[593.91998291 -104.96817780]
[599.47430420 -91.03494263]
[604.63562012 -76.95141602]
[609.39990234 -62.72866821]
[613.76348877 -48.37789536]
[617.72283936 -33.91038895]
[621.27484131 -19.33752823]
[624.41674805 -4.67077780]
[627.14611816 10.07832146]
[629.46069336 24.89816666]
[631.35876465 39.77709579]
[632.83874512 54.70340729]
[633.89953613 69.66535950]
[634.54028320 84.65116882]
[634.76049805 99.64906311]
[634.55999756 114.64722443]
[633.93890381 129.63386536]
[632.89776611 144.59719849]
[631.43731689 159.52543640]
[629.55877686 174.40684509]
[627.26367188 189.22972107]
[624.55371094 203.98239136]
[621.43103027 218.65324402]
[617.89813232 233.23075867]
[613.95776367 247.70344543]
[609.61309814 262.05993652]
[604.86743164 276.28890991]
[599.72460938 290.37921143]
[594.18859863 304.31973267]
[588.26379395 318.09948730]
[581.95483398 331.70767212]
[575.26672363 345.13354492]
[568.20471191 358.36657715]
[560.77429199 371.39633179]
[552.98138428 384.21255493]
[544.83209229 396.80517578]
[536.33282471 409.16430664]
[527.49029541 421.28018188]
[518.31140137 433.14331055]
[508.80346680 444.74432373]
[498.97384644 456.07409668]
[488.83035278 467.12374878]
[478.38098145 477.88458252]
[467.63388062 488.34808350]
[456.59753418 498.50607300]
[445.28067017 508.35055542]
[433.69213867 517.87371826]
[421.84109497 527.06817627]
[409.73681641 535.92663574]
[397.38888550 544.44207764]
[384.80694580 552.60791016]
[372.00094604 560.41760254]
[358.98098755 567.86511230]
[345.75723267 574.94451904]
[332.34014893 581.65026855]
[318.74026489 587.97705078]
[304.96829224 593.91992188]
[291.03506470 599.47424316]
[276.95153809 604.63555908]
[262.72879028 609.39990234]
[248.37802124 613.76342773]
[233.91050720 617.72277832]
[219.33764648 621.27484131]
[204.67089844 624.41674805]
[189.92179871 627.14605713]
[175.10195923 629.46069336]
[160.22302246 631.35870361]
[145.29670715 632.83874512]
[130.33476257 633.89953613]
[115.34895325 634.54028320]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[112 124]
[113 123]
[114 122]
] def

init

% Start Annotations
113 123 0.0 0.2 colorpair
114 122 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
112 124 3 gmark
112 cmark
124 cmark
113 123 2 gmark

% End Annotations
showpage
end
%%EOF
