%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:26:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__CUCUGAUCGGGAGCGUAUUUAUUGUGUGUCUGACACUGCUGAUAUUCACCUUGAUGACACGAAAAUCGCUCUGCGAGAUUCGAUUCAAGGAUGGACAUAGGGAGGUGGCGGCUAUAAUGGCCUACGAAUCCGGUAAGUA_GCAACC_GGAGGCGGGGG__AAUCCCCGCCUUUUC_AGG_GCUG_____GUCU_______CC__A_GCGCCUUUAU_AAGGG_________\
) } def
/len { sequence length } bind def

/coor [
[85.70684814 632.18139648]
[70.71990967 631.56750488]
[55.75622177 630.53161621]
[40.82765198 629.07458496]
[25.94605446 627.19763184]
[11.12324333 624.90209961]
[-3.62901592 622.18994141]
[-18.29901314 619.06323242]
[-32.87510300 615.52453613]
[-47.34571075 611.57653809]
[-61.69935608 607.22247314]
[-75.92464447 602.46575928]
[-90.01027679 597.31018066]
[-103.94507599 591.75982666]
[-117.71797943 585.81909180]
[-131.31805420 579.49273682]
[-144.73449707 572.78570557]
[-157.95668030 565.70343018]
[-170.97407532 558.25140381]
[-183.77638245 550.43566895]
[-196.35342407 542.26232910]
[-208.69520569 533.73791504]
[-220.79193115 524.86920166]
[-232.63401794 515.66320801]
[-244.21205139 506.12728882]
[-255.51684570 496.26895142]
[-266.53942871 486.09606934]
[-277.27102661 475.61666870]
[-287.70315552 464.83911133]
[-297.82751465 453.77194214]
[-307.63607788 442.42391968]
[-317.12103271 430.80410767]
[-326.27490234 418.92166138]
[-335.09036255 406.78607178]
[-343.56042480 394.40695190]
[-351.67840576 381.79412842]
[-359.43783569 368.95758057]
[-366.83255005 355.90756226]
[-373.85668945 342.65438843]
[-380.50466919 329.20858765]
[-386.77120972 315.58084106]
[-392.65133667 301.78198242]
[-398.14041138 287.82290649]
[-403.23403931 273.71475220]
[-407.92819214 259.46871948]
[-412.21914673 245.09606934]
[-416.10348511 230.60824585]
[-419.57812500 216.01675415]
[-422.64031982 201.33314514]
[-425.28762817 186.56912231]
[-427.51797485 171.73635864]
[-429.32955933 156.84666443]
[-430.72094727 141.91183472]
[-431.69104004 126.94373322]
[-432.23904419 111.95424652]
[-432.36456299 96.95526886]
[-432.06750488 81.95870972]
[-431.34805298 66.97647095]
[-430.20681763 52.02044678]
[-428.64471436 37.10251236]
[-426.66293335 22.23450470]
[-424.26309204 7.42822886]
[-421.44708252 -7.30456114]
[-418.21713257 -21.95217133]
[-414.57580566 -36.50297165]
[-410.52600098 -50.94541550]
[-406.07092285 -65.26803589]
[-401.21414185 -79.45946503]
[-395.95947266 -93.50843048]
[-390.31109619 -107.40379333]
[-384.27352905 -121.13450623]
[-377.85150146 -134.68968201]
[-371.05017090 -148.05856323]
[-363.87490845 -161.23052979]
[-356.33142090 -174.19511414]
[-348.42565918 -186.94204712]
[-340.16394043 -199.46119690]
[-331.55282593 -211.74263000]
[-322.59912109 -223.77659607]
[-313.30996704 -235.55354309]
[-303.69271851 -247.06413269]
[-293.75500488 -258.29919434]
[-283.50469971 -269.24984741]
[-272.94998169 -279.90737915]
[-262.09921265 -290.26333618]
[-250.96099854 -300.30947876]
[-239.54418945 -310.03787231]
[-227.85784912 -319.44076538]
[-215.91123962 -328.51068115]
[-203.71385193 -337.24044800]
[-191.27537537 -345.62313843]
[-178.60566711 -353.65206909]
[-165.71481323 -361.32089233]
[-152.61302185 -368.62350464]
[-139.31069946 -375.55410767]
[-125.81841278 -382.10720825]
[-112.14686584 -388.27761841]
[-98.30690765 -394.06039429]
[-84.30953979 -399.45101929]
[-70.16585541 -404.44512939]
[-55.88709259 -409.03881836]
[-41.48458481 -413.22842407]
[-26.96976280 -417.01062012]
[-12.35415173 -420.38241577]
[2.35064960 -423.34112549]
[17.13296700 -425.88436890]
[31.98106384 -428.01016235]
[46.88315582 -429.71682739]
[61.82741547 -431.00299072]
[76.80197906 -431.86761475]
[91.79495239 -432.31005859]
[106.79444122 -432.32992554]
[107.19715881 -447.32452393]
[107.59987640 -462.31912231]
[95.77578735 -472.55261230]
[93.34703064 -488.00045776]
[101.46040344 -501.36859131]
[116.28501892 -506.34503174]
[130.82113647 -500.58001709]
[138.20526123 -486.79565430]
[134.95082092 -471.50048828]
[122.59447479 -461.91638184]
[122.19174957 -446.92181396]
[121.78903198 -431.92721558]
[136.76582336 -431.10223389]
[151.71343994 -429.85568237]
[166.62001038 -428.18850708]
[181.47367859 -426.10205078]
[196.26268005 -423.59796143]
[210.97526550 -420.67822266]
[225.59976196 -417.34515381]
[240.12455750 -413.60144043]
[254.53810120 -409.44998169]
[268.82897949 -404.89413452]
[282.98583984 -399.93750000]
[296.99746704 -394.58398438]
[310.85269165 -388.83786011]
[324.54052734 -382.70370483]
[338.05010986 -376.18637085]
[351.37075806 -369.29101562]
[364.49185181 -362.02313232]
[377.40298462 -354.38848877]
[390.09390259 -346.39315796]
[402.55453491 -338.04345703]
[414.77499390 -329.34603882]
[426.74560547 -320.30776978]
[438.45681763 -310.93588257]
[449.89935303 -301.23776245]
[461.06414795 -291.22116089]
[471.94232178 -280.89398193]
[482.52523804 -270.26446533]
[492.80447388 -259.34100342]
[502.77191162 -248.13229370]
[512.41961670 -236.64723206]
[521.73999023 -224.89492798]
[530.72552490 -212.88471985]
[539.36914062 -200.62614441]
[547.66400146 -188.12892151]
[555.60345459 -175.40296936]
[563.18127441 -162.45840454]
[570.39141846 -149.30549622]
[577.22814941 -135.95468140]
[583.68603516 -122.41656494]
[589.75994873 -108.70188904]
[595.44512939 -94.82154083]
[600.73699951 -80.78654480]
[605.63134766 -66.60803223]
[610.12432861 -52.29726410]
[614.21240234 -37.86560059]
[617.89227295 -23.32449341]
[621.16101074 -8.68549156]
[624.01605225 6.03978729]
[626.45507812 20.83965302]
[628.47625732 35.70235825]
[630.07788086 50.61610413]
[631.25872803 65.56905365]
[632.01782227 80.54933167]
[632.35461426 95.54505157]
[632.26885986 110.54430389]
[631.76055908 125.53519440]
[630.83007812 140.50581360]
[629.47827148 155.44427490]
[627.70617676 170.33871460]
[625.51513672 185.17733765]
[622.90692139 199.94833374]
[619.88360596 214.63998413]
[616.44763184 229.24063110]
[612.60168457 243.73869324]
[608.34881592 258.12265015]
[603.69244385 272.38110352]
[598.63623047 286.50268555]
[593.18414307 300.47622681]
[587.34057617 314.29064941]
[581.11016846 327.93493652]
[574.49780273 341.39831543]
[567.50878906 354.67004395]
[560.14868164 367.73959351]
[552.42327881 380.59664917]
[544.33874512 393.23092651]
[535.90148926 405.63244629]
[527.11822510 417.79135132]
[517.99584961 429.69799805]
[508.54171753 441.34289551]
[498.76324463 452.71685791]
[488.66824341 463.81082153]
[478.26470947 474.61596680]
[467.56091309 485.12374878]
[456.56530762 495.32580566]
[445.28668213 505.21405029]
[433.73394775 514.78063965]
[421.91629028 524.01794434]
[409.84307861 532.91870117]
[397.52392578 541.47576904]
[384.96859741 549.68237305]
[372.18704224 557.53198242]
[359.18942261 565.01843262]
[345.98605347 572.13574219]
[332.58740234 578.87829590]
[319.00415039 585.24066162]
[305.24700928 591.21783447]
[291.32696533 596.80511475]
[277.25503540 601.99798584]
[263.04241943 606.79235840]
[248.70034790 611.18444824]
[234.24024963 615.17071533]
[219.67358398 618.74804688]
[205.01193237 621.91357422]
[190.26690674 624.66485596]
[175.45022583 626.99957275]
[160.57365417 628.91601562]
[145.64900208 630.41253662]
[130.68809509 631.48803711]
[115.70284271 632.14166260]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[112 124]
[113 123]
[114 122]
] def

init

% Start Annotations
112 124 0.32 0.2 colorpair
113 123 0.0 0.2 colorpair
114 122 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
112 124 2 gmark
112 cmark
124 cmark
113 123 2 gmark

% End Annotations
showpage
end
%%EOF
