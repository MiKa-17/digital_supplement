%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:19:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUUUUCUGG__UGCGUAUUAAUGGUUUGUAUAACGCUAUUAAUAUUCACAUUCCUGACGCGGAAUUCGCUGUGCGAACUGCGGUUGAAGGACGGGCAUAGGGAGGUUGCUGCGUUUCUGGCUUACGAAUCCGGUAAGUAGCGACCUG_CGGGCGGGGGAAACCCCGCCCUUUCAGG_________G_UGUGGG____UGUAU_GCCGCAAGCGCCUUUAUUA_G_GUUG_C___\
) } def
/len { sequence length } bind def

/coor [
[151.76956177 196.84030151]
[151.25129700 187.57304382]
[151.21588135 178.29124451]
[151.66345215 169.02006531]
[152.59275818 159.78462219]
[154.00134277 150.60992432]
[155.88537598 141.52082825]
[158.23977661 132.54196167]
[144.02388000 127.75568390]
[129.80798340 122.96940613]
[115.59209442 118.18312836]
[125.77304840 129.19894409]
[139.38357544 135.50399780]
[152.27784729 143.16802979]
[164.32064819 152.11070251]
[175.38563538 162.23817444]
[185.35678101 173.44425964]
[194.12950134 185.61140442]
[201.61177063 198.61201477]
[207.72511292 212.30970764]
[212.40542603 226.56083679]
[215.60360718 241.21592712]
[217.28613281 256.12127686]
[217.43531799 271.12051392]
[216.04962158 286.05639648]
[213.14358521 300.77218628]
[208.74768066 315.11358643]
[202.90800476 328.93017578]
[195.68580627 342.07705688]
[187.15686035 354.41629028]
[177.41058350 365.81848145]
[166.54922485 376.16406250]
[154.68670654 385.34451294]
[141.94741821 393.26351929]
[128.46501160 399.83804321]
[114.38085938 404.99914551]
[99.84270477 408.69265747]
[85.00302887 410.87988281]
[70.01746368 411.53784180]
[55.04319382 410.65963745]
[40.23727036 408.25451660]
[25.75498581 404.34768677]
[11.74823570 398.98010254]
[-1.63607347 392.20806885]
[-14.25756073 384.10263062]
[-25.98384666 374.74880981]
[-36.69194412 364.24468994]
[-46.26953888 352.70043945]
[-54.61617661 340.23715210]
[-61.64431763 326.98553467]
[-67.28025055 313.08459473]
[-71.46485901 298.68011475]
[-74.15425110 283.92315674]
[-75.32022095 268.96853638]
[-74.95054626 253.97311401]
[-73.04910278 239.09411621]
[-69.63581848 224.48762512]
[-64.74651337 210.30683899]
[-58.43246078 196.70048523]
[-50.75988007 183.81129456]
[-41.80924988 171.77441406]
[-31.67444420 160.71612549]
[-20.46176338 150.75241089]
[-8.28880978 141.98774719]
[4.71674156 134.51408386]
[18.41848373 128.40980530]
[32.67271042 123.73892975]
[47.33386993 120.54980469]
[62.19644165 118.52397156]
[48.18207169 113.17630768]
[34.16770554 107.82864380]
[17.21375847 107.83086395]
[12.51830769 91.54009247]
[26.87259483 82.51840973]
[39.51536942 93.81427765]
[53.52973557 99.16194153]
[67.54410553 104.50960541]
[73.60588074 100.09317780]
[63.87092590 88.68131256]
[54.13596725 77.26945496]
[44.40101242 65.85758972]
[34.66605377 54.44572830]
[24.93109703 43.03386307]
[15.19613934 31.62200165]
[5.46118164 20.21014023]
[-4.27377558 8.79827690]
[-14.00873280 -2.61358547]
[-23.74369049 -14.02544785]
[-33.47864914 -25.43731117]
[-47.25636673 -31.36811829]
[-56.18959427 -43.41790771]
[-57.85997009 -58.32461166]
[-51.81529236 -72.05275726]
[-39.69195557 -80.88591003]
[-24.77193069 -82.43281555]
[-11.09430504 -76.27468109]
[-2.36182380 -64.07862854]
[-0.93874538 -49.14490128]
[6.94018078 -36.38078690]
[14.81910610 -23.61667824]
[22.69803238 -10.85256672]
[30.57695770 1.91154385]
[38.45588303 14.67565441]
[46.33481216 27.43976593]
[54.21373749 40.20387650]
[62.09266281 52.96798706]
[69.97158813 65.73210144]
[77.85051727 78.49620819]
[85.72943878 91.26032257]
[91.79122162 86.84389496]
[90.99625397 71.86497498]
[90.20128632 56.88605118]
[77.10919189 48.55678177]
[71.44461823 34.11059570]
[75.38571167 19.10235214]
[87.41703796 9.30302238]
[102.91230774 8.48065090]
[115.91326904 16.95145607]
[121.42079163 31.45824051]
[117.31712341 46.42284775]
[105.18020630 56.09108353]
[105.97517395 71.07000732]
[106.77014160 86.04892731]
[108.34815216 71.13215637]
[118.03504181 59.67947006]
[132.48329163 55.64859390]
[146.69999695 60.43248367]
[155.77223206 72.37796783]
[156.56489563 87.35700989]
[148.80406189 100.19326782]
[135.17166138 106.45088196]
[120.37837219 103.96723938]
[134.59425354 108.75351715]
[148.81015015 113.53978729]
[163.02604675 118.32606506]
[173.25999451 96.32003784]
[186.38610840 75.90820312]
[202.16102600 57.46834183]
[220.29238892 41.34169006]
[240.44421387 27.82661247]
[262.24319458 17.17308044]
[285.28546143 9.57806206]
[309.14428711 5.18186855]
[333.37780762 4.06556845]
[357.53723145 6.24948931]
[381.17523193 11.69285011]
[403.85421753 20.29452133]
[425.15432739 31.89490128]
[444.68133545 46.27888870]
[462.07382202 63.17984772]
[477.00997925 82.28458405]
[489.21353149 103.23911285]
[502.92477417 97.15623474]
[516.63604736 91.07335663]
[522.39465332 76.60005951]
[536.38641357 70.62647247]
[550.14904785 76.20560455]
[563.86029053 70.12272644]
[577.57153320 64.03984833]
[584.65917969 49.64731216]
[600.36096191 46.35593414]
[612.63183594 56.69057846]
[612.05865479 72.72338867]
[599.08111572 82.15536499]
[583.65441895 77.75110626]
[569.94317627 83.83398438]
[556.23193359 89.91686249]
[551.13201904 103.86415863]
[537.31353760 110.22838593]
[522.71893311 104.78461456]
[509.00765991 110.86749268]
[495.29638672 116.95037079]
[498.47357178 125.66349792]
[501.19317627 134.53024292]
[503.44778442 143.52656555]
[505.23129272 152.62812805]
[506.53887939 161.81027222]
[507.36697388 171.04811096]
[507.71334839 180.31663513]
[507.57699585 189.59074402]
[506.95834351 198.84532166]
[505.85900879 208.05528259]
[504.28195190 217.19567871]
[502.23147583 226.24174500]
[499.71307373 235.16900635]
[496.73361206 243.95324707]
[493.30108643 252.57067871]
[489.42483521 260.99795532]
[485.11532593 269.21224976]
[480.38424683 277.19131470]
[475.24435425 284.91348267]
[469.70959473 292.35791016]
[463.79492188 299.50433350]
[457.51638794 306.33346558]
[450.89099121 312.82675171]
[443.93661499 318.96661377]
[436.67214966 324.73641968]
[429.11724854 330.12051392]
[421.29232788 335.10433960]
[413.21862793 339.67431641]
[404.91799927 343.81811523]
[396.41293335 347.52450562]
[387.72644043 350.78338623]
[378.88201904 353.58593750]
[369.90368652 355.92459106]
[360.81573486 357.79296875]
[351.64276123 359.18600464]
[342.40960693 360.09991455]
[333.14129639 360.53222656]
[323.86297607 360.48171997]
[314.59970093 359.94854736]
[305.37661743 358.93414307]
[296.21865845 357.44125366]
[287.15069580 355.47387695]
[278.19726562 353.03735352]
[269.38259888 350.13827515]
[260.73062134 346.78445435]
[252.26473999 342.98498535]
[244.00790405 338.75018311]
[235.98248291 334.09143066]
[228.21022034 329.02142334]
[220.71217346 323.55380249]
[213.50866699 317.70343018]
[206.61920166 311.48611450]
[200.06246948 304.91873169]
[193.85623169 298.01898193]
[188.01730347 290.80560303]
[182.56152344 283.29812622]
[177.50366211 275.51687622]
[172.85743713 267.48291016]
[168.63543701 259.21798706]
[164.84912109 250.74450684]
[161.50874329 242.08538818]
[158.62338257 233.26411438]
[156.20083618 224.30455017]
[154.24769592 215.23095703]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 135]
[9 134]
[10 133]
[11 132]
[69 77]
[70 76]
[71 75]
[110 123]
[111 122]
[112 121]
[152 172]
[153 171]
[154 170]
[157 167]
[158 166]
[159 165]
] def

init

% Start Annotations
8 135 0.16 1 colorpair
9 134 0.16 1 colorpair
10 133 0.0 0.2 colorpair
11 132 0.0 1 colorpair
69 77 0.0 1 colorpair
70 76 0.16 1 colorpair
71 75 0.16 1 colorpair
110 123 0.0 0.6 colorpair
111 122 0.16 0.6 colorpair
112 121 0.32 1 colorpair
152 172 0.32 0.6 colorpair
157 167 0.0 1 colorpair
159 165 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
8 cmark
134 cmark
10 133 2 gmark
76 cmark
71 cmark
110 123 1 gmark
111 122 1 gmark
111 cmark
112 cmark
121 cmark
152 172 1 gmark
152 cmark
172 cmark
153 171 7 gmark
171 cmark
154 170 8 gmark
170 cmark
158 166 7 gmark
166 cmark
165 cmark

% End Annotations
showpage
end
%%EOF
