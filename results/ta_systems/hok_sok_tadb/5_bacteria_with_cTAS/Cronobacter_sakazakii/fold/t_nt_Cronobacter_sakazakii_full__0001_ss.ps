%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:19:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAGAGGCUAAUCUGAAGGUGUU_CA_GCAUGCAGAGAGCCUCGUUGGU_UAAUUGA__AAAUGACCUUCGGGGCUUUCUUCUUUCUGCC__UCACCAUAACGGCAU___CUCUGCCGAUUGCAUGAGGCAAAAAGCCUCAAGCGCCGCCG__AUU___\
) } def
/len { sequence length } bind def

/coor [
[-50.75550079 269.45306396]
[-67.35824585 265.16708374]
[-83.13705444 258.46005249]
[-97.74111938 249.48173523]
[-110.84584045 238.43232727]
[-122.16004944 225.55809021]
[-134.69236755 233.80072021]
[-147.22468567 242.04336548]
[-159.75700378 250.28599548]
[-172.28932190 258.52862549]
[-184.82164001 266.77127075]
[-186.01702881 280.21670532]
[-194.62460327 290.36038208]
[-207.31877136 293.63073730]
[-219.39167786 289.04699707]
[-232.08146667 297.04504395]
[-228.13369751 311.63638306]
[-228.66383362 326.74301147]
[-233.62474060 341.02169800]
[-242.57531738 353.20275879]
[-254.71966553 362.20309448]
[-268.97793579 367.22241211]
[-284.08227539 367.81436157]
[-298.68960571 363.92630005]
[-311.50109863 355.90399170]
[-321.37750244 344.46075439]
[-327.44067383 330.61413574]
[-329.15145874 315.59530640]
[-326.35769653 300.73980713]
[-319.30786133 287.36849976]
[-308.62881470 276.67044067]
[-295.27008057 269.59680176]
[-280.41955566 266.77664185]
[-265.39773560 268.46069336]
[-251.54032898 274.49920654]
[-240.07954407 284.35525513]
[-227.38973999 276.35720825]
[-224.39274597 259.83114624]
[-210.10261536 250.38006592]
[-193.06427002 254.23895264]
[-180.53195190 245.99630737]
[-167.99963379 237.75367737]
[-155.46731567 229.51104736]
[-142.93499756 221.26840210]
[-130.40267944 213.02577209]
[-136.20626831 201.31903076]
[-140.64361572 189.02818298]
[-143.65718079 176.31205750]
[-145.20773315 163.33503723]
[-145.27503967 150.26489258]
[-143.85798645 137.27062988]
[-140.97467041 124.52027893]
[-136.66215515 112.17874908]
[-130.97598267 100.40570831]
[-123.98948669 89.35347748]
[-115.79280853 79.16508484]
[-106.49176025 69.97240448]
[-96.20644379 61.89447021]
[-85.06970978 55.03590012]
[-73.22544098 49.48557281]
[-60.82669449 45.31545639]
[-48.03371429 42.57968903]
[-35.01187134 41.31386185]
[-21.92951584 41.53456879]
[-8.95581245 43.23918533]
[3.74145937 46.40588379]
[15.99806499 50.99394608]
[27.65544510 56.94425583]
[38.56276321 64.18006897]
[48.57886505 72.60802460]
[57.57408905 82.11930847]
[65.43196869 92.59110260]
[72.05071259 103.88813782]
[85.82395172 97.94693756]
[94.32657623 86.84752655]
[108.23484802 88.27982330]
[122.00809479 82.33862305]
[135.78134155 76.39743042]
[149.55458069 70.45623016]
[151.43220520 55.27658081]
[160.59524536 43.15488434]
[174.50296021 37.28618622]
[189.38133240 39.15434647]
[201.24702454 48.15828323]
[215.02026367 42.21708679]
[228.79351807 36.27589035]
[242.56675720 30.33469391]
[252.17370605 17.76421165]
[266.92468262 19.82770920]
[280.69790649 13.88651371]
[294.47116089 7.94531727]
[290.69241333 -6.60189962]
[289.17868042 -21.55546379]
[289.96545410 -36.56484222]
[293.03430176 -51.27819061]
[298.31326294 -65.35060883]
[305.67858887 -78.45222473]
[314.95764160 -90.27590942]
[325.93292236 -100.54450989]
[338.34710693 -109.01730347]
[351.90921021 -115.49567413]
[366.30136108 -119.82777405]
[381.18612671 -121.91204071]
[396.21459961 -121.69961548]
[411.03451538 -119.19548798]
[425.29846191 -114.45835114]
[438.67205811 -107.59925079]
[450.84182739 -98.77897644]
[461.52246094 -88.20428467]
[470.46365356 -76.12306213]
[477.45571899 -62.81851196]
[482.33483887 -48.60250854]
[484.98660278 -33.80830002]
[485.34884644 -18.78268242]
[483.41308594 -3.87787533]
[479.22470093 10.55672932]
[472.88186646 24.18276405]
[464.53326416 36.68081284]
[454.37460327 47.75790787]
[442.64401245 57.15438461]
[429.61648560 64.64997864]
[415.59738159 70.06896973]
[400.91534424 73.28434753]
[385.91458130 74.22072601]
[370.94665527 72.85616302]
[356.36248779 69.22264099]
[342.50393677 63.40533066]
[329.69586182 55.54060745]
[318.23852539 45.81282806]
[308.40048218 34.45002365]
[300.41235352 21.71855927]
[286.63912964 27.65975571]
[272.86587524 33.60095215]
[264.24407959 45.74647903]
[248.50794983 44.10793686]
[234.73471069 50.04913330]
[220.96147156 55.99032974]
[207.18821716 61.93152618]
[205.59471130 76.74119568]
[196.74340820 88.84533691]
[182.93061829 94.93410492]
[167.82556152 93.28064728]
[155.49577332 84.22946930]
[141.72253418 90.17066956]
[127.94928741 96.11186218]
[114.17604828 102.05306244]
[105.67342377 113.15247345]
[91.76515198 111.72017670]
[77.99190521 117.66137695]
[82.51759338 134.22824097]
[84.52857208 151.28207397]
[83.98067474 168.44338989]
[80.88667297 185.33044434]
[75.31594086 201.56762695]
[67.39296722 216.79391479]
[57.29450607 230.67082214]
[45.24568939 242.88996887]
[31.51497459 253.17993164]
[16.40816498 261.31222534]
[0.26161420 267.10644531]
[-16.56527138 270.43420410]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 45]
[7 44]
[8 43]
[9 42]
[10 41]
[11 40]
[15 37]
[16 36]
[73 149]
[74 148]
[76 146]
[77 145]
[78 144]
[79 143]
[84 138]
[85 137]
[86 136]
[87 135]
[89 133]
[90 132]
[91 131]
] def

init

% Start Annotations
6 45 0.0 1 colorpair
7 44 0.0 0.6 colorpair
8 43 0.0 1 colorpair
9 42 0.0 1 colorpair
10 41 0.0 0.2 colorpair
11 40 0.16 1 colorpair
15 37 0.0 1 colorpair
16 36 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
7 44 1 gmark
10 41 2 gmark
40 cmark
36 cmark
73 149 5 gmark
74 148 5 gmark
76 146 5 gmark
77 145 5 gmark
78 144 5 gmark
79 143 5 gmark
84 138 5 gmark
85 137 5 gmark
86 136 5 gmark
87 135 5 gmark
89 133 5 gmark
90 132 5 gmark
91 131 7 gmark
91 cmark
131 cmark

% End Annotations
showpage
end
%%EOF
