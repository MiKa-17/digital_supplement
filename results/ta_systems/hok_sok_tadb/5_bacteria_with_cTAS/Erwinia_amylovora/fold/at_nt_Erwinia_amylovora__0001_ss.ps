%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:27:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCUUAUCUGGUGCGUACUUAUAGUGUGUGUCACGCUUUUAAUAUUCACAUAUCUGACACGAAAAUCGCUCUGCGAAAUUCGCUAUAAGGAUGGUUACAGGGAGGUGGCCGCUUUCAUGGCUUACGAAUCCGGCAAGUAGCAGCCUGAAGACGGGGUGCGAUCCCCGUCUUUUACGAUUGGUGAUGUUCUGACAGGCUGCGAGCGCCGUUAUGAAGGGCUUUCCGU\
) } def
/len { sequence length } bind def

/coor [
[392.34014893 131.30680847]
[380.51599121 140.53660583]
[365.67410278 142.70884705]
[351.70083618 137.25469971]
[342.25503540 125.60235596]
[339.81011963 110.80295563]
[345.00625610 96.73170471]
[356.48342896 87.07288361]
[341.52685547 88.21354675]
[326.57028198 89.35420990]
[317.09469604 100.78875732]
[301.94287109 102.15862274]
[290.01351929 92.14222717]
[275.05694580 93.28289032]
[266.89315796 107.53077698]
[251.69158936 114.16780090]
[235.36845398 110.39459229]
[224.40628052 97.50616455]
[209.46691895 98.85371399]
[194.52757263 100.20125580]
[179.58822632 101.54879761]
[164.64888000 102.89633942]
[149.70953369 104.24388123]
[134.77018738 105.59143066]
[119.83083344 106.93897247]
[104.89148712 108.28651428]
[90.25773621 111.58094025]
[76.18217468 116.76539612]
[62.10660934 121.94984436]
[48.03104782 127.13430023]
[33.95548630 132.31875610]
[19.87992287 137.50320435]
[5.80435991 142.68765259]
[7.01876450 157.73516846]
[4.12723255 172.55210876]
[-2.65566564 186.03895569]
[-12.82659340 197.19488525]
[-25.63080025 205.19206238]
[-40.11812973 209.43704224]
[-55.21352768 209.61482239]
[-69.79680634 205.71220398]
[-82.78580475 198.01878357]
[-93.21663666 187.10548401]
[-100.31527710 173.78211975]
[-103.55495453 159.03738403]
[-102.69526672 143.96545410]
[-97.80000305 129.68472290]
[-89.23242950 117.25495148]
[-77.62831879 107.59850311]
[-63.84876251 101.43193817]
[-48.91630173 99.21287537]
[-33.93902969 101.10596466]
[-20.02834892 106.97074127]
[-8.21653271 116.37199402]
[0.61990833 128.61209106]
[14.69547081 123.42763519]
[28.77103424 118.24318695]
[42.84659576 113.05873871]
[56.92215729 107.87428284]
[70.99771881 102.68983459]
[85.07328033 97.50537872]
[85.22896576 90.00699615]
[70.23220825 89.69538116]
[70.54407501 74.69862366]
[85.54033661 75.01023102]
[85.69602203 67.51184845]
[71.84777832 61.74762726]
[57.99953842 55.98340988]
[44.15129471 50.21919632]
[27.20485878 49.71459198]
[22.99850082 33.29074097]
[37.61606598 24.70219421]
[49.91551208 36.37095261]
[63.76375580 42.13516998]
[77.61199951 47.89938736]
[91.46023560 53.66360474]
[98.12256622 60.84399796]
[102.70068359 68.83157349]
[105.11758423 77.19778442]
[105.37326050 85.51056671]
[103.54394531 93.34716797]
[118.48329163 91.99961853]
[133.42263794 90.65207672]
[148.36198425 89.30453491]
[163.30134583 87.95699310]
[178.24069214 86.60945129]
[193.18003845 85.26190186]
[208.11938477 83.91436005]
[223.05873108 82.56681824]
[229.22201538 70.24504852]
[240.57708740 62.63557434]
[254.10098267 61.63556671]
[266.25625610 67.39943695]
[273.91625977 78.32632446]
[288.87283325 77.18566132]
[299.14526367 65.47603607]
[314.32958984 64.53230286]
[325.42962646 74.39764404]
[340.38619995 73.25698090]
[355.34274292 72.11631775]
[370.18466187 69.94423676]
[384.84085083 66.75115204]
[399.49707031 63.55805969]
[414.15325928 60.36497116]
[419.27844238 56.21769333]
[424.88717651 55.39585876]
[429.25909424 57.29225922]
[443.99804688 54.50601196]
[458.73699951 51.71976852]
[473.47595215 48.93352127]
[481.31625366 44.26949692]
[488.43807983 46.21218491]
[503.21417236 43.63018036]
[517.99029541 41.04817581]
[525.89440918 36.49310303]
[532.98864746 38.53416443]
[547.79907227 36.15689468]
[562.60949707 33.77962875]
[577.41992188 31.40236092]
[592.23034668 29.02509308]
[607.04077148 26.64782524]
[593.62866211 19.93093491]
[585.29528809 7.45877981]
[584.22265625 -7.50282049]
[590.69171143 -21.03618622]
[603.00842285 -29.59762001]
[617.94775391 -30.94532204]
[631.59783936 -24.72639465]
[640.38439941 -12.56925964]
[642.00671387 2.34275150]
[636.03997803 16.10494423]
[624.04602051 25.11393547]
[639.04278564 24.80256653]
[654.03955078 24.49119759]
[660.13177490 11.90657616]
[670.99847412 3.21411085]
[684.48492432 0.06432594]
[697.94848633 3.01594734]
[708.77593994 11.43776798]
[714.89086914 23.64257812]
[729.89050293 23.53878212]
[744.89013672 23.43498611]
[759.88977051 23.33119011]
[774.88940430 23.22739410]
[789.88903809 23.12359619]
[804.88873291 23.01980019]
[819.88836670 22.91600418]
[834.71484375 20.64127731]
[849.05572510 16.24357224]
[863.39660645 11.84586620]
[877.73742676 7.44816017]
[892.07830811 3.05045414]
[906.41912842 -1.34725177]
[920.76000977 -5.74495792]
[935.10089111 -10.14266396]
[949.44171143 -14.54036999]
[956.62725830 -28.61672020]
[971.68719482 -33.40972137]
[985.68682861 -26.07576561]
[990.32031250 -10.96596146]
[982.83874512 2.95531178]
[967.68084717 7.42881060]
[953.83941650 -0.19951263]
[939.49859619 4.19819355]
[925.15771484 8.59589958]
[910.81683350 12.99360561]
[896.47601318 17.39131165]
[882.13513184 21.78901672]
[867.79431152 26.18672371]
[853.45343018 30.58442879]
[839.11254883 34.98213577]
[839.73516846 49.96920776]
[854.39135742 53.16229630]
[869.04754639 56.35538864]
[883.70379639 59.54847717]
[897.92541504 52.12393951]
[912.53833008 58.74527359]
[916.33276367 74.33316040]
[906.39788818 86.92990112]
[890.35491943 86.87236023]
[880.51068115 74.20467377]
[865.85449219 71.01158905]
[851.19830322 67.81849670]
[836.54205322 64.62540436]
[847.87322998 74.45416260]
[840.50646973 87.52056122]
[827.33081055 94.68998718]
[812.35845947 93.77915192]
[800.14898682 85.06544495]
[794.42047119 71.20240784]
[796.91735840 56.41168213]
[806.87847900 45.19794464]
[819.99212646 37.91564560]
[804.99249268 38.01943970]
[789.99285889 38.12323761]
[774.99322510 38.22703552]
[759.99359131 38.33082962]
[744.99395752 38.43462753]
[729.99432373 38.53842163]
[714.99462891 38.64221954]
[707.35382080 52.88653946]
[693.49060059 61.37997437]
[677.14202881 61.72178650]
[662.77172852 53.72385788]
[654.35089111 39.48796463]
[639.35412598 39.79933548]
[624.35736084 40.11070251]
[609.41802979 41.45824814]
[594.60760498 43.83551407]
[579.79718018 46.21278381]
[564.98675537 48.59004974]
[550.17633057 50.96731949]
[535.36590576 53.34458542]
[520.57226562 55.82427979]
[505.79617310 58.40628433]
[491.02008057 60.98828888]
[476.26220703 63.67247772]
[461.52325439 66.45872498]
[446.78427124 69.24497223]
[432.04531860 72.03121185]
[417.34634399 75.02117157]
[402.69015503 78.21425629]
[388.03393555 81.40734863]
[373.37774658 84.60044098]
[387.14089966 90.56494904]
[396.15161133 102.55690765]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 100]
[9 99]
[10 98]
[13 95]
[14 94]
[18 89]
[19 88]
[20 87]
[21 86]
[22 85]
[23 84]
[24 83]
[25 82]
[26 81]
[27 61]
[28 60]
[29 59]
[30 58]
[31 57]
[32 56]
[33 55]
[66 76]
[67 75]
[68 74]
[69 73]
[101 224]
[102 223]
[103 222]
[104 221]
[107 220]
[108 219]
[109 218]
[110 217]
[112 216]
[113 215]
[114 214]
[116 213]
[117 212]
[118 211]
[119 210]
[120 209]
[121 208]
[132 207]
[133 206]
[134 205]
[140 200]
[141 199]
[142 198]
[143 197]
[144 196]
[145 195]
[146 194]
[147 193]
[148 171]
[149 170]
[150 169]
[151 168]
[152 167]
[153 166]
[154 165]
[155 164]
[156 163]
[172 184]
[173 183]
[174 182]
[175 181]
] def

init

% Start Annotations
8 100 0.0 1 colorpair
9 99 0.0 1 colorpair
10 98 0.0 1 colorpair
13 95 0.0 1 colorpair
14 94 0.0 1 colorpair
18 89 0.0 1 colorpair
19 88 0.0 1 colorpair
20 87 0.0 1 colorpair
21 86 0.0 1 colorpair
22 85 0.0 1 colorpair
23 84 0.0 1 colorpair
24 83 0.0 1 colorpair
25 82 0.0 1 colorpair
26 81 0.0 1 colorpair
27 61 0.0 1 colorpair
28 60 0.0 1 colorpair
29 59 0.0 1 colorpair
30 58 0.0 1 colorpair
31 57 0.0 1 colorpair
32 56 0.0 1 colorpair
33 55 0.0 1 colorpair
66 76 0.0 1 colorpair
67 75 0.0 1 colorpair
68 74 0.0 1 colorpair
69 73 0.0 1 colorpair
101 224 0.0 1 colorpair
102 223 0.0 1 colorpair
103 222 0.0 1 colorpair
104 221 0.0 1 colorpair
107 220 0.0 1 colorpair
108 219 0.0 1 colorpair
109 218 0.0 1 colorpair
110 217 0.0 1 colorpair
112 216 0.0 1 colorpair
113 215 0.0 1 colorpair
114 214 0.0 1 colorpair
116 213 0.0 1 colorpair
117 212 0.0 1 colorpair
118 211 0.0 1 colorpair
119 210 0.0 1 colorpair
120 209 0.0 1 colorpair
121 208 0.0 1 colorpair
132 207 0.0 1 colorpair
133 206 0.0 1 colorpair
134 205 0.0 1 colorpair
140 200 0.0 1 colorpair
141 199 0.0 1 colorpair
142 198 0.0 1 colorpair
143 197 0.0 1 colorpair
144 196 0.0 1 colorpair
145 195 0.0 1 colorpair
146 194 0.0 1 colorpair
147 193 0.0 1 colorpair
148 171 0.0 1 colorpair
149 170 0.0 1 colorpair
150 169 0.0 1 colorpair
151 168 0.0 1 colorpair
152 167 0.0 1 colorpair
153 166 0.0 1 colorpair
154 165 0.0 1 colorpair
155 164 0.0 1 colorpair
156 163 0.0 1 colorpair
172 184 0.0 1 colorpair
173 183 0.0 1 colorpair
174 182 0.0 1 colorpair
175 181 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
