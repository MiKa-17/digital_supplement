%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:27:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAGGCAAGGAUGAGAAGGCGAUGAAACUGCCAGCGAACUGUCUUAUCUGGUGCGUACUUAUAGUGUGUGUCACGCUUUUAAUAUUCACAUAUCUGACACGAAAAUCGCUCUGCGAAAUUCGCUAUAAGGAUGGUUACAGGGAGGUGGCCGCUUUCAUGGCUUACGAAUCCGGCAAG\
) } def
/len { sequence length } bind def

/coor [
[77.31739044 783.32238770]
[64.94702911 773.95465088]
[60.47762680 759.09521484]
[65.62775421 744.45770264]
[78.41708374 735.67065430]
[78.68180847 720.67297363]
[70.50011444 711.73742676]
[70.61611938 699.22131348]
[79.51401520 689.85650635]
[80.04338074 674.86590576]
[80.57275391 659.87524414]
[81.10212708 644.88458252]
[70.79203796 634.19635010]
[71.11534882 618.98614502]
[82.39601898 608.24444580]
[75.11270142 595.25207520]
[83.33220673 581.73352051]
[83.86157990 566.74291992]
[84.39095306 551.75225830]
[84.92032623 536.76159668]
[77.63700867 523.76916504]
[85.85651398 510.25067139]
[86.38588715 495.26000977]
[86.91526031 480.26934814]
[87.44463348 465.27868652]
[87.97400665 450.28802490]
[88.50337982 435.29739380]
[88.90044403 420.30264282]
[81.38896179 407.44079590]
[89.36861420 393.77932739]
[89.63333893 378.78164673]
[89.89806366 363.78399658]
[90.16279602 348.78634644]
[82.65131378 335.92449951]
[90.63095856 322.26303101]
[78.64604187 313.45962524]
[74.08914185 299.11743164]
[78.90756226 284.67318726]
[91.45228577 275.73248291]
[91.71701050 260.73480225]
[91.98173523 245.73715210]
[92.24646759 230.73948669]
[82.92153168 215.88815308]
[92.50000000 200.17761230]
[92.50000000 185.17761230]
[92.50000000 170.17761230]
[92.50000000 155.17761230]
[92.50000000 140.17761230]
[92.50000000 125.17760468]
[69.07099915 106.95479584]
[75.18596649 72.37711334]
[65.86322021 60.62609863]
[56.54047012 48.87508392]
[41.90202713 42.87287521]
[40.05322647 28.09345436]
[30.73047829 16.34243965]
[21.40772820 4.59142447]
[6.53947544 7.86196136]
[-8.21422768 4.36693478]
[-19.93942070 -5.14831877]
[-26.34422874 -18.75491333]
[-26.20675850 -33.73124695]
[-19.60783195 -47.10733032]
[-28.93058014 -58.85834885]
[-38.25333023 -70.60935974]
[-47.57607651 -82.36037445]
[-56.89882660 -94.11139679]
[-66.22157288 -105.86241150]
[-80.80256653 -114.51290131]
[-76.52655792 -130.91876221]
[-59.57813263 -131.35145569]
[-54.47055817 -115.18515778]
[-45.14781189 -103.43414307]
[-35.82506180 -91.68312836]
[-26.50231361 -79.93211365]
[-17.17956543 -68.18109894]
[-7.85681677 -56.43008041]
[6.66954947 -59.81388855]
[21.28466988 -56.54162598]
[33.07800674 -47.21005630]
[39.67718887 -33.62804794]
[39.72512436 -18.46609879]
[33.15874481 -4.73132372]
[42.48149109 7.01969147]
[51.80424118 18.77070618]
[65.77586365 23.93240547]
[68.29148865 39.55233383]
[77.61423492 51.30334854]
[86.93698120 63.05436325]
[94.42647552 63.45129013]
[91.87873077 48.66923904]
[83.43489075 36.27159500]
[85.56739807 21.42395592]
[97.15917969 11.90394878]
[112.13812256 12.69843102]
[122.65782166 23.39122963]
[123.20774841 38.38114548]
[113.50136566 49.81519318]
[109.40544891 64.24514008]
[116.89494324 64.64206696]
[127.40753174 53.94227982]
[137.92012024 43.24249268]
[148.43270874 32.54270554]
[148.46394348 16.96590233]
[159.27763367 6.26455259]
[174.12753296 6.39032793]
[184.64013672 -4.30945969]
[195.15272522 -15.00924683]
[205.66531372 -25.70903397]
[212.45303345 -41.24490356]
[229.26077271 -39.02320862]
[231.77874756 -22.25728989]
[216.36509705 -15.19644451]
[205.85250854 -4.49665737]
[195.33992004 6.20313025]
[184.82733154 16.90291786]
[185.21516418 31.74829292]
[174.70632935 42.74915695]
[159.13249207 43.05529404]
[148.61990356 53.75508499]
[138.10731506 64.45487213]
[127.59472656 75.15465546]
[132.11102295 84.67590332]
[133.60739136 94.66252899]
[132.20195007 104.21831512]
[128.26278687 112.55402374]
[122.35694885 119.05252075]
[115.18381500 123.31397247]
[107.50000000 125.17760468]
[107.50000000 140.17761230]
[107.50000000 155.17761230]
[107.50000000 170.17761230]
[107.50000000 185.17761230]
[107.50000000 200.17761230]
[116.06185150 209.85057068]
[115.73607635 222.36299133]
[107.24412537 231.00421143]
[106.97940063 246.00187683]
[106.71467590 260.99954224]
[106.44994354 275.99719238]
[118.67132568 285.37506104]
[122.97698212 299.98034668]
[117.91676331 314.15280151]
[105.62862396 322.52774048]
[113.12117004 336.46231079]
[105.16045380 349.05105591]
[104.89572906 364.04873657]
[104.63100433 379.04638672]
[104.36627197 394.04403687]
[111.85881805 407.97863770]
[103.89810944 420.56735229]
[106.88262939 429.23312378]
[103.49403381 435.82675171]
[102.96466064 450.81741333]
[102.43528748 465.80807495]
[101.90591431 480.79870605]
[101.37654877 495.78936768]
[100.84717560 510.78002930]
[108.09262848 524.84466553]
[99.91098022 537.29095459]
[99.38160706 552.28161621]
[98.85223389 567.27227783]
[98.32286835 582.26293945]
[105.56831360 596.32757568]
[97.38667297 608.77386475]
[107.88153839 620.28448486]
[107.13112640 635.47961426]
[96.09278107 645.41394043]
[95.56341553 660.40460205]
[95.03404236 675.39526367]
[94.50466919 690.38592529]
[103.52272034 706.42468262]
[93.67947388 720.93768311]
[93.41474152 735.93536377]
[105.88600159 745.16833496]
[110.51633453 759.97845459]
[105.52530670 774.67089844]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 174]
[6 173]
[9 171]
[10 170]
[11 169]
[12 168]
[15 165]
[17 163]
[18 162]
[19 161]
[20 160]
[22 158]
[23 157]
[24 156]
[25 155]
[26 154]
[27 153]
[28 151]
[30 149]
[31 148]
[32 147]
[33 146]
[35 144]
[39 140]
[40 139]
[41 138]
[42 137]
[44 134]
[45 133]
[46 132]
[47 131]
[48 130]
[49 129]
[51 89]
[52 88]
[53 87]
[55 85]
[56 84]
[57 83]
[63 77]
[64 76]
[65 75]
[66 74]
[67 73]
[68 72]
[100 122]
[101 121]
[102 120]
[103 119]
[106 116]
[107 115]
[108 114]
[109 113]
] def

init

% Start Annotations
5 174 0.0 1 colorpair
6 173 0.0 1 colorpair
9 171 0.0 1 colorpair
10 170 0.0 1 colorpair
11 169 0.0 1 colorpair
12 168 0.0 1 colorpair
15 165 0.0 1 colorpair
17 163 0.0 1 colorpair
18 162 0.0 1 colorpair
19 161 0.0 1 colorpair
20 160 0.0 1 colorpair
22 158 0.0 1 colorpair
23 157 0.0 1 colorpair
24 156 0.0 1 colorpair
25 155 0.0 1 colorpair
26 154 0.0 1 colorpair
27 153 0.0 1 colorpair
28 151 0.0 1 colorpair
30 149 0.0 1 colorpair
31 148 0.0 1 colorpair
32 147 0.0 1 colorpair
33 146 0.0 1 colorpair
35 144 0.0 1 colorpair
39 140 0.0 1 colorpair
40 139 0.0 1 colorpair
41 138 0.0 1 colorpair
42 137 0.0 1 colorpair
44 134 0.0 1 colorpair
45 133 0.0 1 colorpair
46 132 0.0 1 colorpair
47 131 0.0 1 colorpair
48 130 0.0 1 colorpair
49 129 0.0 1 colorpair
51 89 0.0 1 colorpair
52 88 0.0 1 colorpair
53 87 0.0 1 colorpair
55 85 0.0 1 colorpair
56 84 0.0 1 colorpair
57 83 0.0 1 colorpair
63 77 0.0 1 colorpair
64 76 0.0 1 colorpair
65 75 0.0 1 colorpair
66 74 0.0 1 colorpair
67 73 0.0 1 colorpair
68 72 0.0 1 colorpair
100 122 0.0 1 colorpair
101 121 0.0 1 colorpair
102 120 0.0 1 colorpair
103 119 0.0 1 colorpair
106 116 0.0 1 colorpair
107 115 0.0 1 colorpair
108 114 0.0 1 colorpair
109 113 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
