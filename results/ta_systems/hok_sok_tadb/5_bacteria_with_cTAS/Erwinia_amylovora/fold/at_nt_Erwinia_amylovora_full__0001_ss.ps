%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:27:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__CUUAUCUGGUGCGUACUUAUAGUGUGUGUCACGCUUUUAAUAUUCACAUAUCUGACACGAAAAUCGCUCUGCGAAAUUCGCUAUAAGGAUGGUUACAGGGAGGUGGCCGCUUUCAUGGCUUACGAAUCCGGCAAGUAGCAGCCUGAAGACGGGGUGCGAUCCCCGUCUUUUACGAUUGGUGAUGUUCUGACAGGCUGCGAGCGCCGUUAUGAAGGG________\
) } def
/len { sequence length } bind def

/coor [
[426.99026489 103.19558716]
[420.53506470 93.18407440]
[416.47387695 81.97577667]
[401.53451538 83.32331848]
[386.59518433 84.67086029]
[380.22314453 88.39796448]
[371.43997192 85.93221283]
[356.48342896 87.07288361]
[341.52685547 88.21354675]
[326.57028198 89.35420990]
[317.09469604 100.78875732]
[301.94287109 102.15862274]
[290.01351929 92.14222717]
[275.05694580 93.28289032]
[266.89315796 107.53077698]
[251.69158936 114.16780090]
[235.36845398 110.39459229]
[224.40628052 97.50616455]
[209.46691895 98.85371399]
[194.52757263 100.20125580]
[179.58822632 101.54879761]
[164.64888000 102.89633942]
[149.70953369 104.24388123]
[134.77018738 105.59143066]
[119.83083344 106.93897247]
[104.89148712 108.28651428]
[90.25773621 111.58094025]
[76.18217468 116.76539612]
[62.10660934 121.94984436]
[48.03104782 127.13430023]
[33.95548630 132.31875610]
[19.87992287 137.50320435]
[5.80435991 142.68765259]
[7.01876450 157.73516846]
[4.12723255 172.55210876]
[-2.65566564 186.03895569]
[-12.82659340 197.19488525]
[-25.63080025 205.19206238]
[-40.11812973 209.43704224]
[-55.21352768 209.61482239]
[-69.79680634 205.71220398]
[-82.78580475 198.01878357]
[-93.21663666 187.10548401]
[-100.31527710 173.78211975]
[-103.55495453 159.03738403]
[-102.69526672 143.96545410]
[-97.80000305 129.68472290]
[-89.23242950 117.25495148]
[-77.62831879 107.59850311]
[-63.84876251 101.43193817]
[-48.91630173 99.21287537]
[-33.93902969 101.10596466]
[-20.02834892 106.97074127]
[-8.21653271 116.37199402]
[0.61990833 128.61209106]
[14.69547081 123.42763519]
[28.77103424 118.24318695]
[42.84659576 113.05873871]
[56.92215729 107.87428284]
[70.99771881 102.68983459]
[85.07328033 97.50537872]
[85.22896576 90.00699615]
[70.23220825 89.69538116]
[70.54407501 74.69862366]
[85.54033661 75.01023102]
[85.69602203 67.51184845]
[71.84777832 61.74762726]
[57.99953842 55.98340988]
[44.15129471 50.21919632]
[27.20485878 49.71459198]
[22.99850082 33.29074097]
[37.61606598 24.70219421]
[49.91551208 36.37095261]
[63.76375580 42.13516998]
[77.61199951 47.89938736]
[91.46023560 53.66360474]
[98.12256622 60.84399796]
[102.70068359 68.83157349]
[105.11758423 77.19778442]
[105.37326050 85.51056671]
[103.54394531 93.34716797]
[118.48329163 91.99961853]
[133.42263794 90.65207672]
[148.36198425 89.30453491]
[163.30134583 87.95699310]
[178.24069214 86.60945129]
[193.18003845 85.26190186]
[208.11938477 83.91436005]
[223.05873108 82.56681824]
[229.22201538 70.24504852]
[240.57708740 62.63557434]
[254.10098267 61.63556671]
[266.25625610 67.39943695]
[273.91625977 78.32632446]
[288.87283325 77.18566132]
[299.14526367 65.47603607]
[314.32958984 64.53230286]
[325.42962646 74.39764404]
[340.38619995 73.25698090]
[355.34274292 72.11631775]
[370.29931641 70.97564697]
[385.24765015 69.73151398]
[400.18698120 68.38397217]
[415.12634277 67.03643036]
[419.31225586 49.12187576]
[429.35067749 33.73244095]
[444.02191162 22.70916367]
[461.55316162 17.36433220]
[479.83273315 18.32527351]
[496.66448975 25.46076012]
[510.03152466 37.89867783]
[518.33801270 54.13258743]
[533.14843750 51.75532150]
[547.95886230 49.37805176]
[562.76928711 47.00078583]
[577.57971191 44.62351990]
[592.39013672 42.24625015]
[607.20056152 39.86898422]
[622.01098633 37.49171448]
[636.82141113 35.11444855]
[651.63183594 32.73717880]
[638.21972656 26.02028847]
[629.88635254 13.54813385]
[628.81372070 -1.41346633]
[635.28271484 -14.94683266]
[647.59948730 -23.50826645]
[662.53881836 -24.85596848]
[676.18890381 -18.63704109]
[684.97546387 -6.47990561]
[686.59777832 8.43210602]
[680.63104248 22.19429779]
[668.63708496 31.20329094]
[683.63385010 30.89192200]
[698.63061523 30.58055305]
[704.72283936 17.99592972]
[715.58953857 9.30346489]
[729.07598877 6.15367985]
[742.53955078 9.10530090]
[753.36700439 17.52712250]
[759.48193359 29.73193169]
[774.48156738 29.62813568]
[789.48120117 29.52433968]
[804.48083496 29.42054367]
[819.48046875 29.31674767]
[834.48010254 29.21295166]
[849.47973633 29.10915565]
[864.47943115 29.00535774]
[879.30590820 26.73063278]
[893.64678955 22.33292580]
[907.98760986 17.93522072]
[922.32849121 13.53751469]
[936.66937256 9.13980865]
[951.01019287 4.74210215]
[965.35107422 0.34439632]
[979.69189453 -4.05330944]
[994.03277588 -8.45101547]
[1001.21832275 -22.52736664]
[1016.27825928 -27.32036591]
[1030.27783203 -19.98641014]
[1034.91137695 -4.87660742]
[1027.42980957 9.04466629]
[1012.27185059 13.51816463]
[998.43048096 5.88984156]
[984.08959961 10.28754711]
[969.74877930 14.68525314]
[955.40789795 19.08296013]
[941.06707764 23.48066521]
[926.72619629 27.87837219]
[912.38531494 32.27607727]
[898.04449463 36.67378235]
[883.70361328 41.07148743]
[884.32623291 56.05856323]
[898.98242188 59.25165176]
[913.63861084 62.44474030]
[928.29479980 65.63783264]
[942.51647949 58.21329498]
[957.12939453 64.83463287]
[960.92382812 80.42251587]
[950.98895264 93.01925659]
[934.94598389 92.96171570]
[925.10174561 80.29402924]
[910.44555664 77.10094452]
[895.78936768 73.90785217]
[881.13311768 70.71475983]
[892.46429443 80.54351807]
[885.09753418 93.60991669]
[871.92181396 100.77933502]
[856.94952393 99.86850739]
[844.74005127 91.15480042]
[839.01153564 77.29175568]
[841.50842285 62.50103378]
[851.46954346 51.28730011]
[864.58319092 44.00500107]
[849.58355713 44.10879517]
[834.58392334 44.21259308]
[819.58428955 44.31638718]
[804.58465576 44.42018509]
[789.58502197 44.52397919]
[774.58532715 44.62777710]
[759.58569336 44.73157501]
[751.94488525 58.97589111]
[738.08166504 67.46932983]
[721.73309326 67.81114197]
[707.36279297 59.81321335]
[698.94195557 45.57732010]
[683.94519043 45.88869095]
[668.94842529 46.20005798]
[654.00909424 47.54759979]
[639.19866943 49.92486954]
[624.38824463 52.30213547]
[609.57781982 54.67940521]
[594.76739502 57.05667114]
[579.95697021 59.43394089]
[565.14654541 61.81120682]
[550.33612061 64.18847656]
[535.52569580 66.56574249]
[520.71527100 68.94300842]
[519.61730957 80.70288086]
[515.91961670 91.92983246]
[509.80477905 102.05624390]
[501.57785034 110.56917572]
[491.65081787 117.03635406]
[480.52218628 121.12809753]
[468.75195312 122.63415527]
[456.93331909 121.47447968]
[445.66287231 117.70348358]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 104]
[4 103]
[5 102]
[7 101]
[8 100]
[9 99]
[10 98]
[13 95]
[14 94]
[18 89]
[19 88]
[20 87]
[21 86]
[22 85]
[23 84]
[24 83]
[25 82]
[26 81]
[27 61]
[28 60]
[29 59]
[30 58]
[31 57]
[32 56]
[33 55]
[66 76]
[67 75]
[68 74]
[69 73]
[112 217]
[113 216]
[114 215]
[115 214]
[116 213]
[117 212]
[118 211]
[119 210]
[120 209]
[121 208]
[132 207]
[133 206]
[134 205]
[140 200]
[141 199]
[142 198]
[143 197]
[144 196]
[145 195]
[146 194]
[147 193]
[148 171]
[149 170]
[150 169]
[151 168]
[152 167]
[153 166]
[154 165]
[155 164]
[156 163]
[172 184]
[173 183]
[174 182]
[175 181]
] def

init

% Start Annotations
3 104 0.0 1 colorpair
4 103 0.0 1 colorpair
5 102 0.0 1 colorpair
7 101 0.0 1 colorpair
8 100 0.0 1 colorpair
9 99 0.0 1 colorpair
10 98 0.0 1 colorpair
13 95 0.0 1 colorpair
14 94 0.0 1 colorpair
18 89 0.0 1 colorpair
19 88 0.0 1 colorpair
20 87 0.0 1 colorpair
21 86 0.0 1 colorpair
22 85 0.0 1 colorpair
23 84 0.0 1 colorpair
24 83 0.0 1 colorpair
25 82 0.0 1 colorpair
26 81 0.0 1 colorpair
27 61 0.0 1 colorpair
28 60 0.0 1 colorpair
29 59 0.0 1 colorpair
30 58 0.0 1 colorpair
31 57 0.0 1 colorpair
32 56 0.0 1 colorpair
33 55 0.0 1 colorpair
66 76 0.0 1 colorpair
67 75 0.0 1 colorpair
68 74 0.0 1 colorpair
69 73 0.0 1 colorpair
112 217 0.0 1 colorpair
113 216 0.0 1 colorpair
114 215 0.0 1 colorpair
115 214 0.0 1 colorpair
116 213 0.0 1 colorpair
117 212 0.0 1 colorpair
118 211 0.0 1 colorpair
119 210 0.0 1 colorpair
120 209 0.0 1 colorpair
121 208 0.0 1 colorpair
132 207 0.0 1 colorpair
133 206 0.0 1 colorpair
134 205 0.0 1 colorpair
140 200 0.0 1 colorpair
141 199 0.0 1 colorpair
142 198 0.0 1 colorpair
143 197 0.0 1 colorpair
144 196 0.0 1 colorpair
145 195 0.0 1 colorpair
146 194 0.0 1 colorpair
147 193 0.0 1 colorpair
148 171 0.0 1 colorpair
149 170 0.0 1 colorpair
150 169 0.0 1 colorpair
151 168 0.0 1 colorpair
152 167 0.0 1 colorpair
153 166 0.0 1 colorpair
154 165 0.0 1 colorpair
155 164 0.0 1 colorpair
156 163 0.0 1 colorpair
172 184 0.0 1 colorpair
173 183 0.0 1 colorpair
174 182 0.0 1 colorpair
175 181 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
