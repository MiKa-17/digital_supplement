%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:27:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__________________________ACUGCCAGCGAACUGUCUUAUCUGGUGCGUACUUAUAGUGUGUGUCACGCUUUUAAUAUUCACAUAUCUGACACGAAAAUCGCUCUGCGAAAUUCGCUAUAAGGAUGGUUACAGGGAGGUGGCCGCUUUCAUGGCUUACGAAUCCGGCAA_\
) } def
/len { sequence length } bind def

/coor [
[113.16893005 209.98071289]
[115.56788635 224.83471680]
[115.11208344 239.87429810]
[111.81800079 254.55577087]
[105.80471039 268.34838867]
[97.28958893 280.75360107]
[86.58045959 291.32296753]
[74.06445312 299.67434692]
[60.19400024 305.50592041]
[45.47052383 308.60684204]
[30.42625999 308.86502075]
[15.60505295 306.27111816]
[1.54267967 300.91891479]
[-11.25251389 293.00186157]
[-22.31799126 282.80618286]
[-31.25373840 270.70043945]
[-37.73674011 257.12225342]
[-41.53263092 242.56246948]
[-42.50419998 227.54739380]
[-40.61632156 212.61981201]
[-35.93724442 198.31936646]
[-28.63611031 185.16300964]
[-18.97685242 173.62631226]
[-7.30864811 164.12634277]
[5.94670630 157.00650024]
[20.31003761 152.52418518]
[35.26211929 150.84140015]
[50.26244354 152.01901245]
[64.76876068 156.01441956]
[71.41297913 142.56620789]
[78.05720520 129.11799622]
[84.70142365 115.66979218]
[74.79690552 126.93480682]
[60.06919098 129.77986145]
[46.68158722 123.01435852]
[40.23659134 109.46954346]
[43.43132782 94.81370544]
[54.92885590 85.18006897]
[69.91764069 84.60016632]
[82.12586212 93.31769562]
[72.59717560 81.73303986]
[63.06849289 70.14838409]
[53.53980637 58.56373596]
[40.02677536 63.11260986]
[25.80262947 62.77146530]
[12.57889080 57.60177994]
[1.93972433 48.24480057]
[-4.84783316 35.84206772]
[-6.98475266 21.89617920]
[-4.23402739 8.08874798]
[3.05323291 -3.92235565]
[-6.26951551 -15.67337132]
[-15.59226418 -27.42438698]
[-30.23070908 -33.42659378]
[-32.07950974 -48.20601273]
[-41.40225983 -59.95702744]
[-50.72500610 -71.70804596]
[-65.59326172 -68.43750763]
[-80.34696198 -71.93253326]
[-92.07215881 -81.44778442]
[-98.47696686 -95.05438232]
[-98.33949280 -110.03071594]
[-91.74057007 -123.40679932]
[-101.06331635 -135.15782166]
[-110.38606262 -146.90882874]
[-119.70881653 -158.65985107]
[-129.03155518 -170.41085815]
[-138.35430908 -182.16188049]
[-152.93530273 -190.81236267]
[-148.65928650 -207.21823120]
[-131.71086121 -207.65092468]
[-126.60329437 -191.48461914]
[-117.28054810 -179.73361206]
[-107.95779419 -167.98258972]
[-98.63504791 -156.23158264]
[-89.31230164 -144.48056030]
[-79.98955536 -132.72955322]
[-65.46318817 -136.11335754]
[-50.84806442 -132.84109497]
[-39.05472565 -123.50952911]
[-32.45554733 -109.92751312]
[-32.40761185 -94.76557159]
[-38.97399139 -81.03079224]
[-29.65124321 -69.27977753]
[-20.32849503 -57.52876282]
[-6.35687494 -52.36706543]
[-3.84124827 -36.74713516]
[5.48150015 -24.99612045]
[14.80424881 -13.24510384]
[29.95995712 -17.82677650]
[45.75244141 -16.24396706]
[59.76524353 -8.70920181]
[69.84285736 3.65200901]
[74.42227936 18.96919441]
[72.77536774 34.90994263]
[65.12445831 49.03504944]
[74.65314484 60.61970520]
[84.18183136 72.20435333]
[93.71051025 83.78900909]
[99.34030914 77.56310272]
[108.42493439 73.81722260]
[118.93752289 63.11743164]
[129.45011902 52.41764450]
[129.48135376 36.84084320]
[140.29504395 26.13949203]
[155.14494324 26.26526833]
[165.65753174 15.56548023]
[176.17012024 4.86569262]
[186.68270874 -5.83409500]
[193.47042847 -21.36996460]
[210.27818298 -19.14827156]
[212.79615784 -2.38234949]
[197.38250732 4.67849493]
[186.86991882 15.37828255]
[176.35733032 26.07806969]
[165.84472656 36.77785873]
[166.23257446 51.62323380]
[155.72372437 62.62409592]
[140.14990234 62.93023682]
[129.63731384 73.63002014]
[119.12472534 84.32981110]
[122.92169952 98.84128571]
[137.32759094 103.02106476]
[151.73345947 107.20085144]
[166.13934326 111.38063049]
[180.54522705 115.56041718]
[194.98744202 119.61290741]
[209.46484375 123.53779602]
[223.94224548 127.46268463]
[238.41964722 131.38757324]
[247.55218506 130.61320496]
[253.11674500 135.51159668]
[267.52261353 139.69137573]
[281.92849731 143.87115479]
[296.33438110 148.05093384]
[310.74026489 152.23071289]
[325.14614868 156.41049194]
[339.55203247 160.59028625]
[353.27618408 152.75299072]
[368.50021362 156.99617004]
[376.19198608 170.80241394]
[371.78808594 185.98072815]
[357.90127563 193.52607727]
[342.77038574 188.96195984]
[335.37225342 174.99615479]
[320.96636963 170.81637573]
[306.56048584 166.63659668]
[292.15460205 162.45681763]
[277.74871826 158.27703857]
[263.34283447 154.09725952]
[248.93696594 149.91746521]
[234.49476624 145.86497498]
[220.01734924 141.94009399]
[205.53994751 138.01519775]
[191.06254578 134.09031677]
[183.76196289 135.37872314]
[176.36544800 129.96629333]
[161.95956421 125.78651428]
[147.55368042 121.60673523]
[133.14779663 117.42694855]
[118.74192047 113.24716949]
[129.38037109 123.82182312]
[142.42883301 131.22032166]
[149.64965820 144.36793518]
[148.89221191 159.34878540]
[140.38208008 171.70103455]
[126.65391541 177.74566650]
[111.79650116 175.68237305]
[100.23493958 166.12568665]
[95.41271210 151.92195129]
[98.76619720 137.30134583]
[98.14963531 122.31401825]
[91.50540924 135.76222229]
[84.86119080 149.21043396]
[78.21697235 162.65864563]
[90.20426178 171.75267029]
[100.25367737 182.95114136]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 175]
[30 174]
[31 173]
[32 172]
[40 99]
[41 98]
[42 97]
[43 96]
[51 89]
[52 88]
[53 87]
[55 85]
[56 84]
[57 83]
[63 77]
[64 76]
[65 75]
[66 74]
[67 73]
[68 72]
[101 121]
[102 120]
[103 119]
[106 116]
[107 115]
[108 114]
[109 113]
[122 161]
[123 160]
[124 159]
[125 158]
[126 157]
[127 155]
[128 154]
[129 153]
[130 152]
[132 151]
[133 150]
[134 149]
[135 148]
[136 147]
[137 146]
[138 145]
] def

init

% Start Annotations
29 175 0.0 1 colorpair
30 174 0.0 1 colorpair
31 173 0.0 1 colorpair
32 172 0.0 1 colorpair
40 99 0.0 1 colorpair
41 98 0.0 1 colorpair
42 97 0.0 1 colorpair
43 96 0.0 1 colorpair
51 89 0.0 1 colorpair
52 88 0.0 1 colorpair
53 87 0.0 1 colorpair
55 85 0.0 1 colorpair
56 84 0.0 1 colorpair
57 83 0.0 1 colorpair
63 77 0.0 1 colorpair
64 76 0.0 1 colorpair
65 75 0.0 1 colorpair
66 74 0.0 1 colorpair
67 73 0.0 1 colorpair
68 72 0.0 1 colorpair
101 121 0.0 1 colorpair
102 120 0.0 1 colorpair
103 119 0.0 1 colorpair
106 116 0.0 1 colorpair
107 115 0.0 1 colorpair
108 114 0.0 1 colorpair
109 113 0.0 1 colorpair
122 161 0.0 1 colorpair
123 160 0.0 1 colorpair
124 159 0.0 1 colorpair
125 158 0.0 1 colorpair
126 157 0.0 1 colorpair
127 155 0.0 1 colorpair
128 154 0.0 1 colorpair
129 153 0.0 1 colorpair
130 152 0.0 1 colorpair
132 151 0.0 1 colorpair
133 150 0.0 1 colorpair
134 149 0.0 1 colorpair
135 148 0.0 1 colorpair
136 147 0.0 1 colorpair
137 146 0.0 1 colorpair
138 145 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
