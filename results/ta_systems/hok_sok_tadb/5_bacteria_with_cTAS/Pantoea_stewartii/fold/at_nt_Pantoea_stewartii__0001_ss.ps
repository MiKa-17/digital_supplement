%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:16:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGUUAUCUGGUGCCUGGCCAUCGUCUGCCUGACGAUACUGGCAUUCACUUUGUUGACCCGUCAUUCGCUUUACGAACUGCGAAUACGGGACGGUAGCAGGGAGGUUGCGGCAGUCAUGUCUUGUGAGUCCAACCAGUAAGGGCAACCGGCGGGGAGAAAUCCCCGCCACCGCCGUGUUAAGCUGAGGCGUUCCCAG\
) } def
/len { sequence length } bind def

/coor [
[34.67201233 107.78904724]
[32.65450668 105.82824707]
[17.66205788 105.35232544]
[2.66960955 104.87641144]
[-12.32283878 104.40048981]
[-27.31528664 103.92456818]
[-42.30773544 103.44865417]
[-57.30018234 102.97273254]
[-73.35150909 123.39020538]
[-104.27540588 119.37596130]
[-116.49404907 128.07681274]
[-128.71269226 136.77767944]
[-140.93132019 145.47853088]
[-140.03730774 159.23927307]
[-146.01454163 171.54600525]
[-157.20431519 179.22848511]
[-170.62103271 180.36676025]
[-182.74847412 174.76989746]
[-195.10362244 183.27580261]
[-207.45877075 191.78170776]
[-219.81391907 200.28759766]
[-231.96315002 209.08511353]
[-243.89958191 218.16925049]
[-255.83601379 227.25340271]
[-267.77243042 236.33755493]
[-279.70886230 245.42169189]
[-283.28210449 261.06176758]
[-297.79980469 267.88937378]
[-312.12518311 260.66699219]
[-315.26907349 244.93501282]
[-304.81973267 232.76164246]
[-288.79299927 233.48526001]
[-276.85656738 224.40112305]
[-264.92016602 215.31697083]
[-252.98371887 206.23283386]
[-241.04730225 197.14868164]
[-240.21553040 193.71188354]
[-237.67150879 190.50956726]
[-233.54473877 188.34495544]
[-228.31982422 187.93244934]
[-215.96467590 179.42655945]
[-203.60952759 170.92065430]
[-191.25437927 162.41474915]
[-191.36578369 146.00425720]
[-181.57881165 132.62469482]
[-165.58801270 127.66210175]
[-149.63218689 133.25988770]
[-137.41354370 124.55903625]
[-125.19490051 115.85817719]
[-112.97626495 107.15732574]
[-112.38188934 99.68091583]
[-124.81356049 108.07456970]
[-139.12705994 103.58860016]
[-144.54423523 89.60095978]
[-136.98596191 76.64440918]
[-122.14362335 74.47528076]
[-111.19313812 84.72809601]
[-110.59876251 77.25167847]
[-121.28917694 66.72956085]
[-131.97958374 56.20743561]
[-142.66999817 45.68531036]
[-153.36041260 35.16318893]
[-161.68118286 31.36813545]
[-164.13529968 24.38829803]
[-174.65742493 13.69788551]
[-185.17955017 3.00747252]
[-195.70167542 -7.68294001]
[-206.22380066 -18.37335205]
[-216.74592590 -29.06376457]
[-231.59219360 -25.12879753]
[-246.41270447 -29.15963554]
[-257.22085571 -40.07200241]
[-261.10925293 -54.93053055]
[-257.03198242 -69.73834229]
[-246.08578491 -80.51222229]
[-231.21514893 -84.35404205]
[-216.42018127 -80.23037720]
[-205.68067932 -69.25046539]
[-201.88548279 -54.36785126]
[-206.05551147 -39.58588791]
[-195.53338623 -28.89547539]
[-185.01126099 -18.20506287]
[-174.48913574 -7.51465082]
[-163.96701050 3.17576194]
[-153.44488525 13.86617470]
[-142.83828735 24.47277641]
[-132.14787292 34.99489975]
[-121.45746613 45.51702118]
[-110.76705170 56.03914642]
[-100.07663727 66.56127167]
[-79.35603333 63.61084747]
[-63.11164856 72.81244659]
[-56.82426453 87.98028564]
[-41.83181763 88.45620728]
[-26.83936691 88.93212128]
[-11.84691906 89.40804291]
[3.14552855 89.88396454]
[18.13797760 90.35987854]
[33.13042450 90.83580017]
[48.13042450 90.83580017]
[63.12287140 90.35987854]
[78.11531830 89.88396454]
[93.10777283 89.40804291]
[107.07707977 83.94375610]
[118.41332245 74.12084198]
[129.74955750 64.29793549]
[141.08581543 54.47502136]
[152.42205811 44.65211105]
[163.75830078 34.82920074]
[152.81607056 -9.54241943]
[162.27436829 -21.18461609]
[165.26129150 -29.82845116]
[171.97625732 -32.93493652]
[174.91970825 -48.47992325]
[189.02777100 -53.25613785]
[198.66957092 -64.74680328]
[208.31138611 -76.23747253]
[217.95320129 -87.72813416]
[217.99298096 -103.77114105]
[230.64976501 -113.62940979]
[246.21434021 -109.74052429]
[252.74691772 -95.08770752]
[245.23623657 -80.91133881]
[229.44387817 -78.08632660]
[219.80206299 -66.59565735]
[210.16024780 -55.10499191]
[200.51843262 -43.61432266]
[198.26461792 -28.89122772]
[183.46691895 -23.29312325]
[173.91656494 -11.72632694]
[164.45828247 -0.08412971]
[168.76010132 6.05951071]
[177.36373901 18.34679222]
[181.66557312 24.49043083]
[195.84057617 19.58441162]
[204.11564636 5.84021616]
[220.03892517 3.88348603]
[231.39543152 15.21525764]
[229.47344971 31.14276505]
[215.74732971 39.44778824]
[200.74659729 33.75942612]
[186.57159424 38.66544342]
[173.58120728 46.16544342]
[162.24496460 55.98835373]
[150.90872192 65.81126404]
[139.57247925 75.63417816]
[128.23623657 85.45708466]
[116.89998627 95.27999878]
[119.85551453 109.98594666]
[134.10658264 114.66645050]
[148.35765076 119.34694672]
[162.60871887 124.02745056]
[176.85978699 128.70794678]
[191.11085510 133.38845825]
[205.36192322 138.06895447]
[219.61297607 142.74945068]
[235.54495239 138.86302185]
[246.67956543 150.90263367]
[241.56246948 166.48300171]
[225.45771790 169.57635498]
[214.93247986 157.00051880]
[200.68141174 152.32002258]
[186.43034363 147.63952637]
[172.17927551 142.95901489]
[157.92820740 138.27851868]
[143.67715454 133.59802246]
[129.42608643 128.91751099]
[115.17501068 124.23701477]
[110.53881836 130.13241577]
[101.26643372 141.92320251]
[96.63024139 147.81860352]
[104.53862762 160.56448364]
[112.44700623 173.31036377]
[120.35539246 186.05624390]
[135.52641296 184.38208008]
[149.91856384 189.46426392]
[160.67428589 200.29371643]
[165.65802002 214.72027588]
[163.88021851 229.87950134]
[155.69389343 242.76153564]
[142.72444153 250.80863953]
[127.54694366 252.42304993]
[113.17491150 247.28424072]
[102.46192169 236.41250610]
[97.53504181 221.96644592]
[99.37252045 206.81433105]
[107.60951233 193.96463013]
[99.70112610 181.21875000]
[91.79274750 168.47286987]
[83.88436127 155.72698975]
[80.73761749 126.66582489]
[93.58368683 104.40048981]
[78.59123993 104.87641144]
[63.59879303 105.35232544]
[48.60634232 105.82824707]
[44.98157120 108.26252747]
[41.15533829 109.30511475]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 99]
[3 98]
[4 97]
[5 96]
[6 95]
[7 94]
[8 93]
[10 50]
[11 49]
[12 48]
[13 47]
[18 43]
[19 42]
[20 41]
[21 40]
[22 36]
[23 35]
[24 34]
[25 33]
[26 32]
[58 90]
[59 89]
[60 88]
[61 87]
[62 86]
[64 85]
[65 84]
[66 83]
[67 82]
[68 81]
[69 80]
[100 195]
[101 194]
[102 193]
[103 192]
[104 148]
[105 147]
[106 146]
[107 145]
[108 144]
[109 143]
[110 131]
[111 130]
[113 129]
[115 127]
[116 126]
[117 125]
[118 124]
[134 142]
[135 141]
[149 168]
[150 167]
[151 166]
[152 165]
[153 164]
[154 163]
[155 162]
[156 161]
[171 190]
[172 189]
[173 188]
[174 187]
] def

init

% Start Annotations
2 99 0.0 1 colorpair
3 98 0.0 1 colorpair
4 97 0.0 1 colorpair
5 96 0.0 1 colorpair
6 95 0.0 1 colorpair
7 94 0.0 1 colorpair
8 93 0.0 1 colorpair
10 50 0.0 1 colorpair
11 49 0.0 1 colorpair
12 48 0.0 1 colorpair
13 47 0.0 1 colorpair
18 43 0.0 1 colorpair
19 42 0.0 1 colorpair
20 41 0.0 1 colorpair
21 40 0.0 1 colorpair
22 36 0.0 1 colorpair
23 35 0.0 1 colorpair
24 34 0.0 1 colorpair
25 33 0.0 1 colorpair
26 32 0.0 1 colorpair
58 90 0.0 1 colorpair
59 89 0.0 1 colorpair
60 88 0.0 1 colorpair
61 87 0.0 1 colorpair
62 86 0.0 1 colorpair
64 85 0.0 1 colorpair
65 84 0.0 1 colorpair
66 83 0.0 1 colorpair
67 82 0.0 1 colorpair
68 81 0.0 1 colorpair
69 80 0.0 1 colorpair
100 195 0.0 1 colorpair
101 194 0.0 1 colorpair
102 193 0.0 1 colorpair
103 192 0.0 1 colorpair
104 148 0.0 1 colorpair
105 147 0.0 1 colorpair
106 146 0.0 1 colorpair
107 145 0.0 1 colorpair
108 144 0.0 1 colorpair
109 143 0.0 1 colorpair
110 131 0.0 1 colorpair
111 130 0.0 1 colorpair
113 129 0.0 1 colorpair
115 127 0.0 1 colorpair
116 126 0.0 1 colorpair
117 125 0.0 1 colorpair
118 124 0.0 1 colorpair
134 142 0.0 1 colorpair
135 141 0.0 1 colorpair
149 168 0.0 1 colorpair
150 167 0.0 1 colorpair
151 166 0.0 1 colorpair
152 165 0.0 1 colorpair
153 164 0.0 1 colorpair
154 163 0.0 1 colorpair
155 162 0.0 1 colorpair
156 161 0.0 1 colorpair
171 190 0.0 1 colorpair
172 189 0.0 1 colorpair
173 188 0.0 1 colorpair
174 187 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
