%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 23:48:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
C_GUGAUUUACUGUCUAUUGAUCGUCUGUAUAACGCUACUGGCGUUUAUCAGAAUCACACAUGGAUACCUGUGUGAGAUACAAAUAAAAAACGGUAAUAAAGAGGUUGCCGCCGUUUUAGCCUACGCAUCUAAACGGUAAG_UG_CU__ACG______________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[-49.05280685 498.42297363]
[-62.32234192 493.20361328]
[-75.40949249 487.54241943]
[-88.29955292 481.44580078]
[-100.97804260 474.92056274]
[-113.43071747 467.97409058]
[-125.64358521 460.61416626]
[-137.60292053 452.84906006]
[-149.29528809 444.68750000]
[-160.70753479 436.13864136]
[-171.82687378 427.21212769]
[-182.64077759 417.91793823]
[-193.13711548 408.26651001]
[-203.30407715 398.26876831]
[-213.13024902 387.93585205]
[-222.60459900 377.27944946]
[-231.71647644 366.31146240]
[-240.45562744 355.04428101]
[-248.81225586 343.49050903]
[-261.26141357 351.85821533]
[-273.71057129 360.22589111]
[-280.84771729 374.34579468]
[-295.72686768 375.02413940]
[-308.17605591 383.39181519]
[-320.62521362 391.75952148]
[-316.95785522 406.46755981]
[-318.54519653 421.54257202]
[-325.19558716 435.16418457]
[-336.10589600 445.68753052]
[-349.95870972 451.84182739]
[-365.08120728 452.88397217]
[-379.64724731 448.68807983]
[-391.89797974 439.76083374]
[-400.35400391 427.18023682]
[-403.99426270 412.46545410]
[-402.37911987 397.39340210]
[-395.70367432 383.78405762]
[-384.77395630 373.28085327]
[-370.90985107 367.15206909]
[-355.78546143 366.13781738]
[-341.22714233 370.36053467]
[-328.99291992 379.31036377]
[-316.54373169 370.94265747]
[-304.09457397 362.57495117]
[-297.84786987 349.05358887]
[-282.07827759 347.77673340]
[-269.62911987 339.40902710]
[-257.17993164 331.04135132]
[-265.81027222 317.11853027]
[-273.89816284 302.87377930]
[-281.43164062 288.32821655]
[-288.39950562 273.50338745]
[-294.79147339 258.42129517]
[-300.59802246 243.10427856]
[-305.81057739 227.57505798]
[-310.42135620 211.85667419]
[-314.42358398 195.97242737]
[-317.81127930 179.94587708]
[-320.57943726 163.80078125]
[-322.72396851 147.56108093]
[-324.24166870 131.25085449]
[-325.13031006 114.89427948]
[-325.38854980 98.51562500]
[-325.01599121 82.13917542]
[-324.01324463 65.78920746]
[-322.38174438 49.48996735]
[-320.12396240 33.26562500]
[-317.24319458 17.14023972]
[-313.74371338 1.13771760]
[-309.63073730 -14.71820927]
[-304.91036987 -30.40402985]
[-299.58956909 -45.89648438]
[-293.67626953 -61.17260361]
[-287.17919922 -76.20973206]
[-280.10803223 -90.98557281]
[-272.47323608 -105.47821808]
[-264.28613281 -119.66617584]
[-255.55885315 -133.52841187]
[-246.30433655 -147.04437256]
[-236.53631592 -160.19400024]
[-226.26928711 -172.95780945]
[-215.51844788 -185.31687927]
[-204.29975891 -197.25286865]
[-192.62985229 -208.74809265]
[-180.52601624 -219.78549194]
[-168.00622559 -230.34872437]
[-155.08901978 -240.42208862]
[-141.79357910 -249.99069214]
[-128.13958740 -259.04031372]
[-114.14730835 -267.55752563]
[-99.83749390 -275.52975464]
[-85.23135376 -282.94509888]
[-70.35055542 -289.79263306]
[-55.21715164 -296.06219482]
[-39.85358810 -301.74441528]
[-24.28265190 -306.83096313]
[-8.52742577 -311.31423950]
[7.38872719 -315.18762207]
[23.44220543 -318.44537354]
[39.60920334 -321.08261108]
[55.86575317 -323.09548950]
[72.18774414 -324.48095703]
[88.55097198 -325.23703003]
[104.93118286 -325.36254883]
[105.36948395 -340.35614014]
[105.80777740 -355.34973145]
[97.55462646 -369.52075195]
[105.93424225 -383.61734009]
[122.32638550 -383.13818359]
[129.86822510 -368.57614136]
[120.80137634 -354.91143799]
[120.36307526 -339.91784668]
[119.92477417 -324.92425537]
[134.15505981 -324.01773071]
[148.34695435 -322.63482666]
[162.48452759 -320.77700806]
[176.55191040 -318.44644165]
[190.53326416 -315.64569092]
[204.41290283 -312.37792969]
[218.17521667 -308.64682007]
[231.80474854 -304.45657349]
[245.28619385 -299.81185913]
[258.60440063 -294.71795654]
[271.74438477 -289.18051147]
[284.69140625 -283.20581055]
[297.43090820 -276.80053711]
[309.94860840 -269.97189331]
[322.23037720 -262.72753906]
[334.26245117 -255.07565308]
[346.03131104 -247.02479553]
[357.52374268 -238.58401489]
[368.72680664 -229.76280212]
[379.62796021 -220.57109070]
[390.21490479 -211.01916504]
[400.47576904 -201.11779785]
[410.39901733 -190.87808228]
[419.97351074 -180.31155396]
[429.18847656 -169.43005371]
[438.03356934 -158.24583435]
[446.49887085 -146.77145386]
[454.57482910 -135.01980591]
[462.25238037 -123.00408173]
[469.52291870 -110.73779297]
[476.37826538 -98.23472595]
[482.81072998 -85.50891876]
[488.81304932 -72.57467651]
[494.37850952 -59.44653320]
[499.50085449 -46.13923264]
[504.17431641 -32.66773605]
[508.39367676 -19.04717255]
[512.15411377 -5.29284954]
[515.45153809 8.57978058]
[518.28210449 22.55512810]
[520.64270020 36.61749268]
[522.53063965 50.75107574]
[523.94384766 64.93999481]
[524.88073730 79.16830444]
[525.34020996 93.42002106]
[525.32183838 107.67913055]
[524.82550049 121.92961121]
[523.85186768 136.15545654]
[522.40197754 150.34066772]
[520.47747803 164.46932983]
[518.08056641 178.52554321]
[515.21386719 192.49353027]
[511.88064575 206.35758972]
[508.08465576 220.10215759]
[503.83013916 233.71176147]
[499.12188721 247.17114258]
[493.96514893 260.46514893]
[488.36578369 273.57888794]
[482.33004761 286.49755859]
[475.86474609 299.20669556]
[468.97711182 311.69201660]
[461.67489624 323.93948364]
[453.96630859 335.93530273]
[445.85998535 347.66604614]
[437.36508179 359.11853027]
[428.49111938 370.27984619]
[419.24804688 381.13748169]
[409.64630127 391.67926025]
[399.69662476 401.89328003]
[389.41018677 411.76809692]
[378.79858398 421.29263306]
[367.87374878 430.45614624]
[356.64791870 439.24838257]
[345.13369751 447.65942383]
[333.34408569 455.67984009]
[321.29226685 463.30062866]
[308.99182129 470.51321411]
[296.45654297 477.30947876]
[283.70050049 483.68182373]
[270.73809814 489.62304688]
[257.58383179 495.12649536]
[244.25251770 500.18597412]
[230.75910950 504.79583740]
[217.11878967 508.95086670]
[203.34687805 512.64636230]
[189.45884705 515.87823486]
[175.47029114 518.64288330]
[161.39694214 520.93707275]
[147.25462341 522.75836182]
[133.05918884 524.10461426]
[118.82661438 524.97430420]
[104.57289124 525.36657715]
[90.31402588 525.28082275]
[76.06604767 524.71728516]
[61.84495544 523.67651367]
[47.66674042 522.15972900]
[33.54732132 520.16857910]
[19.50257111 517.70538330]
[5.54826546 514.77282715]
[-8.29991436 511.37420654]
[-22.02640915 507.51339722]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 48]
[20 47]
[21 46]
[23 44]
[24 43]
[25 42]
[104 113]
[105 112]
[106 111]
] def

init

% Start Annotations
19 48 0.0 1 colorpair
20 47 0.32 1 colorpair
21 46 0.16 1 colorpair
23 44 0.16 0.2 colorpair
24 43 0.16 1 colorpair
25 42 0.16 1 colorpair
105 112 0.0 1 colorpair
106 111 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
20 cmark
47 cmark
21 cmark
23 44 2 gmark
23 cmark
44 cmark
24 cmark
43 cmark
42 cmark
104 113 4 gmark
104 cmark
113 cmark

% End Annotations
showpage
end
%%EOF
