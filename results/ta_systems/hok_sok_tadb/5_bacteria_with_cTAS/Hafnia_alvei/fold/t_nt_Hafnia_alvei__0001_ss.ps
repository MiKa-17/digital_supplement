%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 23:48:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAGGCUAUCCUCACAUUGUUCAGAUGUGGUUAGGAUUGCCUCAGGUUAAUGUAAGUUGACCUGGGGCUUUUACUUUCUGCCUCACCACAUAUUUCAUGCUCAAGGCAAAAAGCCUCAAGCACCCG\
) } def
/len { sequence length } bind def

/coor [
[169.66101074 168.93119812]
[168.52882385 150.34809875]
[173.66482544 132.43045044]
[161.19279480 124.09689331]
[148.72074890 115.76333618]
[136.24870300 107.42978668]
[123.77665710 99.09622955]
[108.93871307 119.11553192]
[87.66803741 113.67018890]
[73.95489502 119.74880981]
[60.24174881 125.82743073]
[46.52860260 131.90605164]
[32.81545639 137.98466492]
[19.33533859 144.56390381]
[6.10651970 151.63485718]
[-7.12229919 158.70581055]
[-20.35111809 165.77676392]
[-33.57993698 172.84771729]
[-46.80875778 179.91867065]
[-52.82302094 194.79173279]
[-68.24152374 199.22450256]
[-81.23650360 189.81651306]
[-81.83932495 173.78479004]
[-69.58755493 163.42749023]
[-53.87970734 166.68984985]
[-40.65088654 159.61889648]
[-27.42206955 152.54794312]
[-14.19324970 145.47698975]
[-0.96443111 138.40603638]
[12.26438808 131.33509827]
[13.62774467 127.97502136]
[16.74583054 125.14212036]
[21.33606911 123.68150330]
[26.73683548 124.27152252]
[40.44998169 118.19290161]
[54.16312790 112.11428070]
[67.87627411 106.03565979]
[81.58942413 99.95703888]
[86.34311676 83.91294098]
[103.80748749 76.51278687]
[97.06331635 63.11442184]
[90.31915283 49.71605682]
[83.57498169 36.31769562]
[76.83081055 22.91932869]
[70.08663940 9.52096462]
[63.34246826 -3.87739944]
[56.59830093 -17.27576447]
[49.85412979 -30.67412949]
[43.10995865 -44.07249451]
[36.36579132 -57.47085571]
[29.62162018 -70.86922455]
[22.87744904 -84.26758575]
[8.87852001 -92.80936432]
[9.54689980 -109.19488525]
[24.19501686 -116.56813049]
[37.75414276 -107.34413147]
[36.27581406 -91.01175690]
[43.01998520 -77.61339569]
[49.76415253 -64.21502686]
[56.50832367 -50.81666183]
[63.25249481 -37.41829681]
[69.99666595 -24.01993370]
[76.74083710 -10.62156963]
[83.48500061 2.77679515]
[90.22917175 16.17515945]
[96.97334290 29.57352448]
[103.71751404 42.97188950]
[110.46168518 56.37025452]
[117.20585632 69.76861572]
[115.12921906 54.91305923]
[119.93192291 40.70270920]
[130.59490967 30.15279198]
[144.85563660 25.50183487]
[159.68821716 27.73670387]
[171.94538879 36.38319397]
[179.02636719 49.60665131]
[179.42868042 64.60125732]
[173.06694031 78.18537903]
[161.29104614 87.47667694]
[146.59963989 90.50367737]
[132.11021423 86.62418365]
[144.58226013 94.95774078]
[157.05429077 103.29129028]
[169.52633667 111.62484741]
[181.99838257 119.95839691]
[190.78654480 112.02201843]
[201.06066895 106.15058136]
[212.34455872 102.61234283]
[224.11602783 101.56751251]
[235.83108521 103.06101990]
[246.94908142 107.02052307]
[256.95761108 113.25999451]
[265.39620972 121.48838043]
[271.87744141 131.32324219]
[276.10476685 142.30845642]
[277.88610840 153.93545532]
[277.14245605 165.66670227]
[273.91156006 176.96057129]
[268.34588623 187.29635620]
[279.46014404 197.36973572]
[290.57440186 207.44311523]
[301.68869019 217.51651001]
[317.25411987 216.92071533]
[328.38204956 227.29489136]
[328.85412598 242.13783264]
[339.96838379 252.21121216]
[351.08267212 262.28460693]
[362.19692993 272.35797119]
[378.22671509 273.01010132]
[387.59469604 286.03393555]
[383.11456299 301.43875122]
[368.22305298 307.40725708]
[354.34371948 299.36093140]
[352.12353516 283.47225952]
[341.00927734 273.39886475]
[329.89501953 263.32546997]
[318.78073120 253.25209045]
[303.96301270 254.23716736]
[292.54806519 244.17965698]
[291.61529541 228.63076782]
[280.50103760 218.55738831]
[269.38674927 208.48400879]
[258.27249146 198.41061401]
[242.32243347 207.75842285]
[224.14674377 211.25588989]
[205.82376099 208.48837280]
[189.45356750 199.75843811]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 85]
[4 84]
[5 83]
[6 82]
[7 81]
[9 38]
[10 37]
[11 36]
[12 35]
[13 34]
[14 30]
[15 29]
[16 28]
[17 27]
[18 26]
[19 25]
[40 69]
[41 68]
[42 67]
[43 66]
[44 65]
[45 64]
[46 63]
[47 62]
[48 61]
[49 60]
[50 59]
[51 58]
[52 57]
[99 123]
[100 122]
[101 121]
[102 120]
[105 117]
[106 116]
[107 115]
[108 114]
] def

init

% Start Annotations
3 85 0.0 1 colorpair
4 84 0.0 1 colorpair
5 83 0.0 1 colorpair
6 82 0.0 1 colorpair
7 81 0.0 0.6 colorpair
9 38 0.0 1 colorpair
10 37 0.0 1 colorpair
11 36 0.0 1 colorpair
12 35 0.0 1 colorpair
13 34 0.0 1 colorpair
14 30 0.0 1 colorpair
15 29 0.0 1 colorpair
16 28 0.0 1 colorpair
17 27 0.0 1 colorpair
18 26 0.0 1 colorpair
19 25 0.0 1 colorpair
40 69 0.0 1 colorpair
41 68 0.0 1 colorpair
42 67 0.0 1 colorpair
43 66 0.0 1 colorpair
44 65 0.0 1 colorpair
45 64 0.0 1 colorpair
46 63 0.0 1 colorpair
47 62 0.0 1 colorpair
48 61 0.0 1 colorpair
49 60 0.0 1 colorpair
50 59 0.0 1 colorpair
51 58 0.0 1 colorpair
52 57 0.16 1 colorpair
99 123 0.0 1 colorpair
100 122 0.0 1 colorpair
101 121 0.0 1 colorpair
102 120 0.0 1 colorpair
105 117 0.0 1 colorpair
106 116 0.0 1 colorpair
107 115 0.0 1 colorpair
108 114 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
7 81 1 gmark
57 cmark

% End Annotations
showpage
end
%%EOF
