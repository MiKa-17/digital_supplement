%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 23:48:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
C_GUGAUUUACUGUCUAUUGAUCGUCUGUAUAACGCUACUGGCGUUUAUCAGAAUCACACAUGGAUACCUGUGUGAGAUACAAAUAAAAAACGGUAAAAAAGAGGUUGCCGCCGUUUUAGCCUACGCAUCUAAACGGUAAG_UG_C___ACG_CG_GG____UA_UC______________CAC__GG_AU__A_CU_GU__CGUU_G_____G\
) } def
/len { sequence length } bind def

/coor [
[19.93295670 349.08950806]
[11.13805485 346.08914185]
[2.45524502 342.77838135]
[-6.10451937 339.16134644]
[-14.53044128 335.24261475]
[-22.81189156 331.02716064]
[-30.93842316 326.52029419]
[-38.89978790 321.72769165]
[-46.68593979 316.65536499]
[-54.28705597 311.30978394]
[-61.69355392 305.69763184]
[-68.89608765 299.82598877]
[-75.88556671 293.70230103]
[-82.65319061 287.33425903]
[-89.19039917 280.72991943]
[-95.48896790 273.89761353]
[-101.54093170 266.84594727]
[-107.33867645 259.58380127]
[-112.87487793 252.12036133]
[-125.32404327 260.48803711]
[-137.77320862 268.85574341]
[-144.91035461 282.97564697]
[-159.78950500 283.65399170]
[-172.23867798 292.02166748]
[-184.68783569 300.38937378]
[-197.13700867 308.75704956]
[-204.27415466 322.87695312]
[-219.15330505 323.55529785]
[-231.60247803 331.92297363]
[-232.03459167 347.43405151]
[-241.52799988 359.70819092]
[-256.43231201 364.02575684]
[-271.01647949 358.72656250]
[-279.67263794 345.84826660]
[-279.07226562 330.34280396]
[-269.44625854 318.17236328]
[-254.49600220 314.01672363]
[-239.97016907 319.47381592]
[-227.52099609 311.10610962]
[-221.27429199 297.58474731]
[-205.50469971 296.30789185]
[-193.05552673 287.94018555]
[-180.60636902 279.57250977]
[-168.15719604 271.20480347]
[-161.91049194 257.68341064]
[-146.14089966 256.40658569]
[-133.69172668 248.03887939]
[-121.24256897 239.67118835]
[-132.98466492 219.05654907]
[-142.81118774 197.46301270]
[-150.64134216 175.06816101]
[-156.41075134 152.05610657]
[-160.07199097 128.61605835]
[-161.59492493 104.94071960]
[-160.96705627 81.22476196]
[-158.19355774 57.66317749]
[-153.29719543 34.44968033]
[-146.31826782 11.77512741]
[-160.28898621 6.31444931]
[-174.25970459 0.85377049]
[-188.23042297 -4.60690832]
[-202.20114136 -10.06758690]
[-216.17185974 -15.52826500]
[-230.14257812 -20.98894501]
[-246.26492310 -17.98862839]
[-256.71737671 -30.62501526]
[-250.74734497 -45.89887238]
[-234.49629211 -48.09776688]
[-224.68190002 -34.95966339]
[-210.71118164 -29.49898529]
[-196.74046326 -24.03830528]
[-182.76974487 -18.57762718]
[-168.79902649 -13.11694813]
[-154.82830811 -7.65627003]
[-140.85758972 -2.19559121]
[-134.66821289 -15.70283890]
[-127.72209167 -28.83697510]
[-120.04161835 -41.55564499]
[-111.65158081 -53.81783295]
[-102.57901001 -65.58399963]
[-92.85317993 -76.81620026]
[-82.50543976 -87.47821045]
[-71.56917572 -97.53565216]
[-60.07963943 -106.95609283]
[-48.07388687 -115.70915222]
[-35.59063721 -123.76660919]
[-22.67013931 -131.10247803]
[-9.35406399 -137.69308472]
[4.31465149 -143.51721191]
[18.29192734 -148.55604553]
[32.53269196 -152.79335022]
[46.99102020 -156.21546936]
[44.37430573 -170.98545837]
[41.75759125 -185.75546265]
[39.14088058 -200.52545166]
[36.52416611 -215.29545593]
[33.90745163 -230.06544495]
[31.29073906 -244.83544922]
[18.19530678 -253.68333435]
[15.27391148 -269.21527100]
[24.25976372 -282.21643066]
[39.82171631 -284.97344971]
[52.72713852 -275.85064697]
[55.31947708 -260.26040649]
[46.06073761 -247.45216370]
[48.67744827 -232.68215942]
[51.29416275 -217.91217041]
[53.91087723 -203.14216614]
[56.52759171 -188.37217712]
[59.14430237 -173.60217285]
[61.76101685 -158.83218384]
[94.56089020 -161.58503723]
[127.44684601 -160.19798279]
[159.89842224 -154.69294739]
[191.40202332 -145.15705872]
[221.45906067 -131.74125671]
[228.80033875 -144.82200623]
[236.14160156 -157.90274048]
[243.48286438 -170.98347473]
[250.82414246 -184.06422424]
[243.49781799 -197.64099121]
[244.69744873 -213.02163696]
[254.04025269 -225.29826355]
[268.54495239 -230.55345154]
[283.58319092 -227.11026001]
[294.35626221 -216.06744385]
[297.42657471 -200.94868469]
[291.81436157 -186.57833862]
[279.31048584 -177.54193115]
[263.90487671 -176.72296143]
[256.56359863 -163.64221191]
[249.22235107 -150.56147766]
[241.88107300 -137.48072815]
[234.53981018 -124.39999390]
[242.42359924 -119.48082733]
[250.12774658 -114.28479767]
[257.64251709 -108.81847382]
[264.95843506 -103.08872986]
[272.06625366 -97.10281372]
[278.95703125 -90.86826324]
[285.62207031 -84.39295197]
[292.05297852 -77.68503571]
[298.24160767 -70.75299072]
[304.18017578 -63.60554886]
[309.86117554 -56.25173187]
[315.27746582 -48.70081711]
[320.42218018 -40.96232224]
[325.28887939 -33.04602051]
[329.87136841 -24.96188736]
[334.16387939 -16.72012520]
[338.16104126 -8.33112907]
[341.85775757 0.19451810]
[345.24942017 8.84606266]
[348.33169556 17.61259079]
[351.10070801 26.48304367]
[353.55300903 35.44623566]
[355.68545532 44.49085236]
[357.49536133 53.60549164]
[358.98046875 62.77865601]
[360.13888550 71.99877167]
[360.96917725 81.25421143]
[361.47027588 90.53329468]
[361.64151001 99.82431793]
[361.48272705 109.11556244]
[360.99411011 118.39530945]
[360.17626953 127.65185547]
[359.03024292 136.87351990]
[357.55743408 146.04866028]
[355.75976562 155.16572571]
[353.63946533 164.21319580]
[351.19921875 173.17967224]
[348.44210815 182.05383301]
[345.37161255 190.82449341]
[341.99157715 199.48059082]
[338.30630493 208.01119995]
[334.32043457 216.40554810]
[330.03897095 224.65307617]
[325.46734619 232.74334717]
[320.61129761 240.66618347]
[315.47695923 248.41157532]
[310.07083130 255.96975708]
[304.39968872 263.33120728]
[298.47073364 270.48660278]
[292.29141235 277.42697144]
[285.86953735 284.14349365]
[279.21319580 290.62777710]
[272.33081055 296.87155151]
[265.23101807 302.86703491]
[257.92279053 308.60656738]
[250.41539001 314.08300781]
[242.71823120 319.28936768]
[234.84104919 324.21911621]
[226.79376221 328.86602783]
[218.58654785 333.22424316]
[210.22975159 337.28826904]
[201.73388672 341.05294800]
[193.10971069 344.51358032]
[184.36808777 347.66580200]
[175.52001953 350.50558472]
[166.57670593 353.02935791]
[157.54940796 355.23397827]
[148.44950867 357.11663818]
[139.28849792 358.67495728]
[130.07792664 359.90698242]
[120.82942200 360.81112671]
[111.55463409 361.38632202]
[102.26527405 361.63177490]
[92.97306061 361.54721069]
[83.68970490 361.13272095]
[74.42692566 360.38882446]
[65.19640350 359.31646729]
[56.00978470 357.91699219]
[46.87865448 356.19219971]
[37.81453705 354.14422607]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 48]
[20 47]
[21 46]
[23 44]
[24 43]
[25 42]
[26 41]
[28 39]
[29 38]
[58 75]
[59 74]
[60 73]
[61 72]
[62 71]
[63 70]
[64 69]
[92 111]
[93 110]
[94 109]
[95 108]
[96 107]
[97 106]
[98 105]
[116 134]
[117 133]
[118 132]
[119 131]
[120 130]
] def

init

% Start Annotations
19 48 0.0 1 colorpair
20 47 0.32 1 colorpair
21 46 0.16 1 colorpair
23 44 0.16 1 colorpair
24 43 0.16 1 colorpair
25 42 0.16 1 colorpair
26 41 0.0 0.6 colorpair
28 39 0.16 1 colorpair
29 38 0.16 0.6 colorpair
58 75 0.16 1 colorpair
59 74 0.0 0.6 colorpair
60 73 0.0 1 colorpair
61 72 0.16 1 colorpair
62 71 0.0 0.6 colorpair
63 70 0.0 1 colorpair
64 69 0.0 1 colorpair
92 111 0.0 0.6 colorpair
93 110 0.0 0.6 colorpair
94 109 0.0 1 colorpair
95 108 0.0 0.6 colorpair
96 107 0.0 0.6 colorpair
97 106 0.0 1 colorpair
98 105 0.16 0.6 colorpair
116 134 0.16 1 colorpair
117 133 0.0 1 colorpair
118 132 0.0 1 colorpair
119 131 0.16 1 colorpair
120 130 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
20 cmark
47 cmark
21 cmark
23 cmark
44 cmark
24 cmark
43 cmark
42 cmark
26 41 1 gmark
39 cmark
29 38 1 gmark
38 cmark
58 cmark
59 74 1 gmark
61 cmark
62 71 1 gmark
92 111 1 gmark
93 110 1 gmark
95 108 1 gmark
96 107 1 gmark
98 105 1 gmark
98 cmark
116 cmark
134 cmark
119 cmark
131 cmark
120 130 1 gmark

% End Annotations
showpage
end
%%EOF
