%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:16:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__UAUGCUACGAAAGACCGCCCUAGUGGGCUUGAUUGUUAUUUGUGUAACGAUCUUAGGUUUUACCUUUAUGGUACGUGAUUCACUUUGUGAAUUGCAGAUCAAGGAUGGUCAAACCAUCUUUCUAGCUAAACUGGCUUACGAAGUUAAG_\
) } def
/len { sequence length } bind def

/coor [
[134.45178223 308.44061279]
[131.24961853 297.07189941]
[131.38511658 285.24224854]
[134.85816956 273.91284180]
[141.39707947 264.00729370]
[150.47973633 256.33642578]
[145.02711487 242.36254883]
[139.57449341 228.38868713]
[134.12187195 214.41481018]
[128.72642517 209.29447937]
[128.70425415 200.09538269]
[123.54158783 186.01182556]
[118.37892914 171.92825317]
[113.21627045 157.84468079]
[108.05361176 143.76110840]
[102.89095306 129.67753601]
[94.42442322 129.29209900]
[86.40834045 126.54016876]
[79.49031067 121.64408112]
[66.76593781 129.58703613]
[54.04156876 137.52996826]
[41.31719589 145.47291565]
[34.09344101 160.19532776]
[17.71557236 161.03047180]
[9.03173733 147.11921692]
[16.97512054 132.77227783]
[33.37425232 132.74855042]
[46.09862137 124.80560303]
[58.82299423 116.86265564]
[71.54736328 108.91971588]
[70.84638214 106.25943756]
[70.39356995 103.54587555]
[70.19277954 100.80213928]
[55.57878113 97.42115784]
[40.96477890 94.04018402]
[26.35078049 90.65920258]
[11.73678112 87.27822113]
[-2.87721825 83.89724731]
[-17.49121857 80.51626587]
[-32.10521698 77.13529205]
[-46.71921539 73.75431061]
[-62.23749924 79.05666351]
[-74.40893555 68.06629181]
[-70.71258545 52.08914948]
[-54.95095062 47.56114960]
[-43.33823776 59.14031219]
[-28.72423935 62.52128983]
[-14.11023998 65.90226746]
[0.50375998 69.28324890]
[15.11775970 72.66422272]
[29.73176003 76.04520416]
[44.34576035 79.42617798]
[58.95975876 82.80715942]
[73.57376099 86.18814087]
[79.42292023 78.41996765]
[87.46045685 72.94683838]
[96.83157349 70.35079956]
[106.53964996 70.90795898]
[113.40469360 57.57112503]
[120.26973724 44.23429108]
[127.13478851 30.89745712]
[133.99983215 17.56062317]
[133.43634033 1.74945498]
[146.14064026 -6.02551746]
[153.00569153 -19.36235237]
[159.87072754 -32.69918442]
[150.78794861 -46.47979736]
[149.88075256 -62.86563492]
[157.30155945 -77.39782715]
[170.94941711 -86.16939545]
[187.06385803 -86.87554169]
[193.65180969 -100.35140228]
[200.23976135 -113.82727051]
[206.82771301 -127.30313110]
[201.92976379 -142.08988953]
[208.80285645 -155.66247559]
[222.92994690 -160.24078369]
[229.51789856 -173.71665955]
[236.10583496 -187.19252014]
[242.69378662 -200.66838074]
[249.28173828 -214.14424133]
[255.86968994 -227.62011719]
[262.45764160 -241.09597778]
[269.04559326 -254.57183838]
[275.63354492 -268.04769897]
[277.15805054 -284.93298340]
[293.80545044 -288.14233398]
[301.49786377 -273.03396606]
[289.10940552 -261.45974731]
[282.52145386 -247.98388672]
[275.93350220 -234.50802612]
[269.34555054 -221.03216553]
[262.75759888 -207.55630493]
[256.16964722 -194.08042908]
[249.58171082 -180.60456848]
[242.99375916 -167.12870789]
[236.40580750 -153.65283203]
[241.46992493 -139.69252014]
[234.98077393 -125.93223572]
[220.30357361 -120.71518707]
[213.71562195 -107.23931885]
[207.12767029 -93.76345825]
[200.53971863 -80.28759003]
[208.91223145 -69.45529175]
[211.80140686 -56.00501633]
[208.58499146 -42.56105423]
[199.83775330 -31.77177429]
[187.22973633 -25.78795242]
[173.20756531 -25.83413887]
[166.34251404 -12.49730587]
[159.47747803 0.83952844]
[160.53199768 15.69675732]
[147.33666992 24.42567062]
[140.47161865 37.76250458]
[133.60656738 51.09933853]
[126.74153137 64.43617249]
[119.87648010 77.77300262]
[129.76071167 101.84768677]
[116.97452545 124.51487732]
[122.13718414 138.59844971]
[127.29984283 152.68202209]
[132.46250916 166.76559448]
[137.62516785 180.84916687]
[142.78781128 194.93272400]
[148.09574890 208.96220398]
[153.54835510 222.93606567]
[159.00097656 236.90992737]
[164.45359802 250.88380432]
[183.00474548 251.60972595]
[199.35649109 260.29437256]
[210.28619385 275.17657471]
[213.66134644 293.27868652]
[208.85557556 311.00238037]
[196.86430359 324.84381104]
[203.45225525 338.31967163]
[210.04019165 351.79553223]
[216.62814331 365.27139282]
[223.21609497 378.74725342]
[229.80404663 392.22314453]
[242.19252014 403.79733276]
[234.50010681 418.90570068]
[217.85269165 415.69635010]
[216.32818604 398.81106567]
[209.74023438 385.33520508]
[203.15228271 371.85934448]
[196.56433105 358.38348389]
[189.97637939 344.90762329]
[183.38844299 331.43176270]
[171.77882385 332.99420166]
[160.18087769 331.21490479]
[149.53849792 326.22766113]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 128]
[7 127]
[8 126]
[9 125]
[11 124]
[12 123]
[13 122]
[14 121]
[15 120]
[16 119]
[19 30]
[20 29]
[21 28]
[22 27]
[33 54]
[34 53]
[35 52]
[36 51]
[37 50]
[38 49]
[39 48]
[40 47]
[41 46]
[58 117]
[59 116]
[60 115]
[61 114]
[62 113]
[64 111]
[65 110]
[66 109]
[71 103]
[72 102]
[73 101]
[74 100]
[77 97]
[78 96]
[79 95]
[80 94]
[81 93]
[82 92]
[83 91]
[84 90]
[85 89]
[134 148]
[135 147]
[136 146]
[137 145]
[138 144]
[139 143]
] def

init

% Start Annotations
6 128 0.0 1 colorpair
7 127 0.0 1 colorpair
8 126 0.16 1 colorpair
9 125 0.0 1 colorpair
11 124 0.0 1 colorpair
12 123 0.0 1 colorpair
13 122 0.0 1 colorpair
14 121 0.0 1 colorpair
15 120 0.0 0.2 colorpair
16 119 0.0 1 colorpair
19 30 0.0 1 colorpair
20 29 0.0 1 colorpair
21 28 0.0 1 colorpair
22 27 0.0 1 colorpair
33 54 0.0 1 colorpair
34 53 0.16 1 colorpair
35 52 0.0 1 colorpair
36 51 0.0 1 colorpair
37 50 0.0 1 colorpair
38 49 0.0 1 colorpair
39 48 0.0 1 colorpair
40 47 0.0 1 colorpair
41 46 0.0 1 colorpair
58 117 0.16 1 colorpair
59 116 0.0 1 colorpair
60 115 0.0 1 colorpair
61 114 0.0 1 colorpair
62 113 0.0 1 colorpair
64 111 0.0 0.2 colorpair
65 110 0.0 1 colorpair
66 109 0.0 0.2 colorpair
71 103 0.0 1 colorpair
72 102 0.0 1 colorpair
73 101 0.0 1 colorpair
74 100 0.0 1 colorpair
77 97 0.0 1 colorpair
78 96 0.0 0.2 colorpair
79 95 0.0 1 colorpair
80 94 0.0 0.2 colorpair
81 93 0.0 1 colorpair
82 92 0.0 1 colorpair
83 91 0.0 1 colorpair
84 90 0.16 1 colorpair
85 89 0.0 1 colorpair
134 148 0.0 1 colorpair
135 147 0.16 1 colorpair
136 146 0.0 1 colorpair
137 145 0.0 1 colorpair
138 144 0.0 0.2 colorpair
139 143 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
126 cmark
15 120 2 gmark
34 cmark
58 cmark
117 cmark
64 111 2 gmark
66 109 2 gmark
78 96 2 gmark
80 94 2 gmark
84 cmark
90 cmark
135 cmark
138 144 2 gmark

% End Annotations
showpage
end
%%EOF
