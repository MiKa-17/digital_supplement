%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:16:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___________________AAAUGCCAAAAAAAACCAUGCUCUGGUGCAUAUUAAUAGUGUGUCUAACACUGCUGAUAUUCACCUACCUCACACGAAAAUCGCUCUGCGAAAUCCGGAACAAAGACACAAAAAGGGAGGUAGCGGCUAUCAUGGCCUACGAAUCCGGUAA_\
) } def
/len { sequence length } bind def

/coor [
[68.97296143 523.84155273]
[60.96867371 520.93194580]
[53.36050415 517.10076904]
[46.25414276 512.40081787]
[39.74836731 506.89697266]
[33.93365479 500.66522217]
[28.89093590 493.79174805]
[24.69045830 486.37170410]
[21.39081764 478.50778198]
[19.03813171 470.30886841]
[17.66539955 461.88864136]
[17.29203987 453.36376953]
[17.92361450 444.85250854]
[19.55174828 436.47290039]
[22.15423393 428.34127808]
[25.69534492 420.57049561]
[30.12631416 413.26855469]
[35.38601685 406.53686523]
[41.40180206 400.46905518]
[48.09050751 395.14956665]
[55.35960388 390.65243530]
[63.10847092 387.04043579]
[71.22980499 384.36392212]
[79.61107635 382.66046143]
[79.06324768 367.67047119]
[78.51541138 352.68048096]
[77.96758270 337.69049072]
[77.41975403 322.70050049]
[69.22279358 310.26428223]
[76.45092010 296.19073486]
[75.90309143 281.20074463]
[65.31597900 273.81872559]
[60.85800171 261.49902344]
[64.37246704 248.67562866]
[74.78935242 240.10250854]
[74.51539612 225.10501099]
[74.24143219 210.10751343]
[73.96746826 195.11001587]
[73.69351196 180.11251831]
[73.41954803 165.11502075]
[73.14559174 150.11752319]
[72.87162781 135.12002563]
[72.59766388 120.12253571]
[66.60526276 106.37149048]
[55.80671310 95.96038055]
[45.00815964 85.54926300]
[34.20960999 75.13815308]
[18.90455627 71.12992096]
[15.11240959 56.72613907]
[4.31385756 46.31502533]
[-6.48469448 35.90391159]
[-17.28324699 25.49279976]
[-28.08179855 15.08168602]
[-38.88035202 4.67057323]
[-49.67890167 -5.74054003]
[-60.47745514 -16.15165329]
[-71.27600861 -26.56276512]
[-82.07456207 -36.97387695]
[-92.87310791 -47.38499069]
[-103.67166138 -57.79610443]
[-114.47021484 -68.20721436]
[-125.26876831 -78.61833191]
[-140.86802673 -85.25907898]
[-138.80509949 -102.08705902]
[-122.06369019 -104.76319885]
[-114.85765839 -89.41688538]
[-104.05910492 -79.00576782]
[-93.26055145 -68.59465790]
[-82.46199799 -58.18354416]
[-71.66344452 -47.77243042]
[-60.86489487 -37.36131668]
[-50.06634140 -26.95020485]
[-39.26779175 -16.53909111]
[-28.46923828 -6.12797880]
[-17.67068481 4.28313398]
[-6.87213373 14.69424725]
[3.92641854 25.10536003]
[14.72497082 35.51647186]
[25.52352333 45.92758560]
[40.05619049 49.19114685]
[44.62072372 64.33959961]
[55.41927338 74.75070953]
[66.21782684 85.16182709]
[77.01638031 95.57293701]
[83.85694122 84.99771881]
[94.61616516 80.04389191]
[105.61146545 81.53237915]
[115.20655823 70.00267792]
[124.80165863 58.47296906]
[134.39675903 46.94326019]
[143.99185181 35.41355515]
[146.87219238 19.85674858]
[160.96073914 15.02330875]
[170.55583191 3.49360204]
[180.15092468 -8.03610516]
[183.03126526 -23.59291077]
[197.11981201 -28.42634964]
[206.71492004 -39.95605469]
[216.31001282 -51.48576355]
[225.90510559 -63.01546860]
[235.50019836 -74.54518127]
[245.09529114 -86.07488251]
[254.69038391 -97.60459137]
[260.17474365 -113.64697266]
[277.10842896 -112.81791687]
[280.99945068 -96.31652069]
[266.22009277 -88.00949860]
[256.62500000 -76.47978973]
[247.02990723 -64.95008087]
[237.43481445 -53.42037582]
[227.83972168 -41.89066696]
[218.24461365 -30.36096001]
[208.64952087 -18.83125305]
[206.45549011 -4.09913063]
[191.68063354 1.55899036]
[182.08554077 13.08869743]
[172.49044800 24.61840439]
[170.29640198 39.35052872]
[155.52156067 45.00864792]
[145.92645264 56.53835678]
[136.33135986 68.06806183]
[126.73626709 79.59777069]
[117.14117432 91.12747955]
[120.10301971 100.88034058]
[117.68655396 111.21629333]
[110.13175201 119.26208496]
[99.16054535 122.56954193]
[87.59516144 119.84857178]
[87.86912537 134.84606934]
[88.14308929 149.84356689]
[88.41704559 164.84106445]
[88.69100952 179.83856201]
[88.96496582 194.83605957]
[89.23892975 209.83355713]
[89.51289368 224.83105469]
[89.78684998 239.82855225]
[102.59476471 251.71803284]
[102.85459900 268.85455322]
[90.89308167 280.65292358]
[91.44091034 295.64291382]
[99.67706299 309.15130615]
[92.40974426 322.15264893]
[92.95758057 337.14263916]
[93.50540924 352.13262939]
[94.05323792 367.12265015]
[94.60106659 382.11264038]
[117.20594788 387.39431763]
[136.97520447 399.53240967]
[151.89305115 417.27767944]
[160.44198608 438.80981445]
[161.75717163 461.92407227]
[155.71395874 484.25701904]
[142.93957520 503.52819824]
[124.74805450 517.77301025]
[130.61462402 531.57818604]
[136.48120117 545.38336182]
[151.70481873 547.88238525]
[163.14535522 558.23211670]
[167.15219116 573.13006592]
[162.44676208 587.82232666]
[150.53053284 597.62066650]
[135.20593262 599.39843750]
[121.36300659 592.58837891]
[113.41896057 579.36352539]
[113.90872192 563.94396973]
[122.67600250 551.24993896]
[116.80943298 537.44476318]
[110.94286346 523.63952637]
[102.67927551 525.66644287]
[94.23307800 526.70800781]
[85.72137451 526.74938965]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 146]
[25 145]
[26 144]
[27 143]
[28 142]
[30 140]
[31 139]
[35 136]
[36 135]
[37 134]
[38 133]
[39 132]
[40 131]
[41 130]
[42 129]
[43 128]
[44 84]
[45 83]
[46 82]
[47 81]
[49 79]
[50 78]
[51 77]
[52 76]
[53 75]
[54 74]
[55 73]
[56 72]
[57 71]
[58 70]
[59 69]
[60 68]
[61 67]
[62 66]
[87 123]
[88 122]
[89 121]
[90 120]
[91 119]
[93 117]
[94 116]
[95 115]
[97 113]
[98 112]
[99 111]
[100 110]
[101 109]
[102 108]
[103 107]
[154 168]
[155 167]
[156 166]
] def

init

% Start Annotations
24 146 0.0 1 colorpair
25 145 0.0 1 colorpair
26 144 0.0 0.2 colorpair
27 143 0.0 0.2 colorpair
28 142 0.16 1 colorpair
30 140 0.0 0.2 colorpair
31 139 0.0 0.2 colorpair
35 136 0.0 1 colorpair
36 135 0.0 1 colorpair
37 134 0.0 0.2 colorpair
38 133 0.0 1 colorpair
39 132 0.16 1 colorpair
40 131 0.0 0.2 colorpair
41 130 0.0 1 colorpair
42 129 0.16 1 colorpair
43 128 0.0 0.2 colorpair
44 84 0.0 0.2 colorpair
45 83 0.0 1 colorpair
46 82 0.0 1 colorpair
47 81 0.0 1 colorpair
49 79 0.16 1 colorpair
50 78 0.0 1 colorpair
51 77 0.16 1 colorpair
52 76 0.0 1 colorpair
53 75 0.0 1 colorpair
54 74 0.0 1 colorpair
55 73 0.0 0.2 colorpair
56 72 0.0 1 colorpair
57 71 0.0 1 colorpair
58 70 0.0 1 colorpair
59 69 0.16 1 colorpair
60 68 0.0 0.2 colorpair
61 67 0.0 1 colorpair
62 66 0.0 0.2 colorpair
87 123 0.0 0.2 colorpair
88 122 0.0 0.2 colorpair
89 121 0.0 1 colorpair
90 120 0.16 1 colorpair
91 119 0.0 0.2 colorpair
93 117 0.0 0.2 colorpair
94 116 0.0 1 colorpair
95 115 0.0 1 colorpair
97 113 0.0 1 colorpair
98 112 0.0 0.2 colorpair
99 111 0.0 0.2 colorpair
100 110 0.0 1 colorpair
101 109 0.0 1 colorpair
102 108 0.0 1 colorpair
103 107 0.0 1 colorpair
154 168 0.0 1 colorpair
155 167 0.0 1 colorpair
156 166 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
26 144 2 gmark
27 143 2 gmark
28 cmark
142 cmark
30 140 2 gmark
31 139 2 gmark
37 134 2 gmark
39 cmark
132 cmark
40 131 2 gmark
42 cmark
129 cmark
43 128 2 gmark
44 84 2 gmark
49 cmark
51 cmark
55 73 2 gmark
69 cmark
60 68 2 gmark
62 66 2 gmark
87 123 2 gmark
88 122 2 gmark
90 cmark
120 cmark
91 119 2 gmark
93 117 2 gmark
98 112 2 gmark
99 111 2 gmark
156 cmark

% End Annotations
showpage
end
%%EOF
