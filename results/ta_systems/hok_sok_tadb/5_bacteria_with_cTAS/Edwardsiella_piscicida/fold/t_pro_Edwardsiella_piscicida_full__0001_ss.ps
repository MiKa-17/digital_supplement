%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:21:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_____________________GAGCCACACAAACCAGCGCUUAUCGCGCUAAUCGUUACCAGUAUCACGCUAUUAGGCGUAUUACUGCUGACAAAACAAAAUCUCUGCGACGUUAGCUUCCGAAGCGGCAAAGUGGAGAUAGUGGCUCACAUGGCCUACGGAUCCGAG\
) } def
/len { sequence length } bind def

/coor [
[86.07352448 444.89929199]
[71.24279785 442.48468018]
[56.90668488 437.98394775]
[43.35705185 431.48870850]
[30.86974907 423.13119507]
[19.69900513 413.08154297]
[10.07224178 401.54437256]
[2.18544650 388.75457764]
[-3.80081534 374.97250366]
[-7.76467133 360.47875977]
[-9.62542248 345.56842041]
[-9.34518528 330.54501343]
[-6.92966652 315.71444702]
[-2.42804241 301.37860107]
[4.06803989 287.82937622]
[12.42632866 275.34259033]
[22.47665977 264.17248535]
[34.01441956 254.54643250]
[46.80471802 246.66041565]
[60.58715820 240.67501831]
[75.08114624 236.71205139]
[89.99160767 234.85223389]
[90.27043152 219.85481262]
[90.54925537 204.85740662]
[90.82807922 189.86000061]
[91.10690308 174.86259460]
[91.38572693 159.86518860]
[91.66455078 144.86778259]
[84.78452301 143.02426147]
[78.27515411 140.13262939]
[72.29502106 136.26336670]
[66.98979187 131.51068115]
[62.48871613 125.99039459]
[58.90143585 119.83696747]
[56.31534195 113.20029449]
[54.79343033 106.24205017]
[39.79925919 105.82384491]
[24.80509186 105.40563965]
[9.81092262 104.98743439]
[-5.18324614 104.56922913]
[-17.78034401 114.50364685]
[-33.36809158 110.70870209]
[-39.98890686 96.09554291]
[-32.56386185 81.87413788]
[-16.78882027 78.95393372]
[-4.76504087 89.57506561]
[10.22912788 89.99327087]
[25.22329712 90.41147614]
[40.21746445 90.82967377]
[55.21163559 91.24787903]
[57.18994522 84.19188690]
[60.27213287 77.54351044]
[64.37872314 71.47418976]
[69.40382385 66.14041901]
[75.21786499 61.67972946]
[69.25297546 47.91673660]
[63.28807831 34.15373993]
[57.32318497 20.39074516]
[44.73618317 10.80544376]
[46.77428818 -3.94906044]
[40.80939484 -17.71205521]
[34.84450150 -31.47504997]
[28.87960625 -45.23804474]
[22.91471100 -59.00104141]
[8.49140453 -64.88372803]
[2.63821220 -78.92633057]
[8.33533955 -92.64049530]
[2.37044477 -106.40349579]
[-3.59444976 -120.16648865]
[-9.55934429 -133.92948914]
[-15.52423859 -147.69247437]
[-29.01040649 -157.02282715]
[-27.40367889 -173.34306335]
[-12.35692024 -179.86434937]
[0.65105456 -169.87812805]
[-1.76124406 -153.65737915]
[4.20365047 -139.89437866]
[10.16854477 -126.13138580]
[16.13344002 -112.36838531]
[22.09833527 -98.60539246]
[36.00131226 -93.38593292]
[42.24662399 -79.51326752]
[36.67770767 -64.96593475]
[42.64260101 -51.20294189]
[48.60749435 -37.43994522]
[54.57239151 -23.67695045]
[60.53728485 -9.91395473]
[72.69763184 -1.31307518]
[71.08618164 14.42585087]
[77.05107117 28.18884468]
[83.01596832 41.95183945]
[88.98086548 55.71483612]
[96.06187439 54.53475571]
[103.24033356 54.47970200]
[110.33861542 55.55103683]
[117.18106842 57.72225189]
[123.59838104 60.93961334]
[129.43174744 65.12351990]
[134.53684998 70.17043304]
[138.78733826 75.95546722]
[142.07804871 82.33547974]
[156.67491150 78.88127136]
[171.27177429 75.42705536]
[185.86863708 71.97283936]
[200.46549988 68.51863098]
[215.06236267 65.06441498]
[229.65922546 61.61020279]
[244.25608826 58.15598679]
[250.31857300 43.99433136]
[263.40444946 36.20891190]
[278.38824463 37.60526657]
[289.54312134 47.43922424]
[304.13998413 43.98501205]
[318.73684692 40.53079987]
[326.40414429 35.49011612]
[333.63711548 37.15071869]
[348.29568481 33.96843338]
[362.95422363 30.78614616]
[377.61276245 27.60385895]
[391.80859375 18.33484459]
[404.64517212 29.40998077]
[397.55639648 44.81080246]
[380.79504395 42.26240921]
[366.13650513 45.44469452]
[351.47796631 48.62698364]
[336.81942749 51.80926895]
[322.19107056 55.12766266]
[307.59420776 58.58187485]
[292.99734497 62.03608704]
[287.43295288 75.82650757]
[274.66415405 83.79026031]
[259.47683716 82.69543457]
[247.71029663 72.75285339]
[233.11343384 76.20706177]
[218.51657104 79.66127777]
[203.91970825 83.11549377]
[189.32284546 86.56970215]
[174.72598267 90.02391815]
[160.12911987 93.47813416]
[145.53225708 96.93234253]
[135.52763367 128.64234924]
[106.66195679 145.14660645]
[106.38313293 160.14401245]
[106.10430908 175.14141846]
[105.82548523 190.13882446]
[105.54666138 205.13623047]
[105.26783752 220.13363647]
[104.98901367 235.13105774]
[119.82003784 237.54382324]
[134.15670776 242.04278564]
[147.70715332 248.53634644]
[160.19548035 256.89230347]
[171.36747742 266.94058228]
[180.99566650 278.47653198]
[188.88403320 291.26538086]
[194.87200928 305.04669189]
[198.83766174 319.53994751]
[200.70025635 334.45007324]
[200.42187500 349.47351074]
[198.00819397 364.30438232]
[193.50834656 378.64077759]
[187.01393127 392.19079590]
[178.65719604 404.67861938]
[168.60824585 415.84997559]
[157.07167053 425.47744751]
[144.28236389 433.36505127]
[130.50065613 439.35217285]
[116.00715637 443.31692505]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 148]
[23 147]
[24 146]
[25 145]
[26 144]
[27 143]
[28 142]
[36 50]
[37 49]
[38 48]
[39 47]
[40 46]
[55 92]
[56 91]
[57 90]
[58 89]
[60 87]
[61 86]
[62 85]
[63 84]
[64 83]
[67 80]
[68 79]
[69 78]
[70 77]
[71 76]
[101 140]
[102 139]
[103 138]
[104 137]
[105 136]
[106 135]
[107 134]
[108 133]
[112 129]
[113 128]
[114 127]
[116 126]
[117 125]
[118 124]
[119 123]
] def

init

% Start Annotations
22 148 0.0 1 colorpair
23 147 0.0 1 colorpair
24 146 0.0 1 colorpair
25 145 0.0 1 colorpair
26 144 0.0 1 colorpair
27 143 0.0 1 colorpair
28 142 0.0 1 colorpair
36 50 0.0 1 colorpair
37 49 0.0 1 colorpair
38 48 0.0 1 colorpair
39 47 0.0 1 colorpair
40 46 0.0 1 colorpair
55 92 0.0 1 colorpair
56 91 0.0 1 colorpair
57 90 0.0 1 colorpair
58 89 0.0 1 colorpair
60 87 0.0 1 colorpair
61 86 0.0 1 colorpair
62 85 0.0 1 colorpair
63 84 0.0 1 colorpair
64 83 0.0 1 colorpair
67 80 0.0 1 colorpair
68 79 0.0 1 colorpair
69 78 0.0 1 colorpair
70 77 0.0 1 colorpair
71 76 0.0 1 colorpair
101 140 0.0 1 colorpair
102 139 0.0 1 colorpair
103 138 0.0 1 colorpair
104 137 0.0 1 colorpair
105 136 0.0 1 colorpair
106 135 0.0 1 colorpair
107 134 0.0 1 colorpair
108 133 0.0 1 colorpair
112 129 0.0 1 colorpair
113 128 0.0 1 colorpair
114 127 0.0 1 colorpair
116 126 0.0 1 colorpair
117 125 0.0 1 colorpair
118 124 0.0 1 colorpair
119 123 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
