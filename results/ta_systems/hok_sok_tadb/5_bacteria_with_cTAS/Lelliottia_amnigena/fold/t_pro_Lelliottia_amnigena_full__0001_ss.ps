%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:16:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___AUGCCACAAAAAACACUGCUGGGAAGUGUGCUCAUGAUCUGCACGACGAUACUGAUAUUCACCUGGAUGAAACGCGACAAGCUAUGCGAGCUAAAAAUAAAAAAGGAGAAAAAAGAACUGGCAGCAAAAUUAGCCUACAAAGUAA_____\
) } def
/len { sequence length } bind def

/coor [
[75.60791016 204.17399597]
[88.69165802 196.83808899]
[103.25156403 193.23124695]
[118.24674225 193.61131287]
[132.60522461 197.95112610]
[145.29728699 205.93769836]
[138.51470947 192.55873108]
[131.73213196 179.17976379]
[124.94955444 165.80081177]
[118.16697693 152.42184448]
[111.35826111 154.30541992]
[104.36538696 155.30851746]
[97.30174255 155.41487122]
[90.28183746 154.62275696]
[83.41950226 152.94502258]
[76.82599640 150.40887451]
[70.60821533 147.05541992]
[64.86698151 142.93902588]
[59.69536972 138.12644958]
[55.17723846 132.69570923]
[51.38584137 126.73485565]
[37.38579178 132.11988831]
[23.38574409 137.50492859]
[9.38569641 142.88996887]
[-4.61435175 148.27500916]
[-18.61439896 153.66004944]
[-24.80292320 168.20233154]
[-39.49283218 174.03175354]
[-53.96886444 167.68981934]
[-59.64264679 152.93910217]
[-53.14802551 138.53092957]
[-38.33814240 133.01341248]
[-23.99943924 139.66000366]
[-9.99939251 134.27496338]
[4.00065565 128.88992310]
[18.00070381 123.50488281]
[32.00075150 118.11984253]
[46.00080109 112.73480225]
[44.53074646 98.88165283]
[46.55797958 85.09901428]
[51.95468521 72.25587463]
[60.38060379 61.16197205]
[71.30448914 52.51677322]
[65.35289001 38.74802399]
[59.40129089 24.97927666]
[53.44968796 11.21052742]
[47.49808884 -2.55822182]
[41.54648590 -16.32697105]
[35.59488678 -30.09572029]
[29.64328384 -43.86446762]
[23.69168282 -57.63321686]
[8.66989040 -68.23516083]
[11.30116367 -85.55979156]
[5.06993914 -99.20427704]
[-1.16128623 -112.84875488]
[-7.39251137 -126.49323273]
[-13.62373638 -140.13771057]
[-19.99380875 -153.71792603]
[-26.50206566 -167.23245239]
[-33.01032257 -180.74699402]
[-45.96905899 -189.82342529]
[-44.52014923 -204.64739990]
[-51.02840424 -218.16192627]
[-65.63533020 -224.79646301]
[-69.41563416 -240.38777161]
[-59.46937943 -252.97554016]
[-43.42649078 -252.90348816]
[-33.59369278 -240.22691345]
[-37.51387024 -224.67018127]
[-31.00561523 -211.15565491]
[-18.51239204 -203.04586792]
[-19.49578857 -187.25524902]
[-12.98753166 -173.74072266]
[-6.47927570 -160.22618103]
[-0.70878649 -155.53605652]
[0.02074327 -146.36894226]
[6.25196838 -132.72445679]
[12.48319340 -119.07997894]
[18.71441841 -105.43550110]
[24.94564438 -91.79101562]
[36.19712067 -87.24741364]
[41.48377609 -75.88082123]
[37.46043015 -63.58481979]
[43.41203308 -49.81607056]
[49.36363602 -36.04732132]
[55.31523514 -22.27857208]
[61.26683807 -8.50982285]
[67.21843719 5.25892591]
[73.17003632 19.02767372]
[79.12164307 32.79642487]
[85.07324219 46.56517029]
[117.25202942 47.26996613]
[143.62442017 65.72174835]
[156.56350708 58.13358688]
[169.50257874 50.54542542]
[177.49256897 36.88999176]
[192.38529968 37.12579346]
[205.32438660 29.53763199]
[206.70730591 14.08230400]
[216.93586731 2.41370916]
[232.07698059 -0.98134071]
[246.30857849 5.20262051]
[254.15830994 18.58773422]
[252.60780334 34.02714920]
[242.25326538 45.58409882]
[227.07621765 48.81469727]
[212.91253662 42.47671127]
[199.97346497 50.06487274]
[192.90898132 63.17754745]
[177.09074402 63.48450851]
[164.15165710 71.07266998]
[151.21258545 78.66082764]
[153.84249878 86.61816406]
[155.24385071 94.88084412]
[155.38464355 103.26033020]
[154.26167297 111.56542969]
[151.90057373 119.60662079]
[148.35519409 127.20043945]
[143.70646667 134.17358398]
[138.06042480 140.36697388]
[131.54594421 145.63926697]
[138.32852173 159.01823425]
[145.11109924 172.39718628]
[151.89367676 185.77615356]
[158.67625427 199.15512085]
[168.14773560 210.78659058]
[179.87519836 220.13893127]
[191.60267639 229.49128723]
[203.33015442 238.84362793]
[215.05761719 248.19596863]
[231.21098328 253.34429932]
[230.73556519 270.29156494]
[214.31896973 274.52621460]
[205.70527649 259.92343140]
[193.97779846 250.57110596]
[182.25033569 241.21875000]
[170.52285767 231.86640930]
[158.79537964 222.51405334]
[164.04603577 236.56506348]
[165.38586426 251.50509644]
[162.71910095 266.26614380]
[156.23637390 279.79293823]
[146.40112305 291.11846924]
[133.91647339 299.43313599]
[119.67490387 304.14245605]
[104.69454193 304.90985107]
[90.04631042 301.68038940]
[76.77738953 294.68499756]
[65.83634949 284.42373657]
[58.00534439 271.63015747]
[53.84420776 257.21887207]
[53.65040970 242.22013855]
[57.43780899 227.70614624]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 125]
[7 124]
[8 123]
[9 122]
[10 121]
[21 38]
[22 37]
[23 36]
[24 35]
[25 34]
[26 33]
[43 91]
[44 90]
[45 89]
[46 88]
[47 87]
[48 86]
[49 85]
[50 84]
[51 83]
[53 80]
[54 79]
[55 78]
[56 77]
[57 76]
[58 74]
[59 73]
[60 72]
[62 70]
[63 69]
[93 112]
[94 111]
[95 110]
[97 108]
[98 107]
[126 138]
[127 137]
[128 136]
[129 135]
[130 134]
] def

init

% Start Annotations
6 125 0.0 0.6 colorpair
7 124 0.0 1 colorpair
8 123 0.0 1 colorpair
9 122 0.0 1 colorpair
10 121 0.0 0.2 colorpair
21 38 0.0 1 colorpair
22 37 0.16 1 colorpair
23 36 0.0 0.2 colorpair
24 35 0.0 1 colorpair
25 34 0.0 1 colorpair
26 33 0.16 1 colorpair
43 91 0.0 1 colorpair
44 90 0.0 1 colorpair
45 89 0.16 1 colorpair
46 88 0.0 0.2 colorpair
47 87 0.16 1 colorpair
48 86 0.0 1 colorpair
49 85 0.0 0.2 colorpair
50 84 0.0 1 colorpair
51 83 0.16 1 colorpair
53 80 0.16 1 colorpair
54 79 0.0 0.2 colorpair
55 78 0.0 0.2 colorpair
56 77 0.0 1 colorpair
57 76 0.0 1 colorpair
58 74 0.0 0.2 colorpair
59 73 0.16 1 colorpair
60 72 0.16 1 colorpair
62 70 0.0 1 colorpair
63 69 0.0 0.2 colorpair
93 112 0.0 0.2 colorpair
94 111 0.0 1 colorpair
95 110 0.0 1 colorpair
97 108 0.16 1 colorpair
98 107 0.0 0.2 colorpair
126 138 0.16 1 colorpair
127 137 0.0 1 colorpair
128 136 0.0 1 colorpair
129 135 0.0 0.2 colorpair
130 134 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
6 125 1 gmark
10 121 2 gmark
22 cmark
37 cmark
23 36 2 gmark
26 cmark
33 cmark
45 cmark
46 88 2 gmark
47 cmark
87 cmark
49 85 2 gmark
51 cmark
83 cmark
80 cmark
54 79 2 gmark
55 78 2 gmark
58 74 2 gmark
73 cmark
60 cmark
72 cmark
63 69 2 gmark
93 112 2 gmark
97 cmark
108 cmark
98 107 2 gmark
126 cmark
138 cmark
129 135 2 gmark
130 cmark

% End Annotations
showpage
end
%%EOF
