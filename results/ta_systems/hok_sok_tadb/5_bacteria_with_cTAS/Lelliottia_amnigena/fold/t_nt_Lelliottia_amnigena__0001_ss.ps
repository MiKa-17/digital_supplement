%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:16:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAGAGGCUACUCUCAACUUGUUGGUUCGUUGAGGGCAGCCUCGGGUAAAUGAAAAUUUCCCGGGGCUUCUUACUUUCUGUCCCUCAAUCAUGCUUAAGACAGAAAGCCUUAAGCACCCGC\
) } def
/len { sequence length } bind def

/coor [
[101.72029114 116.57854462]
[96.11007690 117.34175110]
[90.21808624 116.14573669]
[84.74243927 112.90436554]
[70.70668793 118.19564819]
[56.67093277 123.48693085]
[42.63518143 128.77821350]
[28.59943008 134.06948853]
[14.56367779 139.36076355]
[4.37997293 151.46873474]
[-10.25849819 148.71838379]
[-24.29425049 154.00965881]
[-38.33000183 159.30094910]
[-52.36575699 164.59222412]
[-66.40150452 169.88351440]
[-80.43726349 175.17478943]
[-94.47301483 180.46606445]
[-108.50876617 185.75735474]
[-110.92332458 200.92526245]
[-120.61080170 212.84365845]
[-134.96531677 218.30656433]
[-150.12559509 215.84448242]
[-162.01356506 206.11968994]
[-167.43144226 191.74810791]
[-164.92184448 176.59564209]
[-155.15985107 164.73820496]
[-140.77136230 159.36538696]
[-125.62682343 161.92247009]
[-113.80004883 171.72160339]
[-99.76428986 166.43031311]
[-85.72853851 161.13903809]
[-71.69278717 155.84774780]
[-57.65703583 150.55647278]
[-43.62128448 145.26519775]
[-29.58553123 139.97390747]
[-15.54977989 134.68263245]
[-6.37000608 122.95313263]
[9.27239609 125.32501984]
[23.30814743 120.03373718]
[37.34389877 114.74245453]
[51.37965393 109.45117188]
[65.41540527 104.15989685]
[79.45115662 98.86861420]
[85.28050232 85.04766083]
[79.27369690 71.30290985]
[73.26688385 57.55815125]
[66.88796234 50.85108185]
[67.28743744 43.38130951]
[61.63651657 29.48645210]
[55.98559570 15.59159184]
[50.33467865 1.69673228]
[37.06379700 -7.93736172]
[39.04060364 -24.21692848]
[54.23152924 -30.39494514]
[67.00945282 -20.11599731]
[64.22953796 -3.95418620]
[69.88045502 9.94067383]
[75.53137207 23.83553314]
[81.18229675 37.73039246]
[87.01164246 51.55134583]
[93.01844788 65.29609680]
[99.02526093 79.04085541]
[111.68189240 87.09129333]
[126.67691803 86.70507812]
[141.67195129 86.31885529]
[156.66075134 85.73960876]
[171.64086914 84.96743011]
[186.62098694 84.19524384]
[201.60108948 83.42306519]
[208.64801025 69.84778595]
[221.45915222 61.67641068]
[236.54008484 61.01902771]
[249.83624268 67.95214844]
[257.82305908 80.52498627]
[272.80316162 79.75280762]
[287.78326416 78.98062134]
[302.76339722 78.20844269]
[317.74349976 77.43626404]
[332.72360229 76.66407776]
[347.70373535 75.89189911]
[362.68383789 75.11972046]
[377.66394043 74.34753418]
[382.08450317 59.84807587]
[391.20007324 47.73682785]
[403.90988159 39.47628784]
[418.67916870 36.06395721]
[433.72448730 37.91188812]
[447.22900391 44.79693222]
[457.56198120 55.88769531]
[463.47570801 69.84490204]
[464.25604248 84.98316193]
[459.80874634 99.47444916]
[450.67089844 111.56887817]
[437.94586182 119.80598450]
[423.17031860 123.19109344]
[408.12844849 121.31543732]
[394.63665771 114.40551758]
[384.32412720 103.29573059]
[378.43612671 89.32764435]
[363.45602417 90.09983063]
[348.47589111 90.87200928]
[333.49578857 91.64418793]
[318.51568604 92.41637421]
[303.53558350 93.18855286]
[288.55545044 93.96073151]
[273.57534790 94.73291779]
[258.59524536 95.50509644]
[251.94349670 108.83251190]
[239.43067932 117.09600830]
[224.36210632 117.99274445]
[210.77867126 111.18193054]
[202.37327576 98.40317535]
[187.39315796 99.17536163]
[172.41305542 99.94754028]
[157.43293762 100.71971893]
[150.83688354 104.24806213]
[142.05816650 101.31388092]
[127.06313324 101.70010376]
[112.06810760 102.08631897]
[111.74802399 106.34555817]
[109.87056732 110.56345367]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 43]
[5 42]
[6 41]
[7 40]
[8 39]
[9 38]
[11 36]
[12 35]
[13 34]
[14 33]
[15 32]
[16 31]
[17 30]
[18 29]
[44 62]
[45 61]
[46 60]
[48 59]
[49 58]
[50 57]
[51 56]
[63 119]
[64 118]
[65 117]
[66 115]
[67 114]
[68 113]
[69 112]
[74 107]
[75 106]
[76 105]
[77 104]
[78 103]
[79 102]
[80 101]
[81 100]
[82 99]
] def

init

% Start Annotations
4 43 0.0 1 colorpair
5 42 0.0 1 colorpair
6 41 0.0 1 colorpair
7 40 0.0 1 colorpair
8 39 0.0 1 colorpair
9 38 0.0 1 colorpair
11 36 0.0 1 colorpair
12 35 0.0 1 colorpair
13 34 0.0 1 colorpair
14 33 0.0 1 colorpair
15 32 0.0 1 colorpair
16 31 0.0 1 colorpair
17 30 0.0 1 colorpair
18 29 0.0 1 colorpair
44 62 0.0 1 colorpair
45 61 0.0 1 colorpair
46 60 0.0 1 colorpair
48 59 0.0 1 colorpair
49 58 0.0 1 colorpair
50 57 0.0 1 colorpair
51 56 0.0 1 colorpair
63 119 0.0 1 colorpair
64 118 0.0 1 colorpair
65 117 0.0 1 colorpair
66 115 0.0 1 colorpair
67 114 0.0 1 colorpair
68 113 0.0 1 colorpair
69 112 0.0 1 colorpair
74 107 0.0 1 colorpair
75 106 0.0 1 colorpair
76 105 0.0 1 colorpair
77 104 0.0 1 colorpair
78 103 0.0 1 colorpair
79 102 0.0 1 colorpair
80 101 0.0 1 colorpair
81 100 0.0 1 colorpair
82 99 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
