%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 00:16:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___A_GCCAUUAAAAUCAGUGUUGGGCAUUGUUCUCAUUAUUUGCCUGACUAUCGUGAUAUUUACCUUUAUUAAUCGCGGGAAGUUAUGCGAGCUAACAAUAAAGAGUGAGCAUCAGGAGGUGGCGGCUAAAUUAGCCUGUAU_G_A______\
) } def
/len { sequence length } bind def

/coor [
[51.42991257 186.95487976]
[64.51366425 179.61897278]
[79.07356262 176.01213074]
[94.06874847 176.39219666]
[108.42723083 180.73200989]
[121.11929321 188.71858215]
[114.33671570 175.33961487]
[107.55413818 161.96064758]
[100.77156067 148.58169556]
[93.98898315 135.20272827]
[100.49546051 148.71812439]
[99.69860077 163.69692993]
[91.79489136 176.44570923]
[78.73322296 183.82086182]
[63.73433685 184.00382996]
[50.49665833 176.94947815]
[42.28432083 164.39727783]
[41.12232590 149.44236755]
[47.29719543 135.77227783]
[59.28633118 126.75782013]
[74.13224792 124.62161255]
[59.24446869 126.45302582]
[44.35668945 128.28443909]
[29.46891212 130.11585999]
[14.58113384 131.94726562]
[-0.30664337 133.77868652]
[-15.19442081 135.61010742]
[-30.08219910 137.44151306]
[-34.10741806 152.09982300]
[-43.43967438 164.09889221]
[-56.65586853 171.60891724]
[-71.74062347 173.48471069]
[-86.39362335 169.44021606]
[-98.38039398 160.09217834]
[-105.87304688 146.86611938]
[-107.72899628 131.77891541]
[-103.66522217 117.13124847]
[-94.30142975 105.15678406]
[-81.06552124 97.68154144]
[-65.97588348 95.84543610]
[-51.33357620 99.92847443]
[-39.37143707 109.30801392]
[-31.91361237 122.55374146]
[-17.02583504 120.72232056]
[-2.13805819 118.89090729]
[12.74971962 117.05949402]
[27.63749695 115.22808075]
[42.52527618 113.39666748]
[57.41305161 111.56524658]
[72.30082703 109.73383331]
[74.43808746 92.01985168]
[85.78992462 80.41442871]
[100.27827454 78.38533020]
[105.66331482 64.38528442]
[103.39611053 48.72736740]
[115.18673706 39.62625122]
[120.57177734 25.62620163]
[125.95681763 11.62615490]
[131.34185791 -2.37389326]
[129.07466125 -18.03181076]
[140.86528015 -27.13292503]
[146.25032043 -41.13297272]
[151.63536072 -55.13302231]
[157.02040100 -69.13307190]
[162.40544128 -83.13311768]
[167.64741516 -97.18736267]
[172.74574280 -111.29434204]
[177.84408569 -125.40132904]
[182.94242859 -139.50830078]
[188.04077148 -153.61529541]
[193.13911438 -167.72227478]
[198.23744202 -181.82925415]
[188.03631592 -200.15023804]
[194.45652771 -219.80743408]
[212.97741699 -228.33221436]
[216.90895081 -242.80781555]
[220.84046936 -257.28341675]
[224.77200317 -271.75903320]
[228.70352173 -286.23461914]
[218.87478638 -298.24194336]
[218.01452637 -313.73516846]
[226.45349121 -326.75680542]
[240.94676208 -332.29980469]
[255.92137146 -328.23275757]
[265.61926270 -316.11950684]
[266.31140137 -300.61788940]
[257.73168945 -287.68853760]
[243.17912292 -282.30310059]
[239.24760437 -267.82751465]
[235.31607056 -253.35189819]
[231.38455200 -238.87629700]
[227.45303345 -224.40069580]
[234.47053528 -218.01434326]
[238.67539978 -209.44361877]
[239.44065857 -199.86933899]
[236.61662292 -190.62825012]
[230.55764771 -183.02630615]
[222.07841492 -178.15419006]
[212.34443665 -176.73091125]
[207.24609375 -162.62393188]
[202.14775085 -148.51695251]
[197.04940796 -134.40997314]
[191.95106506 -120.30298615]
[186.85273743 -106.19600677]
[181.75439453 -92.08901978]
[182.44284058 -84.68484497]
[176.40550232 -77.74807739]
[171.02046204 -63.74802780]
[165.63542175 -49.74798203]
[160.25038147 -35.74793243]
[154.86534119 -21.74788475]
[157.51771545 -7.09134579]
[145.34190369 3.01114702]
[139.95686340 17.01119423]
[134.57182312 31.01124191]
[129.18678284 45.01129150]
[131.83917236 59.66783142]
[119.66336060 69.77032471]
[114.27832031 83.77037048]
[124.79386139 105.90818024]
[107.36794281 128.42015076]
[114.15052032 141.79911804]
[120.93309784 155.17807007]
[127.71567535 168.55703735]
[134.49826050 181.93600464]
[143.96974182 193.56747437]
[155.69720459 202.91981506]
[167.42468262 212.27217102]
[179.15214539 221.62451172]
[190.87962341 230.97685242]
[207.03298950 236.12518311]
[206.55755615 253.07246399]
[190.14097595 257.30709839]
[181.52728271 242.70433044]
[169.79980469 233.35198975]
[158.07232666 223.99963379]
[146.34486389 214.64729309]
[134.61738586 205.29493713]
[139.86804199 219.34594727]
[141.20787048 234.28598022]
[138.54110718 249.04702759]
[132.05838013 262.57382202]
[122.22312927 273.89935303]
[109.73847198 282.21401978]
[95.49691010 286.92333984]
[80.51654816 287.69073486]
[65.86831665 284.46127319]
[52.59939194 277.46588135]
[41.65835190 267.20462036]
[33.82734680 254.41104126]
[29.66621017 239.99977112]
[29.47241402 225.00102234]
[33.25981140 210.48703003]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 125]
[7 124]
[8 123]
[9 122]
[10 121]
[21 50]
[22 49]
[23 48]
[24 47]
[25 46]
[26 45]
[27 44]
[28 43]
[53 119]
[54 118]
[56 116]
[57 115]
[58 114]
[59 113]
[61 111]
[62 110]
[63 109]
[64 108]
[65 107]
[66 105]
[67 104]
[68 103]
[69 102]
[70 101]
[71 100]
[72 99]
[75 92]
[76 91]
[77 90]
[78 89]
[79 88]
[126 138]
[127 137]
[128 136]
[129 135]
[130 134]
] def

init

% Start Annotations
6 125 0.0 0.6 colorpair
7 124 0.0 1 colorpair
8 123 0.0 1 colorpair
9 122 0.0 1 colorpair
10 121 0.0 0.6 colorpair
21 50 0.0 1 colorpair
22 49 0.0 0.6 colorpair
23 48 0.0 1 colorpair
24 47 0.16 1 colorpair
25 46 0.0 0.6 colorpair
26 45 0.0 0.6 colorpair
27 44 0.0 0.6 colorpair
28 43 0.0 1 colorpair
53 119 0.0 1 colorpair
54 118 0.0 0.6 colorpair
56 116 0.0 0.6 colorpair
57 115 0.0 0.6 colorpair
58 114 0.0 0.6 colorpair
59 113 0.0 1 colorpair
61 111 0.0 1 colorpair
62 110 0.0 1 colorpair
63 109 0.16 1 colorpair
64 108 0.0 0.6 colorpair
65 107 0.0 0.6 colorpair
66 105 0.0 0.6 colorpair
67 104 0.16 1 colorpair
68 103 0.16 1 colorpair
69 102 0.16 1 colorpair
70 101 0.0 1 colorpair
71 100 0.0 0.6 colorpair
72 99 0.16 1 colorpair
75 92 0.0 0.6 colorpair
76 91 0.0 1 colorpair
77 90 0.0 1 colorpair
78 89 0.0 1 colorpair
79 88 0.0 1 colorpair
126 138 0.16 1 colorpair
127 137 0.0 1 colorpair
128 136 0.0 1 colorpair
129 135 0.0 0.6 colorpair
130 134 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
6 125 1 gmark
10 121 1 gmark
22 49 1 gmark
47 cmark
25 46 1 gmark
26 45 1 gmark
27 44 1 gmark
54 118 1 gmark
56 116 1 gmark
57 115 1 gmark
58 114 1 gmark
63 cmark
64 108 1 gmark
65 107 1 gmark
66 105 1 gmark
104 cmark
68 cmark
103 cmark
69 cmark
102 cmark
71 100 1 gmark
72 cmark
99 cmark
75 92 1 gmark
126 cmark
138 cmark
129 135 1 gmark
130 cmark

% End Annotations
showpage
end
%%EOF
