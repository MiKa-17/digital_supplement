%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:17:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_AA_CCUACAAAGACUGUUGUCAUAUUUUUAUUAAUUGUUUGCUUAACAUUAAUAGCAAUUACCUUAUUAACACGCCGUAAUUUAUGCGAAGUGAAAAUAAGGAAUGAUAAACAGGAGGUAGCGGCCAGGCUGGCCUGC_________\
) } def
/len { sequence length } bind def

/coor [
[144.30427551 333.88354492]
[138.67300415 328.37319946]
[133.83863831 322.14849854]
[129.89091492 315.32379150]
[126.90328217 308.02456665]
[124.93154907 300.38519287]
[124.01280212 292.54635620]
[124.16471863 284.65261841]
[125.38524628 276.84954834]
[127.65260315 269.28118896]
[130.92567444 262.08734131]
[135.14477539 255.40101624]
[140.23271179 249.34594727]
[146.09620667 244.03427124]
[152.62760925 239.56452942]
[146.77796936 225.75215149]
[140.92832947 211.93977356]
[134.93339539 198.18983459]
[128.79383850 184.50386047]
[122.65429688 170.81788635]
[116.51474762 157.13191223]
[110.37519836 143.44593811]
[104.23564911 129.75994873]
[98.09609985 116.07398224]
[98.47411346 131.06921387]
[90.36117554 143.68588257]
[76.56090546 149.56401062]
[61.84227753 146.67227173]
[51.29166031 136.00997925]
[48.55504608 121.26173401]
[54.57814026 107.52410889]
[67.27952576 99.54444885]
[82.27027893 100.08043671]
[68.64978790 93.79695129]
[55.02929688 87.51346588]
[41.40880585 81.22997284]
[27.78831291 74.94648743]
[14.16782093 68.66300201]
[0.54732907 62.37951660]
[-13.07316303 56.09603119]
[-24.21449471 66.43717194]
[-38.46686554 71.72284698]
[-53.65689087 71.14703369]
[-67.46820068 64.79753876]
[-77.79467773 53.64261627]
[-83.06159973 39.38330460]
[-82.46580505 24.19404984]
[-76.09815216 10.39110184]
[-64.92964935 0.07930995]
[-50.66342163 -5.16885185]
[-35.47496414 -4.55307770]
[-21.68040466 1.83273172]
[-11.38331413 13.01478672]
[-6.15392351 27.28790474]
[-6.78967714 42.47554016]
[6.83081532 48.75902557]
[20.45130730 55.04251099]
[34.07180023 61.32600021]
[47.69229126 67.60948181]
[61.31278229 73.89296722]
[74.93327332 80.17646027]
[88.55376434 86.45994568]
[102.42704010 80.75623322]
[107.68920135 66.70954132]
[112.95136261 52.66284561]
[118.21352386 38.61614990]
[123.47568512 24.56945229]
[128.73785400 10.52275753]
[134.00001526 -3.52393842]
[127.70346069 -17.77143860]
[133.24014282 -31.94182396]
[146.86175537 -37.85681534]
[152.12391663 -51.90351105]
[157.38609314 -65.95020294]
[151.08953857 -80.19770813]
[156.62622070 -94.36809540]
[170.24783325 -100.28308105]
[175.50999451 -114.32978058]
[180.77215576 -128.37648010]
[186.03431702 -142.42317200]
[180.72631836 -157.56266785]
[189.37506104 -171.07484436]
[205.34600830 -172.59428406]
[216.38758850 -160.95542908]
[214.02966309 -145.08660889]
[200.08102417 -137.16101074]
[194.81886292 -123.11431122]
[189.55670166 -109.06761932]
[184.29454041 -95.02091980]
[190.67704773 -81.61199951]
[185.54057312 -67.29169464]
[171.43278503 -60.68804550]
[166.17062378 -46.64134979]
[160.90846252 -32.59465408]
[167.29096985 -19.18573380]
[162.15449524 -4.86542511]
[148.04670715 1.73822284]
[142.78454590 15.78491879]
[137.52238464 29.83161354]
[132.26022339 43.87831116]
[126.99806213 57.92500687]
[121.73590088 71.97170258]
[116.47373962 86.01839447]
[118.50923920 99.97012329]
[111.78207397 109.93443298]
[117.92162323 123.62040710]
[124.06117249 137.30638123]
[130.20072937 150.99235535]
[136.34027100 164.67832947]
[142.47981262 178.36430359]
[148.61936951 192.05029297]
[155.03033447 198.65399170]
[154.74069214 206.09013367]
[160.59033203 219.90251160]
[166.43998718 233.71487427]
[190.51835632 232.27522278]
[213.08384705 240.70298767]
[230.27571106 257.52734375]
[239.16429138 279.84332275]
[238.25030518 303.81350708]
[227.71757507 325.32775879]
[238.26812744 335.99011230]
[248.81866455 346.65246582]
[259.48101807 357.20303345]
[270.25402832 367.64059448]
[281.02700806 378.07812500]
[291.80001831 388.51568604]
[307.79925537 389.70071411]
[316.72875977 403.02902222]
[311.73861694 418.27624512]
[296.65679932 423.74603271]
[283.05282593 415.24243164]
[281.36245728 399.28869629]
[270.58947754 388.85113525]
[259.81646729 378.41357422]
[249.04347229 367.97601318]
[242.00335693 365.56420898]
[238.15631104 357.20303345]
[227.60575867 346.54064941]
[217.05522156 335.87829590]
[210.50778198 340.21127319]
[203.43113708 343.61831665]
[195.95552063 346.03588867]
[188.21855164 347.41873169]
[180.36283875 347.74060059]
[172.53323364 346.99481201]
[164.87420654 345.19436646]
[157.52722168 342.37179565]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 115]
[16 114]
[17 113]
[18 111]
[19 110]
[20 109]
[21 108]
[22 107]
[23 106]
[24 105]
[33 62]
[34 61]
[35 60]
[36 59]
[37 58]
[38 57]
[39 56]
[40 55]
[63 103]
[64 102]
[65 101]
[66 100]
[67 99]
[68 98]
[69 97]
[72 94]
[73 93]
[74 92]
[77 89]
[78 88]
[79 87]
[80 86]
[121 140]
[122 139]
[123 138]
[124 136]
[125 135]
[126 134]
[127 133]
] def

init

% Start Annotations
15 115 0.0 1 colorpair
16 114 0.16 1 colorpair
17 113 0.0 0.6 colorpair
18 111 0.0 1 colorpair
19 110 0.0 0.6 colorpair
20 109 0.0 0.6 colorpair
21 108 0.16 1 colorpair
22 107 0.0 0.6 colorpair
23 106 0.0 1 colorpair
24 105 0.0 0.6 colorpair
33 62 0.16 1 colorpair
34 61 0.16 1 colorpair
35 60 0.16 1 colorpair
36 59 0.16 1 colorpair
37 58 0.0 0.6 colorpair
38 57 0.16 1 colorpair
39 56 0.16 1 colorpair
40 55 0.0 0.6 colorpair
63 103 0.16 1 colorpair
64 102 0.0 0.6 colorpair
65 101 0.0 0.6 colorpair
66 100 0.0 0.6 colorpair
67 99 0.16 1 colorpair
68 98 0.16 1 colorpair
69 97 0.16 1 colorpair
72 94 0.0 0.6 colorpair
73 93 0.16 1 colorpair
74 92 0.0 0.6 colorpair
77 89 0.0 0.6 colorpair
78 88 0.16 1 colorpair
79 87 0.0 0.6 colorpair
80 86 0.16 1 colorpair
121 140 0.16 0.6 colorpair
122 139 0.0 1 colorpair
123 138 0.0 0.6 colorpair
124 136 0.0 0.6 colorpair
125 135 0.0 1 colorpair
126 134 0.16 1 colorpair
127 133 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
16 cmark
114 cmark
17 113 1 gmark
19 110 1 gmark
20 109 1 gmark
108 cmark
22 107 1 gmark
24 105 1 gmark
62 cmark
34 cmark
61 cmark
35 cmark
36 cmark
59 cmark
37 58 1 gmark
38 cmark
57 cmark
56 cmark
40 55 1 gmark
63 cmark
103 cmark
64 102 1 gmark
65 101 1 gmark
66 100 1 gmark
67 cmark
68 cmark
98 cmark
97 cmark
72 94 1 gmark
73 cmark
74 92 1 gmark
77 89 1 gmark
78 cmark
88 cmark
79 87 1 gmark
80 cmark
121 140 1 gmark
121 cmark
140 cmark
123 138 1 gmark
124 136 1 gmark
126 cmark
127 cmark

% End Annotations
showpage
end
%%EOF
