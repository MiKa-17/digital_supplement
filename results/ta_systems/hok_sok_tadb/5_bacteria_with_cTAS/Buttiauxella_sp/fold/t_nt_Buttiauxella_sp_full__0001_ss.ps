%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:17:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGAGGCUAACCUUGAUGUUGCGAGCAUACGAGGGGCCUCGGGUUAAUUUGAAAAAAUUACUCGGGGCUUUUCUCCAUCUGCCU_____________________________________\
) } def
/len { sequence length } bind def

/coor [
[123.48776245 207.09707642]
[126.11431885 192.30116272]
[130.86726379 178.04537964]
[137.64530945 164.63359070]
[146.30397034 152.35166931]
[135.43206787 142.01716614]
[124.56018066 131.68266296]
[113.68828583 121.34815979]
[102.81639862 111.01365662]
[99.96894073 113.86937714]
[95.87321472 115.84207916]
[90.82951355 116.49420166]
[85.27509308 115.49199677]
[71.08135223 120.34356689]
[56.88761139 125.19513702]
[42.69387436 130.04670715]
[28.50013161 134.89826965]
[14.36898708 139.92926025]
[0.30270487 145.13883972]
[-13.76357746 150.34841919]
[-27.82985878 155.55798340]
[-41.89614105 160.76756287]
[-54.64939499 171.93855286]
[-68.91426086 162.77613831]
[-64.05882263 146.53233337]
[-47.10572052 146.70129395]
[-33.03943634 141.49171448]
[-18.97315598 136.28213501]
[-4.90687370 131.07255554]
[9.15940762 125.86297607]
[14.39879036 120.52870941]
[23.64856148 120.70453644]
[37.84230423 115.85296631]
[52.03604507 111.00139618]
[66.22978210 106.14982605]
[80.42352295 101.29825592]
[86.51300049 87.58992767]
[80.59766388 73.80555725]
[74.68232727 60.02119446]
[68.76698303 46.23682785]
[62.85164642 32.45245743]
[56.93630981 18.66809082]
[51.02097321 4.88372469]
[45.10563278 -8.90064240]
[39.19029617 -22.68500900]
[33.27495956 -36.46937561]
[26.94358826 -43.21496201]
[27.38928032 -50.67866516]
[21.82503510 -64.60845947]
[16.26079178 -78.53825378]
[10.69654751 -92.46804810]
[5.13230324 -106.39784241]
[-8.07829952 -116.11442566]
[-6.00011063 -132.38136292]
[9.22900677 -138.46461487]
[21.94264221 -128.10626221]
[19.06209755 -111.96208954]
[24.62634277 -98.03229523]
[30.19058609 -84.10250092]
[35.75482941 -70.17270660]
[41.31907272 -56.24290848]
[47.05932617 -42.38471603]
[52.97466278 -28.60034752]
[58.89000320 -14.81598091]
[64.80533600 -1.03161335]
[70.72068024 12.75275421]
[76.63601685 26.53712082]
[82.55135345 40.32148743]
[88.46669006 54.10585403]
[94.38202667 67.89022064]
[100.29736328 81.67459106]
[99.95390320 66.67852020]
[106.36888123 53.11946487]
[118.18115234 43.87444687]
[132.88432312 40.90512085]
[147.35859680 44.84152985]
[158.53276062 54.84843063]
[164.03581238 68.80251312]
[162.70011902 83.74291992]
[154.80905151 96.49953461]
[142.03701782 104.36559296]
[127.09401703 105.67203522]
[113.15090179 100.14176941]
[124.02279663 110.47627258]
[134.89468384 120.81077576]
[145.76657104 131.14527893]
[156.63847351 141.47978210]
[168.46606445 132.21017456]
[181.51733398 124.76153564]
[195.51408386 119.29264069]
[210.15798950 115.92005920]
[225.13687134 114.71568298]
[240.13150024 115.70516968]
[254.82225037 118.86744690]
[268.89596558 124.13509369]
[282.05270386 131.39584351]
[294.01199341 140.49491882]
[304.51892090 151.23838806]
[313.34954834 163.39724731]
[320.31567383 176.71232605]
[325.26876831 190.89981079]
[328.10327148 205.65728760]
[328.75875854 220.67022705]
[327.22128296 235.61860657]
[323.52359009 250.18380737]
[317.74450684 264.05535889]
[310.00723267 276.93759155]
[300.47665405 288.55593872]
[289.35592651 298.66275024]
[276.88211060 307.04257202]
[263.32104492 313.51681519]
[248.96183777 317.94747925]
[234.11051941 320.24011230]
[219.08364868 320.34585571]
[204.20153809 318.26245117]
[189.78138733 314.03430176]
[176.13058472 307.75152588]
[163.54006958 299.54806519]
[152.27822876 289.59875488]
[142.58509827 278.11566162]
[134.66729736 265.34359741]
[128.69357300 251.55473328]
[124.79129028 237.04301453]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 87]
[6 86]
[7 85]
[8 84]
[9 83]
[13 36]
[14 35]
[15 34]
[16 33]
[17 32]
[18 30]
[19 29]
[20 28]
[21 27]
[22 26]
[37 71]
[38 70]
[39 69]
[40 68]
[41 67]
[42 66]
[43 65]
[44 64]
[45 63]
[46 62]
[48 61]
[49 60]
[50 59]
[51 58]
[52 57]
] def

init

% Start Annotations
5 87 0.0 0.6 colorpair
6 86 0.0 1 colorpair
7 85 0.0 1 colorpair
8 84 0.0 1 colorpair
9 83 0.0 1 colorpair
13 36 0.0 1 colorpair
14 35 0.0 1 colorpair
15 34 0.0 1 colorpair
16 33 0.0 1 colorpair
17 32 0.0 1 colorpair
18 30 0.0 1 colorpair
19 29 0.0 1 colorpair
20 28 0.0 1 colorpair
21 27 0.0 1 colorpair
22 26 0.0 1 colorpair
37 71 0.0 1 colorpair
38 70 0.0 1 colorpair
39 69 0.0 1 colorpair
40 68 0.0 1 colorpair
41 67 0.0 1 colorpair
42 66 0.0 1 colorpair
43 65 0.0 1 colorpair
44 64 0.0 1 colorpair
45 63 0.0 1 colorpair
46 62 0.0 1 colorpair
48 61 0.0 1 colorpair
49 60 0.0 1 colorpair
50 59 0.0 1 colorpair
51 58 0.0 1 colorpair
52 57 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
5 87 1 gmark

% End Annotations
showpage
end
%%EOF
