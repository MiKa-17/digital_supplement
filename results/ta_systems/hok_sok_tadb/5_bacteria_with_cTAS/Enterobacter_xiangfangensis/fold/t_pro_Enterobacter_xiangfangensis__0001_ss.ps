%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:27:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
________AAAAACUGCGUUAGGCAUCGUCUUUAUUGUUUGCCUGACGAUAGUGAUCUUUACCUUUAUUACUAGCAAAACACUCUGCGAGAUCCCAAUAAAGAACGAACAGCAGGAAGUGACAGCGAAAAUAGACUGUAACGCAG_____\
) } def
/len { sequence length } bind def

/coor [
[-86.82451630 379.01031494]
[-99.79350281 378.75643921]
[-112.69655609 377.42941284]
[-125.44502258 375.03845215]
[-137.95132446 371.59997559]
[-150.12956238 367.13769531]
[-161.89608765 361.68234253]
[-173.17007446 355.27142334]
[-183.87408447 347.94906616]
[-193.93463135 339.76559448]
[-203.28262329 330.77731323]
[-211.85388184 321.04598999]
[-219.58953857 310.63854980]
[-226.43652344 299.62652588]
[-232.34783936 288.08560181]
[-237.28291321 276.09509277]
[-241.20790100 263.73739624]
[-255.85139465 266.98822021]
[-270.49490356 270.23904419]
[-285.13839722 273.48989868]
[-299.78189087 276.74072266]
[-314.42541504 279.99154663]
[-329.06890869 283.24237061]
[-343.71240234 286.49319458]
[-358.35589600 289.74401855]
[-360.95672607 304.72079468]
[-369.09515381 317.55957031]
[-381.53015137 326.30255127]
[-396.36547852 329.61642456]
[-411.33883667 326.99591064]
[-424.16690063 318.84060669]
[-432.89349365 306.39410400]
[-436.18786621 291.55444336]
[-433.54763794 276.58456421]
[-425.37545776 263.76721191]
[-412.91751099 255.05702209]
[-398.07351685 251.78216553]
[-383.10711670 254.44206238]
[-370.30053711 262.63110352]
[-361.60671997 275.10052490]
[-346.96322632 271.84970093]
[-332.31973267 268.59884644]
[-317.67623901 265.34802246]
[-303.03271484 262.09719849]
[-288.38922119 258.84637451]
[-273.74572754 255.59555054]
[-259.10223389 252.34472656]
[-244.45872498 249.09390259]
[-246.46812439 231.67233276]
[-246.51486206 214.13449097]
[-244.59815979 196.70080566]
[-240.74189758 179.59039307]
[-234.99438477 163.01834106]
[-227.42767334 147.19302368]
[-218.13670349 132.31341553]
[-207.23806763 118.56660461]
[-194.86862183 106.12550354]
[-181.18368530 95.14661407]
[-166.35513306 85.76805878]
[-150.56924438 78.10787964]
[-134.02433777 72.26251984]
[-116.92830658 68.30561829]
[-99.49596405 66.28709412]
[-81.94639587 66.23250580]
[-64.50016022 68.14272308]
[-47.37656403 71.99392700]
[-30.79086113 77.73789215]
[-14.95156384 85.30261230]
[-0.05783436 94.59317780]
[13.70303917 105.49297333]
[26.15798569 117.86515808]
[37.15033722 131.55436707]
[49.76146317 123.43283081]
[62.37259293 115.31128693]
[74.98371887 107.18974304]
[74.69075012 93.92147064]
[80.97747803 82.23344421]
[92.20953369 75.16423035]
[105.46689606 74.55162811]
[117.30301666 80.55488586]
[130.08036804 72.69746399]
[142.85772705 64.84003448]
[155.63508606 56.98260880]
[155.31349182 41.69065857]
[162.64091492 28.37879944]
[175.56178284 20.57381058]
[190.55421448 20.28611183]
[203.58987427 27.49284935]
[216.36723328 19.63542366]
[229.14459229 11.77799797]
[241.92195129 3.92057252]
[254.69931030 -3.93685317]
[267.47665405 -11.79427910]
[280.25402832 -19.65170479]
[293.03137207 -27.50913048]
[293.23492432 -42.93515015]
[301.76513672 -55.78968048]
[315.90008545 -61.97088242]
[331.12930298 -59.50635910]
[342.59326172 -49.18253326]
[346.63381958 -34.29369736]
[341.96166992 -19.59082603]
[330.06765747 -9.76555061]
[314.74713135 -7.95308256]
[300.88879395 -14.73177338]
[288.11145020 -6.87434721]
[275.33407593 0.98307848]
[262.55673218 8.84050465]
[249.77937317 16.69792938]
[237.00201416 24.55535507]
[224.22465515 32.41278076]
[211.44729614 40.27020645]
[211.99694824 55.15521622]
[204.97549438 68.40493774]
[192.18017578 76.41408539]
[176.99423218 76.94680786]
[163.49250793 69.75997162]
[150.71514893 77.61739349]
[137.93778992 85.47482300]
[125.16043854 93.33224487]
[124.22014618 109.53369141]
[113.86461639 122.02905273]
[98.11941528 125.96092987]
[83.10526276 119.80087280]
[70.49413300 127.92241669]
[57.88300705 136.04396057]
[45.27187729 144.16549683]
[51.29411697 155.66452026]
[56.34320450 167.62243652]
[60.38451385 179.95709229]
[63.39032745 192.58372498]
[65.34005737 205.41554260]
[66.22036743 218.36439514]
[66.02526855 231.34129333]
[64.75616455 244.25711060]
[62.42182541 257.02307129]
[59.03836060 269.55154419]
[54.62906265 281.75637817]
[49.22429276 293.55383301]
[42.86123276 304.86282349]
[35.58365250 315.60568237]
[27.44160843 325.70861816]
[18.49108124 335.10232544]
[8.79361343 343.72222900]
[-1.58413053 351.50921631]
[-12.57081318 358.40979004]
[-24.09091949 364.37658691]
[-36.06526947 369.36868286]
[-48.41157532 373.35183716]
[-61.04498672 376.29873657]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 48]
[18 47]
[19 46]
[20 45]
[21 44]
[22 43]
[23 42]
[24 41]
[25 40]
[72 127]
[73 126]
[74 125]
[75 124]
[80 120]
[81 119]
[82 118]
[83 117]
[88 112]
[89 111]
[90 110]
[91 109]
[92 108]
[93 107]
[94 106]
[95 105]
] def

init

% Start Annotations
17 48 0.0 0.2 colorpair
18 47 0.0 0.2 colorpair
19 46 0.0 0.2 colorpair
20 45 0.0 0.6 colorpair
21 44 0.0 0.2 colorpair
22 43 0.16 0.6 colorpair
23 42 0.16 0.6 colorpair
24 41 0.16 0.6 colorpair
25 40 0.16 0.6 colorpair
72 127 0.16 0.6 colorpair
73 126 0.0 0.2 colorpair
74 125 0.0 1 colorpair
75 124 0.0 0.2 colorpair
80 120 0.0 0.2 colorpair
81 119 0.16 1 colorpair
82 118 0.0 1 colorpair
83 117 0.16 1 colorpair
88 112 0.0 1 colorpair
89 111 0.0 0.2 colorpair
90 110 0.0 0.2 colorpair
91 109 0.0 0.2 colorpair
92 108 0.0 0.2 colorpair
93 107 0.16 1 colorpair
94 106 0.16 1 colorpair
95 105 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
17 48 2 gmark
18 47 2 gmark
19 46 2 gmark
20 45 1 gmark
21 44 2 gmark
22 43 1 gmark
43 cmark
23 42 1 gmark
42 cmark
24 41 1 gmark
24 cmark
41 cmark
25 40 1 gmark
25 cmark
72 127 1 gmark
72 cmark
127 cmark
73 126 2 gmark
75 124 2 gmark
80 120 2 gmark
81 cmark
117 cmark
89 111 2 gmark
90 110 2 gmark
91 109 2 gmark
92 108 2 gmark
93 cmark
107 cmark
94 cmark
95 105 2 gmark

% End Annotations
showpage
end
%%EOF
