%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:27:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAGAGGCUACUCUCAACUUGUUGGAGUUGAGGGAGUAGCCUCGGGUAAAUGAAAAUUUCCCGGGGCUUUCUACUUUCUGUCCCUCAACAAUGCUCAAGACAGAAAGUCUUAAGCACCCGCCG\
) } def
/len { sequence length } bind def

/coor [
[99.27210999 157.90901184]
[87.92267609 148.10133362]
[83.57789612 133.74435425]
[87.58511353 119.28905487]
[73.65531921 124.85329437]
[59.72552490 130.41754150]
[45.79573059 135.98178101]
[31.86593437 141.54603577]
[17.93613815 147.11027527]
[4.00634384 152.67451477]
[-9.92345142 158.23875427]
[-23.85324669 163.80300903]
[-37.78304291 169.36724854]
[-51.56740952 175.28259277]
[-65.19750214 181.54522705]
[-78.82759094 187.80786133]
[-92.45768738 194.07049561]
[-106.08777618 200.33312988]
[-119.71786499 206.59576416]
[-133.34796143 212.85839844]
[-142.38296509 226.54417419]
[-158.73428345 225.29257202]
[-165.58106995 210.39111328]
[-155.87994385 197.16914368]
[-139.61059570 199.22830200]
[-125.98049927 192.96566772]
[-112.35041046 186.70303345]
[-98.72032166 180.44039917]
[-85.09022522 174.17776489]
[-71.46013641 167.91513062]
[-57.83004379 161.65249634]
[-55.33193970 157.46002197]
[-50.11924744 154.85441589]
[-43.34728622 155.43745422]
[-29.41749001 149.87321472]
[-15.48769569 144.30895996]
[-1.55790019 138.74472046]
[12.37189484 133.18048096]
[26.30168915 127.61623383]
[40.23148346 122.05198669]
[54.16128159 116.48774719]
[68.09107208 110.92350006]
[82.02086639 105.35926056]
[87.40821075 91.36009979]
[80.80229950 77.89302826]
[74.19638824 64.42595673]
[67.53148651 58.00970840]
[67.59857178 50.53301620]
[61.33594131 36.90292358]
[55.07330704 23.27283096]
[48.81066895 9.64273930]
[35.12488556 0.60773242]
[36.37649918 -15.74358273]
[51.27796173 -22.59037399]
[64.49992371 -12.88924980]
[62.44076157 3.38010478]
[68.70339966 17.01019669]
[74.96603394 30.64028931]
[81.22866821 44.27038193]
[87.66345978 57.82004929]
[94.26937103 71.28711700]
[100.87528229 84.75418091]
[113.99047852 92.03371429]
[128.91351318 90.51618958]
[143.83656311 88.99866486]
[158.73918152 87.29222107]
[173.61898804 85.39714813]
[188.49879456 83.50206757]
[203.37860107 81.60698700]
[210.90119934 68.16390228]
[224.73538208 61.80238342]
[239.48826599 64.77162933]
[249.54348755 75.72747040]
[264.42330933 73.83238983]
[279.30310059 71.93730927]
[294.18292236 70.04222870]
[309.06271362 68.14715576]
[323.94253540 66.25207520]
[338.82232666 64.35699463]
[353.70214844 62.46191788]
[368.58193970 60.56683731]
[383.46176147 58.67176056]
[386.78085327 43.88124466]
[394.96105957 31.11958122]
[407.01458740 21.92780495]
[421.48587036 17.41586494]
[436.62747192 18.12860298]
[450.61093140 23.97994804]
[461.74771118 34.26332855]
[468.69299316 47.73696899]
[470.60806274 62.77386475]
[467.26171875 77.55823517]
[459.05801392 90.30480194]
[446.98757935 99.47434998]
[432.50799561 103.95961761]
[417.36773682 103.21897125]
[403.39508057 97.34186554]
[392.27728271 87.03798676]
[385.35684204 73.55156708]
[370.47702026 75.44664764]
[355.59722900 77.34172821]
[340.71740723 79.23680115]
[325.83761597 81.13188171]
[310.95779419 83.02696228]
[296.07800293 84.92204285]
[281.19818115 86.81711578]
[266.31838989 88.71219635]
[251.43856812 90.60727692]
[244.45045471 103.73374176]
[230.91276550 110.30604553]
[215.92568970 107.61518097]
[205.27368164 96.48679352]
[190.39387512 98.38187408]
[175.51406860 100.27695465]
[160.63426208 102.17203522]
[154.32469177 106.18386841]
[145.35408020 103.92170715]
[130.43104553 105.43923187]
[115.50800323 106.95675659]
[128.89117432 113.73101807]
[136.57670593 126.61251068]
[136.18167114 141.60729980]
[127.82858276 154.06626892]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 43]
[5 42]
[6 41]
[7 40]
[8 39]
[9 38]
[10 37]
[11 36]
[12 35]
[13 34]
[14 31]
[15 30]
[16 29]
[17 28]
[18 27]
[19 26]
[20 25]
[44 62]
[45 61]
[46 60]
[48 59]
[49 58]
[50 57]
[51 56]
[63 119]
[64 118]
[65 117]
[66 115]
[67 114]
[68 113]
[69 112]
[73 108]
[74 107]
[75 106]
[76 105]
[77 104]
[78 103]
[79 102]
[80 101]
[81 100]
[82 99]
] def

init

% Start Annotations
4 43 0.0 1 colorpair
5 42 0.0 1 colorpair
6 41 0.0 1 colorpair
7 40 0.0 1 colorpair
8 39 0.0 1 colorpair
9 38 0.0 1 colorpair
10 37 0.0 1 colorpair
11 36 0.0 1 colorpair
12 35 0.0 1 colorpair
13 34 0.0 1 colorpair
14 31 0.0 1 colorpair
15 30 0.0 1 colorpair
16 29 0.0 1 colorpair
17 28 0.0 1 colorpair
18 27 0.0 1 colorpair
19 26 0.0 1 colorpair
20 25 0.0 1 colorpair
44 62 0.0 1 colorpair
45 61 0.0 1 colorpair
46 60 0.0 1 colorpair
48 59 0.0 1 colorpair
49 58 0.0 1 colorpair
50 57 0.0 1 colorpair
51 56 0.0 1 colorpair
63 119 0.0 1 colorpair
64 118 0.0 1 colorpair
65 117 0.0 1 colorpair
66 115 0.0 1 colorpair
67 114 0.0 1 colorpair
68 113 0.0 1 colorpair
69 112 0.0 1 colorpair
73 108 0.0 1 colorpair
74 107 0.0 1 colorpair
75 106 0.0 1 colorpair
76 105 0.0 1 colorpair
77 104 0.0 1 colorpair
78 103 0.0 1 colorpair
79 102 0.0 1 colorpair
80 101 0.0 1 colorpair
81 100 0.0 1 colorpair
82 99 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
