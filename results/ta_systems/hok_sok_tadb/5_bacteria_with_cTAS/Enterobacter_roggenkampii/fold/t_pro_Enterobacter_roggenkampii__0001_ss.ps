%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:26:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_______________________GCCAUUAAAAACUGCGUUAGGCAUCGUCUUUAUUGUUUGCCUGACGAUAGUGAUCUUUACCUUUAUUACUCGCGGCAGGCUCUGCGAGUUUUCAAUAAAGAGUGAGCAUCAGGAGGUGGCGGCUAAAUUAGCCUGCAACCCAG_____\
) } def
/len { sequence length } bind def

/coor [
[102.86180878 266.90893555]
[92.58061981 277.83126831]
[80.87384033 287.20950317]
[67.97126007 294.85955811]
[54.12613678 300.63128662]
[39.61024857 304.41134644]
[24.70852280 306.12557983]
[9.71347046 305.74032593]
[-5.08056974 303.26315308]
[-19.38320351 298.74270630]
[-32.91368484 292.26763916]
[-45.40641785 283.96514893]
[-56.61618805 273.99813843]
[-66.32295227 262.56228638]
[-74.33617401 249.88206482]
[-80.49856567 236.20635986]
[-84.68916321 221.80361938]
[-86.82571411 206.95655823]
[-86.86627197 191.95661926]
[-84.81003571 177.09822083]
[-80.69738007 162.67303467]
[-74.60903168 148.96420288]
[-66.66448975 136.24082947]
[-57.01970673 124.75265503]
[-45.86399841 114.72518158]
[-33.41634369 106.35524750]
[-19.92107391 99.80714417]
[-5.64309311 95.20939636]
[9.13733578 92.65225983]
[24.13008499 92.18593597]
[39.04086304 93.81956482]
[53.57698059 97.52108765]
[67.45650482 103.21953583]
[82.38428497 101.74936676]
[68.57909393 95.88279724]
[54.77390289 90.01622772]
[40.96870804 84.14965820]
[27.11051750 78.40940857]
[13.20047951 72.79595184]
[-0.70955801 67.18250275]
[-14.61959553 61.56904602]
[-28.52963257 55.95559311]
[-42.43967056 50.34214020]
[-56.34970856 44.72868729]
[-70.25974274 39.11523438]
[-84.16978455 33.50177765]
[-94.79486084 44.37266541]
[-108.77322388 50.34541702]
[-123.97327423 50.50923157]
[-138.07711792 44.83913040]
[-148.93402100 34.19976044]
[-154.88838196 20.21355247]
[-155.03219604 5.01329660]
[-149.34355164 -9.08307552]
[-138.68991089 -19.92597008]
[-124.69587708 -25.86192513]
[-109.49544525 -25.98574829]
[-95.40657043 -20.27856064]
[-84.57769775 -9.61066628]
[-78.66015625 4.39116096]
[-78.55632782 19.59174156]
[-64.64629364 25.20519447]
[-50.73625565 30.81864929]
[-36.82621765 36.43210220]
[-22.91617966 42.04555511]
[-9.00614166 47.65900803]
[4.90389538 53.27246094]
[18.81393242 58.88591385]
[32.72396851 64.49936676]
[40.13087463 64.08506012]
[46.83528137 70.34446716]
[60.64047241 76.21103668]
[74.44566345 82.07760620]
[88.25086212 87.94417572]
[102.76311493 84.15017700]
[111.93071747 72.27773285]
[121.09832764 60.40528107]
[123.40858459 44.75365829]
[137.31120300 39.40890503]
[146.47880554 27.53645515]
[155.64640808 15.66400814]
[164.81402588 3.79156113]
[173.98162842 -8.08088589]
[183.04042053 -20.03656006]
[191.98965454 -32.07446671]
[200.93890381 -44.11236954]
[209.88813782 -56.15027618]
[218.83737183 -68.18817902]
[227.78660583 -80.22608185]
[236.73585510 -92.26399231]
[245.23947144 -104.62070465]
[253.28611755 -117.27974701]
[261.33276367 -129.93879700]
[269.37942505 -142.59783936]
[277.42608643 -155.25688171]
[285.47271729 -167.91592407]
[293.51937866 -180.57496643]
[301.56604004 -193.23400879]
[297.88549805 -208.60375977]
[306.22213745 -222.03045654]
[321.62991333 -225.54829407]
[334.96774292 -217.07019043]
[338.32247925 -201.62605286]
[329.70382690 -188.37861633]
[314.22506714 -185.18736267]
[306.17843628 -172.52832031]
[298.13177490 -159.86927795]
[290.08511353 -147.21022034]
[282.03848267 -134.55117798]
[273.99182129 -121.89214325]
[265.94515991 -109.23309326]
[257.89849854 -96.57405090]
[258.40246582 -93.78084564]
[257.80953979 -90.61647797]
[255.97149658 -87.50547028]
[252.89912415 -84.91847992]
[248.77375793 -83.31475067]
[239.82452393 -71.27684784]
[230.87527466 -59.23894119]
[221.92604065 -47.20103836]
[212.97680664 -35.16313171]
[204.02757263 -23.12522697]
[195.07832336 -11.08732319]
[193.60571289 -3.81647396]
[185.85406494 1.08671963]
[176.68646240 12.95916653]
[167.51885986 24.83161354]
[158.35125732 36.70406342]
[149.18365479 48.57650757]
[147.52912903 63.37893295]
[132.97077942 69.57289124]
[123.80316925 81.44533539]
[114.63555908 93.31777954]
[128.45533752 87.48564911]
[141.21360779 95.37403107]
[142.17190552 110.34338379]
[130.52365112 119.79421234]
[116.07295990 115.77182007]
[126.67955780 126.37842560]
[137.28616333 136.98503113]
[152.51545715 141.27212524]
[156.04389954 155.74276733]
[166.65049744 166.34936523]
[177.35351562 176.85865784]
[188.15206909 187.26977539]
[198.95062256 197.68087769]
[209.74917603 208.09199524]
[220.54772949 218.50311279]
[236.14698792 225.14385986]
[234.08406067 241.97183228]
[217.34265137 244.64797974]
[210.13661194 229.30166626]
[199.33805847 218.89054871]
[188.53950500 208.47943115]
[177.74096680 198.06832886]
[166.94241333 187.65721130]
[159.91867065 185.26953125]
[156.04389954 176.95596313]
[145.43730164 166.34936523]
[130.96665955 162.82092285]
[126.67955780 147.59162903]
[116.07295990 136.98503113]
[105.46635437 126.37842560]
[109.68944550 140.77166748]
[116.97016907 153.88619995]
[122.34654236 167.88958740]
[125.71304321 182.50692749]
[127.00359344 197.45130920]
[126.19284821 212.42938232]
[123.29673004 227.14714050]
[118.37208557 241.31568909]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 74]
[35 73]
[36 72]
[37 71]
[38 69]
[39 68]
[40 67]
[41 66]
[42 65]
[43 64]
[44 63]
[45 62]
[46 61]
[75 133]
[76 132]
[77 131]
[79 129]
[80 128]
[81 127]
[82 126]
[83 125]
[84 123]
[85 122]
[86 121]
[87 120]
[88 119]
[89 118]
[90 117]
[91 112]
[92 111]
[93 110]
[94 109]
[95 108]
[96 107]
[97 106]
[98 105]
[138 163]
[139 162]
[140 161]
[142 159]
[143 158]
[144 156]
[145 155]
[146 154]
[147 153]
[148 152]
] def

init

% Start Annotations
34 74 0.0 0.2 colorpair
35 73 0.0 0.6 colorpair
36 72 0.16 1 colorpair
37 71 0.0 0.6 colorpair
38 69 0.16 1 colorpair
39 68 0.0 1 colorpair
40 67 0.0 0.6 colorpair
41 66 0.0 0.6 colorpair
42 65 0.0 0.6 colorpair
43 64 0.0 0.6 colorpair
44 63 0.16 1 colorpair
45 62 0.0 0.6 colorpair
46 61 0.0 0.6 colorpair
75 133 0.0 0.6 colorpair
76 132 0.0 0.6 colorpair
77 131 0.0 1 colorpair
79 129 0.16 1 colorpair
80 128 0.0 0.6 colorpair
81 127 0.0 0.6 colorpair
82 126 0.0 0.6 colorpair
83 125 0.0 0.6 colorpair
84 123 0.16 1 colorpair
85 122 0.16 1 colorpair
86 121 0.0 0.6 colorpair
87 120 0.0 0.6 colorpair
88 119 0.0 0.6 colorpair
89 118 0.0 0.6 colorpair
90 117 0.0 0.6 colorpair
91 112 0.0 0.6 colorpair
92 111 0.0 0.6 colorpair
93 110 0.0 0.6 colorpair
94 109 0.0 1 colorpair
95 108 0.0 1 colorpair
96 107 0.0 0.6 colorpair
97 106 0.16 1 colorpair
98 105 0.0 0.6 colorpair
138 163 0.16 1 colorpair
139 162 0.0 0.6 colorpair
140 161 0.0 1 colorpair
142 159 0.0 1 colorpair
143 158 0.0 0.6 colorpair
144 156 0.16 1 colorpair
145 155 0.0 1 colorpair
146 154 0.0 1 colorpair
147 153 0.16 1 colorpair
148 152 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
34 74 2 gmark
35 73 1 gmark
36 cmark
72 cmark
37 71 1 gmark
38 cmark
69 cmark
40 67 1 gmark
41 66 1 gmark
42 65 1 gmark
43 64 1 gmark
63 cmark
45 62 1 gmark
46 61 1 gmark
75 133 1 gmark
76 132 1 gmark
129 cmark
80 128 1 gmark
81 127 1 gmark
82 126 1 gmark
83 125 1 gmark
84 cmark
122 cmark
86 121 1 gmark
87 120 1 gmark
88 119 1 gmark
89 118 1 gmark
90 117 1 gmark
91 112 1 gmark
92 111 1 gmark
93 110 1 gmark
96 107 1 gmark
97 cmark
98 105 1 gmark
163 cmark
139 162 1 gmark
143 158 1 gmark
156 cmark
153 cmark
148 152 1 gmark

% End Annotations
showpage
end
%%EOF
