%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:26:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCGUUAGGCAUCGUCUUUAUUGUUUGCCUGACGAUAGUGAUCUUUACCUUUAUUACUCGCGGCAGGCUCUGCGAGUUUUCAAUAAAGAGUGAGCAUCAGGAGGUGGCGGCUAAAUUAGCCUGCAA___________________________________________________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[103.78374481 129.82626343]
[95.89764404 142.58593750]
[88.01155090 155.34562683]
[80.21393585 168.15956116]
[72.50517273 181.02716064]
[64.79641724 193.89476013]
[57.08765793 206.76235962]
[49.37889862 219.62995911]
[41.67013931 232.49754333]
[33.96138382 245.36514282]
[26.25262451 258.23272705]
[18.54386520 271.10034180]
[27.62977028 283.28698730]
[31.35557175 298.02426147]
[29.15311050 313.06478882]
[21.35824776 326.11502075]
[9.15964317 335.18490601]
[-5.58250570 338.89129639]
[-20.62012672 336.66906738]
[-33.66009521 328.85702515]
[-42.71390533 316.64651489]
[-46.40092087 301.89950562]
[-44.15889740 286.86480713]
[-36.32972717 273.83514404]
[-24.10730362 264.79739380]
[-9.35545540 261.12979126]
[5.67626858 263.39157104]
[13.38502693 250.52398682]
[21.09378624 237.65638733]
[28.80254555 224.78878784]
[36.51130295 211.92118835]
[44.22006226 199.05358887]
[51.92882156 186.18600464]
[59.63758087 173.31840515]
[67.34633636 160.45080566]
[68.08660889 153.10600281]
[75.25186920 147.45951843]
[83.13796997 134.69984436]
[91.02406311 121.94016266]
[82.46073914 134.25556946]
[68.15060425 138.75224304]
[54.08221054 133.54835510]
[46.14295578 120.82168579]
[47.65529251 105.89811707]
[57.98633194 95.02292633]
[72.81269836 92.74720764]
[85.93064117 100.02425385]
[73.22583771 92.05004883]
[60.52103043 84.07584381]
[47.81622696 76.10164642]
[35.11141968 68.12744141]
[22.40661430 60.15324020]
[9.70180798 52.17903519]
[-7.94374990 61.16028976]
[-27.43994713 58.53223419]
[-41.88952637 45.37053299]
[-46.26363754 26.45143509]
[-60.60449219 22.05372810]
[-74.94535065 17.65602303]
[-89.28620911 13.25831699]
[-103.62706757 8.86061096]
[-117.96791840 4.46290493]
[-132.30877686 0.06519899]
[-146.64964294 -4.33250713]
[-160.49102783 3.29581618]
[-175.64897156 -1.17768264]
[-183.13053894 -15.09895611]
[-178.49702454 -30.20875931]
[-164.49743652 -37.54271317]
[-149.43746948 -32.74971390]
[-142.25192261 -18.67336464]
[-127.91107178 -14.27565765]
[-113.57021332 -9.87795258]
[-99.22936249 -5.48024607]
[-84.88850403 -1.08254015]
[-70.54764557 3.31516576]
[-56.20678711 7.71287203]
[-41.86592865 12.11057758]
[-41.11745453 10.89631748]
[-40.31641006 9.71607208]
[-50.20334625 -1.56437600]
[-60.09028244 -12.84482384]
[-69.97721863 -24.12527275]
[-85.41674042 -22.57584000]
[-98.80130768 -30.42650414]
[-104.98428345 -44.65852737]
[-101.58818054 -59.79940414]
[-89.91887665 -70.02716064]
[-74.46345520 -71.40901184]
[-61.16484070 -63.41360855]
[-55.13661957 -49.11535263]
[-58.69676971 -34.01220703]
[-48.80983353 -22.73176003]
[-38.92289734 -11.45131111]
[-29.03596306 -0.17086296]
[-16.71095467 -3.96074009]
[-3.82510495 -2.66434026]
[7.59696674 3.55861449]
[15.74358463 13.77090931]
[19.30333328 26.39875031]
[17.67601013 39.47423172]
[30.38081551 47.44843292]
[43.08562088 55.42263412]
[55.79042816 63.39683914]
[68.49523163 71.37104034]
[81.20004272 79.34524536]
[93.90484619 87.31944275]
[107.32138824 80.61151886]
[108.56552887 65.66320038]
[109.70619202 50.70663452]
[110.74333191 35.74253464]
[111.78047943 20.77843094]
[112.81761932 5.81432962]
[113.85476685 -9.14977169]
[108.91806030 -25.36905861]
[123.13687134 -34.60278320]
[135.94589233 -23.49579239]
[128.81886292 -8.11262894]
[127.78172302 6.85147285]
[126.74458313 21.81557465]
[125.70743561 36.77967453]
[124.67029572 51.74377823]
[127.34042358 58.62597656]
[123.51383972 66.90733337]
[122.26970673 81.85565186]
[129.44346619 68.68230438]
[137.38195801 55.95515442]
[146.05754089 43.71854782]
[155.43995667 32.01511765]
[165.49652100 20.88564110]
[176.19221497 10.36888790]
[187.48977661 0.50150317]
[199.34982300 -8.68213558]
[211.73104858 -17.15003395]
[224.59031677 -24.87268639]
[237.88281250 -31.82318878]
[251.56224060 -37.97732544]
[265.58093262 -43.31365204]
[279.89004517 -47.81357956]
[294.43969727 -51.46143341]
[309.17926025 -54.24449539]
[324.05734253 -56.15307617]
[339.02212524 -57.18052292]
[354.02145386 -57.32326126]
[369.00305176 -56.58078766]
[383.91476440 -54.95568848]
[398.70462036 -52.45363235]
[413.32107544 -49.08332825]
[427.71322632 -44.85652542]
[441.83093262 -39.78794861]
[455.62500000 -33.89525604]
[469.04736328 -27.19897461]
[482.05126953 -19.72243881]
[494.59140015 -11.49169731]
[506.62405396 -2.53542519]
[518.10736084 7.11517382]
[529.00128174 17.42647552]
[539.26782227 28.36255646]
[548.87127686 39.88531494]
[557.77813721 51.95460129]
[565.95739746 64.52837372]
[573.38055420 77.56281281]
[580.02172852 91.01251984]
[585.85784912 104.83061981]
[590.86846924 118.96898651]
[595.03625488 133.37834167]
[598.34661865 148.00851440]
[600.78802490 162.80848694]
[602.35192871 177.72674561]
[603.03302002 192.71127319]
[602.82879639 207.70988464]
[601.73999023 222.67031860]
[599.77044678 237.54045105]
[596.92694092 252.26846313]
[593.21948242 266.80307007]
[588.66094971 281.09359741]
[583.26715088 295.09030151]
[577.05700684 308.74438477]
[570.05206299 322.00827026]
[562.27679443 334.83575439]
[553.75817871 347.18215942]
[544.52600098 359.00448608]
[534.61236572 370.26147461]
[524.05187988 380.91397095]
[512.88122559 390.92483521]
[501.13946533 400.25918579]
[488.86740112 408.88452148]
[476.10778809 416.77078247]
[462.90515137 423.89047241]
[449.30545044 430.21881104]
[435.35604858 435.73373413]
[421.10556030 440.41604614]
[406.60366821 444.24942017]
[391.90084839 447.22048950]
[377.04837036 449.31893921]
[362.09793091 450.53741455]
[347.10165405 450.87170410]
[332.11178589 450.32061768]
[317.18054199 448.88607788]
[302.35995483 446.57312012]
[287.70162964 443.38977051]
[273.25665283 439.34710693]
[259.07537842 434.45922852]
[245.20718384 428.74319458]
[231.70039368 422.21887207]
[218.60206604 414.90902710]
[205.95783997 406.83911133]
[193.81176758 398.03723145]
[182.20617676 388.53408813]
[171.18147278 378.36276245]
[160.77609253 367.55868530]
[151.02627563 356.15951538]
[141.96598816 344.20495605]
[133.62681580 331.73666382]
[126.03779602 318.79809570]
[119.22537231 305.43429565]
[113.21327972 291.69186401]
[108.02246857 277.61865234]
[103.67102051 263.26367188]
[100.17409515 248.67698669]
[97.54387665 233.90939331]
[95.78952789 219.01234436]
[94.91716766 204.03771973]
[94.92982483 189.03773499]
[95.82746887 174.06462097]
[97.60695648 159.17054749]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 39]
[2 38]
[3 37]
[4 35]
[5 34]
[6 33]
[7 32]
[8 31]
[9 30]
[10 29]
[11 28]
[12 27]
[47 107]
[48 106]
[49 105]
[50 104]
[51 103]
[52 102]
[53 101]
[57 78]
[58 77]
[59 76]
[60 75]
[61 74]
[62 73]
[63 72]
[64 71]
[80 95]
[81 94]
[82 93]
[83 92]
[108 125]
[109 124]
[110 122]
[111 121]
[112 120]
[113 119]
[114 118]
] def

init

% Start Annotations
1 39 0.0 0.6 colorpair
2 38 0.16 1 colorpair
3 37 0.0 0.6 colorpair
4 35 0.16 1 colorpair
5 34 0.0 1 colorpair
6 33 0.0 0.6 colorpair
7 32 0.0 0.6 colorpair
8 31 0.0 0.6 colorpair
9 30 0.0 0.6 colorpair
10 29 0.16 1 colorpair
11 28 0.0 0.6 colorpair
12 27 0.0 0.6 colorpair
47 107 0.16 1 colorpair
48 106 0.0 1 colorpair
49 105 0.0 1 colorpair
50 104 0.16 1 colorpair
51 103 0.0 1 colorpair
52 102 0.0 0.6 colorpair
53 101 0.16 1 colorpair
57 78 0.0 0.6 colorpair
58 77 0.0 0.6 colorpair
59 76 0.0 0.6 colorpair
60 75 0.0 1 colorpair
61 74 0.0 1 colorpair
62 73 0.0 0.6 colorpair
63 72 0.16 1 colorpair
64 71 0.0 0.6 colorpair
80 95 0.32 1 colorpair
81 94 0.0 0.6 colorpair
82 93 0.0 0.6 colorpair
83 92 0.16 1 colorpair
108 125 0.0 1 colorpair
109 124 0.0 0.6 colorpair
110 122 0.16 1 colorpair
111 121 0.0 1 colorpair
112 120 0.0 1 colorpair
113 119 0.16 1 colorpair
114 118 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
1 39 1 gmark
2 cmark
38 cmark
3 37 1 gmark
4 cmark
35 cmark
6 33 1 gmark
7 32 1 gmark
8 31 1 gmark
9 30 1 gmark
29 cmark
11 28 1 gmark
12 27 1 gmark
47 cmark
50 cmark
52 102 1 gmark
53 cmark
57 78 1 gmark
58 77 1 gmark
59 76 1 gmark
62 73 1 gmark
63 cmark
64 71 1 gmark
80 cmark
95 cmark
81 94 1 gmark
82 93 1 gmark
83 cmark
92 cmark
109 124 1 gmark
122 cmark
119 cmark
114 118 1 gmark

% End Annotations
showpage
end
%%EOF
