%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 10 21:26:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCGUUAGGCAUCGUCUUUAUUGUUUGCCUGACGAUAGUGAUCUUUACCUUUAUUACUCGCGGCAGGCUCUGCGAGUUUUCAAUAAAGAGUGAGCAUCAGGAGGUGGCGGCUAAAUUAGCCUGCAA___________________________________________________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[174.00862122 121.31829834]
[176.10639954 106.46105957]
[161.40740967 103.47110748]
[146.70843506 100.48115540]
[132.00944519 97.49120331]
[130.85694885 112.30702972]
[122.98721313 125.50285339]
[109.65416718 134.10682678]
[93.38697052 135.95686340]
[77.51372528 130.22619629]
[67.94277191 141.77593994]
[58.45197296 153.39164734]
[49.04177475 165.07275391]
[39.63157654 176.75386047]
[30.22137642 188.43496704]
[20.81117821 200.11605835]
[11.40098095 211.79716492]
[18.71880341 225.12075806]
[20.37590408 240.23109436]
[16.11958885 254.82397461]
[6.59891510 266.67410278]
[-6.73428488 273.97436523]
[-21.84679413 275.61160278]
[-36.43406677 271.33609009]
[-48.27164459 261.79983521]
[-55.55438995 248.45704651]
[-57.17173004 233.34240723]
[-52.87703705 218.76077271]
[-43.32521820 206.93574524]
[-29.97285843 199.67056274]
[-14.85609436 198.07310486]
[-0.28012246 202.38696289]
[9.13007545 190.70587158]
[18.54027367 179.02476501]
[27.95047188 167.34365845]
[37.36067200 155.66255188]
[46.77087021 143.98146057]
[48.51731110 136.80899048]
[56.39302063 132.20498657]
[65.96397400 120.65523529]
[64.77533722 113.25002289]
[51.42439651 120.08759308]
[40.79583359 109.50299835]
[47.57799530 96.12382507]
[62.39807129 98.43960571]
[61.20943832 91.03439331]
[48.50463104 83.06018829]
[35.79982758 75.08598328]
[23.09502029 67.11178589]
[10.39021397 59.13758087]
[-2.31459188 51.16337967]
[-15.01939774 43.18917465]
[-27.72420311 35.21497345]
[-45.36976242 44.19622421]
[-64.86595917 41.56816864]
[-79.31553650 28.40647125]
[-83.68965149 9.48737240]
[-98.03050232 5.08966637]
[-112.37136078 0.69196051]
[-126.71221924 -3.70574546]
[-141.05307007 -8.10345173]
[-155.39393616 -12.50115776]
[-169.73478699 -16.89886284]
[-184.07565308 -21.29656982]
[-197.91703796 -13.66824627]
[-213.07499695 -18.14174461]
[-220.55654907 -32.06301880]
[-215.92303467 -47.17282104]
[-201.92344666 -54.50677490]
[-186.86347961 -49.71377945]
[-179.67794800 -35.63742828]
[-165.33708191 -31.23972130]
[-150.99623108 -26.84201431]
[-136.65536499 -22.44430923]
[-122.31451416 -18.04660225]
[-107.97365570 -13.64889622]
[-93.63279724 -9.25119019]
[-79.29193878 -4.85348463]
[-78.54346466 -6.06774521]
[-77.74242401 -7.24799013]
[-87.62935638 -18.52843857]
[-97.51629639 -29.80888748]
[-107.40322876 -41.08933640]
[-122.84275055 -39.53990173]
[-136.22732544 -47.39056778]
[-142.41029358 -61.62258911]
[-139.01419067 -76.76346588]
[-127.34489441 -86.99121857]
[-111.88946533 -88.37306976]
[-98.59085083 -80.37767029]
[-92.56262970 -66.07941437]
[-96.12277985 -50.97626877]
[-86.23584747 -39.69582367]
[-76.34890747 -28.41537285]
[-66.46197510 -17.13492584]
[-54.13696671 -20.92480278]
[-41.25111771 -19.62840271]
[-29.82904434 -13.40544796]
[-21.68242645 -3.19315338]
[-18.12267876 9.43468761]
[-19.75000191 22.51016808]
[-7.04519510 30.48436928]
[5.65961075 38.45857239]
[18.36441612 46.43277359]
[31.06922340 54.40697861]
[43.77402878 62.38117981]
[56.47883606 70.35538483]
[69.18363953 78.32958221]
[89.52552795 66.71909332]
[110.95198059 69.81800842]
[111.98912811 54.85390854]
[113.02626801 39.88980865]
[114.06341553 24.92570496]
[104.65776062 11.92904282]
[109.09328461 -3.48866487]
[123.96742249 -9.50027084]
[137.87002563 -1.49418545]
[140.13618469 14.38800716]
[129.02751160 25.96284866]
[127.99037170 40.92694855]
[126.95322418 55.89105225]
[125.91608429 70.85515594]
[134.99938965 82.79221344]
[149.69837952 85.78217316]
[164.39736938 88.77212524]
[179.09635925 91.76207733]
[182.96940613 77.26595306]
[187.71066284 63.03012848]
[193.30279541 49.10654831]
[199.72541809 35.54601669]
[206.95509338 22.39801216]
[214.96543884 9.71051502]
[223.72721863 -2.47017980]
[233.20846558 -14.09962749]
[243.37458801 -25.13539124]
[254.18849182 -35.53720474]
[265.61071777 -45.26711273]
[277.59957886 -54.28960800]
[290.11132812 -62.57177353]
[303.10031128 -70.08338165]
[316.51913452 -76.79702759]
[330.31884766 -82.68821716]
[344.44909668 -87.73545074]
[358.85827637 -91.92031097]
[373.49386597 -95.22752380]
[388.30245972 -97.64502716]
[403.22998047 -99.16399384]
[418.22198486 -99.77889252]
[433.22375488 -99.48746490]
[448.18054199 -98.29078674]
[463.03781128 -96.19322205]
[477.74133301 -93.20241547]
[492.23742676 -89.32929230]
[506.47323608 -84.58797455]
[520.39678955 -78.99577332]
[533.95727539 -72.57308197]
[547.10528564 -65.34335327]
[559.79272461 -57.33295059]
[571.97338867 -48.57111359]
[583.60278320 -39.08980942]
[594.63848877 -28.92363548]
[605.04028320 -18.10968781]
[614.77014160 -6.68742466]
[623.79254150 5.30147457]
[632.07464600 17.81326294]
[639.58624268 30.80228806]
[646.29980469 44.22115326]
[652.19091797 58.02089310]
[657.23809814 72.15115356]
[661.42291260 86.56037140]
[664.73004150 101.19597626]
[667.14746094 116.00456238]
[668.66638184 130.93209839]
[669.28118896 145.92408752]
[668.98968506 160.92587280]
[667.79296875 175.88267517]
[665.69531250 190.73992920]
[662.70446777 205.44342041]
[658.83123779 219.93951416]
[654.08984375 234.17529297]
[648.49761963 248.09881592]
[642.07482910 261.65930176]
[634.84503174 274.80722046]
[626.83459473 287.49465942]
[618.07269287 299.67526245]
[608.59136963 311.30462646]
[598.42510986 322.34030151]
[587.61114502 332.74200439]
[576.18884277 342.47180176]
[564.19989014 351.49420166]
[551.68804932 359.77624512]
[538.69897461 367.28771973]
[525.28009033 374.00125122]
[511.48031616 379.89230347]
[497.35003662 384.93942261]
[482.94079590 389.12414551]
[468.30517578 392.43121338]
[453.49658203 394.84857178]
[438.56906128 396.36743164]
[423.57705688 396.98217773]
[408.57528687 396.69061279]
[393.61846924 395.49380493]
[378.76123047 393.39608765]
[364.05773926 390.40515137]
[349.56167603 386.53189087]
[335.32592773 381.79043579]
[321.40240479 376.19812012]
[307.84197998 369.77529907]
[294.69406128 362.54544067]
[282.00668335 354.53491211]
[269.82611084 345.77297974]
[258.19680786 336.29156494]
[247.16116333 326.12527466]
[236.75950623 315.31124878]
[227.02975464 303.88888550]
[218.00743103 291.89990234]
[209.72543335 279.38803101]
[202.21400452 266.39895630]
[195.50054932 252.98001099]
[189.60955811 239.18022156]
[184.56251526 225.04991150]
[180.37785339 210.64065552]
[177.07084656 196.00502014]
[174.65354919 181.19641113]
[173.13479614 166.26887512]
[172.52011108 151.27685547]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 126]
[3 125]
[4 124]
[5 123]
[10 40]
[11 39]
[12 37]
[13 36]
[14 35]
[15 34]
[16 33]
[17 32]
[46 108]
[47 107]
[48 106]
[49 105]
[50 104]
[51 103]
[52 102]
[53 101]
[57 78]
[58 77]
[59 76]
[60 75]
[61 74]
[62 73]
[63 72]
[64 71]
[80 95]
[81 94]
[82 93]
[83 92]
[110 122]
[111 121]
[112 120]
[113 119]
] def

init

% Start Annotations
2 126 0.16 1 colorpair
3 125 0.0 0.2 colorpair
4 124 0.16 1 colorpair
5 123 0.0 1 colorpair
10 40 0.16 1 colorpair
11 39 0.16 1 colorpair
12 37 0.0 0.2 colorpair
13 36 0.16 1 colorpair
14 35 0.0 0.2 colorpair
15 34 0.0 1 colorpair
16 33 0.0 1 colorpair
17 32 0.0 0.2 colorpair
46 108 0.0 1 colorpair
47 107 0.16 1 colorpair
48 106 0.0 1 colorpair
49 105 0.0 1 colorpair
50 104 0.16 1 colorpair
51 103 0.0 1 colorpair
52 102 0.0 0.2 colorpair
53 101 0.16 1 colorpair
57 78 0.0 0.2 colorpair
58 77 0.0 0.2 colorpair
59 76 0.0 0.2 colorpair
60 75 0.0 1 colorpair
61 74 0.0 1 colorpair
62 73 0.0 0.2 colorpair
63 72 0.16 1 colorpair
64 71 0.0 0.2 colorpair
80 95 0.32 1 colorpair
81 94 0.0 0.2 colorpair
82 93 0.0 0.2 colorpair
83 92 0.16 1 colorpair
110 122 0.16 1 colorpair
111 121 0.0 1 colorpair
112 120 0.0 1 colorpair
113 119 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
2 cmark
126 cmark
3 125 2 gmark
4 cmark
124 cmark
40 cmark
11 cmark
39 cmark
12 37 2 gmark
13 cmark
36 cmark
14 35 2 gmark
17 32 2 gmark
47 cmark
50 cmark
52 102 2 gmark
53 cmark
57 78 2 gmark
58 77 2 gmark
59 76 2 gmark
62 73 2 gmark
63 cmark
64 71 2 gmark
80 cmark
95 cmark
81 94 2 gmark
82 93 2 gmark
83 cmark
92 cmark
122 cmark
119 cmark

% End Annotations
showpage
end
%%EOF
