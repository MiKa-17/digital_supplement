%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Dec 18 00:09:07 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAGAGGCUA_ACCUGAUG_U_UGU_U_U_A_GCA_U_AG__AG___G___U_G_GCCUCG_________G___GU___UAA_U___GA___________________________A________AAUUAA_C______C____GGGGCUUUUCUCU_______UUCUGCCU_CU_CAA____C____________________________________________________________AUGCC____\
_________UGAGGCAGAA_AGCCUCAAGCACCCGC______________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50264740 92.19100952]
[62.51484680 91.57315063]
[47.54295349 90.64668274]
[32.59331894 89.41200256]
[17.67229271 87.86964417]
[2.78620172 86.02024078]
[-12.05863476 83.86459351]
[-26.85591698 81.40361786]
[-41.59936523 78.63835144]
[-56.28272247 75.56996155]
[-70.89975739 72.19976807]
[-85.44426727 68.52918243]
[-99.91007996 64.55977631]
[-114.29106140 60.29322815]
[-128.58110046 55.73134613]
[-142.77413940 50.87607193]
[-156.86415100 45.72946548]
[-170.84515381 40.29370499]
[-184.71121216 34.57110214]
[-198.45645142 28.56408501]
[-212.07504272 22.27520180]
[-225.56120300 15.70712185]
[-238.90919495 8.86263275]
[-252.11335754 1.74463761]
[-265.16809082 -5.64384174]
[-278.06787109 -13.29966927]
[-290.80722046 -21.21959686]
[-303.38070679 -29.40026474]
[-315.78302002 -37.83819962]
[-328.00888062 -46.52981949]
[-340.05310059 -55.47143936]
[-351.91058350 -64.65926361]
[-363.57629395 -74.08939362]
[-375.04525757 -83.75782013]
[-386.31265259 -93.66045380]
[-397.37365723 -103.79307556]
[-408.22360229 -114.15140533]
[-418.85784912 -124.73102570]
[-429.27191162 -135.52746582]
[-439.46139526 -146.53613281]
[-449.42190552 -157.75236511]
[-459.14929199 -169.17138672]
[-468.63937378 -180.78836060]
[-477.88815308 -192.59837341]
[-486.89169312 -204.59637451]
[-495.64617920 -216.77731323]
[-504.14788818 -229.13598633]
[-512.39318848 -241.66717529]
[-520.37866211 -254.36555481]
[-528.10083008 -267.22573853]
[-535.55639648 -280.24224854]
[-542.74230957 -293.40957642]
[-549.65545654 -306.72213745]
[-556.29296875 -320.17428589]
[-562.65191650 -333.76028442]
[-568.72961426 -347.47442627]
[-574.52355957 -361.31082153]
[-580.03125000 -375.26364136]
[-585.25036621 -389.32696533]
[-590.17871094 -403.49481201]
[-594.81408691 -417.76113892]
[-599.15466309 -432.11996460]
[-603.19854736 -446.56515503]
[-606.94396973 -461.09054565]
[-610.38940430 -475.69003296]
[-613.53338623 -490.35739136]
[-616.37457275 -505.08639526]
[-618.91174316 -519.87078857]
[-621.14379883 -534.70434570]
[-623.06988525 -549.58068848]
[-624.68908691 -564.49359131]
[-626.00073242 -579.43670654]
[-627.00427246 -594.40362549]
[-627.69934082 -609.38800049]
[-628.08557129 -624.38360596]
[-628.16284180 -639.38391113]
[-627.93109131 -654.38262939]
[-627.39044189 -669.37341309]
[-626.54107666 -684.34991455]
[-625.38342285 -699.30572510]
[-623.91790771 -714.23449707]
[-622.14520264 -729.12988281]
[-620.06604004 -743.98565674]
[-617.68127441 -758.79541016]
[-614.99194336 -773.55291748]
[-611.99926758 -788.25183105]
[-608.70434570 -802.88604736]
[-605.10876465 -817.44927979]
[-601.21386719 -831.93536377]
[-597.02142334 -846.33807373]
[-592.53320312 -860.65142822]
[-587.75109863 -874.86926270]
[-582.67712402 -888.98559570]
[-577.31341553 -902.99444580]
[-571.66235352 -916.88977051]
[-565.72619629 -930.66577148]
[-559.50750732 -944.31658936]
[-553.00897217 -957.83636475]
[-546.23333740 -971.21942139]
[-539.18341064 -984.46008301]
[-531.86224365 -997.55273438]
[-524.27294922 -1010.49176025]
[-516.41876221 -1023.27172852]
[-508.30294800 -1035.88720703]
[-499.92898560 -1048.33276367]
[-491.30044556 -1060.60327148]
[-482.42098999 -1072.69335938]
[-473.29434204 -1084.59802246]
[-463.92440796 -1096.31213379]
[-454.31518555 -1107.83068848]
[-444.47070312 -1119.14892578]
[-434.39517212 -1130.26196289]
[-424.09286499 -1141.16516113]
[-413.56814575 -1151.85375977]
[-402.82550049 -1162.32324219]
[-391.86944580 -1172.56921387]
[-380.70465088 -1182.58740234]
[-369.33587646 -1192.37353516]
[-357.76794434 -1201.92321777]
[-346.00570679 -1211.23278809]
[-334.05422974 -1220.29797363]
[-321.91854858 -1229.11499023]
[-309.60382080 -1237.68029785]
[-297.11526489 -1245.98999023]
[-284.45816040 -1254.04077148]
[-271.63793945 -1261.82910156]
[-258.66000366 -1269.35156250]
[-245.52984619 -1276.60522461]
[-232.25305176 -1283.58691406]
[-218.83528137 -1290.29345703]
[-205.28218079 -1296.72229004]
[-191.59954834 -1302.87060547]
[-177.79316711 -1308.73571777]
[-163.86889648 -1314.31518555]
[-149.83264160 -1319.60668945]
[-135.69036865 -1324.60791016]
[-121.44808197 -1329.31677246]
[-107.11180878 -1333.73120117]
[-92.68765259 -1337.84936523]
[-78.18172455 -1341.66955566]
[-63.60017776 -1345.19018555]
[-48.94920349 -1348.40966797]
[-34.23502350 -1351.32666016]
[-19.46387482 -1353.93994141]
[-4.64203072 -1356.24829102]
[10.22422028 -1358.25097656]
[25.12857056 -1359.94689941]
[40.06469345 -1361.33557129]
[55.02624893 -1362.41613770]
[70.00688934 -1363.18835449]
[85.00026703 -1363.65185547]
[100.00000000 -1363.80639648]
[114.99973297 -1363.65185547]
[129.99310303 -1363.18835449]
[144.97375488 -1362.41613770]
[159.93530273 -1361.33557129]
[174.87142944 -1359.94689941]
[189.77577209 -1358.25097656]
[204.64202881 -1356.24829102]
[219.46388245 -1353.93994141]
[234.23501587 -1351.32666016]
[248.94920349 -1348.40966797]
[263.60018921 -1345.19018555]
[278.18173218 -1341.66955566]
[292.68765259 -1337.84936523]
[307.11181641 -1333.73120117]
[321.44808960 -1329.31677246]
[335.69036865 -1324.60791016]
[349.83264160 -1319.60668945]
[363.86889648 -1314.31518555]
[377.79315186 -1308.73571777]
[391.59954834 -1302.87060547]
[405.28219604 -1296.72229004]
[418.83526611 -1290.29345703]
[432.25305176 -1283.58691406]
[445.52984619 -1276.60522461]
[458.66000366 -1269.35156250]
[471.63793945 -1261.82910156]
[484.45816040 -1254.04077148]
[497.11526489 -1245.98999023]
[509.60382080 -1237.68029785]
[521.91851807 -1229.11499023]
[534.05426025 -1220.29797363]
[546.00573730 -1211.23278809]
[557.76794434 -1201.92321777]
[569.33587646 -1192.37353516]
[580.70465088 -1182.58740234]
[591.86944580 -1172.56921387]
[602.82550049 -1162.32324219]
[613.56817627 -1151.85375977]
[624.09289551 -1141.16516113]
[634.39520264 -1130.26196289]
[644.47070312 -1119.14892578]
[654.31518555 -1107.83068848]
[663.92443848 -1096.31213379]
[673.29437256 -1084.59802246]
[682.42095947 -1072.69335938]
[691.30047607 -1060.60327148]
[699.92901611 -1048.33276367]
[708.30297852 -1035.88720703]
[716.41876221 -1023.27172852]
[724.27294922 -1010.49176025]
[731.86224365 -997.55273438]
[739.18341064 -984.46008301]
[746.23333740 -971.21942139]
[753.00897217 -957.83636475]
[759.50750732 -944.31658936]
[765.72619629 -930.66577148]
[771.66235352 -916.88977051]
[777.31341553 -902.99444580]
[782.67712402 -888.98559570]
[787.75109863 -874.86926270]
[792.53320312 -860.65142822]
[797.02142334 -846.33807373]
[801.21386719 -831.93536377]
[805.10876465 -817.44927979]
[808.70434570 -802.88604736]
[811.99926758 -788.25183105]
[814.99194336 -773.55291748]
[817.68127441 -758.79541016]
[820.06604004 -743.98565674]
[822.14520264 -729.12988281]
[823.91790771 -714.23449707]
[825.38342285 -699.30572510]
[826.54107666 -684.34991455]
[827.39044189 -669.37341309]
[827.93109131 -654.38262939]
[828.16284180 -639.38391113]
[828.08557129 -624.38360596]
[827.69934082 -609.38800049]
[827.00427246 -594.40362549]
[826.00073242 -579.43670654]
[824.68908691 -564.49359131]
[823.06988525 -549.58068848]
[821.14379883 -534.70434570]
[818.91174316 -519.87078857]
[816.37457275 -505.08639526]
[813.53338623 -490.35739136]
[810.38940430 -475.69003296]
[806.94396973 -461.09054565]
[803.19854736 -446.56515503]
[799.15466309 -432.11996460]
[794.81408691 -417.76113892]
[790.17871094 -403.49481201]
[785.25036621 -389.32696533]
[780.03125000 -375.26364136]
[774.52355957 -361.31082153]
[768.72961426 -347.47442627]
[762.65191650 -333.76028442]
[756.29296875 -320.17428589]
[749.65545654 -306.72213745]
[742.74230957 -293.40957642]
[735.55639648 -280.24224854]
[728.10083008 -267.22573853]
[720.37866211 -254.36555481]
[712.39318848 -241.66717529]
[704.14788818 -229.13598633]
[695.64617920 -216.77731323]
[686.89172363 -204.59637451]
[677.88818359 -192.59837341]
[668.63940430 -180.78836060]
[659.14929199 -169.17138672]
[649.42193604 -157.75236511]
[639.46136475 -146.53613281]
[629.27191162 -135.52746582]
[618.85784912 -124.73102570]
[608.22357178 -114.15140533]
[597.37365723 -103.79307556]
[586.31262207 -93.66045380]
[575.04528809 -83.75782013]
[563.57629395 -74.08939362]
[551.91058350 -64.65926361]
[540.05310059 -55.47143936]
[528.00885010 -46.52981949]
[515.78302002 -37.83819962]
[503.38070679 -29.40026474]
[490.80722046 -21.21959686]
[478.06787109 -13.29966927]
[465.16809082 -5.64384174]
[452.11337280 1.74463761]
[438.90917969 8.86263275]
[425.56118774 15.70712185]
[412.07504272 22.27520180]
[398.45645142 28.56408501]
[384.71121216 34.57110214]
[370.84515381 40.29370499]
[356.86413574 45.72946548]
[342.77413940 50.87607193]
[328.58108521 55.73134613]
[314.29104614 60.29322815]
[299.91009521 64.55977631]
[285.44427490 68.52918243]
[270.89974976 72.19976807]
[256.28271484 75.56996155]
[241.59936523 78.63835144]
[226.85591125 81.40361786]
[212.05863953 83.86459351]
[197.21379089 86.02024078]
[182.32771301 87.86964417]
[167.40667725 89.41200256]
[152.45704651 90.64668274]
[137.48515320 91.57315063]
[122.49735260 92.19100952]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
