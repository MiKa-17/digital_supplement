%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Dec 18 00:10:23 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______________________________________________________________________________________________________________________________________A_______AUGCC___G__CA_AAAAUAUGUGCUUG_UGGCAGUGAUAGUGAUGUGUUUCACGGUUCUGGUAUUCACGCUGCUGAUCCGAG_AAUCGCUGUGUGAGUUGCGUAUCAGAGAC\
___GGUAAUAUGGAGGUUGC_GGCUUUUCUGGCUUACGAAUCGAA___G_AA____________________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50219727 92.21867371]
[62.51231003 91.65612030]
[47.53560638 90.81253815]
[32.57736206 89.68821716]
[17.64283180 88.28355408]
[2.73727274 86.59905243]
[-12.13407135 84.63529205]
[-26.96597099 82.39297485]
[-41.75320816 79.87287903]
[-56.49058151 77.07590485]
[-71.17290497 74.00302124]
[-85.79501343 70.65531921]
[-100.35176849 67.03396606]
[-114.83804321 63.14025116]
[-129.24874878 58.97553253]
[-143.57881165 54.54127884]
[-157.82318115 49.83904648]
[-171.97686768 44.87049484]
[-186.03486633 39.63737106]
[-199.99226379 34.14151001]
[-213.84413147 28.38485146]
[-227.58558655 22.36941910]
[-241.21182251 16.09732628]
[-254.71801758 9.57078266]
[-268.09942627 2.79208159]
[-281.35137939 -4.23639107]
[-294.46917725 -11.51216412]
[-307.44818115 -19.03267670]
[-320.28387451 -26.79528427]
[-332.97174072 -34.79725647]
[-345.50729370 -43.03577423]
[-357.88613892 -51.50794601]
[-370.10388184 -60.21079254]
[-382.15628052 -69.14124298]
[-394.03906250 -78.29616547]
[-405.74807739 -87.67233276]
[-417.27917480 -97.26644897]
[-428.62829590 -107.07514191]
[-439.79147339 -117.09495544]
[-450.76477051 -127.32237244]
[-461.54434204 -137.75378418]
[-472.12634277 -148.38554382]
[-482.50711060 -159.21388245]
[-492.68295288 -170.23501587]
[-502.65032959 -181.44503784]
[-512.40570068 -192.84004211]
[-521.94567871 -204.41598511]
[-531.26684570 -216.16882324]
[-540.36590576 -228.09440613]
[-549.23974609 -240.18853760]
[-557.88525391 -252.44696045]
[-566.29925537 -264.86538696]
[-574.47894287 -277.43942261]
[-582.42132568 -290.16467285]
[-590.12365723 -303.03662109]
[-597.58325195 -316.05075073]
[-604.79742432 -329.20251465]
[-611.76373291 -342.48724365]
[-618.47961426 -355.90029907]
[-624.94274902 -369.43695068]
[-631.15087891 -383.09243774]
[-637.10180664 -396.86196899]
[-642.79345703 -410.74066162]
[-648.22381592 -424.72366333]
[-653.39099121 -438.80606079]
[-658.29315186 -452.98287964]
[-662.92852783 -467.24914551]
[-667.29553223 -481.59985352]
[-671.39263916 -496.02990723]
[-675.21838379 -510.53427124]
[-678.77148438 -525.10784912]
[-682.05059814 -539.74548340]
[-685.05456543 -554.44207764]
[-687.78240967 -569.19238281]
[-690.23315430 -583.99127197]
[-692.40594482 -598.83355713]
[-694.29992676 -613.71392822]
[-695.91455078 -628.62719727]
[-697.24914551 -643.56817627]
[-698.30334473 -658.53149414]
[-699.07672119 -673.51202393]
[-699.56896973 -688.50439453]
[-699.77996826 -703.50335693]
[-699.70965576 -718.50360107]
[-699.35797119 -733.49993896]
[-698.72515869 -748.48699951]
[-697.81134033 -763.45959473]
[-696.61688232 -778.41241455]
[-695.14221191 -793.34014893]
[-693.38781738 -808.23767090]
[-691.35437012 -823.09967041]
[-689.04254150 -837.92089844]
[-686.45312500 -852.69610596]
[-683.58709717 -867.42022705]
[-680.44537354 -882.08795166]
[-677.02917480 -896.69421387]
[-673.33959961 -911.23382568]
[-669.37799072 -925.70172119]
[-665.14575195 -940.09271240]
[-660.64434814 -954.40179443]
[-655.87536621 -968.62402344]
[-650.84051514 -982.75421143]
[-645.54150391 -996.78753662]
[-639.98028564 -1010.71899414]
[-634.15869141 -1024.54370117]
[-628.07891846 -1038.25683594]
[-621.74298096 -1051.85351562]
[-615.15319824 -1065.32897949]
[-608.31182861 -1078.67846680]
[-601.22131348 -1091.89721680]
[-593.88409424 -1104.98083496]
[-586.30279541 -1117.92443848]
[-578.48010254 -1130.72351074]
[-570.41870117 -1143.37377930]
[-562.12152100 -1155.87060547]
[-553.59136963 -1168.20947266]
[-544.83135986 -1180.38635254]
[-535.84448242 -1192.39672852]
[-526.63391113 -1204.23645020]
[-517.20294189 -1215.90136719]
[-507.55487061 -1227.38732910]
[-497.69308472 -1238.69030762]
[-487.62103271 -1249.80639648]
[-477.34225464 -1260.73168945]
[-466.86041260 -1271.46215820]
[-456.17916870 -1281.99426270]
[-445.30227661 -1292.32409668]
[-434.23355103 -1302.44812012]
[-422.97689819 -1312.36279297]
[-411.53628540 -1322.06469727]
[-399.91574097 -1331.55029297]
[-388.11932373 -1340.81616211]
[-376.15121460 -1349.85925293]
[-364.01559448 -1358.67626953]
[-351.71676636 -1367.26416016]
[-339.25903320 -1375.61987305]
[-326.64675903 -1383.74047852]
[-313.88442993 -1391.62316895]
[-300.97650146 -1399.26513672]
[-287.92752075 -1406.66357422]
[-274.74209595 -1413.81604004]
[-261.42480469 -1420.71984863]
[-247.98042297 -1427.37280273]
[-234.41360474 -1433.77246094]
[-220.72917175 -1439.91638184]
[-206.93190002 -1445.80273438]
[-193.02665710 -1451.42932129]
[-179.01834106 -1456.79394531]
[-164.91188049 -1461.89501953]
[-150.71223450 -1466.73071289]
[-136.42437744 -1471.29907227]
[-122.05336761 -1475.59875488]
[-107.60424805 -1479.62817383]
[-93.08209229 -1483.38586426]
[-78.49201965 -1486.87060547]
[-63.83916092 -1490.08105469]
[-49.12866592 -1493.01611328]
[-34.36571503 -1495.67468262]
[-19.55549622 -1498.05603027]
[-4.70322227 -1500.15917969]
[10.18588352 -1501.98339844]
[25.10658264 -1503.52807617]
[40.05362701 -1504.79260254]
[55.02175903 -1505.77661133]
[70.00571442 -1506.47973633]
[85.00022125 -1506.90173340]
[100.00000000 -1507.04235840]
[114.99977875 -1506.90173340]
[129.99429321 -1506.47973633]
[144.97824097 -1505.77661133]
[159.94636536 -1504.79260254]
[174.89341736 -1503.52807617]
[189.81411743 -1501.98339844]
[204.70321655 -1500.15917969]
[219.55549622 -1498.05603027]
[234.36570740 -1495.67468262]
[249.12866211 -1493.01611328]
[263.83917236 -1490.08105469]
[278.49203491 -1486.87060547]
[293.08209229 -1483.38586426]
[307.60424805 -1479.62817383]
[322.05337524 -1475.59875488]
[336.42437744 -1471.29907227]
[350.71221924 -1466.73071289]
[364.91186523 -1461.89501953]
[379.01834106 -1456.79394531]
[393.02667236 -1451.42932129]
[406.93188477 -1445.80273438]
[420.72915649 -1439.91638184]
[434.41360474 -1433.77246094]
[447.98040771 -1427.37280273]
[461.42480469 -1420.71984863]
[474.74209595 -1413.81604004]
[487.92752075 -1406.66357422]
[500.97650146 -1399.26513672]
[513.88439941 -1391.62316895]
[526.64678955 -1383.74047852]
[539.25903320 -1375.61987305]
[551.71673584 -1367.26416016]
[564.01556396 -1358.67626953]
[576.15118408 -1349.85925293]
[588.11932373 -1340.81616211]
[599.91571045 -1331.55029297]
[611.53631592 -1322.06469727]
[622.97692871 -1312.36279297]
[634.23352051 -1302.44812012]
[645.30224609 -1292.32409668]
[656.17913818 -1281.99426270]
[666.86041260 -1271.46215820]
[677.34228516 -1260.73168945]
[687.62103271 -1249.80639648]
[697.69305420 -1238.69030762]
[707.55487061 -1227.38732910]
[717.20294189 -1215.90136719]
[726.63391113 -1204.23645020]
[735.84448242 -1192.39672852]
[744.83135986 -1180.38635254]
[753.59136963 -1168.20947266]
[762.12152100 -1155.87060547]
[770.41870117 -1143.37377930]
[778.48010254 -1130.72351074]
[786.30279541 -1117.92443848]
[793.88409424 -1104.98083496]
[801.22131348 -1091.89721680]
[808.31182861 -1078.67846680]
[815.15319824 -1065.32897949]
[821.74298096 -1051.85351562]
[828.07891846 -1038.25683594]
[834.15869141 -1024.54370117]
[839.98028564 -1010.71899414]
[845.54150391 -996.78753662]
[850.84051514 -982.75421143]
[855.87536621 -968.62402344]
[860.64434814 -954.40179443]
[865.14575195 -940.09271240]
[869.37799072 -925.70172119]
[873.33959961 -911.23382568]
[877.02917480 -896.69421387]
[880.44537354 -882.08795166]
[883.58709717 -867.42022705]
[886.45312500 -852.69610596]
[889.04254150 -837.92089844]
[891.35437012 -823.09967041]
[893.38781738 -808.23767090]
[895.14221191 -793.34014893]
[896.61688232 -778.41241455]
[897.81134033 -763.45959473]
[898.72515869 -748.48699951]
[899.35797119 -733.49993896]
[899.70965576 -718.50360107]
[899.77996826 -703.50335693]
[899.56896973 -688.50439453]
[899.07672119 -673.51202393]
[898.30334473 -658.53149414]
[897.24914551 -643.56817627]
[895.91455078 -628.62719727]
[894.29992676 -613.71392822]
[892.40594482 -598.83355713]
[890.23315430 -583.99127197]
[887.78240967 -569.19238281]
[885.05456543 -554.44207764]
[882.05059814 -539.74548340]
[878.77148438 -525.10784912]
[875.21838379 -510.53427124]
[871.39263916 -496.02990723]
[867.29553223 -481.59985352]
[862.92852783 -467.24914551]
[858.29315186 -452.98287964]
[853.39099121 -438.80606079]
[848.22381592 -424.72366333]
[842.79345703 -410.74066162]
[837.10180664 -396.86196899]
[831.15087891 -383.09243774]
[824.94274902 -369.43695068]
[818.47961426 -355.90029907]
[811.76373291 -342.48724365]
[804.79742432 -329.20251465]
[797.58325195 -316.05075073]
[790.12365723 -303.03662109]
[782.42132568 -290.16467285]
[774.47894287 -277.43942261]
[766.29925537 -264.86538696]
[757.88525391 -252.44696045]
[749.23974609 -240.18853760]
[740.36590576 -228.09440613]
[731.26684570 -216.16882324]
[721.94567871 -204.41598511]
[712.40570068 -192.84004211]
[702.65032959 -181.44503784]
[692.68298340 -170.23501587]
[682.50708008 -159.21388245]
[672.12634277 -148.38554382]
[661.54431152 -137.75378418]
[650.76477051 -127.32237244]
[639.79150391 -117.09495544]
[628.62829590 -107.07514191]
[617.27917480 -97.26644897]
[605.74810791 -87.67233276]
[594.03906250 -78.29616547]
[582.15631104 -69.14124298]
[570.10388184 -60.21079254]
[557.88610840 -51.50794601]
[545.50732422 -43.03577423]
[532.97174072 -34.79725647]
[520.28387451 -26.79528427]
[507.44818115 -19.03267670]
[494.46917725 -11.51216412]
[481.35137939 -4.23639107]
[468.09942627 2.79208159]
[454.71801758 9.57078266]
[441.21182251 16.09732628]
[427.58560181 22.36941910]
[413.84411621 28.38485146]
[399.99227905 34.14151001]
[386.03488159 39.63737106]
[371.97686768 44.87049484]
[357.82318115 49.83904648]
[343.57879639 54.54127884]
[329.24874878 58.97553253]
[314.83804321 63.14025116]
[300.35177612 67.03396606]
[285.79501343 70.65531921]
[271.17291260 74.00302124]
[256.49057007 77.07590485]
[241.75320435 79.87287903]
[226.96597290 82.39297485]
[212.13407898 84.63529205]
[197.26272583 86.59905243]
[182.35716248 88.28355408]
[167.42263794 89.68821716]
[152.46438599 90.81253815]
[137.48768616 91.65612030]
[122.49780273 92.21867371]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
