%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 11:56:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAGAGGCCAUACUGAUGUUGACUAGACAUA_CAG_GGGCCUCGUG__GGUUAAU___GAAAA___AUUAACUACGGGGCUUUCUUCC_______UUCUGCCACACAAC_ACGGUAACAAACCAC________CUUCACGUCAUGAGGCAGAAAGCCUCAAGCGCCGGGCACAUCAUA\
) } def
/len { sequence length } bind def

/coor [
[-132.61352539 361.70663452]
[-147.97319031 356.46200562]
[-162.64849854 349.53137207]
[-176.45507812 341.00201416]
[-189.21946716 330.98132324]
[-200.78135681 319.59539795]
[-212.39198303 329.09240723]
[-224.00260925 338.58941650]
[-235.61323547 348.08645630]
[-247.22386169 357.58346558]
[-241.04844666 372.03381348]
[-239.18833923 387.62332153]
[-241.78561401 403.09234619]
[-248.62251282 417.19338989]
[-259.13970947 428.79147339]
[-272.48205566 436.95574951]
[-287.56805420 441.03399658]
[-303.17761230 440.70486450]
[-318.05062866 436.00305176]
[-330.98876953 427.31594849]
[-342.43280029 437.01303101]
[-342.17648315 452.64852905]
[-352.07052612 464.75811768]
[-367.44323730 467.62402344]
[-381.03613281 459.89309692]
[-386.43103027 445.21557617]
[-381.08062744 430.52178955]
[-367.51123047 422.74969482]
[-352.12991333 425.56900024]
[-340.68585205 415.87188721]
[-346.76745605 402.87805176]
[-349.27319336 388.73962402]
[-348.02542114 374.42297363]
[-343.10324097 360.90838623]
[-334.83758545 349.12277222]
[-323.78890991 339.87628174]
[-310.70919800 333.80642700]
[-296.49087524 331.33435059]
[-282.10583496 332.63537598]
[-268.53897095 337.62673950]
[-256.72088623 345.97283936]
[-245.11026001 336.47583008]
[-233.49963379 326.97879028]
[-221.88900757 317.48178101]
[-210.27838135 307.98477173]
[-217.94256592 296.44613647]
[-224.46887207 284.22720337]
[-229.79743958 271.43981934]
[-233.87934875 258.20108032]
[-236.67712402 244.63221741]
[-238.16502380 230.85746765]
[-238.32929993 217.00300598]
[-237.16835022 203.19572449]
[-234.69271851 189.56210327]
[-230.92494202 176.22705078]
[-225.89945984 163.31271362]
[-219.66218567 150.93742371]
[-212.27014160 139.21461487]
[-203.79096985 128.25167847]
[-194.30223083 118.14910126]
[-183.89077759 108.99951172]
[-172.65187073 100.88677979]
[-160.68841553 93.88530731]
[-148.10993958 88.05931091]
[-135.03158569 83.46225739]
[-121.57313538 80.13636017]
[-107.85781860 78.11217499]
[-94.01124573 77.40834808]
[-80.16024017 78.03144836]
[-66.43167877 79.97586060]
[-52.95132065 83.22389221]
[-39.84266663 87.74589539]
[-27.22581291 93.50054932]
[-15.21637440 100.43524933]
[-3.92440295 108.48655701]
[6.54661083 117.58082581]
[16.10068703 127.63483429]
[24.65023613 138.55657959]
[37.32630157 130.53675842]
[50.00236893 122.51695251]
[62.67843628 114.49714661]
[75.35450745 106.47734070]
[88.03057098 98.45753479]
[73.03107452 98.57991791]
[59.09319305 93.03594971]
[48.27568817 82.64453125]
[42.17640305 68.94056702]
[41.69625473 53.94824982]
[46.90616989 39.88209152]
[57.03659058 28.81978989]
[70.59116364 22.39534569]
[85.56775665 21.55770874]
[99.75419617 26.43060684]
[111.05500031 36.29426575]
[117.80094147 49.69173813]
[118.99559784 64.64408875]
[114.46248627 78.94272614]
[104.87081146 90.47592163]
[119.10413361 85.74172974]
[133.33746338 81.00754547]
[147.57078552 76.27336121]
[161.80410767 71.53916931]
[176.03742981 66.80498505]
[190.27075195 62.07080078]
[200.92358398 50.37345886]
[215.44232178 53.69840622]
[229.67564392 48.96422195]
[236.80128479 35.11275482]
[251.30332947 30.51437569]
[264.46469116 37.39294052]
[278.69799805 32.65875626]
[276.82089233 17.72682190]
[277.89318848 2.71561408]
[281.87374878 -11.79787636]
[288.60952759 -25.25579071]
[297.84164429 -37.14084244]
[309.21520996 -46.99620056]
[322.29309082 -54.44305038]
[336.57257080 -59.19515991]
[351.50482178 -61.06986618]
[366.51583862 -59.99510956]
[381.02868652 -56.01220703]
[394.48550415 -49.27424240]
[406.36907959 -40.04021072]
[416.22259521 -28.66504478]
[423.66732788 -15.58597183]
[428.41711426 -1.30571723]
[430.28939819 13.62682343]
[429.21221924 28.63768196]
[425.22695923 43.14988327]
[418.48681641 56.60561752]
[409.25088501 68.48767853]
[397.87411499 78.33935547]
[384.79382324 85.78197479]
[370.51281738 90.52945709]
[355.57995605 92.39933014]
[340.56927490 91.31971741]
[326.05773926 87.33211517]
[312.60308838 80.58979034]
[300.72253418 71.35191345]
[290.87268066 59.97356033]
[283.43218994 46.89207840]
[269.19885254 51.62626266]
[262.77954102 65.01760864]
[248.41238403 70.02150726]
[234.40983582 63.19754410]
[220.17651367 67.93173218]
[210.54174805 79.29045105]
[195.00492859 76.30412292]
[180.77160645 81.03830719]
[166.53828430 85.77249146]
[152.30496216 90.50668335]
[138.07164001 95.24086761]
[123.83831787 99.97505188]
[109.60499573 104.70924377]
[96.05037689 111.13359833]
[83.37431335 119.15340424]
[70.69824219 127.17321777]
[58.02217865 135.19302368]
[45.34611130 143.21282959]
[32.67004395 151.23263550]
[39.82180023 165.82199097]
[45.29523849 181.11940002]
[49.02173233 196.93255615]
[50.95462799 213.06262207]
[51.06981659 229.30683899]
[49.36603546 245.46102905]
[45.86489105 261.32214355]
[40.61056519 276.69088745]
[33.66928864 291.37414551]
[25.12847328 305.18740845]
[15.09563255 317.95718384]
[3.69702291 329.52304077]
[-8.92394924 339.73974609]
[-22.60852814 348.47906494]
[-37.18460464 355.63125610]
[-52.46888351 361.10659790]
[-68.26918793 364.83648682]
[-84.38686371 366.77416992]
[-100.61931610 366.89550781]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 45]
[7 44]
[8 43]
[9 42]
[10 41]
[20 30]
[21 29]
[78 161]
[79 160]
[80 159]
[81 158]
[82 157]
[83 156]
[98 155]
[99 154]
[100 153]
[101 152]
[102 151]
[103 150]
[104 149]
[106 147]
[107 146]
[110 143]
[111 142]
] def

init

% Start Annotations
78 161 0.0 0.2 colorpair
79 160 0.0 1 colorpair
80 159 0.0 1 colorpair
81 158 0.0 1 colorpair
82 157 0.0 0.6 colorpair
83 156 0.0 1 colorpair
98 155 0.0 0.6 colorpair
99 154 0.0 0.6 colorpair
101 152 0.0 1 colorpair
102 151 0.0 1 colorpair
103 150 0.16 1 colorpair
104 149 0.16 1 colorpair
106 147 0.0 1 colorpair
107 146 0.0 1 colorpair
110 143 0.0 1 colorpair
111 142 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
6 45 3 gmark
7 44 3 gmark
8 43 3 gmark
9 42 3 gmark
10 41 4 gmark
20 30 3 gmark
21 29 4 gmark
29 cmark
78 161 2 gmark
82 157 1 gmark
98 155 1 gmark
99 154 1 gmark
100 153 7 gmark
100 cmark
153 cmark
103 cmark
104 cmark

% End Annotations
showpage
end
%%EOF
