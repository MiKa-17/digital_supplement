%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Mar  6 11:57:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCUUAUCUGGU_GCGUGUUGAUCGUGUGUCUCACACUGUUGAUAUUCACUUACCUGACACGAAAAUCGCUGUGCGAAAUUCGUUACAGAGACGGAUACAGGGAGGUGGCGGCUUUCAUGGCUUACGAAUC___CGGU_AAGU_AGCAACCUGGAGGCGGGCG__CAGGCCCGCCUUUUCAGG_GCUGAUGCU_GGU_CUGACU_GCACUGA_AGCGCCUUUAUAAAGGGGCUGCUGG_____\
) } def
/len { sequence length } bind def

/coor [
[105.37944031 347.04782104]
[115.52891541 335.78887939]
[128.91854858 328.68298340]
[126.81830597 313.83074951]
[124.71806335 298.97851562]
[122.52302551 284.13998413]
[120.23329163 269.31579590]
[117.94355011 254.49157715]
[115.65380859 239.66737366]
[101.66886902 230.30734253]
[98.73384094 213.39378357]
[109.14974976 199.32557678]
[106.67089081 184.53182983]
[104.19202423 169.73806763]
[99.99671173 163.67474365]
[101.77722168 154.73965454]
[99.48748779 139.91545105]
[85.37038422 134.84519958]
[74.17208862 144.82508850]
[62.97378922 154.80497742]
[51.77548981 164.78485107]
[40.57719040 174.76473999]
[29.37889290 184.74462891]
[30.77998352 200.08552551]
[22.97049522 213.15707397]
[9.12522984 219.05390930]
[-5.36404181 215.70741272]
[-16.56233978 225.68730164]
[-27.76063919 235.66719055]
[-38.95893860 245.64706421]
[-50.15723419 255.62695312]
[-57.95920563 270.67904663]
[-74.58286285 267.34881592]
[-75.98465729 250.45292664]
[-60.13711929 244.42866516]
[-48.93882370 234.44877625]
[-37.74052429 224.46888733]
[-26.54222488 214.48899841]
[-15.34392738 204.50910950]
[-17.00665855 189.73165894]
[-9.56090832 176.65400696]
[4.32001019 170.39514160]
[19.39900780 173.54632568]
[30.59730721 163.56645203]
[41.79560471 153.58656311]
[52.99390411 143.60667419]
[64.19219971 133.62678528]
[75.39050293 123.64690399]
[74.43529510 116.20797729]
[59.82325363 119.59740448]
[45.75983429 124.81469727]
[35.78888321 113.60843658]
[42.60591888 100.24700165]
[57.53055954 101.74234009]
[72.52489471 101.33013153]
[71.56969452 93.89120483]
[58.21330261 87.06428528]
[44.85691452 80.23736572]
[31.50052452 73.41044617]
[23.14963531 74.58485413]
[16.31388474 71.35305023]
[12.85968208 65.61933899]
[-1.38230121 60.91127014]
[-15.62428474 56.20320511]
[-29.86626816 51.49513626]
[-44.10825348 46.78706741]
[-53.73352432 58.52242279]
[-66.95005035 65.98485565]
[-81.97039032 68.16514587]
[-96.76318359 64.76841736]
[-109.32781982 56.25404739]
[-117.96502686 43.77354050]
[-121.50670624 29.01478195]
[-119.47386169 13.97377110]
[-112.14143372 0.68468183]
[-100.50106049 -9.05524540]
[-86.12701416 -13.92876625]
[-70.96326447 -13.27677631]
[-57.06058121 -7.18745184]
[-46.29919052 3.51567531]
[-40.13448334 17.38509560]
[-39.40018463 32.54508209]
[-25.15819931 37.25315094]
[-10.91621685 41.96121979]
[3.32576680 46.66928864]
[17.56775093 51.37735748]
[7.93875790 39.87594223]
[3.27025986 25.62093925]
[4.23013783 10.65168285]
[10.68107033 -2.89030600]
[21.70018005 -13.06769466]
[35.71105576 -18.42449379]
[50.70929337 -18.19435120]
[64.54921722 -12.41019535]
[75.25087738 -1.89951062]
[81.28327942 11.83403015]
[81.78341675 26.82568932]
[76.67974854 40.93074417]
[66.70240784 52.13130569]
[53.27875519 58.82501221]
[38.32744217 60.05405807]
[51.68383408 66.88097382]
[65.04022217 73.70789337]
[78.39661407 80.53481293]
[85.27901459 77.55445099]
[76.83068085 65.15986633]
[68.38233948 52.76528931]
[59.93400574 40.37070847]
[51.48567200 27.97612762]
[38.99462509 19.67108154]
[32.50407028 6.14803791]
[33.83809662 -8.79252434]
[42.62178802 -20.95174980]
[56.38660049 -26.91244316]
[71.26411438 -24.99942970]
[83.07318878 -15.75033379]
[88.49503326 -1.76449919]
[86.00598145 13.02738476]
[89.26544189 27.66896820]
[92.52489471 42.31055069]
[95.78435516 56.95213318]
[99.04380798 71.59371185]
[105.92620850 68.61334991]
[110.08531952 54.20148468]
[114.24442291 39.78961945]
[118.40352631 25.37775421]
[122.47052765 10.93962765]
[126.44525146 -3.52417517]
[115.59748840 -14.39715481]
[111.65505219 -29.24143982]
[115.67843628 -44.06398773]
[126.58536530 -54.87761307]
[141.44192505 -58.77350235]
[156.25180054 -54.70367813]
[167.03117371 -43.76290894]
[170.88047791 -28.89420128]
[166.76425171 -14.09716415]
[155.78974915 -3.35212827]
[140.90905762 0.45054737]
[136.93432617 14.91434956]
[138.18955994 22.17995071]
[132.81539917 29.53686142]
[128.65628052 43.94872665]
[124.49717712 58.36059189]
[120.33807373 72.77245331]
[125.96897125 77.72653961]
[135.87715149 66.46475220]
[145.78550720 55.20311737]
[157.04698181 65.11167145]
[147.13894653 76.37292480]
[137.23075867 87.63471985]
[142.86166382 92.58880615]
[156.62646484 86.62807465]
[170.39125061 80.66734314]
[181.69097900 63.95553589]
[200.78915405 67.06369019]
[214.39723206 60.75336456]
[228.00531006 54.44304276]
[241.61338806 48.13271713]
[255.22146606 41.82239151]
[268.82955933 35.51206970]
[282.43762207 29.20174408]
[296.04571533 22.89142036]
[309.65377808 16.58109665]
[314.85473633 1.65710545]
[329.12139893 -5.14278936]
[343.98956299 0.21566981]
[350.63824463 14.55340385]
[345.12289429 29.36408997]
[330.71566772 35.86080933]
[315.96411133 30.18917465]
[302.35601807 36.49950027]
[288.74795532 42.80982208]
[275.13986206 49.12014771]
[261.53179932 55.43047333]
[247.92370605 61.74079514]
[234.31562805 68.05111694]
[220.70755005 74.36144257]
[207.09947205 80.67176819]
[204.47251892 90.51733398]
[196.70478821 97.44664001]
[186.19058228 99.00134277]
[176.35198975 94.43213654]
[162.58718872 100.39287567]
[148.82240295 106.35360718]
[163.75987244 107.72176361]
[178.69734192 109.08992767]
[193.63482666 110.45808411]
[208.57229614 111.82624054]
[223.50976562 113.19440460]
[238.50880432 113.36411285]
[253.14210510 116.66058350]
[266.76510620 122.93862152]
[278.77777100 131.92169189]
[288.65100098 143.21414185]
[295.94992065 156.31857300]
[300.35299683 170.65777588]
[301.66632080 185.60017395]
[299.83206177 200.48759460]
[294.93099976 214.66432190]
[287.17898560 227.50590515]
[276.91748047 238.44673157]
[264.59848022 247.00489807]
[250.76457214 252.80343628]
[236.02510071 255.58695984]
[221.02928162 255.23284912]
[206.43762207 251.75671387]
[192.89283752 245.31166077]
[180.99151611 236.18156433]
[171.25787354 224.76856995]
[164.12063599 211.57539368]
[159.89437866 197.18424988]
[150.77784729 185.27253723]
[141.66130066 173.36082458]
[132.54476929 161.44912720]
[123.42823029 149.53741455]
[114.31169128 137.62571716]
[116.60143280 152.44992065]
[118.98577881 167.25920105]
[121.46464539 182.05296326]
[123.94350433 196.84672546]
[135.72685242 203.34242249]
[141.53944397 215.26130676]
[139.46409607 228.16169739]
[130.47801208 237.37763977]
[132.76776123 252.20184326]
[135.05749512 267.02606201]
[137.34722900 281.85025024]
[141.74066162 289.83172607]
[139.57029724 296.87826538]
[141.67054749 311.73052979]
[143.77078247 326.58276367]
[158.60569763 329.69744873]
[171.47903442 337.70074463]
[180.83627319 349.62625122]
[185.54748535 364.03390503]
[185.04377747 379.18389893]
[179.38595581 393.24679565]
[169.25724792 404.52441406]
[155.88073730 411.65496826]
[140.87170410 413.77737427]
[126.04255676 410.63537598]
[113.18399811 402.60833740]
[103.84874725 390.66561890]
[99.16409302 376.24929810]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 232]
[4 231]
[5 230]
[6 228]
[7 227]
[8 226]
[9 225]
[12 221]
[13 220]
[14 219]
[16 218]
[17 217]
[18 48]
[19 47]
[20 46]
[21 45]
[22 44]
[23 43]
[27 39]
[28 38]
[29 37]
[30 36]
[31 35]
[56 104]
[57 103]
[58 102]
[59 101]
[62 86]
[63 85]
[64 84]
[65 83]
[66 82]
[123 145]
[124 144]
[125 143]
[126 142]
[127 140]
[128 139]
[152 185]
[153 184]
[154 183]
[156 179]
[157 178]
[158 177]
[159 176]
[160 175]
[161 174]
[162 173]
[163 172]
[164 171]
] def

init

% Start Annotations
3 232 0.16 0.6 colorpair
5 230 0.16 0.6 colorpair
6 228 0.0 0.6 colorpair
9 225 0.0 0.2 colorpair
12 221 0.0 0.2 colorpair
13 220 0.0 0.6 colorpair
14 219 0.32 1 colorpair
16 218 0.16 0.6 colorpair
17 217 0.16 0.6 colorpair
18 48 0.16 1 colorpair
19 47 0.16 0.2 colorpair
20 46 0.16 0.6 colorpair
21 45 0.0 0.2 colorpair
22 44 0.16 1 colorpair
27 39 0.16 0.2 colorpair
28 38 0.16 0.6 colorpair
29 37 0.16 1 colorpair
30 36 0.16 1 colorpair
31 35 0.0 1 colorpair
57 103 0.0 1 colorpair
58 102 0.0 0.2 colorpair
59 101 0.0 1 colorpair
62 86 0.32 0.2 colorpair
63 85 0.0 1 colorpair
64 84 0.0 1 colorpair
66 82 0.16 1 colorpair
123 145 0.0 1 colorpair
124 144 0.0 1 colorpair
125 143 0.0 0.2 colorpair
126 142 0.0 1 colorpair
127 140 0.0 1 colorpair
128 139 0.0 0.2 colorpair
152 185 0.0 1 colorpair
153 184 0.16 0.6 colorpair
156 179 0.32 1 colorpair
157 178 0.16 0.2 colorpair
158 177 0.0 0.2 colorpair
159 176 0.0 1 colorpair
160 175 0.16 0.2 colorpair
161 174 0.16 0.6 colorpair
162 173 0.0 0.6 colorpair
163 172 0.0 0.6 colorpair
164 171 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
3 232 1 gmark
3 cmark
4 231 3 gmark
4 cmark
5 230 1 gmark
5 cmark
6 228 1 gmark
7 227 6 gmark
227 cmark
8 226 5 gmark
8 cmark
226 cmark
9 225 2 gmark
12 221 2 gmark
13 220 1 gmark
14 cmark
219 cmark
16 218 1 gmark
218 cmark
17 217 1 gmark
17 cmark
18 cmark
19 47 2 gmark
47 cmark
20 46 1 gmark
20 cmark
21 45 2 gmark
44 cmark
23 43 4 gmark
23 cmark
27 39 2 gmark
39 cmark
28 38 1 gmark
38 cmark
37 cmark
30 cmark
36 cmark
56 104 4 gmark
56 cmark
104 cmark
58 102 2 gmark
62 86 2 gmark
62 cmark
86 cmark
65 83 4 gmark
65 cmark
83 cmark
66 cmark
125 143 2 gmark
128 139 2 gmark
153 184 1 gmark
153 cmark
154 183 3 gmark
154 cmark
183 cmark
156 cmark
179 cmark
157 178 2 gmark
157 cmark
158 177 2 gmark
160 175 2 gmark
160 cmark
161 174 1 gmark
161 cmark
174 cmark
162 173 1 gmark
163 172 1 gmark
164 171 1 gmark
164 cmark
171 cmark

% End Annotations
showpage
end
%%EOF
