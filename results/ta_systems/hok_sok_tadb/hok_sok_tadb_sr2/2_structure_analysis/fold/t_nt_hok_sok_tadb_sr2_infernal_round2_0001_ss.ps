%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Mar  7 03:07:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_GUAAGAGG_CUA_CCCUG_AUGUU_G_U_U_UA_GCA_U__UA___A_GG_____U_______GGCCUCGG_____GUUAAU_____G___A_A____A_______A______________________U__UA____AC______UCGGGG_CUUUCUUCUUU_______CUGCC_AC__A_CA_____C_______________________________________C_A___A__U______________\
____GC_________________________________AUGA_GGCAGA_AAGCCUC_AAGCGCC_______________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50208282 92.22603607]
[62.51167297 91.67819214]
[47.53376770 90.85665894]
[32.57336807 89.76170349]
[17.63545990 88.39369202]
[2.72502828 86.75308228]
[-12.15295124 84.84041595]
[-26.99351692 82.65634155]
[-41.79171371 80.20158386]
[-56.54261398 77.47695923]
[-71.24128723 74.48337555]
[-85.88283539 71.22183228]
[-100.46237183 67.69342804]
[-114.97502899 63.89932251]
[-129.41596985 59.84079361]
[-143.78038025 55.51918793]
[-158.06347656 50.93595123]
[-172.26046753 46.09261322]
[-186.36662292 40.99079132]
[-200.37725830 35.63217926]
[-214.28768921 30.01857376]
[-228.09326172 24.15184212]
[-241.78939819 18.03394318]
[-255.37149048 11.66691875]
[-268.83505249 5.05289173]
[-282.17556763 -1.80593157]
[-295.38854980 -8.90726280]
[-308.46966553 -16.24873161]
[-321.41452026 -23.82789040]
[-334.21878052 -31.64221191]
[-346.87817383 -39.68908691]
[-359.38848877 -47.96583176]
[-371.74554443 -56.46968460]
[-383.94522095 -65.19780731]
[-395.98348999 -74.14729309]
[-407.85626221 -83.31515503]
[-419.55960083 -92.69832611]
[-431.08963013 -102.29368591]
[-442.44250488 -112.09803009]
[-453.61441040 -122.10809326]
[-464.60159302 -132.32052612]
[-475.40045166 -142.73191833]
[-486.00735474 -153.33882141]
[-496.41876221 -164.13766479]
[-506.63119507 -175.12487793]
[-516.64129639 -186.29676819]
[-526.44561768 -197.64962769]
[-536.04095459 -209.17964172]
[-545.42413330 -220.88299561]
[-554.59204102 -232.75578308]
[-563.54150391 -244.79402161]
[-572.26965332 -256.99371338]
[-580.77349854 -269.35076904]
[-589.05023193 -281.86108398]
[-597.09710693 -294.52047729]
[-604.91143799 -307.32473755]
[-612.49060059 -320.26956177]
[-619.83209229 -333.35067749]
[-626.93341064 -346.56369019]
[-633.79223633 -359.90417480]
[-640.40631104 -373.36773682]
[-646.77331543 -386.94982910]
[-652.89123535 -400.64596558]
[-658.75793457 -414.45153809]
[-664.37158203 -428.36193848]
[-669.73016357 -442.37258911]
[-674.83203125 -456.47875977]
[-679.67535400 -470.67575073]
[-684.25860596 -484.95883179]
[-688.58020020 -499.32324219]
[-692.63873291 -513.76416016]
[-696.43286133 -528.27685547]
[-699.96124268 -542.85638428]
[-703.22283936 -557.49792480]
[-706.21643066 -572.19659424]
[-708.94104004 -586.94750977]
[-711.39581299 -601.74566650]
[-713.57989502 -616.58624268]
[-715.49255371 -631.46423340]
[-717.13317871 -646.37463379]
[-718.50115967 -661.31256104]
[-719.59613037 -676.27294922]
[-720.41766357 -691.25085449]
[-720.96551514 -706.24127197]
[-721.23950195 -721.23919678]
[-721.23950195 -736.23962402]
[-720.96551514 -751.23754883]
[-720.41772461 -766.22796631]
[-719.59613037 -781.20587158]
[-718.50122070 -796.16625977]
[-717.13317871 -811.10412598]
[-715.49255371 -826.01458740]
[-713.57989502 -840.89257812]
[-711.39581299 -855.73315430]
[-708.94110107 -870.53131104]
[-706.21643066 -885.28222656]
[-703.22283936 -899.98089600]
[-699.96130371 -914.62243652]
[-696.43292236 -929.20196533]
[-692.63879395 -943.71466064]
[-688.58026123 -958.15557861]
[-684.25866699 -972.52001953]
[-679.67541504 -986.80310059]
[-674.83209229 -1001.00006104]
[-669.73028564 -1015.10626221]
[-664.37164307 -1029.11682129]
[-658.75805664 -1043.02734375]
[-652.89129639 -1056.83288574]
[-646.77343750 -1070.52905273]
[-640.40637207 -1084.11108398]
[-633.79235840 -1097.57470703]
[-626.93353271 -1110.91516113]
[-619.83221436 -1124.12817383]
[-612.49072266 -1137.20922852]
[-604.91156006 -1150.15405273]
[-597.09722900 -1162.95837402]
[-589.05035400 -1175.61779785]
[-580.77362061 -1188.12805176]
[-572.26977539 -1200.48510742]
[-563.54162598 -1212.68481445]
[-554.59216309 -1224.72302246]
[-545.42431641 -1236.59582520]
[-536.04113770 -1248.29919434]
[-526.44573975 -1259.82922363]
[-516.64141846 -1271.18212891]
[-506.63134766 -1282.35400391]
[-496.41891479 -1293.34118652]
[-486.00750732 -1304.14001465]
[-475.40060425 -1314.74694824]
[-464.60174561 -1325.15832520]
[-453.61456299 -1335.37072754]
[-442.44265747 -1345.38085938]
[-431.08981323 -1355.18518066]
[-419.55978394 -1364.78051758]
[-407.85641479 -1374.16369629]
[-395.98364258 -1383.33154297]
[-383.94540405 -1392.28112793]
[-371.74572754 -1401.00915527]
[-359.38864136 -1409.51306152]
[-346.87832642 -1417.78979492]
[-334.21893311 -1425.83666992]
[-321.41470337 -1433.65100098]
[-308.46984863 -1441.23022461]
[-295.38873291 -1448.57165527]
[-282.17575073 -1455.67297363]
[-268.83523560 -1462.53186035]
[-255.37168884 -1469.14587402]
[-241.78958130 -1475.51281738]
[-228.09346008 -1481.63073730]
[-214.28788757 -1487.49755859]
[-200.37745667 -1493.11108398]
[-186.36682129 -1498.46972656]
[-172.26066589 -1503.57153320]
[-158.06367493 -1508.41491699]
[-143.78057861 -1512.99816895]
[-129.41616821 -1517.31970215]
[-114.97523499 -1521.37829590]
[-100.46257019 -1525.17236328]
[-85.88303375 -1528.70080566]
[-71.24149323 -1531.96240234]
[-56.54281616 -1534.95593262]
[-41.79191971 -1537.68054199]
[-26.99372292 -1540.13537598]
[-12.15315819 -1542.31945801]
[2.72482061 -1544.23205566]
[17.63525009 -1545.87268066]
[32.57315826 -1547.24072266]
[47.53355789 -1548.33569336]
[62.51146317 -1549.15722656]
[77.50187683 -1549.70507812]
[92.49979401 -1549.97900391]
[107.50020599 -1549.97900391]
[122.49812317 -1549.70507812]
[137.48854065 -1549.15722656]
[152.46644592 -1548.33569336]
[167.42683411 -1547.24072266]
[182.36474609 -1545.87268066]
[197.27517700 -1544.23205566]
[212.15315247 -1542.31945801]
[226.99372864 -1540.13537598]
[241.79191589 -1537.68054199]
[256.54281616 -1534.95593262]
[271.24148560 -1531.96240234]
[285.88302612 -1528.70080566]
[300.46258545 -1525.17236328]
[314.97521973 -1521.37829590]
[329.41616821 -1517.31970215]
[343.78057861 -1512.99816895]
[358.06365967 -1508.41491699]
[372.26065063 -1503.57153320]
[386.36682129 -1498.46972656]
[400.37747192 -1493.11108398]
[414.28787231 -1487.49755859]
[428.09347534 -1481.63073730]
[441.78958130 -1475.51281738]
[455.37167358 -1469.14587402]
[468.83523560 -1462.53186035]
[482.17575073 -1455.67297363]
[495.38873291 -1448.57165527]
[508.46984863 -1441.23022461]
[521.41467285 -1433.65100098]
[534.21893311 -1425.83666992]
[546.87835693 -1417.78979492]
[559.38867188 -1409.51306152]
[571.74572754 -1401.00915527]
[583.94537354 -1392.28112793]
[595.98364258 -1383.33154297]
[607.85644531 -1374.16369629]
[619.55975342 -1364.78051758]
[631.08978271 -1355.18518066]
[642.44268799 -1345.38085938]
[653.61456299 -1335.37072754]
[664.60174561 -1325.15832520]
[675.40063477 -1314.74694824]
[686.00750732 -1304.14001465]
[696.41888428 -1293.34118652]
[706.63134766 -1282.35400391]
[716.64141846 -1271.18212891]
[726.44573975 -1259.82922363]
[736.04113770 -1248.29919434]
[745.42431641 -1236.59582520]
[754.59216309 -1224.72302246]
[763.54162598 -1212.68481445]
[772.26977539 -1200.48510742]
[780.77362061 -1188.12805176]
[789.05035400 -1175.61779785]
[797.09722900 -1162.95837402]
[804.91156006 -1150.15405273]
[812.49072266 -1137.20922852]
[819.83221436 -1124.12817383]
[826.93353271 -1110.91516113]
[833.79235840 -1097.57470703]
[840.40637207 -1084.11108398]
[846.77343750 -1070.52905273]
[852.89129639 -1056.83288574]
[858.75805664 -1043.02734375]
[864.37164307 -1029.11682129]
[869.73028564 -1015.10626221]
[874.83209229 -1001.00006104]
[879.67541504 -986.80310059]
[884.25866699 -972.52001953]
[888.58026123 -958.15557861]
[892.63879395 -943.71466064]
[896.43292236 -929.20196533]
[899.96130371 -914.62243652]
[903.22283936 -899.98089600]
[906.21643066 -885.28222656]
[908.94110107 -870.53131104]
[911.39581299 -855.73315430]
[913.57989502 -840.89257812]
[915.49255371 -826.01458740]
[917.13317871 -811.10412598]
[918.50122070 -796.16625977]
[919.59613037 -781.20587158]
[920.41772461 -766.22796631]
[920.96551514 -751.23754883]
[921.23950195 -736.23962402]
[921.23950195 -721.23919678]
[920.96551514 -706.24127197]
[920.41766357 -691.25085449]
[919.59613037 -676.27294922]
[918.50115967 -661.31256104]
[917.13317871 -646.37463379]
[915.49255371 -631.46423340]
[913.57989502 -616.58624268]
[911.39581299 -601.74566650]
[908.94104004 -586.94750977]
[906.21643066 -572.19659424]
[903.22283936 -557.49792480]
[899.96124268 -542.85638428]
[896.43286133 -528.27685547]
[892.63873291 -513.76416016]
[888.58020020 -499.32324219]
[884.25860596 -484.95883179]
[879.67535400 -470.67575073]
[874.83203125 -456.47875977]
[869.73016357 -442.37258911]
[864.37158203 -428.36193848]
[858.75793457 -414.45153809]
[852.89123535 -400.64596558]
[846.77331543 -386.94982910]
[840.40631104 -373.36773682]
[833.79223633 -359.90417480]
[826.93341064 -346.56369019]
[819.83209229 -333.35067749]
[812.49060059 -320.26956177]
[804.91143799 -307.32473755]
[797.09710693 -294.52047729]
[789.05023193 -281.86108398]
[780.77349854 -269.35076904]
[772.26965332 -256.99371338]
[763.54150391 -244.79402161]
[754.59204102 -232.75578308]
[745.42413330 -220.88299561]
[736.04095459 -209.17964172]
[726.44561768 -197.64962769]
[716.64129639 -186.29676819]
[706.63122559 -175.12487793]
[696.41876221 -164.13766479]
[686.00738525 -153.33882141]
[675.40045166 -142.73191833]
[664.60162354 -132.32052612]
[653.61437988 -122.10809326]
[642.44250488 -112.09803009]
[631.08966064 -102.29368591]
[619.55963135 -92.69832611]
[607.85626221 -83.31515503]
[595.98345947 -74.14729309]
[583.94525146 -65.19780731]
[571.74554443 -56.46968460]
[559.38848877 -47.96583176]
[546.87817383 -39.68908691]
[534.21875000 -31.64221191]
[521.41448975 -23.82789040]
[508.46966553 -16.24873161]
[495.38854980 -8.90726280]
[482.17556763 -1.80593157]
[468.83505249 5.05289173]
[455.37149048 11.66691875]
[441.78939819 18.03394318]
[428.09326172 24.15184212]
[414.28768921 30.01857376]
[400.37725830 35.63217926]
[386.36663818 40.99079132]
[372.26046753 46.09261322]
[358.06347656 50.93595123]
[343.78039551 55.51918793]
[329.41598511 59.84079361]
[314.97503662 63.89932251]
[300.46237183 67.69342804]
[285.88284302 71.22183228]
[271.24127197 74.48337555]
[256.54260254 77.47695923]
[241.79171753 80.20158386]
[226.99351501 82.65634155]
[212.15295410 84.84041595]
[197.27497864 86.75308228]
[182.36454773 88.39369202]
[167.42663574 89.76170349]
[152.46623230 90.85665894]
[137.48832703 91.67819214]
[122.49791718 92.22603607]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
