%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 01:55:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAUGCCGCAAAAAUUCGCUAUCACCGCUCUGGUGGUUAUCUGUAUCACCUUACUGGUGUUUACCUGGAUAACCCGGAAAUCACUCUGUGAGAUCCAUAUCAGAAAAGGCGAAACGGAGGUUGCGGCCAUAAUGGCUUACGAAUCUGUGAGG\
) } def
/len { sequence length } bind def

/coor [
[218.67079163 554.13458252]
[210.06805420 540.88525391]
[206.50570679 525.46746826]
[208.43063354 509.73400879]
[215.62918091 495.58206177]
[227.25064087 484.72439575]
[221.29904175 470.95565796]
[215.34744263 457.18692017]
[209.39584351 443.41815186]
[203.44424438 429.64941406]
[197.49263000 415.88067627]
[191.54103088 402.11190796]
[178.98406982 399.07000732]
[170.35731506 389.19149780]
[168.99412537 375.95138550]
[175.61822510 364.18246460]
[169.94871521 350.29519653]
[164.27922058 336.40789795]
[158.60971069 322.52059937]
[146.11741638 319.22320557]
[137.69395447 309.17074585]
[136.60113525 295.90560913]
[143.46391296 284.27426147]
[138.07887268 270.27420044]
[126.28824615 261.17309570]
[128.55545044 245.51516724]
[123.17041016 231.51512146]
[107.54284668 225.37471008]
[101.03659821 209.53099060]
[108.11134338 193.56353760]
[102.44184113 179.67625427]
[96.77234650 165.78897095]
[91.10284424 151.90167236]
[85.43334198 138.01438904]
[79.76383972 124.12709808]
[70.89762878 112.02791595]
[59.36336899 102.43829346]
[47.82910919 92.84867096]
[36.29485321 83.25904846]
[24.76059341 73.66941833]
[13.22633648 64.07979584]
[1.69207811 54.49017334]
[-9.84217930 44.90054703]
[-21.56965256 35.54820251]
[-33.48545837 26.43702316]
[-45.40126419 17.32584572]
[-63.68708038 15.40632915]
[-69.84812164 -0.99818110]
[-81.94730377 -9.86439800]
[-94.04648590 -18.73061562]
[-106.14566803 -27.59683228]
[-122.15663147 -26.58272934]
[-132.82498169 -38.56462860]
[-129.96687317 -54.35103607]
[-115.77479553 -61.83197784]
[-101.13569641 -55.26871109]
[-97.27944946 -39.69601440]
[-85.18026733 -30.82979584]
[-73.08108521 -21.96357918]
[-60.98190308 -13.09736252]
[-48.94414902 -14.62465477]
[-38.78135300 -7.28534079]
[-36.29008484 5.41003895]
[-24.37428093 14.52121639]
[-12.45847416 23.63239479]
[-7.63446903 23.88794327]
[-2.93502903 27.21688843]
[-0.25255537 33.36629105]
[11.28170204 42.95591354]
[22.81595993 52.54553986]
[34.35021973 62.13516235]
[45.88447571 71.72478485]
[57.41873550 81.31441498]
[68.95299530 90.90403748]
[80.48725128 100.49365997]
[86.79402161 88.10239410]
[98.73726654 84.01879120]
[104.68886566 70.25004578]
[110.64047241 56.48129654]
[105.05751038 41.93935013]
[111.28942108 28.06066132]
[125.18734741 22.82777786]
[131.13894653 9.05902863]
[137.09054565 -4.70972061]
[143.04216003 -18.47846985]
[143.77667236 -35.41650009]
[160.25608826 -39.39960480]
[168.64547729 -24.66684341]
[156.81089783 -12.52686787]
[150.85929871 1.24188077]
[144.90769958 15.01062965]
[138.95610046 28.77937889]
[144.66647339 42.48803711]
[138.82684326 56.53628922]
[124.40921783 62.43289948]
[118.45761871 76.20164490]
[112.50601959 89.97039795]
[116.90533447 103.13562775]
[109.24887848 115.85601807]
[93.65113068 118.45759583]
[99.32063293 132.34489441]
[104.99012756 146.23217773]
[110.65962982 160.11946106]
[116.32913208 174.00674438]
[121.99863434 187.89404297]
[134.96667480 191.66445923]
[143.25915527 202.07565308]
[144.01077271 215.16921997]
[137.17045593 226.13008118]
[142.55549622 240.13012695]
[154.73130798 250.23262024]
[152.07891846 264.88916016]
[157.46395874 278.88922119]
[173.55725098 285.67285156]
[179.67321777 301.67126465]
[172.49700928 316.85110474]
[178.16650391 330.73840332]
[183.83599854 344.62567139]
[189.50550842 358.51296997]
[205.73382568 364.96691895]
[212.17486572 380.83724976]
[205.30978394 396.16030884]
[211.26138306 409.92907715]
[217.21298218 423.69781494]
[223.16458130 437.46655273]
[229.11619568 451.23532104]
[235.06779480 465.00405884]
[241.01939392 478.77279663]
[255.33027649 477.60046387]
[269.28067017 480.90884399]
[281.50439453 488.36026001]
[290.80862427 499.21200562]
[296.29016113 512.39025879]
[297.42330933 526.59655762]
[294.11010742 540.43530273]
[286.68865967 552.55145264]
[275.89874268 561.76263428]
[281.56823730 575.64996338]
[287.23776245 589.53723145]
[292.90725708 603.42449951]
[298.57675171 617.31182861]
[304.24624634 631.19909668]
[317.52999878 640.81542969]
[315.57498169 657.09759521]
[300.39233398 663.29595947]
[287.60067749 653.03411865]
[290.35897827 636.86859131]
[284.68945312 622.98132324]
[279.01995850 609.09399414]
[273.35046387 595.20672607]
[267.68096924 581.31945801]
[262.01147461 567.43212891]
[246.31546021 568.24145508]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 128]
[7 127]
[8 126]
[9 125]
[10 124]
[11 123]
[12 122]
[16 119]
[17 118]
[18 117]
[19 116]
[23 113]
[24 112]
[26 110]
[27 109]
[30 105]
[31 104]
[32 103]
[33 102]
[34 101]
[35 100]
[36 75]
[37 74]
[38 73]
[39 72]
[40 71]
[41 70]
[42 69]
[43 68]
[44 65]
[45 64]
[46 63]
[48 60]
[49 59]
[50 58]
[51 57]
[77 97]
[78 96]
[79 95]
[82 92]
[83 91]
[84 90]
[85 89]
[137 152]
[138 151]
[139 150]
[140 149]
[141 148]
[142 147]
] def

init

% Start Annotations
6 128 0.0 1 colorpair
7 127 0.0 0.6 colorpair
8 126 0.16 1 colorpair
9 125 0.0 1 colorpair
10 124 0.0 1 colorpair
11 123 0.0 1 colorpair
12 122 0.0 1 colorpair
16 119 0.0 1 colorpair
17 118 0.0 1 colorpair
18 117 0.0 1 colorpair
19 116 0.0 1 colorpair
23 113 0.0 1 colorpair
24 112 0.0 1 colorpair
26 110 0.0 1 colorpair
27 109 0.0 1 colorpair
30 105 0.0 1 colorpair
31 104 0.0 1 colorpair
32 103 0.0 1 colorpair
33 102 0.0 1 colorpair
34 101 0.16 1 colorpair
35 100 0.0 1 colorpair
36 75 0.0 1 colorpair
37 74 0.0 1 colorpair
38 73 0.0 1 colorpair
39 72 0.0 1 colorpair
40 71 0.0 1 colorpair
41 70 0.0 1 colorpair
42 69 0.16 1 colorpair
43 68 0.0 1 colorpair
44 65 0.0 1 colorpair
45 64 0.0 1 colorpair
46 63 0.0 1 colorpair
48 60 0.0 1 colorpair
49 59 0.0 1 colorpair
50 58 0.0 1 colorpair
51 57 0.0 1 colorpair
77 97 0.0 1 colorpair
78 96 0.0 1 colorpair
79 95 0.0 1 colorpair
82 92 0.0 1 colorpair
83 91 0.16 1 colorpair
84 90 0.0 1 colorpair
85 89 0.0 1 colorpair
137 152 0.0 1 colorpair
138 151 0.0 1 colorpair
139 150 0.0 1 colorpair
140 149 0.0 1 colorpair
141 148 0.0 1 colorpair
142 147 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
7 127 1 gmark
8 cmark
101 cmark
42 cmark
83 cmark

% End Annotations
showpage
end
%%EOF
