%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 01:55:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGAGGCGACCUUUAUGUUGUGUAAGCAUUAGAGUGGCCUCGGGUUGAUUAACAUCGAUCCGGGGCCUUUCUCUUUCUGCCUUUUGCUGAGGCUCAGGACAGAAAGAUCCAGAGCACCCGCGCGAAGUGUAACAGUAAUCC\
) } def
/len { sequence length } bind def

/coor [
[-81.35469055 261.30261230]
[-84.52421570 263.17004395]
[-87.74385834 263.74832153]
[-90.56757355 263.19692993]
[-103.27469635 271.16744995]
[-115.98181152 279.13793945]
[-128.68893433 287.10845947]
[-141.39605713 295.07897949]
[-154.10317993 303.04949951]
[-166.81030273 311.01998901]
[-179.51742554 318.99050903]
[-192.13621521 327.10012817]
[-204.66519165 335.34786987]
[-208.05114746 347.84600830]
[-218.72071838 354.44775391]
[-230.62808228 352.05712891]
[-243.33520508 360.02761841]
[-256.04232788 367.99813843]
[-268.74945068 375.96865845]
[-281.45657349 383.93917847]
[-286.42590332 399.19320679]
[-301.50021362 404.68356323]
[-315.11581421 396.19854736]
[-316.82794189 380.24713135]
[-305.32321167 369.06585693]
[-289.42706299 371.23205566]
[-276.71997070 363.26153564]
[-264.01284790 355.29101562]
[-251.30570984 347.32049561]
[-238.59858704 339.35000610]
[-231.28086853 323.43585205]
[-212.91291809 322.81890869]
[-200.38395691 314.57116699]
[-196.49645996 308.21691895]
[-187.48793030 306.28338623]
[-174.78080750 298.31289673]
[-162.07368469 290.34237671]
[-149.36657715 282.37185669]
[-136.65945435 274.40133667]
[-123.95233154 266.43081665]
[-111.24520874 258.46032715]
[-98.53808594 250.48980713]
[-86.19332886 241.96882629]
[-74.23476410 232.91384888]
[-62.27619553 223.85887146]
[-50.31763077 214.80389404]
[-38.35906219 205.74890137]
[-26.40049553 196.69392395]
[-29.50673866 178.92774963]
[-23.20285416 161.93969727]
[-9.12880230 150.39347839]
[8.93007946 147.50444031]
[26.06097794 154.14460754]
[37.39722061 144.32170105]
[41.94899750 130.13964844]
[57.44532394 126.94991302]
[68.78157043 117.12699890]
[80.11781311 107.30409241]
[79.51891327 94.59850311]
[86.30581665 83.84078217]
[98.03105927 78.91032410]
[110.46633148 81.58513641]
[122.01561737 72.01362610]
[133.56491089 62.44211578]
[145.11419678 52.87060165]
[156.55766296 43.17280579]
[167.89390564 33.34989548]
[179.12156677 23.40305328]
[190.23928833 13.33348560]
[188.71495056 -1.99565518]
[196.41911316 -15.12954617]
[210.21653748 -21.13746834]
[224.73223877 -17.90754318]
[235.84996033 -27.97711182]
[246.96769714 -38.04668045]
[258.08541870 -48.11624908]
[269.20312500 -58.18581772]
[280.32086182 -68.25538635]
[291.43859863 -78.32495880]
[302.55630493 -88.39452362]
[313.56274414 -98.58560944]
[324.45660400 -108.89697266]
[335.35043335 -119.20833588]
[334.17279053 -132.67222595]
[340.88842773 -144.17562866]
[352.83670044 -149.60780334]
[365.53659058 -147.17883301]
[376.65432739 -157.24839783]
[381.15841675 -173.01689148]
[397.12991333 -176.73747253]
[408.13873291 -164.58271790]
[402.85992432 -149.05641174]
[386.72387695 -146.13067627]
[375.60617065 -136.06111145]
[375.51693726 -119.27848816]
[363.09884644 -107.49407196]
[345.66180420 -108.31449890]
[334.76797485 -98.00313568]
[323.87411499 -87.69176483]
[321.15756226 -80.75568390]
[312.62588501 -77.27680206]
[301.50814819 -67.20722961]
[290.39044189 -57.13766098]
[279.27270508 -47.06809235]
[268.15499878 -36.99852371]
[257.03726196 -26.92895699]
[245.91954041 -16.85938835]
[234.80181885 -6.78981972]
[236.58326721 7.97379875]
[229.24285889 21.11086655]
[215.41270447 27.48110390]
[200.30885315 24.45121002]
[189.19113159 34.52077866]
[186.32284546 41.39551163]
[177.71681213 44.68613815]
[166.38056946 54.50904846]
[163.36195374 61.31911469]
[154.68571472 64.41989136]
[143.13642883 73.99140930]
[131.58712769 83.56291962]
[120.03784180 93.13442993]
[118.89910889 109.56423950]
[106.33479309 120.21191406]
[89.94072723 118.64033508]
[78.60447693 128.46324158]
[67.26823425 138.28616333]
[61.90561676 153.17080688]
[47.22013092 155.65794373]
[35.88388824 165.48085022]
[39.68310547 177.01814270]
[39.33649063 189.12510681]
[34.90894318 200.36140442]
[26.94945717 209.39825439]
[16.42316818 215.17567444]
[4.59436607 217.02671814]
[-7.12534904 214.75442505]
[-17.34551430 208.65249634]
[-29.30408096 217.70747375]
[-41.26264954 226.76245117]
[-53.22121429 235.81742859]
[-65.17977905 244.87242126]
[-77.13835144 253.92739868]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 42]
[5 41]
[6 40]
[7 39]
[8 38]
[9 37]
[10 36]
[11 35]
[12 33]
[13 32]
[16 30]
[17 29]
[18 28]
[19 27]
[20 26]
[43 142]
[44 141]
[45 140]
[46 139]
[47 138]
[48 137]
[53 129]
[54 128]
[56 126]
[57 125]
[58 124]
[62 121]
[63 120]
[64 119]
[65 118]
[66 116]
[67 115]
[68 113]
[69 112]
[73 108]
[74 107]
[75 106]
[76 105]
[77 104]
[78 103]
[79 102]
[80 101]
[81 99]
[82 98]
[83 97]
[87 94]
[88 93]
] def

init

% Start Annotations
4 42 0.0 1 colorpair
5 41 0.0 1 colorpair
6 40 0.0 1 colorpair
7 39 0.0 1 colorpair
8 38 0.0 1 colorpair
9 37 0.0 0.6 colorpair
10 36 0.0 1 colorpair
11 35 0.0 1 colorpair
12 33 0.0 1 colorpair
13 32 0.0 1 colorpair
16 30 0.0 1 colorpair
17 29 0.0 1 colorpair
18 28 0.0 1 colorpair
19 27 0.0 1 colorpair
20 26 0.0 1 colorpair
43 142 0.0 1 colorpair
44 141 0.0 1 colorpair
45 140 0.0 1 colorpair
46 139 0.0 1 colorpair
47 138 0.0 1 colorpair
48 137 0.0 1 colorpair
53 129 0.0 1 colorpair
54 128 0.0 1 colorpair
56 126 0.0 1 colorpair
57 125 0.0 1 colorpair
58 124 0.0 1 colorpair
62 121 0.0 1 colorpair
63 120 0.0 1 colorpair
64 119 0.0 1 colorpair
65 118 0.0 1 colorpair
66 116 0.0 1 colorpair
67 115 0.0 1 colorpair
68 113 0.0 1 colorpair
69 112 0.0 1 colorpair
73 108 0.0 1 colorpair
74 107 0.0 1 colorpair
75 106 0.0 1 colorpair
76 105 0.0 1 colorpair
77 104 0.0 1 colorpair
78 103 0.0 1 colorpair
79 102 0.0 1 colorpair
80 101 0.0 1 colorpair
81 99 0.0 1 colorpair
82 98 0.0 1 colorpair
83 97 0.0 1 colorpair
87 94 0.0 1 colorpair
88 93 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
9 37 1 gmark

% End Annotations
showpage
end
%%EOF
