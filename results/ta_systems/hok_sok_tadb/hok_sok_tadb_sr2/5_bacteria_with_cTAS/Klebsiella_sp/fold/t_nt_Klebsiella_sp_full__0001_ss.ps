%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 06:55:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__UAAGAGGCCAUACUGAUGUUGACUAGACAUACAGGGGGCCUCG_GGGUAAAUGAAAAAUAACU_CGGGGCUUUCUGCUUUCUGCCACACAACAC____ACAAACCACCCAAACAUCAUGAGGC_AAAAAGCCUCAAGCGCC_\
) } def
/len { sequence length } bind def

/coor [
[136.90093994 136.79768372]
[128.35963440 149.12838745]
[114.21839905 154.13092041]
[99.82331848 149.91407776]
[90.61646271 138.07203674]
[90.07824707 123.08255768]
[76.82556152 130.10868835]
[63.57288361 137.13481140]
[50.32020187 144.16093445]
[37.06752014 151.18705750]
[23.81484032 158.21319580]
[10.56215954 165.23931885]
[4.38940144 172.07499695]
[-3.05461740 172.27056885]
[-16.45640564 179.00793457]
[-29.85819244 185.74530029]
[-43.25997925 192.48266602]
[-56.58799744 199.36482239]
[-69.84067535 206.39094543]
[-83.09336090 213.41706848]
[-96.34603882 220.44319153]
[-109.59871674 227.46932983]
[-115.66329956 242.32194519]
[-131.09672546 246.70248413]
[-144.05978394 237.25057983]
[-144.60832214 221.21690369]
[-132.32156372 210.90113831]
[-116.62484741 214.21664429]
[-103.37216187 207.19052124]
[-90.11948395 200.16439819]
[-76.86680603 193.13825989]
[-63.61412430 186.11213684]
[-59.14467239 180.15599060]
[-49.99734497 179.08088684]
[-36.59555817 172.34352112]
[-23.19376945 165.60615540]
[-9.79198265 158.86878967]
[3.53603339 151.98663330]
[16.78871346 144.96051025]
[30.04139519 137.93438721]
[43.29407501 130.90824890]
[56.54675674 123.88212585]
[69.79943848 116.85600281]
[83.05211639 109.82987976]
[85.79896545 95.08352661]
[75.96488953 83.75696564]
[66.13082123 72.43039703]
[56.29675293 61.10383224]
[48.24501038 56.63182068]
[46.37556839 49.42370987]
[36.78918839 37.88675308]
[27.20281029 26.34979820]
[17.61643028 14.81284332]
[8.03005314 3.27588773]
[-7.53205395 -1.89643025]
[-10.56826019 -18.01205826]
[2.04482198 -28.49262047]
[17.33193588 -22.55661392]
[19.56700897 -6.31049109]
[29.15338707 5.22646475]
[38.73976517 16.76342010]
[48.32614517 28.30037689]
[57.91252136 39.83733368]
[67.62331390 51.26976395]
[77.45738983 62.59632874]
[87.29145813 73.92288971]
[97.12552643 85.24945831]
[111.17719269 90.49833679]
[126.02868652 88.39286041]
[138.60618591 78.79510498]
[152.29350281 84.66934204]
[167.14500427 82.56386566]
[181.99650574 80.45838928]
[196.84799194 78.35292053]
[204.17959595 64.80471039]
[217.92236328 58.24804688]
[232.71578979 61.00820160]
[242.92504883 71.82064056]
[257.77655029 69.71516418]
[272.62805176 67.60969543]
[287.47955322 65.50421906]
[302.33105469 63.39874268]
[317.18255615 61.29327011]
[332.03402710 59.18779755]
[346.86184692 56.92156219]
[361.66424561 54.49483109]
[376.46664429 52.06809998]
[382.34741211 42.80734634]
[392.17001343 38.44022369]
[402.55032349 40.20441055]
[410.05728149 47.26939011]
[424.95092773 45.48616028]
[434.70993042 33.34534073]
[449.83956909 31.74905586]
[461.35385132 41.12759781]
[476.24746704 39.34436417]
[491.14111328 37.56113434]
[494.29953003 22.75224686]
[502.09738159 9.77256584]
[513.68884277 0.03002888]
[527.81652832 -5.41856575]
[542.94799805 -5.98219585]
[557.44183350 -1.59972239]
[569.72595215 7.25347662]
[578.46783447 19.61707115]
[582.71917725 34.14995193]
[582.01892090 49.27570343]
[576.44293213 63.35359192]
[566.59606934 74.85655975]
[553.54644775 82.53684235]
[538.70965576 85.56134796]
[523.69500732 83.60199738]
[510.13119507 76.87133026]
[499.48953247 66.09943390]
[492.92434692 52.45476151]
[478.03070068 54.23799133]
[463.13708496 56.02122116]
[454.16232300 67.85293579]
[439.08349609 69.87355042]
[426.73413086 60.37978745]
[411.84051514 62.16301727]
[397.33679199 74.88529968]
[378.89337158 66.87049866]
[364.09097290 69.29722595]
[349.28857422 71.72396088]
[343.15130615 75.94121552]
[334.13952637 74.03929138]
[319.28802490 76.14476776]
[304.43652344 78.25024414]
[289.58502197 80.35571289]
[274.73352051 82.46118927]
[259.88201904 84.56666565]
[245.03053284 86.67214203]
[238.22888184 99.89619446]
[224.78556824 106.65943146]
[209.76190186 104.18093872]
[198.95347595 93.20441437]
[184.10197449 95.30989075]
[169.25047302 97.41535950]
[154.39898682 99.52083588]
[142.88375854 108.96800232]
[128.13415527 103.24436188]
[113.28266907 105.34983826]
[127.60534668 109.80637360]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 44]
[7 43]
[8 42]
[9 41]
[10 40]
[11 39]
[12 38]
[14 37]
[15 36]
[16 35]
[17 34]
[18 32]
[19 31]
[20 30]
[21 29]
[22 28]
[45 67]
[46 66]
[47 65]
[48 64]
[50 63]
[51 62]
[52 61]
[53 60]
[54 59]
[68 143]
[69 142]
[71 140]
[72 139]
[73 138]
[74 137]
[78 133]
[79 132]
[80 131]
[81 130]
[82 129]
[83 128]
[84 127]
[85 125]
[86 124]
[87 123]
[91 121]
[92 120]
[95 117]
[96 116]
[97 115]
] def

init

% Start Annotations
6 44 0.0 1 colorpair
7 43 0.0 1 colorpair
8 42 0.0 1 colorpair
9 41 0.0 1 colorpair
10 40 0.0 1 colorpair
11 39 0.16 1 colorpair
12 38 0.0 0.2 colorpair
14 37 0.16 1 colorpair
15 36 0.0 1 colorpair
16 35 0.0 1 colorpair
17 34 0.0 1 colorpair
18 32 0.16 1 colorpair
19 31 0.0 1 colorpair
20 30 0.0 1 colorpair
21 29 0.16 1 colorpair
22 28 0.0 1 colorpair
45 67 0.0 1 colorpair
46 66 0.0 0.2 colorpair
47 65 0.0 1 colorpair
48 64 0.0 1 colorpair
50 63 0.0 1 colorpair
51 62 0.16 1 colorpair
52 61 0.0 1 colorpair
53 60 0.16 1 colorpair
54 59 0.0 1 colorpair
68 143 0.0 1 colorpair
69 142 0.0 1 colorpair
71 140 0.0 1 colorpair
72 139 0.0 1 colorpair
73 138 0.0 1 colorpair
74 137 0.0 1 colorpair
78 133 0.0 1 colorpair
79 132 0.0 1 colorpair
80 131 0.0 1 colorpair
81 130 0.0 1 colorpair
82 129 0.0 1 colorpair
83 128 0.0 0.2 colorpair
84 127 0.0 1 colorpair
85 125 0.0 1 colorpair
86 124 0.0 1 colorpair
87 123 0.0 1 colorpair
91 121 0.0 1 colorpair
92 120 0.0 1 colorpair
95 117 0.0 1 colorpair
96 116 0.16 1 colorpair
97 115 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
11 cmark
12 38 2 gmark
14 cmark
37 cmark
18 cmark
29 cmark
46 66 2 gmark
51 cmark
62 cmark
53 cmark
60 cmark
83 128 2 gmark
96 cmark
116 cmark
97 115 2 gmark

% End Annotations
showpage
end
%%EOF
