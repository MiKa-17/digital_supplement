%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 07:17:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___________UGUCUCUGAUCGUCAUCUGUUUAACCGUCAUAGUAUUCACACUGGUGACAAGAAAAUCGCUCUGCGAGGUGCGUAUCCGAGACGGCCAUACGGAGGUUGCUGCCUUCAUAGCUUACGAAUCGAA___GGAGUAAGAGACCAGGCGGGGGAGAAAUCCCGCGCCACCGCUUAU__GUG_UUACGCAUCC____UCAACGCACCCGUAUUAA__________________\
) } def
/len { sequence length } bind def

/coor [
[-225.40461731 519.13452148]
[-239.54684448 524.13824463]
[-253.84445190 528.67901611]
[-268.28228760 532.75195312]
[-282.84503174 536.35284424]
[-297.51727295 539.47778320]
[-312.28344727 542.12347412]
[-327.12792969 544.28717041]
[-342.03497314 545.96649170]
[-356.98876953 547.15972900]
[-371.97348022 547.86560059]
[-386.97323608 548.08331299]
[-401.97213745 547.81268311]
[-416.95425415 547.05401611]
[-431.90377808 545.80804443]
[-446.80477905 544.07617188]
[-461.64154053 541.86022949]
[-476.39831543 539.16247559]
[-491.05944824 535.98583984]
[-505.60940552 532.33367920]
[-520.03277588 528.20983887]
[-534.31433105 523.61871338]
[-548.43884277 518.56512451]
[-562.39135742 513.05450439]
[-576.15710449 507.09268188]
[-589.72149658 500.68591309]
[-603.07019043 493.84103394]
[-616.18902588 486.56527710]
[-629.06408691 478.86639404]
[-641.68170166 470.75247192]
[-654.02856445 462.23217773]
[-666.09149170 453.31448364]
[-677.85778809 444.00891113]
[-689.31500244 434.32525635]
[-700.45086670 424.27380371]
[-711.25372314 413.86520386]
[-721.71203613 403.11050415]
[-731.81475830 392.02108765]
[-741.55114746 380.60870361]
[-750.91088867 368.88543701]
[-759.88409424 356.86373901]
[-768.46130371 344.55633545]
[-776.63330078 331.97628784]
[-784.39154053 319.13690186]
[-791.72772217 306.05175781]
[-798.63409424 292.73480225]
[-805.10333252 279.20007324]
[-811.12866211 265.46194458]
[-816.70355225 251.53500366]
[-821.82220459 237.43395996]
[-826.47912598 223.17378235]
[-830.66949463 208.76956177]
[-834.38873291 194.23660278]
[-837.63293457 179.59027100]
[-840.39874268 164.84611511]
[-842.68316650 150.01972961]
[-844.48376465 135.12686157]
[-845.79864502 120.18325806]
[-846.62640381 105.20478821]
[-846.96618652 90.20730591]
[-846.81768799 75.20671082]
[-846.18090820 60.21889496]
[-845.05670166 45.25975037]
[-843.44610596 30.34512329]
[-841.35095215 15.49082470]
[-838.77337646 0.71259350]
[-835.71618652 -13.97390842]
[-832.18255615 -28.55311584]
[-828.17620850 -43.00958252]
[-823.70147705 -57.32798004]
[-818.76300049 -71.49314117]
[-813.36614990 -85.49005127]
[-807.51654053 -99.30387878]
[-801.22033691 -112.91999054]
[-794.48431396 -126.32393646]
[-787.31561279 -139.50154114]
[-779.72174072 -152.43881226]
[-771.71075439 -165.12203979]
[-763.29119873 -177.53781128]
[-754.47198486 -189.67294312]
[-745.26245117 -201.51458740]
[-735.67236328 -213.05018616]
[-725.71191406 -224.26751709]
[-715.39154053 -235.15469360]
[-704.72229004 -245.70018005]
[-693.71545410 -255.89280701]
[-682.38269043 -265.72177124]
[-670.73602295 -275.17663574]
[-658.78771973 -284.24737549]
[-646.55053711 -292.92440796]
[-634.03741455 -301.19854736]
[-621.26159668 -309.06100464]
[-608.23657227 -316.50341797]
[-594.97625732 -323.51794434]
[-581.49462891 -330.09713745]
[-567.80603027 -336.23403931]
[-553.92486572 -341.92208862]
[-539.86596680 -347.15533447]
[-525.64416504 -351.92819214]
[-511.27450562 -356.23559570]
[-496.77230835 -360.07296753]
[-482.15286255 -363.43630981]
[-467.43170166 -366.32199097]
[-452.62438965 -368.72695923]
[-437.74667358 -370.64871216]
[-422.81427002 -372.08514404]
[-407.84301758 -373.03479004]
[-392.84878540 -373.49664307]
[-377.84750366 -373.47018433]
[-362.85498047 -372.95544434]
[-347.88720703 -371.95297241]
[-332.95996094 -370.46383667]
[-318.08911133 -368.48962402]
[-303.29037476 -366.03240967]
[-288.57949829 -363.09481812]
[-273.97201538 -359.67993164]
[-259.48339844 -355.79138184]
[-245.12907410 -351.43331909]
[-230.92419434 -346.61032104]
[-216.88381958 -341.32751465]
[-203.02284241 -335.59051514]
[-189.35595703 -329.40536499]
[-175.89762878 -322.77865601]
[-162.66212463 -315.71737671]
[-149.66348267 -308.22903442]
[-136.91546631 -300.32156372]
[-124.43160248 -292.00332642]
[-112.22509766 -283.28317261]
[-100.30889893 -274.17031860]
[-88.69564056 -264.67440796]
[-77.39762115 -254.80554199]
[-66.42681122 -244.57415771]
[-55.79484558 -233.99108887]
[-45.51299286 -223.06756592]
[-35.59214020 -211.81515503]
[-26.04280663 -200.24578857]
[-16.87511253 -188.37173462]
[-8.09877205 -176.20555115]
[0.27691340 -163.76016235]
[8.24306774 -151.04873657]
[15.79124928 -138.08474731]
[22.91345787 -124.88194275]
[29.60214615 -111.45430756]
[35.85022354 -97.81607056]
[41.65107346 -83.98168945]
[46.99854660 -69.96582794]
[51.88697433 -55.78332901]
[56.31117249 -41.44923019]
[60.26646042 -26.97872162]
[63.74864578 -12.38713646]
[66.75402832 2.31006026]
[69.27943420 17.09729385]
[71.32218170 31.95889282]
[72.88011169 46.87910843]
[73.95156097 61.84212494]
[74.53540802 76.83209229]
[74.63102722 91.83312225]
[89.62588501 92.22577667]
[104.62588501 92.22577667]
[119.62074280 91.83312225]
[121.64046478 76.93624115]
[126.02378845 62.55630493]
[132.65718079 49.06577682]
[141.36880493 36.81409836]
[151.93302917 26.11861610]
[164.07620239 17.25636864]
[177.48379517 10.45691013]
[191.80851746 5.89636278]
[206.67932129 3.69285583]
[221.71101379 3.90346527]
[236.51425171 6.52273560]
[250.70556641 11.48282242]
[263.91738892 18.65524673]
[275.80752563 27.85422516]
[286.06796265 38.84148026]
[294.43292236 51.33242035]
[300.68572998 65.00349426]
[304.66445923 79.50059509]
[306.26602173 94.44821167]
[305.44894409 109.45915985]
[302.23440552 124.14462280]
[296.70562744 138.12420654]
[289.00585938 151.03581238]
[279.33453369 162.54501343]
[267.94213867 172.35366821]
[255.12379456 180.20770264]
[241.21150208 185.90371704]
[226.56564331 189.29414368]
[211.56556702 190.29115295]
[196.59982300 188.86894226]
[182.05606079 185.06434631]
[168.31098938 178.97590637]
[155.72064209 170.76132202]
[144.61112976 160.63339233]
[135.27023315 148.85443115]
[127.93989563 135.72956848]
[122.80999756 121.59873199]
[120.01339722 106.82798004]
[105.01853943 107.22063446]
[102.75202942 109.22573853]
[99.71139526 110.45757294]
[96.17903900 110.62976074]
[92.53852844 109.56331635]
[89.23323059 107.22063446]
[74.23837280 106.82798004]
[73.35779572 121.80344391]
[71.99023438 136.74230957]
[70.13714600 151.62875366]
[67.80049133 166.44697571]
[64.98274231 181.18130493]
[61.68689728 195.81610107]
[57.91643524 210.33586121]
[53.67536163 224.72520447]
[48.96816635 238.96888733]
[43.79983902 253.05178833]
[38.17585754 266.95901489]
[32.10218048 280.67581177]
[25.58524704 294.18762207]
[18.63195992 307.48019409]
[11.24969006 320.53936768]
[3.44626093 333.35131836]
[-4.77005816 345.90249634]
[-13.39056015 358.17959595]
[-22.40610886 370.16958618]
[-31.80714989 381.85974121]
[-41.58372116 393.23773193]
[-51.72546005 404.29147339]
[-62.22161865 415.00924683]
[-73.06108093 425.37969971]
[-84.23234558 435.39181519]
[-95.72358704 445.03503418]
[-107.52262115 454.29907227]
[-119.61694336 463.17416382]
[-131.99374390 471.65090942]
[-144.63989258 479.72027588]
[-157.54200745 487.37374878]
[-170.68638611 494.60317993]
[-184.05912781 501.40097046]
[-197.64604187 507.75988770]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[157 205]
[158 204]
[159 199]
[160 198]
] def

init

% Start Annotations
157 205 0.16 0.6 colorpair
160 198 0.32 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
157 205 1 gmark
205 cmark
158 204 15 gmark
204 cmark
159 199 7 gmark
199 cmark
160 cmark
198 cmark

% End Annotations
showpage
end
%%EOF
