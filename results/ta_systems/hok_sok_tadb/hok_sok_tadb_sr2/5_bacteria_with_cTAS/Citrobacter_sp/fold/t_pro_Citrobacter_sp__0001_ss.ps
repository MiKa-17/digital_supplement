%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 01:56:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAACUGCCACGAAGUACCCUUAUCUGGUGUGUGUUAAUAGUGUGUCUCACACUGCUGAUAUUCACAUACCUGACCCGAAAAUCGCUCUGCGAAAUCCGCUACAGGGACGGAAACAGGGAGGUGGCGGCUUUAAUGGCUUACGAAUCCGCUAAG\
) } def
/len { sequence length } bind def

/coor [
[211.55763245 468.73205566]
[205.99114990 454.80316162]
[200.42465210 440.87426758]
[194.85815430 426.94537354]
[189.29167175 413.01647949]
[183.72517395 399.08758545]
[178.01960754 385.21508789]
[172.17552185 371.40036011]
[166.33145142 357.58563232]
[160.48736572 343.77087402]
[154.64329529 329.95614624]
[148.79920959 316.14141846]
[142.95513916 302.32669067]
[133.50132751 301.63629150]
[124.90946960 297.49658203]
[118.39914703 290.44778442]
[114.91179657 281.44625854]
[114.97471619 271.73486328]
[118.62181091 262.67138672]
[125.38290405 255.53868103]
[120.66209412 241.30091858]
[115.94128418 227.06315613]
[111.22047424 212.82537842]
[106.49966431 198.58761597]
[101.63664246 184.39779663]
[96.63189697 170.25733948]
[91.62715912 156.11688232]
[86.62241364 141.97642517]
[81.61766815 127.83596802]
[71.27965546 116.96741486]
[57.40714645 111.26184082]
[43.53463745 105.55627441]
[27.82872391 107.46279907]
[19.00115967 95.46599579]
[5.12865257 89.76042175]
[-8.74385452 84.05485535]
[-22.61636162 78.34928131]
[-36.48886871 72.64371490]
[-50.36137772 66.93814087]
[-66.06729126 68.84466553]
[-74.89485931 56.84786224]
[-88.76736450 51.14228821]
[-102.63986969 45.43671799]
[-116.51237488 39.73114777]
[-130.38488770 34.02557755]
[-144.25740051 28.32000732]
[-158.12989807 22.61443710]
[-175.07832336 22.18154526]
[-179.35414124 5.77563858]
[-164.77304077 -2.87468195]
[-152.42433167 8.74193001]
[-138.55181885 14.44750023]
[-124.67931366 20.15307045]
[-110.80680847 25.85864067]
[-96.93430328 31.56421280]
[-83.06179047 37.26978302]
[-69.18928528 42.97535324]
[-54.47562408 40.66072464]
[-44.65580750 53.06563187]
[-30.78330040 58.77120209]
[-16.91079140 64.47677612]
[-3.03828430 70.18234253]
[10.83422279 75.88791656]
[24.70672989 81.59348297]
[39.42039108 79.27886200]
[49.24020767 91.68376923]
[63.11271667 97.38933563]
[76.98522186 103.09490967]
[78.90194702 93.35865784]
[84.53194427 85.77376556]
[92.45624542 81.57219696]
[100.94157410 81.21474457]
[107.60393524 67.77551270]
[114.26629639 54.33627701]
[120.92864990 40.89704514]
[116.11254120 26.08344078]
[123.06056976 12.54905415]
[137.21275330 8.04892445]
[143.87512207 -5.39030886]
[150.53747559 -18.82954216]
[157.19982910 -32.26877594]
[163.86218262 -45.70800781]
[159.04608154 -60.52161407]
[165.99411011 -74.05599976]
[180.14630127 -78.55612946]
[186.80865479 -91.99536133]
[193.47100830 -105.43459320]
[200.13336182 -118.87383270]
[201.75122070 -135.75041199]
[218.41612244 -138.86767578]
[226.02487183 -123.71700287]
[213.57260132 -112.21147156]
[206.91024780 -98.77223969]
[200.24787903 -85.33300781]
[193.58552551 -71.89376831]
[198.57237244 -57.90567017]
[192.00723267 -44.18146896]
[177.30142212 -39.04565048]
[170.63906860 -25.60641861]
[163.97669983 -12.16718483]
[157.31434631 1.27204871]
[150.65199280 14.71128178]
[155.63883972 28.69938278]
[149.07369995 42.42358398]
[134.36788940 47.55940247]
[127.70552826 60.99863434]
[121.04316711 74.43786621]
[114.38081360 87.87710571]
[120.13910675 102.38527679]
[112.89520264 117.51615143]
[95.75812531 122.83122253]
[100.76287079 136.97167969]
[105.76760864 151.11213684]
[110.77235413 165.25259399]
[115.77709961 179.39305115]
[121.62236023 186.48678589]
[120.73743439 193.86680603]
[125.45824432 208.10456848]
[130.17904663 222.34234619]
[134.89985657 236.58010864]
[139.62066650 250.81787109]
[158.97044373 258.91015625]
[166.07235718 278.33569336]
[156.76986694 296.48263550]
[162.61395264 310.29736328]
[168.45802307 324.11209106]
[174.30210876 337.92681885]
[180.14617920 351.74154663]
[185.99026489 365.55627441]
[191.83433533 379.37100220]
[198.09465027 386.10125732]
[197.65406799 393.52108765]
[203.22056580 407.44998169]
[208.78706360 421.37887573]
[214.35354614 435.30776978]
[219.92004395 449.23669434]
[225.48652649 463.16558838]
[237.04013062 468.98120117]
[241.37341309 480.74142456]
[236.66616821 491.92251587]
[241.95283508 505.95999146]
[247.23951721 519.99749756]
[252.52618408 534.03497314]
[257.95303345 548.01885986]
[263.51953125 561.94775391]
[276.73171997 571.66223145]
[274.65615845 587.92950439]
[259.42800903 594.01519775]
[246.71270752 583.65887451]
[249.59063721 567.51428223]
[244.02415466 553.58538818]
[238.59117126 548.51281738]
[238.48870850 539.32165527]
[233.20202637 525.28417969]
[227.91534424 511.24667358]
[222.62867737 497.20919800]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 137]
[2 136]
[3 135]
[4 134]
[5 133]
[6 132]
[7 130]
[8 129]
[9 128]
[10 127]
[11 126]
[12 125]
[13 124]
[20 121]
[21 120]
[22 119]
[23 118]
[24 117]
[25 115]
[26 114]
[27 113]
[28 112]
[29 111]
[30 68]
[31 67]
[32 66]
[34 64]
[35 63]
[36 62]
[37 61]
[38 60]
[39 59]
[41 57]
[42 56]
[43 55]
[44 54]
[45 53]
[46 52]
[47 51]
[72 108]
[73 107]
[74 106]
[75 105]
[78 102]
[79 101]
[80 100]
[81 99]
[82 98]
[85 95]
[86 94]
[87 93]
[88 92]
[140 156]
[141 155]
[142 154]
[143 153]
[144 151]
[145 150]
] def

init

% Start Annotations
1 137 0.0 1 colorpair
2 136 0.0 0.6 colorpair
3 135 0.16 0.6 colorpair
4 134 0.0 1 colorpair
5 133 0.0 0.6 colorpair
6 132 0.0 0.6 colorpair
7 130 0.0 1 colorpair
8 129 0.0 0.6 colorpair
9 128 0.0 0.6 colorpair
10 127 0.0 1 colorpair
11 126 0.0 0.6 colorpair
12 125 0.16 1 colorpair
13 124 0.0 1 colorpair
20 121 0.0 1 colorpair
21 120 0.16 1 colorpair
22 119 0.0 0.6 colorpair
23 118 0.0 0.6 colorpair
24 117 0.16 0.6 colorpair
25 115 0.16 0.6 colorpair
26 114 0.16 1 colorpair
27 113 0.0 0.6 colorpair
28 112 0.16 1 colorpair
29 111 0.0 1 colorpair
30 68 0.0 1 colorpair
31 67 0.0 1 colorpair
32 66 0.16 1 colorpair
34 64 0.0 1 colorpair
35 63 0.0 1 colorpair
36 62 0.32 1 colorpair
37 61 0.16 1 colorpair
38 60 0.0 1 colorpair
39 59 0.16 0.6 colorpair
41 57 0.16 1 colorpair
42 56 0.0 0.6 colorpair
43 55 0.0 1 colorpair
44 54 0.16 1 colorpair
45 53 0.0 1 colorpair
46 52 0.0 1 colorpair
47 51 0.0 0.6 colorpair
72 108 0.16 1 colorpair
73 107 0.0 0.6 colorpair
74 106 0.0 1 colorpair
75 105 0.0 0.6 colorpair
78 102 0.16 0.6 colorpair
79 101 0.0 1 colorpair
80 100 0.0 0.6 colorpair
81 99 0.16 0.6 colorpair
82 98 0.0 1 colorpair
85 95 0.0 1 colorpair
86 94 0.0 1 colorpair
87 93 0.16 1 colorpair
88 92 0.0 1 colorpair
140 156 0.0 1 colorpair
141 155 0.0 1 colorpair
142 154 0.0 1 colorpair
143 153 0.0 1 colorpair
144 151 0.0 1 colorpair
145 150 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
2 136 1 gmark
3 135 1 gmark
135 cmark
5 133 1 gmark
6 132 1 gmark
8 129 1 gmark
9 128 1 gmark
11 126 1 gmark
12 cmark
21 cmark
22 119 1 gmark
23 118 1 gmark
24 117 1 gmark
24 cmark
117 cmark
25 115 1 gmark
25 cmark
115 cmark
114 cmark
27 113 1 gmark
112 cmark
66 cmark
36 cmark
62 cmark
37 cmark
61 cmark
39 59 1 gmark
39 cmark
57 cmark
42 56 1 gmark
54 cmark
47 51 1 gmark
72 cmark
108 cmark
73 107 1 gmark
75 105 1 gmark
78 102 1 gmark
78 cmark
102 cmark
80 100 1 gmark
81 99 1 gmark
81 cmark
99 cmark
87 cmark
93 cmark

% End Annotations
showpage
end
%%EOF
