%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 06:33:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_GUAAGAGGCUAACCUGAUGUGGACGAAACAUAGAGAC_GCCUCACGGUGAUUAAU___AAUCAACU______GGGGCUAUCCUCUGUCUGCCACACAAC_________AAACACC_________UGAGACAAAAAGCCUCAAGCACC____________\
) } def
/len { sequence length } bind def

/coor [
[92.61595154 165.63455200]
[82.89285278 163.79470825]
[73.55376434 160.52284241]
[64.80831146 155.89242554]
[56.85281372 150.00738525]
[49.86584473 142.99983215]
[37.44484711 151.40927124]
[25.02385139 159.81872559]
[12.60285568 168.22817993]
[0.18185909 176.63763428]
[-12.23913670 185.04707336]
[-24.66013336 193.45652771]
[-37.08113098 201.86598206]
[-49.50212479 210.27543640]
[-61.92312241 218.68487549]
[-74.34411621 227.09432983]
[-86.76511383 235.50378418]
[-99.18611145 243.91322327]
[-111.60710907 252.32267761]
[-124.02809906 260.73211670]
[-136.44909668 269.14157104]
[-148.87010193 277.55102539]
[-153.30364990 292.96929932]
[-168.17703247 298.98281860]
[-182.08064270 290.97848511]
[-184.34883118 275.09658813]
[-173.24163818 263.52032471]
[-157.27954102 265.13003540]
[-144.85855103 256.72058105]
[-132.43754578 248.31114197]
[-120.01655579 239.90168762]
[-107.59555817 231.49223328]
[-95.17456818 223.08277893]
[-82.75357056 214.67333984]
[-70.33257294 206.26388550]
[-57.91157532 197.85443115]
[-45.49058151 189.44497681]
[-33.06958389 181.03553772]
[-20.64858818 172.62608337]
[-8.22759151 164.21662903]
[4.19340515 155.80717468]
[16.61440086 147.39773560]
[29.03539658 138.98828125]
[41.45639420 130.57882690]
[34.66799927 109.70301056]
[35.09631729 87.75537872]
[42.69403458 67.16030884]
[30.61060143 58.27264404]
[18.52716637 49.38497925]
[6.44373178 40.49731064]
[-5.63970280 31.60964584]
[-17.72313690 22.72197914]
[-29.80657196 13.83431435]
[-45.39076614 16.46270370]
[-58.22039795 7.23361397]
[-60.68387604 -8.37749863]
[-51.31966019 -21.10883713]
[-35.68337631 -23.40712738]
[-23.05175018 -13.90883064]
[-20.91890717 1.75087929]
[-8.83547211 10.63854504]
[3.24796295 19.52621078]
[15.33139801 28.41387749]
[27.41483307 37.30154419]
[39.49826813 46.18920898]
[51.58170319 55.07687378]
[65.39313507 43.74358749]
[81.73676300 36.52659607]
[99.41671753 33.95396805]
[117.13934326 36.21393967]
[133.60787964 43.14115143]
[147.61732483 54.22873688]
[158.14260864 68.66541290]
[172.06977844 63.09459686]
[185.99693298 57.52377701]
[195.93655396 45.21464920]
[210.62707520 47.67180252]
[224.55424500 42.10098267]
[238.48141479 36.53016663]
[252.40858459 30.95934486]
[254.69139099 15.83532429]
[264.17526245 3.96295142]
[278.23492432 -1.53179932]
[293.05801392 0.73349297]
[304.67874146 10.05146313]
[318.60589600 4.48064375]
[332.53305054 -1.09017587]
[346.46023560 -6.66099548]
[360.38739014 -12.23181534]
[374.31457520 -17.80263519]
[388.24172974 -23.37345314]
[402.16888428 -28.94427299]
[416.09606934 -34.51509476]
[430.02322388 -40.08591080]
[443.95040894 -45.65673065]
[441.10311890 -60.43135452]
[441.10366821 -75.47782898]
[443.95202637 -90.25224304]
[449.54522705 -104.22051239]
[457.68112183 -116.87767792]
[468.06555176 -127.76620483]
[480.32315063 -136.49247742]
[494.01080322 -142.74104309]
[508.63372803 -146.28602600]
[523.66326904 -146.99926758]
[538.55621338 -144.85499573]
[552.77404785 -139.93070984]
[565.80291748 -132.40443420]
[577.17181396 -122.54823303]
[586.46978760 -110.71839905]
[593.36065674 -97.34258270]
[597.59533691 -82.90430450]
[599.02075195 -67.92549896]
[597.58538818 -52.94763565]
[593.34112549 -38.51216507]
[586.44140625 -25.14091873]
[577.13562012 -13.31725311]
[565.76019287 -3.46858931]
[552.72631836 4.04904938]
[538.50518799 8.96390533]
[523.61090088 11.09830952]
[508.58181763 10.37510395]
[493.96124268 6.82043362]
[480.27774048 0.56279665]
[468.02590942 -8.17159748]
[457.64871216 -19.06700516]
[449.52120972 -31.72956467]
[435.59405518 -26.15874481]
[421.66687012 -20.58792686]
[407.73971558 -15.01710701]
[393.81256104 -9.44628716]
[379.88537598 -3.87546778]
[365.95822144 1.69535172]
[352.03103638 7.26617098]
[338.10388184 12.83699036]
[324.17672729 18.40781021]
[310.24954224 23.97863007]
[308.26065063 38.74039841]
[299.08886719 50.60356140]
[285.11822510 56.32083893]
[270.06277466 54.26411057]
[257.97940063 44.88651276]
[244.05223083 50.45733261]
[230.12506104 56.02815247]
[216.19790649 61.59897232]
[207.25445557 73.50963593]
[191.56776428 71.45094299]
[177.64059448 77.02176666]
[163.71342468 82.59258270]
[165.59904480 92.30690765]
[166.01216125 102.19392395]
[164.94349670 112.03168488]
[162.41703796 121.59937286]
[158.48948669 130.68222046]
[153.24902344 139.07633972]
[146.81327820 146.59330750]
[139.32670593 153.06439209]
[130.95735168 158.34432983]
[121.89311218 162.31460571]
[112.33742523 164.88610840]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 44]
[7 43]
[8 42]
[9 41]
[10 40]
[11 39]
[12 38]
[13 37]
[14 36]
[15 35]
[16 34]
[17 33]
[18 32]
[19 31]
[20 30]
[21 29]
[22 28]
[47 66]
[48 65]
[49 64]
[50 63]
[51 62]
[52 61]
[53 60]
[73 149]
[74 148]
[75 147]
[77 145]
[78 144]
[79 143]
[80 142]
[85 137]
[86 136]
[87 135]
[88 134]
[89 133]
[90 132]
[91 131]
[92 130]
[93 129]
[94 128]
[95 127]
] def

init

% Start Annotations
6 44 0.0 1 colorpair
7 43 0.0 1 colorpair
8 42 0.0 1 colorpair
9 41 0.0 1 colorpair
10 40 0.0 1 colorpair
11 39 0.0 0.2 colorpair
12 38 0.0 0.2 colorpair
13 37 0.0 0.2 colorpair
14 36 0.0 1 colorpair
15 35 0.0 0.2 colorpair
16 34 0.0 1 colorpair
17 33 0.0 0.2 colorpair
18 32 0.0 1 colorpair
19 31 0.0 1 colorpair
20 30 0.0 1 colorpair
21 29 0.16 1 colorpair
22 28 0.0 0.2 colorpair
47 66 0.16 1 colorpair
48 65 0.0 0.2 colorpair
49 64 0.0 1 colorpair
50 63 0.16 1 colorpair
51 62 0.16 1 colorpair
52 61 0.16 1 colorpair
53 60 0.0 1 colorpair
74 148 0.0 1 colorpair
75 147 0.0 1 colorpair
77 145 0.0 1 colorpair
78 144 0.0 1 colorpair
79 143 0.0 1 colorpair
80 142 0.0 0.2 colorpair
85 137 0.0 1 colorpair
86 136 0.0 1 colorpair
87 135 0.16 1 colorpair
88 134 0.0 1 colorpair
89 133 0.0 0.2 colorpair
90 132 0.0 1 colorpair
91 131 0.0 1 colorpair
92 130 0.0 0.2 colorpair
93 129 0.0 1 colorpair
94 128 0.0 0.2 colorpair
95 127 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
11 39 2 gmark
12 38 2 gmark
13 37 2 gmark
15 35 2 gmark
17 33 2 gmark
29 cmark
22 28 2 gmark
47 cmark
66 cmark
48 65 2 gmark
63 cmark
51 cmark
61 cmark
73 149 3 gmark
80 142 2 gmark
87 cmark
135 cmark
89 133 2 gmark
92 130 2 gmark
94 128 2 gmark
95 cmark

% End Annotations
showpage
end
%%EOF
