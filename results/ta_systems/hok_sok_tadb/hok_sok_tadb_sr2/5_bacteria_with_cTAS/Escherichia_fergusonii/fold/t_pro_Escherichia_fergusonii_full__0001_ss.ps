%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 06:33:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
____________________AUGCCGAAGAAAUAUGCAUUACUGGCA_GUAAUAGUGAUGUGUUUCACGCUGUUGGUAUUCACCUUGAUGAUAAGAGAAUCGCUGUGUGAGUUGCGUAUCAAAGAAGGGAAUAAGGAGCUGACGGCGUUUAUAGCCUACGAAUCGAAAA__\
) } def
/len { sequence length } bind def

/coor [
[136.52770996 453.44677734]
[122.37329865 454.62420654]
[108.18313599 455.23504639]
[93.97990417 455.27828979]
[79.78629303 454.75387573]
[65.62496948 453.66262817]
[51.51857758 452.00631714]
[37.48964691 449.78756714]
[23.56059265 447.00994873]
[9.75367165 443.67788696]
[-3.90905595 439.79672241]
[-17.40575981 435.37261963]
[-30.71487427 430.41265869]
[-43.81513596 424.92477417]
[-56.68561172 418.91772461]
[-69.30574036 412.40112305]
[-81.65535736 405.38537598]
[-93.71472931 397.88168335]
[-105.46458435 389.90206909]
[-116.88615417 381.45922852]
[-127.96118927 372.56668091]
[-138.67199707 363.23861694]
[-149.00144958 353.48999023]
[-158.93305969 343.33633423]
[-168.45094299 332.79385376]
[-177.53991699 321.87945557]
[-186.18544006 310.61053467]
[-194.37368774 299.00509644]
[-202.09161377 287.08169556]
[-209.32684326 274.85937500]
[-216.06784058 262.35766602]
[-222.30384827 249.59655762]
[-228.02487183 236.59642029]
[-233.22178650 223.37802124]
[-237.88629150 209.96250916]
[-242.01092529 196.37129211]
[-245.58909607 182.62609863]
[-248.61509705 168.74888611]
[-251.08409119 154.76182556]
[-252.99212646 140.68727112]
[-254.33616638 126.54770660]
[-255.11404419 112.36572266]
[-255.32453918 98.16398621]
[-254.96730042 83.96517944]
[-254.04289246 69.79199219]
[-252.55281067 55.66707230]
[-250.49943542 41.61298752]
[-247.88603210 27.65219116]
[-244.71678162 13.80698967]
[-240.99674988 0.09950631]
[-236.73188782 -13.44835854]
[-231.92900085 -26.81495857]
[-226.59576416 -39.97893524]
[-220.74070740 -52.91925812]
[-214.37316895 -65.61524963]
[-207.50332642 -78.04662323]
[-200.14216614 -90.19351959]
[-192.30145264 -102.03652954]
[-183.99369812 -113.55672455]
[-175.23219299 -124.73571014]
[-166.03091431 -135.55561829]
[-156.40458679 -145.99914551]
[-146.36859131 -156.04963684]
[-135.93893433 -165.69100952]
[-125.13230896 -174.90788269]
[-113.96597290 -183.68550110]
[-102.45776367 -192.00984192]
[-90.62606812 -199.86763000]
[-78.48979950 -207.24629211]
[-66.06834412 -214.13404846]
[-53.38154602 -220.51988220]
[-40.44968033 -226.39360046]
[-27.29340553 -231.74581909]
[-13.93374538 -236.56797791]
[-0.39204338 -240.85237122]
[13.31006241 -244.59214783]
[27.15067863 -247.78135681]
[41.10769272 -250.41488647]
[55.15880585 -252.48852539]
[69.28156281 -253.99897766]
[83.45339966 -254.94380188]
[97.65167999 -255.32151794]
[111.85370636 -255.13150024]
[126.03679657 -254.37406921]
[140.17828369 -253.05043030]
[154.25556946 -251.16268921]
[168.24617004 -248.71386719]
[182.12773132 -245.70787048]
[195.87808228 -242.14952087]
[209.47521973 -238.04447937]
[222.89746094 -233.39932251]
[236.12332153 -228.22148132]
[249.13169861 -222.51919556]
[261.90179443 -216.30160522]
[274.41320801 -209.57864380]
[286.64593506 -202.36102295]
[298.58044434 -194.66030884]
[310.19769287 -186.48880005]
[321.47906494 -177.85954285]
[331.07415771 -189.38923645]
[340.66925049 -200.91894531]
[350.26434326 -212.44865417]
[359.85943604 -223.97836304]
[365.34381104 -240.02075195]
[382.27746582 -239.19169617]
[386.16851807 -222.69029236]
[371.38916016 -214.38327026]
[361.79406738 -202.85356140]
[352.19897461 -191.32385254]
[342.60385132 -179.79414368]
[333.00875854 -168.26443481]
[345.74935913 -156.64401245]
[357.91116333 -144.41914368]
[369.46557617 -131.61865234]
[380.38534546 -118.27265167]
[390.64477539 -104.41259766]
[400.21969604 -90.07112122]
[409.08755493 -75.28199768]
[417.22747803 -60.08006668]
[424.62026978 -44.50112152]
[431.24856567 -28.58185768]
[437.09667969 -12.35976601]
[442.15090942 4.12694883]
[446.39935303 20.83945656]
[449.83193970 37.73839951]
[452.44064331 54.78397751]
[454.21929932 71.93604279]
[455.16372681 89.15420532]
[455.27166748 106.39791107]
[454.54290771 123.62654877]
[452.97915649 140.79954529]
[450.58410645 157.87644958]
[447.36337280 174.81704712]
[443.32452393 191.58143616]
[438.47714233 208.13014221]
[432.83258057 224.42419434]
[426.40414429 240.42520142]
[419.20697021 256.09548950]
[411.25805664 271.39816284]
[402.57604980 286.29714966]
[393.18145752 300.75738525]
[383.09637451 314.74481201]
[372.34457397 328.22650146]
[360.95135498 341.17065430]
[371.74990845 351.58178711]
[382.54846191 361.99288940]
[398.07894897 360.16589355]
[411.12191772 368.79226685]
[415.51889038 383.79895020]
[409.19375610 398.10025024]
[395.13302612 404.94348145]
[379.97576904 401.09750366]
[370.87875366 388.37829590]
[372.13732910 372.79144287]
[361.33877563 362.38034058]
[350.54025269 351.96920776]
[340.27032471 361.78057861]
[329.61651611 371.17364502]
[318.59582520 380.13345337]
[307.22589111 388.64569092]
[295.52481079 396.69671631]
[283.51135254 404.27368164]
[271.20468140 411.36450195]
[258.62448120 417.95782471]
[245.79081726 424.04312134]
[232.72421265 429.61065674]
[219.44554138 434.65155029]
[205.97602844 439.15774536]
[192.33717346 443.12203979]
[178.55079651 446.53811646]
[164.63891602 449.40048218]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[99 111]
[100 110]
[101 109]
[102 108]
[103 107]
[144 156]
[145 155]
[146 154]
] def

init

% Start Annotations
100 110 0.0 0.2 colorpair
101 109 0.0 0.2 colorpair
102 108 0.32 0.2 colorpair
103 107 0.16 1 colorpair
144 156 0.16 0.2 colorpair
145 155 0.0 1 colorpair
146 154 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
99 111 4 gmark
99 cmark
111 cmark
100 110 2 gmark
101 109 2 gmark
102 108 2 gmark
102 cmark
108 cmark
103 cmark
144 156 2 gmark
156 cmark
146 cmark

% End Annotations
showpage
end
%%EOF
