%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 02:04:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAGAGGCUACUCUCAACCUGUUGGGUGUUGAGGGGUAGCCUCGGGUAAAUGCAAAUUUCCCGGGGCUUUCCACUUUCUGUCCCUCAACAAUGCUCAAGACAGAAAGUCUUAAGCACC\
) } def
/len { sequence length } bind def

/coor [
[105.96166992 114.26111603]
[99.65131378 116.88000488]
[92.24631500 116.58739471]
[85.12182617 112.96828461]
[70.93119049 117.82891846]
[56.74055099 122.68955231]
[42.54991150 127.55018616]
[28.35927200 132.41082764]
[14.16863251 137.27145386]
[-0.02200611 142.13209534]
[-14.21264458 146.99272156]
[-28.40328407 151.85336304]
[-42.59392166 156.71398926]
[-56.71916580 161.76152039]
[-70.77655792 166.99504089]
[-84.83394623 172.22857666]
[-98.89133453 177.46209717]
[-112.73050690 183.24804688]
[-126.32977295 189.57736206]
[-135.29765320 203.30722046]
[-151.65490723 202.13568115]
[-158.57458496 187.26792908]
[-148.93830872 173.99862671]
[-132.65907288 175.97808838]
[-119.05980682 169.64878845]
[-117.51296997 166.34762573]
[-114.22123718 163.67604065]
[-109.52039337 162.47810364]
[-104.12486267 163.40470886]
[-90.06747437 158.17118835]
[-76.01008606 152.93765259]
[-61.95269775 147.70413208]
[-56.71640778 142.35444641]
[-47.45455551 142.52336121]
[-33.26391983 137.66271973]
[-19.07328033 132.80207825]
[-4.88264036 127.94145203]
[9.30799866 123.08081818]
[23.49863815 118.22018433]
[37.68927765 113.35955048]
[51.87991333 108.49891663]
[66.07055664 103.63827515]
[80.26119232 98.77764130]
[86.76944733 85.26310730]
[81.72192383 71.13786316]
[76.67440796 57.01262283]
[70.76768494 49.87672424]
[71.68545532 42.44736099]
[67.01255035 28.19380188]
[62.33965302 13.94023991]
[57.66675186 -0.31332070]
[45.09654236 -10.84526443]
[48.19848633 -26.94836998]
[63.78156662 -32.05714035]
[75.81525421 -20.91611481]
[71.92031097 -4.98622131]
[76.59321594 9.26733971]
[81.26611328 23.52090073]
[85.93901825 37.77446365]
[90.79965210 51.96509933]
[95.84716797 66.09034729]
[100.89469147 80.21559143]
[112.86495209 89.25511169]
[127.83229065 90.24438477]
[142.11271667 83.43408203]
[154.30198669 91.99392700]
[169.26931763 92.98320007]
[184.23666382 93.97248077]
[199.20401001 94.96176147]
[209.16157532 83.20791626]
[223.95791626 79.61318207]
[237.86921692 85.35247040]
[245.64047241 98.03102112]
[260.60781860 99.02030182]
[275.57516479 100.00957489]
[290.54251099 100.99885559]
[305.50985718 101.98813629]
[320.47717285 102.97741699]
[335.44451904 103.96669006]
[350.41186523 104.95597076]
[365.37921143 105.94525146]
[380.34655762 106.93453217]
[386.43643188 93.05327606]
[396.90896606 82.09416962]
[410.49951172 75.38057709]
[425.56698608 73.72319794]
[440.29193115 77.32215881]
[452.89617920 85.74288177]
[461.85772705 97.96852112]
[466.09445190 112.52275848]
[465.09472656 127.64811707]
[458.97927856 141.51812744]
[448.48657227 152.45791626]
[434.88366699 159.14645386]
[419.81317139 160.77606201]
[405.09490967 157.14996338]
[392.50619507 148.70602417]
[383.56716919 136.46389771]
[379.35726929 121.90187073]
[364.38992310 120.91259766]
[349.42257690 119.92331696]
[334.45526123 118.93403625]
[319.48791504 117.94475555]
[304.52056885 116.95547485]
[289.55322266 115.96620178]
[274.58587646 114.97692108]
[259.61853027 113.98764038]
[244.65119934 112.99835968]
[235.27883911 124.54379272]
[220.73315430 128.40219116]
[206.53868103 122.89128113]
[198.21472168 109.92910004]
[183.24739075 108.93982697]
[168.28004456 107.95054626]
[153.31269836 106.96126556]
[140.10284424 113.84233093]
[126.84301758 105.21173096]
[111.87567139 104.22245026]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 43]
[5 42]
[6 41]
[7 40]
[8 39]
[9 38]
[10 37]
[11 36]
[12 35]
[13 34]
[14 32]
[15 31]
[16 30]
[17 29]
[18 25]
[19 24]
[44 62]
[45 61]
[46 60]
[48 59]
[49 58]
[50 57]
[51 56]
[63 118]
[64 117]
[66 115]
[67 114]
[68 113]
[69 112]
[73 108]
[74 107]
[75 106]
[76 105]
[77 104]
[78 103]
[79 102]
[80 101]
[81 100]
[82 99]
] def

init

% Start Annotations
4 43 0.0 1 colorpair
5 42 0.0 1 colorpair
6 41 0.0 1 colorpair
7 40 0.0 1 colorpair
8 39 0.0 1 colorpair
9 38 0.0 1 colorpair
10 37 0.0 1 colorpair
11 36 0.0 1 colorpair
12 35 0.16 1 colorpair
13 34 0.0 1 colorpair
14 32 0.16 1 colorpair
15 31 0.0 0.6 colorpair
16 30 0.0 0.6 colorpair
17 29 0.0 1 colorpair
18 25 0.0 1 colorpair
19 24 0.0 1 colorpair
44 62 0.0 1 colorpair
45 61 0.0 1 colorpair
46 60 0.0 1 colorpair
48 59 0.16 1 colorpair
49 58 0.0 1 colorpair
50 57 0.0 1 colorpair
51 56 0.0 1 colorpair
63 118 0.0 1 colorpair
64 117 0.0 1 colorpair
66 115 0.0 1 colorpair
67 114 0.0 1 colorpair
68 113 0.0 1 colorpair
69 112 0.0 1 colorpair
73 108 0.0 1 colorpair
74 107 0.0 1 colorpair
75 106 0.0 1 colorpair
76 105 0.0 1 colorpair
77 104 0.0 1 colorpair
78 103 0.0 1 colorpair
79 102 0.0 1 colorpair
80 101 0.0 1 colorpair
81 100 0.0 1 colorpair
82 99 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
35 cmark
32 cmark
15 31 1 gmark
16 30 1 gmark
48 cmark

% End Annotations
showpage
end
%%EOF
