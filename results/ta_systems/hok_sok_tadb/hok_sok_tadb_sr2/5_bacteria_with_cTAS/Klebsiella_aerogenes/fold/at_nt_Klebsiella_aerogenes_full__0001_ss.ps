%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 06:33:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__CUGUUCUGGUGCGUAUUAAUCGUGUGUUUAACGCUCUUGAUAUUCACAUGCCUGACCCGGA_ACCCCCUAUGCGAAGUCCGGCUCAAGGACGGGAACAGGGAGGUCGCGGCAAGCCUGGCUUACGAAUCC___GAUAAGUAGCAACCUCGAGGGGGGGGAAACCCCCCCCAUUCAGGGC_______UGC_GUUGGUCGGACAUGCCUGAAGCGCCUUUAUGAAGGGG___\
) } def
/len { sequence length } bind def

/coor [
[-13.81844330 202.30549622]
[-5.38677454 189.89958191]
[4.03030205 178.22401428]
[14.36981964 167.35690308]
[25.56264305 157.37086487]
[37.53393173 148.33271790]
[50.20363617 140.30285645]
[63.48704529 133.33500671]
[77.29534149 127.47573090]
[91.53618622 122.76422119]
[106.11436462 119.23197937]
[120.93239594 116.90262604]
[135.90402222 115.79130554]
[120.96159363 114.47837067]
[106.01916504 113.16544342]
[91.86330414 118.12644196]
[81.00940704 128.47984314]
[70.15550995 138.83325195]
[59.30161285 149.18664551]
[48.44771576 159.54005432]
[37.59382248 169.89346313]
[39.63071442 181.58758545]
[35.81565094 192.70143127]
[27.20334053 200.51809692]
[16.00584221 203.18577576]
[5.02514267 200.15562439]
[-6.10396767 210.21260071]
[-17.23307800 220.26959229]
[-19.47667313 236.15498352]
[-33.36787796 244.18081665]
[-48.25054932 238.19035339]
[-52.70797348 222.77896118]
[-43.32080078 209.76895142]
[-27.29006004 209.14047241]
[-16.16094971 199.08349609]
[-5.03184032 189.02650452]
[-5.19844866 170.71005249]
[8.31899738 157.87965393]
[27.24041939 159.03956604]
[38.09431458 148.68615723]
[48.94821167 138.33276367]
[59.80210495 127.97935486]
[70.65599823 117.62595367]
[81.50989532 107.27254486]
[80.60201263 99.82769775]
[66.11313629 103.71002960]
[53.23727036 111.40496826]
[39.76581955 104.80799103]
[37.94963455 89.91835022]
[49.44033432 80.27657318]
[63.78897858 84.65145874]
[78.78623962 84.93801117]
[77.87835693 77.49316406]
[64.85439301 70.05162048]
[51.83043671 62.61008072]
[38.80648041 55.16854095]
[31.61573792 60.97019196]
[23.13552856 64.57852936]
[14.01549435 65.73100281]
[4.95051765 64.35269928]
[-3.37222695 60.56102371]
[-10.32536602 54.65583801]
[-15.38861275 47.09577942]
[-18.18769073 38.46266174]
[-18.52198029 29.41668892]
[-16.37884140 20.64598846]
[-28.75884247 12.17630482]
[-41.13884735 3.70662141]
[-53.57566452 -4.67940903]
[-66.06874084 -12.98140526]
[-78.56181335 -21.28340149]
[-95.65232849 -17.51643944]
[-109.89468384 -27.09320831]
[-112.73933411 -43.67570114]
[-125.34320068 -51.80850220]
[-139.76416016 -46.08001328]
[-154.78971863 -49.95460892]
[-164.64222717 -61.94242096]
[-165.53320312 -77.43389130]
[-157.12005615 -90.47224426]
[-142.63780212 -96.04395294]
[-127.65516663 -92.00659180]
[-117.93327332 -79.91259766]
[-117.21040344 -64.41237640]
[-104.60652924 -56.27957153]
[-92.52371216 -60.72987747]
[-79.89405060 -57.36266327]
[-71.38075256 -47.18954086]
[-70.25981140 -33.77647400]
[-57.76674271 -25.47447777]
[-45.27367020 -17.17248154]
[-37.97441864 -16.08993530]
[-32.66916275 -8.67338085]
[-20.28915977 -0.20369758]
[-7.90915728 8.26598549]
[11.22236729 -0.35834396]
[31.79932213 4.40590668]
[45.36684418 20.76999283]
[46.24802017 42.14458084]
[59.27197647 49.58612061]
[72.29593658 57.02766418]
[85.31989288 64.46920013]
[96.53262329 66.88696289]
[105.12550354 72.32651520]
[110.42624664 79.50546265]
[112.26844025 87.04227448]
[110.98313141 93.63476562]
[107.33209229 98.22300720]
[122.27452850 99.53594208]
[137.21694946 100.84887695]
[148.34606934 90.79189301]
[148.54830933 75.79325867]
[148.75054932 60.79462051]
[136.79071045 50.72008133]
[134.15568542 35.30610657]
[142.08963013 21.83070374]
[156.84638977 16.65654755]
[171.45828247 22.22671318]
[179.02600098 35.91114044]
[175.97631836 51.24846268]
[163.74919128 60.99686432]
[163.54695129 75.99549866]
[163.34469604 90.99413300]
[169.41827393 95.39434052]
[176.78648376 82.32875824]
[184.15469360 69.26317596]
[191.52290344 56.19759369]
[198.89112854 43.13201141]
[206.25933838 30.06643105]
[213.62754822 17.00084877]
[220.99575806 3.93526769]
[228.36398315 -9.13031387]
[235.73219299 -22.19589615]
[238.32151794 -36.97071838]
[247.74821472 -48.63850784]
[261.64920044 -54.27436066]
[276.53973389 -52.46547318]
[288.68701172 -43.66529846]
[295.04598999 -30.07987976]
[294.02252197 -15.11483574]
[285.87322998 -2.52162957]
[272.63983154 4.54312038]
[262.52044678 15.61552334]
[252.40107727 26.68792725]
[242.28169250 37.76033020]
[232.16230774 48.83273315]
[222.04292297 59.90513611]
[211.92353821 70.97753906]
[201.80416870 82.04994202]
[191.68478394 93.12234497]
[181.56539917 104.19474792]
[187.63896179 108.59495544]
[201.82795715 103.72949219]
[216.01693726 98.86403656]
[230.20591736 93.99858093]
[244.39491272 89.13311768]
[258.58389282 84.26766205]
[272.77288818 79.40220642]
[286.96185303 74.53675079]
[301.15084839 69.67128754]
[311.51162720 56.95963669]
[327.65527344 59.84326553]
[332.97454834 75.35575104]
[321.99746704 87.53917694]
[306.01629639 83.86027527]
[291.82733154 88.72573090]
[277.63833618 93.59119415]
[263.44934082 98.45664978]
[249.26036072 103.32210541]
[235.07138062 108.18756866]
[220.88240051 113.05302429]
[206.69340515 117.91847992]
[192.50442505 122.78393555]
[206.74342346 127.50100708]
[220.54943848 133.36567688]
[233.83012390 140.33871460]
[246.49668884 148.37351990]
[258.46444702 157.41635132]
[269.65338135 167.40673828]
[279.98864746 178.27790833]
[289.40115356 189.95713806]
[297.82797241 202.36634827]
[305.21276855 215.42257690]
[311.50613403 229.03851318]
[316.66598511 243.12309265]
[320.65786743 257.58218384]
[323.45504761 272.31906128]
[325.03881836 287.23522949]
[325.39862061 302.23089600]
[324.53201294 317.20584106]
[322.44482422 332.05993652]
[319.15100098 346.69381714]
[314.67254639 361.00967407]
[309.03945923 374.91174316]
[302.28933716 388.30712891]
[294.46731567 401.10620117]
[285.62576294 413.22341919]
[275.82376099 424.57772827]
[265.12683105 435.09323120]
[253.60653687 444.69961548]
[241.33988953 453.33267212]
[228.40890503 460.93460083]
[214.90005493 467.45465088]
[200.90365601 472.84918213]
[186.51330566 477.08212280]
[171.82522583 480.12521362]
[156.93762207 481.95803833]
[141.95005798 482.56838989]
[126.96271515 481.95217896]
[112.07582855 480.11352539]
[97.38893890 477.06472778]
[83.00024414 472.82617188]
[69.00595856 467.42614746]
[55.49965286 460.90084839]
[42.57164001 453.29385376]
[30.30835915 444.65603638]
[18.79181099 435.04513550]
[8.09899998 424.52545166]
[-1.69857502 413.16729736]
[-10.53540230 401.04663086]
[-18.35239601 388.24450684]
[-25.09728622 374.84649658]
[-30.72497368 360.94223022]
[-35.19783020 346.62463379]
[-38.48594284 331.98944092]
[-40.56733322 317.13455200]
[-41.42808151 302.15927124]
[-41.06242752 287.16372681]
[-39.47282028 272.24819946]
[-36.66989136 257.51242065]
[-32.67237473 243.05488586]
[-27.50700760 228.97230530]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 110]
[14 109]
[15 108]
[16 44]
[17 43]
[18 42]
[19 41]
[20 40]
[21 39]
[26 36]
[27 35]
[28 34]
[53 102]
[54 101]
[55 100]
[56 99]
[66 95]
[67 94]
[68 93]
[69 91]
[70 90]
[71 89]
[74 85]
[75 84]
[111 123]
[112 122]
[113 121]
[152 173]
[153 172]
[154 171]
[155 170]
[156 169]
[157 168]
[158 167]
[159 166]
[160 165]
] def

init

% Start Annotations
13 110 0.16 1 colorpair
14 109 0.16 1 colorpair
16 44 0.0 1 colorpair
17 43 0.0 0.2 colorpair
18 42 0.32 1 colorpair
19 41 0.16 1 colorpair
20 40 0.0 1 colorpair
26 36 0.16 1 colorpair
28 34 0.0 1 colorpair
53 102 0.16 1 colorpair
54 101 0.16 1 colorpair
55 100 0.0 1 colorpair
56 99 0.16 1 colorpair
67 94 0.32 1 colorpair
70 90 0.16 1 colorpair
71 89 0.16 1 colorpair
74 85 0.16 1 colorpair
75 84 0.16 1 colorpair
111 123 0.32 1 colorpair
112 122 0.0 1 colorpair
113 121 0.0 1 colorpair
153 172 0.16 1 colorpair
154 171 0.0 0.2 colorpair
155 170 0.32 0.2 colorpair
156 169 0.32 1 colorpair
157 168 0.0 0.2 colorpair
158 167 0.16 0.2 colorpair
159 166 0.16 0.2 colorpair
160 165 0.16 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
110 cmark
14 cmark
15 108 4 gmark
15 cmark
108 cmark
17 43 2 gmark
18 cmark
42 cmark
41 cmark
21 39 4 gmark
21 cmark
26 cmark
36 cmark
27 35 4 gmark
35 cmark
53 cmark
102 cmark
54 cmark
101 cmark
99 cmark
66 95 4 gmark
66 cmark
67 cmark
94 cmark
68 93 4 gmark
68 cmark
93 cmark
69 91 4 gmark
69 cmark
91 cmark
70 cmark
89 cmark
85 cmark
75 cmark
111 cmark
123 cmark
152 173 4 gmark
152 cmark
173 cmark
153 cmark
172 cmark
154 171 2 gmark
155 170 2 gmark
155 cmark
170 cmark
156 cmark
169 cmark
157 168 2 gmark
158 167 2 gmark
158 cmark
167 cmark
159 166 2 gmark
166 cmark
160 165 2 gmark
160 cmark
165 cmark

% End Annotations
showpage
end
%%EOF
