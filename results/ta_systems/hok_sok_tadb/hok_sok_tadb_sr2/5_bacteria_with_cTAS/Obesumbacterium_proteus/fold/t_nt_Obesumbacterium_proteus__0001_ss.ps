%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 06:57:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAGGCUAUCCUCACAUUGUUUGGAUGUGGUUAGGAUUGCCUCAGGUUAAUGAAAAUUGACCUGGGGCUUUUACUUUCUACCUCACCACACAUUUCAUGCUUCAGGCAAAAAGCCUCAAGCACC\
) } def
/len { sequence length } bind def

/coor [
[101.09442139 142.65524292]
[95.28349304 142.40780640]
[89.56019592 141.37242126]
[83.39088440 155.04501343]
[77.22158051 168.71760559]
[71.05227661 182.39018250]
[73.22261047 198.64508057]
[60.06727982 208.43637085]
[45.11936188 201.69161987]
[43.75598907 185.34924316]
[57.37968445 176.22088623]
[63.54899216 162.54829407]
[69.71829987 148.87570190]
[75.88760376 135.20312500]
[64.01203156 122.92450714]
[57.90415192 106.97184753]
[58.54286575 89.90182495]
[65.82580566 74.45021057]
[78.58576202 63.09339523]
[73.45545959 48.99800491]
[68.32515717 34.90261459]
[56.33453751 24.58100891]
[59.25223541 9.97497272]
[54.12193298 -4.12041664]
[48.99163055 -18.21580696]
[43.05241776 -25.30322075]
[43.91392517 -32.72705841]
[39.13662720 -46.94596863]
[27.40705681 -57.56330109]
[30.68798828 -72.09205627]
[25.91068840 -86.31096649]
[21.13338852 -100.52987671]
[15.37271500 -107.76316071]
[16.41903687 -115.16320801]
[11.99770832 -129.49681091]
[7.57638073 -143.83039856]
[3.15505338 -158.16398621]
[-16.83511353 -166.63336182]
[-24.23003387 -186.75112915]
[-14.73219013 -205.65682983]
[-20.90149689 -219.32942200]
[-27.07080269 -233.00201416]
[-33.24010849 -246.67459106]
[-39.40941620 -260.34719849]
[-45.57872391 -274.01977539]
[-51.74802780 -287.69235229]
[-57.91733551 -301.36495972]
[-64.08663940 -315.03753662]
[-70.25595093 -328.71011353]
[-76.42525482 -342.38272095]
[-82.59455872 -356.05529785]
[-88.76387024 -369.72787476]
[-102.38756561 -378.85623169]
[-101.02419281 -395.19860840]
[-86.07627869 -401.94338989]
[-72.92094421 -392.15209961]
[-75.09127808 -375.89718628]
[-68.92197418 -362.22460938]
[-62.75266647 -348.55203247]
[-56.58336258 -334.87942505]
[-50.41405487 -321.20684814]
[-44.24474716 -307.53424072]
[-38.07544327 -293.86166382]
[-31.90613556 -280.18908691]
[-25.73682785 -266.51647949]
[-19.56752205 -252.84390259]
[-13.39821529 -239.17131042]
[-7.22890902 -225.49873352]
[-1.05960238 -211.82614136]
[7.84842730 -211.66354370]
[16.24010849 -208.54229736]
[23.15659904 -202.78804016]
[27.79738808 -195.02896118]
[29.61288261 -186.12734985]
[28.36936951 -177.08375549]
[24.17864990 -168.92451477]
[17.48864555 -162.58531189]
[21.90997314 -148.25172424]
[26.33130074 -133.91813660]
[30.75262833 -119.58454132]
[35.35229874 -105.30718231]
[40.12960052 -91.08827209]
[44.90689850 -76.86936188]
[56.29476547 -67.26905823]
[53.35553741 -51.72326660]
[58.13283539 -37.50435638]
[63.08702087 -23.34610748]
[68.21732330 -9.25071907]
[73.34762573 4.84467030]
[84.97129059 14.15808105]
[82.42054749 29.77231407]
[87.55084991 43.86770248]
[92.68115234 57.96309280]
[109.55457306 58.41421890]
[124.93280792 65.37310028]
[136.40930176 77.75074005]
[142.18811035 93.61016083]
[141.36491394 110.46952820]
[134.06852722 125.69052124]
[144.27111816 136.68629456]
[154.47370911 147.68208313]
[164.67630005 158.67785645]
[174.87889099 169.67362976]
[189.93722534 174.52717590]
[192.92213440 189.11962891]
[203.12472534 200.11540222]
[213.32731628 211.11119080]
[223.52990723 222.10696411]
[239.44345093 224.14128113]
[247.65142822 237.92564392]
[241.85736084 252.88587952]
[226.50598145 257.54574585]
[213.37353516 248.33062744]
[212.53411865 232.30955505]
[202.33152771 221.31378174]
[192.12893677 210.31799316]
[181.92634583 199.32221985]
[167.59776306 195.25517273]
[163.88310242 179.87622070]
[153.68051147 168.88044739]
[143.47792053 157.88467407]
[133.27532959 146.88888550]
[123.07274628 135.89311218]
[117.97722626 138.69737244]
[112.54769135 140.78262329]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 14]
[4 13]
[5 12]
[6 11]
[19 93]
[20 92]
[21 91]
[23 89]
[24 88]
[25 87]
[27 86]
[28 85]
[30 83]
[31 82]
[32 81]
[34 80]
[35 79]
[36 78]
[37 77]
[40 69]
[41 68]
[42 67]
[43 66]
[44 65]
[45 64]
[46 63]
[47 62]
[48 61]
[49 60]
[50 59]
[51 58]
[52 57]
[99 123]
[100 122]
[101 121]
[102 120]
[103 119]
[105 117]
[106 116]
[107 115]
[108 114]
] def

init

% Start Annotations
3 14 0.0 1 colorpair
4 13 0.0 1 colorpair
5 12 0.0 1 colorpair
6 11 0.0 1 colorpair
19 93 0.0 1 colorpair
20 92 0.0 1 colorpair
21 91 0.0 1 colorpair
23 89 0.0 1 colorpair
24 88 0.0 1 colorpair
25 87 0.0 1 colorpair
27 86 0.0 1 colorpair
28 85 0.0 1 colorpair
30 83 0.0 1 colorpair
31 82 0.0 1 colorpair
32 81 0.0 1 colorpair
34 80 0.0 1 colorpair
35 79 0.0 1 colorpair
36 78 0.0 1 colorpair
37 77 0.0 1 colorpair
40 69 0.0 1 colorpair
41 68 0.0 1 colorpair
42 67 0.0 1 colorpair
43 66 0.0 1 colorpair
44 65 0.0 1 colorpair
45 64 0.0 1 colorpair
46 63 0.0 1 colorpair
47 62 0.0 1 colorpair
48 61 0.0 1 colorpair
49 60 0.0 1 colorpair
50 59 0.0 1 colorpair
51 58 0.0 1 colorpair
52 57 0.0 1 colorpair
99 123 0.0 1 colorpair
100 122 0.0 1 colorpair
101 121 0.0 1 colorpair
102 120 0.0 1 colorpair
103 119 0.0 1 colorpair
105 117 0.0 1 colorpair
106 116 0.0 1 colorpair
107 115 0.0 1 colorpair
108 114 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
