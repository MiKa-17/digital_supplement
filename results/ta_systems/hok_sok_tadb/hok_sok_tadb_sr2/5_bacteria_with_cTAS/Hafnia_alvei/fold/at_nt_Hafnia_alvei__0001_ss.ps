%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 06:33:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
C_GUGAUUUACUGUGUAUUGAUCGUCUGUCUAACGCUACUGGCGUUUAUCAGAAUCACACAUGGAUAGCUGUGUGAGAUACAAAUAAAAAACGGUAAUAAAGAGGUUGCCGCGGUUUUAGCCUACGCAUCUAAACGGUAAG_UGACUUAACGGCGAGGUGUU________AACUCCCCG_U_GUUG__________G_U___U_U_______U_A________\
) } def
/len { sequence length } bind def

/coor [
[23.15855598 351.46881104]
[14.61893368 348.69909668]
[6.17883921 345.63949585]
[-2.15189004 342.29354858]
[-10.36354351 338.66516113]
[-18.44654846 334.75857544]
[-26.39148140 330.57833862]
[-34.18908310 326.12930298]
[-41.83026505 321.41668701]
[-49.30611801 316.44595337]
[-56.60792542 311.22293091]
[-63.72718048 305.75369263]
[-70.65557861 300.04461670]
[-77.38505554 294.10232544]
[-83.90775299 287.93380737]
[-90.21607208 281.54617310]
[-96.30265808 274.94696045]
[-102.16042328 268.14379883]
[-107.78253174 261.14462280]
[-119.89300537 269.99542236]
[-132.00347900 278.84619141]
[-138.57984924 293.23583984]
[-153.42082214 294.49877930]
[-165.53129578 303.34954834]
[-177.64176941 312.20034790]
[-173.39886475 326.75277710]
[-174.39215088 341.87857056]
[-180.50170898 355.75115967]
[-190.98976135 366.69540405]
[-204.58982849 373.38973999]
[-219.65963745 375.02575684]
[-234.37944031 371.40591431]
[-246.97174072 362.96731567]
[-255.91596985 350.72900391]
[-260.13204956 336.16876221]
[-259.11090088 321.04483032]
[-252.97578430 307.18350220]
[-242.46757507 296.25860596]
[-228.85519409 289.58935547]
[-213.78239441 287.98110962]
[-199.06927490 291.62808228]
[-186.49255371 300.08987427]
[-174.38208008 291.23907471]
[-162.27159119 282.38830566]
[-156.56146240 268.63171387]
[-140.85426331 266.73571777]
[-128.74378967 257.88494873]
[-116.63331604 249.03414917]
[-122.52130127 240.09083557]
[-128.04029846 230.91522217]
[-133.18115234 221.52252197]
[-137.93533325 211.92829895]
[-142.29498291 202.14849854]
[-146.25283813 192.19929504]
[-149.80236816 182.09721375]
[-152.93765259 171.85899353]
[-155.65351868 161.50160217]
[-157.94546509 151.04225159]
[-159.80966187 140.49824524]
[-161.24305725 129.88708496]
[-162.24324036 119.22637177]
[-162.80857849 108.53377533]
[-162.93811035 97.82702637]
[-162.63163757 87.12388611]
[-161.88966370 76.44209290]
[-160.71342468 65.79936218]
[-159.10485840 55.21334457]
[-157.06663513 44.70159149]
[-154.60214233 34.28153992]
[-151.71546936 23.97046089]
[-148.41139221 13.78545570]
[-144.69540405 3.74341345]
[-140.57365417 -6.13901424]
[-136.05296326 -15.84543991]
[-131.14086914 -25.35976791]
[-125.84547424 -34.66622162]
[-120.17559052 -43.74937057]
[-114.14059448 -52.59415054]
[-107.75051880 -61.18589783]
[-101.01593781 -69.51036072]
[-93.94803619 -77.55374146]
[-86.55851746 -85.30269623]
[-78.85964966 -92.74437714]
[-70.86419678 -99.86644745]
[-62.58540726 -106.65709686]
[-54.03701782 -113.10506439]
[-45.23320007 -119.19965363]
[-36.18855286 -124.93076324]
[-26.91807747 -130.28889465]
[-17.43714333 -135.26515198]
[-7.76147175 -139.85127258]
[2.09289122 -144.03968811]
[12.10960579 -147.82342529]
[22.27206230 -151.19621277]
[32.56340790 -154.15246582]
[42.96657944 -156.68728638]
[53.46432114 -158.79644775]
[64.03923035 -160.47647095]
[74.67377472 -161.72457886]
[85.35031128 -162.53868103]
[96.05114746 -162.91743469]
[106.75852203 -162.86021423]
[117.45469666 -162.36711121]
[128.12191772 -161.43894958]
[138.74252319 -160.07727051]
[149.29887390 -158.28431702]
[159.77346802 -156.06307983]
[170.14895630 -153.41723633]
[180.40812683 -150.35116577]
[190.53395081 -146.86994934]
[200.50965881 -142.97938538]
[206.54016113 -156.71376038]
[212.47419739 -170.49008179]
[204.07322693 -188.75076294]
[211.70652771 -207.01452637]
[230.02838135 -213.65765381]
[235.37770081 -227.67138672]
[240.72702026 -241.68511963]
[246.07633972 -255.69885254]
[235.90391541 -267.13476562]
[232.22247314 -281.99093628]
[235.87797546 -296.85348511]
[246.03041077 -308.30715942]
[260.34686279 -313.71994019]
[275.53744507 -311.84805298]
[288.11154175 -303.12161255]
[295.17968750 -289.54589844]
[295.11767578 -274.24050903]
[287.93975830 -260.72253418]
[275.29534912 -252.09826660]
[260.09008789 -250.34953308]
[254.74075317 -236.33580017]
[249.39143372 -222.32206726]
[244.04211426 -208.30831909]
[250.59437561 -200.42755127]
[253.31016541 -190.46142578]
[251.63598633 -180.18667603]
[245.80722046 -171.46398926]
[236.81764221 -165.90095520]
[226.25051880 -164.55604553]
[220.31648254 -150.77970886]
[220.55699158 -143.40008545]
[214.20140076 -136.85272217]
[262.04843140 -107.07843018]
[302.45211792 -67.79245758]
[333.55661011 -20.79931450]
[347.07116699 -27.30756950]
[360.58569336 -33.81582642]
[364.26879883 -49.01348495]
[376.88964844 -58.24644852]
[392.48910522 -57.15518951]
[403.70156860 -46.25497055]
[405.23284912 -30.69254303]
[396.35992432 -17.81600571]
[381.27233887 -13.70526695]
[367.09393311 -20.30129242]
[353.57940674 -13.79303741]
[340.06488037 -7.28478098]
[343.58734131 0.97285992]
[346.82586670 9.34593487]
[349.77667236 17.82468224]
[352.43630981 26.39922142]
[354.80169678 35.05955505]
[356.87008667 43.79558945]
[358.63900757 52.59713745]
[360.10647583 61.45394135]
[361.27072144 70.35568237]
[362.13040161 79.29197693]
[362.68453979 88.25241089]
[362.93246460 97.22653198]
[362.87390137 106.20389557]
[362.50888062 115.17401886]
[361.83789062 124.12646484]
[360.86169434 133.05078125]
[359.58139038 141.93656921]
[357.99850464 150.77346802]
[356.11486816 159.55119324]
[353.93267822 168.25949097]
[351.45449829 176.88822937]
[348.68322754 185.42733765]
[345.62203979 193.86686707]
[342.27453613 202.19696045]
[338.64462280 210.40794373]
[334.73654175 218.49021912]
[330.55480957 226.43437195]
[326.10433960 234.23115540]
[321.39028931 241.87145996]
[316.41818237 249.34638977]
[311.19378662 256.64721680]
[305.72323608 263.76544189]
[300.01284790 270.69281006]
[294.06933594 277.42117310]
[287.89956665 283.94271851]
[281.51080322 290.24984741]
[274.91043091 296.33520508]
[268.10617065 302.19171143]
[261.10595703 307.81250000]
[253.91795349 313.19107056]
[246.55053711 318.32113647]
[239.01226807 323.19668579]
[231.31196594 327.81207275]
[223.45860291 332.16189575]
[215.46131897 336.24108887]
[207.32943726 340.04492188]
[199.07246399 343.56890869]
[190.69998169 346.80899048]
[182.22178650 349.76138306]
[173.64773560 352.42263794]
[164.98785400 354.78961182]
[156.25219727 356.85961914]
[147.45098877 358.63018799]
[138.59445190 360.09927368]
[129.69293213 361.26519775]
[120.75679016 362.12655640]
[111.79646301 362.68234253]
[102.82238007 362.93194580]
[93.84501648 362.87503052]
[84.87481689 362.51171875]
[75.92224884 361.84237671]
[66.99775696 360.86782837]
[58.11172867 359.58917236]
[49.27452850 358.00793457]
[40.49645615 356.12594604]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 48]
[20 47]
[21 46]
[23 44]
[24 43]
[25 42]
[111 143]
[112 141]
[113 140]
[116 134]
[117 133]
[118 132]
[119 131]
[146 158]
[147 157]
[148 156]
] def

init

% Start Annotations
19 48 0.0 1 colorpair
20 47 0.32 1 colorpair
21 46 0.16 1 colorpair
23 44 0.16 0.2 colorpair
24 43 0.16 1 colorpair
25 42 0.16 1 colorpair
111 143 0.16 1 colorpair
112 141 0.0 1 colorpair
116 134 0.16 1 colorpair
117 133 0.0 1 colorpair
118 132 0.0 1 colorpair
119 131 0.16 1 colorpair
146 158 0.16 1 colorpair
147 157 0.32 1 colorpair
148 156 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
20 cmark
47 cmark
21 cmark
23 44 2 gmark
23 cmark
44 cmark
24 cmark
43 cmark
42 cmark
143 cmark
113 140 3 gmark
113 cmark
140 cmark
116 cmark
134 cmark
119 cmark
131 cmark
146 cmark
158 cmark
147 cmark
157 cmark
148 cmark
156 cmark

% End Annotations
showpage
end
%%EOF
