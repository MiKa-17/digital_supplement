%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 06:33:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAGGCUAUCCUCACAUUGUUCAGAUGUGGUUAGGAUUGCCUCAGGUUAAUGUAAGUUGACCUGGGGCUUUUACUUUCUGCCUCACCACAUAUUUCAUGCUCAAGGCAAAAAGCCUCAAGCACC\
) } def
/len { sequence length } bind def

/coor [
[171.65679932 175.21841431]
[167.66075134 155.04948425]
[172.59111023 135.04405212]
[160.41203308 126.28789520]
[148.23295593 117.53173828]
[136.05389404 108.77558136]
[123.87482452 100.01942444]
[108.40332794 119.43159485]
[87.36318970 113.46597290]
[73.54104614 119.29249573]
[59.71890259 125.11901855]
[45.89676285 130.94554138]
[32.07461929 136.77206421]
[18.48000145 143.11134338]
[5.13192415 149.95449829]
[-8.21615314 156.79765320]
[-21.56422997 163.64082336]
[-34.91230774 170.48397827]
[-48.26038361 177.32713318]
[-54.52870178 192.09492493]
[-70.02091980 196.26275635]
[-82.85272980 186.63342285]
[-83.18067169 170.59371948]
[-70.75316620 160.44793701]
[-55.10354233 163.97906494]
[-41.75546646 157.13589478]
[-28.40739059 150.29273987]
[-15.05931282 143.44958496]
[-1.71123564 136.60641479]
[11.63684177 129.76325989]
[13.05741596 126.42254639]
[16.22806740 123.64012909]
[20.85045052 122.25954437]
[26.24809647 122.94992065]
[40.07024002 117.12339783]
[53.89238358 111.29687500]
[67.71452332 105.47035217]
[81.53666687 99.64382935]
[86.74684143 83.49071503]
[104.71166229 76.59470367]
[98.54235840 62.92211914]
[92.37304688 49.24953079]
[86.20374298 35.57694244]
[80.03443909 21.90435600]
[73.86512756 8.23176765]
[67.69582367 -5.44082022]
[61.52651596 -19.11340714]
[55.35720825 -32.78599548]
[49.18790436 -46.45858383]
[43.01859665 -60.13117218]
[36.84928894 -73.80375671]
[30.67998314 -87.47634888]
[17.05628777 -96.60470581]
[18.41965675 -112.94708252]
[33.36757660 -119.69184113]
[46.52290726 -109.90055084]
[44.35256958 -93.64565277]
[50.52187729 -79.97306824]
[56.69118500 -66.30047607]
[62.86048889 -52.62789154]
[69.02980042 -38.95530319]
[75.19910431 -25.28271484]
[81.36840820 -11.61012650]
[87.53771973 2.06246090]
[93.70702362 15.73504925]
[99.87632751 29.40763664]
[106.04563904 43.08022308]
[112.21494293 56.75281143]
[118.38424683 70.42539978]
[116.87906647 55.50111008]
[122.22341156 41.48547363]
[133.28327942 31.35240173]
[147.71195984 27.25197601]
[162.44787598 30.05424309]
[174.36430359 39.16460800]
[180.93275452 52.64998627]
[180.75950623 67.64898682]
[173.88131714 80.97904205]
[161.75762939 89.81172943]
[146.96092224 92.27287292]
[132.63098145 87.84035492]
[144.81004333 96.59651184]
[156.98912048 105.35266876]
[169.16818237 114.10882568]
[181.34725952 122.86497498]
[189.32940674 116.44944763]
[198.49234009 111.89673615]
[208.40890503 109.41468811]
[218.61781311 109.11471558]
[228.64500427 111.00682831]
[238.02572632 114.99932098]
[246.32600403 120.90325165]
[253.16282654 128.44132996]
[258.22167969 137.26098633]
[261.27111816 146.95082092]
[262.17333984 157.05984497]
[260.89038086 167.11837769]
[257.48565674 176.65998840]
[252.12092590 185.24305725]
[262.32351685 196.23883057]
[272.52609253 207.23460388]
[282.72869873 218.23037720]
[298.28741455 218.98136902]
[308.47766113 230.27798462]
[307.66583252 245.10621643]
[317.86840820 256.10198975]
[328.07101440 267.09777832]
[338.27359009 278.09356689]
[354.18713379 280.12786865]
[362.39511108 293.91223145]
[356.60104370 308.87246704]
[341.24966431 313.53234863]
[328.11721802 304.31723022]
[327.27783203 288.29614258]
[317.07522583 277.30035400]
[306.87265015 266.30459595]
[296.67004395 255.30880737]
[281.82260132 255.01025391]
[271.31909180 244.00431824]
[271.73291016 228.43296814]
[261.53033447 217.43719482]
[251.32772827 206.44142151]
[241.12513733 195.44564819]
[222.14363098 202.88937378]
[201.75289917 201.59271240]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 85]
[4 84]
[5 83]
[6 82]
[7 81]
[9 38]
[10 37]
[11 36]
[12 35]
[13 34]
[14 30]
[15 29]
[16 28]
[17 27]
[18 26]
[19 25]
[40 69]
[41 68]
[42 67]
[43 66]
[44 65]
[45 64]
[46 63]
[47 62]
[48 61]
[49 60]
[50 59]
[51 58]
[52 57]
[99 123]
[100 122]
[101 121]
[102 120]
[105 117]
[106 116]
[107 115]
[108 114]
] def

init

% Start Annotations
3 85 0.0 1 colorpair
4 84 0.0 1 colorpair
5 83 0.0 1 colorpair
6 82 0.0 1 colorpair
7 81 0.0 0.6 colorpair
9 38 0.0 1 colorpair
10 37 0.0 1 colorpair
11 36 0.0 1 colorpair
12 35 0.0 1 colorpair
13 34 0.0 1 colorpair
14 30 0.0 1 colorpair
15 29 0.0 1 colorpair
16 28 0.0 1 colorpair
17 27 0.0 1 colorpair
18 26 0.0 1 colorpair
19 25 0.0 1 colorpair
40 69 0.0 1 colorpair
41 68 0.0 1 colorpair
42 67 0.0 1 colorpair
43 66 0.0 1 colorpair
44 65 0.0 1 colorpair
45 64 0.0 1 colorpair
46 63 0.0 1 colorpair
47 62 0.0 1 colorpair
48 61 0.0 1 colorpair
49 60 0.0 1 colorpair
50 59 0.0 1 colorpair
51 58 0.0 1 colorpair
52 57 0.16 1 colorpair
99 123 0.0 1 colorpair
100 122 0.0 1 colorpair
101 121 0.0 1 colorpair
102 120 0.0 1 colorpair
105 117 0.0 1 colorpair
106 116 0.0 1 colorpair
107 115 0.0 1 colorpair
108 114 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
7 81 1 gmark
57 cmark

% End Annotations
showpage
end
%%EOF
