%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 06:57:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAACUGCCACGAAGUACCCUGCUCUGGUGCGUGUUAAUAGUGUGUCUCACACUGCUGAUAUUCACUUACCUGACCCGUAAAUCGCUCUGCGAAAUCCGGUACAGGGACACGAACAGGGAGGUGGCGGCUUUCAUGGCUUACGAAUCCGGUAAG\
) } def
/len { sequence length } bind def

/coor [
[219.60688782 437.85400391]
[214.04039001 423.92510986]
[208.47389221 409.99621582]
[202.90740967 396.06732178]
[197.34091187 382.13842773]
[191.77442932 368.20953369]
[186.06884766 354.33703613]
[180.22477722 340.52230835]
[174.38069153 326.70758057]
[168.53662109 312.89282227]
[162.69253540 299.07809448]
[156.84846497 285.26336670]
[151.00437927 271.44863892]
[141.55056763 270.75823975]
[132.95870972 266.61853027]
[126.44839478 259.56973267]
[122.96104431 250.56820679]
[123.02395630 240.85681152]
[126.67105865 231.79331970]
[133.43214417 224.66062927]
[128.71133423 210.42286682]
[123.99053192 196.18510437]
[119.26972198 181.94732666]
[114.54891205 167.70956421]
[103.19924927 158.06413269]
[106.20017242 142.53013611]
[101.47937012 128.29237366]
[79.27785492 119.31940460]
[71.88051605 96.54441071]
[58.00800705 90.83883667]
[44.13549805 85.13327026]
[30.26299095 79.42769623]
[14.55707741 81.33422089]
[5.72951269 69.33741760]
[-8.14299488 63.63184738]
[-22.01550293 57.92627716]
[-35.88800812 52.22070694]
[-49.76051712 46.51513672]
[-63.63302612 40.80956650]
[-79.33893585 42.71609116]
[-88.16650391 30.71928406]
[-102.03900909 25.01371384]
[-115.91151428 19.30814362]
[-129.78402710 13.60257244]
[-143.65653992 7.89700222]
[-157.52903748 2.19143176]
[-171.40155029 -3.51413870]
[-188.34996033 -3.94703174]
[-192.62577820 -20.35293770]
[-178.04469299 -29.00325775]
[-165.69598389 -17.38664627]
[-151.82347107 -11.68107605]
[-137.95095825 -5.97550535]
[-124.07845306 -0.26993468]
[-110.20594788 5.43563604]
[-96.33344269 11.14120674]
[-82.46092987 16.84677696]
[-67.74727631 14.53214931]
[-57.92745590 26.93705750]
[-44.05494690 32.64262772]
[-30.18243980 38.34819794]
[-16.30993080 44.05376816]
[-2.43742418 49.75933838]
[11.43508339 55.46490860]
[26.14874268 53.15028381]
[35.96856308 65.55519104]
[49.84106827 71.26075745]
[63.71357727 76.96633148]
[77.58608246 82.67189789]
[85.32849884 75.76379395]
[95.03894806 72.10672760]
[105.41487122 72.19126129]
[112.07723236 58.75202942]
[118.73958588 45.31279755]
[125.40194702 31.87356377]
[120.58583832 17.05995941]
[127.53386688 3.52557349]
[141.68605042 -0.97455591]
[148.34840393 -14.41378975]
[155.01077271 -27.85302353]
[146.62535095 -40.64489365]
[145.77424622 -55.81632614]
[152.58605957 -69.28723907]
[165.14202881 -77.48503113]
[180.01530457 -78.29190826]
[186.67765808 -91.73114014]
[193.34002686 -105.17037201]
[200.00238037 -118.60960388]
[201.62023926 -135.48619080]
[218.28514099 -138.60345459]
[225.89389038 -123.45277405]
[213.44161987 -111.94725037]
[206.77925110 -98.50801849]
[200.11689758 -85.06877899]
[193.45454407 -71.62954712]
[201.81736755 -59.30361557]
[202.89488220 -44.34717941]
[196.29779053 -30.76981354]
[183.70779419 -22.26166344]
[168.44999695 -21.19066429]
[161.78764343 -7.75143194]
[155.12528992 5.68780136]
[160.11212158 19.67590332]
[153.54699707 33.40010452]
[138.84117126 38.53592300]
[132.17881775 51.97515488]
[125.51646423 65.41439056]
[118.85410309 78.85362244]
[124.32280731 85.47251129]
[127.55765533 93.42563629]
[128.26156616 101.98255920]
[126.36988831 110.35739899]
[122.05635834 117.78099823]
[115.71713257 123.57155609]
[120.43794250 137.80932617]
[132.12525940 148.47314453]
[128.78668213 162.98875427]
[133.50749207 177.22651672]
[138.22828674 191.46429443]
[142.94909668 205.70205688]
[147.66990662 219.93981934]
[167.01968384 228.03210449]
[174.12161255 247.45764160]
[164.81910706 265.60458374]
[170.66319275 279.41931152]
[176.50726318 293.23403931]
[182.35134888 307.04876709]
[188.19541931 320.86349487]
[194.03950500 334.67822266]
[199.88357544 348.49295044]
[206.14389038 355.22320557]
[205.70332336 362.64303589]
[211.26980591 376.57192993]
[216.83630371 390.50082397]
[222.40280151 404.42971802]
[227.96928406 418.35864258]
[233.53578186 432.28753662]
[245.08937073 438.10314941]
[249.42266846 449.86337280]
[244.71540833 461.04446411]
[250.00207520 475.08193970]
[255.28875732 489.11944580]
[260.57543945 503.15692139]
[265.86212158 517.19439697]
[280.67419434 522.20806885]
[288.75396729 535.59655762]
[286.28643799 551.03820801]
[274.43667603 561.24200439]
[258.79980469 561.38995361]
[246.75903320 551.41229248]
[243.99969482 536.02008057]
[251.82463074 522.48107910]
[246.53794861 508.44360352]
[241.25126648 494.40612793]
[235.96459961 480.36862183]
[230.67791748 466.33114624]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 137]
[2 136]
[3 135]
[4 134]
[5 133]
[6 132]
[7 130]
[8 129]
[9 128]
[10 127]
[11 126]
[12 125]
[13 124]
[20 121]
[21 120]
[22 119]
[23 118]
[24 117]
[26 115]
[27 114]
[29 69]
[30 68]
[31 67]
[32 66]
[34 64]
[35 63]
[36 62]
[37 61]
[38 60]
[39 59]
[41 57]
[42 56]
[43 55]
[44 54]
[45 53]
[46 52]
[47 51]
[72 108]
[73 107]
[74 106]
[75 105]
[78 102]
[79 101]
[80 100]
[85 95]
[86 94]
[87 93]
[88 92]
[140 156]
[141 155]
[142 154]
[143 153]
[144 152]
] def

init

% Start Annotations
1 137 0.0 1 colorpair
2 136 0.0 1 colorpair
3 135 0.0 1 colorpair
4 134 0.0 1 colorpair
5 133 0.0 1 colorpair
6 132 0.0 1 colorpair
7 130 0.0 1 colorpair
8 129 0.0 1 colorpair
9 128 0.0 1 colorpair
10 127 0.0 1 colorpair
11 126 0.0 1 colorpair
12 125 0.0 1 colorpair
13 124 0.0 1 colorpair
20 121 0.0 1 colorpair
21 120 0.0 1 colorpair
22 119 0.0 1 colorpair
23 118 0.0 1 colorpair
24 117 0.0 1 colorpair
26 115 0.0 1 colorpair
27 114 0.0 1 colorpair
29 69 0.0 1 colorpair
30 68 0.0 1 colorpair
31 67 0.0 1 colorpair
32 66 0.0 1 colorpair
34 64 0.0 1 colorpair
35 63 0.0 1 colorpair
36 62 0.0 1 colorpair
37 61 0.0 1 colorpair
38 60 0.0 1 colorpair
39 59 0.0 1 colorpair
41 57 0.0 1 colorpair
42 56 0.0 1 colorpair
43 55 0.0 1 colorpair
44 54 0.0 1 colorpair
45 53 0.0 1 colorpair
46 52 0.0 1 colorpair
47 51 0.0 1 colorpair
72 108 0.0 1 colorpair
73 107 0.0 1 colorpair
74 106 0.0 1 colorpair
75 105 0.0 1 colorpair
78 102 0.0 1 colorpair
79 101 0.0 1 colorpair
80 100 0.0 1 colorpair
85 95 0.0 1 colorpair
86 94 0.0 1 colorpair
87 93 0.0 1 colorpair
88 92 0.0 1 colorpair
140 156 0.0 1 colorpair
141 155 0.0 1 colorpair
142 154 0.0 1 colorpair
143 153 0.0 1 colorpair
144 152 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
