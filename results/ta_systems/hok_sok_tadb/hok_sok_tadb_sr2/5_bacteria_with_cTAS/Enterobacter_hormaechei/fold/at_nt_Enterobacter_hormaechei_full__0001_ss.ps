%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 02:02:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAUGCUCUGGGGCGUGUUUAUUAUUUGUCUGACGCUGUUGAUCUUCACCUUGAUGACGCGCAACUCGCUGUGCGAGUUGCGCUUCAGGAACGAAAAACGGGAGGUGGCGGCGAUGUUGGCUUACGAAUCC___GGCAAGUAGC_AGCAUGGGGG_GGGGG_UGUUCCCCGCCUCUCCGGGG______GUGGUUAGGUA__CCUAACGCACCCUUUUAAAGGG_CU_\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50478363 92.08485413]
[62.52680206 91.25485992]
[47.57752609 90.01065826]
[32.66841125 88.35320282]
[17.81087875 86.28376007]
[3.01631165 83.80391693]
[-11.70395756 80.91557312]
[-26.33865166 77.62094879]
[-40.87656021 73.92255402]
[-55.30654144 69.82322693]
[-69.61754608 65.32611847]
[-83.79860687 60.43465805]
[-97.83885956 55.15260315]
[-111.72755432 49.48400116]
[-125.45404053 43.43318558]
[-139.00781250 37.00480270]
[-152.37847900 30.20376778]
[-165.55580139 23.03529549]
[-178.52969360 15.50487900]
[-191.29019165 7.61828566]
[-203.82754517 -0.61844319]
[-216.13214111 -9.19899654]
[-228.19454956 -18.11680222]
[-240.00552368 -27.36502647]
[-251.55603027 -36.93658829]
[-262.83718872 -46.82414627]
[-273.84042358 -57.02013779]
[-284.55722046 -67.51673889]
[-294.97943115 -78.30592346]
[-305.09906006 -89.37940979]
[-314.90832520 -100.72872162]
[-324.39974976 -112.34516907]
[-333.56604004 -124.21984863]
[-342.40017700 -136.34365845]
[-350.89541626 -148.70732117]
[-359.04519653 -161.30136108]
[-366.84332275 -174.11611938]
[-374.28381348 -187.14178467]
[-381.36093140 -200.36839294]
[-388.06930542 -213.78579712]
[-394.40374756 -227.38371277]
[-400.35946655 -241.15174866]
[-405.93185425 -255.07931519]
[-411.11663818 -269.15579224]
[-415.90985107 -283.37033081]
[-420.30786133 -297.71212769]
[-424.30725098 -312.17010498]
[-427.90496826 -326.73327637]
[-431.09826660 -341.39041138]
[-433.88470459 -356.13031006]
[-436.26214600 -370.94168091]
[-438.22872925 -385.81317139]
[-439.78302002 -400.73339844]
[-440.92376709 -415.69091797]
[-441.65011597 -430.67428589]
[-441.96148682 -445.67199707]
[-441.85769653 -460.67260742]
[-441.33880615 -475.66461182]
[-440.40518188 -490.63647461]
[-439.05755615 -505.57678223]
[-437.29696655 -520.47406006]
[-435.12475586 -535.31695557]
[-432.54257202 -550.09399414]
[-429.55242920 -564.79388428]
[-426.15661621 -579.40545654]
[-422.35769653 -593.91741943]
[-418.15863037 -608.31866455]
[-413.56259155 -622.59820557]
[-408.57312012 -636.74511719]
[-403.19403076 -650.74847412]
[-397.42944336 -664.59759521]
[-391.28378296 -678.28186035]
[-384.76174927 -691.79083252]
[-377.86834717 -705.11413574]
[-370.60885620 -718.24151611]
[-362.98886108 -731.16302490]
[-355.01412964 -743.86859131]
[-346.69085693 -756.34869385]
[-338.02536011 -768.59356689]
[-329.02429199 -780.59399414]
[-319.69454956 -792.34069824]
[-310.04327393 -803.82464600]
[-300.07788086 -815.03717041]
[-289.80599976 -825.96954346]
[-279.23547363 -836.61346436]
[-268.37445068 -846.96075439]
[-257.23117065 -857.00354004]
[-245.81425476 -866.73400879]
[-234.13241577 -876.14483643]
[-222.19458008 -885.22869873]
[-210.00993347 -893.97875977]
[-197.58776855 -902.38818359]
[-184.93763733 -910.45062256]
[-172.06922913 -918.15991211]
[-158.99237061 -925.51007080]
[-145.71710205 -932.49548340]
[-132.25360107 -939.11083984]
[-118.61217499 -945.35107422]
[-104.80326843 -951.21136475]
[-90.83746338 -956.68719482]
[-76.72545624 -961.77447510]
[-62.47806168 -966.46917725]
[-48.10619736 -970.76782227]
[-33.62086868 -974.66711426]
[-19.03317261 -978.16394043]
[-4.35428858 -981.25573730]
[10.40454102 -983.94012451]
[25.23200989 -986.21496582]
[40.11675644 -988.07861328]
[55.04737854 -989.52960205]
[70.01244354 -990.56683350]
[85.00047302 -991.18945312]
[100.00000000 -991.39703369]
[114.99952698 -991.18945312]
[129.98756409 -990.56683350]
[144.95262146 -989.52960205]
[159.88323975 -988.07861328]
[174.76799011 -986.21496582]
[189.59545898 -983.94012451]
[204.35429382 -981.25573730]
[219.03317261 -978.16394043]
[233.62086487 -974.66711426]
[248.10620117 -970.76782227]
[262.47805786 -966.46917725]
[276.72546387 -961.77447510]
[290.83746338 -956.68719482]
[304.80325317 -951.21136475]
[318.61218262 -945.35107422]
[332.25360107 -939.11083984]
[345.71710205 -932.49548340]
[358.99237061 -925.51007080]
[372.06921387 -918.15991211]
[384.93765259 -910.45062256]
[397.58776855 -902.38818359]
[410.00991821 -893.97875977]
[422.19458008 -885.22869873]
[434.13241577 -876.14483643]
[445.81427002 -866.73400879]
[457.23117065 -857.00354004]
[468.37445068 -846.96075439]
[479.23547363 -836.61346436]
[489.80599976 -825.96954346]
[500.07788086 -815.03717041]
[510.04327393 -803.82464600]
[519.69451904 -792.34069824]
[529.02429199 -780.59399414]
[538.02532959 -768.59356689]
[546.69085693 -756.34869385]
[555.01416016 -743.86859131]
[562.98883057 -731.16302490]
[570.60888672 -718.24151611]
[577.86834717 -705.11413574]
[584.76177979 -691.79083252]
[591.28375244 -678.28186035]
[597.42944336 -664.59759521]
[603.19403076 -650.74847412]
[608.57312012 -636.74511719]
[613.56256104 -622.59820557]
[618.15863037 -608.31866455]
[622.35772705 -593.91741943]
[626.15661621 -579.40545654]
[629.55242920 -564.79388428]
[632.54260254 -550.09399414]
[635.12475586 -535.31695557]
[637.29693604 -520.47406006]
[639.05755615 -505.57678223]
[640.40515137 -490.63647461]
[641.33880615 -475.66461182]
[641.85772705 -460.67260742]
[641.96148682 -445.67199707]
[641.65008545 -430.67428589]
[640.92376709 -415.69091797]
[639.78302002 -400.73339844]
[638.22875977 -385.81317139]
[636.26214600 -370.94168091]
[633.88470459 -356.13031006]
[631.09826660 -341.39041138]
[627.90496826 -326.73327637]
[624.30725098 -312.17010498]
[620.30786133 -297.71212769]
[615.90985107 -283.37033081]
[611.11663818 -269.15579224]
[605.93182373 -255.07931519]
[600.35943604 -241.15174866]
[594.40374756 -227.38371277]
[588.06927490 -213.78579712]
[581.36096191 -200.36839294]
[574.28381348 -187.14178467]
[566.84332275 -174.11611938]
[559.04522705 -161.30136108]
[550.89538574 -148.70732117]
[542.40020752 -136.34365845]
[533.56604004 -124.21984863]
[524.39978027 -112.34516907]
[514.90832520 -100.72872162]
[505.09906006 -89.37940979]
[494.97943115 -78.30592346]
[484.55722046 -67.51673889]
[473.84042358 -57.02013779]
[462.83718872 -46.82414627]
[451.55603027 -36.93658829]
[440.00552368 -27.36502647]
[428.19454956 -18.11680222]
[416.13214111 -9.19899654]
[403.82754517 -0.61844319]
[391.29019165 7.61828566]
[378.52969360 15.50487900]
[365.55581665 23.03529549]
[352.37847900 30.20376778]
[339.00781250 37.00480270]
[325.45404053 43.43318558]
[311.72753906 49.48400116]
[297.83886719 55.15260315]
[283.79861450 60.43465805]
[269.61755371 65.32611847]
[255.30654907 69.82322693]
[240.87655640 73.92255402]
[226.33865356 77.62094879]
[211.70396423 80.91557312]
[196.98368835 83.80391693]
[182.18911743 86.28376007]
[167.33158875 88.35320282]
[152.42247009 90.01065826]
[137.47320557 91.25485992]
[122.49521637 92.08485413]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
