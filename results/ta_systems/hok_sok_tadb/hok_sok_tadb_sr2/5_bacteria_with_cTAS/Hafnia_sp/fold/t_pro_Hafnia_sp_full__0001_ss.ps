%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 06:33:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__GAUGCCGCAAAAAACGGUGAUUUACUGUCUAUUGAUCGUCUGUAUAACGCUACUGGCGUUUAUCAGAAUCACACAUGGAUACCUGUGUGAGAUACAAAUAAAAAACGGUAAAAAAGAGGUUGCCGCCGUUUUAGCCUACGCAUCUAAA___\
) } def
/len { sequence length } bind def

/coor [
[86.89373779 421.05432129]
[71.98049927 419.09600830]
[57.65665436 414.50610352]
[44.38265991 407.43212891]
[32.58522034 398.10153198]
[22.64356995 386.81420898]
[14.87729645 373.93304443]
[9.53605175 359.87207031]
[6.79153538 345.08331299]
[6.73197126 330.04217529]
[9.35927486 315.23211670]
[14.58898926 301.12930298]
[22.25300026 288.18701172]
[32.10494232 276.82131958]
[43.82811356 267.39758301]
[57.04566956 260.21871948]
[71.33271027 255.51550293]
[86.22997284 253.43913269]
[86.84180450 238.45161438]
[87.45363617 223.46409607]
[72.29695129 220.96832275]
[57.56469727 216.61921692]
[43.48259735 210.48338318]
[30.26639175 202.65486145]
[18.11856651 193.25355530]
[7.22524023 182.42353821]
[-2.24669433 170.33070374]
[-10.15211773 157.16035461]
[-16.36991310 143.11425781]
[-20.80481529 128.40760803]
[-23.38888168 113.26571655]
[-24.08251953 97.92059326]
[-22.87510109 82.60733032]
[-19.78512573 67.56053162]
[-14.85993671 53.01074219]
[-28.37446976 46.50248718]
[-41.88900375 39.99422836]
[-57.67961884 40.97762680]
[-65.78940582 28.48440361]
[-79.30393982 21.97614670]
[-92.81847382 15.46789074]
[-106.33300018 8.95963478]
[-122.12361908 9.94303131]
[-130.23339844 -2.55019212]
[-143.74794006 -9.05844784]
[-157.34786987 -1.58708358]
[-172.73774719 -3.56986165]
[-183.99983215 -14.24436378]
[-186.80363464 -29.50602531]
[-180.07102966 -43.48642731]
[-166.39083862 -50.80981827]
[-151.02339172 -48.66020584]
[-139.87776184 -37.86416245]
[-137.23968506 -22.57298088]
[-123.72515106 -16.06472588]
[-108.90118408 -17.51363564]
[-99.82474518 -4.55489826]
[-86.31021118 1.95335770]
[-72.79568481 8.46161366]
[-59.28114700 14.96986961]
[-44.45718384 13.52095985]
[-35.38074493 26.47969627]
[-21.86621284 32.98795319]
[-8.35168076 39.49620819]
[-0.14321031 26.70516396]
[9.56726456 15.01343822]
[20.63409996 4.59638739]
[32.89130783 -4.38974619]
[46.15505219 -11.81018353]
[60.22639465 -17.55362892]
[74.89427948 -21.53393936]
[89.93872070 -23.69141388]
[105.13406372 -23.99369621]
[120.25239563 -22.43625259]
[123.59020996 -37.06016922]
[126.92802429 -51.68408966]
[130.26583862 -66.30800629]
[133.60365295 -80.93192291]
[136.94146729 -95.55584717]
[140.27928162 -110.17976379]
[134.93113708 -125.68232727]
[145.88552856 -137.88615417]
[161.87350464 -134.23699951]
[166.44802856 -118.48880005]
[154.90319824 -106.84194946]
[151.56538391 -92.21803284]
[148.22756958 -77.59411621]
[144.88975525 -62.97019577]
[141.55194092 -48.34627533]
[138.21412659 -33.72235489]
[134.87631226 -19.09843826]
[143.92120361 -16.06775284]
[152.70658875 -12.35128689]
[161.18054199 -7.97099781]
[169.29302979 -2.95276570]
[176.99609375 2.67375851]
[184.24423218 8.87533092]
[190.99461365 15.61530972]
[197.20735168 22.85387230]
[202.84576416 30.54825020]
[207.87649536 38.65298080]
[212.26985168 47.12017822]
[215.99986267 55.89981461]
[219.04449463 64.94001007]
[221.38575745 74.18736267]
[223.00982666 83.58722687]
[223.90708923 93.08406067]
[224.07225037 102.62176514]
[239.02233887 103.84440613]
[253.97242737 105.06703949]
[268.92251587 106.28968048]
[283.87258911 107.51232147]
[298.82269287 108.73496246]
[313.77276611 109.95759583]
[325.65811157 99.54056549]
[341.42254639 100.66214752]
[351.71334839 112.65694427]
[350.42514038 128.40864563]
[338.32220459 138.57205200]
[322.58502197 137.11738586]
[312.55014038 124.90768433]
[297.60003662 123.68505096]
[282.64996338 122.46240997]
[267.69985962 121.23976898]
[252.74978638 120.01712799]
[237.79969788 118.79449463]
[222.84960938 117.57185364]
[218.60722351 136.51196289]
[211.46353149 154.55892944]
[201.59327698 171.27131653]
[189.23791504 186.24031067]
[174.69966125 199.09973145]
[158.33413696 209.53503418]
[140.54168701 217.29095459]
[121.75753021 222.17776489]
[102.44114685 224.07592773]
[101.82932281 239.06344604]
[101.21749115 254.05096436]
[115.89594269 257.33468628]
[129.75209045 263.18676758]
[142.34051514 271.41909790]
[153.25656128 281.76702881]
[162.14930725 293.89794922]
[168.73291016 307.42184448]
[172.79571533 321.90402222]
[174.20712280 336.87893677]
[172.92175293 351.86517334]
[168.98095703 366.38101196]
[162.51138306 379.95983887]
[153.72100830 392.16513062]
[142.89242554 402.60455322]
[130.37370300 410.94250488]
[116.56728363 416.91098022]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 138]
[19 137]
[20 136]
[35 64]
[36 63]
[37 62]
[39 60]
[40 59]
[41 58]
[42 57]
[44 55]
[45 54]
[74 91]
[75 90]
[76 89]
[77 88]
[78 87]
[79 86]
[80 85]
[108 127]
[109 126]
[110 125]
[111 124]
[112 123]
[113 122]
[114 121]
] def

init

% Start Annotations
18 138 0.0 0.2 colorpair
19 137 0.16 1 colorpair
20 136 0.16 1 colorpair
35 64 0.0 1 colorpair
36 63 0.32 1 colorpair
37 62 0.16 1 colorpair
39 60 0.16 1 colorpair
40 59 0.16 1 colorpair
41 58 0.16 1 colorpair
42 57 0.0 0.2 colorpair
44 55 0.16 1 colorpair
45 54 0.16 0.2 colorpair
74 91 0.16 1 colorpair
75 90 0.0 0.2 colorpair
76 89 0.0 1 colorpair
77 88 0.16 1 colorpair
78 87 0.0 0.2 colorpair
79 86 0.0 1 colorpair
80 85 0.0 1 colorpair
108 127 0.0 0.2 colorpair
109 126 0.0 0.2 colorpair
110 125 0.0 1 colorpair
111 124 0.0 0.2 colorpair
112 123 0.0 0.2 colorpair
113 122 0.0 1 colorpair
114 121 0.16 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
18 138 2 gmark
19 cmark
137 cmark
136 cmark
36 cmark
63 cmark
37 cmark
39 cmark
60 cmark
40 cmark
59 cmark
58 cmark
42 57 2 gmark
55 cmark
45 54 2 gmark
54 cmark
74 cmark
75 90 2 gmark
77 cmark
78 87 2 gmark
108 127 2 gmark
109 126 2 gmark
111 124 2 gmark
112 123 2 gmark
114 121 2 gmark
114 cmark

% End Annotations
showpage
end
%%EOF
