%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 06:54:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__CUGUUGUUUGGCUUAGUAGUGAUUUGCUUCACUAUUUUAUUAUUGACCUGGAUGGUUCGUGAUUCGCUAUGUGAAUUACAGAUCAGGCAGGGAAAUAGUGAGCUGGUGGCAUUCUUAGCCUGUGAUAUU___AAACAGUAAGAGCAUCUGGUGGGGAUCUAUCCCCACCAU_____GCUUGCGGUG_UCA_GGCAUUCUCAAUGCACCCUUUCAUUG______\
) } def
/len { sequence length } bind def

/coor [
[89.42700195 563.44268799]
[74.90544128 559.59069824]
[61.04367447 553.79711914]
[48.09994888 546.16998291]
[36.31538773 536.85125732]
[25.90953636 526.01464844]
[17.07624626 513.86206055]
[9.98007774 500.61975098]
[4.75322676 486.53451538]
[1.49306679 471.86874390]
[0.26033279 456.89562988]
[1.07798982 441.89410400]
[3.93080521 427.14367676]
[8.76563358 412.91912842]
[15.49240398 399.48541260]
[23.98580170 387.09283447]
[34.08759689 375.97225952]
[45.60960388 366.33084106]
[58.33717346 358.34817505]
[72.03319550 352.17300415]
[86.44252777 347.92034912]
[101.29673004 345.66946411]
[101.08821869 330.67092896]
[100.87971497 315.67236328]
[88.33209229 304.46704102]
[87.76507568 287.31579590]
[100.01829529 274.82348633]
[99.60131836 259.82928467]
[99.18434906 244.83506775]
[98.76737976 229.84086609]
[86.06520844 218.81105042]
[85.25983429 201.66934204]
[97.33822632 189.00790405]
[96.60871887 174.02565002]
[87.43540955 173.03031921]
[78.45690918 170.90269470]
[69.81242371 167.67575073]
[61.63599014 163.39953613]
[54.05437088 158.14031982]
[47.18511963 151.97966003]
[41.13473892 145.01309204]
[35.99703979 137.34860229]
[31.85168076 129.10505676]
[28.76293182 120.41023254]
[26.77868271 111.39896393]
[25.92970085 102.21095276]
[26.22914696 92.98867035]
[27.67237854 83.87509155]
[30.23702049 75.01152039]
[33.88330841 66.53538513]
[21.25426483 58.44172668]
[5.46053123 57.50978088]
[-1.08014679 44.12812042]
[-13.70918751 36.03446198]
[-26.33822823 27.94080162]
[-38.96726990 19.84714317]
[-49.28473663 30.79182434]
[-61.43446350 39.65187073]
[-75.00180054 46.12672043]
[-89.52405548 49.99717712]
[-104.50627136 51.13284683]
[-119.43808746 49.49651337]
[-133.81114197 45.14536285]
[-147.13633728 38.22898102]
[-158.96054077 28.98422241]
[-168.88195801 17.72708702]
[-176.56381226 4.84193039]
[-181.74572754 -9.23166943]
[-184.25259399 -24.01390457]
[-184.00048828 -39.00108719]
[-180.99946594 -53.68283081]
[-175.35316467 -67.55941010]
[-187.98220825 -75.65306854]
[-202.85375977 -70.81869507]
[-217.33406067 -76.72249603]
[-224.58596802 -90.57688141]
[-221.18533325 -105.84022522]
[-208.73786926 -115.30565643]
[-193.12084961 -114.50387573]
[-181.70817566 -103.81346893]
[-179.88854980 -88.28211212]
[-167.25950623 -80.18845367]
[-157.01007080 -91.11499023]
[-144.92410278 -99.97441101]
[-131.41236877 -106.46379852]
[-116.93438721 -110.36083984]
[-101.98285675 -111.53137970]
[-87.06687164 -109.93410492]
[-72.69456482 -105.62195587]
[-59.35584641 -98.74037933]
[-47.50566483 -89.52244568]
[-37.54849243 -78.28092957]
[-29.82454681 -65.39770508]
[-24.59813118 -51.31079483]
[-22.04861641 -36.49943542]
[-22.26428032 -21.46780777]
[-25.23923874 -6.72786617]
[-30.87361145 7.21810198]
[-18.24456978 15.31176090]
[-5.61552858 23.40542030]
[7.01351261 31.49907875]
[21.90393257 31.85211372]
[29.34792519 45.81268692]
[41.97696686 53.90634537]
[52.39770889 42.16828156]
[65.18434143 32.77780914]
[79.80957031 26.20944023]
[95.65152740 22.81957436]
[112.02021027 22.82780266]
[128.18748474 26.30410385]
[129.43711853 11.35624599]
[130.68673706 -3.59161067]
[119.45999146 -14.47710514]
[117.90828705 -30.03751183]
[126.76430511 -42.92568207]
[141.84651184 -47.05621719]
[156.03352356 -40.47880173]
[162.62669373 -26.29909325]
[158.51292419 -11.21231651]
[145.63459778 -2.34198403]
[144.38497925 12.60587311]
[143.13534546 27.55373001]
[148.79414368 32.47592163]
[157.05718994 19.95704460]
[165.32022095 7.43816948]
[173.58325195 -5.08070612]
[181.84628296 -17.59958267]
[190.10932922 -30.11845779]
[198.37236023 -42.63733292]
[206.63539124 -55.15620804]
[214.89843750 -67.67508698]
[216.44859314 -82.59477234]
[224.16275024 -95.45912933]
[236.59341431 -103.85428619]
[251.40808105 -106.20497131]
[265.82690430 -102.07010651]
[277.14437866 -92.22554016]
[283.23681641 -78.51853180]
[282.96105957 -63.52106857]
[276.36886597 -50.04727936]
[264.69720459 -40.62540054]
[250.13719177 -37.02337646]
[238.88401794 -27.10541725]
[227.63082886 -17.18745613]
[216.37765503 -7.26949692]
[205.12448120 2.64846301]
[193.87129211 12.56642342]
[182.61811829 22.48438263]
[171.36492920 32.40234375]
[160.11175537 42.32030487]
[165.77055359 47.24249268]
[180.40107727 43.93372726]
[192.15458679 33.34291077]
[206.27508545 38.08218765]
[220.90560913 34.77341843]
[232.65911865 24.18260193]
[246.77961731 28.92187691]
[261.41015625 25.61311150]
[276.04064941 22.30434418]
[287.71041870 10.78267193]
[303.44949341 15.38845348]
[307.06689453 31.38365555]
[294.84133911 42.31378555]
[279.34942627 36.93486404]
[264.71890259 40.24362946]
[250.08839417 43.55239487]
[239.38134766 53.90654755]
[224.21437073 49.40393829]
[209.58386230 52.71270370]
[198.87681580 63.06685638]
[183.70983887 58.56424713]
[169.07931519 61.87301254]
[172.86529541 70.52079773]
[175.57839966 79.52524567]
[177.18782043 88.75434875]
[177.67889404 98.07388306]
[177.05311584 107.34934235]
[175.32806396 116.44787598]
[172.53700256 125.24021149]
[168.72827148 133.60246277]
[163.96446228 141.41790771]
[158.32145691 148.57858276]
[151.88717651 154.98678589]
[144.76023865 160.55642700]
[137.04847717 165.21414185]
[128.86727905 168.90028381]
[120.33787537 171.56964111]
[111.58553314 173.19203186]
[115.18371582 181.57589722]
[112.32518005 188.38253784]
[123.21729279 196.29470825]
[127.50444031 208.85101318]
[123.83467865 221.39889526]
[113.76158142 229.42390442]
[114.17855072 244.41810608]
[114.59552765 259.41229248]
[115.01249695 274.40649414]
[125.79357147 282.46932983]
[129.90577698 295.08401489]
[126.06194305 307.57965088]
[115.87826538 315.46386719]
[116.08676910 330.46240234]
[116.29528046 345.46096802]
[131.20631409 347.29806519]
[145.72828674 351.14852905]
[159.59066772 356.94058228]
[172.53523254 364.56634521]
[184.32080078 373.88375854]
[194.72781372 384.71923828]
[203.56242371 396.87091064]
[210.66003418 410.11242676]
[215.88839722 424.19711304]
[219.15014648 438.86251831]
[220.38450623 453.83551025]
[219.56846619 468.83709717]
[216.71725464 483.58782959]
[211.88395691 497.81292725]
[205.15864563 511.24734497]
[196.66659546 523.64086914]
[186.56599426 534.76251221]
[175.04502869 544.40521240]
[162.31832886 552.38922119]
[148.62297058 558.56585693]
[134.21411133 562.82006836]
[119.36015320 565.07257080]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 203]
[23 202]
[24 201]
[27 197]
[28 196]
[29 195]
[30 194]
[33 190]
[34 188]
[50 104]
[51 103]
[53 101]
[54 100]
[55 99]
[56 98]
[72 82]
[73 81]
[110 122]
[111 121]
[112 120]
[151 172]
[152 171]
[154 169]
[155 168]
[157 166]
[158 165]
[159 164]
] def

init

% Start Annotations
22 203 0.16 1 colorpair
24 201 0.16 1 colorpair
27 197 0.0 1 colorpair
28 196 0.16 1 colorpair
30 194 0.16 1 colorpair
33 190 0.0 1 colorpair
34 188 0.0 1 colorpair
51 103 0.0 1 colorpair
53 101 0.16 1 colorpair
54 100 0.16 0.6 colorpair
55 99 0.0 1 colorpair
72 82 0.16 1 colorpair
73 81 0.0 1 colorpair
110 122 0.16 1 colorpair
111 121 0.0 1 colorpair
112 120 0.0 1 colorpair
152 171 0.16 1 colorpair
155 168 0.0 1 colorpair
157 166 0.16 1 colorpair
158 165 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
203 cmark
23 202 3 gmark
23 cmark
202 cmark
24 cmark
201 cmark
196 cmark
29 195 4 gmark
29 cmark
195 cmark
30 cmark
50 104 3 gmark
50 cmark
53 cmark
101 cmark
54 100 1 gmark
54 cmark
100 cmark
56 98 4 gmark
98 cmark
82 cmark
122 cmark
151 172 4 gmark
151 cmark
172 cmark
171 cmark
154 169 3 gmark
154 cmark
169 cmark
157 cmark
166 cmark
159 164 3 gmark
159 cmark
164 cmark

% End Annotations
showpage
end
%%EOF
