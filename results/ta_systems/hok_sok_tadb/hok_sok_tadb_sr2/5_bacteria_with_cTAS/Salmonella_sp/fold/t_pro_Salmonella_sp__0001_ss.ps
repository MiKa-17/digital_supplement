%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 07:05:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAAAUGCCGAACCAACCCAUUGUUUUGUGCAUAUUAAUAGUUUGUUUAACGCUGUUGAUAUUCACCUGGCUCACACGAAACUCGCUUUGCGAGUUGCGGAUGAAAGACGGAACAAGGGAGGUAUUUGCUAUCCUGGCCUACGAAUCCGGUAAG\
) } def
/len { sequence length } bind def

/coor [
[181.51631165 489.45654297]
[167.52117920 495.78363037]
[152.23910522 494.24954224]
[139.78085327 485.26690674]
[133.49766541 471.25201416]
[135.07966614 455.97479248]
[144.10130310 443.54476929]
[158.13581848 437.30554199]
[159.63407898 422.38055420]
[161.13233948 407.45556641]
[162.63059998 392.53057861]
[164.12886047 377.60559082]
[150.40734863 347.73443604]
[165.79756165 325.27023315]
[160.51089478 311.23275757]
[155.22421265 297.19525146]
[144.31068420 291.89712524]
[139.80970764 280.20007324]
[144.65664673 268.20779419]
[139.65190125 254.06735229]
[134.64715576 239.92689514]
[129.42147827 234.64103699]
[129.68682861 225.45314026]
[124.96601868 211.21537781]
[120.24520874 196.97760010]
[115.52439880 182.73983765]
[110.80358887 168.50207520]
[106.08277893 154.26431274]
[101.36196899 140.02655029]
[96.64115906 125.78878021]
[91.92034912 111.55101776]
[81.69159698 100.57957458]
[65.98567963 102.48609924]
[57.15811920 90.48928833]
[43.28561020 84.78372192]
[29.41310310 79.07814789]
[15.54059601 73.37258148]
[1.66808808 67.66700745]
[-12.20441914 61.96143723]
[-26.07692719 56.25586700]
[-39.94943619 50.55029678]
[-53.82194138 44.84472656]
[-67.69445038 39.13915634]
[-81.56695557 33.43358612]
[-97.27287292 35.34011459]
[-106.10043335 23.34330559]
[-121.40086365 28.16787529]
[-134.63156128 19.09439278]
[-135.64308167 3.08325982]
[-123.65946198 -7.58315420]
[-107.87351227 -4.72248840]
[-100.39486694 9.47079849]
[-85.68120575 7.15617132]
[-75.86138916 19.56107903]
[-61.98888016 25.26664925]
[-48.11637115 30.97221947]
[-34.24386215 36.67779160]
[-20.37135696 42.38336182]
[-6.49884892 48.08893204]
[7.37365866 53.79450226]
[21.24616623 59.50007248]
[35.11867523 65.20564270]
[48.99118042 70.91121674]
[62.86368942 76.61678314]
[77.57734680 74.30215454]
[87.39716339 86.70706177]
[74.06298065 79.83687592]
[67.72431183 66.24197388]
[71.03378296 51.61161804]
[82.60643005 42.06836319]
[97.59930420 41.60591125]
[109.73811340 50.41779327]
[113.94297791 64.81637573]
[108.45339966 78.77704620]
[115.11575317 65.33781433]
[121.77811432 51.89858246]
[116.96200562 37.08497620]
[123.91003418 23.55059242]
[138.06222534 19.05046272]
[144.72457886 5.61122894]
[143.92179871 -10.18959808]
[156.50692749 -18.15600586]
[163.16929626 -31.59523964]
[169.83164978 -45.03447342]
[176.49400330 -58.47370529]
[183.15635681 -71.91294098]
[189.81872559 -85.35217285]
[196.48107910 -98.79140472]
[198.09892273 -115.66798401]
[214.76382446 -118.78525543]
[222.37258911 -103.63457489]
[209.92030334 -92.12905121]
[203.25794983 -78.68981171]
[196.59559631 -65.25057983]
[189.93324280 -51.81134796]
[183.27087402 -38.37211609]
[176.60852051 -24.93288231]
[169.94616699 -11.49364853]
[171.22547913 3.34591436]
[158.16380310 12.27358627]
[151.50144958 25.71282005]
[156.48829651 39.70092010]
[149.92317200 53.42512131]
[135.21734619 58.56093979]
[128.55499268 72.00017548]
[121.89263153 85.43940735]
[121.43412018 94.96079254]
[117.60582733 102.21392822]
[111.94139862 106.23345947]
[106.15811920 106.83020782]
[110.87892914 121.06797028]
[115.59973907 135.30574036]
[120.32054901 149.54350281]
[125.04135132 163.78126526]
[129.76216125 178.01902771]
[134.48297119 192.25679016]
[139.20378113 206.49456787]
[143.92459106 220.73233032]
[148.78761292 234.92214966]
[153.79235840 249.06260681]
[158.79710388 263.20306396]
[173.06619263 274.80139160]
[169.26170349 291.90856934]
[174.54837036 305.94607544]
[179.83505249 319.98355103]
[190.11341858 319.04626465]
[200.78233337 322.52035522]
[209.91432190 330.49349976]
[215.60804749 342.21163940]
[216.35096741 356.12738037]
[227.91630554 365.67947388]
[239.48165894 375.23159790]
[251.04699707 384.78369141]
[267.10968018 390.20828247]
[266.34368896 407.14492798]
[249.85688782 411.09738159]
[241.49490356 396.34902954]
[229.92955017 386.79693604]
[218.36419678 377.24481201]
[206.79885864 367.69271851]
[199.86259460 370.54550171]
[205.56817627 384.41799927]
[211.27374268 398.29052734]
[220.98687744 409.72094727]
[213.11740112 422.49087524]
[198.54066467 418.95266724]
[197.40122986 403.99609375]
[191.69566345 390.12359619]
[185.99009705 376.25106812]
[179.05383301 379.10385132]
[177.55558777 394.02883911]
[176.05732727 408.95382690]
[174.55906677 423.87881470]
[173.06080627 438.80380249]
[185.57511902 447.70816040]
[191.94604492 461.68338013]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 154]
[9 153]
[10 152]
[11 151]
[12 150]
[14 125]
[15 124]
[16 123]
[19 121]
[20 120]
[21 119]
[23 118]
[24 117]
[25 116]
[26 115]
[27 114]
[28 113]
[29 112]
[30 111]
[31 110]
[32 66]
[34 64]
[35 63]
[36 62]
[37 61]
[38 60]
[39 59]
[40 58]
[41 57]
[42 56]
[43 55]
[44 54]
[46 52]
[74 106]
[75 105]
[76 104]
[79 101]
[80 100]
[82 98]
[83 97]
[84 96]
[85 95]
[86 94]
[87 93]
[88 92]
[130 140]
[131 139]
[132 138]
[133 137]
] def

init

% Start Annotations
8 154 0.0 1 colorpair
9 153 0.0 1 colorpair
10 152 0.0 1 colorpair
11 151 0.0 1 colorpair
12 150 0.0 1 colorpair
14 125 0.0 1 colorpair
15 124 0.0 1 colorpair
16 123 0.0 1 colorpair
19 121 0.0 1 colorpair
20 120 0.0 1 colorpair
21 119 0.0 1 colorpair
23 118 0.0 1 colorpair
24 117 0.0 1 colorpair
25 116 0.0 1 colorpair
26 115 0.0 1 colorpair
27 114 0.0 1 colorpair
28 113 0.0 1 colorpair
29 112 0.0 1 colorpair
30 111 0.0 1 colorpair
31 110 0.0 1 colorpair
32 66 0.0 1 colorpair
34 64 0.0 1 colorpair
35 63 0.0 1 colorpair
36 62 0.0 1 colorpair
37 61 0.0 1 colorpair
38 60 0.0 1 colorpair
39 59 0.0 1 colorpair
40 58 0.0 1 colorpair
41 57 0.0 1 colorpair
42 56 0.0 1 colorpair
43 55 0.0 1 colorpair
44 54 0.0 1 colorpair
46 52 0.0 1 colorpair
74 106 0.0 1 colorpair
75 105 0.0 1 colorpair
76 104 0.0 1 colorpair
79 101 0.0 1 colorpair
80 100 0.0 1 colorpair
82 98 0.0 1 colorpair
83 97 0.0 1 colorpair
84 96 0.0 1 colorpair
85 95 0.0 1 colorpair
86 94 0.0 1 colorpair
87 93 0.0 1 colorpair
88 92 0.0 1 colorpair
130 140 0.0 1 colorpair
131 139 0.0 1 colorpair
132 138 0.0 1 colorpair
133 137 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
