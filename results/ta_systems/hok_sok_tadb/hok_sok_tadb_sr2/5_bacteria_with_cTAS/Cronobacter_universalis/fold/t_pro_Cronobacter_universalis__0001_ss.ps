%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 01:58:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAACUGAAGCAAAAUACUCUUAUCUGGUGCAUAAUAAUUGUUUGUAUGACGGUAUUAAUGUUCACCACCCUUACACGGGAAACGCUGUGCGAACUGCGCUUGAAGGACGCGAAUAGGGAGGUUGCCGCGUCACUGGCUUACAAAUCCGGU___\
) } def
/len { sequence length } bind def

/coor [
[100.23498535 316.54089355]
[85.67308807 312.64031982]
[72.46813202 305.36758423]
[61.38785172 295.14550781]
[53.07643509 282.56838989]
[48.01708984 268.36746216]
[46.50396729 253.36833191]
[48.62503815 238.44303894]
[54.25698090 224.45930481]
[63.07236862 212.23014832]
[74.55867767 202.46653748]
[88.04811859 195.73611450]
[102.75642395 192.43020630]
[103.05655670 177.43319702]
[103.35668945 162.43620300]
[103.65682220 147.43920898]
[103.95695496 132.44221497]
[102.41453552 147.36270142]
[96.01824951 160.93058777]
[85.48986053 171.61482239]
[72.01742554 178.20979309]
[57.12120819 179.97126770]
[42.48214722 176.70051575]
[29.75215149 168.76658630]
[20.36770821 157.06477356]
[15.38778305 142.91555786]
[15.37432766 127.91556549]
[20.32885933 113.75743866]
[29.69395065 102.03733826]
[15.82144451 96.33177185]
[1.94893646 90.62619781]
[-11.92357063 84.92062378]
[-27.62948418 86.82715607]
[-36.45705032 74.83034515]
[-50.32955551 69.12477875]
[-64.20206451 63.41920471]
[-78.07456970 57.71363449]
[-91.94708252 52.00806427]
[-105.81958771 46.30249405]
[-119.69209290 40.59692383]
[-133.56460571 34.89135361]
[-143.41023254 39.67775345]
[-154.04229736 38.25288773]
[-161.94851685 31.33292961]
[-164.65295410 21.40823174]
[-178.28607178 15.15219688]
[-191.91920471 8.89616108]
[-205.55232239 2.64012527]
[-222.46984863 1.52947927]
[-226.08584595 -15.03436375]
[-211.17033386 -23.09437370]
[-199.29629517 -10.99299717]
[-185.66316223 -4.73696136]
[-172.03004456 1.51907432]
[-158.39692688 7.77510977]
[-139.37059021 4.51536846]
[-127.85903168 21.01884651]
[-113.98652649 26.72441673]
[-100.11401367 32.42998505]
[-86.24150848 38.13555908]
[-72.36900330 43.84112930]
[-58.49649429 49.54669952]
[-44.62398529 55.25226974]
[-30.75147820 60.95783997]
[-16.03781891 58.64321136]
[-6.21800041 71.04811859]
[7.65450716 76.75369263]
[21.52701378 82.45925903]
[35.39952087 88.16483307]
[41.45831680 83.74430847]
[59.63469696 70.48274231]
[58.43537140 55.53076553]
[57.23604584 40.57878876]
[45.04200363 30.52488708]
[43.61188507 14.78543663]
[53.79414749 2.69837475]
[69.54783630 1.43474066]
[81.52657318 11.74422646]
[82.62357330 27.51039696]
[72.18801880 39.37946320]
[73.38734436 54.33143997]
[74.58667755 69.28341675]
[81.95156860 70.70056915]
[96.68135834 73.53487396]
[104.04625702 74.95201874]
[110.70861053 61.51278687]
[117.37097168 48.07355499]
[124.03332520 34.63432312]
[125.65118408 17.75774384]
[142.31608582 14.64046860]
[149.92483521 29.79115105]
[137.47256470 41.29668045]
[130.81021118 54.73591232]
[124.14785004 68.17514801]
[117.48548889 81.61437988]
[121.08284760 88.19533539]
[131.37730408 77.28551483]
[144.93431091 83.70481873]
[143.01850891 98.58197021]
[128.27757263 101.35725403]
[131.87493896 107.93820953]
[146.78417969 109.58571625]
[161.69343567 111.23322296]
[176.25993347 105.05845642]
[188.06037903 114.14682770]
[202.96963501 115.79433441]
[217.87887573 117.44184113]
[232.78813171 119.08934784]
[247.35462952 112.91458130]
[259.15509033 122.00296021]
[274.06433105 123.65046692]
[288.97357178 125.29797363]
[303.88284302 126.94548035]
[318.44934082 120.77071381]
[330.24978638 129.85908508]
[345.15902710 131.50659180]
[355.50338745 119.94051361]
[370.67758179 116.69653320]
[384.84683228 123.02202606]
[392.56277466 136.48471069]
[390.85848999 151.90789795]
[380.38928223 163.36108398]
[365.18078613 166.44026184]
[351.08099365 159.96142578]
[343.51153564 146.41584778]
[328.60229492 144.76834106]
[315.10220337 151.06094360]
[302.23532104 141.85472107]
[287.32608032 140.20721436]
[272.41683960 138.55970764]
[257.50756836 136.91220093]
[244.00749207 143.20481873]
[231.14062500 133.99859619]
[216.23136902 132.35108948]
[201.32212830 130.70358276]
[186.41287231 129.05607605]
[172.91279602 135.34867859]
[160.04592896 126.14247131]
[145.13667297 124.49496460]
[130.22743225 122.84745789]
[118.95394897 132.74234009]
[118.65382385 147.73934937]
[118.35369110 162.73634338]
[118.05355835 177.73333740]
[117.75342560 192.73033142]
[132.31768799 196.62208557]
[145.52703857 203.88681030]
[156.61352539 214.10217285]
[164.93255615 226.67424011]
[170.00051880 240.87210083]
[171.52273560 255.87031555]
[169.41070557 270.79687500]
[163.78724670 284.78402710]
[154.97927856 297.01852417]
[143.49888611 306.78909302]
[130.01353455 313.52770996]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 145]
[14 144]
[15 143]
[16 142]
[17 141]
[29 69]
[30 68]
[31 67]
[32 66]
[34 64]
[35 63]
[36 62]
[37 61]
[38 60]
[39 59]
[40 58]
[41 57]
[45 55]
[46 54]
[47 53]
[48 52]
[71 82]
[72 81]
[73 80]
[85 95]
[86 94]
[87 93]
[88 92]
[101 140]
[102 139]
[103 138]
[105 136]
[106 135]
[107 134]
[108 133]
[110 131]
[111 130]
[112 129]
[113 128]
[115 126]
[116 125]
] def

init

% Start Annotations
13 145 0.0 0.2 colorpair
14 144 0.16 1 colorpair
15 143 0.0 0.2 colorpair
16 142 0.0 1 colorpair
17 141 0.16 1 colorpair
29 69 0.0 0.2 colorpair
30 68 0.0 1 colorpair
31 67 0.0 1 colorpair
32 66 0.0 1 colorpair
34 64 0.16 1 colorpair
35 63 0.16 1 colorpair
36 62 0.0 0.2 colorpair
37 61 0.0 0.2 colorpair
38 60 0.0 1 colorpair
39 59 0.0 0.2 colorpair
40 58 0.0 1 colorpair
41 57 0.16 1 colorpair
45 55 0.16 0.6 colorpair
46 54 0.16 0.6 colorpair
47 53 0.0 1 colorpair
48 52 0.0 1 colorpair
71 82 0.16 0.6 colorpair
72 81 0.0 0.2 colorpair
73 80 0.0 1 colorpair
85 95 0.0 0.2 colorpair
86 94 0.0 1 colorpair
87 93 0.0 1 colorpair
88 92 0.0 1 colorpair
101 140 0.0 1 colorpair
102 139 0.16 0.6 colorpair
103 138 0.16 1 colorpair
105 136 0.0 0.6 colorpair
106 135 0.0 0.2 colorpair
107 134 0.16 1 colorpair
108 133 0.0 1 colorpair
110 131 0.0 0.2 colorpair
111 130 0.0 1 colorpair
112 129 0.32 1 colorpair
113 128 0.0 0.2 colorpair
115 126 0.0 0.2 colorpair
116 125 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
13 145 2 gmark
14 cmark
144 cmark
15 143 2 gmark
17 cmark
29 69 2 gmark
34 cmark
63 cmark
36 62 2 gmark
37 61 2 gmark
39 59 2 gmark
57 cmark
45 55 1 gmark
45 cmark
55 cmark
46 54 1 gmark
54 cmark
71 82 1 gmark
71 cmark
82 cmark
72 81 2 gmark
85 95 2 gmark
102 139 1 gmark
102 cmark
103 cmark
105 136 1 gmark
106 135 2 gmark
107 cmark
134 cmark
110 131 2 gmark
112 cmark
129 cmark
113 128 2 gmark
115 126 2 gmark
116 125 1 gmark
116 cmark

% End Annotations
showpage
end
%%EOF
