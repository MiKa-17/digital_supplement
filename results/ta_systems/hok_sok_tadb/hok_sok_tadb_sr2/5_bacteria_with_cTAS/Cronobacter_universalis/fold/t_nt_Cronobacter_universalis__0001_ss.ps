%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 01:58:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAGAGGCUAAGCUGAAGAUGUCUAGGAAGCAGACAGCCUCGUUGGUUAAUGAAA__AAUGACCUUCGGGGCUUUCUUCUUUCUGCC__CCACCAUAACGGCAACACUGCCGACAGCAGGAGGCAAAAAGCCUCAAGCGCC\
) } def
/len { sequence length } bind def

/coor [
[65.18810272 87.64845276]
[52.36442184 79.86685944]
[39.54074478 72.08525848]
[32.82782745 71.55020142]
[28.13976288 68.17156219]
[26.33791733 63.67412949]
[13.86587334 55.34057617]
[1.21500206 47.28108215]
[-11.60867596 39.49948120]
[-24.43235397 31.71788406]
[-28.49252510 36.34359741]
[-34.28585052 39.78459930]
[-41.42584610 41.43192291]
[-54.73101044 48.35815048]
[-68.03617096 55.28438187]
[-81.34133148 62.21060944]
[-94.64649963 69.13684082]
[-107.95166016 76.06306458]
[-121.25682068 82.98929596]
[-134.56198120 89.91552734]
[-147.86714172 96.84175873]
[-161.17230225 103.76798248]
[-167.34844971 118.57456207]
[-182.81439209 122.83887482]
[-195.70597839 113.28971100]
[-196.13388062 97.25236511]
[-183.76986694 87.02931976]
[-168.09854126 90.46282196]
[-154.79338074 83.53659058]
[-141.48822021 76.61036682]
[-128.18304443 69.68413544]
[-114.87789154 62.75790405]
[-101.57272339 55.83167648]
[-88.26756287 48.90544891]
[-74.96240234 41.97921753]
[-61.65723801 35.05298996]
[-48.35207748 28.12676048]
[-45.26541901 13.44777679]
[-54.65427017 1.74950969]
[-64.04312134 -9.94875717]
[-73.43197632 -21.64702415]
[-82.82082367 -33.34529114]
[-92.20967865 -45.04356003]
[-101.59853363 -56.74182510]
[-117.06350708 -58.60522079]
[-126.41849518 -70.60267639]
[-124.54672241 -85.33468628]
[-133.93557739 -97.03295135]
[-143.32443237 -108.73121643]
[-152.71328735 -120.42948914]
[-162.10212708 -132.12774658]
[-171.49098206 -143.82601929]
[-180.87983704 -155.52429199]
[-196.61549377 -156.99549866]
[-206.63754272 -169.21572876]
[-205.00004578 -184.93496704]
[-192.67453003 -194.82723999]
[-176.97349548 -193.02365112]
[-167.21208191 -180.59423828]
[-169.18156433 -164.91314697]
[-159.79272461 -153.21487427]
[-150.40386963 -141.51660156]
[-141.01501465 -129.81834412]
[-131.62615967 -118.12007141]
[-122.23731232 -106.42180634]
[-112.84845734 -94.72353363]
[-98.06053162 -93.36234283]
[-88.37225342 -81.63238525]
[-89.90026093 -66.13067627]
[-80.51141357 -54.43241119]
[-71.12255859 -42.73414230]
[-61.73370743 -31.03587723]
[-52.34485626 -19.33761024]
[-42.95600128 -7.63934231]
[-33.56715012 4.05892467]
[-37.50588608 -10.41471958]
[-34.53891754 -25.11836243]
[-25.29579735 -36.93211365]
[-11.73777199 -43.34927368]
[3.25835037 -43.00821686]
[16.51061821 -35.98131180]
[25.20710182 -23.75956154]
[27.50253677 -8.93623543]
[22.90986824 5.34337902]
[12.40359116 16.04936409]
[-1.78702247 20.91007233]
[-16.65075493 18.89420509]
[-3.82707715 26.67580414]
[8.99660110 34.45740509]
[13.83415222 34.18973160]
[18.87750244 37.01068497]
[22.19942665 42.86853027]
[34.67147064 51.20208359]
[47.32234192 59.26157761]
[60.14602280 67.04317474]
[72.96969604 74.82477570]
[86.03067780 65.80516052]
[101.67110443 63.09964371]
[117.00296021 67.20780182]
[129.19520569 77.37105560]
[135.99653625 91.71276855]
[150.99296570 91.38554382]
[165.98939514 91.05831909]
[180.98582458 90.73109436]
[195.98225403 90.40387726]
[209.71374512 81.43848419]
[224.21951294 89.08799744]
[224.57725525 105.48323822]
[210.41897583 113.75820160]
[196.30947876 105.40030670]
[181.31304932 105.72753143]
[166.31661987 106.05474854]
[151.32019043 106.38197327]
[136.32376099 106.70919800]
[135.12132263 111.44208527]
[133.30508423 115.97499084]
[130.90676880 120.22871399]
[127.96829224 124.12889099]
[137.09971619 136.02919006]
[151.63914490 142.26744080]
[153.24859619 157.07482910]
[162.38002014 168.97512817]
[171.51144409 180.87542725]
[180.64286804 192.77572632]
[189.77429199 204.67602539]
[198.90570068 216.57632446]
[214.55981445 220.08750916]
[221.44497681 234.57800293]
[214.27947998 248.93193054]
[198.56008911 252.13818359]
[186.34536743 241.73722839]
[187.00540161 225.70774841]
[177.87399292 213.80744934]
[168.74256897 201.90715027]
[159.61114502 190.00685120]
[150.47972107 178.10655212]
[141.34829712 166.20625305]
[127.46201324 160.81919861]
[125.19941711 145.16061401]
[116.06799316 133.26031494]
[99.17554474 136.92897034]
[82.46365356 132.51008606]
[69.59226990 120.97138977]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 96]
[2 95]
[3 94]
[6 93]
[7 92]
[8 89]
[9 88]
[10 87]
[13 37]
[14 36]
[15 35]
[16 34]
[17 33]
[18 32]
[19 31]
[20 30]
[21 29]
[22 28]
[38 75]
[39 74]
[40 73]
[41 72]
[42 71]
[43 70]
[44 69]
[47 66]
[48 65]
[49 64]
[50 63]
[51 62]
[52 61]
[53 60]
[101 114]
[102 113]
[103 112]
[104 111]
[105 110]
[118 140]
[119 139]
[121 137]
[122 136]
[123 135]
[124 134]
[125 133]
[126 132]
] def

init

% Start Annotations
1 96 0.0 1 colorpair
2 95 0.0 1 colorpair
3 94 0.16 1 colorpair
6 93 0.0 1 colorpair
7 92 0.0 0.6 colorpair
8 89 0.0 1 colorpair
9 88 0.0 1 colorpair
10 87 0.0 1 colorpair
13 37 0.0 0.6 colorpair
14 36 0.16 1 colorpair
15 35 0.0 1 colorpair
16 34 0.0 1 colorpair
17 33 0.0 0.6 colorpair
18 32 0.16 1 colorpair
19 31 0.16 1 colorpair
20 30 0.16 1 colorpair
21 29 0.0 0.6 colorpair
22 28 0.0 0.6 colorpair
38 75 0.16 1 colorpair
39 74 0.0 1 colorpair
40 73 0.0 1 colorpair
41 72 0.0 1 colorpair
42 71 0.0 1 colorpair
43 70 0.0 1 colorpair
44 69 0.0 1 colorpair
47 66 0.0 1 colorpair
48 65 0.0 1 colorpair
49 64 0.0 1 colorpair
50 63 0.0 1 colorpair
51 62 0.0 1 colorpair
52 61 0.0 0.6 colorpair
53 60 0.0 1 colorpair
101 114 0.0 1 colorpair
102 113 0.0 0.6 colorpair
103 112 0.0 1 colorpair
104 111 0.16 1 colorpair
105 110 0.0 1 colorpair
118 140 0.0 1 colorpair
119 139 0.0 1 colorpair
121 137 0.0 0.6 colorpair
122 136 0.0 1 colorpair
123 135 0.0 1 colorpair
124 134 0.0 1 colorpair
125 133 0.0 1 colorpair
126 132 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
94 cmark
7 92 1 gmark
13 37 1 gmark
14 cmark
36 cmark
17 33 1 gmark
18 cmark
32 cmark
19 cmark
31 cmark
20 cmark
30 cmark
21 29 1 gmark
22 28 1 gmark
38 cmark
52 61 1 gmark
102 113 1 gmark
104 cmark
121 137 1 gmark

% End Annotations
showpage
end
%%EOF
