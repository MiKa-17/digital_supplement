%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 06:57:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
________GCCUUUAAAAACCAUGUUAGGCAUUGUUUUAAUCGUUUGUCUAACAAUCGUGAUUUUUACCUUUAUUAAUCGCGGCAGGCUGUGCGAGUUAUCAAUAAAGAGUGAACAUCAGGAGGUGGCGGCAAAAUUAGCCUGUA___C_GGU___\
) } def
/len { sequence length } bind def

/coor [
[26.85476494 604.96002197]
[13.31798553 611.49114990]
[-1.05715716 615.87933350]
[-15.93369102 618.02154541]
[-30.96288681 617.86767578]
[-45.79244232 615.42132568]
[-60.07472610 610.73974609]
[-73.47494507 603.93280029]
[-85.67897797 595.16003418]
[-96.40074921 584.62701416]
[-105.38891602 572.58068848]
[-112.43278503 559.30352783]
[-117.36724091 545.10662842]
[-120.07661438 530.32287598]
[-120.49739075 515.29876709]
[-118.61971283 500.38653564]
[-114.48758698 485.93572998]
[-108.19787598 472.28506470]
[-99.89802551 459.75460815]
[-89.78259277 448.63800049]
[-78.08870697 439.19589233]
[-65.09046936 431.64962769]
[-51.09259796 426.17605591]
[-36.42321396 422.90350342]
[-21.42618752 421.90869141]
[-6.45307302 423.21493530]
[-2.88576007 408.64529419]
[0.68155301 394.07565308]
[4.24886608 379.50601196]
[7.81617880 364.93640137]
[-0.35701105 354.93310547]
[-1.27263141 341.85247803]
[5.62935114 330.47470093]
[18.01074409 325.08782959]
[21.86886406 310.59249878]
[25.72698402 296.09713745]
[29.58510399 281.60180664]
[33.44322205 267.10647583]
[27.64269257 256.45144653]
[30.77965927 244.31723022]
[41.69458771 237.37666321]
[45.84196854 222.96142578]
[49.98935318 208.54617310]
[54.13673401 194.13093567]
[58.28411484 179.71569824]
[44.51661301 185.67018127]
[30.50398254 180.31796265]
[24.21172523 166.70152283]
[29.21667671 152.56112671]
[42.67377090 145.93492126]
[56.93330383 150.58956909]
[63.88937378 163.87854004]
[69.73345184 150.06381226]
[65.47731781 138.70332336]
[70.27765656 127.12590790]
[82.05467987 121.77719116]
[88.17400360 108.08216095]
[86.92221069 94.15647888]
[98.13096619 85.79851532]
[104.25028992 72.10348511]
[110.36961365 58.40845490]
[116.48893738 44.71342468]
[115.05461121 28.95736885]
[127.31093597 20.49381447]
[133.43026733 6.79878330]
[139.54959106 -6.89624739]
[145.66891479 -20.59127808]
[151.78823853 -34.28630829]
[157.77023315 -48.04187775]
[163.61431885 -61.85660553]
[169.45838928 -75.67133331]
[175.30247498 -89.48606873]
[181.14654541 -103.30079651]
[186.99063110 -117.11552429]
[192.41748047 -131.09941101]
[197.42222595 -145.23986816]
[193.62611389 -163.23204041]
[207.34504700 -174.13714600]
[212.06585693 -188.37490845]
[216.78666687 -202.61267090]
[221.50747681 -216.85044861]
[226.22828674 -231.08821106]
[217.07402039 -243.61734009]
[217.06616211 -259.13439941]
[226.20774841 -271.67279053]
[240.98362732 -276.41122437]
[255.71220398 -271.52767944]
[264.73001099 -258.89999390]
[264.56951904 -243.38374329]
[255.29246521 -230.94526672]
[240.46604919 -226.36740112]
[235.74523926 -212.12963867]
[231.02442932 -197.89186096]
[226.30361938 -183.65409851]
[221.58280945 -169.41633606]
[226.73364258 -158.43252563]
[222.87434387 -146.50836182]
[211.56268311 -140.23512268]
[206.55793762 -126.09467316]
[207.77894592 -122.73052979]
[207.39633179 -118.59995270]
[205.06452942 -114.47944641]
[200.80535889 -111.27144623]
[194.96127319 -97.45671844]
[189.11720276 -83.64199066]
[183.27311707 -69.82725525]
[177.42904663 -56.01252747]
[171.58496094 -42.19779968]
[171.87698364 -34.77064514]
[165.48326111 -28.16698456]
[159.36393738 -14.47195339]
[153.24461365 -0.77692300]
[147.12528992 12.91810799]
[141.00596619 26.61313820]
[142.87799072 41.38963318]
[130.18395996 50.83274841]
[124.06464386 64.52777863]
[117.94532013 78.22280884]
[111.82599640 91.91783905]
[113.07778931 105.84352112]
[101.86903381 114.20148468]
[95.74971008 127.89651489]
[98.09510040 146.13458252]
[83.54817963 155.90788269]
[77.70410156 169.72262573]
[72.69935608 183.86308289]
[68.55197906 198.27832031]
[64.40459442 212.69355774]
[60.25721359 227.10881042]
[56.10982895 241.52404785]
[60.97853088 259.25604248]
[47.93856430 270.96456909]
[44.08044434 285.45993042]
[40.22232437 299.95526123]
[36.36420441 314.45059204]
[32.50608444 328.94595337]
[41.55329514 343.88687134]
[37.11023712 360.43020630]
[22.38581467 368.50369263]
[18.81850243 383.07333374]
[15.25118828 397.64297485]
[11.68387508 412.21261597]
[8.11656284 426.78225708]
[21.99943352 432.54125977]
[34.84043503 440.35211182]
[46.33855438 450.03164673]
[56.22426224 461.35302734]
[64.26581573 474.05081177]
[70.27471924 487.82736206]
[74.11010742 502.35974121]
[75.68208313 517.30731201]
[74.95378113 532.31964111]
[71.94229126 547.04479980]
[66.71819305 561.13769531]
[59.40395737 574.26788330]
[50.17103195 586.12762451]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 143]
[27 142]
[28 141]
[29 140]
[30 139]
[34 136]
[35 135]
[36 134]
[37 133]
[38 132]
[41 130]
[42 129]
[43 128]
[44 127]
[45 126]
[52 125]
[53 124]
[56 122]
[57 121]
[59 119]
[60 118]
[61 117]
[62 116]
[64 114]
[65 113]
[66 112]
[67 111]
[68 110]
[69 108]
[70 107]
[71 106]
[72 105]
[73 104]
[74 103]
[75 99]
[76 98]
[78 95]
[79 94]
[80 93]
[81 92]
[82 91]
] def

init

% Start Annotations
26 143 0.16 1 colorpair
27 142 0.0 0.6 colorpair
28 141 0.0 0.6 colorpair
29 140 0.0 1 colorpair
30 139 0.0 0.6 colorpair
34 136 0.16 1 colorpair
35 135 0.16 1 colorpair
36 134 0.16 1 colorpair
37 133 0.16 1 colorpair
38 132 0.0 0.6 colorpair
41 130 0.0 1 colorpair
42 129 0.0 0.6 colorpair
43 128 0.0 1 colorpair
44 127 0.0 1 colorpair
45 126 0.16 1 colorpair
52 125 0.0 1 colorpair
53 124 0.0 1 colorpair
56 122 0.0 1 colorpair
57 121 0.0 0.6 colorpair
59 119 0.16 1 colorpair
60 118 0.0 1 colorpair
61 117 0.0 0.6 colorpair
62 116 0.0 1 colorpair
64 114 0.0 1 colorpair
65 113 0.16 1 colorpair
66 112 0.16 1 colorpair
67 111 0.0 0.6 colorpair
68 110 0.0 0.6 colorpair
69 108 0.16 1 colorpair
70 107 0.0 1 colorpair
71 106 0.0 1 colorpair
72 105 0.16 1 colorpair
73 104 0.0 0.6 colorpair
74 103 0.0 0.6 colorpair
75 99 0.16 1 colorpair
76 98 0.0 1 colorpair
78 95 0.0 0.6 colorpair
79 94 0.0 1 colorpair
80 93 0.0 1 colorpair
81 92 0.0 0.6 colorpair
82 91 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
143 cmark
27 142 1 gmark
28 141 1 gmark
30 139 1 gmark
136 cmark
135 cmark
36 cmark
134 cmark
133 cmark
38 132 1 gmark
42 129 1 gmark
45 cmark
126 cmark
57 121 1 gmark
119 cmark
61 117 1 gmark
113 cmark
66 cmark
67 111 1 gmark
68 110 1 gmark
69 cmark
72 cmark
105 cmark
73 104 1 gmark
74 103 1 gmark
75 cmark
99 cmark
78 95 1 gmark
81 92 1 gmark
82 cmark

% End Annotations
showpage
end
%%EOF
