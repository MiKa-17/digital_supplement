%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 07:23:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_GUAAGAGGCACUCUACAUGUGUUCAGCAUAUAGGGG_GCCUCG_GGUUGAUAGUAAAAUAUCACU_____CGGGGCUUUUCUCUAUCUGCCGUUCAGC_________________UAAUGCC_UGAGACAGAUAGCCUCAAGCACC____________\
) } def
/len { sequence length } bind def

/coor [
[144.07551575 215.15089417]
[156.53683472 206.54890442]
[152.46522522 192.11207581]
[139.38471985 185.08099365]
[135.04988098 170.49798584]
[142.51341248 156.82563782]
[138.44180298 142.38880920]
[134.37020874 127.95198059]
[130.29859924 113.51515198]
[126.22698975 99.07832336]
[111.47118378 121.17109680]
[87.39493561 117.92710114]
[75.08891296 126.50392151]
[62.78289413 135.08074951]
[50.47687149 143.65756226]
[47.43054199 156.22569275]
[36.96094131 163.11056519]
[25.00609016 161.06246948]
[12.53404617 169.39602661]
[0.06200175 177.72958374]
[-12.41004276 186.06312561]
[-24.88208580 194.39668274]
[-29.40957832 209.78764343]
[-44.31934738 215.71032715]
[-58.17389679 207.62138367]
[-60.34519958 191.72595215]
[-49.16762161 180.21763611]
[-33.21564102 181.92463684]
[-20.74359512 173.59109497]
[-8.27155209 165.25753784]
[4.20049238 156.92398071]
[16.67253685 148.59042358]
[23.54372025 132.46658325]
[41.90005493 131.35154724]
[54.20607376 122.77471924]
[66.51210022 114.19789886]
[78.81811523 105.62108612]
[83.94619751 82.05345154]
[109.50499725 75.53861237]
[98.09890747 65.79689026]
[86.69281769 56.05517197]
[75.28672791 46.31344986]
[63.88063812 36.57172775]
[52.47454834 26.83000946]
[41.06845856 17.08828735]
[29.28870583 7.80187893]
[17.15345001 -1.01489985]
[5.01819515 -9.83167839]
[-3.81346893 -12.36397076]
[-7.26647806 -18.94261360]
[-19.22628784 -27.99595261]
[-31.18609810 -37.04928970]
[-43.14590836 -46.10263062]
[-58.76484299 -43.68925095]
[-71.46607208 -53.09426498]
[-73.71418762 -68.73783875]
[-64.17541504 -81.33892822]
[-48.50894165 -83.42152405]
[-36.00941086 -73.75005341]
[-34.09256744 -58.06243896]
[-22.13275909 -49.00910187]
[-10.17294884 -39.95576096]
[1.78686106 -30.90242386]
[13.83497429 -21.96693420]
[25.97022820 -13.15015507]
[38.10548401 -4.33337593]
[40.93775558 -4.67334509]
[44.07813644 -3.88223481]
[47.08535004 -1.83579957]
[49.48110962 1.42423809]
[50.81018066 5.68219852]
[62.21627045 15.42391968]
[73.62236023 25.16563988]
[85.02845001 34.90736008]
[96.43453979 44.64908218]
[107.84062958 54.39080048]
[119.24671936 64.13252258]
[111.05428314 51.56732941]
[112.26757050 36.61647797]
[122.37882996 25.53665924]
[137.15666199 22.96459579]
[150.41679382 29.97665405]
[156.61007690 43.63840103]
[153.14469910 58.23262024]
[141.46971130 67.65229797]
[155.32789612 61.91204834]
[169.18609619 56.17179489]
[183.04428101 50.43154526]
[196.90248108 44.69129181]
[210.76066589 38.95104218]
[214.36184692 28.61834908]
[222.89794922 22.13013649]
[233.37797546 21.45439911]
[242.29449463 26.57363129]
[256.36737061 21.38187599]
[270.44024658 16.19012070]
[284.51309204 10.99836349]
[298.48132324 5.53130627]
[312.33950806 -0.20894508]
[310.52749634 -15.19624615]
[312.82736206 -30.11647606]
[319.06838989 -43.86245728]
[328.78750610 -55.41413879]
[341.26348877 -63.91431808]
[355.57046509 -68.73222351]
[370.64685059 -69.51033020]
[385.37384033 -66.19090271]
[398.65856934 -59.02025986]
[409.51528931 -48.53051376]
[417.13827515 -35.50007248]
[420.96191406 -20.89588165]
[420.70245361 -5.80166864]
[416.37911987 8.66247559]
[408.31277466 21.42321396]
[397.10195923 31.53361702]
[383.57858276 38.24342346]
[368.74621582 41.05472565]
[353.70550537 39.75889969]
[339.57254028 34.45211029]
[327.39611816 25.52815437]
[318.07977295 13.64924812]
[304.22158813 19.38949966]
[301.58377075 23.42738724]
[296.35800171 25.82240486]
[289.70486450 25.07123375]
[275.63198853 30.26298904]
[261.55911255 35.45474625]
[247.48625183 40.64649963]
[236.30505371 56.38503647]
[216.50091553 52.80923462]
[202.64273071 58.54948425]
[188.78453064 64.28973389]
[174.92634583 70.02999115]
[161.06814575 75.77024078]
[147.20996094 81.51049042]
[140.66381836 95.00671387]
[144.73542786 109.44354248]
[148.80703735 123.88037109]
[152.87863159 138.31719971]
[156.95024109 152.75402832]
[170.45774841 160.51194763]
[174.38127136 175.21093750]
[166.90205383 188.04046631]
[170.97366333 202.47729492]
[186.09320068 203.30067444]
[200.12524414 208.99107361]
[211.54768372 218.93121338]
[219.12150574 232.04289246]
[222.02516174 246.90382385]
[219.94367981 261.90203857]
[213.10282898 275.41061401]
[202.24468994 285.96423340]
[188.54702759 292.41818237]
[173.49569702 294.07229614]
[158.72334290 290.74722290]
[145.83236694 282.80358887]
[136.22105408 271.10308838]
[130.93200684 256.91488647]
[130.53892517 241.77804565]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 144]
[3 143]
[6 140]
[7 139]
[8 138]
[9 137]
[10 136]
[12 37]
[13 36]
[14 35]
[15 34]
[18 32]
[19 31]
[20 30]
[21 29]
[22 28]
[39 77]
[40 76]
[41 75]
[42 74]
[43 73]
[44 72]
[45 71]
[46 66]
[47 65]
[48 64]
[50 63]
[51 62]
[52 61]
[53 60]
[85 135]
[86 134]
[87 133]
[88 132]
[89 131]
[90 130]
[94 128]
[95 127]
[96 126]
[97 125]
[98 122]
[99 121]
] def

init

% Start Annotations
2 144 0.0 1 colorpair
3 143 0.0 1 colorpair
6 140 0.0 1 colorpair
7 139 0.0 1 colorpair
8 138 0.0 1 colorpair
9 137 0.0 1 colorpair
10 136 0.0 1 colorpair
12 37 0.0 0.2 colorpair
13 36 0.0 1 colorpair
14 35 0.0 1 colorpair
15 34 0.16 1 colorpair
18 32 0.0 1 colorpair
19 31 0.0 1 colorpair
20 30 0.16 1 colorpair
21 29 0.0 1 colorpair
22 28 0.0 0.2 colorpair
39 77 0.0 1 colorpair
40 76 0.0 1 colorpair
41 75 0.0 1 colorpair
42 74 0.0 1 colorpair
43 73 0.0 1 colorpair
44 72 0.0 1 colorpair
46 66 0.0 1 colorpair
47 65 0.0 1 colorpair
48 64 0.0 1 colorpair
50 63 0.0 0.2 colorpair
51 62 0.0 0.2 colorpair
52 61 0.0 0.2 colorpair
53 60 0.0 0.2 colorpair
85 135 0.0 1 colorpair
86 134 0.16 1 colorpair
87 133 0.0 1 colorpair
88 132 0.0 1 colorpair
89 131 0.0 1 colorpair
90 130 0.0 1 colorpair
94 128 0.16 1 colorpair
95 127 0.0 0.2 colorpair
96 126 0.0 1 colorpair
97 125 0.0 1 colorpair
98 122 0.16 1 colorpair
99 121 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
12 37 2 gmark
15 cmark
30 cmark
22 28 2 gmark
45 71 4 gmark
50 63 2 gmark
51 62 2 gmark
52 61 2 gmark
53 60 2 gmark
86 cmark
134 cmark
94 cmark
95 127 2 gmark
98 cmark
122 cmark

% End Annotations
showpage
end
%%EOF
