%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 07:23:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_GUAAGAGGCAAUCCACAUGUGGACAACACAUAGGGA_GCCUCG_GGUGGAUAAUAAAAAAUAACU_____CGGGGCUAUCCUCUAUCUGCCACACAAC_________________UAACGCC_UGAGACAGAAAGCCUCAAGCACC____________\
) } def
/len { sequence length } bind def

/coor [
[136.69694519 244.62435913]
[149.15826416 236.02236938]
[145.08666992 221.58554077]
[132.00616455 214.55444336]
[127.67131805 199.97145081]
[135.13485718 186.29910278]
[131.06324768 171.86227417]
[126.99164581 157.42544556]
[122.92003632 142.98861694]
[118.84843445 128.55178833]
[104.79845428 132.25950623]
[91.18563843 129.73797607]
[80.51393127 122.04034424]
[68.04188538 130.37390137]
[55.56984329 138.70745850]
[43.09780121 147.04101562]
[35.92198944 161.14129639]
[21.04103661 161.77886963]
[8.56899166 170.11242676]
[-3.90305257 178.44596863]
[-16.37509727 186.77952576]
[-28.84714127 195.11308289]
[-33.37462997 210.50402832]
[-48.28440094 216.42672729]
[-62.13895035 208.33778381]
[-64.31025696 192.44233704]
[-53.13267517 180.93403625]
[-37.18069458 182.64103699]
[-24.70865059 174.30747986]
[-12.23660564 165.97392273]
[0.23543812 157.64038086]
[12.70748234 149.30682373]
[18.99120903 135.80259705]
[34.76424789 134.56896973]
[47.23628998 126.23541260]
[59.70833588 117.90185547]
[72.18038177 109.56830597]
[70.63191986 98.26807404]
[73.49784851 87.22817230]
[62.09175491 77.48645020]
[50.68566513 67.74473572]
[39.27957535 58.00300980]
[27.87348747 48.26129150]
[16.46739769 38.51956940]
[5.06130791 28.77784920]
[-6.71844578 19.49143982]
[-18.85370064 10.67466164]
[-30.98895645 1.85788262]
[-49.31985855 0.38265961]
[-55.87314606 -15.87298965]
[-68.17916870 -24.44981003]
[-80.48519135 -33.02663040]
[-95.99733734 -30.00191307]
[-109.05801392 -38.90102768]
[-111.91855621 -54.44428635]
[-102.88185120 -67.41014862]
[-87.30921936 -70.10619354]
[-74.43962860 -60.93291473]
[-71.90837097 -45.33264923]
[-59.60234833 -36.75583267]
[-47.29632568 -28.17901230]
[-35.30356598 -29.99199677]
[-24.97116280 -22.90288544]
[-22.17217636 -10.27737236]
[-10.03692150 -1.46059346]
[2.09833288 7.35618544]
[4.93060446 7.01621628]
[8.07098484 7.80732632]
[11.07819843 9.85376167]
[13.47395706 13.11379910]
[14.80302906 17.37175941]
[26.20911789 27.11348152]
[37.61520767 36.85520172]
[49.02129745 46.59692383]
[60.42738724 56.33864212]
[71.83347321 66.08036041]
[83.23956299 75.82208252]
[89.86061859 71.74602509]
[97.46332550 69.48790741]
[105.54749298 69.28040314]
[113.55912781 71.21836090]
[120.92845154 75.24693298]
[127.11029053 81.15998077]
[131.62419128 88.60953522]
[134.09114075 97.12575531]
[147.94934082 91.38550568]
[161.80754089 85.64525604]
[175.66572571 79.90500641]
[189.52392578 74.16474915]
[203.38211060 68.42449951]
[217.24031067 62.68424988]
[231.09849548 56.94399643]
[240.88725281 44.51456451]
[255.60665894 46.79238510]
[269.46484375 41.05213165]
[275.58135986 26.72641563]
[289.71731567 21.10239983]
[303.33700562 27.02183342]
[317.19519043 21.28158188]
[315.38317871 6.29428005]
[317.68301392 -8.62594986]
[323.92407227 -22.37192917]
[333.64318848 -33.92361450]
[346.11914062 -42.42379379]
[360.42614746 -47.24169540]
[375.50253296 -48.01980591]
[390.22949219 -44.70037460]
[403.51425171 -37.52973175]
[414.37094116 -27.03998566]
[421.99395752 -14.00954533]
[425.81759644 0.59464526]
[425.55810547 15.68885803]
[421.23480225 30.15300179]
[413.16842651 42.91374207]
[401.95761108 53.02414322]
[388.43426514 59.73395157]
[373.60189819 62.54524994]
[358.56115723 61.24942780]
[344.42822266 55.94263840]
[332.25177002 47.01868057]
[322.93542480 35.13977432]
[309.07723999 40.88002396]
[303.63235474 54.69626999]
[289.65994263 60.71511841]
[275.20510864 54.91032410]
[261.34692383 60.65057755]
[252.54937744 72.66942596]
[236.83874512 70.80219269]
[222.98056030 76.54244232]
[209.12236023 82.28269196]
[195.26417542 88.02294159]
[181.40597534 93.76319885]
[167.54779053 99.50344849]
[153.68959045 105.24369812]
[139.83140564 110.98394775]
[133.28526306 124.48017120]
[137.35687256 138.91700745]
[141.42846680 153.35383606]
[145.50007629 167.79066467]
[149.57168579 182.22749329]
[163.07919312 189.98539734]
[167.00271606 204.68440247]
[159.52349854 217.51393127]
[163.59509277 231.95075989]
[178.71464539 232.77413940]
[192.74668884 238.46452332]
[204.16912842 248.40467834]
[211.74295044 261.51635742]
[214.64660645 276.37728882]
[212.56512451 291.37548828]
[205.72427368 304.88406372]
[194.86613464 315.43771362]
[181.16847229 321.89163208]
[166.11714172 323.54574585]
[151.34478760 320.22067261]
[138.45379639 312.27703857]
[128.84249878 300.57653809]
[123.55345154 286.38836670]
[123.16036987 271.25149536]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 144]
[3 143]
[6 140]
[7 139]
[8 138]
[9 137]
[10 136]
[13 37]
[14 36]
[15 35]
[16 34]
[18 32]
[19 31]
[20 30]
[21 29]
[22 28]
[39 77]
[40 76]
[41 75]
[42 74]
[43 73]
[44 72]
[45 71]
[46 66]
[47 65]
[48 64]
[50 61]
[51 60]
[52 59]
[85 135]
[86 134]
[87 133]
[88 132]
[89 131]
[90 130]
[91 129]
[92 128]
[94 126]
[95 125]
[98 122]
[99 121]
] def

init

% Start Annotations
2 144 0.0 1 colorpair
3 143 0.0 1 colorpair
6 140 0.0 1 colorpair
7 139 0.0 1 colorpair
8 138 0.0 1 colorpair
9 137 0.0 1 colorpair
10 136 0.0 1 colorpair
13 37 0.16 1 colorpair
14 36 0.0 1 colorpair
15 35 0.16 1 colorpair
16 34 0.0 0.6 colorpair
18 32 0.0 1 colorpair
19 31 0.0 1 colorpair
20 30 0.16 1 colorpair
21 29 0.0 1 colorpair
22 28 0.0 0.6 colorpair
39 77 0.0 1 colorpair
40 76 0.0 1 colorpair
41 75 0.0 1 colorpair
42 74 0.0 1 colorpair
43 73 0.0 1 colorpair
44 72 0.0 1 colorpair
45 71 0.0 0.6 colorpair
46 66 0.0 1 colorpair
47 65 0.0 1 colorpair
48 64 0.0 1 colorpair
50 61 0.0 0.6 colorpair
51 60 0.16 1 colorpair
52 59 0.0 1 colorpair
85 135 0.0 1 colorpair
86 134 0.16 1 colorpair
87 133 0.0 1 colorpair
88 132 0.0 1 colorpair
89 131 0.0 1 colorpair
90 130 0.0 1 colorpair
91 129 0.0 0.6 colorpair
92 128 0.0 1 colorpair
94 126 0.16 1 colorpair
95 125 0.0 0.6 colorpair
98 122 0.16 1 colorpair
99 121 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
37 cmark
15 cmark
16 34 1 gmark
30 cmark
22 28 1 gmark
45 71 1 gmark
50 61 1 gmark
51 cmark
60 cmark
86 cmark
134 cmark
91 129 1 gmark
94 cmark
95 125 1 gmark
98 cmark
122 cmark

% End Annotations
showpage
end
%%EOF
