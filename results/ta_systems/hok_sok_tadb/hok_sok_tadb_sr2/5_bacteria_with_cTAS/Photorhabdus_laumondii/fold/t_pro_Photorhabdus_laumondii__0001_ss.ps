%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 06:57:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
____GAAACAAAAAAAAGCAAUAUUUAGCGCCAUCAUUAUUUGUAUGACAGCACUAACAGCCACGCGGAUAACAAGGAAAGAAAUCUGUAAACUCCACAUCAAAAGAGGCAAAACAGAGGUUGCGGCAAUCAUGGAUUACGAACCCAG____\
) } def
/len { sequence length } bind def

/coor [
[112.23091125 258.33395386]
[117.45408630 244.21995544]
[125.33065796 231.39631653]
[135.55787659 220.35592651]
[147.74263000 211.52314758]
[141.47322083 197.89616394]
[135.20382690 184.26919556]
[128.93441772 170.64221191]
[122.66500854 157.01522827]
[116.39560699 143.38825989]
[110.12619781 129.76127625]
[103.85679626 116.13429260]
[96.66455841 114.00787354]
[92.41146851 128.39228821]
[78.02713013 124.13895416]
[82.28007507 109.75502777]
[75.08782959 107.62860107]
[62.41631699 115.65560150]
[49.74480057 123.68259430]
[37.07328415 131.70959473]
[24.40176964 139.73658752]
[11.73025322 147.76358032]
[4.60410833 162.53349304]
[-11.76787376 163.47702026]
[-20.54360008 149.62355042]
[-12.69535732 135.22434998]
[3.70325637 135.09207153]
[16.37477303 127.06507111]
[29.04628754 119.03807831]
[41.71780396 111.01107788]
[54.38932037 102.98408508]
[67.06083679 94.95708466]
[74.77148438 93.21149445]
[82.37822723 93.08818817]
[70.59609222 83.80480194]
[58.81395340 74.52142334]
[47.03181839 65.23803711]
[35.24967957 55.95465088]
[23.46754265 46.67126465]
[11.68540668 37.38787842]
[-0.09673058 28.10449219]
[-11.87886810 18.82110786]
[-23.66100502 9.53772163]
[-35.44314194 0.25433639]
[-47.22528076 -9.02904892]
[-59.00741577 -18.31243515]
[-70.78955078 -27.59581947]
[-82.57169342 -36.87920380]
[-94.35382843 -46.16259003]
[-106.13596344 -55.44597626]
[-117.91809845 -64.72936249]
[-129.70024109 -74.01274872]
[-145.99894714 -75.82495117]
[-152.33015442 -90.95267487]
[-142.18084717 -103.83380890]
[-125.99176025 -101.21734619]
[-120.41685486 -85.79488373]
[-108.63471222 -76.51149750]
[-96.85257721 -67.22811127]
[-85.07044220 -57.94472885]
[-73.28830719 -48.66134262]
[-61.50616837 -39.37795639]
[-49.72402954 -30.09457207]
[-37.94189453 -20.81118584]
[-26.15975571 -11.52780056]
[-14.37761974 -2.24441528]
[-2.59548211 7.03897047]
[9.18665504 16.32235527]
[20.96879196 25.60574150]
[32.75093079 34.88912582]
[44.53306580 44.17251205]
[56.31520462 53.45589828]
[68.09734344 62.73928452]
[79.87947845 72.02266693]
[91.66161346 81.30605316]
[81.39022827 70.37451172]
[79.03588867 55.56042480]
[85.41220093 41.98313904]
[98.31567383 34.33458710]
[113.28723145 35.25789642]
[125.15310669 44.43400192]
[129.81278992 58.69188690]
[125.65602112 73.10442352]
[114.11894226 82.69117737]
[126.95259094 74.92604065]
[139.78623962 67.16090393]
[152.61990356 59.39576721]
[165.45355225 51.63063431]
[178.28721619 43.86549759]
[191.12086487 36.10036087]
[191.26124573 22.28250694]
[198.17010498 10.44041443]
[209.94210815 3.62679935]
[223.43501282 3.53632808]
[235.10815430 10.08537102]
[248.09854126 2.58537102]
[261.08892822 -4.91462898]
[274.07931519 -12.41462898]
[276.61636353 -27.84502983]
[288.51196289 -37.99533463]
[304.14938354 -38.07287598]
[316.14505005 -28.04104614]
[318.83502197 -12.63656616]
[310.94918823 0.86704051]
[296.21096802 6.09378242]
[281.57931519 0.57575202]
[268.58892822 8.07575226]
[255.59854126 15.57575226]
[242.60815430 23.07575226]
[241.43132019 39.42094040]
[230.65281677 51.98419952]
[214.35328674 55.70626831]
[198.88600159 48.93401718]
[186.05233765 56.69915009]
[173.21868896 64.46428680]
[160.38504028 72.22942352]
[147.55137634 79.99456024]
[134.71772766 87.75968933]
[121.88407135 95.52482605]
[117.48377228 109.86489105]
[123.75318146 123.49186707]
[130.02258301 137.11885071]
[136.29199219 150.74583435]
[142.56140137 164.37280273]
[148.83079529 177.99978638]
[155.10020447 191.62677002]
[161.36961365 205.25373840]
[176.00488281 201.74734497]
[191.04302979 201.16381836]
[205.90600586 203.52561951]
[220.02253723 208.74192810]
[232.85000610 216.61227417]
[243.89535522 226.83413696]
[252.73405457 239.01460266]
[259.02633667 252.68548584]
[262.53036499 267.32135010]
[263.11145020 282.35958862]
[260.74725342 297.22216797]
[255.52865601 311.33786011]
[247.65623474 324.16403198]
[237.43260193 335.20773315]
[225.25070190 344.04446411]
[211.57878113 350.33453369]
[196.94236755 353.83621216]
[181.90403748 354.41485596]
[167.04182434 352.04824829]
[152.92698669 346.82736206]
[140.10206604 338.95288086]
[129.06002808 328.72744751]
[120.22528076 316.54412842]
[113.93741608 302.87118530]
[110.43812561 288.23419189]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 127]
[6 126]
[7 125]
[8 124]
[9 123]
[10 122]
[11 121]
[12 120]
[17 32]
[18 31]
[19 30]
[20 29]
[21 28]
[22 27]
[34 75]
[35 74]
[36 73]
[37 72]
[38 71]
[39 70]
[40 69]
[41 68]
[42 67]
[43 66]
[44 65]
[45 64]
[46 63]
[47 62]
[48 61]
[49 60]
[50 59]
[51 58]
[52 57]
[84 119]
[85 118]
[86 117]
[87 116]
[88 115]
[89 114]
[90 113]
[95 109]
[96 108]
[97 107]
[98 106]
] def

init

% Start Annotations
5 127 0.16 0.6 colorpair
6 126 0.0 0.2 colorpair
7 125 0.16 1 colorpair
8 124 0.0 0.2 colorpair
9 123 0.0 1 colorpair
10 122 0.0 1 colorpair
11 121 0.16 1 colorpair
12 120 0.0 0.2 colorpair
17 32 0.0 0.2 colorpair
18 31 0.16 1 colorpair
19 30 0.0 0.2 colorpair
20 29 0.16 1 colorpair
21 28 0.0 0.2 colorpair
22 27 0.0 1 colorpair
34 75 0.0 1 colorpair
35 74 0.0 0.2 colorpair
36 73 0.0 0.2 colorpair
37 72 0.0 1 colorpair
38 71 0.0 0.2 colorpair
39 70 0.0 1 colorpair
40 69 0.16 1 colorpair
41 68 0.0 1 colorpair
42 67 0.0 0.2 colorpair
43 66 0.16 1 colorpair
44 65 0.0 1 colorpair
45 64 0.16 1 colorpair
46 63 0.16 1 colorpair
47 62 0.0 0.2 colorpair
48 61 0.16 1 colorpair
49 60 0.0 0.2 colorpair
50 59 0.0 0.2 colorpair
51 58 0.0 0.2 colorpair
52 57 0.16 1 colorpair
84 119 0.0 0.2 colorpair
85 118 0.0 1 colorpair
86 117 0.0 1 colorpair
87 116 0.16 1 colorpair
88 115 0.0 1 colorpair
89 114 0.0 1 colorpair
90 113 0.0 0.2 colorpair
95 109 0.16 1 colorpair
96 108 0.0 1 colorpair
97 107 0.0 0.2 colorpair
98 106 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
5 127 1 gmark
127 cmark
6 126 2 gmark
7 cmark
125 cmark
8 124 2 gmark
11 cmark
12 120 2 gmark
17 32 2 gmark
31 cmark
19 30 2 gmark
20 cmark
29 cmark
21 28 2 gmark
35 74 2 gmark
36 73 2 gmark
38 71 2 gmark
69 cmark
42 67 2 gmark
66 cmark
45 cmark
64 cmark
63 cmark
47 62 2 gmark
48 cmark
61 cmark
49 60 2 gmark
50 59 2 gmark
51 58 2 gmark
52 cmark
57 cmark
84 119 2 gmark
116 cmark
90 113 2 gmark
95 cmark
97 107 2 gmark
98 cmark

% End Annotations
showpage
end
%%EOF
