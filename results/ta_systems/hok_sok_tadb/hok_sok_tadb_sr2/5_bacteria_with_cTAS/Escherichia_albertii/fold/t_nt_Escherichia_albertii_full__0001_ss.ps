%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 02:06:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAGAGGCUAUCCUGAUGUGGACUAGACAUA_GGG_AU_GCCUCGUG__GGUUAAUGAAAA___AUUAACUACGGGGCUUUCUUCUUUCUGCCACACAACACGGUAACAAACCACCUUCAC________GUCAUGAGGCAGAAAGCCUCAAGCGCC____________\
) } def
/len { sequence length } bind def

/coor [
[92.40588379 245.47810364]
[105.01735687 237.09779358]
[101.20166016 222.59123230]
[88.24752808 215.32995605]
[84.17121887 200.67257690]
[91.87534332 187.13433838]
[88.05964661 172.62777710]
[84.24394989 158.12120056]
[80.42825317 143.61463928]
[76.61255646 129.10807800]
[73.00632477 143.66812134]
[75.23856354 158.50109863]
[74.10142517 173.45793152]
[69.65235138 187.78294373]
[62.11613846 200.75234985]
[51.87355423 211.71087646]
[39.44209671 220.10485840]
[25.44986916 225.51017761]
[10.60382271 227.65374756]
[-4.34595060 226.42724609]
[-18.64411354 221.89266968]
[-31.56825829 214.27908325]
[-42.46538925 203.97120667]
[-50.78493881 191.48980713]
[-56.10655594 177.46553040]
[-58.16137314 162.60694885]
[-56.84556580 147.66476440]
[-52.22562027 133.39395142]
[-44.53495407 120.51553345]
[-34.16213989 109.68019104]
[-21.63125801 101.43537140]
[-7.57543039 96.19764709]
[7.29517365 94.23165894]
[22.22922134 95.63672638]
[36.47217178 100.34186554]
[49.30712128 108.11144257]
[64.13371277 110.38566589]
[55.37810516 107.64879608]
[52.07913971 101.00321198]
[40.32716370 91.68167877]
[24.70697403 89.16766357]
[19.54383469 75.19657898]
[7.79185629 65.87503815]
[-3.96012139 56.55350494]
[-15.71209908 47.23197174]
[-27.46407700 37.91043472]
[-39.21605301 28.58889961]
[-50.96803284 19.26736450]
[-62.72000885 9.94582939]
[-69.25367737 8.58920002]
[-73.46531677 4.70249081]
[-74.72418213 0.05960915]
[-87.48828888 8.15707493]
[-102.07253265 12.13089943]
[-117.18009186 11.62773323]
[-131.46760559 6.69231844]
[-143.66464233 -2.23649263]
[-152.68664551 -14.36475563]
[-157.73139954 -28.61403275]
[-158.35031128 -43.71728897]
[-154.48835754 -58.33155441]
[-146.48893738 -71.15733337]
[-135.06335449 -81.05417633]
[-121.22756195 -87.14205170]
[-106.21183014 -88.87963104]
[-91.35134125 -86.11241913]
[-77.96749878 -79.08646393]
[-67.25036621 -68.42651367]
[-60.15290833 -55.08044815]
[-57.30623245 -40.23498535]
[-58.96345520 -25.21017075]
[-64.97722626 -11.34200478]
[-53.39847565 -1.80614853]
[-41.64649582 7.51538706]
[-29.89451790 16.83692169]
[-18.14254189 26.15845871]
[-6.39056349 35.47999191]
[5.36141396 44.80152893]
[17.11339188 54.12306595]
[28.86536980 63.44459915]
[43.64497757 65.29187775]
[49.64869690 79.92970276]
[61.40067673 89.25123596]
[73.23778534 98.46442413]
[77.67163086 87.21728516]
[86.32172394 79.49240875]
[97.04714203 76.61275482]
[107.43890381 78.77043915]
[115.35884857 85.07318878]
[129.09544373 79.04775238]
[142.83204651 73.02232361]
[156.56864929 66.99689484]
[170.30525208 60.97145844]
[184.04183960 54.94602966]
[197.77844238 48.92059708]
[207.30824280 36.29151917]
[222.07157898 38.26464462]
[235.80816650 32.23921204]
[241.62730408 17.79014587]
[255.64399719 11.87518501]
[269.38311768 17.51187706]
[283.11972046 11.48644638]
[279.96685791 -3.23239541]
[279.84173584 -18.28461266]
[282.74954224 -33.05382538]
[288.57113647 -46.93524551]
[297.06817627 -59.36043549]
[307.89266968 -69.82059479]
[320.60140991 -77.88738251]
[334.67395020 -83.23046875]
[349.53402710 -85.63105774]
[364.57315063 -84.99085236]
[379.17544556 -81.33605957]
[392.74298096 -74.81635284]
[404.72018433 -65.69869995]
[414.61657715 -54.35646439]
[422.02691650 -41.25410461]
[426.64776611 -26.92815781]
[428.28985596 -11.96525860]
[426.88601685 3.02187157]
[422.49365234 17.41951752]
[415.29269409 30.63810730]
[405.57800293 42.13634491]
[393.74737549 51.44338608]
[380.28527832 58.17811203]
[365.74295044 62.06474304]
[350.71591187 62.94412231]
[335.81951904 60.78023911]
[321.66375732 55.66170502]
[308.82830811 47.79811859]
[297.83877563 37.51148605]
[289.14514160 25.22304726]
[275.40853882 31.24847794]
[270.25033569 45.17430115]
[256.40530396 51.48062897]
[241.83360291 45.97581100]
[228.09700012 52.00124359]
[219.54974365 64.19934082]
[203.80387878 62.65719604]
[190.06727600 68.68262482]
[176.33067322 74.70806122]
[162.59408569 80.73348999]
[148.85748291 86.75892639]
[135.12088013 92.78435516]
[121.38427734 98.80978394]
[114.48361969 119.27703094]
[91.11911774 125.29237366]
[94.93482208 139.79893494]
[98.75051880 154.30551147]
[102.56621552 168.81207275]
[106.38191223 183.31863403]
[119.75012207 191.31417847]
[123.41313171 206.08024597]
[115.70822906 218.77552795]
[119.52392578 233.28208923]
[134.62655640 234.37269592]
[148.55578613 240.31030273]
[159.80067444 250.45086670]
[167.14147949 263.69442749]
[169.78189087 278.60437012]
[167.43553162 293.56341553]
[160.35690308 306.94894409]
[149.31384277 317.30892944]
[135.50421143 323.51962280]
[120.42599487 324.90737915]
[105.71473694 321.32159424]
[92.96622467 313.15127563]
[83.56331635 301.28265381]
[78.52597046 287.00317383]
[78.40059662 271.86172485]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 155]
[3 154]
[6 151]
[7 150]
[8 149]
[9 148]
[10 147]
[37 84]
[39 83]
[40 82]
[42 80]
[43 79]
[44 78]
[45 77]
[46 76]
[47 75]
[48 74]
[49 73]
[52 72]
[89 145]
[90 144]
[91 143]
[92 142]
[93 141]
[94 140]
[95 139]
[97 137]
[98 136]
[101 133]
[102 132]
] def

init

% Start Annotations
2 155 0.0 1 colorpair
3 154 0.0 1 colorpair
6 151 0.0 1 colorpair
7 150 0.0 1 colorpair
8 149 0.0 1 colorpair
9 148 0.0 1 colorpair
10 147 0.0 1 colorpair
37 84 0.32 1 colorpair
39 83 0.32 1 colorpair
40 82 0.16 0.2 colorpair
42 80 0.0 1 colorpair
43 79 0.0 1 colorpair
44 78 0.0 0.6 colorpair
45 77 0.16 1 colorpair
46 76 0.0 1 colorpair
47 75 0.0 0.6 colorpair
48 74 0.0 0.6 colorpair
49 73 0.0 0.6 colorpair
52 72 0.0 0.6 colorpair
89 145 0.0 0.6 colorpair
90 144 0.0 0.6 colorpair
91 143 0.0 1 colorpair
92 142 0.0 1 colorpair
93 141 0.0 1 colorpair
94 140 0.0 0.6 colorpair
95 139 0.0 0.6 colorpair
97 137 0.0 1 colorpair
98 136 0.0 0.6 colorpair
101 133 0.16 0.2 colorpair
102 132 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
37 cmark
84 cmark
39 cmark
83 cmark
40 82 2 gmark
40 cmark
82 cmark
44 78 1 gmark
77 cmark
47 75 1 gmark
48 74 1 gmark
49 73 1 gmark
52 72 1 gmark
89 145 1 gmark
90 144 1 gmark
94 140 1 gmark
95 139 1 gmark
98 136 1 gmark
101 133 2 gmark
101 cmark
133 cmark
102 132 1 gmark

% End Annotations
showpage
end
%%EOF
