%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 07:10:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGUUCUGAGGCUGAUGAUUAUCUGCAUGACGCUGAUUGCGUUCAUGUUGAUCACUCGCGGUUCGCUAUGUGAACUGCGCAUCAAACUGGGAGACACGGAGGUUGCGGCCAUUUUGGCUUACGAAUCCGAAGGGUAAGGCAACCCAACGGCGGGG__UUCGC_CCCGCCCGUUGGUUGUUAGACAGAGGAUCCAUGAGCACCCUCUU_____________\
) } def
/len { sequence length } bind def

/coor [
[-211.64260864 450.51782227]
[-219.06549072 455.03442383]
[-226.81665039 458.95993042]
[-234.84912109 462.27066040]
[-243.11421204 464.94665527]
[-251.56187439 466.97174072]
[-260.14093018 468.33374023]
[-268.79940796 469.02450562]
[-277.48489380 469.03994751]
[-286.14477539 468.37997437]
[-294.72662354 467.04873657]
[-303.17849731 465.05435181]
[-311.44921875 462.40896606]
[-319.48873901 459.12866211]
[-327.24838257 455.23336792]
[-334.68124390 450.74679565]
[-341.74230957 445.69613647]
[-348.38888550 440.11203003]
[-354.58081055 434.02835083]
[-360.28057861 427.48202515]
[-365.45376587 420.51272583]
[-378.37249756 428.13549805]
[-391.29119873 435.75827026]
[-399.24459839 449.43505859]
[-414.13790894 449.23910522]
[-427.05664062 456.86187744]
[-439.97537231 464.48464966]
[-452.89407349 472.10742188]
[-465.81280518 479.73019409]
[-478.73153687 487.35296631]
[-487.41693115 503.59396362]
[-504.96112061 503.06710815]
[-517.77020264 510.87274170]
[-522.93621826 526.06127930]
[-538.08026123 531.35638428]
[-551.58502197 522.69616699]
[-553.09088135 506.72390747]
[-541.44262695 495.69226074]
[-525.57580566 498.06369019]
[-512.76678467 490.25805664]
[-509.61233521 478.58480835]
[-499.01110840 471.97573853]
[-486.35430908 474.43423462]
[-473.43557739 466.81146240]
[-460.51684570 459.18869019]
[-447.59814453 451.56594849]
[-434.67941284 443.94317627]
[-421.76068115 436.32040405]
[-414.73132324 423.18884277]
[-398.91397095 422.83953857]
[-385.99526978 415.21679688]
[-373.07653809 407.59402466]
[-379.51910400 391.90661621]
[-383.50888062 375.42382812]
[-384.95355225 358.52667236]
[-383.81979370 341.60580444]
[-380.13378906 325.05242920]
[-394.15905762 319.73336792]
[-408.18429565 314.41430664]
[-422.20953369 309.09521484]
[-436.23477173 303.77615356]
[-450.26000977 298.45706177]
[-461.67395020 308.65414429]
[-476.52215576 312.36764526]
[-491.39257812 308.74423218]
[-502.86810303 298.61651611]
[-508.31176758 284.31179810]
[-506.47265625 269.11718750]
[-497.77337646 256.52429199]
[-484.21292114 249.42687988]
[-468.90744019 249.45587158]
[-455.37402344 256.60461426]
[-446.72250366 269.23034668]
[-444.94094849 284.43182373]
[-430.91571045 289.75091553]
[-416.89047241 295.06997681]
[-402.86520386 300.38903809]
[-388.83996582 305.70812988]
[-374.81472778 311.02719116]
[-363.03152466 291.04788208]
[-347.36755371 273.93356323]
[-328.49853516 260.42572021]
[-307.23904419 251.11013794]
[-284.50747681 246.39163208]
[-261.28625488 246.47633362]
[-238.57946777 251.36274719]
[-217.36938477 260.84170532]
[-198.57397461 274.50534058]
[-183.00721741 291.76458740]
[-170.31040955 283.77764893]
[-157.61360168 275.79074097]
[-157.04112244 259.38159180]
[-146.69499207 246.41883850]
[-130.49975586 242.13731384]
[-114.79042816 248.41676331]
[-102.20842743 240.25016785]
[-95.74530029 226.83088684]
[-79.95722198 225.80755615]
[-67.37522888 217.64094543]
[-54.79323578 209.47434998]
[-57.37363815 188.86195374]
[-49.10210800 169.72534180]
[-32.19998550 157.39422607]
[-11.30362034 155.34469604]
[7.80730152 164.21957397]
[19.51575661 154.84342957]
[31.22421265 145.46728516]
[42.93266678 136.09114075]
[54.64112473 126.71499634]
[66.34957886 117.33885193]
[60.69629669 103.39097595]
[60.83321381 87.72713470]
[67.20633698 72.74739838]
[79.27210236 60.92266464]
[95.51703644 54.39046097]
[113.64037323 54.57976532]
[113.42745209 38.75999451]
[126.30094147 31.26849556]
[133.45988464 18.08708572]
[140.61882019 4.90567732]
[147.77777100 -8.27573109]
[154.93670654 -21.45713997]
[146.36920166 -34.14005280]
[144.68861389 -49.35301590]
[150.28112793 -63.60019684]
[161.86164856 -73.60770416]
[176.76904297 -77.07588196]
[191.57769775 -73.20777130]
[202.88470459 -62.89223480]
[208.09178162 -48.49970245]
[206.00238037 -33.33747864]
[197.09664917 -20.88973045]
[183.42103577 -14.01685810]
[168.11811829 -14.29819679]
[160.95918274 -1.11678851]
[153.80023193 12.06462002]
[146.64129639 25.24602890]
[139.48234558 38.42743683]
[140.20732117 53.30438995]
[126.82178497 61.73870850]
[131.25601196 67.78748322]
[143.35354614 58.91903305]
[155.45109558 50.05058289]
[167.54878235 41.18231583]
[176.41685486 53.28013611]
[164.31954956 62.14812469]
[152.22200012 71.01657867]
[140.12446594 79.88502502]
[144.55868530 85.93379974]
[159.28332520 83.07283020]
[174.00794983 80.21185303]
[188.73258972 77.35088348]
[203.45721436 74.48991394]
[218.18185425 71.62893677]
[232.88578796 68.66338348]
[241.32649231 55.30187607]
[256.76116943 51.90390015]
[270.03268433 60.48540878]
[273.26730347 75.95515442]
[264.54595947 89.13520050]
[249.04287720 92.20606232]
[235.95576477 83.34586334]
[230.05624390 87.78832245]
[221.04283142 86.35356903]
[206.31819153 89.21454620]
[191.59355164 92.07551575]
[176.86892700 94.93648529]
[162.14428711 97.79746246]
[147.41966248 100.65843201]
[140.68850708 120.38717651]
[126.58132172 134.55552673]
[108.48893738 140.80900574]
[90.33397675 138.57611084]
[75.72572327 129.04730225]
[64.01726532 138.42344666]
[52.30881119 147.79959106]
[40.60035706 157.17573547]
[28.89190102 166.55187988]
[17.18344498 175.92802429]
[20.55838585 184.84626770]
[21.72947502 194.29542542]
[20.63700867 203.73988342]
[17.34939575 212.64585876]
[12.05892563 220.51158142]
[5.07052708 226.89555359]
[-3.21580195 231.44137573]
[-12.32788277 233.89755249]
[-21.74826431 234.13145447]
[-30.94360733 232.13648987]
[-39.39487076 228.03202820]
[-46.62662888 222.05633545]
[-59.20862198 230.22294617]
[-71.79061890 238.38954163]
[-79.15369415 252.39295959]
[-94.04182434 252.83215332]
[-106.62381744 260.99874878]
[-106.32164001 274.77499390]
[-112.81278992 286.80703735]
[-124.30860901 294.00454712]
[-137.75122070 294.57913208]
[-149.62666321 288.48754883]
[-162.32347107 296.47445679]
[-175.02027893 304.46139526]
[-171.19990540 312.27609253]
[-167.99893188 320.36373901]
[-165.43666077 328.67532349]
[-163.52853394 337.16046143]
[-162.28605652 345.76782227]
[-161.71664429 354.44519043]
[-161.82366943 363.14007568]
[-162.60643005 371.79983521]
[-164.06007385 380.37197876]
[-166.17575073 388.80465698]
[-168.94056702 397.04684448]
[-172.33769226 405.04861450]
[-176.34649658 412.76156616]
[-180.94264221 420.13900757]
[-186.09822083 427.13635254]
[-191.78195190 433.71124268]
[-197.95935059 439.82391357]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 52]
[22 51]
[23 50]
[25 48]
[26 47]
[27 46]
[28 45]
[29 44]
[30 43]
[32 40]
[33 39]
[57 79]
[58 78]
[59 77]
[60 76]
[61 75]
[62 74]
[89 203]
[90 202]
[91 201]
[95 196]
[96 195]
[98 193]
[99 192]
[100 191]
[105 179]
[106 178]
[107 177]
[108 176]
[109 175]
[110 174]
[116 140]
[118 138]
[119 137]
[120 136]
[121 135]
[122 134]
[149 169]
[150 168]
[151 167]
[152 166]
[153 165]
[154 164]
[155 162]
] def

init

% Start Annotations
21 52 0.0 1 colorpair
22 51 0.16 0.6 colorpair
23 50 0.16 1 colorpair
25 48 0.0 1 colorpair
26 47 0.16 0.6 colorpair
27 46 0.16 1 colorpair
28 45 0.16 1 colorpair
29 44 0.16 1 colorpair
30 43 0.0 1 colorpair
32 40 0.0 1 colorpair
33 39 0.16 0.6 colorpair
57 79 0.0 0.2 colorpair
58 78 0.0 1 colorpair
59 77 0.0 1 colorpair
60 76 0.16 1 colorpair
61 75 0.16 1 colorpair
62 74 0.32 1 colorpair
89 203 0.16 1 colorpair
90 202 0.0 1 colorpair
91 201 0.0 1 colorpair
95 196 0.0 1 colorpair
96 195 0.0 1 colorpair
98 193 0.0 1 colorpair
99 192 0.0 1 colorpair
100 191 0.0 1 colorpair
105 179 0.0 1 colorpair
106 178 0.0 0.6 colorpair
107 177 0.16 1 colorpair
108 176 0.16 1 colorpair
109 175 0.0 1 colorpair
110 174 0.0 1 colorpair
116 140 0.0 1 colorpair
118 138 0.0 1 colorpair
119 137 0.0 1 colorpair
120 136 0.0 0.6 colorpair
121 135 0.0 1 colorpair
122 134 0.0 1 colorpair
149 169 0.0 1 colorpair
150 168 0.16 1 colorpair
151 167 0.0 1 colorpair
152 166 0.0 1 colorpair
153 165 0.0 1 colorpair
154 164 0.0 1 colorpair
155 162 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
22 51 1 gmark
51 cmark
23 cmark
26 47 1 gmark
26 cmark
47 cmark
27 cmark
28 cmark
45 cmark
29 cmark
44 cmark
33 39 1 gmark
33 cmark
39 cmark
57 79 2 gmark
60 cmark
75 cmark
62 cmark
74 cmark
203 cmark
106 178 1 gmark
107 cmark
176 cmark
120 136 1 gmark
168 cmark

% End Annotations
showpage
end
%%EOF
