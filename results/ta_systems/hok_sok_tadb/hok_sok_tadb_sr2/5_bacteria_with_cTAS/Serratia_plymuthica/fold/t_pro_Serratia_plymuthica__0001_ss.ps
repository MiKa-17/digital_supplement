%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 07:10:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAAUGCAGCAAGAACGGGUCGUUCUGAGGCUGAUGAUUAUCUGCAUGACGCUGAUUGCGUUCAUGUUGAUCACUCGCGGUUCGCUAUGUGAACUGCGCAUCAAACUGGGAGACACGGAGGUUGCGGCCAUUUUGGCUUACGAAUCCGAAGGG\
) } def
/len { sequence length } bind def

/coor [
[93.22848511 303.79406738]
[81.46217346 313.22830200]
[67.71897888 319.43920898]
[52.86282349 322.03640747]
[37.82756805 320.85659790]
[23.55834579 315.97396851]
[10.95212936 307.69543457]
[0.80135661 296.54141235]
[-6.25588560 283.21301270]
[-9.77597332 268.54809570]
[-9.53763199 253.46850586]
[-5.55584192 238.92216492]
[1.91909719 225.82345581]
[12.41730404 214.99577332]
[25.27885246 207.11978149]
[39.69525528 202.69055176]
[54.76028824 201.98649597]
[57.79909897 187.29753113]
[60.83791351 172.60856628]
[54.41751862 156.30381775]
[66.70352936 142.62501526]
[69.44207764 127.87712860]
[72.18061829 113.12923431]
[62.70680237 124.75879669]
[58.31638336 139.10188293]
[49.19245911 151.00793457]
[36.48444748 158.97703552]
[21.79329300 162.00523376]
[6.96977234 159.71104431]
[-6.11866140 152.38349915]
[-15.82314110 140.94570923]
[-20.92110825 126.83860016]
[-20.77032471 111.83935547]
[-15.38978481 97.83757782]
[-5.45732594 86.59719086]
[7.77577209 79.53425598]
[22.64241791 77.53854370]
[37.26972580 80.86147308]
[49.81333923 89.08289337]
[64.53311157 91.96876526]
[52.99885559 82.37914276]
[41.46459579 72.78951263]
[25.90642738 69.91654968]
[21.06630516 55.83029938]
[9.53204632 46.24067688]
[-2.00221133 36.65105057]
[-13.53646946 27.06142616]
[-25.07072639 17.47180176]
[-36.60498428 7.88217783]
[-54.79728699 5.21840715]
[-60.28408432 -11.42375183]
[-72.01155853 -20.77609825]
[-88.05056763 -20.41590500]
[-98.22131348 -32.82297897]
[-94.72167206 -48.47967148]
[-80.23626709 -55.37551117]
[-65.87705994 -48.22060013]
[-62.65921021 -32.50357056]
[-50.93173599 -23.15122414]
[-38.84170532 -24.18624115]
[-28.98672676 -16.43850899]
[-27.01535988 -3.65208006]
[-15.48110294 5.93754435]
[-3.94684482 15.52716827]
[7.58741283 25.11679268]
[19.12167168 34.70641708]
[30.65592957 44.29604340]
[45.38909149 46.48308945]
[51.05422211 61.25525665]
[62.58847809 70.84487915]
[74.12273407 80.43450928]
[81.41728973 78.69110107]
[73.59288788 65.89350128]
[83.34627533 54.49738693]
[97.19857788 60.25183868]
[96.00640869 75.20429993]
[103.30096436 73.46089935]
[109.25256348 59.69215393]
[115.20416260 45.92340469]
[121.15576935 32.15465546]
[127.10736847 18.38590813]
[117.44008636 6.51989698]
[114.40590668 -8.48184776]
[118.70206451 -23.17203522]
[129.34133911 -34.17496872]
[143.87889099 -38.96225357]
[158.97410583 -36.43380737]
[171.15820312 -27.17064667]
[177.63139343 -13.30138206]
[176.90615845 1.98693430]
[169.14915466 15.18115807]
[156.14289856 23.24935341]
[140.87611389 24.33750916]
[134.92451477 38.10625839]
[128.97291565 51.87500763]
[123.02130890 65.64375305]
[117.06970978 79.41250610]
[126.30195618 91.23475647]
[141.10264587 88.79761505]
[155.90333557 86.36047363]
[168.26300049 76.48378754]
[182.07829285 82.05039978]
[188.63983154 70.24649048]
[200.63525391 64.47863007]
[213.56777954 66.65943909]
[222.73171997 75.76728058]
[237.57904053 73.63256073]
[252.42636108 71.49783325]
[260.51660156 58.11568069]
[275.33258057 53.11361313]
[289.87866211 58.85345459]
[297.28662109 72.62503052]
[294.05862427 87.92581940]
[281.71887207 97.53125763]
[266.09381104 96.90595245]
[254.56108093 86.34515381]
[239.71376038 88.47988129]
[224.86643982 90.61460114]
[215.40252686 104.48397827]
[198.50827026 107.30154419]
[184.51542664 96.85108185]
[173.21440125 106.55345154]
[158.34046936 101.16116333]
[143.53977966 103.59830475]
[128.73908997 106.03544617]
[124.95542145 120.55039978]
[136.68289185 129.90274048]
[148.41036987 139.25509644]
[160.13784790 148.60743713]
[171.86531067 157.95977783]
[188.01867676 163.10810852]
[187.54325867 180.05538940]
[171.12666321 184.29000854]
[162.51296997 169.68725586]
[150.78549194 160.33491516]
[139.05801392 150.98255920]
[127.33055115 141.63021851]
[115.60307312 132.27786255]
[96.64044189 128.00408936]
[86.92851257 115.86778259]
[84.18996429 130.61567688]
[81.45142365 145.36357117]
[88.11000824 156.45600891]
[85.48520660 168.71400452]
[75.52687836 175.64738464]
[72.48806000 190.33634949]
[69.44924927 205.02531433]
[82.99834442 211.64897156]
[94.47399139 221.43469238]
[103.15483856 233.76731873]
[108.49518585 247.87162781]
[110.15933228 262.86099243]
[108.04267883 277.79321289]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 147]
[18 146]
[19 145]
[21 142]
[22 141]
[23 140]
[40 71]
[41 70]
[42 69]
[44 67]
[45 66]
[46 65]
[47 64]
[48 63]
[49 62]
[51 59]
[52 58]
[77 97]
[78 96]
[79 95]
[80 94]
[81 93]
[98 125]
[99 124]
[100 123]
[102 121]
[106 118]
[107 117]
[108 116]
[126 138]
[127 137]
[128 136]
[129 135]
[130 134]
] def

init

% Start Annotations
17 147 0.0 1 colorpair
18 146 0.0 0.2 colorpair
19 145 0.16 1 colorpair
21 142 0.16 1 colorpair
22 141 0.0 0.6 colorpair
23 140 0.0 1 colorpair
40 71 0.0 1 colorpair
41 70 0.16 0.6 colorpair
42 69 0.16 1 colorpair
44 67 0.0 1 colorpair
45 66 0.16 0.6 colorpair
46 65 0.16 1 colorpair
47 64 0.16 1 colorpair
48 63 0.16 1 colorpair
49 62 0.0 1 colorpair
51 59 0.0 1 colorpair
52 58 0.16 0.6 colorpair
77 97 0.0 1 colorpair
78 96 0.0 1 colorpair
79 95 0.16 1 colorpair
80 94 0.16 1 colorpair
81 93 0.32 1 colorpair
98 125 0.0 0.2 colorpair
99 124 0.16 1 colorpair
100 123 0.0 1 colorpair
102 121 0.0 1 colorpair
106 118 0.16 1 colorpair
107 117 0.16 1 colorpair
108 116 0.0 1 colorpair
126 138 0.16 1 colorpair
127 137 0.0 1 colorpair
128 136 0.0 1 colorpair
129 135 0.0 1 colorpair
130 134 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
18 146 2 gmark
19 cmark
21 cmark
22 141 1 gmark
41 70 1 gmark
70 cmark
42 cmark
45 66 1 gmark
45 cmark
66 cmark
46 cmark
47 cmark
64 cmark
48 cmark
63 cmark
52 58 1 gmark
52 cmark
58 cmark
79 cmark
94 cmark
81 cmark
93 cmark
98 125 2 gmark
99 cmark
106 cmark
107 cmark
126 cmark

% End Annotations
showpage
end
%%EOF
