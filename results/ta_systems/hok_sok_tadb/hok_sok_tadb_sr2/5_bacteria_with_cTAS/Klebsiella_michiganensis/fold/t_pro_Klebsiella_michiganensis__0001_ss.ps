%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 06:34:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAA_CUACCGCAAAACGCCCUUGUCUGGUGCGUAUUAAUAGUGUGUAUCACGCUAUUGAUAUUCACCUGGCUGGUGCGCAACUCGCUAUGCGAACUCCGGCUCAAAGACGGGAACAGGGAGGUGGCGGCUGUUAUGGCUUACGAAUCCAAU___\
) } def
/len { sequence length } bind def

/coor [
[79.94629669 305.51766968]
[68.60218048 304.09271240]
[57.35431290 302.04208374]
[46.23718643 299.37207031]
[35.28487778 296.09082031]
[24.53096390 292.20843506]
[14.00841522 287.73678589]
[3.74948978 282.68963623]
[-6.21436262 277.08236694]
[-15.85259628 270.93225098]
[-25.13566208 264.25811768]
[-34.03510284 257.08038330]
[-42.52363205 249.42112732]
[-50.57523346 241.30377197]
[-58.16521835 232.75323486]
[-65.27031708 223.79573059]
[-71.86875153 214.45869446]
[-77.94029236 204.77075195]
[-83.46632385 194.76164246]
[-88.42990112 184.46200562]
[-92.81581879 173.90344238]
[-96.61062622 163.11830139]
[-99.80268860 152.13967896]
[-102.38220978 141.00120544]
[-104.34130096 129.73703003]
[-105.67394257 118.38169861]
[-106.37606049 106.97000885]
[-106.44548798 95.53695679]
[-105.88202667 84.11758423]
[-104.68739319 72.74690247]
[-102.86524963 61.45977020]
[-100.42118835 50.29078674]
[-97.36270142 39.27420044]
[-93.69916534 28.44377708]
[-107.57167053 22.73820686]
[-121.44417572 17.03263664]
[-135.31668091 11.32706642]
[-149.18919373 5.62149525]
[-164.89511108 7.52802229]
[-173.72267151 -4.46878481]
[-187.59518433 -10.17435551]
[-201.46768188 -15.87992573]
[-215.34019470 -21.58549690]
[-229.21270752 -27.29106712]
[-243.08520508 -32.99663544]
[-256.95770264 -38.70220947]
[-270.83023071 -44.40777969]
[-287.77865601 -44.84067154]
[-292.05447388 -61.24657822]
[-277.47335815 -69.89689636]
[-265.12466431 -58.28028488]
[-251.25215149 -52.57471466]
[-237.37963867 -46.86914444]
[-223.50712585 -41.16357422]
[-209.63462830 -35.45800400]
[-195.76211548 -29.75243378]
[-181.88960266 -24.04686356]
[-168.01710510 -18.34129143]
[-153.30343628 -20.65592003]
[-143.48362732 -8.25101185]
[-129.61111450 -2.54544163]
[-115.73860931 3.16012907]
[-101.86610413 8.86569977]
[-87.99359131 14.57126999]
[-77.26638031 -5.90698004]
[-64.31737518 -25.05782509]
[-49.30886078 -42.64123535]
[-32.42896271 -58.43682861]
[-13.88924122 -72.24662781]
[6.07793236 -83.89753723]
[27.22229385 -93.24353790]
[49.27882767 -100.16748047]
[71.97108459 -104.58259583]
[95.01464844 -106.43354034]
[118.12069702 -105.69710541]
[140.99961853 -102.38253021]
[163.36466980 -96.53136444]
[184.93553162 -88.21693420]
[191.59788513 -101.65616608]
[198.26025391 -115.09539795]
[204.92260742 -128.53463745]
[211.58496094 -141.97386169]
[206.76885986 -156.78747559]
[213.71688843 -170.32185364]
[227.86906433 -174.82199097]
[234.53143311 -188.26121521]
[241.19378662 -201.70045471]
[247.85614014 -215.13967896]
[249.47399902 -232.01626587]
[266.13888550 -235.13354492]
[273.74765015 -219.98286438]
[261.29537964 -208.47732544]
[254.63302612 -195.03810120]
[247.97065735 -181.59886169]
[241.30830383 -168.15962219]
[246.29515076 -154.17152405]
[239.73001099 -140.44732666]
[225.02420044 -135.31150818]
[218.36184692 -121.87227631]
[211.69947815 -108.43304443]
[205.03712463 -94.99381256]
[198.37477112 -81.55457306]
[209.78659058 -74.89015198]
[220.74873352 -67.50940704]
[231.21632385 -59.44258118]
[241.14646912 -50.72270584]
[250.49850464 -41.38549805]
[259.23413086 -31.46920204]
[267.31756592 -21.01443291]
[274.71569824 -10.06401062]
[281.39822388 1.33721304]
[287.33776855 13.14254093]
[292.51004028 25.30362129]
[296.89379883 37.77064133]
[300.47113037 50.49254608]
[303.22735596 63.41722107]
[305.15121460 76.49172974]
[306.23480225 89.66252899]
[306.47369385 102.87566376]
[305.86691284 116.07702637]
[304.41693115 129.21253967]
[302.12969971 142.22839355]
[299.01458740 155.07130432]
[295.08435059 167.68864441]
[290.35510254 180.02873230]
[284.84616089 192.04106140]
[278.58013916 203.67639160]
[271.58267212 214.88708496]
[263.88244629 225.62722778]
[275.44781494 235.17933655]
[287.01315308 244.73143005]
[302.35772705 241.71850586]
[316.02398682 249.31898499]
[321.55914307 263.94418335]
[316.34963989 278.68850708]
[302.85528564 286.59014893]
[287.44766235 283.91818237]
[277.40179443 271.93426514]
[277.46105957 256.29678345]
[265.89569092 246.74467468]
[254.33035278 237.19258118]
[246.50053406 245.52406311]
[238.22160339 253.40940857]
[229.51892090 260.82446289]
[220.41918945 267.74645996]
[210.95027161 274.15423584]
[201.14122009 280.02807617]
[191.02210999 285.35003662]
[180.62396240 290.10375977]
[169.97863770 294.27468872]
[159.11877441 297.85000610]
[148.07768250 300.81881714]
[136.88919067 303.17196655]
[125.58760834 304.90225220]
[114.20758820 306.00436401]
[102.78401184 306.47494507]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 64]
[35 63]
[36 62]
[37 61]
[38 60]
[40 58]
[41 57]
[42 56]
[43 55]
[44 54]
[45 53]
[46 52]
[47 51]
[78 102]
[79 101]
[80 100]
[81 99]
[82 98]
[85 95]
[86 94]
[87 93]
[88 92]
[129 141]
[130 140]
[131 139]
] def

init

% Start Annotations
34 64 0.0 0.2 colorpair
35 63 0.16 1 colorpair
36 62 0.16 0.2 colorpair
37 61 0.32 0.2 colorpair
38 60 0.16 0.2 colorpair
40 58 0.32 1 colorpair
41 57 0.16 0.2 colorpair
42 56 0.16 0.2 colorpair
43 55 0.16 0.6 colorpair
44 54 0.16 0.6 colorpair
45 53 0.0 0.2 colorpair
46 52 0.0 1 colorpair
47 51 0.16 1 colorpair
79 101 0.0 0.2 colorpair
80 100 0.0 0.2 colorpair
81 99 0.48 0.2 colorpair
82 98 0.16 1 colorpair
85 95 0.0 0.6 colorpair
86 94 0.0 0.6 colorpair
87 93 0.32 0.6 colorpair
88 92 0.16 1 colorpair
129 141 0.32 0.6 colorpair
130 140 0.0 0.6 colorpair
131 139 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
34 64 2 gmark
63 cmark
36 62 2 gmark
36 cmark
62 cmark
37 61 2 gmark
37 cmark
61 cmark
38 60 2 gmark
60 cmark
40 cmark
58 cmark
41 57 2 gmark
57 cmark
42 56 2 gmark
42 cmark
43 55 1 gmark
43 cmark
55 cmark
44 54 1 gmark
54 cmark
45 53 2 gmark
51 cmark
78 102 3 gmark
78 cmark
102 cmark
79 101 2 gmark
80 100 2 gmark
81 99 2 gmark
81 cmark
99 cmark
82 cmark
85 95 1 gmark
86 94 1 gmark
87 93 1 gmark
87 cmark
93 cmark
88 cmark
129 141 1 gmark
129 cmark
141 cmark
130 140 1 gmark

% End Annotations
showpage
end
%%EOF
