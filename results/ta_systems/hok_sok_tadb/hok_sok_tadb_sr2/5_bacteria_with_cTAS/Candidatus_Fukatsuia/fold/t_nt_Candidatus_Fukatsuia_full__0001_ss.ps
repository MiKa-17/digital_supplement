%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 01:55:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAGAGGCUAUCCUUACGUUGAUUGGACAUAUUGAUGGCCUCGGGUUAAUUGAAAAAUAACUCGG_GCUUUCGUCUUUCUGCCUAUCACGACUGCUCAAGACAGAAAGCCUCAAGCACC\
) } def
/len { sequence length } bind def

/coor [
[83.66787720 159.81272888]
[78.46414185 145.74427795]
[79.82368469 130.80601501]
[87.48011017 117.90974426]
[73.47640228 123.28526306]
[59.47269821 128.66078186]
[45.46899414 134.03630066]
[31.46528625 139.41181946]
[17.46158028 144.78733826]
[3.45787334 150.16285706]
[-10.54583359 155.53837585]
[-24.54953957 160.91389465]
[-31.03894806 175.07460022]
[-45.31727600 180.32664490]
[-58.77734375 174.05271912]
[-72.78105164 179.42823792]
[-82.89181519 191.59716797]
[-97.54655457 188.93482971]
[-111.55025482 194.31034851]
[-125.55396271 199.68586731]
[-133.36656189 213.69810486]
[-149.21582031 216.18421936]
[-160.94352722 205.23706055]
[-159.55320740 189.25436401]
[-146.11138916 180.49668884]
[-130.92948914 185.68215942]
[-116.92577362 180.30664062]
[-102.92207336 174.93112183]
[-93.81294250 163.14668274]
[-78.15657043 165.42453003]
[-64.15286255 160.04901123]
[-58.34815979 146.38003540]
[-44.22298431 140.72900391]
[-29.92505836 146.91018677]
[-15.92135239 141.53466797]
[-1.91764593 136.15914917]
[12.08606052 130.78363037]
[26.08976746 125.40811920]
[40.09347153 120.03260040]
[54.09717941 114.65708160]
[68.10088348 109.28155518]
[82.10459137 103.90603638]
[88.20564270 90.20285797]
[82.83012390 76.19915009]
[77.45460510 62.19544601]
[72.07908630 48.19173813]
[66.70356750 34.18803406]
[61.32804489 20.18432617]
[55.25796127 13.19013214]
[56.00037384 5.74303961]
[50.99327087 -8.39658260]
[38.17864609 -18.62973404]
[40.90069580 -34.80139160]
[56.35921478 -40.27553940]
[68.65179443 -29.42084312]
[65.13289642 -13.40368557]
[70.13999939 0.73593664]
[75.33174896 14.80880642]
[80.70726776 28.81251335]
[86.08279419 42.81621933]
[91.45831299 56.81992722]
[96.83383179 70.82363129]
[102.20935059 84.82733917]
[114.99894714 92.66481781]
[129.91677856 91.09689331]
[144.83460999 89.52896118]
[159.75244141 87.96103668]
[174.67025757 86.39311218]
[189.58808899 84.82518005]
[204.50592041 83.25725555]
[219.42375183 81.68933105]
[234.34158325 80.12139893]
[249.23760986 78.35833740]
[264.10928345 76.40044403]
[278.98095703 74.44255829]
[293.85263062 72.48466492]
[308.72430420 70.52677155]
[315.68930054 58.91236496]
[327.90997314 53.54503250]
[340.79211426 56.19584656]
[349.63397217 65.66670990]
[364.55181885 64.09877777]
[370.14974976 49.85372162]
[381.73406982 39.85061646]
[396.64279175 36.38810349]
[411.44995117 40.26184082]
[422.75305176 50.58167648]
[427.95465088 64.97618866]
[425.85949707 80.13761139]
[416.94903564 92.58197784]
[403.27081299 99.44965363]
[387.96798706 99.16249847]
[374.55706787 91.78649902]
[366.11975098 79.01660919]
[351.20190430 80.58453369]
[341.24899292 94.07164001]
[324.29547119 96.29015350]
[310.68218994 85.39844513]
[295.81051636 87.35633850]
[280.93884277 89.31422424]
[266.06716919 91.27211761]
[251.19549561 93.23001099]
[244.89714050 97.27241516]
[235.90950012 95.03923035]
[220.99168396 96.60715485]
[206.07385254 98.17508698]
[191.15602112 99.74301147]
[176.23818970 101.31093597]
[161.32035828 102.87886810]
[146.40254211 104.44679260]
[131.48471069 106.01471710]
[116.56687927 107.58264923]
[130.64334106 112.76464844]
[141.11782837 123.50173187]
[145.94976807 137.70217896]
[144.19781494 152.59950256]
[136.20329285 165.29153442]
[123.52362061 173.30566406]
[108.62900543 175.08061218]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 42]
[5 41]
[6 40]
[7 39]
[8 38]
[9 37]
[10 36]
[11 35]
[12 34]
[15 31]
[16 30]
[18 28]
[19 27]
[20 26]
[43 63]
[44 62]
[45 61]
[46 60]
[47 59]
[48 58]
[50 57]
[51 56]
[64 112]
[65 111]
[66 110]
[67 109]
[68 108]
[69 107]
[70 106]
[71 105]
[72 104]
[73 102]
[74 101]
[75 100]
[76 99]
[77 98]
[81 95]
[82 94]
] def

init

% Start Annotations
4 42 0.0 1 colorpair
5 41 0.0 1 colorpair
6 40 0.0 1 colorpair
7 39 0.0 1 colorpair
8 38 0.0 1 colorpair
9 37 0.0 1 colorpair
10 36 0.0 1 colorpair
11 35 0.0 1 colorpair
12 34 0.0 1 colorpair
15 31 0.0 1 colorpair
16 30 0.0 1 colorpair
18 28 0.0 1 colorpair
19 27 0.0 1 colorpair
20 26 0.0 1 colorpair
43 63 0.0 1 colorpair
44 62 0.0 1 colorpair
45 61 0.0 1 colorpair
46 60 0.0 1 colorpair
47 59 0.0 1 colorpair
48 58 0.0 1 colorpair
50 57 0.0 1 colorpair
51 56 0.0 1 colorpair
64 112 0.0 1 colorpair
65 111 0.0 1 colorpair
66 110 0.0 0.6 colorpair
67 109 0.0 1 colorpair
68 108 0.0 1 colorpair
69 107 0.0 1 colorpair
70 106 0.0 1 colorpair
71 105 0.0 1 colorpair
72 104 0.0 1 colorpair
73 102 0.0 1 colorpair
74 101 0.0 1 colorpair
75 100 0.0 1 colorpair
76 99 0.0 1 colorpair
77 98 0.0 1 colorpair
81 95 0.0 1 colorpair
82 94 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
66 110 1 gmark

% End Annotations
showpage
end
%%EOF
