%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 06:33:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGAGGCACUCUACAUGUGUUCAGCAUAUAGGGGGCCUCGGGUUGAUGGUAAAAUAUCACUCGGGGCUUUUCUCUAUCUGCCAUCCAGCUAAUGCCUGAGACAGACAGCCUCAAGCACC\
) } def
/len { sequence length } bind def

/coor [
[102.82906342 233.72935486]
[101.67143250 218.77409363]
[90.22614288 209.31149292]
[88.83909607 194.16120911]
[98.84194946 182.22050476]
[97.68431854 167.26524353]
[96.52668762 152.30998230]
[95.36905670 137.35472107]
[94.21142578 122.39945221]
[75.33498383 106.69142914]
[80.26967621 80.16385651]
[66.37481689 85.81477356]
[52.47995377 91.46569061]
[38.58509445 97.11660767]
[24.69023514 102.76753235]
[14.82166195 115.13368225]
[0.11722813 112.76115417]
[-13.77763176 118.41207886]
[-27.67249107 124.06299591]
[-41.56735229 129.71391296]
[-49.10181046 143.87765503]
[-64.89889526 146.67614746]
[-76.84043884 135.96264648]
[-75.76590729 119.95561981]
[-62.49958801 110.93429565]
[-47.21826935 115.81905365]
[-33.32341003 110.16813660]
[-19.42855072 104.51721954]
[-5.53369045 98.86629486]
[3.34102988 86.90433502]
[19.03931808 88.87267303]
[32.93417740 83.22174835]
[46.82903671 77.57083130]
[60.72389603 71.91991425]
[74.61875153 66.26899719]
[80.26967621 52.37413788]
[74.26286316 38.62938309]
[68.25605774 24.88462830]
[62.24924850 11.13987541]
[56.24243927 -2.60487795]
[50.23563004 -16.34963226]
[44.22882080 -30.09438515]
[38.22201538 -43.83913803]
[32.21520615 -57.58389282]
[26.20839691 -71.32864380]
[19.82947540 -78.03572083]
[20.22894287 -85.50548553]
[14.57802582 -99.40034485]
[8.92710686 -113.29520416]
[3.27618861 -127.19006348]
[-11.38140297 -133.10028076]
[-17.48976898 -147.67639160]
[-11.42492294 -162.27069092]
[3.21496868 -168.22459412]
[17.74431801 -162.00579834]
[23.54311943 -147.30377197]
[17.17104721 -132.84098816]
[22.82196617 -118.94612885]
[28.47288513 -105.05126953]
[34.12380219 -91.15641022]
[39.95315170 -77.33545685]
[45.95995712 -63.59070206]
[51.96676636 -49.84594727]
[57.97357559 -36.10119247]
[63.98038483 -22.35643959]
[69.98719025 -8.61168671]
[75.99400330 5.13306713]
[82.00080872 18.87782097]
[88.00762177 32.62257385]
[94.01442719 46.36732864]
[91.06593323 31.65996933]
[96.89077759 17.83711815]
[109.47605133 9.67557144]
[124.47263336 9.99573326]
[136.69812012 18.68696594]
[141.92771912 32.74581909]
[138.35421753 47.31393814]
[127.21253204 57.35698318]
[112.35256195 59.40430069]
[127.30783081 60.56193542]
[142.26309204 61.71956635]
[157.21835327 62.87719727]
[171.57449341 56.22800827]
[183.66668701 64.92446899]
[192.58480835 62.44609451]
[198.99047852 66.30931854]
[213.91098022 67.85163116]
[226.10528564 58.15953827]
[241.21482849 59.93621445]
[250.37960815 71.62135315]
[265.30010986 73.16366577]
[280.04092407 65.97753906]
[293.48147583 75.37344360]
[291.79531860 91.68567657]
[276.71697998 98.13360596]
[263.75778198 88.08416748]
[248.83728027 86.54184723]
[237.47607422 96.10523987]
[222.32260132 94.75366211]
[212.36866760 82.77213287]
[197.44816589 81.22981262]
[182.50904846 79.87973022]
[169.22261047 86.61171722]
[156.06071472 77.83245850]
[141.10545349 76.67482758]
[126.15019226 75.51719666]
[111.19493103 74.35956573]
[124.43424988 90.10000610]
[122.89833069 109.39167023]
[109.16668701 121.24182129]
[110.32431793 136.19708252]
[111.48194885 151.15234375]
[112.63957977 166.10760498]
[113.79721069 181.06286621]
[125.51847839 191.32200623]
[126.47943878 206.50524902]
[116.62669373 217.61647034]
[117.78432465 232.57173157]
[127.49676514 245.78538513]
[120.66273499 260.69268799]
[104.31249237 261.95831299]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 118]
[2 117]
[5 114]
[6 113]
[7 112]
[8 111]
[9 110]
[11 35]
[12 34]
[13 33]
[14 32]
[15 31]
[17 29]
[18 28]
[19 27]
[20 26]
[36 70]
[37 69]
[38 68]
[39 67]
[40 66]
[41 65]
[42 64]
[43 63]
[44 62]
[45 61]
[47 60]
[48 59]
[49 58]
[50 57]
[79 107]
[80 106]
[81 105]
[82 104]
[84 102]
[86 101]
[87 100]
[90 97]
[91 96]
] def

init

% Start Annotations
1 118 0.0 1 colorpair
2 117 0.0 1 colorpair
5 114 0.0 1 colorpair
6 113 0.0 1 colorpair
7 112 0.0 1 colorpair
8 111 0.0 1 colorpair
9 110 0.0 1 colorpair
11 35 0.0 1 colorpair
12 34 0.0 1 colorpair
13 33 0.0 1 colorpair
14 32 0.0 1 colorpair
15 31 0.0 1 colorpair
17 29 0.0 1 colorpair
18 28 0.0 1 colorpair
19 27 0.0 1 colorpair
20 26 0.0 1 colorpair
36 70 0.0 1 colorpair
37 69 0.0 1 colorpair
38 68 0.0 1 colorpair
39 67 0.0 1 colorpair
40 66 0.0 1 colorpair
41 65 0.0 1 colorpair
42 64 0.0 1 colorpair
43 63 0.0 1 colorpair
44 62 0.0 1 colorpair
45 61 0.0 1 colorpair
47 60 0.0 1 colorpair
48 59 0.0 1 colorpair
49 58 0.0 1 colorpair
50 57 0.0 1 colorpair
79 107 0.0 1 colorpair
80 106 0.0 1 colorpair
81 105 0.0 1 colorpair
82 104 0.0 1 colorpair
84 102 0.0 1 colorpair
86 101 0.0 1 colorpair
87 100 0.0 1 colorpair
90 97 0.0 1 colorpair
91 96 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
