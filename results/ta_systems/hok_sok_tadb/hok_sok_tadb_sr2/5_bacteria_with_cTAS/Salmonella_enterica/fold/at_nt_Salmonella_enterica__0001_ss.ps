%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 06:58:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_____U__U_U____GCCUAAUAGUCAUCUGUUUCACCGUUUUAAUAUUCACCUGGCUAACGCGGAAAUCCCUCUGCGAGGUACGGAUCCGAAACGGAAAGACGGAGGUCGCUGCCUUCAUGGCUUACGAAUCCGA___GAAG___UAAGAG_ACCUGGCG_GGGGGAAAUC__CC_CGCC_AUUUCUGAGGUGUCAGGCAUC____CUCAA_______GGCACCCUCAU_AA___________\
) } def
/len { sequence length } bind def

/coor [
[105.66310120 663.38006592]
[90.66362762 663.33111572]
[75.67076874 662.88293457]
[60.69515228 662.03582764]
[45.74739838 660.79034424]
[30.83809662 659.14733887]
[15.97781372 657.10809326]
[1.17708445 654.67395020]
[-13.55360126 651.84661865]
[-28.20380211 648.62823486]
[-42.76313782 645.02093506]
[-57.22128296 641.02734375]
[-71.56799316 636.65032959]
[-85.79309845 631.89288330]
[-99.88652039 626.75848389]
[-113.83827209 621.25073242]
[-127.63845062 615.37353516]
[-141.27728271 609.13104248]
[-154.74511719 602.52764893]
[-168.03237915 595.56811523]
[-181.12966919 588.25732422]
[-194.02770996 580.60052490]
[-206.71734619 572.60302734]
[-219.18959045 564.27056885]
[-231.43559265 555.60900879]
[-243.44668579 546.62457275]
[-255.21434021 537.32354736]
[-266.73025513 527.71258545]
[-277.98620605 517.79846191]
[-288.97427368 507.58822632]
[-299.68661499 497.08908081]
[-310.11569214 486.30850220]
[-320.25408936 475.25408936]
[-330.09460449 463.93371582]
[-339.63031006 452.35540771]
[-348.85437012 440.52734375]
[-357.76031494 428.45794678]
[-366.34182739 416.15573120]
[-374.59277344 403.62942505]
[-382.50735474 390.88790894]
[-390.07995605 377.94021606]
[-397.30520630 364.79553223]
[-404.17794800 351.46319580]
[-410.69335938 337.95257568]
[-416.84680176 324.27334595]
[-422.63391113 310.43511963]
[-428.05056763 296.44775391]
[-433.09298706 282.32116699]
[-437.75753784 268.06533813]
[-442.04095459 253.69039917]
[-445.94018555 239.20652771]
[-449.45245361 224.62397766]
[-452.57528687 209.95310974]
[-455.30645752 195.20429993]
[-457.64407349 180.38801575]
[-459.58642578 165.51475525]
[-461.13214111 150.59504700]
[-462.28015137 135.63949585]
[-463.02963257 120.65867615]
[-463.38003540 105.66321564]
[-463.33114624 90.66373444]
[-462.88296509 75.67087555]
[-462.03582764 60.69526291]
[-460.79034424 45.74750900]
[-459.14736938 30.83820534]
[-457.10809326 15.97792339]
[-454.67395020 1.17719388]
[-451.84664917 -13.55349255]
[-448.62823486 -28.20369339]
[-445.02096558 -42.76302719]
[-441.02740479 -57.22117615]
[-436.65036011 -71.56788635]
[-431.89294434 -85.79299927]
[-426.75854492 -99.88642120]
[-421.25079346 -113.83816528]
[-415.37356567 -127.63835144]
[-409.13107300 -141.27719116]
[-402.52770996 -154.74501038]
[-395.56817627 -168.03228760]
[-388.25741577 -181.12957764]
[-380.60055542 -194.02761841]
[-372.60305786 -206.71725464]
[-364.27059937 -219.18949890]
[-355.60910034 -231.43550110]
[-346.62463379 -243.44659424]
[-337.32363892 -255.21426392]
[-327.71267700 -266.73016357]
[-317.79855347 -277.98611450]
[-307.58828735 -288.97418213]
[-297.08917236 -299.68655396]
[-286.30856323 -310.11563110]
[-275.25418091 -320.25402832]
[-263.93380737 -330.09454346]
[-252.35549927 -339.63021851]
[-240.52743530 -348.85430908]
[-228.45802307 -357.76025391]
[-216.15580750 -366.34176636]
[-203.62951660 -374.59271240]
[-190.88800049 -382.50732422]
[-177.94032288 -390.07989502]
[-164.79563904 -397.30514526]
[-151.46328735 -404.17788696]
[-137.95268250 -410.69329834]
[-124.27343750 -416.84674072]
[-110.43523407 -422.63385010]
[-96.44786835 -428.05053711]
[-82.32127380 -433.09295654]
[-68.06545258 -437.75750732]
[-53.69050598 -442.04092407]
[-39.20663071 -445.94015503]
[-24.62408638 -449.45242310]
[-9.95321274 -452.57525635]
[4.79559326 -455.30645752]
[19.61187744 -457.64404297]
[34.48514175 -459.58639526]
[49.40483856 -461.13214111]
[64.36039734 -462.28015137]
[79.34121704 -463.02963257]
[94.33667755 -463.38003540]
[109.33615112 -463.33114624]
[124.32901001 -462.88296509]
[139.30462646 -462.03582764]
[154.25238037 -460.79034424]
[169.16168213 -459.14739990]
[184.02197266 -457.10812378]
[198.82269287 -454.67398071]
[213.55339050 -451.84667969]
[228.20358276 -448.62826538]
[242.76292419 -445.02099609]
[257.22106934 -441.02743530]
[271.56777954 -436.65039062]
[285.79287720 -431.89297485]
[299.88632202 -426.75857544]
[313.83807373 -421.25082397]
[327.63824463 -415.37362671]
[341.27709961 -409.13113403]
[354.74490356 -402.52777100]
[368.03219604 -395.56823730]
[381.12948608 -388.25747681]
[394.02752686 -380.60061646]
[406.71716309 -372.60311890]
[419.18939209 -364.27069092]
[431.43542480 -355.60916138]
[443.44650269 -346.62472534]
[455.21417236 -337.32369995]
[466.73007202 -327.71273804]
[477.98605347 -317.79861450]
[488.97409058 -307.58837891]
[499.68646240 -297.08923340]
[510.11553955 -286.30865479]
[520.25396729 -275.25427246]
[530.09448242 -263.93389893]
[539.63018799 -252.35559082]
[548.85424805 -240.52752686]
[557.76019287 -228.45811462]
[570.06280518 -237.03987122]
[582.36535645 -245.62161255]
[586.58361816 -261.10018921]
[601.37170410 -267.32040405]
[615.38555908 -259.51065063]
[617.87487793 -243.66189575]
[606.93011475 -231.93196106]
[590.94714355 -233.31903076]
[578.64453125 -224.73728943]
[566.34191895 -216.15553284]
[574.59289551 -203.62922668]
[582.50750732 -190.88771057]
[590.08007812 -177.94003296]
[597.30529785 -164.79534912]
[604.17803955 -151.46298218]
[610.69342041 -137.95237732]
[616.84686279 -124.27313232]
[622.63397217 -110.43492126]
[628.05065918 -96.44755554]
[633.09307861 -82.32096100]
[637.75762939 -68.06513214]
[642.04101562 -53.69018555]
[645.94024658 -39.20630646]
[649.45251465 -24.62376213]
[652.57531738 -9.95288563]
[655.30651855 4.79592228]
[657.64410400 19.61220741]
[659.58642578 34.48546982]
[661.13214111 49.40517044]
[662.28015137 64.36072540]
[663.02960205 79.34154510]
[663.38006592 94.33701324]
[663.33111572 109.33648682]
[662.88293457 124.32934570]
[662.03582764 139.30496216]
[660.79034424 154.25271606]
[659.14733887 169.16201782]
[657.10803223 184.02229309]
[654.67388916 198.82302856]
[651.84661865 213.55371094]
[648.62817383 228.20391846]
[645.02093506 242.76324463]
[641.02734375 257.22137451]
[636.65026855 271.56808472]
[631.89288330 285.79321289]
[626.75848389 299.88662720]
[621.25067139 313.83837891]
[615.37347412 327.63854980]
[609.13098145 341.27740479]
[602.52764893 354.74520874]
[595.56805420 368.03247070]
[588.25732422 381.12976074]
[580.60046387 394.02780151]
[572.60296631 406.71743774]
[564.27050781 419.18966675]
[555.60894775 431.43566895]
[546.62451172 443.44677734]
[537.32348633 455.21444702]
[527.71252441 466.73031616]
[517.79840088 477.98629761]
[507.58813477 488.97433472]
[497.08898926 499.68670654]
[486.30841064 510.11578369]
[475.25399780 520.25415039]
[463.93365479 530.09466553]
[452.35531616 539.63037109]
[440.52725220 548.85443115]
[428.45785522 557.76037598]
[416.15563965 566.34185791]
[403.62933350 574.59283447]
[390.88781738 582.50744629]
[377.94012451 590.08001709]
[364.79544067 597.30523682]
[351.46307373 604.17797852]
[337.95248413 610.69342041]
[324.27322388 616.84686279]
[310.43502808 622.63391113]
[296.44766235 628.05059814]
[282.32107544 633.09301758]
[268.06524658 637.75756836]
[253.69029236 642.04101562]
[239.20642090 645.94018555]
[224.62387085 649.45245361]
[209.95298767 652.57531738]
[195.20419312 655.30651855]
[180.38790894 657.64410400]
[165.51463318 659.58642578]
[150.59494019 661.13214111]
[135.63938904 662.28015137]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[155 165]
[156 164]
[157 163]
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
155 165 3 gmark
155 cmark
156 164 9 gmark
156 cmark
164 cmark
157 163 9 gmark
157 cmark
163 cmark

% End Annotations
showpage
end
%%EOF
