%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 02:04:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAAGAGGCUACUCUACAUGUGUCGAGCAUAUAGGGGCCUCAAGUUGAUGUUAAAGUCACUUGGGGCUUUUAUCUAUCUGCCUUUCGGUCAUACCUGAGACAGUUAGCCUCAAGCACC\
) } def
/len { sequence length } bind def

/coor [
[114.60202789 402.94558716]
[124.22518158 390.10913086]
[123.44013977 375.12966919]
[112.23391724 365.38513184]
[111.22438812 350.20501709]
[121.52134705 338.51696777]
[120.73631287 323.53753662]
[119.95127106 308.55810547]
[119.16622925 293.57864380]
[118.38118744 278.59921265]
[117.59615326 263.61978149]
[116.81111145 248.64031982]
[115.04804993 233.74429321]
[112.31452179 218.99546814]
[109.58098602 204.24664307]
[96.99053192 199.60520935]
[88.29191589 189.24545288]
[85.85989380 175.82804871]
[90.44140625 162.86940002]
[100.93079376 153.82020569]
[98.58427429 139.00486755]
[96.23776245 124.18955231]
[93.89124298 109.37422180]
[91.35099792 94.59088135]
[88.61746979 79.84205627]
[85.88393402 65.09323883]
[83.15039825 50.34440994]
[79.83994293 35.71427536]
[75.95765686 21.22538948]
[72.07537079 6.73650217]
[61.02996445 -4.59087992]
[65.20956421 -18.88704109]
[61.32727432 -33.37592697]
[57.44498825 -47.86481476]
[53.56270218 -62.35370255]
[49.68041992 -76.84259033]
[45.04516220 -91.10843658]
[39.66964340 -105.11214447]
[34.29412460 -119.11585236]
[28.91860580 -133.11955261]
[23.54308701 -147.12326050]
[18.16756630 -161.12696838]
[12.79204750 -175.13067627]
[7.41652870 -189.13438416]
[2.04100919 -203.13809204]
[-3.33451009 -217.14179993]
[-9.40459347 -224.13598633]
[-8.66218185 -231.58308411]
[-13.66928482 -245.72270203]
[-18.67638779 -259.86233521]
[-33.04721069 -266.43917847]
[-38.48000717 -281.28033447]
[-31.75158882 -295.58084106]
[-16.85380936 -300.85641479]
[-2.62525845 -293.97717285]
[2.49251842 -279.02444458]
[-4.53676510 -264.86941528]
[0.47033769 -250.72981262]
[5.47744036 -236.59017944]
[10.66919613 -222.51731873]
[16.04471588 -208.51361084]
[21.42023468 -194.50990295]
[26.79575348 -180.50619507]
[32.17127228 -166.50248718]
[37.54679108 -152.49877930]
[42.92231369 -138.49507141]
[48.29783249 -124.49137115]
[53.67335129 -110.48766327]
[59.04887009 -96.48395538]
[61.69015503 -95.23554993]
[63.96262741 -92.80054474]
[65.38626099 -89.32683563]
[65.54875946 -85.14250183]
[64.16930389 -80.72487640]
[68.05158997 -66.23599243]
[71.93387604 -51.74710083]
[75.81616211 -37.25821304]
[79.69844818 -22.76932716]
[90.46616364 -12.47828674]
[86.56425476 2.85421658]
[90.44654083 17.34310341]
[94.32882690 31.83199120]
[97.31024170 33.92595291]
[99.37102509 37.62721252]
[99.73957825 42.46021271]
[97.89922333 47.61087799]
[100.63275909 62.35970306]
[103.36628723 77.10852814]
[106.09982300 91.85735321]
[110.59897614 98.67486572]
[108.70656586 107.02770996]
[111.05308533 121.84303284]
[113.39960480 136.65835571]
[115.74611664 151.47367859]
[130.87811279 158.89817810]
[138.56764221 173.71112061]
[135.98353577 190.03228760]
[124.32981110 201.51312256]
[127.06333923 216.26194763]
[129.79687500 231.01075745]
[140.80940247 220.82626343]
[155.67619324 222.82099915]
[163.61456299 235.54821777]
[158.86695862 249.77706909]
[144.87673950 255.18759155]
[131.79055786 247.85528564]
[132.57559204 262.83471680]
[133.36064148 277.81417847]
[134.14567566 292.79360962]
[134.93070984 307.77307129]
[135.71575928 322.75250244]
[136.50079346 337.73193359]
[147.96307373 348.27963257]
[148.54583740 363.48211670]
[138.41958618 374.34463501]
[139.20462036 389.32406616]
[150.11682129 401.08432007]
[147.58357239 416.92611694]
[133.54814148 424.69696045]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 116]
[3 115]
[6 112]
[7 111]
[8 110]
[9 109]
[10 108]
[11 107]
[12 106]
[13 100]
[14 99]
[15 98]
[20 94]
[21 93]
[22 92]
[23 91]
[24 89]
[25 88]
[26 87]
[27 86]
[28 82]
[29 81]
[30 80]
[32 78]
[33 77]
[34 76]
[35 75]
[36 74]
[37 69]
[38 68]
[39 67]
[40 66]
[41 65]
[42 64]
[43 63]
[44 62]
[45 61]
[46 60]
[48 59]
[49 58]
[50 57]
] def

init

% Start Annotations
2 116 0.0 1 colorpair
3 115 0.0 1 colorpair
6 112 0.0 1 colorpair
7 111 0.0 1 colorpair
8 110 0.0 1 colorpair
9 109 0.0 1 colorpair
10 108 0.0 1 colorpair
11 107 0.0 1 colorpair
12 106 0.0 1 colorpair
13 100 0.0 1 colorpair
14 99 0.0 1 colorpair
15 98 0.0 1 colorpair
20 94 0.0 1 colorpair
21 93 0.0 1 colorpair
22 92 0.0 1 colorpair
23 91 0.0 1 colorpair
24 89 0.0 1 colorpair
25 88 0.0 1 colorpair
26 87 0.0 1 colorpair
27 86 0.0 1 colorpair
28 82 0.0 1 colorpair
29 81 0.0 1 colorpair
30 80 0.0 1 colorpair
32 78 0.0 1 colorpair
33 77 0.0 1 colorpair
34 76 0.0 1 colorpair
35 75 0.0 1 colorpair
36 74 0.0 1 colorpair
37 69 0.0 1 colorpair
38 68 0.0 1 colorpair
39 67 0.0 1 colorpair
40 66 0.0 1 colorpair
41 65 0.0 1 colorpair
42 64 0.0 1 colorpair
43 63 0.0 1 colorpair
44 62 0.0 1 colorpair
45 61 0.0 1 colorpair
46 60 0.0 1 colorpair
48 59 0.0 1 colorpair
49 58 0.0 1 colorpair
50 57 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
