%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 02:04:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___AAGCAGACAAAGGAGACCGUAGUCGCAAUCAUCGCCAUCUGUAUUACCGCCCUGAGAGCCACGCUAAUGACAAGAAAAGACCUCUGCGAGGUAAGCAUUAGAAACCGCCAGAUGGAAGUCAAAGCCGUCACAGCUUACGAAUCUGUU___\
) } def
/len { sequence length } bind def

/coor [
[105.74108887 318.59558105]
[111.69979858 304.69058228]
[121.66528320 293.30883789]
[134.66120911 285.56536865]
[131.32339478 270.94146729]
[127.98558044 256.31753540]
[124.64776611 241.69361877]
[114.27236938 231.00715637]
[118.74485779 215.83126831]
[108.36946106 205.14480591]
[112.84194183 189.96893311]
[109.50412750 175.34501648]
[106.16631317 160.72108459]
[102.82849884 146.09716797]
[99.49068451 131.47325134]
[96.15287781 116.84933472]
[82.75911713 109.84118652]
[78.64086151 93.18240356]
[63.71882248 94.70974731]
[48.79678345 96.23709106]
[33.87474823 97.76443481]
[18.95270920 99.29177856]
[4.03067064 100.81912231]
[-10.89136696 102.34646606]
[-25.81340599 103.87381744]
[-40.73544312 105.40116119]
[-55.65748215 106.92850494]
[-63.50949860 120.18187714]
[-77.49643707 126.20010376]
[-92.17156219 122.86773682]
[-101.95339203 111.66712189]
[-116.87542725 113.19446564]
[-131.79747009 114.72180939]
[-143.00177002 126.20410919]
[-158.94973755 124.46003723]
[-167.40745544 110.82748413]
[-161.88690186 95.76419067]
[-146.62295532 90.82541656]
[-133.32481384 99.79977417]
[-118.40277100 98.27243042]
[-103.48073578 96.74507904]
[-96.17084503 83.79504395]
[-82.47512054 77.55877686]
[-67.55899811 80.61862946]
[-57.18482590 92.00646210]
[-42.26278687 90.47911835]
[-27.34074974 88.95177460]
[-12.41871166 87.42443085]
[2.50332618 85.89708710]
[17.42536354 84.36974335]
[32.34740067 82.84239960]
[47.26943970 81.31504822]
[62.19147873 79.78770447]
[77.11351776 78.26036072]
[89.73232269 70.15074921]
[97.32048035 57.21166992]
[104.90863800 44.27258682]
[112.49680328 31.33350563]
[120.08496094 18.39442444]
[120.39191437 2.57619667]
[133.50459290 -4.48829174]
[141.09275818 -17.42737389]
[148.68090820 -30.36645508]
[156.26907349 -43.30553436]
[163.85723877 -56.24461746]
[161.36526489 -68.93985748]
[168.00016785 -79.57593536]
[179.72221375 -82.71180725]
[187.57272339 -95.49340820]
[195.42324829 -108.27500916]
[203.27377319 -121.05661011]
[211.12428284 -133.83821106]
[204.45529175 -149.35105896]
[208.28691101 -165.62590027]
[220.92315674 -176.31980896]
[237.27661133 -177.38583374]
[244.86477661 -190.32492065]
[252.45292664 -203.26399231]
[260.04107666 -216.20307922]
[267.49688721 -229.21888733]
[274.81951904 -242.31005859]
[282.14215088 -255.40122986]
[289.46481323 -268.49240112]
[296.65353394 -281.65759277]
[303.70761108 -294.89541626]
[310.76168823 -308.13323975]
[317.81576538 -321.37106323]
[319.92846680 -338.19287109]
[336.67770386 -340.81948853]
[343.83831787 -325.45193481]
[331.05358887 -314.31698608]
[323.99951172 -301.07916260]
[316.94543457 -287.84133911]
[309.89135742 -274.60351562]
[309.51907349 -267.17672729]
[302.55599976 -261.16976929]
[295.23333740 -248.07859802]
[287.91070557 -234.98741150]
[280.58804321 -221.89624023]
[280.06436157 -214.47859192]
[272.98016357 -208.61491394]
[265.39199829 -195.67584229]
[257.80386353 -182.73675537]
[250.21568298 -169.79766846]
[256.68496704 -158.08105469]
[256.50329590 -144.58985901]
[249.61099243 -132.86470032]
[237.72355652 -126.03581238]
[223.90588379 -125.98769379]
[216.05537415 -113.20609283]
[208.20484924 -100.42449188]
[200.35432434 -87.64289093]
[192.50381470 -74.86128998]
[193.00016785 -57.34500885]
[176.79631042 -48.65645599]
[169.20816040 -35.71737671]
[161.61999512 -22.77829361]
[154.03182983 -9.83921337]
[146.44367981 3.09986830]
[146.67947388 17.99260712]
[133.02404785 25.98258591]
[125.43588257 38.92166519]
[117.84771729 51.86074829]
[110.25955963 64.79982758]
[102.67140198 77.73890686]
[119.09555054 94.57257080]
[110.77679443 113.51152039]
[114.11460876 128.13543701]
[117.45242310 142.75935364]
[120.79023743 157.38327026]
[124.12805176 172.00720215]
[127.46586609 186.63111877]
[138.08000183 198.36357117]
[133.36877441 212.49345398]
[143.98291016 224.22592163]
[139.27168274 238.35580444]
[142.60949707 252.97972107]
[145.94731140 267.60363770]
[149.28512573 282.22756958]
[164.35380554 283.56546021]
[178.27075195 289.49618530]
[189.67253113 299.43878174]
[197.44209290 312.41909790]
[200.81825256 327.16552734]
[199.47027588 342.23330688]
[193.53019714 356.14627075]
[183.57998657 367.54138184]
[170.59443665 375.30224609]
[155.84576416 378.66851807]
[140.77890015 377.31045532]
[126.86991119 371.36105347]
[115.48147583 361.40319824]
[107.72931671 348.41247559]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 139]
[5 138]
[6 137]
[7 136]
[9 134]
[11 132]
[12 131]
[13 130]
[14 129]
[15 128]
[16 127]
[18 54]
[19 53]
[20 52]
[21 51]
[22 50]
[23 49]
[24 48]
[25 47]
[26 46]
[27 45]
[31 41]
[32 40]
[33 39]
[55 125]
[56 124]
[57 123]
[58 122]
[59 121]
[61 119]
[62 118]
[63 117]
[64 116]
[65 115]
[68 113]
[69 112]
[70 111]
[71 110]
[72 109]
[76 104]
[77 103]
[78 102]
[79 101]
[80 99]
[81 98]
[82 97]
[83 96]
[84 94]
[85 93]
[86 92]
[87 91]
] def

init

% Start Annotations
4 139 0.0 1 colorpair
5 138 0.0 0.2 colorpair
6 137 0.0 1 colorpair
7 136 0.0 1 colorpair
9 134 0.16 1 colorpair
11 132 0.0 0.2 colorpair
12 131 0.0 0.2 colorpair
13 130 0.0 0.2 colorpair
14 129 0.0 0.2 colorpair
15 128 0.0 1 colorpair
16 127 0.0 0.2 colorpair
18 54 0.16 1 colorpair
19 53 0.16 1 colorpair
20 52 0.16 1 colorpair
21 51 0.16 1 colorpair
22 50 0.0 1 colorpair
23 49 0.0 1 colorpair
24 48 0.0 0.2 colorpair
25 47 0.0 1 colorpair
26 46 0.0 1 colorpair
27 45 0.0 0.2 colorpair
31 41 0.0 0.2 colorpair
32 40 0.0 0.2 colorpair
33 39 0.16 1 colorpair
55 125 0.0 0.2 colorpair
56 124 0.0 1 colorpair
57 123 0.16 1 colorpair
58 122 0.16 1 colorpair
59 121 0.16 1 colorpair
61 119 0.0 0.2 colorpair
62 118 0.16 1 colorpair
63 117 0.0 0.2 colorpair
64 116 0.16 1 colorpair
65 115 0.0 0.2 colorpair
68 113 0.16 1 colorpair
69 112 0.0 0.2 colorpair
70 111 0.16 1 colorpair
71 110 0.0 1 colorpair
72 109 0.16 1 colorpair
76 104 0.0 0.2 colorpair
77 103 0.0 0.2 colorpair
78 102 0.0 1 colorpair
79 101 0.16 1 colorpair
80 99 0.0 0.2 colorpair
81 98 0.0 0.2 colorpair
82 97 0.16 1 colorpair
83 96 0.0 0.2 colorpair
84 94 0.16 1 colorpair
85 93 0.0 1 colorpair
86 92 0.0 1 colorpair
87 91 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
5 138 2 gmark
134 cmark
11 132 2 gmark
12 131 2 gmark
13 130 2 gmark
14 129 2 gmark
16 127 2 gmark
18 cmark
54 cmark
19 cmark
53 cmark
20 cmark
21 cmark
51 cmark
24 48 2 gmark
27 45 2 gmark
31 41 2 gmark
32 40 2 gmark
33 cmark
39 cmark
55 125 2 gmark
123 cmark
58 cmark
59 cmark
121 cmark
61 119 2 gmark
62 cmark
63 117 2 gmark
64 cmark
65 115 2 gmark
113 cmark
69 112 2 gmark
70 cmark
111 cmark
72 cmark
109 cmark
76 104 2 gmark
77 103 2 gmark
79 cmark
80 99 2 gmark
81 98 2 gmark
82 cmark
97 cmark
83 96 2 gmark
84 cmark
94 cmark
87 91 2 gmark

% End Annotations
showpage
end
%%EOF
