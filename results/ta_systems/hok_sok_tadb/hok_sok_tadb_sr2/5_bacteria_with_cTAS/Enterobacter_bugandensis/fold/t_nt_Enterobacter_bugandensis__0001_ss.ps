%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 01:59:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UAAGAGGCUACUCUCAACCUGUUGGUAGUUGAGGGGUAGCCUCGGGUGAAUGAAAAUUUCCCGGGGCUUUCCACUUUCUGUCCCUCAACAAUGCUCAAGACAGAAAGUCUUAAGCACC\
) } def
/len { sequence length } bind def

/coor [
[97.21913147 168.87324524]
[99.35031891 154.02551270]
[91.96047211 155.30619812]
[85.45221710 168.82072449]
[78.94396210 182.33526611]
[72.43569946 195.84979248]
[74.20011902 212.15374756]
[60.80477142 221.61402893]
[46.02965164 214.49870300]
[45.07413101 198.12741089]
[58.92116928 189.34153748]
[65.42942810 175.82701111]
[71.93768311 162.31246948]
[78.44593811 148.79794312]
[73.17775726 143.45974731]
[62.64138412 132.78338623]
[57.37320328 127.44519806]
[43.77394104 133.77449036]
[30.17467880 140.10380554]
[21.20679474 153.83366394]
[4.84954739 152.66212463]
[-2.07013083 137.79437256]
[7.56613255 124.52507019]
[23.84537506 126.50453949]
[37.44463730 120.17523193]
[51.04389954 113.84593201]
[65.12710571 81.59958649]
[91.08768463 73.47439575]
[90.29605103 58.49530029]
[89.50442505 43.51620483]
[88.71279144 28.53710938]
[87.92115784 13.55801296]
[87.12953186 -1.42108321]
[86.33789825 -16.40017891]
[85.54627228 -31.37927628]
[84.75463867 -46.35837173]
[79.20471191 -55.14858246]
[81.18255615 -64.16287994]
[76.13503265 -78.28812408]
[71.08750916 -92.41336823]
[66.03999329 -106.53861237]
[60.99246979 -120.66385651]
[55.94494629 -134.78909302]
[50.89742661 -148.91433716]
[45.84990311 -163.03958130]
[40.80238342 -177.16482544]
[34.89566040 -184.30073547]
[35.81343079 -191.73008728]
[31.14052963 -205.98365784]
[26.46763039 -220.23721313]
[21.79472923 -234.49076843]
[9.22451878 -245.02272034]
[12.32646084 -261.12582397]
[27.90954399 -266.23458862]
[39.94322968 -255.09356689]
[36.04829025 -239.16368103]
[40.72119141 -224.91011047]
[45.39409256 -210.65655518]
[50.06698990 -196.40298462]
[54.92762756 -182.21235657]
[59.97514725 -168.08711243]
[65.02266693 -153.96186829]
[70.07019043 -139.83662415]
[75.11771393 -125.71137238]
[80.16523743 -111.58612823]
[85.21275330 -97.46088409]
[90.26027679 -83.33563995]
[95.30780029 -69.21039581]
[100.40063477 -83.31936646]
[110.94214630 -93.99066162]
[124.98774719 -99.25573730]
[139.94644165 -98.14336395]
[153.05880737 -90.85872650]
[161.90600586 -78.74562836]
[164.85598755 -64.03856659]
[161.36457825 -49.45055771]
[152.07582092 -37.67264557]
[138.70324707 -30.87750244]
[123.71365356 -30.31863022]
[109.87220001 -36.09912109]
[99.73373413 -47.15000153]
[100.52536774 -32.17090607]
[101.31699371 -17.19180870]
[102.10862732 -2.21271348]
[102.90026093 12.76638222]
[103.69188690 27.74547958]
[104.48352051 42.72457504]
[105.27514648 57.70367050]
[106.06678009 72.68276978]
[129.29006958 79.74044800]
[142.80989075 106.12052155]
[132.05622864 139.50706482]
[142.73260498 150.04342651]
[153.40896606 160.57980347]
[164.08534241 171.11616516]
[179.34260559 175.30265808]
[182.96647644 189.74969482]
[193.64285278 200.28605652]
[204.31921387 210.82243347]
[214.99559021 221.35879517]
[225.67196655 231.89517212]
[241.65959167 233.22755432]
[250.46594238 246.63754272]
[245.33552551 261.83813477]
[230.20396423 267.16876221]
[216.67889404 258.54019165]
[215.13560486 242.57153320]
[204.45922852 232.03517151]
[193.78285217 221.49880981]
[183.10647583 210.96243286]
[172.43009949 200.42607117]
[157.93649292 196.99320984]
[153.54898071 181.79254150]
[142.87260437 171.25617981]
[132.19622803 160.71980286]
[121.51985931 150.18344116]
[114.13001251 151.46412659]
[121.13318634 164.72895813]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 14]
[4 13]
[5 12]
[6 11]
[17 26]
[18 25]
[19 24]
[28 89]
[29 88]
[30 87]
[31 86]
[32 85]
[33 84]
[34 83]
[35 82]
[36 81]
[38 68]
[39 67]
[40 66]
[41 65]
[42 64]
[43 63]
[44 62]
[45 61]
[46 60]
[48 59]
[49 58]
[50 57]
[51 56]
[92 116]
[93 115]
[94 114]
[95 113]
[97 111]
[98 110]
[99 109]
[100 108]
[101 107]
] def

init

% Start Annotations
3 14 0.0 1 colorpair
4 13 0.0 1 colorpair
5 12 0.0 1 colorpair
6 11 0.0 1 colorpair
17 26 0.0 1 colorpair
18 25 0.0 1 colorpair
19 24 0.0 1 colorpair
28 89 0.0 1 colorpair
29 88 0.0 1 colorpair
30 87 0.0 1 colorpair
31 86 0.0 1 colorpair
32 85 0.0 1 colorpair
33 84 0.0 1 colorpair
34 83 0.0 1 colorpair
35 82 0.0 1 colorpair
36 81 0.0 1 colorpair
38 68 0.0 1 colorpair
39 67 0.0 1 colorpair
40 66 0.0 1 colorpair
41 65 0.0 1 colorpair
42 64 0.0 1 colorpair
43 63 0.0 1 colorpair
44 62 0.0 1 colorpair
45 61 0.0 1 colorpair
46 60 0.0 1 colorpair
48 59 0.0 1 colorpair
49 58 0.0 1 colorpair
50 57 0.0 1 colorpair
51 56 0.0 1 colorpair
92 116 0.0 1 colorpair
93 115 0.0 1 colorpair
94 114 0.0 1 colorpair
95 113 0.0 1 colorpair
97 111 0.0 1 colorpair
98 110 0.0 1 colorpair
99 109 0.0 1 colorpair
100 108 0.0 1 colorpair
101 107 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
