%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  8 01:59:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_AUGCCAAAAAAAACUCCGCUAGGAAGCGUCUUUAUGAUCUGCACGACGAUAGUGAUAUUCACCUGGAUGACGCGCGAUACACUGUGCGAGUUGCAAAUAAAAAAGGAAAAAAAAGAGCUGGCGGCAAAAUUAGCCUACGAAGCAAA____\
) } def
/len { sequence length } bind def

/coor [
[79.15592194 589.75646973]
[70.43840790 577.54968262]
[65.42220306 563.41333008]
[64.49574280 548.44195557]
[67.73077393 533.79492188]
[74.87677765 520.60650635]
[85.38040161 509.89791870]
[98.42828369 502.49841309]
[113.01003265 498.98095703]
[127.99650574 499.61795044]
[142.22718811 504.36004639]
[154.60012817 512.84002686]
[164.15463257 524.39715576]
[161.99201965 509.55386353]
[159.82940674 494.71057129]
[157.66677856 479.86730957]
[155.50416565 465.02401733]
[153.34155273 450.18072510]
[151.17893982 435.33743286]
[149.01632690 420.49417114]
[146.85369873 405.65087891]
[144.69108582 390.80758667]
[135.16020203 383.29446411]
[133.26820374 370.90029907]
[140.57632446 360.22229004]
[138.72093201 345.33749390]
[136.86555481 330.45266724]
[135.01016235 315.56787109]
[133.15476990 300.68307495]
[131.29937744 285.79824829]
[129.44398499 270.91345215]
[126.82230377 256.14431763]
[123.44132996 241.53033447]
[120.06034851 226.91633606]
[116.67937469 212.30233765]
[113.29839325 197.68833923]
[109.91741180 183.07432556]
[105.31655884 177.22959900]
[106.62088776 168.12342834]
[103.54265594 153.44267273]
[100.46442413 138.76191711]
[97.38619232 124.08116913]
[77.81758118 109.73011017]
[80.51262665 85.61330414]
[71.79647827 73.40557861]
[63.08032227 61.19784546]
[55.49729919 55.99002838]
[54.31326294 48.64653778]
[45.85126877 36.26127625]
[37.38927078 23.87601852]
[31.51531982 20.62463379]
[28.64307976 15.62866688]
[28.84593773 10.79947186]
[20.90299225 -1.92489922]
[12.96004772 -14.64927006]
[5.01710176 -27.37364197]
[-2.92584372 -40.09801102]
[-10.86878967 -52.82238388]
[-18.81173515 -65.54675293]
[-34.26388168 -68.86438751]
[-42.77399826 -82.18180084]
[-39.29318237 -97.59800720]
[-25.88653946 -105.96685028]
[-10.50799370 -102.32323456]
[-2.28136468 -88.82886505]
[-6.08736372 -73.48970032]
[1.85558176 -60.76532745]
[9.79852772 -48.04095840]
[17.74147224 -35.31658554]
[25.68441772 -22.59221649]
[33.62736511 -9.86784458]
[41.57030869 2.85652614]
[49.77453232 15.41402340]
[58.23652649 27.79928207]
[66.69852448 40.18454361]
[75.28805542 52.48169327]
[84.00420380 64.68942261]
[92.72035980 76.89715576]
[97.99971008 75.86013031]
[103.37775421 76.01406097]
[109.96570587 62.53819275]
[116.55364990 49.06232834]
[123.14160156 35.58646393]
[129.72955322 22.11059952]
[125.90130615 6.53099346]
[135.80879211 -6.08729982]
[151.85182190 -6.06460619]
[161.72357178 6.58166552]
[157.85127258 22.15037918]
[143.20541382 28.69854736]
[136.61746216 42.17441177]
[130.02951050 55.65027618]
[123.44156647 69.12614441]
[116.85362244 82.60200500]
[121.33974457 88.53920746]
[123.81184387 95.55806732]
[124.03659058 102.99615479]
[121.99277496 110.15147400]
[117.87329865 116.34869385]
[112.06694794 121.00293732]
[115.14517975 135.68368530]
[118.22341156 150.36444092]
[121.30163574 165.04519653]
[124.53141785 179.69335938]
[127.91239166 194.30735779]
[131.29336548 208.92135620]
[134.67434692 223.53535461]
[138.05532837 238.14935303]
[141.43630981 252.76335144]
[151.73997498 241.86222839]
[166.70333862 242.90983582]
[175.38751221 255.14035034]
[171.44395447 269.61267090]
[157.75559998 275.74691772]
[144.32879639 269.05804443]
[146.18418884 283.94287109]
[148.03958130 298.82766724]
[149.89497375 313.71249390]
[151.75035095 328.59729004]
[153.60574341 343.48208618]
[155.46113586 358.36691284]
[166.91084290 372.75125122]
[159.53437805 388.64498901]
[161.69699097 403.48825073]
[163.85960388 418.33154297]
[166.02221680 433.17483521]
[168.18482971 448.01812744]
[170.34745789 462.86138916]
[172.51007080 477.70468140]
[174.67268372 492.54797363]
[176.83529663 507.39123535]
[178.99790955 522.23455811]
[184.84854126 529.56628418]
[184.56570435 537.92315674]
[192.24398804 550.80895996]
[199.92225647 563.69476318]
[215.05883789 569.01110840]
[220.20356750 584.20684814]
[211.40985107 597.62518311]
[195.42349243 598.97259521]
[184.50782776 587.21557617]
[187.03645325 571.37304688]
[179.35816956 558.48724365]
[171.67990112 545.60137939]
[171.54771423 560.60083008]
[167.28729248 574.98303223]
[159.22854614 587.63439941]
[147.99552917 597.57519531]
[134.45808411 604.03564453]
[119.66448975 606.51550293]
[104.76031494 604.82269287]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 132]
[14 131]
[15 130]
[16 129]
[17 128]
[18 127]
[19 126]
[20 125]
[21 124]
[22 123]
[25 121]
[26 120]
[27 119]
[28 118]
[29 117]
[30 116]
[31 115]
[32 109]
[33 108]
[34 107]
[35 106]
[36 105]
[37 104]
[39 103]
[40 102]
[41 101]
[42 100]
[44 78]
[45 77]
[46 76]
[48 75]
[49 74]
[50 73]
[53 72]
[54 71]
[55 70]
[56 69]
[57 68]
[58 67]
[59 66]
[80 94]
[81 93]
[82 92]
[83 91]
[84 90]
[134 144]
[135 143]
[136 142]
] def

init

% Start Annotations
13 132 0.0 0.2 colorpair
14 131 0.0 1 colorpair
15 130 0.0 0.2 colorpair
16 129 0.0 0.2 colorpair
17 128 0.0 0.2 colorpair
18 127 0.16 1 colorpair
19 126 0.0 1 colorpair
20 125 0.16 1 colorpair
21 124 0.0 1 colorpair
22 123 0.0 0.2 colorpair
25 121 0.0 0.2 colorpair
26 120 0.16 1 colorpair
27 119 0.16 1 colorpair
28 118 0.16 1 colorpair
29 117 0.0 0.2 colorpair
30 116 0.0 1 colorpair
31 115 0.0 0.2 colorpair
32 109 0.16 1 colorpair
33 108 0.0 1 colorpair
34 107 0.0 1 colorpair
35 106 0.16 1 colorpair
36 105 0.16 1 colorpair
37 104 0.16 1 colorpair
39 103 0.16 1 colorpair
40 102 0.0 0.2 colorpair
41 101 0.0 1 colorpair
42 100 0.0 0.2 colorpair
44 78 0.0 0.2 colorpair
45 77 0.16 1 colorpair
46 76 0.16 1 colorpair
48 75 0.0 1 colorpair
49 74 0.0 1 colorpair
50 73 0.16 1 colorpair
53 72 0.0 0.2 colorpair
54 71 0.16 1 colorpair
55 70 0.0 0.2 colorpair
56 69 0.0 1 colorpair
57 68 0.0 1 colorpair
58 67 0.16 1 colorpair
59 66 0.0 0.2 colorpair
80 94 0.16 1 colorpair
81 93 0.0 0.2 colorpair
82 92 0.16 1 colorpair
83 91 0.0 1 colorpair
84 90 0.0 1 colorpair
134 144 0.0 1 colorpair
135 143 0.0 1 colorpair
136 142 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
13 132 2 gmark
15 130 2 gmark
16 129 2 gmark
17 128 2 gmark
18 cmark
127 cmark
20 cmark
22 123 2 gmark
25 121 2 gmark
26 cmark
27 cmark
119 cmark
28 cmark
29 117 2 gmark
31 115 2 gmark
109 cmark
35 cmark
106 cmark
105 cmark
37 cmark
104 cmark
103 cmark
40 102 2 gmark
42 100 2 gmark
44 78 2 gmark
45 cmark
76 cmark
50 cmark
73 cmark
53 72 2 gmark
71 cmark
55 70 2 gmark
58 cmark
67 cmark
59 66 2 gmark
80 cmark
94 cmark
81 93 2 gmark
82 cmark
136 cmark
142 cmark

% End Annotations
showpage
end
%%EOF
