%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Dec 17 01:34:50 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_ACACCCUUAUCUGG_U_GCGUAUUAAUCGUGUGUCUCACACUGUUGAUAUUCACUUACC____UGACCCGGAAAUCGCUGUGCGAAAUCCGGUACAGGGACGGGAACAGGGAGGUGGCGGCUUUCAUGGCUUACGA_AUCC__CGGU_AAGUA_GC_AACC_UG_GAG_GC_GGGGGAA_G__CCCC_GCC_____UUUUCAG____G_GCU__G_A_U_GCU_G_____GU_CUGA_CU_UGCCUG_A_AGCG\
CC_UUUAUGAAGGGGCUGC_CGG______________\
) } def
/len { sequence length } bind def

/coor [
[140.87011719 338.11932373]
[139.87794495 323.14846802]
[139.69773865 308.14584351]
[140.33003235 293.15548706]
[141.77294922 278.22131348]
[144.02227783 263.38720703]
[147.07141113 248.69659424]
[150.91140747 234.19261169]
[155.53100586 219.91780090]
[160.91665649 205.91403198]
[167.05255127 192.22236633]
[173.92071533 178.88296509]
[181.50097656 165.93496704]
[189.77110291 153.41635132]
[177.72149658 144.48287964]
[170.50993347 143.03021240]
[165.59127808 135.38847351]
[150.77478027 133.86503601]
[144.45219421 119.36208344]
[133.64491272 132.42254639]
[119.46802521 140.53041077]
[103.95526123 143.02087402]
[93.49176788 153.76867676]
[83.02827454 164.51647949]
[72.56477356 175.26428223]
[62.10127640 186.01208496]
[65.81728363 197.89315796]
[64.15703583 210.15794373]
[57.49400330 220.50241089]
[47.13562393 227.00944519]
[35.06718063 228.50396729]
[23.57138062 224.76478577]
[12.87982845 235.28575134]
[2.18827653 245.80671692]
[0.62196070 261.77313232]
[-12.91552925 270.38220215]
[-28.03938866 265.02975464]
[-33.14788818 249.82177734]
[-24.32222366 236.42449951]
[-8.33268929 235.11517334]
[2.35886312 224.59420776]
[13.05041504 214.07324219]
[9.63398075 196.71070862]
[17.42382240 180.64648438]
[33.45345688 172.43345642]
[51.35347748 175.54858398]
[61.81697083 164.80078125]
[72.28047180 154.05297852]
[82.74396515 143.30517578]
[93.20745850 132.55737305]
[89.72751617 125.91358185]
[76.43993378 132.87347412]
[63.15234375 139.83335876]
[49.86464310 146.79302979]
[42.90519333 133.50521851]
[56.19245529 126.54577637]
[69.48004150 119.58588409]
[82.76762390 112.62599945]
[79.28768158 105.98220062]
[64.49435425 108.46364594]
[59.19636917 122.87985229]
[47.38980484 132.70332336]
[32.25057220 135.29161072]
[17.85104752 129.94845581]
[8.06462955 118.11116028]
[5.52381611 102.96389008]
[10.91207409 88.58117676]
[22.77998734 78.83191681]
[37.93515015 76.33859253]
[52.30089569 81.77190399]
[62.01291275 93.67031860]
[76.80623627 91.18888092]
[62.63420868 86.27425385]
[48.46217728 81.35962677]
[34.29014587 76.44499969]
[20.11811829 71.53037262]
[5.94608736 66.61574554]
[-8.22594261 61.70111465]
[-22.39797401 56.78648758]
[-36.57000351 51.87186050]
[-50.74203491 46.95723343]
[-64.91406250 42.04260635]
[-79.08609772 37.12797928]
[-93.25812531 32.21335220]
[-108.18466949 33.69601822]
[-123.17092896 33.05408478]
[-137.91601562 30.30044365]
[-152.12387085 25.49037933]
[-165.50924683 18.72046852]
[-177.80339050 10.12663364]
[-188.75946045 -0.11857893]
[-198.15750122 -11.80947018]
[-205.80880737 -24.71131325]
[-211.55975342 -38.56507111]
[-215.29489136 -53.09259033]
[-216.93920898 -68.00218964]
[-216.45970154 -82.99452209]
[-213.86599731 -97.76857758]
[-209.21015930 -112.02772522]
[-202.58569336 -125.48567200]
[-194.12557983 -137.87222290]
[-183.99967957 -148.93867493]
[-172.41131592 -158.46282959]
[-159.59313965 -166.25349426]
[-145.80250549 -172.15422058]
[-131.31631470 -176.04653931]
[-116.42540741 -177.85232544]
[-101.42876434 -177.53530884]
[-86.62747192 -175.10183716]
[-72.31871033 -170.60079956]
[-58.78976822 -164.12254333]
[-46.31227875 -155.79714966]
[-35.13675690 -145.79176331]
[-25.48758316 -134.30726624]
[-17.55849075 -121.57426453]
[-11.50867462 -107.84838867]
[-7.45960426 -93.40522003]
[-5.49261475 -78.53542328]
[2.53017020 -65.86123657]
[10.55295467 -53.18705750]
[18.57573891 -40.51287460]
[26.59852409 -27.83868980]
[34.62130737 -15.16450596]
[42.64409256 -2.49032259]
[50.66687775 10.18386078]
[58.68966293 22.85804367]
[66.71244812 35.53222656]
[74.73522949 48.20640945]
[82.75801849 60.88059616]
[90.78079987 73.55477905]
[89.81647491 58.58580780]
[81.20798492 45.31160355]
[88.11106110 32.11323929]
[87.14673615 17.14426994]
[86.18240356 2.17529869]
[71.62741852 -2.05886388]
[59.40020370 -11.01827812]
[50.97726440 -23.62105179]
[47.37570572 -38.34533691]
[49.03043747 -53.41310501]
[55.74164200 -67.00485229]
[66.69890594 -77.47930908]
[80.57908630 -83.57162476]
[95.70608521 -84.54613495]
[110.25324249 -80.28515625]
[122.46392822 -71.30322266]
[130.86363220 -58.68495178]
[134.43804932 -43.95405579]
[132.75553894 -28.88936043]
[126.01931000 -15.31000423]
[115.04276276 -4.85576057]
[101.15137482 1.21096992]
[102.11569977 16.17993927]
[103.08003235 31.14891052]
[111.61954498 43.35243225]
[104.78544617 57.62147903]
[105.74977112 72.59044647]
[113.09468079 74.10781097]
[123.06770325 62.90340424]
[127.78448486 77.14253235]
[135.12939453 78.65988922]
[141.94641113 65.29844666]
[143.04853821 56.27764130]
[148.90882874 51.83087158]
[155.79737854 38.50616455]
[150.68385315 23.55199051]
[157.71716309 9.39896297]
[172.72456360 4.44382381]
[186.80242920 11.62636852]
[191.59863281 26.68532181]
[184.26763916 40.68647385]
[169.15882874 45.32318878]
[168.91917419 52.67569733]
[162.19641113 58.79076385]
[155.30786133 72.11547089]
[148.49082947 85.47691345]
[160.87915039 77.01939392]
[169.66375732 64.86083221]
[183.26002502 58.52509689]
[198.22009277 59.61885834]
[210.75025940 67.86475372]
[217.67303467 81.17172241]
[217.23286438 96.16526031]
[209.54136658 109.04318237]
[196.54904175 116.53980255]
[181.55056763 116.75405884]
[168.34884644 109.63110352]
[153.51435852 107.40895081]
[169.18580627 109.58057404]
[174.65342712 123.43533325]
[186.65496826 132.43327332]
[198.70457458 141.36674500]
[208.27958679 129.81555176]
[218.46591187 118.79967499]
[229.23370361 108.35142517]
[240.55134583 98.50146484]
[252.38566589 89.27867889]
[264.70193481 80.71011353]
[277.46405029 72.82089996]
[290.63455200 65.63419342]
[304.17483521 59.17106247]
[318.04513550 53.45046616]
[332.20483398 48.48918533]
[346.61233521 44.30177307]
[361.22543335 40.90051270]
[376.00122070 38.29537582]
[390.89639282 36.49400711]
[405.86724854 35.50168991]
[420.86984253 35.32133484]
[435.86022949 35.95347214]
[450.79440308 37.39624786]
[465.62854004 39.64542770]
[480.31918335 42.69441605]
[494.82321167 46.53426743]
[509.09805298 51.15372086]
[523.10186768 56.53922653]
[536.79364014 62.67499161]
[550.13305664 69.54300690]
[563.08111572 77.12313843]
[575.59985352 85.39315033]
[587.65246582 94.32878876]
[599.20361328 103.90383148]
[610.21948242 114.09020233]
[620.66766357 124.85801697]
[630.51757812 136.17570496]
[639.74035645 148.01005554]
[648.30889893 160.32635498]
[656.19805908 173.08848572]
[663.38470459 186.25901794]
[669.84777832 199.79930115]
[675.56835938 213.66964722]
[680.52954102 227.82934570]
[684.71691895 242.23687744]
[688.11816406 256.84997559]
[690.72320557 271.62579346]
[692.52453613 286.52096558]
[693.51684570 301.49179077]
[693.69714355 316.49441528]
[693.06494141 331.48480225]
[691.62213135 346.41894531]
[689.37286377 361.25311279]
[686.32385254 375.94372559]
[682.48394775 390.44772339]
[677.86444092 404.72256470]
[672.47888184 418.72637939]
[666.34307861 432.41809082]
[659.47503662 445.75750732]
[651.89483643 458.70556641]
[643.62481689 471.22424316]
[634.68908691 483.27682495]
[625.11401367 494.82794189]
[614.92761230 505.84375000]
[604.15979004 516.29193115]
[592.84204102 526.14184570]
[581.00769043 535.36450195]
[568.69134521 543.93304443]
[555.92919922 551.82214355]
[542.75866699 559.00878906]
[529.21832275 565.47180176]
[515.34796143 571.19232178]
[501.18826294 576.15350342]
[486.78070068 580.34082031]
[472.16760254 583.74194336]
[457.39178467 586.34698486]
[442.49661255 588.14825439]
[427.52575684 589.14050293]
[412.52313232 589.32073975]
[397.53277588 588.68853760]
[382.59860229 587.24566650]
[367.76446533 584.99633789]
[353.07385254 581.94726562]
[338.56985474 578.10729980]
[324.29504395 573.48779297]
[310.29122925 568.10217285]
[296.59954834 561.96630859]
[283.26013184 555.09820557]
[270.31213379 547.51800537]
[257.79348755 539.24792480]
[245.74092102 530.31219482]
[234.18981934 520.73706055]
[223.17404175 510.55062866]
[212.72592163 499.78271484]
[202.87606812 488.46499634]
[193.65339661 476.63058472]
[185.08494568 464.31420898]
[177.19587708 451.55203247]
[170.00929260 438.38143921]
[163.54629517 424.84112549]
[157.82583618 410.97073364]
[152.86470032 396.81100464]
[148.67742920 382.40344238]
[145.27632141 367.79031372]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 192]
[15 191]
[17 190]
[19 188]
[22 50]
[23 49]
[24 48]
[25 47]
[26 46]
[32 42]
[33 41]
[34 40]
[59 72]
[60 71]
[130 157]
[131 156]
[133 154]
[134 153]
[135 152]
[161 176]
[162 175]
[164 174]
[165 172]
] def

init

% Start Annotations
15 191 0.16 0.2 colorpair
17 190 0.16 0.2 colorpair
19 188 0.0 0.2 colorpair
25 47 0.32 1 colorpair
34 40 0.16 1 colorpair
60 71 0.0 0.6 colorpair
130 157 0.16 0.2 colorpair
131 156 0.16 1 colorpair
133 154 0.0 0.6 colorpair
134 153 0.0 0.6 colorpair
135 152 0.0 1 colorpair
162 175 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
14 192 3 gmark
192 cmark
15 191 2 gmark
191 cmark
17 190 2 gmark
17 cmark
19 188 2 gmark
22 50 3 gmark
22 cmark
50 cmark
23 49 6 gmark
23 cmark
49 cmark
24 48 8 gmark
24 cmark
48 cmark
25 cmark
47 cmark
26 46 10 gmark
26 cmark
32 42 8 gmark
32 cmark
42 cmark
33 41 3 gmark
41 cmark
40 cmark
59 72 32 gmark
59 cmark
72 cmark
60 71 1 gmark
130 157 2 gmark
130 cmark
157 cmark
131 cmark
133 154 1 gmark
134 153 1 gmark
161 176 4 gmark
161 cmark
162 175 1 gmark
162 cmark
164 174 7 gmark
164 cmark
165 172 3 gmark
165 cmark
172 cmark

% End Annotations
showpage
end
%%EOF
