%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Dec 17 09:33:53 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___________________________AUGAUGCU___G___CAA_AAAAAUGCC_________CUUG_U___GGCCCU__GAUCGUCAU______CUGUUUCACGGUACU_GGUAUUCACAUUGAUGACGCGGG_AAUCGCUGUGCGAGUUGCGGAUCAGAGA___CGGAAAUACGGAGGUU_GCGGCC___UUUUUGGCUUACGAAU___C___CGAG_AAG_______________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50431824 92.10569000]
[62.52417755 91.31733704]
[47.56993866 90.13547516]
[32.65193558 88.56093597]
[17.78047562 86.59479523]
[2.96583843 84.23841858]
[-11.78173923 81.49342346]
[-26.45206642 78.36172485]
[-41.03499985 74.84547424]
[-55.52046585 70.94710541]
[-69.89845276 66.66931152]
[-84.15902710 62.01504517]
[-98.29232025 56.98753357]
[-112.28858185 51.59024048]
[-126.13813019 45.82690430]
[-139.83139038 39.70149994]
[-153.35891724 33.21826935]
[-166.71133423 26.38168526]
[-179.87942505 19.19647598]
[-192.85411072 11.66760826]
[-205.62638855 3.80028296]
[-218.18745422 -4.40006161]
[-230.52862549 -12.92775822]
[-242.64135742 -21.77691460]
[-254.51730347 -30.94141197]
[-266.14822388 -40.41492081]
[-277.52612305 -50.19089127]
[-288.64312744 -60.26256943]
[-299.49151611 -70.62299347]
[-310.06381226 -81.26499939]
[-320.35272217 -92.18124390]
[-330.35113525 -103.36416626]
[-340.05212402 -114.80605316]
[-349.44900513 -126.49899292]
[-358.53527832 -138.43489075]
[-367.30462646 -150.60552979]
[-375.75103760 -163.00245667]
[-383.86868286 -175.61714172]
[-391.65191650 -188.44085693]
[-399.09533691 -201.46472168]
[-406.19387817 -214.67974854]
[-412.94256592 -228.07679749]
[-419.33676147 -241.64663696]
[-425.37207031 -255.37985229]
[-431.04425049 -269.26696777]
[-436.34945679 -283.29840088]
[-441.28399658 -297.46441650]
[-445.84445190 -311.75527954]
[-450.02767944 -326.16107178]
[-453.83078003 -340.67181396]
[-457.25112915 -355.27755737]
[-460.28634644 -369.96813965]
[-462.93438721 -384.73342896]
[-465.19335938 -399.56323242]
[-467.06173706 -414.44729614]
[-468.53820801 -429.37533569]
[-469.62176514 -444.33700562]
[-470.31167603 -459.32199097]
[-470.60742188 -474.31994629]
[-470.50885010 -489.32049561]
[-470.01599121 -504.31326294]
[-469.12918091 -519.28790283]
[-467.84906006 -534.23406982]
[-466.17651367 -549.14135742]
[-464.11267090 -563.99957275]
[-461.65896606 -578.79840088]
[-458.81710815 -593.52764893]
[-455.58905029 -608.17706299]
[-451.97702026 -622.73657227]
[-447.98352051 -637.19610596]
[-443.61132812 -651.54565430]
[-438.86343384 -665.77532959]
[-433.74313354 -679.87530518]
[-428.25396729 -693.83575439]
[-422.39971924 -707.64715576]
[-416.18444824 -721.29986572]
[-409.61245728 -734.78448486]
[-402.68823242 -748.09167480]
[-395.41665649 -761.21221924]
[-387.80264282 -774.13714600]
[-379.85156250 -786.85742188]
[-371.56881714 -799.36431885]
[-362.96020508 -811.64916992]
[-354.03161621 -823.70349121]
[-344.78927612 -835.51898193]
[-335.23950195 -847.08740234]
[-325.38897705 -858.40075684]
[-315.24444580 -869.45129395]
[-304.81292725 -880.23138428]
[-294.10168457 -890.73352051]
[-283.11804199 -900.95043945]
[-271.86962891 -910.87512207]
[-260.36422729 -920.50073242]
[-248.60978699 -929.82055664]
[-236.61442566 -938.82818604]
[-224.38641357 -947.51733398]
[-211.93423462 -955.88208008]
[-199.26646423 -963.91662598]
[-186.39187622 -971.61541748]
[-173.31936646 -978.97308350]
[-160.05796814 -985.98461914]
[-146.61685181 -992.64508057]
[-133.00527954 -998.94995117]
[-119.23269653 -1004.89483643]
[-105.30859375 -1010.47564697]
[-91.24260712 -1015.68853760]
[-77.04444885 -1020.52984619]
[-62.72393417 -1024.99621582]
[-48.29096222 -1029.08471680]
[-33.75550842 -1032.79235840]
[-19.12761879 -1036.11657715]
[-4.41739750 -1039.05529785]
[10.36498547 -1041.60620117]
[25.20931435 -1043.76757812]
[40.10533142 -1045.53808594]
[55.04274368 -1046.91650391]
[70.01122284 -1047.90161133]
[85.00042725 -1048.49304199]
[100.00000000 -1048.69018555]
[114.99957275 -1048.49304199]
[129.98876953 -1047.90161133]
[144.95726013 -1046.91650391]
[159.89466858 -1045.53808594]
[174.79067993 -1043.76757812]
[189.63500977 -1041.60620117]
[204.41740417 -1039.05529785]
[219.12762451 -1036.11657715]
[233.75550842 -1032.79235840]
[248.29096985 -1029.08471680]
[262.72393799 -1024.99621582]
[277.04443359 -1020.52984619]
[291.24261475 -1015.68853760]
[305.30859375 -1010.47564697]
[319.23269653 -1004.89483643]
[333.00527954 -998.94995117]
[346.61685181 -992.64508057]
[360.05798340 -985.98461914]
[373.31936646 -978.97308350]
[386.39187622 -971.61541748]
[399.26647949 -963.91662598]
[411.93423462 -955.88208008]
[424.38641357 -947.51733398]
[436.61441040 -938.82818604]
[448.60980225 -929.82055664]
[460.36422729 -920.50073242]
[471.86962891 -910.87512207]
[483.11804199 -900.95043945]
[494.10168457 -890.73352051]
[504.81292725 -880.23138428]
[515.24444580 -869.45129395]
[525.38897705 -858.40075684]
[535.23950195 -847.08740234]
[544.78924561 -835.51898193]
[554.03161621 -823.70349121]
[562.96020508 -811.64916992]
[571.56884766 -799.36431885]
[579.85156250 -786.85742188]
[587.80267334 -774.13714600]
[595.41662598 -761.21221924]
[602.68823242 -748.09167480]
[609.61242676 -734.78448486]
[616.18444824 -721.29986572]
[622.39971924 -707.64715576]
[628.25396729 -693.83575439]
[633.74310303 -679.87530518]
[638.86340332 -665.77532959]
[643.61132812 -651.54565430]
[647.98352051 -637.19610596]
[651.97698975 -622.73657227]
[655.58905029 -608.17706299]
[658.81707764 -593.52764893]
[661.65893555 -578.79840088]
[664.11267090 -563.99957275]
[666.17651367 -549.14135742]
[667.84906006 -534.23406982]
[669.12921143 -519.28790283]
[670.01599121 -504.31326294]
[670.50885010 -489.32049561]
[670.60742188 -474.31994629]
[670.31164551 -459.32199097]
[669.62176514 -444.33700562]
[668.53820801 -429.37533569]
[667.06170654 -414.44729614]
[665.19335938 -399.56323242]
[662.93438721 -384.73342896]
[660.28637695 -369.96813965]
[657.25109863 -355.27755737]
[653.83074951 -340.67181396]
[650.02764893 -326.16107178]
[645.84448242 -311.75527954]
[641.28399658 -297.46441650]
[636.34948730 -283.29840088]
[631.04425049 -269.26696777]
[625.37207031 -255.37985229]
[619.33679199 -241.64663696]
[612.94256592 -228.07679749]
[606.19384766 -214.67974854]
[599.09533691 -201.46472168]
[591.65191650 -188.44085693]
[583.86865234 -175.61714172]
[575.75103760 -163.00245667]
[567.30462646 -150.60552979]
[558.53527832 -138.43489075]
[549.44897461 -126.49899292]
[540.05212402 -114.80605316]
[530.35113525 -103.36416626]
[520.35272217 -92.18124390]
[510.06381226 -81.26499939]
[499.49151611 -70.62299347]
[488.64312744 -60.26256943]
[477.52612305 -50.19089127]
[466.14822388 -40.41492081]
[454.51730347 -30.94141197]
[442.64135742 -21.77691460]
[430.52862549 -12.92775822]
[418.18743896 -4.40006161]
[405.62637329 3.80028296]
[392.85409546 11.66760826]
[379.87942505 19.19647598]
[366.71133423 26.38168526]
[353.35891724 33.21826935]
[339.83139038 39.70149994]
[326.13812256 45.82690430]
[312.28857422 51.59024048]
[298.29232788 56.98753357]
[284.15902710 62.01504517]
[269.89846802 66.66931152]
[255.52046204 70.94710541]
[241.03500366 74.84547424]
[226.45207214 78.36172485]
[211.78173828 81.49342346]
[197.03416443 84.23841858]
[182.21952820 86.59479523]
[167.34806824 88.56093597]
[152.43005371 90.13547516]
[137.47581482 91.31733704]
[122.49568176 92.10569000]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
