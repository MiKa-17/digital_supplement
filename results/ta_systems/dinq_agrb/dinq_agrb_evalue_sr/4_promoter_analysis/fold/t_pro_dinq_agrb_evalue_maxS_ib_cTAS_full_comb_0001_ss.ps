%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 24 19:50:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGUAAGCGGAUGCAUUCUCACUCCAUCGCAUGGAGAAAACGGGUGAUUGAUAAAGCAAUCAUCGUUCUUGGGGCGUUAAUUGCGCUGCUGGAACUGAUCCGCUUUCUGCUUCAGCUUCUGAAC\
) } def
/len { sequence length } bind def

/coor [
[123.35761261 439.60687256]
[110.22171021 432.36477661]
[97.69677734 424.11093140]
[85.86058044 414.89657593]
[74.78661346 404.77890015]
[64.54361725 393.82073975]
[55.19520187 382.09014893]
[46.79939651 369.65991211]
[39.40832901 356.60723877]
[33.06789398 343.01318359]
[27.81744957 328.96209717]
[23.68959808 314.54122925]
[20.70996666 299.84014893]
[18.89705658 284.95013428]
[18.26211929 269.96356201]
[18.80910110 254.97354126]
[20.53460312 240.07312012]
[23.42791367 225.35479736]
[27.47106934 210.90998840]
[32.63896942 196.82833862]
[38.89952469 183.19728088]
[46.21386719 170.10147095]
[54.53658295 157.62219238]
[63.81600571 145.83692932]
[73.99172974 134.82165527]
[59.00205231 135.37809753]
[44.01237488 135.93455505]
[29.02270126 136.49101257]
[14.03302670 137.04747009]
[-1.57090271 143.67723083]
[-12.26116753 130.51840210]
[-2.57595754 116.60319519]
[13.47657299 122.05779266]
[28.46624756 121.50133514]
[43.45592499 120.94488525]
[58.44559860 120.38842773]
[73.43527222 119.83197784]
[77.47588348 113.51347351]
[64.05442810 106.81537628]
[49.94541550 101.72264099]
[49.51327515 86.72886658]
[63.30554199 80.83197784]
[73.84654236 91.50294495]
[85.55709839 100.87646484]
[89.59770203 94.55796051]
[83.81462860 80.71758270]
[78.03155518 66.87720490]
[72.24847412 53.03682709]
[66.46540070 39.19644928]
[60.68232727 25.35607338]
[54.89925003 11.51569653]
[49.11617661 -2.32468057]
[34.40292740 -8.09493732]
[28.15593338 -22.61219025]
[34.08142471 -37.26361084]
[48.66391373 -43.35676956]
[63.25186539 -37.27670288]
[69.19051361 -22.63061142]
[62.95655441 -8.10775566]
[68.73963165 5.73262167]
[74.52270508 19.57299805]
[80.30577850 33.41337585]
[86.08885193 47.25375366]
[91.87192535 61.09413147]
[97.65500641 74.93450928]
[103.43807983 88.77488708]
[118.43693542 88.96041107]
[124.56056976 75.26730347]
[130.68420410 61.57420349]
[136.80784607 47.88110352]
[137.75451660 30.95360565]
[154.28254700 27.17727661]
[162.48670959 42.01399231]
[150.50094604 54.00474167]
[144.37731934 67.69784546]
[138.25367737 81.39094543]
[132.13003540 95.08404541]
[146.09243774 89.60214233]
[160.44309998 85.23656464]
[175.09294128 82.01441956]
[189.95100403 79.95571136]
[204.92501831 79.07322693]
[219.92202759 79.37243652]
[234.84893799 80.85149384]
[249.61305237 83.50120544]
[264.12271118 87.30512238]
[278.28784180 92.23963165]
[292.02047729 98.27408600]
[305.23535156 105.37104034]
[317.85046387 113.48641205]
[329.78744507 122.56982422]
[340.97219849 132.56488037]
[351.33526611 143.40953064]
[360.81234741 155.03643799]
[369.34457397 167.37342834]
[376.87899780 180.34387207]
[383.36880493 193.86727905]
[388.77371216 207.85966492]
[393.06018066 222.23416138]
[396.20159912 236.90153503]
[398.17840576 251.77069092]
[398.97842407 266.74935913]
[398.59658813 281.74447632]
[397.03533936 296.66302490]
[394.30435181 311.41232300]
[390.42056274 325.90078735]
[385.40811157 340.03851318]
[379.29809570 353.73770142]
[372.12847900 366.91329956]
[363.94372559 379.48352051]
[354.79470825 391.37026978]
[344.73818970 402.49981689]
[333.83660889 412.80300903]
[322.15768433 422.21591187]
[309.77389526 430.68005371]
[296.76214600 438.14291382]
[283.20318604 444.55810547]
[269.18124390 449.88586426]
[254.78335571 454.09310913]
[240.09890747 457.15365601]
[225.21908569 459.04855347]
[210.23625183 459.76605225]
[195.24343872 459.30163574]
[180.33374023 457.65823364]
[165.59971619 454.84603882]
[151.13284302 450.88250732]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 37]
[26 36]
[27 35]
[28 34]
[29 33]
[45 66]
[46 65]
[47 64]
[48 63]
[49 62]
[50 61]
[51 60]
[52 59]
[67 77]
[68 76]
[69 75]
[70 74]
] def

init

% Start Annotations
25 37 0.0 1 colorpair
26 36 0.0 1 colorpair
27 35 0.0 1 colorpair
28 34 0.0 1 colorpair
29 33 0.0 1 colorpair
45 66 0.0 0.6 colorpair
46 65 0.16 0.6 colorpair
47 64 0.0 0.6 colorpair
48 63 0.0 0.6 colorpair
49 62 0.0 0.6 colorpair
50 61 0.0 0.6 colorpair
51 60 0.0 0.6 colorpair
52 59 0.0 0.6 colorpair
67 77 0.0 0.6 colorpair
68 76 0.0 0.6 colorpair
69 75 0.16 0.6 colorpair
70 74 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
45 66 1 gmark
46 65 1 gmark
46 cmark
47 64 1 gmark
48 63 1 gmark
49 62 1 gmark
50 61 1 gmark
51 60 1 gmark
52 59 1 gmark
67 77 1 gmark
68 76 1 gmark
69 75 1 gmark
75 cmark
70 74 1 gmark

% End Annotations
showpage
end
%%EOF
