%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 24 15:43:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGUAAGCGGAUGCAUUCUCACUCCAUCGCAUGGAGAAAACGG_GUGAUUGAUAAAGCAAUCAUCGUUCUUGGGGCGUUAAUUGCGCUGCUGGAACUGAUCCGCUUCCUGCUUCAGCUUCUGAAC\
) } def
/len { sequence length } bind def

/coor [
[-47.24354172 459.07641602]
[-61.09820938 464.84451294]
[-75.35377502 469.53512573]
[-89.92656708 473.12069702]
[-104.73107910 475.58020020]
[-119.68042755 476.89920044]
[-134.68687439 477.06997681]
[-149.66236877 476.09152222]
[-164.51901245 473.96954346]
[-179.16963196 470.71652222]
[-193.52825928 466.35156250]
[-207.51060486 460.90026855]
[-221.03462219 454.39459229]
[-234.02095032 446.87277222]
[-246.39338684 438.37890625]
[-258.07931519 428.96286011]
[-269.01016235 418.67990112]
[-279.12176514 407.59036255]
[-288.35482788 395.75930786]
[-296.65509033 383.25619507]
[-303.97390747 370.15435791]
[-310.26831055 356.53073120]
[-315.50137329 342.46527100]
[-319.64236450 328.04046631]
[-322.66699219 313.34097290]
[-324.55749512 298.45312500]
[-325.30279541 283.46420288]
[-324.89849854 268.46221924]
[-323.34701538 253.53521729]
[-320.65740967 238.77078247]
[-316.84548950 224.25553894]
[-311.93359375 210.07470703]
[-305.95059204 196.31147766]
[-298.93157959 183.04663086]
[-290.91772461 170.35801697]
[-281.95608521 158.32008362]
[-272.09924316 147.00347900]
[-261.40502930 136.47462463]
[-249.93623352 126.79531097]
[-237.76013184 118.02232361]
[-224.94819641 110.20716095]
[-211.57559204 103.39567566]
[-197.72080994 97.62784576]
[-183.46516418 92.93751526]
[-168.89230347 89.35221863]
[-154.08773804 86.89299011]
[-139.13836670 85.57426453]
[-124.13191223 85.40377808]
[-109.15644073 86.38253021]
[-94.29982758 88.50477600]
[-79.64926910 91.75807190]
[-65.29074097 96.12330627]
[-51.30849838 101.57488251]
[-37.78459930 108.08079529]
[-24.79841042 115.60286713]
[-12.42613602 124.09696198]
[-0.74038607 133.51322937]
[10.19026279 143.79640198]
[20.30166435 154.88613892]
[32.12686157 145.65766907]
[37.76199341 129.08566284]
[55.95269012 126.55998993]
[67.54784393 117.04409027]
[79.14300537 107.52819061]
[90.73815918 98.01229095]
[92.44766235 92.93237305]
[96.92575073 89.21523285]
[103.14376831 88.33086395]
[115.19187927 79.39537048]
[127.23999023 70.45988464]
[139.28810120 61.52439499]
[141.74043274 46.14181137]
[154.08622742 37.25158310]
[168.73605347 39.68430710]
[175.21134949 25.24889565]
[190.04309082 23.88192558]
[202.09121704 14.94643593]
[199.66815186 -0.16605549]
[204.55676270 -14.66985130]
[215.63366699 -25.23208427]
[230.35348511 -29.42563057]
[245.33369446 -26.28684616]
[257.13195801 -16.53699875]
[263.03710938 -2.41653132]
[261.69223022 12.82977486]
[253.40631104 25.69842911]
[240.08343506 33.23231125]
[224.78507996 33.70019150]
[211.02670288 26.99454880]
[198.97859192 35.93003845]
[193.36505127 49.72632217]
[177.67153931 51.73241806]
[175.74688721 66.45761108]
[163.65568542 75.69110107]
[148.22360229 73.57250977]
[136.17547607 82.50799561]
[124.12737274 91.44348907]
[112.07925415 100.37897491]
[100.25405884 109.60745239]
[88.65890503 119.12334442]
[77.06374359 128.63925171]
[65.46858978 138.15515137]
[63.40499878 150.95692444]
[53.46274567 158.63973999]
[41.35533524 157.48286438]
[29.53013802 166.71133423]
[37.83066177 179.21429443]
[45.14973068 192.31597900]
[51.44439316 205.93948364]
[56.67771149 220.00486755]
[60.81896973 234.42959595]
[63.84387207 249.12901306]
[65.73465729 264.01684570]
[66.48023987 279.00573730]
[66.07624054 294.00772095]
[64.52502441 308.93475342]
[61.83570099 323.69924927]
[58.02405167 338.21456909]
[53.11244202 352.39547729]
[47.12969971 366.15884399]
[40.11093521 379.42379761]
[32.09733200 392.11257935]
[23.13591957 404.15069580]
[13.27928925 415.46746826]
[2.58528519 425.99652100]
[-8.88333702 435.67605591]
[-21.05927277 444.44927979]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[59 106]
[60 105]
[62 102]
[63 101]
[64 100]
[65 99]
[68 98]
[69 97]
[70 96]
[71 95]
[74 92]
[76 90]
[77 89]
] def

init

% Start Annotations
60 105 0.16 0.6 colorpair
62 102 0.0 0.6 colorpair
63 101 0.0 0.6 colorpair
64 100 0.0 0.6 colorpair
65 99 0.0 0.6 colorpair
68 98 0.32 0.6 colorpair
69 97 0.16 0.6 colorpair
70 96 0.0 0.6 colorpair
71 95 0.0 0.6 colorpair
76 90 0.16 0.2 colorpair
77 89 0.16 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
59 106 3 gmark
106 cmark
60 105 1 gmark
60 cmark
62 102 1 gmark
63 101 1 gmark
64 100 1 gmark
65 99 1 gmark
68 98 1 gmark
68 cmark
98 cmark
69 97 1 gmark
97 cmark
70 96 1 gmark
71 95 1 gmark
74 92 5 gmark
74 cmark
92 cmark
76 90 2 gmark
76 cmark
77 89 2 gmark
89 cmark

% End Annotations
showpage
end
%%EOF
