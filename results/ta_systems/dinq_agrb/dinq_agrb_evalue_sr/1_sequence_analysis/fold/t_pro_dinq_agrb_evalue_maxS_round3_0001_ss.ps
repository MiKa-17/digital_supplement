%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 24 14:19:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGUAAGCGGAUGCAUUCUCACUCCAUCGCAUGGAGAAAACGGGUGAUUGAUAAAGCAAUCAUCGUUCUUGGGGCGUUAAUUGCGCUGCUGGAACUGAUCCGCUUCCUGCUUCAGCUUCUGAAC\
) } def
/len { sequence length } bind def

/coor [
[107.53388214 144.41687012]
[100.08030701 143.58372498]
[91.38403320 155.80561829]
[82.68775940 168.02751160]
[73.99148560 180.24942017]
[78.77174377 194.89370728]
[74.06737518 209.37550354]
[61.88179016 218.20587158]
[47.01112747 218.16809082]
[38.31485367 230.38999939]
[37.30163574 246.75781250]
[22.50152588 253.82101440]
[9.13961029 244.31358337]
[10.96148205 228.01594543]
[26.09295464 221.69372559]
[34.78923035 209.47181702]
[29.87928772 195.43507385]
[34.22768402 181.02828979]
[46.36745453 171.83702087]
[61.76958466 171.55314636]
[70.46585846 159.33125305]
[79.16213226 147.10934448]
[87.85840607 134.88745117]
[84.29738617 128.28675842]
[73.61434174 108.48466492]
[58.62467194 109.04112244]
[43.63499451 109.59757233]
[28.64532089 110.15402985]
[13.65564537 110.71047974]
[-1.94828427 117.34024048]
[-12.63854885 104.18141937]
[-2.95333886 90.26621246]
[13.09919167 95.72080231]
[28.08886719 95.16435242]
[43.07854080 94.60790253]
[58.06821823 94.05144501]
[73.05789185 93.49499512]
[77.09849548 87.17649078]
[63.67704391 80.47838593]
[49.56803513 75.38565826]
[49.13589096 60.39188385]
[62.92816162 54.49499512]
[73.46915436 65.16596222]
[85.17971039 74.53948212]
[89.22032166 68.22097778]
[83.43724823 54.38059616]
[77.65416718 40.54022217]
[71.87109375 26.69984436]
[66.08802032 12.85946655]
[60.30494308 -0.98091084]
[54.52186966 -14.82128811]
[48.73879623 -28.66166496]
[34.02554703 -34.43192291]
[27.77855301 -48.94917297]
[33.70404434 -63.60059357]
[48.28653336 -69.69375610]
[62.87448502 -63.61368942]
[68.81312561 -48.96759415]
[62.57917023 -34.44474030]
[68.36224365 -20.60436249]
[74.14532471 -6.76398611]
[79.92839813 7.07639122]
[85.71147156 20.91676903]
[91.49454498 34.75714493]
[97.27762604 48.59752274]
[103.06069946 62.43790054]
[117.55755615 66.29031372]
[129.44844055 57.14662933]
[141.33932495 48.00294495]
[153.23020935 38.85926437]
[155.41462708 23.43635559]
[167.60392761 14.33275223]
[182.29385376 16.51031113]
[188.51710510 1.96446395]
[203.32283020 0.33974355]
[215.21371460 -8.80393887]
[212.52818298 -23.87200165]
[217.16380310 -38.45862961]
[228.05532837 -49.21191788]
[242.69998169 -53.66083908]
[257.73251343 -50.78306961]
[269.69854736 -41.23989487]
[275.84841919 -27.22426987]
[274.76889038 -11.95687866]
[266.70806885 1.05394161]
[253.51821899 8.81839943]
[238.23031616 9.55228043]
[224.35739136 3.08694315]
[212.46650696 12.23062515]
[207.09378052 26.12245560]
[191.43753052 28.40119362]
[189.76927185 43.15763474]
[177.84048462 52.60001755]
[162.37388611 50.75014496]
[150.48300171 59.89382553]
[138.59211731 69.03750610]
[126.70124054 78.18119049]
[141.52018738 75.85765076]
[156.33912659 73.53410339]
[170.52558899 68.66127777]
[185.52513123 68.54479980]
[199.78555298 73.19673920]
[211.83110046 82.13568115]
[220.41526794 94.43658447]
[224.64970398 108.82649231]
[224.09620667 123.81628418]
[218.81208801 137.85472107]
[209.34413147 149.48907471]
[196.67216492 157.51533508]
[182.10749817 161.10293579]
[167.15611267 159.88027954]
[155.44555664 150.50675964]
[143.73500061 141.13323975]
[149.51808167 154.97361755]
[155.30114746 168.81399536]
[161.08422852 182.65437317]
[175.31912231 190.05351257]
[178.26803589 205.82321167]
[167.66882324 217.86630249]
[151.65228271 216.94436646]
[142.50494385 203.76461792]
[147.24385071 188.43745422]
[141.46076965 174.59707642]
[135.67770386 160.75669861]
[129.89462280 146.91632080]
[122.44104767 146.08316040]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 23]
[3 22]
[4 21]
[5 20]
[9 16]
[10 15]
[25 37]
[26 36]
[27 35]
[28 34]
[29 33]
[45 66]
[46 65]
[47 64]
[48 63]
[49 62]
[50 61]
[51 60]
[52 59]
[67 97]
[68 96]
[69 95]
[70 94]
[73 91]
[75 89]
[76 88]
[113 125]
[114 124]
[115 123]
[116 122]
] def

init

% Start Annotations
25 37 0.0 0.2 colorpair
26 36 0.0 0.2 colorpair
27 35 0.0 0.2 colorpair
28 34 0.0 0.2 colorpair
29 33 0.0 0.2 colorpair
45 66 0.16 0.2 colorpair
46 65 0.16 0.6 colorpair
47 64 0.0 0.6 colorpair
48 63 0.0 0.6 colorpair
49 62 0.0 0.6 colorpair
50 61 0.0 0.6 colorpair
51 60 0.0 0.6 colorpair
52 59 0.0 0.6 colorpair
67 97 0.32 0.6 colorpair
68 96 0.0 0.6 colorpair
69 95 0.0 0.6 colorpair
70 94 0.0 0.6 colorpair
73 91 0.16 0.2 colorpair
75 89 0.16 0.2 colorpair
76 88 0.16 0.6 colorpair
113 125 0.16 0.6 colorpair
114 124 0.16 0.6 colorpair
115 123 0.0 0.6 colorpair
116 122 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
2 23 5 gmark
3 22 5 gmark
4 21 4 gmark
5 20 4 gmark
9 16 4 gmark
16 cmark
10 15 4 gmark
25 37 2 gmark
26 36 2 gmark
27 35 2 gmark
28 34 2 gmark
29 33 2 gmark
45 66 2 gmark
66 cmark
46 65 1 gmark
46 cmark
47 64 1 gmark
48 63 1 gmark
49 62 1 gmark
50 61 1 gmark
51 60 1 gmark
52 59 1 gmark
67 97 1 gmark
67 cmark
97 cmark
68 96 1 gmark
69 95 1 gmark
70 94 1 gmark
73 91 2 gmark
91 cmark
75 89 2 gmark
75 cmark
76 88 1 gmark
88 cmark
113 125 1 gmark
125 cmark
114 124 1 gmark
114 cmark
124 cmark
115 123 1 gmark
116 122 1 gmark

% End Annotations
showpage
end
%%EOF
