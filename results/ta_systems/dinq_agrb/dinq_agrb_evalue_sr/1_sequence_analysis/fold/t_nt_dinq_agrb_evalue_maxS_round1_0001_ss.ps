%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 24 12:48:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGUAAGCGGAUGCAUUCUCACUCCAUCGCAUGGAGAAAACGGGUGAUUGAUAAAGCAAUCAUCGUUCUUGGGGCGUUAAUUGCGCUGCUGGAACUGAUCCGCUUUCUGCUUCAGCUUCUGAACUGA\
) } def
/len { sequence length } bind def

/coor [
[156.36207581 307.39291382]
[157.56864929 298.95721436]
[161.26460266 291.24114990]
[167.12802124 284.96405029]
[161.47160339 271.07144165]
[149.50611877 262.20147705]
[151.46824646 246.50239563]
[145.81181335 232.60977173]
[140.15539551 218.71716309]
[134.49897766 204.82453918]
[128.84254456 190.93191528]
[123.18612671 177.03929138]
[117.52970886 163.14668274]
[111.87328339 149.25405884]
[106.38164520 144.19418335]
[106.25251007 134.95675659]
[100.93343353 120.93151093]
[101.92673492 135.89859009]
[92.62718201 147.66796875]
[77.83615875 150.16310120]
[65.19030762 142.09573364]
[61.21870041 127.63108063]
[67.97189331 114.23725891]
[81.96524811 108.82953644]
[67.00465393 109.91606140]
[52.04405594 111.00257874]
[37.08345795 112.08910370]
[22.12285995 113.17562866]
[7.16226292 114.26214600]
[-8.19729710 121.43991089]
[-19.34649849 108.66761017]
[-10.15974998 94.41839600]
[6.07574129 99.30155182]
[21.03633881 98.21502686]
[35.99693680 97.12850952]
[50.95753098 96.04198456]
[65.91812897 94.95545959]
[80.87873077 93.86894226]
[84.60253906 87.35869598]
[69.60266113 87.41920471]
[62.05023956 74.45922852]
[69.49761963 61.43861008]
[84.49748993 61.37782669]
[92.05015564 74.33821869]
[95.77396393 67.82797241]
[89.12609100 54.38156891]
[82.47821808 40.93516541]
[75.83034515 27.48876190]
[69.18247223 14.04235744]
[62.53459930 0.59595340]
[55.88672638 -12.85045052]
[49.23884964 -26.29685402]
[34.18974304 -31.12385559]
[27.03602219 -45.21640015]
[32.02186203 -60.21363068]
[46.18925095 -67.21795654]
[61.13293076 -62.07383728]
[67.98708344 -47.83318710]
[62.68525696 -32.94472885]
[69.33312988 -19.49832344]
[75.98100281 -6.05191994]
[82.62887573 7.39448452]
[89.27674866 20.84088898]
[95.92462158 34.28729248]
[102.57249451 47.73369598]
[109.22036743 61.18009949]
[123.97466278 63.88392639]
[134.95869446 53.66868973]
[145.94273376 43.45344925]
[156.92675781 33.23821259]
[167.91078186 23.02297401]
[172.74699402 7.95905590]
[187.33599854 4.95736456]
[192.17221069 -10.10655403]
[206.76121521 -13.10824585]
[217.74525452 -23.32348442]
[228.72927856 -33.53872299]
[239.71330261 -43.75395966]
[250.69734192 -53.96919632]
[252.71334839 -69.88507843]
[266.48825073 -78.10890961]
[281.45513916 -72.33206177]
[286.13269043 -56.98604965]
[276.93267822 -43.84301376]
[260.91256714 -42.98516846]
[249.92854309 -32.76992798]
[238.94451904 -22.55469131]
[227.96047974 -12.33945370]
[216.97645569 -2.12421584]
[212.92590332 12.20904064]
[197.55123901 15.94139481]
[193.50068665 30.27465057]
[178.12602234 34.00700378]
[167.14199829 44.22224426]
[156.15795898 54.43748093]
[145.17393494 64.65271759]
[134.18991089 74.86795807]
[114.95867920 115.61244202]
[120.27775574 129.63768005]
[125.76589966 143.59764099]
[131.42233276 157.49024963]
[137.07875061 171.38287354]
[142.73516846 185.27549744]
[148.39158630 199.16812134]
[154.04801941 213.06072998]
[159.70443726 226.95335388]
[165.36085510 240.84597778]
[177.73092651 250.70964050]
[175.36422729 265.41500854]
[181.02064514 279.30764771]
[202.40327454 285.99874878]
[212.03785706 305.93002319]
[204.19067383 326.34411621]
[211.79507446 339.27368164]
[219.39947510 352.20321655]
[227.00387573 365.13275146]
[234.60827637 378.06231689]
[247.84983826 388.64990234]
[241.34162903 404.30493164]
[224.49676514 402.38479614]
[221.67872620 385.66671753]
[214.07432556 372.73715210]
[206.46992493 359.80761719]
[198.86553955 346.87808228]
[191.26113892 333.94851685]
[182.99867249 334.90258789]
[174.79705811 333.32797241]
[167.41542053 329.34967041]
[161.54321289 323.31607056]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 110]
[5 109]
[7 107]
[8 106]
[9 105]
[10 104]
[11 103]
[12 102]
[13 101]
[14 100]
[16 99]
[17 98]
[24 38]
[25 37]
[26 36]
[27 35]
[28 34]
[29 33]
[45 66]
[46 65]
[47 64]
[48 63]
[49 62]
[50 61]
[51 60]
[52 59]
[67 97]
[68 96]
[69 95]
[70 94]
[71 93]
[73 91]
[75 89]
[76 88]
[77 87]
[78 86]
[79 85]
[113 125]
[114 124]
[115 123]
[116 122]
[117 121]
] def

init

% Start Annotations
4 110 0.0 1 colorpair
5 109 0.0 1 colorpair
7 107 0.0 1 colorpair
8 106 0.0 1 colorpair
9 105 0.0 1 colorpair
10 104 0.0 1 colorpair
11 103 0.0 1 colorpair
12 102 0.0 1 colorpair
13 101 0.0 1 colorpair
14 100 0.0 1 colorpair
16 99 0.0 1 colorpair
17 98 0.0 1 colorpair
24 38 0.0 1 colorpair
25 37 0.0 1 colorpair
26 36 0.0 1 colorpair
27 35 0.0 1 colorpair
28 34 0.0 1 colorpair
29 33 0.0 1 colorpair
45 66 0.0 1 colorpair
46 65 0.0 1 colorpair
47 64 0.0 1 colorpair
48 63 0.0 1 colorpair
49 62 0.0 1 colorpair
50 61 0.0 1 colorpair
51 60 0.0 1 colorpair
52 59 0.0 1 colorpair
67 97 0.0 1 colorpair
68 96 0.0 1 colorpair
69 95 0.0 1 colorpair
70 94 0.0 1 colorpair
71 93 0.0 1 colorpair
73 91 0.0 1 colorpair
75 89 0.16 0.6 colorpair
76 88 0.0 1 colorpair
77 87 0.0 1 colorpair
78 86 0.0 1 colorpair
79 85 0.0 1 colorpair
113 125 0.0 1 colorpair
114 124 0.0 1 colorpair
115 123 0.0 1 colorpair
116 122 0.0 1 colorpair
117 121 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
75 89 1 gmark
75 cmark

% End Annotations
showpage
end
%%EOF
