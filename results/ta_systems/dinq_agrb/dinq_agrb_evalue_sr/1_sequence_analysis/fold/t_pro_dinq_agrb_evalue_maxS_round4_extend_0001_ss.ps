%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 24 14:59:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_AUGAGUAAGCGGAUGCAUUCUCACUCCAUCGCAUGGAGAAAACGGGUGAUUGAUAAAGCAAUCAUCGUUCUUGGGGCGUUAAUUGCGCUGCUGGAACUGAUCCGCUUUCUGCUUCAGCUUCUGAAC\
) } def
/len { sequence length } bind def

/coor [
[113.01983643 281.44384766]
[100.59754181 290.20486450]
[85.76705170 293.54028320]
[70.78990936 290.94149780]
[57.95001984 282.80480957]
[49.20537186 270.37100220]
[45.88946152 255.53613281]
[48.50794220 240.56242371]
[56.66151428 227.73324585]
[69.10681152 219.00495911]
[83.94602966 215.70857239]
[86.51045990 200.92941284]
[89.07488251 186.15023804]
[91.63931274 171.37107849]
[86.19180298 157.50840759]
[96.17449188 145.23417664]
[98.73892212 130.45501709]
[93.91018677 124.71626282]
[90.95821381 139.42292786]
[77.61964417 146.28459167]
[63.93843842 140.13441467]
[60.21658325 125.60348511]
[69.25663757 113.63362885]
[84.25271606 113.23875427]
[79.42398071 107.50000000]
[64.42398071 107.50000000]
[49.42397690 107.50000000]
[34.42397690 107.50000000]
[19.42397690 107.50000000]
[4.42397690 107.50000000]
[-11.41515541 113.54634094]
[-21.60990906 100.00000000]
[-11.41515541 86.45365906]
[4.42397690 92.50000000]
[19.42397690 92.50000000]
[34.42397690 92.50000000]
[49.42397690 92.50000000]
[64.42398071 92.50000000]
[79.42398071 92.50000000]
[83.66696930 86.31558228]
[68.71225739 85.15081787]
[62.24371338 71.61723328]
[70.72995758 59.24858093]
[85.68463898 60.41366577]
[92.15294647 73.94673920]
[96.39593506 67.76232147]
[90.99750519 53.76742935]
[85.59908295 39.77253723]
[80.20065308 25.77764511]
[74.80223083 11.78275299]
[69.40380096 -2.21213889]
[64.00537872 -16.20703125]
[58.60695267 -30.20192337]
[44.05876923 -36.37653732]
[38.21530533 -51.06086349]
[44.54338455 -65.54295349]
[59.28867340 -71.23084259]
[73.70304871 -64.75000000]
[79.23471832 -49.94540024]
[72.60184479 -35.60034943]
[78.00026703 -21.60545731]
[83.39869690 -7.61056471]
[88.79711914 6.38432741]
[94.19554901 20.37921906]
[99.59397125 34.37411118]
[104.99240112 48.36900330]
[110.39082336 62.36389542]
[124.79727936 66.54168701]
[136.84539795 57.60620117]
[148.89350891 48.67071152]
[160.94161987 39.73522186]
[163.39395142 24.35264015]
[175.73974609 15.46241283]
[190.38957214 17.89513397]
[196.86486816 3.45972347]
[211.69660950 2.09275436]
[223.74472046 -6.84273529]
[235.79283142 -15.77822495]
[234.65837097 -31.16382027]
[242.04214478 -44.70942307]
[255.58802795 -52.09268570]
[270.97357178 -50.95763397]
[283.28933716 -41.66645813]
[288.60534668 -27.18393707]
[285.22534180 -12.13139439]
[274.22784424 -1.31203890]
[259.12210083 1.82171130]
[244.72833252 -3.73011184]
[232.68022156 5.20537758]
[220.63209534 14.14086723]
[215.01856995 27.93715286]
[199.32505798 29.94324684]
[197.40040588 44.66844177]
[185.30920410 53.90192795]
[169.87710571 51.78333664]
[157.82899475 60.71882629]
[145.78088379 69.65431213]
[133.73277283 78.58980560]
[146.47354126 70.67319489]
[160.82699585 66.31678772]
[175.81864929 65.81635284]
[190.43067932 69.20586395]
[203.67102051 76.25520325]
[214.64077759 86.48577118]
[222.59516907 99.20298767]
[226.99415588 113.54344940]
[227.53909302 128.53355408]
[224.19296265 143.15556335]
[217.18296814 156.41677856]
[206.98500061 167.41685486]
[194.29145813 175.40896606]
[179.96411133 179.85050964]
[164.97569275 180.43994141]
[150.34381104 177.13722229]
[137.06184387 170.16661072]
[126.03154755 160.00135803]
[118.00180054 147.33158875]
[113.51808929 133.01943970]
[110.95365906 147.79861450]
[116.21774292 162.71839905]
[106.41847992 173.93550110]
[103.85404968 188.71467590]
[101.28961945 203.49383545]
[98.72518921 218.27299500]
[111.58644104 226.37588501]
[120.36377716 238.78663635]
[123.71870422 253.61273193]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 124]
[12 123]
[13 122]
[14 121]
[16 119]
[17 118]
[25 39]
[26 38]
[27 37]
[28 36]
[29 35]
[30 34]
[46 67]
[47 66]
[48 65]
[49 64]
[50 63]
[51 62]
[52 61]
[53 60]
[68 98]
[69 97]
[70 96]
[71 95]
[74 92]
[76 90]
[77 89]
[78 88]
] def

init

% Start Annotations
11 124 0.16 1 colorpair
12 123 0.16 1 colorpair
13 122 0.16 0.2 colorpair
14 121 0.32 0.2 colorpair
16 119 0.16 1 colorpair
17 118 0.16 0.2 colorpair
25 39 0.0 1 colorpair
26 38 0.0 1 colorpair
27 37 0.0 1 colorpair
28 36 0.0 1 colorpair
29 35 0.0 1 colorpair
30 34 0.0 1 colorpair
46 67 0.16 1 colorpair
47 66 0.16 1 colorpair
48 65 0.0 1 colorpair
49 64 0.0 1 colorpair
50 63 0.0 1 colorpair
51 62 0.0 1 colorpair
52 61 0.0 1 colorpair
53 60 0.0 1 colorpair
68 98 0.32 1 colorpair
69 97 0.0 1 colorpair
70 96 0.0 1 colorpair
71 95 0.0 1 colorpair
74 92 0.16 0.6 colorpair
76 90 0.16 0.6 colorpair
77 89 0.16 1 colorpair
78 88 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
11 cmark
12 cmark
13 122 2 gmark
13 cmark
122 cmark
14 121 2 gmark
14 cmark
121 cmark
119 cmark
17 118 2 gmark
17 cmark
67 cmark
47 cmark
68 cmark
98 cmark
74 92 1 gmark
92 cmark
76 90 1 gmark
76 cmark
89 cmark
78 88 2 gmark

% End Annotations
showpage
end
%%EOF
