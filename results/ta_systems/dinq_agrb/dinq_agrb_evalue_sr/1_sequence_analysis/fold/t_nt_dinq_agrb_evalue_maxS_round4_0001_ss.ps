%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 24 14:58:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGUAAGCGGAUG_CAUUCUCACUCCAUCGCAUGGAGAAAACGGGUGAUUGAUAAAGCAAUCAUCGUUCUUGGGGCGUUAAUUGCGCUGCUGGAACUGAUCCGCUUUCUGCUUCAGCUUCUGAACUGA\
) } def
/len { sequence length } bind def

/coor [
[182.08186340 389.91320801]
[167.08235168 389.79159546]
[152.17155457 388.15820312]
[137.50143433 385.02966309]
[123.22153473 380.43789673]
[109.47740173 374.42965698]
[96.40913391 367.06622314]
[84.14992523 358.42260742]
[72.82473755 348.58697510]
[62.54899597 337.65951538]
[53.42744827 325.75164795]
[45.55306625 312.98474121]
[39.00611115 299.48889160]
[33.85331726 285.40173340]
[30.14720154 270.86676025]
[27.92554283 256.03219604]
[27.21098518 241.04924011]
[28.01081085 226.07057190]
[30.31686974 211.24890137]
[34.10565567 196.73527527]
[39.33854675 182.67765808]
[45.96221161 169.21931458]
[53.90913391 156.49742126]
[63.09830856 144.64166260]
[73.44107056 133.76814270]
[58.45077133 134.30760193]
[43.46047592 134.84707642]
[28.47018051 135.38655090]
[13.47988415 135.92601013]
[-1.51041174 136.46548462]
[-17.12184334 143.07756042]
[-27.79719162 129.90663147]
[-18.09622192 116.00241089]
[-2.04988194 121.47518921]
[12.94041443 120.93572235]
[27.93070984 120.39624786]
[42.92100525 119.85678101]
[57.91130066 119.31730652]
[72.90159607 118.77783966]
[76.83183289 112.39009857]
[61.83769989 111.97056580]
[54.70387650 98.77554321]
[62.56410980 85.99991608]
[77.55825043 86.41916656]
[84.69229889 99.61460876]
[88.62253571 93.22686768]
[82.34672546 79.60283661]
[76.07091522 65.97881317]
[69.79509735 52.35478210]
[63.51928711 38.73075104]
[57.24347687 25.10672188]
[50.96766281 11.48269176]
[44.69185257 -2.14133763]
[29.78108978 -7.38011217]
[23.01737785 -21.66394043]
[28.41350555 -36.51847839]
[42.76804352 -43.13079834]
[57.56470490 -37.57791901]
[64.02488708 -23.15427208]
[58.31587982 -8.41714954]
[64.59169006 5.20687962]
[70.86750793 18.83090973]
[77.14331818 32.45493698]
[83.41912842 46.07896805]
[89.69493866 59.70299911]
[95.97075653 73.32702637]
[102.24656677 86.95105743]
[116.93600464 89.98757935]
[128.09921265 79.96846008]
[139.26240540 69.94933319]
[150.42561340 59.93021011]
[151.43411255 44.38605499]
[162.89791870 34.38426208]
[177.71067810 35.44150543]
[182.81288147 20.46559143]
[197.45275879 17.72272110]
[208.61596680 7.70359659]
[204.79545593 -7.11741018]
[208.31150818 -22.01358223]
[218.35617065 -33.56188965]
[232.62124634 -39.10861588]
[247.82872009 -37.37916183]
[260.48403931 -28.77094269]
[267.67910767 -15.26206875]
[267.76052856 0.04322326]
[260.70962524 13.62788773]
[248.14660645 22.37026978]
[232.95837402 24.26143265]
[218.63508606 18.86680222]
[207.47189331 28.88592529]
[203.16813660 43.14520645]
[187.72979736 46.60470963]
[187.18544006 61.44517136]
[176.00709534 71.76501465]
[160.44474792 71.09341431]
[149.28153992 81.11254120]
[138.11833191 91.13166046]
[126.95512390 101.15078735]
[141.35266113 96.94237518]
[156.10116577 94.20711517]
[171.05030823 92.97290039]
[186.04771423 93.25231171]
[200.94050598 95.04249573]
[215.57688904 98.32520294]
[229.80767822 103.06697845]
[243.48783875 109.21948242]
[256.47790527 116.72001648]
[268.64550781 125.49211884]
[279.86657715 135.44638062]
[290.02676392 146.48133850]
[299.02252197 158.48452759]
[306.76214600 171.33358765]
[313.16674805 184.89755249]
[318.17105103 199.03816223]
[321.72402954 213.61129761]
[323.78948975 228.46841431]
[324.34634399 243.45808411]
[323.38897705 258.42749023]
[320.92709351 273.22409058]
[316.98583984 287.69705200]
[311.60531616 301.69882202]
[304.84042358 315.08673096]
[296.76010132 327.72430420]
[287.44668579 339.48272705]
[276.99511719 350.24215698]
[265.51196289 359.89288330]
[253.11422729 368.33660889]
[239.92829895 375.48721313]
[226.08856201 381.27182007]
[211.73609924 385.63150024]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 39]
[26 38]
[27 37]
[28 36]
[29 35]
[30 34]
[46 67]
[47 66]
[48 65]
[49 64]
[50 63]
[51 62]
[52 61]
[53 60]
[68 98]
[69 97]
[70 96]
[71 95]
[74 92]
[76 90]
[77 89]
] def

init

% Start Annotations
25 39 0.0 0.6 colorpair
26 38 0.0 0.6 colorpair
27 37 0.0 0.6 colorpair
28 36 0.0 0.6 colorpair
29 35 0.16 0.6 colorpair
30 34 0.0 0.2 colorpair
46 67 0.16 1 colorpair
47 66 0.16 1 colorpair
48 65 0.0 1 colorpair
49 64 0.0 1 colorpair
50 63 0.0 1 colorpair
51 62 0.0 1 colorpair
52 61 0.0 1 colorpair
53 60 0.0 1 colorpair
68 98 0.32 0.6 colorpair
69 97 0.16 0.6 colorpair
70 96 0.0 0.6 colorpair
71 95 0.0 0.6 colorpair
74 92 0.16 0.2 colorpair
76 90 0.16 0.2 colorpair
77 89 0.16 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
25 39 1 gmark
26 38 1 gmark
27 37 1 gmark
28 36 1 gmark
29 35 1 gmark
29 cmark
30 34 2 gmark
67 cmark
47 cmark
68 98 1 gmark
68 cmark
98 cmark
69 97 1 gmark
97 cmark
70 96 1 gmark
71 95 1 gmark
74 92 2 gmark
92 cmark
76 90 2 gmark
76 cmark
77 89 2 gmark
89 cmark

% End Annotations
showpage
end
%%EOF
