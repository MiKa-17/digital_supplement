%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 24 14:19:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_AUGAGUAAGCGGAUGCAUUCUCACUCCAUCGCAUGGAGAAAACGGGUGAUUGAUAAAGCAAUCAUCGUUCUUGGGGCGUUAAUUGCGCUGCUGGAACUGAUCCGCUUUCUGCUUCAGCUUCUGAACUGA\
) } def
/len { sequence length } bind def

/coor [
[93.47118378 324.62445068]
[79.06000519 318.55389404]
[71.96852875 304.61669922]
[75.54512787 289.39364624]
[88.10104370 280.07254028]
[88.82022095 265.08978271]
[89.53939056 250.10704041]
[81.93851471 243.09759521]
[79.45082855 232.83444214]
[83.14987946 222.70771790]
[92.02302551 216.20300293]
[93.45971680 201.27195740]
[94.89640808 186.34092712]
[96.33309937 171.40988159]
[89.85037994 158.00004578]
[98.87388611 145.00439453]
[100.31057739 130.07336426]
[95.16860962 124.61348724]
[93.04331207 139.46215820]
[80.10913849 147.05868530]
[66.10554504 141.68284607]
[61.57727814 127.38268280]
[69.93412781 114.92623901]
[84.88468170 113.69374847]
[79.74271393 108.23387146]
[64.75241852 108.77334595]
[49.76212311 109.31281281]
[34.77182770 109.85228729]
[19.78153229 110.39175415]
[4.79123688 110.93122101]
[-10.82019329 117.54330444]
[-21.49554253 104.37237549]
[-11.79457283 90.46814728]
[4.25176716 95.94092560]
[19.24206352 95.40145874]
[34.23235703 94.86198425]
[49.22265625 94.32251740]
[64.21295166 93.78305054]
[79.20324707 93.24357605]
[83.13348389 86.85583496]
[68.13935089 86.43630219]
[61.00552750 73.24127960]
[68.86576080 60.46565247]
[83.85990143 60.88490677]
[90.99394989 74.08035278]
[94.92418671 67.69260406]
[88.64837646 54.06857681]
[82.37255859 40.44454956]
[76.09674835 26.82051849]
[69.82093811 13.19648933]
[63.54512405 -0.42754033]
[57.26931000 -14.05156994]
[50.99349976 -27.67560005]
[36.08273697 -32.91437531]
[29.31902695 -47.19820023]
[34.71515274 -62.05274200]
[49.06969452 -68.66506195]
[63.86635208 -63.11218262]
[70.32653809 -48.68853378]
[64.61753082 -33.95141220]
[70.89334106 -20.32738304]
[77.16915131 -6.70335245]
[83.44496918 6.92067671]
[89.72077942 20.54470634]
[95.99658966 34.16873550]
[102.27239990 47.79276657]
[108.54821777 61.41679382]
[123.23764801 64.45332336]
[134.40084839 54.43419647]
[145.56405640 44.41507339]
[156.72726440 34.39594650]
[157.73576355 18.85179520]
[169.19956970 8.85000134]
[184.01232910 9.90724373]
[189.11453247 -5.06867075]
[203.75440979 -7.81154060]
[214.91761780 -17.83066559]
[226.08082581 -27.84979057]
[223.51783752 -43.06276703]
[229.60748291 -57.23738480]
[242.40655518 -65.85057831]
[257.83093262 -66.15390778]
[270.95877075 -58.05057907]
[277.60098267 -44.12633896]
[275.63809204 -28.82435799]
[265.69644165 -17.02744484]
[250.94836426 -12.49995232]
[236.09994507 -16.68658447]
[224.93673706 -6.66746044]
[213.77354431 3.35166407]
[209.46978760 17.61094284]
[194.03144836 21.07044792]
[193.48709106 35.91090775]
[182.30874634 46.23075104]
[166.74638367 45.55915070]
[155.58319092 55.57827759]
[144.41998291 65.59740448]
[133.25677490 75.61652374]
[145.68238831 67.21389771]
[159.85427856 62.29885864]
[174.81423950 61.20372772]
[189.55081177 64.00254822]
[203.06761169 70.50609589]
[214.45074463 80.27463531]
[222.93055725 92.64769745]
[227.93373108 106.78871918]
[229.12196350 121.74157715]
[226.41491699 136.49528503]
[219.99565125 150.05230713]
[210.29815674 161.49603271]
[197.97811890 170.05270386]
[183.86851501 175.14379883]
[168.92333984 176.42507935]
[154.15306091 173.80993652]
[140.55635071 167.47518921]
[129.05249023 157.84912109]
[120.41928864 145.58258057]
[115.24161530 131.51005554]
[113.80492401 146.44108582]
[120.18487549 160.91888428]
[111.26413727 172.84657288]
[109.82744598 187.77761841]
[108.39075470 202.70864868]
[106.95406342 217.63969421]
[116.19266510 235.48240662]
[104.52214050 250.82620239]
[103.80297089 265.80895996]
[103.08379364 280.79171753]
[114.68922424 291.27255249]
[116.79132080 306.76818848]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 128]
[6 127]
[7 126]
[11 124]
[12 123]
[13 122]
[14 121]
[16 119]
[17 118]
[25 39]
[26 38]
[27 37]
[28 36]
[29 35]
[30 34]
[46 67]
[47 66]
[48 65]
[49 64]
[50 63]
[51 62]
[52 61]
[53 60]
[68 98]
[69 97]
[70 96]
[71 95]
[74 92]
[76 90]
[77 89]
[78 88]
] def

init

% Start Annotations
5 128 0.0 1 colorpair
6 127 0.0 1 colorpair
7 126 0.16 1 colorpair
11 124 0.16 1 colorpair
12 123 0.16 1 colorpair
13 122 0.16 0.2 colorpair
16 119 0.16 1 colorpair
17 118 0.16 0.2 colorpair
25 39 0.0 1 colorpair
26 38 0.0 1 colorpair
27 37 0.0 1 colorpair
28 36 0.0 1 colorpair
29 35 0.0 1 colorpair
30 34 0.0 1 colorpair
46 67 0.16 1 colorpair
47 66 0.16 1 colorpair
48 65 0.0 1 colorpair
49 64 0.0 1 colorpair
50 63 0.0 1 colorpair
51 62 0.0 1 colorpair
52 61 0.0 1 colorpair
53 60 0.0 1 colorpair
68 98 0.32 1 colorpair
69 97 0.0 1 colorpair
70 96 0.0 1 colorpair
71 95 0.0 1 colorpair
74 92 0.16 0.6 colorpair
76 90 0.16 0.6 colorpair
77 89 0.16 1 colorpair
78 88 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
126 cmark
11 cmark
12 cmark
13 122 2 gmark
13 cmark
122 cmark
14 121 3 gmark
14 cmark
121 cmark
119 cmark
17 118 2 gmark
17 cmark
67 cmark
47 cmark
68 cmark
98 cmark
74 92 1 gmark
92 cmark
76 90 1 gmark
76 cmark
89 cmark
78 88 2 gmark

% End Annotations
showpage
end
%%EOF
