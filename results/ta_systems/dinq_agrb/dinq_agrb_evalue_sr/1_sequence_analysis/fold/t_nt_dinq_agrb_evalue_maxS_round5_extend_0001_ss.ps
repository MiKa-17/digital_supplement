%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 24 15:43:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_AUGAGUAAGCGGAUG_CAUUCUCACUCCAUCGCAUGGAGAAAACGGGUGAUUGAUAAAGCAAUCAUCGUUCUUGGGGCGUUAAUUGCGCUGCUGGAACUGAUCCGCUUUCUGCUUCAGCUUCUGAACUGA__\
) } def
/len { sequence length } bind def

/coor [
[112.35007477 220.88586426]
[112.94921875 213.69895935]
[115.22900391 206.83757019]
[119.06952667 200.69003296]
[124.26231384 195.60635376]
[118.44093323 181.78204346]
[104.59301758 176.41821289]
[98.49237823 162.48132324]
[104.21234894 147.99272156]
[98.39096832 134.16841125]
[92.56959534 120.34410095]
[91.05060577 135.26699829]
[95.29643250 149.65354919]
[93.52482605 164.54855347]
[86.02294159 177.53785706]
[74.00667572 186.51612854]
[59.42362595 190.02818298]
[44.63739777 187.50479126]
[32.04454803 179.35493469]
[23.68611526 166.89955139]
[20.91683578 152.15739441]
[24.18555069 137.51788330]
[32.96247101 125.35376740]
[45.82503128 117.63660431]
[60.68883896 115.61723328]
[73.68037415 108.11923218]
[58.68449783 108.47087097]
[43.68861771 108.82250977]
[28.69274139 109.17414856]
[13.69686317 109.52578735]
[-1.29901433 109.87742615]
[-16.99205208 116.29341125]
[-27.50156593 102.98978424]
[-17.62717438 89.20817566]
[-1.65065289 94.88154602]
[13.34522533 94.52990723]
[28.34110260 94.17826843]
[43.33697891 93.82662964]
[58.33285904 93.47499084]
[73.32873535 93.12335205]
[77.25496674 86.73314667]
[62.26058197 86.32280731]
[55.11885071 73.13206482]
[62.97159576 60.35183334]
[77.96597290 60.76250076]
[85.10743713 73.95274353]
[89.03366852 67.56253815]
[82.57070923 54.02628708]
[76.10775757 40.49003220]
[69.64479828 26.95377541]
[63.18184280 13.41752052]
[56.71888733 -0.11873399]
[50.25593185 -13.65498924]
[43.79297256 -27.19124413]
[28.81143761 -32.22404861]
[21.85153580 -46.41331863]
[27.04245567 -61.34080505]
[41.30451584 -68.15029907]
[56.17628479 -62.80184937]
[62.83461380 -48.46859360]
[57.32922745 -33.65420151]
[63.79218674 -20.11794472]
[70.25514221 -6.58169031]
[76.71809387 6.95456457]
[83.18105316 20.49081993]
[89.64401245 34.02707291]
[96.10696411 47.56332779]
[102.56992340 61.09958267]
[117.33863068 63.72354507]
[128.06883240 53.24200439]
[138.79904175 42.76046371]
[149.52925110 32.27892303]
[149.88050842 16.70604897]
[160.91177368 6.22913074]
[175.75596619 6.65997982]
[180.22129822 -8.51801300]
[194.73229980 -11.87658691]
[205.46249390 -22.35812950]
[201.01959229 -37.00460052]
[203.90353394 -52.03594971]
[213.45162964 -63.99808121]
[227.46978760 -70.14218140]
[242.73672485 -69.05638885]
[255.74423218 -60.99020386]
[263.50326538 -47.79718018]
[264.23086548 -32.50897598]
[257.75982666 -18.63870811]
[245.57716370 -9.37366676]
[230.48233032 -6.84288645]
[215.94404602 -11.62792397]
[205.21383667 -1.14638257]
[201.51600647 13.28190041]
[186.23751831 17.39018440]
[186.32025146 32.24039459]
[175.58761597 43.02302551]
[160.01078796 43.00912476]
[149.28057861 53.49066544]
[138.55038452 63.97220993]
[127.82017517 74.45375061]
[130.86064148 84.26377869]
[130.88238525 93.73090363]
[128.31190491 102.01326752]
[123.78974152 108.47583008]
[118.09043884 112.73896790]
[112.03347778 114.69945526]
[106.39390564 114.52272034]
[112.21527863 128.34703064]
[118.03665924 142.17134094]
[132.39797974 148.20378113]
[138.10475159 162.30651855]
[132.26524353 175.96066284]
[138.08662415 189.78497314]
[161.30682373 196.08555603]
[172.64161682 217.03077698]
[165.36642456 239.45121765]
[173.95405579 251.74969482]
[182.54168701 264.04815674]
[191.12933350 276.34664917]
[206.60990906 280.55746460]
[212.83720398 295.34262085]
[205.03414917 309.36016846]
[189.18659973 311.85708618]
[177.45141602 300.91790771]
[178.83085632 284.93426514]
[170.24320984 272.63580322]
[161.65557861 260.33734131]
[153.06794739 248.03884888]
[146.21743774 249.76582336]
[139.13455200 249.83193970]
[132.21720886 248.22482300]
[125.85609436 245.02636719]
[120.41258240 240.40858459]
[116.19815063 234.62437439]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 112]
[6 111]
[9 108]
[10 107]
[11 106]
[26 40]
[27 39]
[28 38]
[29 37]
[30 36]
[31 35]
[47 68]
[48 67]
[49 66]
[50 65]
[51 64]
[52 63]
[53 62]
[54 61]
[69 99]
[70 98]
[71 97]
[72 96]
[75 93]
[77 91]
[78 90]
[115 127]
[116 126]
[117 125]
[118 124]
] def

init

% Start Annotations
5 112 0.0 0.6 colorpair
6 111 0.0 0.6 colorpair
9 108 0.0 0.6 colorpair
10 107 0.16 0.2 colorpair
11 106 0.32 1 colorpair
26 40 0.0 1 colorpair
27 39 0.0 1 colorpair
28 38 0.0 1 colorpair
29 37 0.0 1 colorpair
30 36 0.16 1 colorpair
31 35 0.0 0.6 colorpair
47 68 0.16 1 colorpair
48 67 0.16 1 colorpair
49 66 0.0 0.6 colorpair
50 65 0.0 1 colorpair
51 64 0.0 0.6 colorpair
52 63 0.0 1 colorpair
53 62 0.0 1 colorpair
54 61 0.0 1 colorpair
69 99 0.32 0.6 colorpair
70 98 0.32 0.6 colorpair
71 97 0.0 0.6 colorpair
72 96 0.0 1 colorpair
75 93 0.16 0.6 colorpair
77 91 0.32 0.6 colorpair
78 90 0.16 0.6 colorpair
115 127 0.16 1 colorpair
117 125 0.16 1 colorpair
118 124 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
5 112 1 gmark
6 111 1 gmark
9 108 1 gmark
10 107 2 gmark
107 cmark
11 cmark
106 cmark
30 cmark
31 35 1 gmark
68 cmark
48 cmark
49 66 1 gmark
51 64 1 gmark
69 99 1 gmark
69 cmark
99 cmark
70 98 1 gmark
70 cmark
98 cmark
71 97 1 gmark
75 93 1 gmark
93 cmark
77 91 1 gmark
77 cmark
91 cmark
78 90 1 gmark
90 cmark
127 cmark
116 126 8 gmark
116 cmark
126 cmark
117 cmark
125 cmark
118 124 1 gmark

% End Annotations
showpage
end
%%EOF
