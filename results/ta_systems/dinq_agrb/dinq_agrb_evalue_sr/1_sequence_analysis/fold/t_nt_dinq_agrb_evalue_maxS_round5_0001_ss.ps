%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 24 15:43:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGUAAGCGGAUG_CAUUCUCACUCCAUCGCAUGGAGAAAACGGGUGAUUGAUAAAGCAAUCAUCGUUCUUGGGGCGUUAAUUGCGCUGCUGGAACUGAUCCGCUUUCUGCUUCAGCUUCUGAACUGA\
) } def
/len { sequence length } bind def

/coor [
[95.23664093 230.72242737]
[101.57334900 217.03677368]
[111.11508942 205.35748291]
[123.26207733 196.41871643]
[117.64668274 182.50946045]
[103.87995911 176.94052124]
[97.98701477 162.91456604]
[103.92156219 148.51251221]
[98.30616760 134.60325623]
[92.69077301 120.69400787]
[90.95029449 135.59268188]
[95.24138641 149.96580505]
[93.50602722 164.86508179]
[86.02645874 177.86724854]
[74.01919556 186.85754395]
[59.43714905 190.37377930]
[44.65200806 187.84403992]
[32.06848907 179.67977905]
[23.73323822 167.20887756]
[21.00193405 152.45964050]
[24.31880569 137.83096313]
[33.14438629 125.70210266]
[46.04323959 118.04576111]
[60.91920471 116.10733032]
[73.81578827 108.44717407]
[58.82549667 108.98664093]
[43.83520126 109.52611542]
[28.84490395 110.06558228]
[13.85460758 110.60504913]
[-1.13568807 111.14452362]
[-16.74711800 117.75659943]
[-27.42246819 104.58567810]
[-17.72149849 90.68144989]
[-1.67515826 96.15422821]
[13.31513786 95.61475372]
[28.30543327 95.07528687]
[43.29573059 94.53581238]
[58.28602600 93.99634552]
[73.27632141 93.45687866]
[77.20655823 87.06912994]
[62.21242523 86.64960480]
[55.07860184 73.45458221]
[62.93883514 60.67895126]
[77.93297577 61.09820557]
[85.06702423 74.29364777]
[88.99726105 67.90590668]
[82.72145081 54.28187561]
[76.44563293 40.65784454]
[70.16982269 27.03381729]
[63.89401245 13.40978718]
[57.61819839 -0.21424238]
[51.34238815 -13.83827209]
[45.06657410 -27.46230125]
[30.15581322 -32.70107651]
[23.39210129 -46.98490524]
[28.78822899 -61.83944321]
[43.14276886 -68.45175934]
[57.93942642 -62.89888382]
[64.39961243 -48.47523880]
[58.69060516 -33.73811340]
[64.96641541 -20.11408424]
[71.24222565 -6.49005461]
[77.51804352 7.13397503]
[83.79385376 20.75800514]
[90.06966400 34.38203430]
[96.34547424 48.00606155]
[102.62129211 61.63009262]
[117.31072235 64.66661835]
[128.47392273 54.64749527]
[139.63713074 44.62836838]
[150.80033875 34.60924530]
[151.80883789 19.06509209]
[163.27264404 9.06329918]
[178.08540344 10.12054157]
[183.18760681 -4.85537291]
[197.82748413 -7.59824276]
[208.99069214 -17.61736679]
[205.17018127 -32.43837357]
[208.68623352 -47.33454514]
[218.73089600 -58.88285446]
[232.99597168 -64.42958069]
[248.20344543 -62.70012283]
[260.85876465 -54.09190750]
[268.05383301 -40.58303070]
[268.13525391 -25.27774048]
[261.08435059 -11.69307613]
[248.52133179 -2.95069408]
[233.33309937 -1.05953121]
[219.00981140 -6.45416212]
[207.84661865 3.56496215]
[203.54286194 17.82424164]
[188.10452271 21.28374672]
[187.56016541 36.12420654]
[176.38182068 46.44404602]
[160.81945801 45.77244949]
[149.65626526 55.79157639]
[138.49305725 65.81069946]
[127.32984924 75.82982635]
[130.19975281 85.21703339]
[130.23075867 94.30153656]
[127.80736542 102.30191040]
[123.51071167 108.62198639]
[118.04756927 112.89527130]
[112.17094421 115.00495148]
[106.60002899 115.07861328]
[112.21542358 128.98786926]
[117.83081818 142.89712524]
[132.10095215 149.14221191]
[137.59761047 163.32817078]
[131.55593872 176.89407349]
[137.17132568 190.80331421]
[152.11959839 188.80329895]
[167.09552002 190.58441162]
[181.15771484 196.03468323]
[193.42221069 204.81153870]
[203.11804199 216.36323547]
[209.63574219 229.96360779]
[212.56558228 244.75776672]
[211.72340393 259.81570435]
[207.16212463 274.19088745]
[199.16850281 286.97964478]
[188.24501038 297.37811279]
[175.07829285 304.73260498]
[160.49604797 308.58081055]
[145.41490173 308.68084717]
[130.78289795 305.02642822]
[117.51977539 297.84722900]
[106.45930481 287.59460449]
[98.29673004 274.91299438]
[93.54517365 260.59957886]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 111]
[5 110]
[8 107]
[9 106]
[10 105]
[25 39]
[26 38]
[27 37]
[28 36]
[29 35]
[30 34]
[46 67]
[47 66]
[48 65]
[49 64]
[50 63]
[51 62]
[52 61]
[53 60]
[68 98]
[69 97]
[70 96]
[71 95]
[74 92]
[76 90]
[77 89]
] def

init

% Start Annotations
4 111 0.0 0.2 colorpair
5 110 0.0 0.2 colorpair
8 107 0.0 0.2 colorpair
10 105 0.16 0.2 colorpair
25 39 0.0 1 colorpair
26 38 0.0 1 colorpair
27 37 0.0 1 colorpair
28 36 0.0 1 colorpair
29 35 0.16 1 colorpair
30 34 0.0 0.6 colorpair
46 67 0.16 1 colorpair
47 66 0.16 1 colorpair
48 65 0.0 0.6 colorpair
49 64 0.0 1 colorpair
50 63 0.0 0.6 colorpair
51 62 0.0 1 colorpair
52 61 0.0 1 colorpair
53 60 0.0 1 colorpair
68 98 0.32 0.6 colorpair
69 97 0.32 0.6 colorpair
70 96 0.0 0.6 colorpair
71 95 0.0 0.6 colorpair
74 92 0.16 0.2 colorpair
76 90 0.16 0.2 colorpair
77 89 0.16 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
4 111 2 gmark
5 110 2 gmark
8 107 2 gmark
9 106 3 gmark
106 cmark
10 105 2 gmark
10 cmark
29 cmark
30 34 1 gmark
67 cmark
47 cmark
48 65 1 gmark
50 63 1 gmark
68 98 1 gmark
68 cmark
98 cmark
69 97 1 gmark
69 cmark
97 cmark
70 96 1 gmark
71 95 1 gmark
74 92 2 gmark
92 cmark
76 90 2 gmark
76 cmark
77 89 2 gmark
89 cmark

% End Annotations
showpage
end
%%EOF
