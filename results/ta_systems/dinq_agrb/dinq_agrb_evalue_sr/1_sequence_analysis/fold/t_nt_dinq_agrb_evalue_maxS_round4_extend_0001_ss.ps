%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 24 14:59:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_AUGAGUAAGCGGAUG_CAUUCUCACUCCAUCGCAUGGAGAAAACGGGUGAUUGAUAAAGCAAUCAUCGUUCUUGGGGCGUUAAUUGCGCUGCUGGAACUGAUCCGCUUUCUGCUUCAGCUUCUGAACUGA\
) } def
/len { sequence length } bind def

/coor [
[82.00370789 290.43023682]
[67.59031677 284.36489868]
[60.49377441 270.43029785]
[64.06484222 255.20591736]
[76.61737823 245.88026428]
[77.33110809 230.89724731]
[78.04483795 215.91424561]
[70.44296265 208.90945435]
[67.95072174 198.64993286]
[71.64280701 188.52330017]
[80.50933838 182.01377869]
[81.93518066 167.08169556]
[83.36101532 152.14961243]
[84.78685760 137.21754456]
[79.74190521 131.66790771]
[71.33179474 144.08845520]
[62.92168045 156.50900269]
[56.11995697 169.87823486]
[41.91432571 174.69487000]
[28.38399506 168.21952820]
[23.22412109 154.13493347]
[29.36929131 140.45147705]
[43.32452393 134.95140076]
[56.48826218 127.76001740]
[69.65200043 120.56863403]
[64.60704803 115.01899719]
[49.60704803 115.01899719]
[34.60704803 115.01899719]
[19.60704803 115.01899719]
[4.60704708 115.01899719]
[-10.39295292 115.01899719]
[-26.23208427 121.06533813]
[-36.42683792 107.51899719]
[-26.23208427 93.97265625]
[-10.39295292 100.01899719]
[4.60704708 100.01899719]
[19.60704803 100.01899719]
[34.60704803 100.01899719]
[49.60704803 100.01899719]
[64.60704803 100.01899719]
[68.73664856 93.75829315]
[53.76318359 92.86641693]
[47.04875946 79.45311737]
[55.30772781 66.93155670]
[70.28120422 67.82315826]
[76.99584198 81.23688507]
[81.12544250 74.97618103]
[75.22068787 61.18727875]
[69.31593323 47.39837265]
[63.41118240 33.60947037]
[57.50643158 19.82056427]
[51.60167694 6.03166056]
[45.69692230 -7.75724411]
[39.79217148 -21.54614830]
[25.02866936 -27.18659210]
[18.65405464 -41.64825821]
[24.45026970 -56.35129929]
[38.97852707 -62.57266235]
[53.61946487 -56.62131882]
[59.68687820 -42.02810287]
[53.58107376 -27.45090294]
[59.48582840 -13.66199780]
[65.39057922 0.12690713]
[71.29533386 13.91581154]
[77.20008850 27.70471573]
[83.10484314 41.49362183]
[89.00959778 55.28252411]
[94.91434479 69.07142639]
[109.53256989 72.43409729]
[120.86881256 62.61118698]
[132.20506287 52.78827667]
[143.54130554 42.96536636]
[144.82073975 27.44116592]
[156.45722961 17.64082718]
[171.24929810 18.95624733]
[176.61192322 4.07159472]
[191.29740906 1.58446562]
[202.63365173 -8.23844528]
[213.96989441 -18.06135559]
[211.67262268 -33.31671906]
[218.00854492 -47.38297653]
[230.95588684 -55.77164078]
[246.38320923 -55.80591583]
[259.36770630 -47.47486877]
[265.76608276 -33.43690109]
[263.53662109 -18.17148399]
[253.39073181 -6.54974985]
[238.56594849 -2.28015590]
[223.79280090 -6.72511292]
[212.45655823 3.09779811]
[201.12031555 12.92070961]
[196.56854248 27.10276031]
[181.07221985 30.29249001]
[180.26911926 45.12120056]
[168.91247559 55.24451828]
[153.36421204 54.30160904]
[142.02796936 64.12451935]
[130.69172668 73.94743347]
[119.35548401 83.77033997]
[119.53396606 91.26821899]
[132.34223938 83.46129608]
[145.50732422 90.65022278]
[145.86395264 105.64598083]
[133.05551147 113.45262909]
[119.89093018 106.26396942]
[120.06941223 113.76184845]
[131.86021423 123.03423309]
[143.65100098 132.30661011]
[158.19592285 127.16375732]
[173.20706177 130.72312927]
[183.89443970 141.84893799]
[186.84773254 156.99098206]
[181.12457275 171.31748962]
[168.55119324 180.25692749]
[153.13970947 180.95675659]
[139.80787659 173.19364929]
[132.80982971 159.44480896]
[134.37861633 144.09741211]
[122.58782196 134.82502747]
[110.79702759 125.55264282]
[106.47245026 132.55508423]
[99.71894073 138.64338684]
[98.29309845 153.57545471]
[96.86725616 168.50753784]
[95.44141388 183.43962097]
[104.69183350 201.27770996]
[93.02784729 216.62797546]
[92.31411743 231.61097717]
[91.60038757 246.59399414]
[103.20962524 257.07061768]
[105.31735229 272.56549072]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 129]
[6 128]
[7 127]
[11 125]
[12 124]
[13 123]
[14 122]
[26 40]
[27 39]
[28 38]
[29 37]
[30 36]
[31 35]
[47 68]
[48 67]
[49 66]
[50 65]
[51 64]
[52 63]
[53 62]
[54 61]
[69 99]
[70 98]
[71 97]
[72 96]
[75 93]
[77 91]
[78 90]
[79 89]
[106 120]
[107 119]
[108 118]
] def

init

% Start Annotations
5 129 0.0 1 colorpair
6 128 0.0 1 colorpair
7 127 0.16 1 colorpair
11 125 0.16 1 colorpair
12 124 0.16 1 colorpair
13 123 0.32 0.2 colorpair
26 40 0.0 1 colorpair
27 39 0.0 1 colorpair
28 38 0.0 1 colorpair
29 37 0.0 1 colorpair
30 36 0.16 1 colorpair
31 35 0.0 0.6 colorpair
47 68 0.16 1 colorpair
48 67 0.16 1 colorpair
49 66 0.0 1 colorpair
50 65 0.0 1 colorpair
51 64 0.0 1 colorpair
52 63 0.0 1 colorpair
53 62 0.0 1 colorpair
54 61 0.0 1 colorpair
69 99 0.32 1 colorpair
70 98 0.16 1 colorpair
71 97 0.0 1 colorpair
72 96 0.0 1 colorpair
75 93 0.16 0.6 colorpair
77 91 0.16 0.6 colorpair
78 90 0.16 0.6 colorpair
79 89 0.0 0.2 colorpair
106 120 0.16 1 colorpair
108 118 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
127 cmark
11 cmark
12 cmark
13 123 2 gmark
13 cmark
123 cmark
14 122 4 gmark
14 cmark
122 cmark
30 cmark
31 35 1 gmark
68 cmark
48 cmark
69 cmark
99 cmark
98 cmark
75 93 1 gmark
93 cmark
77 91 1 gmark
77 cmark
78 90 1 gmark
90 cmark
79 89 2 gmark
120 cmark
107 119 3 gmark
107 cmark

% End Annotations
showpage
end
%%EOF
