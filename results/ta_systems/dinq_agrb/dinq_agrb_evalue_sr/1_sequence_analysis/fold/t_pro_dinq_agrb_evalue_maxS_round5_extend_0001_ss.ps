%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 24 15:43:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_AUGAGUAAGCGGAUGCAUUCUCACUCCAU_CGCAUGGAGAAAACGG_GUGAUUGAUAAAGCAAUCAUCGUUCUUGGGGCGUUAAUUGCGCUGCUGGAACUGAUCCGCUUCCUGCUUCAGCUUCUGAAC\
) } def
/len { sequence length } bind def

/coor [
[110.74951172 262.26165771]
[98.35041809 271.05545044]
[83.52879333 274.43008423]
[68.54483795 271.87088013]
[55.68348312 263.76815796]
[46.90600204 251.35751343]
[43.55089569 236.53146362]
[46.12978745 221.55088806]
[54.24942017 208.70021057]
[66.67160797 199.93905640]
[81.50205231 196.60345459]
[84.02741241 181.81756592]
[86.55276489 167.03167725]
[89.07812500 152.24578857]
[83.59398651 138.39755249]
[93.54420471 126.09699249]
[96.06955719 111.31109619]
[85.95480347 119.94183350]
[71.33267212 123.08776093]
[56.40269852 124.53546906]
[41.47272110 125.98318481]
[26.54274750 127.43089294]
[11.61277390 128.87860107]
[7.21169281 143.42848206]
[-2.42623949 155.18342590]
[-15.83130741 162.35089111]
[-30.95933723 163.83789062]
[-45.50341034 159.41767883]
[-57.24566650 149.76428223]
[-64.39549255 136.34980774]
[-65.86259460 121.21982574]
[-61.42325211 106.68157959]
[-51.75442505 94.95203400]
[-38.33054733 87.81986237]
[-23.19865799 86.37266541]
[-8.66626167 90.83113098]
[3.05055523 100.51537323]
[10.16506481 113.94862366]
[25.09503937 112.50091553]
[40.02501297 111.05320740]
[54.95499039 109.60549927]
[69.88496399 108.15779114]
[73.91895294 101.83506012]
[61.27363205 93.76686859]
[69.34203339 81.12167358]
[81.98693848 89.18959808]
[86.02093506 82.86687469]
[80.16294861 75.72329712]
[81.09747314 68.31471252]
[76.46221924 54.04886246]
[71.82696533 39.78301239]
[67.19171143 25.51716614]
[62.55645370 11.25131893]
[50.93335724 0.51753211]
[54.35902405 -13.97778034]
[40.16528702 -20.92855835]
[35.12284851 -35.90685654]
[42.22330475 -50.02631378]
[57.25407791 -54.91010666]
[71.29767609 -47.66077042]
[76.02228546 -32.57920456]
[68.62487030 -18.61303520]
[79.91642761 -8.89963722]
[76.82230377 6.61606359]
[81.45755768 20.88191223]
[86.09281158 35.14775848]
[90.72806549 49.41360855]
[95.36331940 63.67945480]
[100.17060852 77.88825226]
[114.43645477 82.52350616]
[126.78121185 74.00254059]
[139.12597656 65.48156738]
[151.47073364 56.96059418]
[154.44430542 41.67021942]
[167.08502197 33.20459747]
[181.64373779 36.13367081]
[188.60577393 21.92660713]
[203.47540283 21.06436729]
[215.82015991 12.54339504]
[213.91198730 -2.64269876]
[219.29055786 -16.97201920]
[230.71994019 -27.15179443]
[245.57374573 -30.84278488]
[260.43865967 -27.19682884]
[271.89883423 -17.05174065]
[277.32083130 -2.73878598]
[275.45867920 12.45302105]
[266.74032593 25.03271675]
[253.16914368 32.10957718]
[237.86372375 32.05739212]
[224.34112549 24.88815308]
[211.99636841 33.40912247]
[205.91731262 47.00671387]
[190.16470337 48.47843170]
[187.74084473 63.12972641]
[175.34289551 71.94705963]
[159.99169922 69.30535126]
[147.64694214 77.82632446]
[135.30218506 86.34729767]
[122.95742798 94.86827087]
[137.87614441 93.30880737]
[151.53181458 87.10213470]
[166.41514587 85.23498535]
[181.18080139 87.87613678]
[194.49403381 94.78684998]
[205.15141296 105.34243011]
[212.18957520 118.58872223]
[214.97232056 133.32833862]
[213.24810791 148.22891235]
[207.17279053 161.94351196]
[197.29553223 173.23245239]
[184.50918579 181.07524109]
[169.96955872 184.76296997]
[154.99095154 183.96226501]
[140.92732239 178.74552917]
[129.04994202 169.58430481]
[120.43245697 157.30673218]
[115.85384369 143.02259827]
[115.72797394 128.02301025]
[110.85545349 113.83645630]
[108.33009338 128.62234497]
[113.63359833 143.52816772]
[103.86401367 154.77113342]
[101.33866119 169.55703735]
[98.81330109 184.34292603]
[96.28794861 199.12881470]
[109.17057037 207.19766235]
[117.98067474 219.58518982]
[121.37477875 234.40235901]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 126]
[12 125]
[13 124]
[14 123]
[16 121]
[17 120]
[19 42]
[20 41]
[21 40]
[22 39]
[23 38]
[47 69]
[49 68]
[50 67]
[51 66]
[52 65]
[53 64]
[55 62]
[70 100]
[71 99]
[72 98]
[73 97]
[76 94]
[78 92]
[79 91]
] def

init

% Start Annotations
11 126 0.32 0.6 colorpair
16 121 0.32 0.2 colorpair
19 42 0.16 0.2 colorpair
23 38 0.16 0.2 colorpair
47 69 0.32 0.2 colorpair
49 68 0.16 0.2 colorpair
50 67 0.0 1 colorpair
51 66 0.0 0.2 colorpair
52 65 0.0 1 colorpair
53 64 0.0 1 colorpair
55 62 0.16 1 colorpair
70 100 0.32 1 colorpair
71 99 0.16 1 colorpair
72 98 0.0 1 colorpair
73 97 0.0 1 colorpair
78 92 0.16 0.6 colorpair
79 91 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
11 126 1 gmark
11 cmark
126 cmark
12 125 3 gmark
12 cmark
125 cmark
13 124 4 gmark
13 cmark
124 cmark
14 123 3 gmark
14 cmark
123 cmark
16 121 2 gmark
16 cmark
121 cmark
17 120 3 gmark
17 cmark
120 cmark
19 42 2 gmark
19 cmark
42 cmark
20 41 4 gmark
20 cmark
41 cmark
21 40 4 gmark
21 cmark
22 39 3 gmark
22 cmark
39 cmark
23 38 2 gmark
23 cmark
47 69 2 gmark
47 cmark
69 cmark
49 68 2 gmark
49 cmark
51 66 2 gmark
62 cmark
70 cmark
100 cmark
99 cmark
76 94 4 gmark
76 cmark
94 cmark
78 92 1 gmark
78 cmark
79 91 1 gmark
91 cmark

% End Annotations
showpage
end
%%EOF
