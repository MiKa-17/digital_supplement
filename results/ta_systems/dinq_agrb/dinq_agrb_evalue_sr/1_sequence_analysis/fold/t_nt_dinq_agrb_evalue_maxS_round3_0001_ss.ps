%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 24 14:19:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGUAAGCGGAUGCAUUCUCACUCCAUCGCAUGGAGAAAACGGGUGAUUGAUAAAGCAAUCAUCGUUCUUGGGGCGUUAAUUGCGCUGCUGGAACUGAUCCGCUUUCUGCUUCAGCUUCUGAACUGA\
) } def
/len { sequence length } bind def

/coor [
[107.52546692 159.60380554]
[108.97335815 144.67431641]
[101.50837708 143.95046997]
[92.98740387 156.29522705]
[84.46643066 168.63998413]
[89.45519257 183.21456909]
[84.95796967 197.76200867]
[72.89964294 206.76538086]
[58.02995682 206.93983459]
[49.50898361 219.28459167]
[48.72945023 235.66519165]
[34.03164673 242.93888855]
[20.53541183 233.62310791]
[22.12451744 217.30113220]
[37.16422653 210.76361084]
[45.68519592 198.41885376]
[40.57543945 184.45359802]
[44.71779633 169.98623657]
[56.72516251 160.62265015]
[72.12167358 160.11900330]
[80.64264679 147.77424622]
[89.16362000 135.42948914]
[81.71566010 122.40843201]
[74.26837921 109.38852692]
[59.30778122 110.47505188]
[44.34718704 111.56156921]
[29.38658905 112.64809418]
[14.42599106 113.73461151]
[-0.53460610 114.82113647]
[-15.89416599 121.99890137]
[-27.04336739 109.22660065]
[-17.85661888 94.97738647]
[-1.62112808 99.86054230]
[13.33946896 98.77401733]
[28.30006599 97.68749237]
[43.26066208 96.60097504]
[58.22126007 95.51445007]
[73.18186188 94.42793274]
[76.90567017 87.91768646]
[61.90578842 87.97819519]
[54.35337067 75.01821899]
[61.80074692 61.99760056]
[76.80062103 61.93681335]
[84.35328674 74.89720154]
[88.07709503 68.38696289]
[81.42922211 54.94055939]
[74.78134918 41.49415588]
[68.13347626 28.04775047]
[61.48560333 14.60134697]
[54.83773041 1.15494299]
[48.18985367 -12.29146099]
[41.54198074 -25.73786545]
[26.49287605 -30.56486511]
[19.33915329 -44.65740967]
[24.32499313 -59.65464020]
[38.49238205 -66.65896606]
[53.43606186 -61.51485062]
[60.29021072 -47.27419662]
[54.98838806 -32.38573837]
[61.63626099 -18.93933487]
[68.28413391 -5.49293041]
[74.93200684 7.95347404]
[81.57987976 21.39987755]
[88.22775269 34.84628296]
[94.87562561 48.29268646]
[101.52349854 61.73908997]
[116.27779388 64.44291687]
[127.26182556 54.22767639]
[138.24584961 44.01243973]
[149.22988892 33.79720306]
[149.96296692 18.23762703]
[161.24784851 8.03439522]
[176.07701111 8.82915878]
[180.91322327 -6.23475981]
[195.50222778 -9.23645115]
[206.48625183 -19.45168877]
[217.47029114 -29.66692734]
[214.63830566 -44.83213043]
[220.47596741 -59.11236572]
[233.12051392 -67.95086670]
[248.53710938 -68.52729034]
[261.80636597 -60.65770721]
[268.69412231 -46.85327148]
[267.00250244 -31.51893234]
[257.27133179 -19.54781532]
[242.60575867 -14.75986576]
[227.68551636 -18.68289757]
[216.70149231 -8.46765900]
[205.71746826 1.74757862]
[201.66690063 16.08083534]
[186.29225159 19.81318855]
[186.01077271 34.66096115]
[175.01692200 45.17713547]
[159.44512939 44.78123093]
[148.46109009 54.99647141]
[137.47706604 65.21170807]
[126.49303436 75.42694855]
[141.02987671 71.72825623]
[155.56671143 68.02956390]
[168.95764160 61.27063370]
[183.72576904 58.64337540]
[198.62614441 60.36926651]
[212.40267944 66.30281830]
[223.89401245 75.94383240]
[232.13143921 88.47956848]
[236.42054749 102.85328674]
[236.39974976 117.85327148]
[232.07081604 132.21504211]
[223.79866028 144.72789001]
[212.28063965 154.33700562]
[198.48770142 160.23234558]
[183.58259583 161.91691589]
[168.82048035 159.24827576]
[156.97033691 150.05184937]
[145.12020874 140.85540771]
[151.11067200 154.60729980]
[157.10115051 168.35917664]
[172.28114319 171.57589722]
[182.64624023 183.12338257]
[184.21086121 198.56137085]
[176.37336731 211.95365906]
[162.14743042 218.15061951]
[147.00321960 214.76942444]
[136.76399231 203.11018372]
[135.36694336 187.65612793]
[143.34925842 174.34965515]
[137.35879517 160.59776306]
[131.36831665 146.84588623]
[123.90333557 146.12202454]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 22]
[4 21]
[5 20]
[9 16]
[10 15]
[24 38]
[25 37]
[26 36]
[27 35]
[28 34]
[29 33]
[45 66]
[46 65]
[47 64]
[48 63]
[49 62]
[50 61]
[51 60]
[52 59]
[67 97]
[68 96]
[69 95]
[70 94]
[73 91]
[75 89]
[76 88]
[77 87]
[115 128]
[116 127]
[117 126]
] def

init

% Start Annotations
3 22 0.16 0.2 colorpair
5 20 0.16 0.2 colorpair
9 16 0.32 0.2 colorpair
10 15 0.16 0.2 colorpair
24 38 0.0 1 colorpair
25 37 0.0 1 colorpair
26 36 0.0 1 colorpair
27 35 0.0 1 colorpair
28 34 0.0 1 colorpair
29 33 0.0 1 colorpair
45 66 0.16 1 colorpair
46 65 0.16 1 colorpair
47 64 0.0 1 colorpair
48 63 0.0 1 colorpair
49 62 0.0 1 colorpair
50 61 0.0 1 colorpair
51 60 0.0 1 colorpair
52 59 0.0 1 colorpair
67 97 0.32 1 colorpair
68 96 0.0 1 colorpair
69 95 0.0 1 colorpair
70 94 0.0 1 colorpair
73 91 0.16 0.6 colorpair
75 89 0.16 0.6 colorpair
76 88 0.16 1 colorpair
77 87 0.0 0.2 colorpair
115 128 0.0 0.2 colorpair
116 127 0.0 0.2 colorpair
117 126 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
3 22 2 gmark
22 cmark
4 21 3 gmark
5 20 2 gmark
20 cmark
9 16 2 gmark
9 cmark
16 cmark
10 15 2 gmark
10 cmark
66 cmark
46 cmark
67 cmark
97 cmark
73 91 1 gmark
91 cmark
75 89 1 gmark
75 cmark
88 cmark
77 87 2 gmark
115 128 2 gmark
116 127 2 gmark
117 126 2 gmark

% End Annotations
showpage
end
%%EOF
