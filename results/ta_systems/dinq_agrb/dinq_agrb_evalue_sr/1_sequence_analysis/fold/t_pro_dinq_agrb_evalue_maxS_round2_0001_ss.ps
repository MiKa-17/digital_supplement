%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 24 13:35:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGUAAGCGGAUGCAUUCUCACUCCAUCGCAUGGAGAAAACGGGUGAUUGAUAAAGCAAUCAUCGUUCUUGGGGCGUUAAUUGCGCUGCUGGAACUGAUCCGCUUCCUGCUUCAGCUUCUGAAC\
) } def
/len { sequence length } bind def

/coor [
[97.14559937 168.58050537]
[101.65722656 182.88594055]
[102.37860870 197.86857605]
[99.26219940 212.54127502]
[92.51333618 225.93728638]
[82.57669067 237.17396545]
[70.10694885 245.51097107]
[55.92572403 250.39898682]
[40.96737289 251.51597595]
[26.21745682 248.78833008]
[12.64781666 242.39578247]
[1.15251601 232.75949097]
[-7.51104927 220.51437378]
[-12.77205944 206.46725464]
[-14.28388119 191.54364014]
[-11.94690323 176.72680664]
[-5.91510439 162.99299622]
[3.41409683 151.24710083]
[15.42602444 142.26303101]
[29.32924271 136.63270569]
[44.20730209 134.72711182]
[57.09519958 127.05233765]
[69.98310089 119.37757111]
[82.87100220 111.70280457]
[67.88132477 112.25926208]
[52.89165115 112.81571198]
[37.90197372 113.37216949]
[22.91230011 113.92861938]
[7.92262459 114.48507690]
[-7.68130445 121.11483765]
[-18.37156868 107.95601654]
[-8.68635941 94.04080200]
[7.36617088 99.49539948]
[22.35584641 98.93894958]
[37.34552002 98.38249207]
[52.33519745 97.82604218]
[67.32487488 97.26958466]
[82.31454468 96.71313477]
[86.35515594 90.39463043]
[72.93370056 83.69652557]
[58.82469177 78.60379791]
[58.39254761 63.61002350]
[72.18481445 57.71313477]
[82.72581482 68.38410187]
[94.43637085 77.75762177]
[98.47697449 71.43911743]
[92.69390106 57.59873962]
[86.91082764 43.75836182]
[81.12774658 29.91798401]
[75.34467316 16.07760620]
[69.56159973 2.23722982]
[63.77852631 -11.60314751]
[49.06527710 -17.37340355]
[42.81828308 -31.89065742]
[48.74377441 -46.54207611]
[63.32626343 -52.63523483]
[77.91421509 -46.55517197]
[83.85285950 -31.90907860]
[77.61890411 -17.38622284]
[83.40197754 -3.54584527]
[89.18505096 10.29453182]
[94.96812439 24.13490868]
[100.75120544 37.97528458]
[106.53427887 51.81566238]
[112.31735229 65.65604401]
[113.65883636 75.35798645]
[112.30181885 84.40538025]
[124.19270325 75.26170349]
[136.08358765 66.11801910]
[147.97447205 56.97433472]
[150.15888977 41.55142975]
[162.34819031 32.44782639]
[177.03811646 34.62538528]
[183.26136780 20.07953644]
[198.06709290 18.45481682]
[209.95797729 9.31113338]
[207.27244568 -5.75692987]
[211.90806580 -20.34355545]
[222.79959106 -31.09684372]
[237.44424438 -35.54576874]
[252.47677612 -32.66799927]
[264.44281006 -23.12482262]
[270.59268188 -9.10919666]
[269.51315308 6.15819407]
[261.45233154 19.16901398]
[248.26248169 26.93347168]
[232.97457886 27.66735268]
[219.10165405 21.20201492]
[207.21076965 30.34569740]
[201.83804321 44.23752975]
[186.18179321 46.51626587]
[184.51353455 61.27270508]
[172.58474731 70.71508789]
[157.11814880 68.86521912]
[145.22726440 78.00890350]
[133.33638000 87.15258026]
[121.44550323 96.29626465]
[136.26445007 93.97271729]
[151.08338928 91.64917755]
[164.77320862 85.51819611]
[179.77218628 85.34292603]
[193.60153198 91.15232849]
[203.97575378 101.98632050]
[209.18037415 116.05444336]
[208.35525513 131.03172302]
[201.63674927 144.44297791]
[190.13519287 154.07180786]
[175.75137329 158.32690430]
[160.86242676 156.50505066]
[147.92895508 148.90734863]
[139.08799744 136.78858948]
[127.37744904 127.41507721]
[115.66689301 118.04155731]
[121.44996643 131.88192749]
[127.23303986 145.72230530]
[133.01611328 159.56268311]
[147.25100708 166.96182251]
[150.19992065 182.73152161]
[139.60070801 194.77462769]
[123.58416748 193.85267639]
[114.43682861 180.67292786]
[119.17573547 165.34576416]
[113.39266205 151.50538635]
[107.60958862 137.66500854]
[101.82651520 123.82463074]
[100.26620483 138.74325562]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 38]
[25 37]
[26 36]
[27 35]
[28 34]
[29 33]
[46 65]
[47 64]
[48 63]
[49 62]
[50 61]
[51 60]
[52 59]
[67 97]
[68 96]
[69 95]
[70 94]
[73 91]
[75 89]
[76 88]
[113 125]
[114 124]
[115 123]
[116 122]
] def

init

% Start Annotations
46 65 0.16 0.6 colorpair
47 64 0.0 0.6 colorpair
48 63 0.0 0.6 colorpair
49 62 0.0 0.6 colorpair
50 61 0.0 0.6 colorpair
51 60 0.0 0.6 colorpair
52 59 0.0 0.6 colorpair
67 97 0.32 0.6 colorpair
68 96 0.0 0.6 colorpair
69 95 0.0 0.6 colorpair
70 94 0.0 0.6 colorpair
73 91 0.16 0.2 colorpair
75 89 0.16 0.2 colorpair
76 88 0.16 0.6 colorpair
113 125 0.16 0.6 colorpair
114 124 0.16 0.6 colorpair
115 123 0.0 0.6 colorpair
116 122 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
24 38 5 gmark
25 37 5 gmark
26 36 5 gmark
27 35 5 gmark
28 34 5 gmark
29 33 5 gmark
46 65 1 gmark
46 cmark
47 64 1 gmark
48 63 1 gmark
49 62 1 gmark
50 61 1 gmark
51 60 1 gmark
52 59 1 gmark
67 97 1 gmark
67 cmark
97 cmark
68 96 1 gmark
69 95 1 gmark
70 94 1 gmark
73 91 2 gmark
91 cmark
75 89 2 gmark
75 cmark
76 88 1 gmark
88 cmark
113 125 1 gmark
125 cmark
114 124 1 gmark
114 cmark
124 cmark
115 123 1 gmark
116 122 1 gmark

% End Annotations
showpage
end
%%EOF
