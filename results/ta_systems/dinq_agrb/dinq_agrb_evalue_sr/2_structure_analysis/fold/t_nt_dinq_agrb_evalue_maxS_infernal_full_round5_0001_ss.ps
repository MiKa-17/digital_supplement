%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 24 17:35:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
____________GAGUAAGCGGAUG_CAUUCU_CAC_UC__C_A_U_CGC__________A_UGGAGA_AA_____ACGG_GU_________GAUUGAUA______AAGCAAUCAUCGUUCUUGGGGCGUUA__AUUGCGCUGCUGGAACUGAUCCGCUUUCUGCUUCAGCUUC_U___GAACUGA__________________________\
) } def
/len { sequence length } bind def

/coor [
[447.30929565 511.16171265]
[432.90896606 506.95770264]
[418.65884399 502.26977539]
[404.57519531 497.10321045]
[390.67404175 491.46392822]
[376.97131348 485.35836792]
[363.48260498 478.79348755]
[350.22329712 471.77679443]
[337.20855713 464.31628418]
[324.45318604 456.42044067]
[311.97180176 448.09832764]
[299.77859497 439.35940552]
[287.88748169 430.21365356]
[276.31207275 420.67150879]
[265.06552124 410.74386597]
[254.16069031 400.44204712]
[243.61001587 389.77777100]
[233.42553711 378.76327515]
[223.61888123 367.41107178]
[214.20121765 355.73413086]
[205.18331909 343.74578857]
[196.57545471 331.45971680]
[188.38745117 318.88992310]
[180.62866211 306.05075073]
[173.30792236 292.95687866]
[166.43359375 279.62319946]
[160.01353455 266.06497192]
[154.05503845 252.29763794]
[148.56492615 238.33691406]
[143.54946899 224.19873047]
[139.01435852 209.89923096]
[134.96481323 195.45471191]
[131.40541077 180.88166809]
[128.34024048 166.19671631]
[125.77278900 151.41662598]
[123.70598602 136.55824280]
[122.14218903 121.63854218]
[121.08319092 106.67453003]
[106.09338379 107.22750092]
[101.74748993 110.16177368]
[96.06707764 110.45310974]
[90.65470123 107.56912231]
[86.70072174 122.13856506]
[78.96159363 135.10037231]
[68.01160431 145.49269104]
[54.66331482 152.54434204]
[39.90726089 155.73204041]
[24.83843803 154.81925964]
[10.57505417 149.87370300]
[-1.82445335 141.26239014]
[-11.43995953 129.62431335]
[-17.55792809 115.82312012]
[-19.72436714 100.88294220]
[-17.77851295 85.91242981]
[-11.86475945 72.02249908]
[-2.42194581 60.24388123]
[9.84920692 51.45062256]
[24.03809929 46.29524231]
[39.09181976 45.16030884]
[53.89328384 48.13003159]
[67.34412384 54.98404694]
[78.44619751 65.21373749]
[86.37565613 78.05998993]
[90.54408264 92.56953430]
[105.54041290 92.23770142]
[120.53021240 91.68473053]
[120.48379517 76.68336487]
[120.94406891 61.68899536]
[121.91049194 46.71872330]
[123.38198090 31.78963280]
[125.35684204 16.91875648]
[127.83282471 2.12306428]
[130.80711365 -12.58056259]
[134.27630615 -27.17534637]
[138.23645020 -41.64463425]
[142.68301392 -55.97192001]
[147.61093140 -70.14084625]
[153.01458740 -84.13526154]
[158.88781738 -97.93917847]
[165.22390747 -111.53686523]
[172.01562500 -124.91279602]
[179.25523376 -138.05171204]
[186.93447876 -150.93861389]
[195.04457092 -163.55880737]
[203.57627869 -175.89790344]
[212.51986694 -187.94178772]
[221.86511230 -199.67674255]
[231.60136414 -211.08938599]
[241.71752930 -222.16667175]
[252.20204163 -232.89598083]
[263.04293823 -243.26506042]
[274.22787476 -253.26208496]
[285.74404907 -262.87564087]
[297.57836914 -272.09475708]
[309.71728516 -280.90893555]
[322.14697266 -289.30810547]
[334.85324097 -297.28265381]
[347.82159424 -304.82354736]
[361.03723145 -311.92211914]
[374.48510742 -318.57028198]
[388.14981079 -324.76049805]
[402.01580811 -330.48562622]
[416.06723022 -335.73919678]
[430.28811646 -340.51519775]
[444.66213989 -344.80816650]
[459.17300415 -348.61322021]
[473.80407715 -351.92602539]
[488.53869629 -354.74276733]
[503.36004639 -357.06027222]
[518.25122070 -358.87585449]
[533.19519043 -360.18746948]
[548.17492676 -360.99362183]
[563.17340088 -361.29339600]
[578.17340088 -361.08642578]
[593.15783691 -360.37298584]
[608.10968018 -359.15383911]
[623.01177979 -357.43038940]
[637.84716797 -355.20465088]
[652.59893799 -352.47909546]
[667.25018311 -349.25689697]
[681.78430176 -345.54168701]
[696.18463135 -341.33773804]
[710.43481445 -336.64981079]
[724.51849365 -331.48324585]
[738.41961670 -325.84399414]
[752.12237549 -319.73846436]
[765.61108398 -313.17361450]
[778.87042236 -306.15692139]
[791.88513184 -298.69644165]
[804.64050293 -290.80062866]
[817.12194824 -282.47854614]
[829.31518555 -273.73962402]
[841.20629883 -264.59390259]
[852.78173828 -255.05177307]
[864.02825928 -245.12414551]
[874.93310547 -234.82232666]
[885.48382568 -224.15809631]
[895.66833496 -213.14360046]
[905.47497559 -201.79141235]
[914.89263916 -190.11450195]
[923.91058350 -178.12617493]
[932.51849365 -165.84010315]
[940.70648193 -153.27032471]
[948.46533203 -140.43116760]
[955.78607178 -127.33730316]
[962.66040039 -114.00364685]
[969.08050537 -100.44541931]
[975.03900146 -86.67810059]
[980.52911377 -72.71738434]
[985.54461670 -58.57921600]
[990.07977295 -44.27971649]
[994.12933350 -29.83520508]
[997.68878174 -15.26216221]
[1000.75396729 -0.57721829]
[1003.32141113 14.20287228]
[1005.38824463 29.06124496]
[1006.95208740 43.98094559]
[1008.01110840 58.94495392]
[1008.56414795 73.93618774]
[1008.61053467 88.93755341]
[1008.15020752 103.93192291]
[1007.18377686 118.90219116]
[1005.71228027 133.83128357]
[1003.73736572 148.70214844]
[1001.26135254 163.49784851]
[998.28704834 178.20146179]
[994.81781006 192.79624939]
[990.85766602 207.26551819]
[986.41107178 221.59280396]
[981.48315430 235.76171875]
[976.07946777 249.75611877]
[970.20623779 263.56002808]
[963.87011719 277.15771484]
[957.07836914 290.53363037]
[949.83874512 303.67254639]
[942.15948486 316.55941772]
[934.04937744 329.17959595]
[925.51763916 341.51867676]
[916.57403564 353.56256104]
[907.22875977 365.29751587]
[897.49249268 376.71011353]
[887.37628174 387.78738403]
[876.89178467 398.51669312]
[866.05084229 408.88574219]
[854.86590576 418.88275146]
[843.34973145 428.49630737]
[831.51538086 437.71539307]
[819.37646484 446.52954102]
[806.94677734 454.92868042]
[794.24047852 462.90322876]
[781.27209473 470.44409180]
[768.05645752 477.54263306]
[754.60858154 484.19079590]
[740.94384766 490.38098145]
[727.07788086 496.10610962]
[713.02642822 501.35964966]
[698.80554199 506.13562012]
[684.43145752 510.42855835]
[669.92065430 514.23358154]
[655.28955078 517.54638672]
[640.55493164 520.36309814]
[625.73358154 522.68054199]
[610.84240723 524.49615479]
[595.89843750 525.80773926]
[580.91864014 526.61389160]
[565.92022705 526.91357422]
[550.92022705 526.70660400]
[535.93579102 525.99310303]
[520.98394775 524.77398682]
[506.08184814 523.05047607]
[491.24645996 520.82470703]
[476.49468994 518.09918213]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[38 66]
[39 65]
[42 64]
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
38 66 15 gmark
38 cmark
66 cmark
39 65 9 gmark
39 cmark
42 64 193 gmark
42 cmark
64 cmark

% End Annotations
showpage
end
%%EOF
