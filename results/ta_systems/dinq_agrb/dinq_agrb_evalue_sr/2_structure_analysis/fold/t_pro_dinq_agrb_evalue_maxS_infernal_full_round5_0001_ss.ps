%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 24 17:35:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGUAAGCGGAUG_CAUU_C_UCACUCC_AUCG________C_A_U_GGAGA_A_AACGGGU_________GAUUGAUA______AAGCAAUCAUCGUUCUUGGG_____________________GCGUUAAUUGCGCUGCUGGAACUGAUCCGCUUUCUGCUUCAG___CUUCU__GAA_C___\
) } def
/len { sequence length } bind def

/coor [
[-40.54855347 537.96264648]
[-53.81914139 544.96228027]
[-67.43787384 551.25781250]
[-81.36743164 556.83197021]
[-95.56962585 561.66949463]
[-110.00553131 565.75708008]
[-124.63557434 569.08349609]
[-139.41966248 571.63970947]
[-154.31727600 573.41870117]
[-169.28758240 574.41558838]
[-184.28953552 574.62756348]
[-199.28202820 574.05413818]
[-214.22396851 572.69683838]
[-229.07438660 570.55938721]
[-243.79258728 567.64770508]
[-258.33822632 563.96966553]
[-272.67144775 559.53546143]
[-286.75296021 554.35711670]
[-300.54415894 548.44897461]
[-314.00723267 541.82708740]
[-327.10531616 534.50970459]
[-339.80245972 526.51684570]
[-352.06390381 517.87042236]
[-363.85601807 508.59411621]
[-375.14648438 498.71337891]
[-385.90435791 488.25527954]
[-396.10015869 477.24850464]
[-405.70593262 465.72317505]
[-414.69537354 453.71093750]
[-423.04379272 441.24468994]
[-430.72833252 428.35861206]
[-437.72796631 415.08798218]
[-444.02343750 401.46923828]
[-449.59756470 387.53967285]
[-454.43499756 373.33746338]
[-458.52255249 358.90155029]
[-461.84896851 344.27148438]
[-464.40512085 329.48739624]
[-466.18405151 314.58978271]
[-467.18087769 299.61947632]
[-467.39282227 284.61752319]
[-466.81936646 269.62503052]
[-465.46200562 254.68309021]
[-463.32455444 239.83267212]
[-460.41278076 225.11447144]
[-456.73471069 210.56884766]
[-452.30044556 196.23564148]
[-447.12207031 182.15414429]
[-441.21386719 168.36297607]
[-434.59194946 154.89991760]
[-427.27453613 141.80186462]
[-419.28161621 129.10473633]
[-410.63516235 116.84331512]
[-401.35882568 105.05123138]
[-391.47805786 93.76078796]
[-381.01992798 83.00294495]
[-370.01312256 72.80717468]
[-358.48779297 63.20143890]
[-346.47552490 54.21205139]
[-334.00924683 45.86366272]
[-321.12310791 38.17914963]
[-307.85247803 31.17957306]
[-294.23373413 24.88412476]
[-280.30413818 19.31005669]
[-266.10189819 14.47264767]
[-251.66598511 10.38515568]
[-237.03591919 7.05878544]
[-222.25180054 4.50265408]
[-207.35418701 2.72376752]
[-192.38388062 1.72700191]
[-177.38191223 1.51508915]
[-162.38943481 2.08861017]
[-147.44749451 3.44599271]
[-132.59709167 5.58351660]
[-117.87890625 8.49532318]
[-103.33328247 12.17343044]
[-89.00009155 16.60775757]
[-74.91861725 21.78615189]
[-61.12746048 27.69441605]
[-47.66441727 34.31636047]
[-34.56639099 41.63383102]
[-21.86928368 49.62677002]
[-9.60789680 58.27327347]
[2.18416286 67.54963684]
[13.47457314 77.43044281]
[24.23238945 87.88860321]
[34.42812347 98.89544678]
[44.03382874 110.42081451]
[53.02317429 122.43310547]
[65.48655701 114.08660126]
[77.94993591 105.74009705]
[77.90173340 94.44836426]
[83.28092194 84.52013397]
[92.76634979 78.39379120]
[104.02838135 77.57398224]
[114.30104065 82.26206207]
[127.03495789 74.33443451]
[139.76887512 66.40679932]
[152.43646240 58.37360764]
[165.03684998 50.23541260]
[177.63723755 42.09721756]
[190.23762512 33.95902634]
[183.87951660 20.34696388]
[179.43420410 5.99590349]
[176.98449707 -8.82680607]
[176.57604980 -23.84502602]
[178.21644592 -38.77897644]
[181.87513733 -53.35044479]
[187.48396301 -67.28797913]
[194.93844604 -80.33192444]
[204.09968567 -92.23928070]
[214.79704285 -102.78823090]
[226.83122253 -111.78224182]
[239.97804260 -119.05377197]
[253.99256897 -124.46734619]
[268.61373901 -127.92211914]
[283.56912231 -129.35372925]
[298.58016968 -128.73550415]
[313.36721802 -126.07897186]
[327.65478516 -121.43360901]
[341.17669678 -114.88596344]
[353.68106079 -106.55800629]
[364.93490601 -96.60488892]
[374.72860718 -85.21202850]
[382.87969971 -72.59166718]
[389.23632812 -58.97891998]
[393.68008423 -44.62738037]
[396.12817383 -29.80440521]
[396.53503418 -14.78614140]
[394.89300537 0.14763102]
[391.23272705 14.71870422]
[385.62240601 28.65562820]
[378.16650391 41.69876862]
[369.00396729 53.60513687]
[358.30548096 64.15292358]
[346.27032471 73.14563751]
[333.12271118 80.41574097]
[319.10760498 85.82779694]
[304.48608398 89.28099060]
[289.53051758 90.71098328]
[274.51953125 90.09113312]
[259.73278809 87.43299866]
[245.44572449 82.78608704]
[231.92451477 76.23697662]
[219.42106628 67.90766907]
[208.16828918 57.95333481]
[198.37582397 46.55941391]
[185.77543640 54.69760895]
[173.17504883 62.83580017]
[160.57466125 70.97399902]
[156.65417480 77.25594330]
[147.69650269 79.14071655]
[134.96258545 87.06834412]
[122.22866821 94.99597931]
[118.91925049 112.69708252]
[103.79222107 122.46715546]
[86.29644012 118.20347595]
[73.83306122 126.54998016]
[61.36968231 134.89648438]
[69.05431366 147.78253174]
[76.05400848 161.05310059]
[82.34957886 174.67181396]
[87.92377472 188.60134888]
[92.76130676 202.80352783]
[96.84893036 217.23942566]
[100.17543793 231.86946106]
[102.73169708 246.65354919]
[104.51071930 261.55114746]
[105.50762177 276.52145386]
[105.71967316 291.52340698]
[105.14628601 306.51589966]
[103.78903961 321.45782471]
[101.65164948 336.30825806]
[98.73997498 351.02648926]
[95.06199646 365.57214355]
[90.62779999 379.90536499]
[85.44953918 393.98687744]
[79.54139709 407.77810669]
[72.91957092 421.24121094]
[65.60222626 434.33929443]
[57.60939789 447.03646851]
[48.96300507 459.29794312]
[39.68674469 471.09008789]
[29.80604362 482.38058472]
[19.34798431 493.13848877]
[8.34122944 503.33432007]
[-3.18404961 512.94012451]
[-15.19626427 521.92956543]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[89 159]
[90 158]
[91 157]
[96 154]
[97 153]
[98 152]
[99 150]
[100 149]
[101 148]
[102 147]
] def

init

% Start Annotations
91 157 0.16 0.2 colorpair
96 154 0.0 1 colorpair
97 153 0.0 1 colorpair
99 150 0.32 1 colorpair
100 149 0.32 1 colorpair
101 148 0.0 1 colorpair
102 147 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
89 159 215 gmark
89 cmark
159 cmark
90 158 156 gmark
90 cmark
158 cmark
91 157 2 gmark
91 cmark
98 152 3 gmark
98 cmark
99 cmark
150 cmark
100 cmark
149 cmark
102 cmark

% End Annotations
showpage
end
%%EOF
