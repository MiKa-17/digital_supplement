%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 24 19:33:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGUAAGCGGAUGCAUUCUCACUCCAUCGCAUGGAGAAAACGGGUGAUUGAUAAAGCAAUCAUCGUUCUUGGGGCGUUAAUUGCGCUGCUGGAACUGAUCCGCUUCCUGCUUCAGCUUCUGAAC\
) } def
/len { sequence length } bind def

/coor [
[109.49076843 227.89416504]
[107.87163544 217.32385254]
[110.86498260 206.97303772]
[117.98267365 198.77560425]
[113.24167633 184.54454041]
[99.84726715 178.13163757]
[94.83649445 163.76686096]
[101.65375519 149.76104736]
[96.91276550 135.52999878]
[92.17176819 121.29893494]
[89.50965118 136.06082153]
[92.77335358 150.70144653]
[89.55352020 165.35180664]
[80.45169830 177.27474976]
[67.16837311 184.24276733]
[52.18524551 184.95402527]
[38.30158997 179.27563477]
[28.11126518 168.26849365]
[23.51811600 153.98902893]
[25.38027382 139.10507202]
[33.34983063 126.39734650]
[45.93785095 118.24003601]
[60.79108810 116.15703583]
[73.67898560 108.48226929]
[58.68931198 109.03871918]
[43.69963837 109.59517670]
[28.70996284 110.15162659]
[13.72028732 110.70808411]
[-1.26938796 111.26453400]
[-16.87331772 117.89429474]
[-27.56358147 104.73547363]
[-17.87837219 90.82026672]
[-1.82584167 96.27485657]
[13.16383362 95.71840668]
[28.15350914 95.16194916]
[43.14318466 94.60549927]
[58.13285828 94.04904175]
[73.12253571 93.49259186]
[77.16313934 87.17408752]
[62.17855835 86.49414825]
[55.27503204 73.17719269]
[63.35601425 60.54003525]
[78.34060669 61.21969604]
[85.24435425 74.53707886]
[89.28496552 68.21857452]
[83.50188446 54.37819672]
[77.71881104 40.53782272]
[71.93573761 26.69744301]
[66.15266418 12.85706711]
[60.36958694 -0.98331052]
[54.58651352 -14.82368755]
[48.80343628 -28.66406441]
[34.09018707 -34.43432236]
[27.84319496 -48.95157242]
[33.76868439 -63.60299301]
[48.35117340 -69.69615173]
[62.93912506 -63.61608887]
[68.87776947 -48.96999359]
[62.64381409 -34.44713974]
[68.42688751 -20.60676384]
[74.20996094 -6.76638556]
[79.99304199 7.07399130]
[85.77611542 20.91436958]
[91.55918884 34.75474548]
[97.34226227 48.59512329]
[103.12534332 62.43550110]
[117.62220001 66.28791046]
[129.51307678 57.14422989]
[141.40396118 48.00054550]
[153.29484558 38.85686493]
[155.47926331 23.43395615]
[167.66856384 14.33035278]
[182.35848999 16.50791168]
[188.58174133 1.96206427]
[203.38746643 0.33734390]
[215.27835083 -8.80633831]
[227.16923523 -17.95001984]
[225.76734924 -33.31355667]
[232.91441345 -46.98553467]
[246.32983398 -54.60327530]
[261.73281860 -53.73598099]
[274.20828247 -44.66041183]
[279.77539062 -30.27253914]
[276.65768433 -15.16348648]
[265.85000610 -4.15449572]
[250.80107117 -0.75849611]
[236.31291199 -6.05913877]
[224.42204285 3.08454347]
[212.53115845 12.22822571]
[207.15841675 26.12005615]
[191.50216675 28.39879417]
[189.83392334 43.15523529]
[177.90512085 52.59761810]
[162.43852234 50.74774551]
[150.54765320 59.89142609]
[138.65676880 69.03511047]
[126.76588440 78.17879486]
[129.41403198 87.05529022]
[129.42630005 95.69761658]
[127.13121796 103.38764954]
[123.03704071 109.56706238]
[117.77043915 113.87782288]
[112.00733948 116.18174744]
[106.40282440 116.55793762]
[111.14382172 130.78900146]
[115.88481903 145.02005005]
[129.73968506 152.13906860]
[134.34500122 166.63891602]
[127.47273254 179.80354309]
[132.21372986 194.03460693]
[150.58699036 201.90956116]
[157.30743408 220.41618347]
[148.54022217 237.70906067]
[154.32330322 251.54943848]
[160.10636902 265.38980103]
[165.88945007 279.23019409]
[180.12434387 286.62933350]
[183.07325745 302.39901733]
[172.47404480 314.44213867]
[156.45750427 313.52017212]
[147.31015015 300.34042358]
[152.04907227 285.01327515]
[146.26599121 271.17288208]
[140.48292542 257.33251953]
[134.69984436 243.49212646]
[124.32331085 242.25912476]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 110]
[5 109]
[8 106]
[9 105]
[10 104]
[24 38]
[25 37]
[26 36]
[27 35]
[28 34]
[29 33]
[45 66]
[46 65]
[47 64]
[48 63]
[49 62]
[50 61]
[51 60]
[52 59]
[67 97]
[68 96]
[69 95]
[70 94]
[73 91]
[75 89]
[76 88]
[77 87]
[113 125]
[114 124]
[115 123]
[116 122]
] def

init

% Start Annotations
4 110 0.0 1 colorpair
5 109 0.0 1 colorpair
8 106 0.0 1 colorpair
9 105 0.0 1 colorpair
10 104 0.16 1 colorpair
24 38 0.0 1 colorpair
25 37 0.0 1 colorpair
26 36 0.0 1 colorpair
27 35 0.0 1 colorpair
28 34 0.0 1 colorpair
29 33 0.0 1 colorpair
45 66 0.0 1 colorpair
46 65 0.16 1 colorpair
47 64 0.0 1 colorpair
48 63 0.0 1 colorpair
49 62 0.0 1 colorpair
50 61 0.0 1 colorpair
51 60 0.0 1 colorpair
52 59 0.0 1 colorpair
67 97 0.16 1 colorpair
68 96 0.16 1 colorpair
69 95 0.0 1 colorpair
70 94 0.0 1 colorpair
73 91 0.16 1 colorpair
75 89 0.16 0.6 colorpair
76 88 0.16 0.6 colorpair
77 87 0.0 0.2 colorpair
113 125 0.16 1 colorpair
114 124 0.16 0.6 colorpair
115 123 0.0 1 colorpair
116 122 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
10 cmark
46 cmark
97 cmark
96 cmark
91 cmark
75 89 1 gmark
75 cmark
76 88 1 gmark
88 cmark
77 87 2 gmark
125 cmark
114 124 1 gmark
114 cmark
124 cmark

% End Annotations
showpage
end
%%EOF
