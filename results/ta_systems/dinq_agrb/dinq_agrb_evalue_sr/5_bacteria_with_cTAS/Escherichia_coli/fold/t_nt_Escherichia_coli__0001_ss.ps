%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 24 19:52:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGUAAGCGGAUGCAUUCUCACUCCAUCGCAUGGAGAAAACGGGUGAUUGAUAAAGCAAUCAUCGUUCUUGGGGCGUUAAUUGCGCUGCUGGAACUGAUCCGCUUCCUGCUUCAGCUUCUGAACUGA\
) } def
/len { sequence length } bind def

/coor [
[80.24736023 285.18801880]
[69.40597534 273.68844604]
[69.95489502 257.89370728]
[81.56843567 247.17449951]
[81.93089294 232.17887878]
[82.29335022 217.18325806]
[74.52622223 210.35478210]
[71.79579926 200.15097046]
[75.25614166 189.93756104]
[83.97634888 183.22503662]
[85.06286621 168.26445007]
[86.14939117 153.30384827]
[87.23591614 138.34324646]
[81.93260956 133.03994751]
[73.80661011 145.64820862]
[71.88726044 160.52490234]
[60.41315842 170.18641663]
[45.42689133 169.54472351]
[34.82065582 158.93775940]
[34.18000412 143.95144653]
[43.84231949 132.47801208]
[58.71775818 130.55935669]
[71.32601166 122.43334961]
[66.02271271 117.13005066]
[51.06211472 118.21656799]
[36.10151672 119.30309296]
[21.14091873 120.38961029]
[6.18032122 121.47613525]
[-8.78027630 122.56266022]
[-24.13983536 129.74041748]
[-35.28903580 116.96811676]
[-26.10228920 102.71891022]
[-9.86679840 107.60205841]
[5.09379911 106.51554108]
[20.05439568 105.42901611]
[35.01499557 104.34249115]
[49.97558975 103.25597382]
[64.93618774 102.16944885]
[68.65999603 95.65921021]
[53.66011810 95.71971893]
[46.10770035 82.75974274]
[53.55507660 69.73912048]
[68.55495453 69.67833710]
[76.10761261 82.63872528]
[79.83142090 76.12848663]
[73.18354797 62.68207932]
[66.53567505 49.23567581]
[59.88780594 35.78927231]
[53.23993301 22.34286690]
[46.59206009 8.89646339]
[39.94418716 -4.54994059]
[33.29631424 -17.99634552]
[18.24720573 -22.82334518]
[11.09348392 -36.91588974]
[16.07932281 -51.91312027]
[30.24671364 -58.91744995]
[45.19039154 -53.77332687]
[52.04454422 -39.53267670]
[46.74271774 -24.64421844]
[53.39059067 -11.19781399]
[60.03846359 2.24859023]
[66.68633270 15.69499397]
[73.33420563 29.14139748]
[79.98207855 42.58780289]
[86.62995911 56.03420639]
[93.27783203 69.48061371]
[108.03212738 72.18443298]
[119.01615906 61.96919632]
[130.00018311 51.75395966]
[140.98422241 41.53872299]
[141.71728516 25.97914886]
[153.00218201 15.77591610]
[167.83134460 16.57067871]
[172.66754150 1.50676036]
[187.25656128 -1.49493110]
[198.24058533 -11.71016884]
[209.22460938 -21.92540741]
[206.39263916 -37.09061050]
[212.23030090 -51.37084579]
[224.87484741 -60.20934296]
[240.29144287 -60.78576660]
[253.56069946 -52.91618729]
[260.44845581 -39.11175156]
[258.75683594 -23.77741051]
[249.02566528 -11.80629539]
[234.36009216 -7.01834488]
[219.43984985 -10.94137669]
[208.45582581 -0.72613895]
[197.47178650 9.48909855]
[193.42123413 23.82235527]
[178.04656982 27.55470848]
[177.76510620 42.40248108]
[166.77125549 52.91865921]
[151.19944763 52.52275085]
[140.21542358 62.73799133]
[129.23139954 72.95323181]
[118.24736786 83.16846466]
[118.60971832 90.65970612]
[131.22251892 82.54077911]
[144.56016541 89.40425110]
[145.28515625 104.38671875]
[132.67248535 112.50588226]
[119.33441925 105.64218903]
[119.69676971 113.13343048]
[131.61543274 122.24086761]
[143.53410339 131.34831238]
[158.00605774 126.00357819]
[173.06526184 129.35374451]
[183.90640259 140.32978821]
[187.07008362 155.42927551]
[181.54681396 169.83403015]
[169.09901428 178.94754028]
[153.69876099 179.86172485]
[140.26020813 172.28486633]
[133.07154846 158.63470459]
[134.42666626 143.26696777]
[122.50799561 134.15953064]
[110.58933258 125.05210114]
[107.52977753 132.48324585]
[102.19651031 139.42977905]
[101.10998535 154.39036560]
[100.02346802 169.35096741]
[98.93694305 184.31156921]
[108.59210968 201.93080139]
[97.28897095 217.54571533]
[96.92651367 232.54133606]
[96.56405640 247.53695679]
[107.64616394 258.80471802]
[107.43133545 274.60754395]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 127]
[5 126]
[6 125]
[10 123]
[11 122]
[12 121]
[13 120]
[24 38]
[25 37]
[26 36]
[27 35]
[28 34]
[29 33]
[45 66]
[46 65]
[47 64]
[48 63]
[49 62]
[50 61]
[51 60]
[52 59]
[67 97]
[68 96]
[69 95]
[70 94]
[73 91]
[75 89]
[76 88]
[77 87]
[104 118]
[105 117]
[106 116]
] def

init

% Start Annotations
4 127 0.0 1 colorpair
5 126 0.0 1 colorpair
6 125 0.16 1 colorpair
10 123 0.16 1 colorpair
11 122 0.16 0.6 colorpair
12 121 0.32 1 colorpair
13 120 0.16 0.6 colorpair
24 38 0.16 1 colorpair
25 37 0.16 1 colorpair
26 36 0.0 1 colorpair
27 35 0.16 1 colorpair
28 34 0.16 1 colorpair
29 33 0.0 1 colorpair
45 66 0.0 1 colorpair
46 65 0.16 1 colorpair
47 64 0.0 1 colorpair
48 63 0.0 1 colorpair
49 62 0.0 1 colorpair
50 61 0.0 1 colorpair
51 60 0.0 1 colorpair
52 59 0.16 1 colorpair
67 97 0.16 0.6 colorpair
68 96 0.0 1 colorpair
69 95 0.0 1 colorpair
70 94 0.0 0.6 colorpair
73 91 0.32 1 colorpair
75 89 0.32 0.6 colorpair
76 88 0.0 0.6 colorpair
77 87 0.0 0.2 colorpair
104 118 0.16 1 colorpair
105 117 0.0 0.6 colorpair
106 116 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
125 cmark
10 cmark
11 122 1 gmark
11 cmark
12 cmark
121 cmark
13 120 1 gmark
13 cmark
120 cmark
24 cmark
38 cmark
25 cmark
37 cmark
27 cmark
35 cmark
28 cmark
34 cmark
46 cmark
52 cmark
59 cmark
67 97 1 gmark
97 cmark
70 94 1 gmark
73 cmark
91 cmark
75 89 1 gmark
75 cmark
89 cmark
76 88 1 gmark
77 87 2 gmark
118 cmark
105 117 1 gmark

% End Annotations
showpage
end
%%EOF
