%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 24 20:04:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUAAGUAUCGGGAGUCUGCUCCAUAUAAUGGAGUAAACGGAUGAUUGAUAAAGCAAUCAUCGUUCUGGGGGCACUAAUCUCACUUCUUGAACUGAUUCGCUACCUUCUCCAGUUGAUGGGCUGA\
) } def
/len { sequence length } bind def

/coor [
[164.60273743 319.77062988]
[159.16377258 305.79144287]
[153.72479248 291.81225586]
[148.30924988 286.66415405]
[148.32888794 277.41946411]
[143.23733521 263.31002808]
[138.14579773 249.20057678]
[124.97705078 246.66799927]
[114.71485901 237.86790466]
[110.13053131 225.03488159]
[112.53213501 211.51058960]
[121.39356232 200.87365723]
[110.03024292 191.24432373]
[113.00913239 175.70608521]
[108.26814270 161.47503662]
[103.52714539 147.24397278]
[98.78614807 133.01292419]
[94.04515839 118.78186798]
[81.11705780 111.17501068]
[66.37447357 113.94197845]
[51.63188553 116.70894623]
[36.88929749 119.47591400]
[22.14670944 122.24288940]
[7.40412283 125.00985718]
[-7.33846474 127.77682495]
[-22.08105278 130.54379272]
[-36.53303528 139.40812683]
[-49.05165863 127.97483063]
[-41.53067780 112.78038788]
[-24.84802055 115.80120850]
[-10.10543442 113.03424072]
[4.63715315 110.26726532]
[19.37973976 107.50029755]
[34.12232590 104.73332977]
[48.86491394 101.96636200]
[63.60750198 99.19938660]
[78.35009003 96.43241882]
[81.41191101 89.58586884]
[67.71890259 83.46202087]
[73.84296417 69.76910400]
[87.53554535 75.89276886]
[90.59736633 69.04621887]
[82.83119965 56.21319199]
[75.06502533 43.38016510]
[67.29885101 30.54713821]
[59.53267670 17.71411133]
[51.76650620 4.88108635]
[44.00033188 -7.95194006]
[36.23415756 -20.78496552]
[20.82938194 -24.31602669]
[12.50429630 -37.74988174]
[16.19802856 -53.11646652]
[29.71915054 -61.29905701]
[45.04582214 -57.44306564]
[53.08500290 -43.83618546]
[49.06718445 -28.55113983]
[56.83335876 -15.71811295]
[64.59953308 -2.88508677]
[72.36569977 9.94793892]
[80.13187408 22.78096581]
[87.89804840 35.61399078]
[95.66422272 48.44701767]
[103.43039703 61.28004456]
[118.33755493 62.94634247]
[128.74555969 52.14479446]
[139.15356445 41.34325027]
[149.56156921 30.54170227]
[153.56541443 15.23549747]
[167.96809387 11.43920803]
[178.37609863 0.63766187]
[188.78410339 -10.16388416]
[199.19210815 -20.96543121]
[209.60012817 -31.76697731]
[204.71589661 -46.27224731]
[207.14350891 -61.38400650]
[216.32513428 -73.62968445]
[230.15087891 -80.19530487]
[245.44369507 -79.57214355]
[258.68939209 -71.90339661]
[266.84423828 -58.95129013]
[268.03430176 -43.69211578]
[261.98608398 -29.63232613]
[250.08944702 -20.00275421]
[235.07814026 -17.01620674]
[220.40167236 -21.35897064]
[209.99366760 -10.55742455]
[199.58564758 0.24412200]
[189.17764282 11.04566860]
[178.76963806 21.84721375]
[175.51025391 36.38082123]
[160.36312866 40.94971085]
[149.95510864 51.75125504]
[139.54710388 62.55280304]
[129.13909912 73.35434723]
[127.58393860 104.13293457]
[108.27621460 114.04087067]
[113.01720428 128.27192688]
[117.75820160 142.50299072]
[122.49919891 156.73403931]
[127.24018860 170.96510315]
[138.94262695 181.61233521]
[135.62461853 196.13267517]
[151.77452087 200.98419189]
[161.78327942 214.34930420]
[161.89218140 230.88079834]
[152.25523376 244.10903931]
[157.34678650 258.21847534]
[162.43832397 272.32791138]
[167.70397949 286.37329102]
[173.14294434 300.35247803]
[178.58192444 314.33166504]
[184.36500549 328.17205811]
[190.48863220 341.86514282]
[196.61227417 355.55825806]
[202.73591614 369.25134277]
[208.85955811 382.94445801]
[222.45271301 392.11822510]
[221.03480530 408.45596313]
[206.06445312 415.15078735]
[192.94187927 405.31564331]
[195.16645813 389.06808472]
[189.04281616 375.37500000]
[182.91917419 361.68188477]
[176.79553223 347.98876953]
[170.67189026 334.29568481]
[166.51107788 331.75674438]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 111]
[2 110]
[3 109]
[5 108]
[6 107]
[7 106]
[12 102]
[14 100]
[15 99]
[16 98]
[17 97]
[18 96]
[19 37]
[20 36]
[21 35]
[22 34]
[23 33]
[24 32]
[25 31]
[26 30]
[42 63]
[43 62]
[44 61]
[45 60]
[46 59]
[47 58]
[48 57]
[49 56]
[64 94]
[65 93]
[66 92]
[67 91]
[69 89]
[70 88]
[71 87]
[72 86]
[73 85]
[112 125]
[113 124]
[114 123]
[115 122]
[116 121]
] def

init

% Start Annotations
1 111 0.0 1 colorpair
2 110 0.0 1 colorpair
3 109 0.0 1 colorpair
5 108 0.0 1 colorpair
6 107 0.0 1 colorpair
7 106 0.0 1 colorpair
12 102 0.0 1 colorpair
14 100 0.0 1 colorpair
15 99 0.0 1 colorpair
16 98 0.0 1 colorpair
17 97 0.0 1 colorpair
18 96 0.0 1 colorpair
19 37 0.0 1 colorpair
20 36 0.0 1 colorpair
21 35 0.0 1 colorpair
22 34 0.0 1 colorpair
23 33 0.0 1 colorpair
24 32 0.0 1 colorpair
25 31 0.0 1 colorpair
26 30 0.0 1 colorpair
42 63 0.0 1 colorpair
43 62 0.0 1 colorpair
44 61 0.0 1 colorpair
45 60 0.0 1 colorpair
46 59 0.0 1 colorpair
47 58 0.0 1 colorpair
48 57 0.0 1 colorpair
49 56 0.0 1 colorpair
64 94 0.0 1 colorpair
65 93 0.0 1 colorpair
66 92 0.0 1 colorpair
67 91 0.0 1 colorpair
69 89 0.0 1 colorpair
70 88 0.0 1 colorpair
71 87 0.0 1 colorpair
72 86 0.0 1 colorpair
73 85 0.0 1 colorpair
112 125 0.0 1 colorpair
113 124 0.0 1 colorpair
114 123 0.0 1 colorpair
115 122 0.0 1 colorpair
116 121 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
