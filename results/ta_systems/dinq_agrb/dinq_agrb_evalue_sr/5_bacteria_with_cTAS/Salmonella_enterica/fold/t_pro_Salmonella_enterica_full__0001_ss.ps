%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 24 20:04:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAGUAAGUAUCGGGAGUCUGCUCCAUAUAAUGGAGUAAACGGAUGAUUGAUAAAGCAAUCAUCGUUCUGGGGGCACUAAUCUCACUUCUUGAACUGAUUCGCUACCUUCUCCAGUUGAUGGGC\
) } def
/len { sequence length } bind def

/coor [
[141.18965149 327.51519775]
[142.39186096 323.07949829]
[137.97053528 308.74591064]
[133.54920959 294.41232300]
[129.12788391 280.07873535]
[119.58462524 276.06695557]
[113.75275421 267.24761963]
[113.79933929 256.45361328]
[119.95378876 247.31825256]
[116.25242615 232.78208923]
[112.55107117 218.24594116]
[108.88175201 215.03439331]
[107.25904846 209.44308472]
[109.04682922 202.89285278]
[98.94107819 191.95104980]
[103.79051208 176.89137268]
[100.81832123 162.18879700]
[97.84613037 147.48620605]
[94.87393951 132.78361511]
[91.90174866 118.08103180]
[79.94475555 109.02396393]
[64.98670197 110.14491272]
[50.02864456 111.26586914]
[35.07058716 112.38681793]
[20.11253166 113.50776672]
[5.15447378 114.62872314]
[-9.80358315 115.74967194]
[-24.76164055 116.87062073]
[-40.10464096 124.08371735]
[-51.28320694 111.33711243]
[-42.12927628 97.06679535]
[-25.88259125 101.91256714]
[-10.92453480 100.79161072]
[4.03352261 99.67066193]
[18.99157906 98.54971313]
[33.94963837 97.42875671]
[48.90769196 96.30780792]
[63.86574936 95.18685913]
[78.82380676 94.06590271]
[82.65448761 87.61796570]
[69.75874329 79.95639801]
[77.42052460 67.06077576]
[90.31584930 74.72209167]
[94.14652252 68.27415466]
[87.97721863 54.60157013]
[81.80791473 40.92898178]
[75.63860321 27.25639343]
[69.46929932 13.58380604]
[63.29999161 -0.08878149]
[57.13068771 -13.76136971]
[50.96138000 -27.43395615]
[36.09195328 -32.78892899]
[29.43991089 -47.12510300]
[34.95178986 -61.93708038]
[49.35749435 -68.43717957]
[64.11036682 -62.76900864]
[70.45780182 -48.29538727]
[64.63396454 -33.60326385]
[70.80327606 -19.93067551]
[76.97257996 -6.25808811]
[83.14189148 7.41449976]
[89.31119537 21.08708763]
[95.48049927 34.75967407]
[101.64981079 48.43226242]
[107.81911469 62.10485077]
[122.40028381 65.62471008]
[134.12776184 56.27236557]
[145.85522461 46.92001724]
[157.58270264 37.56766891]
[163.54798889 22.91413879]
[178.32269287 21.02807999]
[190.05017090 11.67573261]
[201.77763367 2.32338572]
[213.50511169 -7.02896118]
[225.23258972 -16.38130760]
[222.28125000 -31.39957047]
[226.65841675 -46.06582260]
[237.35824585 -57.00986862]
[251.92201233 -61.71684265]
[267.00305176 -59.10512161]
[279.13583374 -49.77485657]
[285.53237915 -35.87007904]
[284.72277832 -20.58599663]
[276.89306641 -7.43478584]
[263.84246826 0.56150270]
[248.56991577 1.56538057]
[234.58493042 -4.65383625]
[222.85745239 4.69851112]
[211.12998962 14.05085850]
[199.40251160 23.40320587]
[187.67503357 32.75555038]
[182.54858398 46.74014282]
[166.93504333 49.29514313]
[155.20758057 58.64749146]
[143.48010254 67.99983978]
[131.75263977 77.35218048]
[126.74357605 107.38910675]
[106.60433197 115.10883331]
[109.57652283 129.81141663]
[112.54872131 144.51400757]
[115.52091217 159.21659851]
[118.49310303 173.91918945]
[128.81144714 185.91261292]
[123.74941254 199.92065430]
[127.08722687 214.54457092]
[130.78858948 229.08073425]
[134.48994446 243.61689758]
[149.22398376 257.26757812]
[143.46147156 275.65740967]
[147.88279724 289.99099731]
[152.30412292 304.32458496]
[156.72544861 318.65817261]
[161.85575867 332.75357056]
[167.68228149 346.57571411]
[173.50880432 360.39785767]
[187.76686096 367.75225830]
[190.76530457 383.51260376]
[180.20396423 395.58892822]
[164.18461609 394.71731567]
[154.99591064 381.56637573]
[159.68666077 366.22439575]
[153.86013794 352.40225220]
[148.03361511 338.58010864]
[145.36871338 337.41546631]
[143.03234863 335.06661987]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 112]
[3 111]
[4 110]
[5 109]
[9 107]
[10 106]
[11 105]
[14 104]
[16 102]
[17 101]
[18 100]
[19 99]
[20 98]
[21 39]
[22 38]
[23 37]
[24 36]
[25 35]
[26 34]
[27 33]
[28 32]
[44 65]
[45 64]
[46 63]
[47 62]
[48 61]
[49 60]
[50 59]
[51 58]
[66 96]
[67 95]
[68 94]
[69 93]
[71 91]
[72 90]
[73 89]
[74 88]
[75 87]
[113 123]
[114 122]
[115 121]
] def

init

% Start Annotations
2 112 0.0 1 colorpair
3 111 0.0 1 colorpair
4 110 0.0 1 colorpair
5 109 0.0 1 colorpair
9 107 0.0 1 colorpair
10 106 0.0 1 colorpair
11 105 0.0 1 colorpair
14 104 0.0 1 colorpair
16 102 0.0 1 colorpair
17 101 0.0 1 colorpair
18 100 0.0 1 colorpair
19 99 0.0 1 colorpair
20 98 0.0 1 colorpair
21 39 0.0 1 colorpair
22 38 0.0 1 colorpair
23 37 0.0 1 colorpair
24 36 0.0 1 colorpair
25 35 0.0 1 colorpair
26 34 0.0 1 colorpair
27 33 0.0 1 colorpair
28 32 0.0 1 colorpair
44 65 0.0 1 colorpair
45 64 0.0 1 colorpair
46 63 0.0 1 colorpair
47 62 0.0 1 colorpair
48 61 0.0 1 colorpair
49 60 0.0 1 colorpair
50 59 0.0 1 colorpair
51 58 0.0 1 colorpair
66 96 0.0 1 colorpair
67 95 0.0 1 colorpair
68 94 0.0 1 colorpair
69 93 0.0 1 colorpair
71 91 0.0 1 colorpair
72 90 0.0 1 colorpair
73 89 0.0 1 colorpair
74 88 0.0 1 colorpair
75 87 0.0 1 colorpair
113 123 0.0 1 colorpair
114 122 0.0 1 colorpair
115 121 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
