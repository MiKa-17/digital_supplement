%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 24 20:05:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGUAAGCGGAUGCAUUCUCACUCCAUCGCAUGGAGAAAACGGGUGAUUGAUAAAGCAAUCAUCGUUCUAGGGGCGUUAAUUGCGCUGCUGGAACUGAUCCGCUUUCUGCUUCAGCUUCUGAAC\
) } def
/len { sequence length } bind def

/coor [
[132.38287354 289.34478760]
[130.76374817 278.77447510]
[133.75709534 268.42364502]
[140.87478638 260.22622681]
[136.13378906 245.99516296]
[124.77046204 236.36581421]
[127.74935913 220.82759094]
[123.00836182 206.59652710]
[118.26736450 192.36547852]
[113.52637482 178.13441467]
[108.78537750 163.90336609]
[104.04438019 149.67230225]
[99.30339050 135.44125366]
[94.56239319 121.21018982]
[98.65630341 135.64071655]
[94.67340851 150.10226440]
[83.76850128 160.40191650]
[69.10330200 163.55342102]
[54.92979813 158.64303589]
[45.35741043 147.09446716]
[43.16152573 132.25607300]
[48.97880936 118.43003845]
[61.12261963 109.62504578]
[76.06961060 108.39352417]
[61.07993698 108.94997406]
[46.09026337 109.50643158]
[31.10058784 110.06288147]
[16.11091232 110.61933899]
[1.12123728 111.17578888]
[-14.48269176 117.80554962]
[-25.17295647 104.64672852]
[-15.48774719 90.73152161]
[0.56478369 96.18611145]
[15.55445862 95.62966156]
[30.54413414 95.07320404]
[45.53380966 94.51675415]
[60.52348328 93.96029663]
[75.51316071 93.40384674]
[79.55376434 87.08534241]
[64.56918335 86.40540314]
[57.66565704 73.08844757]
[65.74664307 60.45128632]
[80.73123169 61.13095093]
[87.63497925 74.44833374]
[91.67559052 68.12982941]
[85.89250946 54.28945160]
[80.10943604 40.44907379]
[74.32636261 26.60869789]
[68.54328918 12.76832104]
[62.76021194 -1.07205641]
[56.97713852 -14.91243362]
[51.19406128 -28.75281143]
[36.48081207 -34.52306747]
[30.23381996 -49.04032135]
[36.15931320 -63.69173813]
[50.74179840 -69.78489685]
[65.32975006 -63.70483398]
[71.26839447 -49.05874252]
[65.03443909 -34.53588486]
[70.81751251 -20.69550896]
[76.60058594 -6.85513163]
[82.38366699 6.98524570]
[88.16674042 20.82562256]
[93.94981384 34.66600037]
[99.73288727 48.50637817]
[105.51596832 62.34675598]
[120.01282501 66.19916534]
[131.90370178 57.05548096]
[143.79458618 47.91180038]
[155.68547058 38.76811600]
[167.57635498 29.62443542]
[179.46723938 20.48075294]
[191.35812378 11.33707047]
[197.58137512 -3.20877719]
[212.38710022 -4.83349752]
[224.27798462 -13.97717953]
[236.16885376 -23.12086296]
[248.05973816 -32.26454544]
[259.95062256 -41.40822601]
[263.44567871 -57.06594849]
[277.92904663 -63.96604156]
[292.29034424 -56.81534195]
[295.51281738 -41.09926224]
[285.12445068 -28.87382507]
[269.09429932 -29.51734543]
[257.20343018 -20.37366295]
[245.31254578 -11.22998047]
[233.42166138 -2.08629775]
[221.53077698 7.05738449]
[216.15803528 20.94921494]
[200.50180054 23.22795296]
[188.61091614 32.37163544]
[176.72003174 41.51531601]
[164.82914734 50.65900040]
[152.93827820 59.80268097]
[141.04739380 68.94636536]
[129.15650940 78.09004974]
[130.46365356 97.87937927]
[121.52720642 111.91278076]
[108.79344940 116.46919250]
[113.53444672 130.70025635]
[118.27544403 144.93130493]
[123.01643372 159.16236877]
[127.75743103 173.39341736]
[132.49842834 187.62448120]
[137.23942566 201.85552979]
[141.98040771 216.08659363]
[153.68284607 226.73382568]
[150.36483765 241.25416565]
[155.10583496 255.48521423]
[173.47909546 263.36019897]
[180.19953918 281.86679077]
[171.43232727 299.15966797]
[177.21540833 313.00006104]
[182.99847412 326.84042358]
[188.78155518 340.68081665]
[194.56463623 354.52117920]
[206.25013733 366.80471802]
[197.68150330 381.43395996]
[181.25193787 377.25000000]
[180.72425842 360.30426025]
[174.94117737 346.46386719]
[169.15809631 332.62350464]
[163.37503052 318.78311157]
[157.59194946 304.94274902]
[147.21542358 303.70974731]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 110]
[5 109]
[7 107]
[8 106]
[9 105]
[10 104]
[11 103]
[12 102]
[13 101]
[14 100]
[24 38]
[25 37]
[26 36]
[27 35]
[28 34]
[29 33]
[45 66]
[46 65]
[47 64]
[48 63]
[49 62]
[50 61]
[51 60]
[52 59]
[67 97]
[68 96]
[69 95]
[70 94]
[71 93]
[72 92]
[73 91]
[75 89]
[76 88]
[77 87]
[78 86]
[79 85]
[113 125]
[114 124]
[115 123]
[116 122]
[117 121]
] def

init

% Start Annotations
4 110 0.0 1 colorpair
5 109 0.0 1 colorpair
7 107 0.0 0.6 colorpair
8 106 0.0 1 colorpair
9 105 0.0 1 colorpair
10 104 0.16 1 colorpair
11 103 0.0 0.6 colorpair
12 102 0.0 0.6 colorpair
13 101 0.0 0.6 colorpair
14 100 0.0 0.6 colorpair
24 38 0.0 1 colorpair
25 37 0.0 1 colorpair
26 36 0.0 1 colorpair
27 35 0.0 1 colorpair
28 34 0.0 1 colorpair
29 33 0.0 1 colorpair
45 66 0.0 1 colorpair
46 65 0.16 1 colorpair
47 64 0.0 1 colorpair
48 63 0.0 1 colorpair
49 62 0.0 1 colorpair
50 61 0.0 1 colorpair
51 60 0.0 1 colorpair
52 59 0.0 1 colorpair
67 97 0.0 1 colorpair
68 96 0.0 1 colorpair
69 95 0.0 1 colorpair
70 94 0.0 1 colorpair
71 93 0.0 0.6 colorpair
72 92 0.16 0.6 colorpair
73 91 0.0 1 colorpair
75 89 0.0 1 colorpair
76 88 0.0 1 colorpair
77 87 0.0 1 colorpair
78 86 0.0 0.6 colorpair
79 85 0.0 0.6 colorpair
113 125 0.16 1 colorpair
114 124 0.16 1 colorpair
115 123 0.0 1 colorpair
116 122 0.0 1 colorpair
117 121 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
7 107 1 gmark
10 cmark
11 103 1 gmark
12 102 1 gmark
13 101 1 gmark
14 100 1 gmark
46 cmark
71 93 1 gmark
72 92 1 gmark
72 cmark
78 86 1 gmark
79 85 1 gmark
125 cmark
114 cmark
124 cmark
117 121 1 gmark

% End Annotations
showpage
end
%%EOF
