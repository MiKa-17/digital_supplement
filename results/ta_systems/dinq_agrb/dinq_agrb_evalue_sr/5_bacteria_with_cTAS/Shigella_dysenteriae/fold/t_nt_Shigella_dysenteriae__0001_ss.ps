%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 24 20:05:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGUAAGCGGAUGCAUUCUCACUCCAUCGCAUGGAGAAAACGGGUGAUUGAUAAAGCAAUCAUCGUUCUAGGGGCGUUAAUUGCGCUGCUGGAACUGAUCCGCUUUCUGCUUCAGCUUCUGAACUGA\
) } def
/len { sequence length } bind def

/coor [
[140.01649475 279.24340820]
[141.22306824 270.80770874]
[144.91902161 263.09164429]
[150.78244019 256.81457520]
[145.12602234 242.92193604]
[133.16053772 234.05195618]
[135.12266541 218.35289001]
[129.46623230 204.46028137]
[123.80981445 190.56765747]
[118.15338898 176.67503357]
[112.49697113 162.78240967]
[106.84054565 148.88980103]
[101.18412781 134.99717712]
[95.52770233 121.10455322]
[100.34106445 135.31129456]
[97.08936310 149.95460510]
[86.71539307 160.78884888]
[72.22694397 164.67277527]
[57.82475281 160.48028564]
[47.68454361 149.42695618]
[44.74633408 134.71754456]
[49.86201859 120.61684418]
[61.54837418 111.21317291]
[76.41467285 109.23265076]
[61.45407486 110.31917572]
[46.49348068 111.40569305]
[31.53288269 112.49221802]
[16.57228470 113.57874298]
[1.61168742 114.66526031]
[-13.74787235 121.84302521]
[-24.89707375 109.07072449]
[-15.71032524 94.82151031]
[0.52516538 99.70466614]
[15.48576260 98.61814117]
[30.44635963 97.53161621]
[45.40695572 96.44509888]
[60.36755371 95.35857391]
[75.32814789 94.27205658]
[79.05196381 87.76181030]
[64.05208588 87.82231903]
[56.49966431 74.86234283]
[63.94704056 61.84172440]
[78.94691467 61.78094101]
[86.49958038 74.74132538]
[90.22338867 68.23108673]
[83.57551575 54.78468323]
[76.92764282 41.33827972]
[70.27976990 27.89187622]
[63.63189697 14.44547081]
[56.98402023 0.99906719]
[50.33614731 -12.44733715]
[43.68827438 -25.89374161]
[28.63916969 -30.72074127]
[21.48544693 -44.81328583]
[26.47128677 -59.81051636]
[40.63867569 -66.81484222]
[55.58235550 -61.67072296]
[62.43650436 -47.43007278]
[57.13467789 -32.54161453]
[63.78255463 -19.09520912]
[70.43042755 -5.64880610]
[77.07830048 7.79759789]
[83.72617340 21.24400139]
[90.37404633 34.69040680]
[97.02191925 48.13681030]
[103.66979218 61.58321381]
[118.42408752 64.28704071]
[129.40812683 54.07180023]
[140.39215088 43.85656357]
[151.37617493 33.64132690]
[162.36021423 23.42608833]
[173.34423828 13.21085072]
[184.32827759 2.99561262]
[189.16447449 -12.06830597]
[203.75349426 -15.06999779]
[214.73751831 -25.28523636]
[225.72154236 -35.50047302]
[236.70558167 -45.71570969]
[247.68960571 -55.93095016]
[249.70561218 -71.84683228]
[263.48052979 -80.07065582]
[278.44741821 -74.29381561]
[283.12496948 -58.94780350]
[273.92495728 -45.80476379]
[257.90484619 -44.94691849]
[246.92082214 -34.73168182]
[235.93678284 -24.51644325]
[224.95275879 -14.30120564]
[213.96871948 -4.08596754]
[209.91816711 10.24728870]
[194.54350281 13.97964287]
[183.55947876 24.19487953]
[172.57545471 34.41011810]
[161.59141541 44.62535477]
[150.60739136 54.84059525]
[139.62335205 65.05583191]
[128.63932800 75.27107239]
[130.97750854 95.83119965]
[122.27523041 110.61531067]
[109.42031860 115.44813538]
[115.07674408 129.34075928]
[120.73316956 143.23336792]
[126.38958740 157.12599182]
[132.04600525 171.01861572]
[137.70243835 184.91123962]
[143.35885620 198.80384827]
[149.01527405 212.69647217]
[161.38534546 222.56015015]
[159.01864624 237.26551819]
[164.67506409 251.15814209]
[186.05769348 257.84927368]
[195.69227600 277.78051758]
[187.84509277 298.19461060]
[195.44949341 311.12417603]
[203.05389404 324.05371094]
[210.65829468 336.98324585]
[218.26269531 349.91281128]
[231.50425720 360.50039673]
[224.99604797 376.15542603]
[208.15118408 374.23529053]
[205.33314514 357.51721191]
[197.72874451 344.58764648]
[190.12434387 331.65811157]
[182.51995850 318.72857666]
[174.91555786 305.79901123]
[166.65309143 306.75308228]
[158.45147705 305.17846680]
[151.06983948 301.20016479]
[145.19763184 295.16656494]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 110]
[5 109]
[7 107]
[8 106]
[9 105]
[10 104]
[11 103]
[12 102]
[13 101]
[14 100]
[24 38]
[25 37]
[26 36]
[27 35]
[28 34]
[29 33]
[45 66]
[46 65]
[47 64]
[48 63]
[49 62]
[50 61]
[51 60]
[52 59]
[67 97]
[68 96]
[69 95]
[70 94]
[71 93]
[72 92]
[73 91]
[75 89]
[76 88]
[77 87]
[78 86]
[79 85]
[113 125]
[114 124]
[115 123]
[116 122]
[117 121]
] def

init

% Start Annotations
4 110 0.0 1 colorpair
5 109 0.0 1 colorpair
7 107 0.0 0.6 colorpair
8 106 0.0 1 colorpair
9 105 0.0 1 colorpair
10 104 0.16 1 colorpair
11 103 0.0 0.6 colorpair
12 102 0.0 0.6 colorpair
13 101 0.0 0.6 colorpair
14 100 0.0 0.6 colorpair
24 38 0.0 1 colorpair
25 37 0.0 1 colorpair
26 36 0.0 1 colorpair
27 35 0.0 1 colorpair
28 34 0.0 1 colorpair
29 33 0.0 1 colorpair
45 66 0.0 1 colorpair
46 65 0.16 1 colorpair
47 64 0.0 1 colorpair
48 63 0.0 1 colorpair
49 62 0.0 1 colorpair
50 61 0.0 1 colorpair
51 60 0.0 1 colorpair
52 59 0.0 1 colorpair
67 97 0.0 1 colorpair
68 96 0.0 1 colorpair
69 95 0.0 1 colorpair
70 94 0.0 1 colorpair
71 93 0.0 0.6 colorpair
72 92 0.16 0.6 colorpair
73 91 0.0 1 colorpair
75 89 0.0 1 colorpair
76 88 0.0 1 colorpair
77 87 0.0 1 colorpair
78 86 0.0 0.6 colorpair
79 85 0.0 0.6 colorpair
113 125 0.16 1 colorpair
114 124 0.16 1 colorpair
115 123 0.0 1 colorpair
116 122 0.0 1 colorpair
117 121 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
7 107 1 gmark
10 cmark
11 103 1 gmark
12 102 1 gmark
13 101 1 gmark
14 100 1 gmark
46 cmark
71 93 1 gmark
72 92 1 gmark
72 cmark
78 86 1 gmark
79 85 1 gmark
125 cmark
114 cmark
124 cmark
117 121 1 gmark

% End Annotations
showpage
end
%%EOF
