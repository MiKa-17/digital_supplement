%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 24 20:04:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGUAAGCGGAUGCAUUCUCACUCCAUCGCAUGGAGAAAACGGGUGAUUGAUAAAGCAAUCAUCGUUCUAGGGGCGUUAAUUGCGCUGCUGGAACUGAUCCGCUUUCUGCUUCAGCUUCUGAAC\
) } def
/len { sequence length } bind def

/coor [
[104.37512207 144.78765869]
[106.14733124 129.89271545]
[97.45105743 142.11462402]
[88.75478363 154.33651733]
[80.05850983 166.55841064]
[84.83877563 181.20271301]
[80.13439941 195.68449402]
[67.94881439 204.51487732]
[53.07815552 204.47709656]
[44.38188171 216.69898987]
[43.36865997 233.06681824]
[28.56855011 240.13000488]
[15.20663548 230.62257385]
[17.02850723 214.32495117]
[32.15998077 208.00271606]
[40.85625458 195.78082275]
[35.94631195 181.74406433]
[40.29471207 167.33728027]
[52.43447876 158.14601135]
[67.83660889 157.86215210]
[76.53288269 145.64024353]
[85.22915649 133.41835022]
[93.92543030 121.19644928]
[86.80339813 107.99505615]
[71.81372833 108.55151367]
[56.82405090 109.10796356]
[41.83437347 109.66442108]
[26.84469986 110.22087097]
[11.85502529 110.77732086]
[-3.74890447 117.40708160]
[-14.43916893 104.24826050]
[-4.75395918 90.33305359]
[11.29857159 95.78765106]
[26.28824615 95.23119354]
[41.27791977 94.67474365]
[56.26759720 94.11828613]
[71.25727081 93.56183624]
[86.24694824 93.00537872]
[72.82549286 86.30728149]
[57.85747910 85.32820129]
[43.42238617 81.25045013]
[30.15444374 74.25318146]
[18.63660431 64.64384460]
[9.37492561 52.84463882]
[2.77633572 39.37398148]
[-0.86924398 24.82373047]
[-1.40163815 9.83318138]
[1.20254469 -4.93902969]
[6.82888508 -18.84386063]
[15.23017979 -31.27037430]
[26.03730202 -41.67259216]
[38.77542114 -49.59346771]
[52.88486481 -54.68499374]
[67.74570465 -56.72345352]
[82.70501709 -55.61928940]
[97.10551453 -51.42101288]
[110.31450653 -44.31308365]
[121.75161743 -34.60780334]
[130.91433716 -22.73159027]
[137.40010071 -9.20624447]
[140.92391968 5.37396955]
[141.33099365 20.36844444]
[138.60342407 35.11837387]
[132.86103821 48.97568512]
[124.35617065 61.33153915]
[113.46261597 71.64294434]
[107.41110229 85.36807251]
[119.30198669 76.22438812]
[131.19287109 67.08070374]
[143.08375549 57.93702316]
[154.97462463 48.79333878]
[161.19787598 34.24749374]
[176.00361633 32.62277222]
[182.22686768 18.07692528]
[197.03259277 16.45220375]
[208.92347717 7.30852222]
[220.81436157 -1.83516026]
[232.70523071 -10.97884274]
[244.59611511 -20.12252426]
[248.09115601 -35.78024673]
[262.57455444 -42.68033981]
[276.93585205 -35.52964020]
[280.15832520 -19.81355858]
[269.76992798 -7.58812332]
[253.73980713 -8.23164272]
[241.84892273 0.91203940]
[229.95803833 10.05572128]
[218.06715393 19.19940376]
[206.17626953 28.34308624]
[200.80352783 42.23491669]
[185.14729309 44.51365280]
[179.77455139 58.40548325]
[164.11831665 60.68422318]
[152.22743225 69.82790375]
[140.33654785 78.97158813]
[128.44566345 88.11527252]
[116.55478668 97.25894928]
[131.37373352 94.93540955]
[143.54829407 86.17299652]
[157.13069153 79.80757141]
[171.65443420 76.05775452]
[186.62069702 75.05232239]
[201.51548767 76.82580566]
[215.82723999 81.31730652]
[229.06443787 88.37255096]
[240.77246094 97.74924469]
[250.54919434 109.12533569]
[258.05883789 122.11013794]
[263.04351807 136.25767517]
[265.33203125 151.08207703]
[264.84576416 166.07418823]
[261.60144043 180.71913147]
[255.71043396 194.51391602]
[247.37512207 206.98478699]
[236.88175964 217.70343018]
[224.59072876 226.30171204]
[210.92414856 232.48432922]
[196.35140991 236.03897095]
[181.37301636 236.84352112]
[166.50335693 234.87036133]
[152.25314331 230.18725586]
[139.11178589 222.95504761]
[127.53062439 213.42211914]
[117.90740204 201.91589355]
[110.57261658 188.83151245]
[105.77819061 174.61836243]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 23]
[3 22]
[4 21]
[5 20]
[9 16]
[10 15]
[24 38]
[25 37]
[26 36]
[27 35]
[28 34]
[29 33]
[67 97]
[68 96]
[69 95]
[70 94]
[71 93]
[73 91]
[75 89]
[76 88]
[77 87]
[78 86]
[79 85]
] def

init

% Start Annotations
2 23 0.0 1 colorpair
3 22 0.0 1 colorpair
4 21 0.0 1 colorpair
5 20 0.0 1 colorpair
9 16 0.0 1 colorpair
10 15 0.0 1 colorpair
24 38 0.0 1 colorpair
25 37 0.0 1 colorpair
26 36 0.0 1 colorpair
27 35 0.0 1 colorpair
28 34 0.0 1 colorpair
29 33 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
67 97 8 gmark
68 96 8 gmark
69 95 8 gmark
70 94 8 gmark
71 93 8 gmark
73 91 8 gmark
75 89 8 gmark
76 88 8 gmark
77 87 8 gmark
78 86 8 gmark
79 85 8 gmark

% End Annotations
showpage
end
%%EOF
