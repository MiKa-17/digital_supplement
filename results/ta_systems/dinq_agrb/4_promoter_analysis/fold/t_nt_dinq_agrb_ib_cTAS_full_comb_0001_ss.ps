%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Dec 17 05:51:20 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__GAGUAAGCGGAUGCAUUCUCACUCCAUCGCAUGGAGAAAACGGGUGAUUGAUAAAGCAAUCAUCGUUCUUGGGGCGUUAAUUGCGCAGCUGGAACUGAUCCGCUUUCUGCUUCAGCUUCUGAACUGA\
) } def
/len { sequence length } bind def

/coor [
[83.63784027 346.67855835]
[73.88733673 335.11209106]
[68.19017792 321.09790039]
[67.10449219 306.00894165]
[70.73666382 291.32348633]
[78.73083496 278.48028564]
[90.30382538 268.73751831]
[104.32183075 263.04974365]
[103.23530579 248.08915710]
[102.14878845 233.12855530]
[88.68465424 226.75810242]
[80.16027069 214.42153931]
[78.94735718 199.37510681]
[85.47148895 185.65167236]
[98.07095337 176.97984314]
[96.98442841 162.01924133]
[95.89791107 147.05863953]
[87.59202576 145.57833862]
[79.68196106 142.64410400]
[72.42002106 138.34954834]
[66.03787994 132.83164978]
[60.73911667 126.26644135]
[56.69275665 118.86334229]
[54.02788162 110.85850525]
[39.06728363 111.94503021]
[24.10668564 113.03154755]
[9.14608860 114.11807251]
[-5.81450844 115.20458984]
[-20.77510452 116.29111481]
[-36.13466644 123.46887970]
[-47.28386688 110.69657898]
[-38.09711838 96.44736481]
[-21.86162758 101.33052063]
[-6.90103006 100.24399567]
[8.05956745 99.15747070]
[23.02016449 98.07095337]
[37.98076248 96.98442841]
[52.94136047 95.89791107]
[53.92541885 87.30701447]
[56.48249054 78.94164276]
[60.56228256 71.09053040]
[66.06140137 64.03141022]
[72.82573700 58.02122498]
[80.65462494 53.28684998]
[89.30675507 50.01666641]
[82.65888214 36.57025909]
[76.01100922 23.12385559]
[69.36313629 9.67745209]
[62.71525955 -3.76895165]
[56.06738663 -17.21535492]
[49.41951370 -30.66176033]
[42.77164078 -44.10816193]
[27.72253418 -48.93516541]
[20.56881332 -63.02770996]
[25.55465126 -78.02494049]
[39.72204208 -85.02926636]
[54.66572189 -79.88514709]
[61.51987076 -65.64449310]
[56.21804428 -50.75603867]
[62.86591721 -37.30963135]
[69.51379395 -23.86322975]
[76.16166687 -10.41682434]
[82.80953979 3.02957916]
[89.45741272 16.47598267]
[96.10528564 29.92238808]
[102.75315857 43.36878967]
[117.50745392 46.07261658]
[128.49148560 35.85737991]
[139.47550964 25.64214134]
[150.45954895 15.42690372]
[154.66925049 7.20346165]
[161.83459473 5.10149717]
[173.06225586 -4.84534264]
[184.28991699 -14.79218292]
[178.70181274 -28.88291740]
[178.27311707 -44.03521347]
[183.05561829 -58.41935349]
[192.47180176 -70.29838562]
[205.38459778 -78.23786163]
[220.23475647 -81.27904510]
[235.22901917 -79.05470276]
[248.55677795 -71.83342743]
[258.60864258 -60.48723602]
[264.17077637 -46.38622665]
[264.57153320 -31.23316765]
[259.76254272 -16.85786438]
[250.32447815 -4.99620485]
[237.39706421 2.91945815]
[222.54133606 5.93326998]
[207.55119324 3.68129802]
[194.23675537 -3.56452131]
[183.00909424 6.38231850]
[171.78143311 16.32915878]
[160.67478943 26.41093254]
[149.69075012 36.62617111]
[138.70672607 46.84140778]
[127.72269440 57.05664825]
[134.74864197 62.92156601]
[140.57740784 69.90798950]
[145.03552246 77.77813721]
[147.99571228 86.26850128]
[149.38046265 95.09868622]
[149.16397095 103.98065186]
[147.37234497 112.62810516]
[144.08215332 120.76573944]
[139.41737366 128.13796997]
[133.54476929 134.51699829]
[126.66805267 139.70979309]
[119.02078247 143.56396484]
[110.85850525 145.97212219]
[111.94503021 160.93272400]
[113.03154755 175.89331055]
[126.75178528 182.65367126]
[135.19033813 195.29042053]
[136.16419983 210.35421753]
[129.51176453 223.79301453]
[117.10938263 232.04203796]
[118.19590759 247.00263977]
[119.28242493 261.96322632]
[133.97515869 265.56585693]
[146.83442688 273.53421021]
[156.60040283 285.08758545]
[162.31634521 299.09414673]
[163.42225647 314.18161011]
[159.80976868 328.87191772]
[151.83280945 341.72586060]
[140.27288818 351.48410034]
[126.26251984 357.19064331]
[111.17430115 358.28643799]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 119]
[9 118]
[10 117]
[15 112]
[16 111]
[17 110]
[24 38]
[25 37]
[26 36]
[27 35]
[28 34]
[29 33]
[45 66]
[46 65]
[47 64]
[48 63]
[49 62]
[50 61]
[51 60]
[52 59]
[67 97]
[68 96]
[69 95]
[70 94]
[72 93]
[73 92]
[74 91]
] def

init

% Start Annotations
8 119 0.0 0.6 colorpair
9 118 0.16 0.6 colorpair
15 112 0.0 1 colorpair
16 111 0.32 1 colorpair
17 110 0.16 1 colorpair
24 38 0.16 1 colorpair
25 37 0.16 1 colorpair
26 36 0.0 1 colorpair
27 35 0.16 1 colorpair
28 34 0.16 1 colorpair
29 33 0.0 1 colorpair
45 66 0.0 1 colorpair
46 65 0.16 1 colorpair
47 64 0.0 1 colorpair
48 63 0.0 1 colorpair
49 62 0.0 1 colorpair
50 61 0.0 1 colorpair
51 60 0.0 1 colorpair
52 59 0.16 1 colorpair
67 97 0.16 0.2 colorpair
68 96 0.16 1 colorpair
69 95 0.0 1 colorpair
70 94 0.0 0.2 colorpair
73 92 0.16 1 colorpair
74 91 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
8 119 1 gmark
9 118 1 gmark
118 cmark
10 117 4 gmark
10 cmark
16 cmark
111 cmark
17 cmark
24 cmark
38 cmark
25 cmark
37 cmark
27 cmark
35 cmark
28 cmark
34 cmark
46 cmark
52 cmark
59 cmark
67 97 2 gmark
97 cmark
96 cmark
70 94 2 gmark
72 93 4 gmark
72 cmark
93 cmark
73 cmark
91 cmark

% End Annotations
showpage
end
%%EOF
