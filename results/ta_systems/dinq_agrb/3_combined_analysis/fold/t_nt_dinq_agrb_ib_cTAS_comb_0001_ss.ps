%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Dec 17 05:49:49 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__GAGUAAGCGGAUGCAUUCUCACUCCAUCGCAUGGAGAAAACGGGUGAUUGAUAAAGCAAUCAUCGUUCUGGGGGCGUUAAUUGCGCUGCUGGAACUGAUCCGCUUCCUGCUUCAGCUUCUGAACUGA\
) } def
/len { sequence length } bind def

/coor [
[113.07611084 219.34768677]
[114.28267670 210.91198730]
[117.97863770 203.19592285]
[123.84205627 196.91883850]
[118.18563843 183.02621460]
[104.40254211 177.49794006]
[98.46821594 163.48942566]
[104.36022949 149.06993103]
[98.70381165 135.17730713]
[93.04738617 121.28469086]
[91.35088348 136.18844604]
[95.27248383 150.66674805]
[92.73119354 165.44990540]
[84.19983673 177.78749084]
[71.26569366 185.38406372]
[56.33518600 186.82626343]
[42.18616867 181.84576416]
[31.45110321 171.36920166]
[26.12726974 157.34576416]
[27.20517921 142.38453674]
[34.48428726 129.26910400]
[46.61029434 120.43961334]
[61.32610321 117.53878784]
[73.93435669 109.41278839]
[58.97375870 110.49930573]
[44.01316452 111.58583069]
[29.05256653 112.67234802]
[14.09196854 113.75887299]
[-0.86862886 114.84539795]
[-16.22818947 122.02315521]
[-27.37738991 109.25085449]
[-18.19064140 95.00164795]
[-1.95515084 99.88479614]
[13.00544643 98.79827881]
[27.96604347 97.71175385]
[42.92663956 96.62522888]
[57.88723755 95.53871155]
[72.84783173 94.45218658]
[76.57164764 87.94194794]
[61.57176590 88.00245667]
[54.01934814 75.04248047]
[61.46672440 62.02185822]
[76.46659851 61.96107483]
[84.01926422 74.92146301]
[87.74307251 68.41122437]
[81.09519958 54.96481705]
[74.44732666 41.51841354]
[67.79945374 28.07201004]
[61.15158081 14.62560558]
[54.50370407 1.17920160]
[47.85583115 -12.26720238]
[41.20795822 -25.71360588]
[26.15885353 -30.54060745]
[19.00513077 -44.63315201]
[23.99097061 -59.63038254]
[38.15835953 -66.63471222]
[53.10203934 -61.49058914]
[59.95618820 -47.24993896]
[54.65436172 -32.36148071]
[61.30223846 -18.91507530]
[67.95011139 -5.46867180]
[74.59798431 7.97773266]
[81.24585724 21.42413712]
[87.89373016 34.87054062]
[94.54160309 48.31694412]
[101.18947601 61.76334763]
[115.94377136 64.46717072]
[126.92780304 54.25193787]
[137.91183472 44.03669739]
[148.89585876 33.82146072]
[149.62893677 18.26188660]
[160.91383362 8.05865383]
[175.74298096 8.85341740]
[180.57919312 -6.21050119]
[195.16819763 -9.21219254]
[206.15223694 -19.42743111]
[217.13626099 -29.64266777]
[214.30427551 -44.80787277]
[220.14195251 -59.08810806]
[232.78649902 -67.92660522]
[248.20309448 -68.50302887]
[261.47235107 -60.63344574]
[268.36010742 -46.82901382]
[266.66848755 -31.49467278]
[256.93731689 -19.52355766]
[242.27172852 -14.73560715]
[227.35150146 -18.65863800]
[216.36747742 -8.44340038]
[205.38343811 1.77183723]
[201.33288574 16.10509300]
[185.95822144 19.83744812]
[185.67675781 34.68521881]
[174.68290710 45.20139694]
[159.11109924 44.80549240]
[148.12707520 55.02072906]
[137.14303589 65.23596954]
[126.15901184 75.45120239]
[129.42123413 84.63467407]
[129.84643555 93.67189789]
[127.77193451 101.76407623]
[123.74144745 108.28614044]
[118.43612671 112.83495331]
[112.59606934 115.25328064]
[106.94000244 115.62826538]
[112.59642792 129.52088928]
[118.25285339 143.41351318]
[132.54135132 149.61643982]
[138.07986450 163.78611755]
[132.07826233 177.36979675]
[137.73468018 191.26240540]
[159.11730957 197.95353699]
[168.75189209 217.88478088]
[160.90470886 238.29890442]
[168.50910950 251.22843933]
[176.11351013 264.15798950]
[183.71791077 277.08752441]
[191.32231140 290.01708984]
[204.56387329 300.60467529]
[198.05566406 316.25970459]
[181.21080017 314.33956909]
[178.39276123 297.62149048]
[170.78836060 284.69192505]
[163.18395996 271.76239014]
[155.57955933 258.83285522]
[147.97517395 245.90328979]
[139.71270752 246.85734558]
[131.51107788 245.28274536]
[124.12944794 241.30444336]
[118.25724030 235.27084351]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 110]
[5 109]
[8 106]
[9 105]
[10 104]
[24 38]
[25 37]
[26 36]
[27 35]
[28 34]
[29 33]
[45 66]
[46 65]
[47 64]
[48 63]
[49 62]
[50 61]
[51 60]
[52 59]
[67 97]
[68 96]
[69 95]
[70 94]
[73 91]
[75 89]
[76 88]
[77 87]
[113 125]
[114 124]
[115 123]
[116 122]
[117 121]
] def

init

% Start Annotations
4 110 0.0 1 colorpair
5 109 0.16 1 colorpair
8 106 0.0 1 colorpair
9 105 0.0 1 colorpair
10 104 0.16 1 colorpair
24 38 0.16 1 colorpair
25 37 0.16 1 colorpair
26 36 0.0 1 colorpair
27 35 0.16 1 colorpair
28 34 0.16 1 colorpair
29 33 0.0 1 colorpair
45 66 0.0 1 colorpair
46 65 0.16 1 colorpair
47 64 0.0 1 colorpair
48 63 0.0 1 colorpair
49 62 0.0 1 colorpair
50 61 0.0 1 colorpair
51 60 0.0 1 colorpair
52 59 0.16 1 colorpair
67 97 0.16 0.6 colorpair
68 96 0.16 1 colorpair
69 95 0.0 1 colorpair
70 94 0.0 0.6 colorpair
73 91 0.16 1 colorpair
75 89 0.32 0.6 colorpair
76 88 0.16 0.6 colorpair
77 87 0.0 0.2 colorpair
113 125 0.16 0.6 colorpair
114 124 0.16 0.2 colorpair
115 123 0.0 1 colorpair
116 122 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
109 cmark
10 cmark
24 cmark
38 cmark
25 cmark
37 cmark
27 cmark
35 cmark
28 cmark
34 cmark
46 cmark
52 cmark
59 cmark
67 97 1 gmark
97 cmark
96 cmark
70 94 1 gmark
73 cmark
91 cmark
75 89 1 gmark
75 cmark
89 cmark
76 88 1 gmark
88 cmark
77 87 2 gmark
113 125 1 gmark
125 cmark
114 124 2 gmark
114 cmark
124 cmark
116 122 1 gmark
117 121 4 gmark
117 cmark
121 cmark

% End Annotations
showpage
end
%%EOF
