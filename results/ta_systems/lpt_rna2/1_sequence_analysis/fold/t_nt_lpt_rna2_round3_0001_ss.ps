%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Dec 16 18:17:39 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUAAAGGUGGUGAUAGUUCAUGAAUUCAUUCGAUAAAGCGAUCAUCGCGCCGCUGCUUGUCGGUGUGUUUCUGCUUUUGUUGAAAUACGCGCUGGAUAACCACAAGUAGUGUGAGUAGCGACUAAUUCCAGCACCUGGCACCGGGUCAUCAUCUUCUUGCGGAGAUGAUGGCUUUU\
) } def
/len { sequence length } bind def

/coor [
[315.93032837 408.25723267]
[306.85995483 396.31036377]
[297.78955078 384.36346436]
[294.33496094 383.53134155]
[291.11825562 380.96740723]
[288.95681763 376.80490112]
[288.57598877 371.54064941]
[280.14691162 359.13296509]
[271.71786499 346.72528076]
[263.28878784 334.31756592]
[254.85971069 321.90988159]
[241.30763245 315.73004150]
[239.95292664 299.96694946]
[231.52384949 287.55926514]
[212.22825623 280.27868652]
[210.88768005 258.91027832]
[201.81730652 246.96337891]
[192.74691772 235.01649475]
[183.67652893 223.06961060]
[174.60615540 211.12272644]
[162.60815430 213.17626953]
[150.80889893 209.90342712]
[141.47346497 201.86854553]
[136.42111206 190.55619812]
[136.67088318 178.09707642]
[142.23678589 166.86677551]
[133.59126282 154.60893250]
[124.94572449 142.35108948]
[116.30020142 130.09323120]
[107.65467072 117.83538818]
[113.49377441 131.65222168]
[111.32132721 146.49406433]
[101.76718140 158.05773926]
[87.60145569 162.99049377]
[72.93129730 159.86213684]
[62.01013565 149.57972717]
[58.00440979 135.12446594]
[62.07553101 120.68750763]
[73.04312897 110.45462799]
[87.72485352 107.39257050]
[72.72543335 107.26094055]
[57.72601318 107.12931061]
[42.72658920 106.99768066]
[26.83500862 112.90479279]
[16.75951958 99.26951599]
[27.07275391 85.81315613]
[42.85821915 91.99825287]
[57.85763931 92.12988281]
[72.85706329 92.26151276]
[87.85648346 92.39314270]
[92.54734802 86.54115295]
[101.92906952 74.83716583]
[106.61992645 68.98516846]
[103.22714233 54.37390900]
[99.83435059 39.76264572]
[96.44155884 25.15138435]
[93.04877472 10.54012203]
[89.65598297 -4.07113981]
[86.26319122 -18.68240166]
[82.87040710 -33.29366302]
[79.47761536 -47.90492630]
[76.08482361 -62.51618958]
[63.05252075 -58.34857559]
[46.81912613 -63.70537567]
[33.64051437 -79.86305237]
[27.99159622 -93.75872040]
[22.34267616 -107.65439606]
[16.69375801 -121.55006409]
[11.04483795 -135.44573975]
[5.39591837 -149.34141541]
[-0.25300094 -163.23707581]
[-5.90192032 -177.13275146]
[-11.55083942 -191.02842712]
[-23.91557693 -200.89877319]
[-21.54093361 -215.60287476]
[-27.18985176 -229.49855042]
[-40.45934677 -239.13455200]
[-38.48019791 -255.41383362]
[-23.28838730 -261.58966064]
[-10.51194477 -251.30886841]
[-13.29417992 -235.14746094]
[-7.64526081 -221.25178528]
[4.31542778 -212.37535095]
[2.34483242 -196.67735291]
[7.99375200 -182.78167725]
[13.64267159 -168.88600159]
[19.29159164 -154.99032593]
[24.94050980 -141.09466553]
[30.58942986 -127.19898224]
[36.23834991 -113.30331421]
[41.88726807 -99.40763855]
[47.53618622 -85.51197052]
[55.03503418 -85.64359283]
[62.30562592 -98.76374817]
[70.03272247 -85.90684509]
[77.53157043 -86.03846741]
[82.68934631 -100.12382507]
[79.34165192 -116.17763519]
[91.74942780 -126.90047455]
[107.14861298 -121.26159668]
[109.69785309 -105.06179810]
[96.77470398 -94.96604156]
[91.61692810 -80.88068390]
[90.69609070 -65.90898132]
[94.08887482 -51.29771423]
[97.48166656 -36.68645477]
[100.87445831 -22.07519150]
[104.26724243 -7.46392918]
[107.66003418 7.14733315]
[111.05282593 21.75859451]
[114.44561005 36.36985779]
[117.83840179 50.98112106]
[121.23119354 65.59238434]
[119.91252136 109.18985748]
[128.55804443 121.44770813]
[137.20358276 133.70555115]
[145.84910583 145.96340942]
[154.49462891 158.22125244]
[172.59976196 157.92173767]
[187.14620972 168.43978882]
[192.44158936 185.42742920]
[186.55303955 202.05233765]
[195.62342834 213.99922180]
[204.69380188 225.94610596]
[213.76419067 237.89300537]
[222.83457947 249.83988953]
[232.31533813 249.86462402]
[240.59117126 254.20062256]
[245.85064697 261.75518799]
[247.00933838 270.74804688]
[243.93153381 279.13018799]
[252.36061096 291.53787231]
[266.51559448 298.60519409]
[267.26739502 313.48080444]
[275.69647217 325.88851929]
[284.12554932 338.29620361]
[292.55462646 350.70388794]
[300.98367310 363.11157227]
[309.73645020 375.29309082]
[318.80682373 387.23995972]
[327.87722778 399.18685913]
[343.28076172 398.99389648]
[355.69918823 407.80502319]
[360.49139404 422.07031250]
[356.01824951 436.25228882]
[365.08865356 448.19918823]
[374.15902710 460.14608765]
[383.22940063 472.09295654]
[392.29980469 484.03985596]
[401.37017822 495.98675537]
[410.44058228 507.93362427]
[419.51095581 519.88049316]
[428.58132935 531.82739258]
[437.65173340 543.77429199]
[446.72210693 555.72119141]
[455.79248047 567.66809082]
[464.86288452 579.61492920]
[473.93325806 591.56182861]
[489.25317383 597.41271973]
[491.57858276 613.64611816]
[478.51733398 623.56256104]
[463.50570679 616.96081543]
[461.98635864 600.63220215]
[452.91598511 588.68536377]
[443.84561157 576.73846436]
[434.77520752 564.79156494]
[425.70483398 552.84466553]
[416.63446045 540.89776611]
[407.56405640 528.95092773]
[398.49368286 517.00402832]
[389.42330933 505.05712891]
[380.35290527 493.11022949]
[371.28253174 481.16336060]
[362.21212769 469.21646118]
[353.14175415 457.26956177]
[344.07138062 445.32269287]
[329.20901489 445.82070923]
[316.75595093 437.37170410]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 141]
[2 140]
[3 139]
[7 138]
[8 137]
[9 136]
[10 135]
[11 134]
[13 132]
[14 131]
[16 126]
[17 125]
[18 124]
[19 123]
[20 122]
[26 118]
[27 117]
[28 116]
[29 115]
[30 114]
[40 50]
[41 49]
[42 48]
[43 47]
[53 113]
[54 112]
[55 111]
[56 110]
[57 109]
[58 108]
[59 107]
[60 106]
[61 105]
[62 104]
[65 92]
[66 91]
[67 90]
[68 89]
[69 88]
[70 87]
[71 86]
[72 85]
[73 84]
[75 82]
[76 81]
[96 103]
[97 102]
[145 176]
[146 175]
[147 174]
[148 173]
[149 172]
[150 171]
[151 170]
[152 169]
[153 168]
[154 167]
[155 166]
[156 165]
[157 164]
[158 163]
] def

init

% Start Annotations
1 141 0.0 1 colorpair
2 140 0.0 1 colorpair
3 139 0.0 1 colorpair
7 138 0.0 1 colorpair
8 137 0.0 1 colorpair
9 136 0.0 1 colorpair
10 135 0.0 1 colorpair
11 134 0.0 1 colorpair
13 132 0.0 1 colorpair
14 131 0.0 1 colorpair
16 126 0.0 1 colorpair
17 125 0.0 1 colorpair
18 124 0.0 1 colorpair
19 123 0.0 1 colorpair
20 122 0.0 1 colorpair
26 118 0.0 1 colorpair
27 117 0.0 1 colorpair
28 116 0.0 1 colorpair
29 115 0.0 1 colorpair
30 114 0.0 1 colorpair
40 50 0.0 1 colorpair
41 49 0.0 1 colorpair
42 48 0.0 1 colorpair
43 47 0.0 1 colorpair
53 113 0.0 1 colorpair
54 112 0.0 1 colorpair
55 111 0.0 1 colorpair
56 110 0.0 1 colorpair
57 109 0.0 1 colorpair
58 108 0.0 1 colorpair
59 107 0.0 1 colorpair
60 106 0.0 1 colorpair
61 105 0.0 1 colorpair
62 104 0.0 1 colorpair
65 92 0.0 1 colorpair
66 91 0.0 1 colorpair
67 90 0.0 1 colorpair
68 89 0.0 1 colorpair
69 88 0.0 1 colorpair
70 87 0.0 1 colorpair
71 86 0.0 1 colorpair
72 85 0.0 1 colorpair
73 84 0.0 1 colorpair
75 82 0.0 1 colorpair
76 81 0.0 1 colorpair
96 103 0.0 1 colorpair
97 102 0.0 1 colorpair
145 176 0.0 1 colorpair
146 175 0.0 1 colorpair
147 174 0.0 1 colorpair
148 173 0.0 1 colorpair
149 172 0.0 1 colorpair
150 171 0.0 1 colorpair
151 170 0.0 1 colorpair
152 169 0.0 1 colorpair
153 168 0.0 1 colorpair
154 167 0.0 1 colorpair
155 166 0.0 1 colorpair
156 165 0.0 1 colorpair
157 164 0.0 1 colorpair
158 163 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
