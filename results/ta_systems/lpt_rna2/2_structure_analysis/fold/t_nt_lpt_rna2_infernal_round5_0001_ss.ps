%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Dec 16 19:27:38 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCAAAGGUGGUGAUUAGUCAUGAAUACUUUCGAUAAAGCGAUCAUCGCGCCACUACUCGUUGGUGUGUUUCUGCUUUUGCUAGAACACAUGCUGAACAACCACAAGUAGUGUAAGUAGCGACUAAGU____CCAG_AACUUGGCACCAGGACAUCAUCUUCUAGCGGAGGUGGCGGUUUUU\
) } def
/len { sequence length } bind def

/coor [
[150.92671204 156.10281372]
[142.06854248 143.99774170]
[133.21037292 131.89266968]
[122.86003876 138.44483948]
[111.46502686 141.87030029]
[99.91954803 142.09523010]
[89.07998657 139.28968811]
[79.70147705 133.84188843]
[72.38532257 126.31683350]
[59.70396042 134.32827759]
[47.02260208 142.33970642]
[34.34123993 150.35115051]
[21.65988159 158.36257935]
[8.97852135 166.37402344]
[-3.70283890 174.38545227]
[-16.38419914 182.39689636]
[-11.36755466 196.60185242]
[-9.63810921 211.56703186]
[-11.28260994 226.54179382]
[-16.21856880 240.77499390]
[-24.19840050 253.55271912]
[-34.82183838 264.23400879]
[-47.55601883 272.28314209]
[-61.76219940 277.29635620]
[-76.72780609 279.02215576]
[-91.70216370 277.37402344]
[-105.93416595 272.43463135]
[-118.70995331 264.45169067]
[-129.38868713 253.82566833]
[-137.43472290 241.08953857]
[-142.44447327 226.88214111]
[-144.16667175 211.91612244]
[-142.51490784 196.94216919]
[-137.57205200 182.71136475]
[-129.58602905 169.93751526]
[-118.95742035 159.26135254]
[-106.21933746 151.21839905]
[-92.01073456 146.21208191]
[-77.04429626 144.49351501]
[-62.07073593 146.14891052]
[-47.84112549 151.09521484]
[-35.06921387 159.08433533]
[-24.39563560 169.71553040]
[-11.71427536 161.70408630]
[0.96708471 153.69265747]
[13.64844418 145.68121338]
[26.32980347 137.66978455]
[39.01116562 129.65834045]
[51.69252396 121.64691162]
[64.37388611 113.63547516]
[62.09048462 95.75559998]
[68.27149200 78.82340240]
[81.53681946 66.61950684]
[76.99909973 52.32233810]
[72.46138000 38.02516556]
[67.92366028 23.72799301]
[63.38594437 9.43082142]
[58.84822845 -4.86634970]
[54.31050873 -19.16352081]
[42.76099014 -29.97643661]
[46.28557205 -44.44801712]
[41.74785233 -58.74518585]
[36.15607071 -65.99893188]
[37.25696564 -73.32533264]
[32.96400452 -87.69789124]
[28.67104340 -102.07045746]
[23.16823006 -116.02462769]
[16.49564362 -129.45878601]
[9.82305717 -142.89294434]
[3.15047073 -156.32710266]
[-3.52211547 -169.76126099]
[-10.19470119 -183.19541931]
[-24.90442657 -188.32003784]
[-31.48000336 -202.03924561]
[-26.50380898 -216.03112793]
[-33.17639542 -229.46528625]
[-47.12955093 -238.08163452]
[-46.37375641 -254.46336365]
[-31.68650627 -261.75833130]
[-18.17678642 -252.46212769]
[-19.74223900 -236.13787842]
[-13.06965160 -222.70372009]
[1.08595765 -218.21437073]
[8.04428387 -204.68527222]
[3.23945618 -189.86801147]
[9.91204262 -176.43385315]
[16.58462906 -162.99969482]
[23.25721550 -149.56553650]
[29.92980003 -136.13137817]
[36.60238647 -122.69721985]
[39.37208939 -137.43928528]
[49.05552673 -148.89489746]
[63.13068008 -154.08047485]
[77.93170929 -151.64543152]
[89.60373688 -142.22396851]
[95.10681152 -128.26989746]
[93.00768280 -113.41750336]
[83.85305023 -101.53504944]
[70.02721405 -95.71729279]
[55.13108063 -97.47943878]
[43.04360199 -106.36341095]
[47.33656311 -91.99085236]
[51.62952423 -77.61829376]
[56.04502487 -63.28290558]
[60.58274460 -48.98573303]
[71.80769348 -39.19544601]
[68.60768127 -23.70123863]
[73.14540100 -9.40406799]
[77.68312073 4.89310360]
[82.22083282 19.19027519]
[86.75855255 33.48744583]
[91.29627228 47.78461838]
[95.83399200 62.08179092]
[112.41738892 61.15755844]
[128.89373779 67.60061646]
[141.97305298 81.07026672]
[154.37348938 72.63054657]
[166.77394104 64.19082642]
[173.41007996 49.19437027]
[189.74214172 47.71248245]
[198.96908569 61.26959991]
[191.59904480 75.91931915]
[175.21366882 76.59127045]
[162.81321716 85.03099060]
[150.41276550 93.47071075]
[149.13844299 100.86166382]
[164.06707764 99.40019989]
[178.99571228 97.93873596]
[193.92434692 96.47727966]
[206.75793457 88.71203613]
[221.70120239 87.40856934]
[235.68542480 92.83453369]
[245.83889771 103.87568665]
[250.07653809 118.26465607]
[247.52809143 133.04658508]
[238.71693420 145.18591309]
[225.45246887 152.18977356]
[210.45863342 152.61985779]
[196.81451416 146.38786316]
[187.32154846 134.77267456]
[173.74429321 128.39630127]
[160.16703796 122.01992798]
[146.58978271 115.64355469]
[145.31546021 123.03450012]
[154.17362976 135.13957214]
[163.03178406 147.24465942]
[178.43634033 147.32351685]
[190.69735718 156.35238647]
[195.23710632 170.70002747]
[190.51441956 184.80088806]
[199.37258911 196.90596008]
[208.23075867 209.01104736]
[217.08891296 221.11611938]
[225.94708252 233.22119141]
[234.80525208 245.32627869]
[243.66342163 257.43133545]
[252.52159119 269.53643799]
[261.37976074 281.64151001]
[270.23791504 293.74658203]
[279.09609985 305.85165405]
[287.95425415 317.95672607]
[296.81240845 330.06179810]
[312.46688843 332.23284912]
[321.93432617 344.88760376]
[319.59793091 360.51821899]
[306.84378052 369.85137939]
[291.23870850 367.34982300]
[282.04095459 354.49771118]
[284.70733643 338.91998291]
[275.84918213 326.81491089]
[266.99099731 314.70980835]
[258.13284302 302.60473633]
[249.27467346 290.49966431]
[240.41650391 278.39459229]
[231.55834961 266.28952026]
[222.70018005 254.18443298]
[213.84201050 242.07936096]
[204.98384094 229.97428894]
[196.12567139 217.86920166]
[187.26751709 205.76412964]
[178.40934753 193.65905762]
[163.54049683 193.89474487]
[151.23846436 185.22732544]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 146]
[2 145]
[3 144]
[9 50]
[10 49]
[11 48]
[12 47]
[13 46]
[14 45]
[15 44]
[16 43]
[53 113]
[54 112]
[55 111]
[56 110]
[57 109]
[58 108]
[59 107]
[61 105]
[62 104]
[64 103]
[65 102]
[66 101]
[67 90]
[68 89]
[69 88]
[70 87]
[71 86]
[72 85]
[75 82]
[76 81]
[116 125]
[117 124]
[118 123]
[150 181]
[151 180]
[152 179]
[153 178]
[154 177]
[155 176]
[156 175]
[157 174]
[158 173]
[159 172]
[160 171]
[161 170]
[162 169]
] def

init

% Start Annotations
1 146 0.16 0.6 colorpair
2 145 0.0 0.6 colorpair
3 144 0.16 0.6 colorpair
9 50 0.0 0.6 colorpair
10 49 0.0 0.2 colorpair
11 48 0.0 0.6 colorpair
12 47 0.16 1 colorpair
13 46 0.0 1 colorpair
14 45 0.16 0.6 colorpair
15 44 0.0 1 colorpair
16 43 0.16 1 colorpair
53 113 0.0 0.6 colorpair
54 112 0.48 1 colorpair
55 111 0.16 0.6 colorpair
56 110 0.0 1 colorpair
57 109 0.48 1 colorpair
58 108 0.16 1 colorpair
59 107 0.0 1 colorpair
61 105 0.0 1 colorpair
62 104 0.16 1 colorpair
64 103 0.16 1 colorpair
65 102 0.16 1 colorpair
66 101 0.0 0.6 colorpair
67 90 0.0 0.6 colorpair
68 89 0.16 0.6 colorpair
69 88 0.65 1 colorpair
70 87 0.32 0.6 colorpair
71 86 0.0 1 colorpair
72 85 0.32 1 colorpair
75 82 0.16 0.2 colorpair
76 81 0.0 0.2 colorpair
116 125 0.0 0.2 colorpair
117 124 0.16 1 colorpair
118 123 0.16 1 colorpair
150 181 0.16 0.6 colorpair
151 180 0.16 0.6 colorpair
152 179 0.32 1 colorpair
153 178 0.32 1 colorpair
154 177 0.16 0.6 colorpair
155 176 0.32 1 colorpair
156 175 0.48 0.6 colorpair
157 174 0.16 1 colorpair
158 173 0.16 1 colorpair
159 172 0.48 1 colorpair
160 171 0.16 1 colorpair
161 170 0.16 0.6 colorpair
162 169 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
1 146 1 gmark
146 cmark
2 145 1 gmark
3 144 1 gmark
3 cmark
9 50 1 gmark
10 49 2 gmark
11 48 1 gmark
47 cmark
14 45 1 gmark
45 cmark
16 cmark
43 cmark
53 113 1 gmark
54 cmark
112 cmark
55 111 1 gmark
55 cmark
57 cmark
109 cmark
58 cmark
108 cmark
104 cmark
103 cmark
102 cmark
66 101 1 gmark
67 90 1 gmark
68 89 1 gmark
89 cmark
69 cmark
88 cmark
70 87 1 gmark
70 cmark
87 cmark
72 cmark
85 cmark
75 82 2 gmark
82 cmark
76 81 2 gmark
116 125 2 gmark
124 cmark
123 cmark
150 181 1 gmark
150 cmark
151 180 1 gmark
151 cmark
180 cmark
152 cmark
179 cmark
153 cmark
178 cmark
154 177 1 gmark
154 cmark
177 cmark
155 cmark
176 cmark
156 175 1 gmark
156 cmark
175 cmark
157 cmark
174 cmark
158 cmark
159 cmark
172 cmark
160 cmark
171 cmark
161 170 1 gmark
170 cmark
162 169 1 gmark

% End Annotations
showpage
end
%%EOF
