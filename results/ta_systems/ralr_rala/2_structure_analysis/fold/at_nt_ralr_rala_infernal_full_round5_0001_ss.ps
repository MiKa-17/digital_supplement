%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Dec 19 19:39:15 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGACUGAAGUUUCUCGCAAUUAAAAUUUAUCAGUUUUACUUUCUGCUCUCUGGAAACGCCUGCUUCUUUUUU_ACCUGAGAGCAUUUUU_UCGCAUUCUGAUUUCGUUAGUUUAGAUUUUGAAUAUCUUGUCCAGUUAGUAGGAGUGCCACCUUCCUUUUCAAUAGUGGCGGUAAUUUU\
) } def
/len { sequence length } bind def

/coor [
[12.74408817 537.12298584]
[-0.08980524 544.88775635]
[-13.76276875 551.05621338]
[-28.07717514 555.53924561]
[-42.82612991 558.27209473]
[-57.79645157 559.21520996]
[-72.77176666 558.35498047]
[-87.53561401 555.70379639]
[-101.87461853 551.30004883]
[-115.58151245 545.20733643]
[-128.45817566 537.51373291]
[-140.31851196 528.33044434]
[-150.99107361 517.79022217]
[-160.32162476 506.04541016]
[-168.17527771 493.26574707]
[-174.43852234 479.63592529]
[-179.02084351 465.35299683]
[-181.85600281 450.62335205]
[-182.90303040 435.65994263]
[-182.14677429 420.67901611]
[-179.59817505 405.89712524]
[-175.29408264 391.52789307]
[-169.29667664 377.77902222]
[-161.69267273 364.84924316]
[-152.59196472 352.92544556]
[-142.12608337 342.17996216]
[-130.44631958 332.76812744]
[-117.72148132 324.82592773]
[-104.13548279 318.46820068]
[-89.88470459 313.78683472]
[-75.17511749 310.84945679]
[-60.21932983 309.69857788]
[-45.23351669 310.35079956]
[-30.43427658 312.79672241]
[-16.03551292 317.00094604]
[-2.24534464 322.90277100]
[10.73690987 330.41680908]
[22.72360802 339.43450928]
[33.54149628 349.82553101]
[43.03421402 361.43969727]
[51.06455612 374.10906982]
[57.51749420 387.65319824]
[59.32554626 372.76254272]
[61.13359451 357.87191772]
[62.94164658 342.98129272]
[64.74969482 328.09066772]
[66.55774689 313.20001221]
[68.36579895 298.30938721]
[70.17384338 283.41876221]
[60.81450653 271.88885498]
[62.43600464 256.76190186]
[74.59307098 247.02313232]
[68.44628906 233.45602417]
[77.79060364 220.68910217]
[79.59865570 205.79846191]
[81.40670776 190.90783691]
[70.86162567 188.09597778]
[60.71962738 184.06542969]
[51.12101364 178.87197876]
[42.19856644 172.58746338]
[34.07571030 165.29879761]
[26.86481857 157.10682678]
[20.66563797 148.12487793]
[15.56392574 138.47718811]
[11.63025665 128.29724121]
[8.91904640 117.72583008]
[7.46780062 106.90921021]
[7.29659510 95.99701691]
[8.40779877 85.14019775]
[10.78603935 74.48893738]
[14.39841652 64.19058990]
[19.19496155 54.38760376]
[25.10931778 45.21559525]
[32.05967331 36.80144882]
[39.94987488 29.26155472]
[48.67078018 22.70021820]
[58.10174561 17.20820427]
[68.11230469 12.86148834]
[78.56398773 9.72019863]
[89.31220245 7.82779074]
[88.79446411 -7.16327095]
[88.27671814 -22.15433311]
[80.06770325 -35.67922211]
[87.36109161 -48.66596985]
[86.84335327 -63.65703201]
[73.53259277 -71.45621490]
[66.57181549 -85.22396851]
[68.18217468 -100.56705475]
[77.84980774 -112.58955383]
[92.48981476 -117.45512390]
[107.43061829 -113.61117554]
[117.90466309 -102.28430939]
[120.56972504 -87.08888245]
[114.57537842 -72.87370300]
[101.83441162 -64.17477417]
[102.35215759 -49.18371201]
[110.52413940 -36.73108673]
[103.26778412 -22.67207527]
[103.78552246 -7.68101311]
[104.30326843 7.31004906]
[112.03450775 7.99393606]
[119.68154144 9.32154655]
[127.19087982 11.28359127]
[134.50997925 13.86634350]
[141.58761597 17.05173302]
[148.37429810 20.81747246]
[154.82252502 25.13721657]
[160.88717651 29.98073769]
[166.52583313 35.31415176]
[178.09013367 25.76077652]
[189.65443420 16.20739746]
[201.21871948 6.65402079]
[200.12072754 -8.82415771]
[208.35881042 -21.97381401]
[222.76528931 -27.73863602]
[237.80055237 -23.90193176]
[247.68325806 -11.93899345]
[248.61328125 3.55018592]
[240.23303223 16.60970116]
[225.76486206 22.21790123]
[210.77210999 18.21831894]
[199.20780945 27.77169609]
[187.64350891 37.32507324]
[176.07920837 46.87845230]
[186.74819946 67.06528473]
[192.16455078 89.24632263]
[192.00030518 112.07849884]
[186.26539612 134.17932129]
[175.30709839 154.21057129]
[159.78892517 170.95935059]
[140.65049744 183.41151428]
[119.05068207 190.81307983]
[96.29734039 192.71588135]
[94.48928833 207.60652161]
[92.68123627 222.49714661]
[98.69869995 237.12933350]
[89.48371124 248.83117676]
[98.95687866 261.19631958]
[96.91113281 276.27178955]
[85.06447601 285.22680664]
[83.25643158 300.11743164]
[81.44837952 315.00808716]
[79.64032745 329.89871216]
[77.83227539 344.78933716]
[76.02423096 359.67996216]
[74.21617889 374.57061768]
[72.40812683 389.46124268]
[81.91369629 377.85760498]
[96.74640656 375.62359619]
[109.24808502 383.91262817]
[112.96410370 398.44503784]
[105.97586060 411.71774292]
[91.89140320 416.87799072]
[77.98107910 411.26013184]
[86.71385956 423.45599365]
[101.03897095 430.17175293]
[102.15774536 445.02429199]
[110.89052582 457.22012329]
[126.04141998 455.05010986]
[140.46144104 460.18057251]
[150.83697510 471.43252563]
[154.78381348 486.22039795]
[151.39497375 501.14602661]
[141.44920349 512.77960205]
[127.23197174 518.44787598]
[112.01028442 516.84820557]
[99.28198242 508.34826660]
[91.97192383 494.90127563]
[91.75992584 479.59722900]
[98.69468689 465.95291138]
[89.96190643 453.75708008]
[76.26141357 447.91363525]
[74.51801300 432.18875122]
[65.78523254 419.99291992]
[66.62438965 434.96942139]
[65.66020203 449.93841553]
[62.90660477 464.68350220]
[58.40340042 478.99157715]
[52.21567917 492.65585327]
[44.43287659 505.47879028]
[35.16748047 517.27508545]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 147]
[43 146]
[44 145]
[45 144]
[46 143]
[47 142]
[48 141]
[49 140]
[52 137]
[54 135]
[55 134]
[56 133]
[80 100]
[81 99]
[82 98]
[84 96]
[85 95]
[109 124]
[110 123]
[111 122]
[112 121]
[154 174]
[155 173]
[157 171]
[158 170]
] def

init

% Start Annotations
42 147 0.16 0.2 colorpair
43 146 0.16 0.2 colorpair
44 145 0.16 1 colorpair
45 144 0.16 1 colorpair
46 143 0.0 1 colorpair
47 142 0.16 0.6 colorpair
48 141 0.16 1 colorpair
49 140 0.16 1 colorpair
52 137 0.0 0.2 colorpair
54 135 0.0 0.6 colorpair
55 134 0.0 1 colorpair
56 133 0.0 1 colorpair
80 100 0.0 1 colorpair
81 99 0.0 1 colorpair
82 98 0.16 1 colorpair
84 96 0.0 1 colorpair
85 95 0.0 1 colorpair
109 124 0.0 1 colorpair
110 123 0.16 1 colorpair
111 122 0.0 0.6 colorpair
112 121 0.16 0.6 colorpair
154 174 0.0 1 colorpair
157 171 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
42 147 2 gmark
147 cmark
43 146 2 gmark
43 cmark
146 cmark
145 cmark
45 cmark
47 142 1 gmark
142 cmark
48 cmark
140 cmark
52 137 2 gmark
54 135 1 gmark
98 cmark
110 cmark
111 122 1 gmark
112 121 1 gmark
112 cmark
155 173 25 gmark
155 cmark
173 cmark
157 171 1 gmark
158 170 20 gmark
158 cmark

% End Annotations
showpage
end
%%EOF
