%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Dec 19 20:17:11 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAAUGCGGUAUGACAAUGUUAAACCAUGUCCGUUUUGUGGUUGUCCAUCAGUAACGGUGAAAGCCAUUUCAGGAUAUUACCGAGCAAAAUGUAACGGAUGCGAAUCCCGAACAGGCUAUGGUGGAAGUGAAAAAGAAGCACUCGAACGAUGGAAUAAACGAACAACUGGAAAUAAUAAUGGAGGUGUUCAUGUA\
) } def
/len { sequence length } bind def

/coor [
[54.22099304 714.17950439]
[45.12641525 726.55621338]
[31.05545998 732.71282959]
[15.79314137 730.99316406]
[3.44494677 721.85986328]
[-2.66752124 707.76965332]
[-0.90003943 692.51281738]
[8.27194881 680.19329834]
[22.38122368 674.12506104]
[24.06068993 659.21936035]
[25.74015808 644.31365967]
[27.41962433 629.40802002]
[29.09909248 614.50231934]
[30.77855873 599.59661865]
[21.32006073 588.14794922]
[22.81094170 573.00756836]
[34.88350677 563.16424561]
[36.56297302 548.25854492]
[28.74020576 543.07849121]
[23.31375694 535.35369873]
[21.06658363 526.12512207]
[22.34967232 516.65539551]
[27.02797699 508.25628662]
[34.49326706 502.10656738]
[43.74292374 499.08697510]
[46.37395096 484.31951904]
[49.00497818 469.55206299]
[51.63600540 454.78460693]
[40.15523529 445.29473877]
[34.93126678 431.23892212]
[37.46094131 416.35714722]
[47.16359329 404.66290283]
[61.51053238 399.36077881]
[64.14155579 384.59332275]
[66.77258301 369.82586670]
[69.40361023 355.05841064]
[72.03463745 340.29095459]
[74.42863464 325.48324585]
[76.58499146 310.63903809]
[78.74134827 295.79483032]
[80.89770508 280.95065308]
[83.05405426 266.10644531]
[84.61401367 251.18778992]
[85.57506561 236.21861267]
[86.53611755 221.24942017]
[87.37717438 206.27302551]
[88.09818268 191.29035950]
[88.81919098 176.30769348]
[89.54019165 161.32504272]
[90.26119995 146.34237671]
[71.98287201 141.41247559]
[56.20645142 129.21574402]
[45.81991959 111.01942444]
[43.07602692 89.22804260]
[49.15238190 67.07054138]
[63.86233902 48.12181854]
[51.98647308 38.95863724]
[40.11061096 29.79545975]
[28.23474693 20.63228035]
[16.35888290 11.46910000]
[4.48301888 2.30592036]
[-10.33545208 6.51532793]
[-24.62414360 1.25351405]
[-32.97586441 -11.26498318]
[-32.36207581 -26.12302017]
[-44.23794174 -35.28619766]
[-59.87845612 -33.01687241]
[-72.49246979 -42.53854370]
[-74.59630585 -58.20217514]
[-64.94180298 -70.71481323]
[-49.25680542 -72.65293121]
[-36.84693909 -62.86667633]
[-35.07476044 -47.16206360]
[-23.19889641 -37.99888229]
[-8.98248386 -42.36140442]
[5.24504614 -37.45820618]
[13.95916367 -24.97150993]
[13.64619827 -9.56994343]
[25.52206230 -0.40676388]
[37.39792633 8.75641537]
[49.27378845 17.91959572]
[61.14965439 27.08277512]
[73.02552032 36.24595261]
[79.97739410 33.43144989]
[73.94840240 19.69641304]
[67.91941833 5.96137381]
[61.89042664 -7.77366495]
[55.86143875 -21.50870323]
[47.40716934 -33.89923859]
[55.76663971 -46.35392761]
[70.43641663 -43.22381973]
[72.98391724 -28.44082832]
[78.20822144 -14.38000870]
[83.43253326 -0.31919038]
[88.65683746 13.74162769]
[93.88114166 27.80244637]
[100.83302307 24.98794365]
[102.98937225 10.14374924]
[105.14572906 -4.70044661]
[107.30208588 -19.54464149]
[100.73001862 -34.56928635]
[110.67224121 -47.61091995]
[126.90105438 -45.25342941]
[132.72163391 -29.92199516]
[122.14627838 -17.38828659]
[119.98992920 -2.54409146]
[117.83357239 12.30010414]
[115.67721558 27.14429855]
[121.79392242 31.48433304]
[130.47399902 19.25092125]
[139.15406799 7.01750755]
[147.83413696 -5.21590519]
[156.51420593 -17.44931793]
[165.19445801 -29.68259811]
[177.42759705 -21.00214958]
[168.74761963 -8.76924896]
[160.06755066 3.46416402]
[151.38746643 15.69757748]
[142.70739746 27.93099022]
[134.02732849 40.16440201]
[140.14404297 44.50443649]
[153.44302368 37.56636429]
[166.74201965 30.62829018]
[180.04101562 23.69021416]
[178.32670593 8.60957813]
[182.17971802 -6.07098150]
[191.07893372 -18.36603737]
[203.82081604 -26.61278534]
[218.68212891 -29.69591904]
[233.65299988 -27.19847298]
[246.70875549 -19.45820236]
[256.08370972 -7.52191782]
[260.50994873 6.99609709]
[259.38888550 22.13240051]
[252.87213135 35.83993149]
[241.84103394 46.26485825]
[227.78742981 51.99729538]
[212.61198425 52.26197815]
[198.36701965 47.02310944]
[186.97908020 36.98920441]
[173.68009949 43.92728043]
[160.38110352 50.86535263]
[147.08212280 57.80342865]
[156.57461548 78.34031677]
[157.93420410 99.96856689]
[151.65591431 119.71230316]
[139.24172974 135.09303284]
[122.91371155 144.44000244]
[105.24386597 147.06338501]
[104.52285767 162.04605103]
[103.80184937 177.02870178]
[103.08084106 192.01136780]
[102.35984039 206.99403381]
[105.07566833 215.72872925]
[101.50530243 222.21047974]
[100.54425049 237.17965698]
[99.58319092 252.14883423]
[112.43664551 244.41651917]
[126.55250549 249.49023438]
[131.54226685 263.63598633]
[123.73373413 276.44326782]
[108.87355804 278.48663330]
[97.89825439 268.26281738]
[95.74189758 283.10699463]
[93.58554077 297.95120239]
[91.42918396 312.79537964]
[89.27283478 327.63958740]
[91.36878204 333.93124390]
[90.14723969 339.49746704]
[86.80209351 342.92199707]
[84.17106628 357.68945312]
[81.54003906 372.45690918]
[78.90901184 387.22433472]
[76.27798462 401.99179077]
[87.91095734 411.92260742]
[92.97781372 426.24826050]
[90.21218109 441.08798218]
[80.45526886 452.47476196]
[66.40345764 457.41564941]
[63.77243042 472.18310547]
[61.14140701 486.95056152]
[58.51037979 501.71798706]
[71.64225006 518.12615967]
[68.46604156 538.60412598]
[51.46865463 549.93798828]
[49.78918839 564.84368896]
[59.36872482 577.12658691]
[57.45317078 592.21917725]
[45.68424225 601.27612305]
[44.00477600 616.18176270]
[42.32530975 631.08746338]
[40.64583969 645.99316406]
[38.96637344 660.89886475]
[37.28690720 675.80450439]
[49.69211578 684.86022949]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 194]
[10 193]
[11 192]
[12 191]
[13 190]
[14 189]
[17 186]
[18 185]
[25 182]
[26 181]
[27 180]
[28 179]
[33 174]
[34 173]
[35 172]
[36 171]
[37 170]
[38 167]
[39 166]
[40 165]
[41 164]
[42 163]
[43 157]
[44 156]
[45 155]
[46 153]
[47 152]
[48 151]
[49 150]
[50 149]
[56 83]
[57 82]
[58 81]
[59 80]
[60 79]
[61 78]
[65 74]
[66 73]
[97 108]
[98 107]
[99 106]
[100 105]
[121 143]
[122 142]
[123 141]
[124 140]
] def

init

% Start Annotations
9 194 0.16 1 colorpair
10 193 0.0 1 colorpair
11 192 0.0 1 colorpair
12 191 0.0 1 colorpair
13 190 0.0 1 colorpair
14 189 0.0 1 colorpair
17 186 0.0 1 colorpair
18 185 0.0 0.2 colorpair
25 182 0.0 1 colorpair
26 181 0.0 1 colorpair
27 180 0.16 1 colorpair
28 179 0.0 1 colorpair
33 174 0.0 0.6 colorpair
34 173 0.0 1 colorpair
35 172 0.0 1 colorpair
36 171 0.0 1 colorpair
37 170 0.16 1 colorpair
38 167 0.0 1 colorpair
39 166 0.0 1 colorpair
40 165 0.16 0.2 colorpair
41 164 0.0 1 colorpair
42 163 0.16 1 colorpair
43 157 0.0 1 colorpair
44 156 0.16 1 colorpair
45 155 0.0 0.2 colorpair
46 153 0.0 1 colorpair
47 152 0.0 1 colorpair
48 151 0.0 0.2 colorpair
49 150 0.0 0.2 colorpair
50 149 0.0 1 colorpair
56 83 0.0 1 colorpair
57 82 0.0 0.2 colorpair
58 81 0.0 1 colorpair
59 80 0.0 0.2 colorpair
60 79 0.16 1 colorpair
61 78 0.0 1 colorpair
65 74 0.0 1 colorpair
66 73 0.0 0.6 colorpair
97 108 0.0 0.2 colorpair
98 107 0.0 1 colorpair
99 106 0.16 1 colorpair
100 105 0.0 1 colorpair
121 143 0.16 1 colorpair
122 142 0.0 1 colorpair
123 141 0.0 0.2 colorpair
124 140 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
9 cmark
18 185 2 gmark
27 cmark
180 cmark
33 174 1 gmark
170 cmark
40 165 2 gmark
165 cmark
163 cmark
156 cmark
45 155 2 gmark
48 151 2 gmark
49 150 2 gmark
57 82 2 gmark
59 80 2 gmark
60 cmark
66 73 1 gmark
97 108 2 gmark
99 cmark
121 cmark
123 141 2 gmark

% End Annotations
showpage
end
%%EOF
