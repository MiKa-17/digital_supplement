%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Dec 19 20:06:36 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______CGAUACACAAAAGUCAAACCAUGUCCGUUUUGUGGUUGUCCAUCUGUAACAGUGAAAGCCAUUUCAGGGUGUUACCGGGCAAAAUGCAACGGCUGCGAAUCCCGAACUGGCUAUGGUGGAAGUGAGAAAGAAGCCCUCGAAAGAUGGAAUAAACGAACCGCUGAAAAUAUUAAUGGAGGCAUCUAUGUA\
) } def
/len { sequence length } bind def

/coor [
[48.53138351 704.10876465]
[46.37108994 719.31494141]
[36.88449097 731.39385986]
[22.62343597 737.09631348]
[7.42407656 734.88836670]
[-4.62503624 725.36395264]
[-10.28275108 711.08508301]
[-8.02717113 695.89270020]
[1.53496408 683.87353516]
[15.83148766 678.26062012]
[17.98784256 663.41638184]
[20.14419746 648.57220459]
[22.30055237 633.72802734]
[9.87434769 625.47845459]
[2.23075700 612.59881592]
[0.93190849 597.61639404]
[6.28878307 583.49816895]
[17.28895378 573.06347656]
[31.78746605 568.42077637]
[33.94382095 553.57659912]
[36.10017776 538.73236084]
[29.26812363 531.11352539]
[27.73187828 520.77380371]
[32.23901367 511.09927368]
[41.51744461 505.39306641]
[44.14847183 490.62561035]
[46.77949905 475.85818481]
[49.41052628 461.09072876]
[37.92975616 451.60086060]
[32.70578766 437.54504395]
[35.23545837 422.66326904]
[44.93811417 410.96902466]
[59.28504944 405.66687012]
[61.91607666 390.89941406]
[64.54710388 376.13195801]
[67.17813110 361.36453247]
[69.80915833 346.59707642]
[72.20315552 331.78933716]
[74.35951233 316.94512939]
[76.51586914 302.10095215]
[78.67221832 287.25674438]
[80.82857513 272.41256714]
[82.98493195 257.56835938]
[85.02225494 242.70736694]
[86.34289551 227.76560974]
[87.06390381 212.78294373]
[87.78490448 197.80029297]
[88.50591278 182.81762695]
[89.22692108 167.83496094]
[89.94792175 152.85229492]
[90.66893005 137.86964417]
[81.81652069 135.24519348]
[73.68963623 130.54791260]
[66.77395630 123.97605896]
[61.50144196 115.84162140]
[58.22375870 106.55587006]
[57.18955612 96.60871124]
[58.52705383 86.54286957]
[62.23309708 76.92427826]
[68.16947937 68.31028748]
[76.06695557 61.21747971]
[85.53689575 56.09087372]
[96.09020996 53.27647018]
[92.51843262 38.70792770]
[88.94665527 24.13938522]
[85.37488556 9.57084370]
[81.80310822 -4.99769878]
[71.00228882 -16.55853081]
[75.48643494 -30.76211166]
[71.91466522 -45.33065414]
[68.34288788 -59.89919662]
[63.25404358 -67.50014496]
[64.83260345 -74.72985840]
[61.49478912 -89.35377502]
[58.15697861 -103.97769165]
[54.46856308 -118.51714325]
[50.43167496 -132.96371460]
[46.39479065 -147.41029358]
[32.90598297 -155.20065308]
[29.01780510 -169.90904236]
[36.52785492 -182.72056580]
[32.49097061 -197.16712952]
[28.45408440 -211.61370850]
[15.00009060 -224.17793274]
[20.00550842 -240.99243164]
[15.73759460 -255.37245178]
[11.46968079 -269.75247192]
[1.16657889 -283.21658325]
[11.25232983 -296.84426880]
[27.13945961 -290.92520142]
[25.84969902 -274.02038574]
[30.11761284 -259.64035034]
[34.38552475 -245.26034546]
[44.87188721 -239.21455383]
[48.54047012 -227.25944519]
[42.90066147 -215.65058899]
[46.93754578 -201.20402527]
[50.97443008 -186.75744629]
[64.03798676 -179.69493103]
[68.33776093 -165.10154724]
[60.84136963 -151.44717407]
[64.87825012 -137.00061035]
[68.91513824 -122.55403137]
[71.80404663 -120.51210785]
[73.84220123 -116.96366882]
[74.32972717 -112.32631683]
[72.78089905 -107.31550598]
[76.11871338 -92.69158936]
[79.45652008 -78.06767273]
[82.91143036 -63.47097015]
[86.48320770 -48.90242767]
[90.05497742 -34.33388519]
[100.60031891 -23.81509399]
[96.37165070 -8.56947422]
[99.94342804 5.99906826]
[103.51519775 20.56760979]
[107.08697510 35.13615417]
[110.65875244 49.70469666]
[117.22293091 53.33258820]
[121.07292938 38.83508682]
[119.07661438 23.96852303]
[127.58206177 11.61306477]
[142.18183899 8.17118263]
[155.31048584 15.42642403]
[160.16488647 29.61919975]
[154.22952271 43.39495850]
[140.57833862 49.61534500]
[130.35127258 60.58837128]
[136.91545105 64.21626282]
[151.15129089 59.48963928]
[165.38713074 54.76301575]
[179.62295532 50.03639221]
[183.34944153 35.06585693]
[194.59368896 24.50317001]
[209.76771545 21.71884537]
[224.02954102 27.60135269]
[232.82826233 40.27360535]
[233.35626221 55.69192886]
[225.44502258 68.93640137]
[211.61901855 75.78074646]
[196.29006958 74.04097748]
[184.34957886 64.27222443]
[170.11375427 68.99884796]
[155.87791443 73.72547150]
[141.64207458 78.45209503]
[143.71578979 106.91065979]
[129.26939392 129.60403442]
[105.65159607 138.59065247]
[104.93058777 153.57330322]
[104.20957947 168.55596924]
[103.48857117 183.53863525]
[102.76757050 198.52128601]
[102.04656219 213.50395203]
[101.32555389 228.48661804]
[114.05342865 220.54928589]
[128.24879456 225.39608765]
[133.46464539 239.46005249]
[125.86238098 252.39085388]
[111.03686523 254.67211914]
[99.89910126 244.62551880]
[101.90694427 253.54960632]
[97.82912445 259.72470093]
[95.67277527 274.56890869]
[93.51641846 289.41311646]
[91.36006165 304.25729370]
[89.20370483 319.10150146]
[87.04735565 333.94567871]
[89.14330292 340.23733521]
[87.92176056 345.80358887]
[84.57661438 349.22808838]
[81.94558716 363.99554443]
[79.31455994 378.76300049]
[76.68353271 393.53045654]
[74.05250549 408.29791260]
[85.68547821 418.22872925]
[90.75233459 432.55435181]
[87.98670197 447.39410400]
[78.22978973 458.78085327]
[64.17797852 463.72174072]
[61.54695129 478.48919678]
[58.91592407 493.25665283]
[56.28489685 508.02410889]
[64.00271606 526.63781738]
[50.94437027 540.88873291]
[48.78801727 555.73291016]
[46.63166046 570.57714844]
[59.20994568 579.15313721]
[66.78649139 592.28643799]
[67.90493774 607.34527588]
[62.39684677 621.33892822]
[51.40457153 631.51141357]
[37.14474869 635.88433838]
[34.98839188 650.72857666]
[32.83203888 665.57275391]
[30.67568398 680.41693115]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 195]
[11 194]
[12 193]
[13 192]
[19 186]
[20 185]
[21 184]
[25 182]
[26 181]
[27 180]
[28 179]
[33 174]
[34 173]
[35 172]
[36 171]
[37 170]
[38 167]
[39 166]
[40 165]
[41 164]
[42 163]
[43 162]
[44 160]
[45 154]
[46 153]
[47 152]
[48 151]
[49 150]
[50 149]
[51 148]
[63 118]
[64 117]
[65 116]
[66 115]
[67 114]
[69 112]
[70 111]
[71 110]
[73 109]
[74 108]
[75 107]
[76 103]
[77 102]
[78 101]
[81 98]
[82 97]
[83 96]
[85 93]
[86 92]
[87 91]
[129 145]
[130 144]
[131 143]
[132 142]
] def

init

% Start Annotations
10 195 0.0 1 colorpair
11 194 0.0 1 colorpair
12 193 0.0 1 colorpair
13 192 0.0 1 colorpair
19 186 0.0 1 colorpair
20 185 0.0 1 colorpair
21 184 0.0 1 colorpair
25 182 0.0 1 colorpair
26 181 0.0 1 colorpair
27 180 0.0 1 colorpair
28 179 0.0 1 colorpair
33 174 0.0 1 colorpair
34 173 0.0 1 colorpair
35 172 0.0 1 colorpair
36 171 0.0 1 colorpair
37 170 0.0 1 colorpair
38 167 0.0 1 colorpair
39 166 0.0 1 colorpair
40 165 0.0 1 colorpair
41 164 0.0 1 colorpair
42 163 0.0 1 colorpair
43 162 0.0 1 colorpair
44 160 0.0 1 colorpair
45 154 0.0 1 colorpair
46 153 0.0 1 colorpair
47 152 0.0 1 colorpair
48 151 0.0 1 colorpair
49 150 0.0 1 colorpair
50 149 0.0 1 colorpair
51 148 0.0 1 colorpair
63 118 0.0 1 colorpair
64 117 0.0 1 colorpair
65 116 0.0 1 colorpair
66 115 0.0 1 colorpair
67 114 0.0 1 colorpair
69 112 0.0 1 colorpair
70 111 0.0 1 colorpair
71 110 0.0 1 colorpair
73 109 0.0 1 colorpair
74 108 0.0 1 colorpair
75 107 0.0 1 colorpair
76 103 0.0 1 colorpair
77 102 0.0 1 colorpair
78 101 0.0 1 colorpair
81 98 0.0 1 colorpair
82 97 0.0 1 colorpair
83 96 0.0 1 colorpair
85 93 0.0 1 colorpair
86 92 0.0 1 colorpair
87 91 0.0 1 colorpair
129 145 0.0 1 colorpair
130 144 0.0 1 colorpair
131 143 0.0 1 colorpair
132 142 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
