%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Dec 19 20:07:46 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUAUGAGAUAUGACAAUGUUAAACCAUGUCCAUUUUGUGGUUGUCCAUCAGUAACGGUGAAAGCCAUUUCAGGAUAUUACCGAGCGAAGUGUAACGGAUGCGAAUCCCGAACCGGCUAUGGUGGAAGUGAAAAAGAAGCACUCGAAAGAUGGAAUAAACGAACCACUGGAAAUAAUAAUGGAGGUGUUCAUGUA\
) } def
/len { sequence length } bind def

/coor [
[79.33285522 195.53274536]
[81.37034607 180.67224121]
[83.40766907 165.81123352]
[85.44499207 150.95024109]
[78.01448822 149.93157959]
[69.43273926 162.23416138]
[67.08515930 171.07495117]
[60.61354446 174.66365051]
[51.83571243 186.82710266]
[43.05788040 198.99057007]
[34.28004837 211.15402222]
[25.50221634 223.31747437]
[16.72438622 235.48094177]
[24.04539490 248.87367249]
[24.82192993 264.11703491]
[18.89980507 278.18441772]
[7.45486450 288.28274536]
[-7.24049044 292.40695190]
[-22.26848602 289.73825073]
[-34.64530563 280.80642700]
[-41.91351700 267.38497925]
[-42.63001633 252.13867188]
[-36.65254211 238.09472656]
[-25.16792297 228.04154968]
[-10.45644188 223.97521973]
[4.56092882 226.70310974]
[13.33876038 214.53964233]
[22.11659241 202.37619019]
[30.89442253 190.21273804]
[39.67225647 178.04927063]
[48.45008469 165.88581848]
[57.13015747 153.65240479]
[65.71190643 141.34982300]
[51.86984634 119.94238281]
[49.73805237 95.31861877]
[59.09098434 73.28222656]
[77.07926178 58.69049835]
[99.04740143 54.38623810]
[101.20375824 39.54204178]
[103.36011505 24.69784737]
[105.51646423 9.85365295]
[107.67282104 -4.99054241]
[109.82917786 -19.83473778]
[100.69676971 -33.47705078]
[105.26152039 -49.17432785]
[99.41039276 -62.98607254]
[93.55926514 -76.79781342]
[87.70812988 -90.60955811]
[81.85700226 -104.42130280]
[76.00587463 -118.23304749]
[60.80390167 -119.04627991]
[47.51667786 -126.34947968]
[38.75384903 -138.64717102]
[36.20985031 -153.46907043]
[40.33647919 -167.86631775]
[50.26375198 -178.99801636]
[44.41262054 -192.80975342]
[38.56149292 -206.62150574]
[32.71036148 -220.43324280]
[22.80512047 -231.69761658]
[9.85499573 -239.26692200]
[-3.09512854 -246.83621216]
[-16.04525375 -254.40551758]
[-32.43812943 -253.95201111]
[-40.79564667 -268.06170654]
[-32.52031326 -282.21978760]
[-16.12507629 -281.86160278]
[-8.47595501 -267.35565186]
[4.47416973 -259.78634644]
[17.42429352 -252.21704102]
[30.37441826 -244.64775085]
[42.39615250 -253.61981201]
[54.41682816 -262.59106445]
[50.84505081 -277.15960693]
[47.27327728 -291.72814941]
[43.70149994 -306.29669189]
[26.72637939 -310.80297852]
[14.42896366 -323.21737671]
[10.12764168 -340.06201172]
[14.91822433 -356.68148804]
[27.39654350 -368.52960205]
[23.35965729 -382.97616577]
[19.32277298 -397.42276001]
[5.86877871 -409.98696899]
[10.87419605 -426.80148315]
[6.60628271 -441.18148804]
[2.33836889 -455.56149292]
[-7.96473265 -469.02563477]
[2.12101865 -482.65332031]
[18.00814819 -476.73422241]
[16.71838570 -459.82940674]
[20.98629951 -445.44940186]
[25.25421333 -431.06939697]
[35.74057388 -425.02359009]
[39.40915680 -413.06848145]
[33.76934814 -401.45962524]
[37.80623245 -387.01306152]
[41.84312057 -372.56649780]
[54.36083603 -370.75878906]
[65.30319214 -364.32366943]
[73.02385712 -354.18829346]
[76.34574890 -341.83944702]
[74.74034882 -329.10568237]
[68.41143799 -317.88638306]
[58.27004242 -309.86846924]
[61.84181976 -295.29992676]
[65.41359711 -280.73138428]
[68.98536682 -266.16284180]
[69.78266144 -250.22178650]
[64.78013611 -237.27301025]
[56.16199493 -229.08212280]
[46.52210617 -226.28437805]
[52.37323761 -212.47262573]
[58.22436523 -198.66088867]
[64.07549286 -184.84913635]
[78.97817230 -184.23626709]
[92.19123840 -177.18470764]
[101.06873322 -165.04588318]
[103.80662537 -150.19583130]
[99.80918121 -135.57025146]
[89.81761932 -124.08417511]
[95.66874695 -110.27243042]
[101.51987457 -96.46069336]
[107.37100983 -82.64894867]
[113.22213745 -68.83720398]
[119.07326508 -55.02545547]
[132.93145752 -49.28520584]
[146.83520508 -54.91421127]
[160.73896790 -60.54321289]
[174.64271545 -66.17221832]
[177.40237427 -81.35075378]
[187.94676208 -92.61215973]
[202.91122437 -96.36296844]
[217.52062988 -91.40630341]
[227.11320496 -79.32382202]
[228.62796021 -63.97100449]
[221.58155823 -50.24687195]
[208.22247314 -42.53075027]
[192.81355286 -43.28482437]
[180.27171326 -52.26846695]
[166.36796570 -46.63946152]
[152.46421814 -41.01045990]
[138.56047058 -35.38145447]
[153.46084595 -33.65555573]
[167.66447449 -38.47808838]
[182.66412354 -38.58155441]
[196.93292236 -33.95541763]
[209.01844788 -25.07058716]
[217.69046021 -12.83146572]
[222.06623840 1.51609731]
[221.70034790 16.51163483]
[216.63005066 30.62871742]
[207.37144470 42.43033600]
[194.86698914 50.71517944]
[180.38954163 54.63991547]
[165.41279602 53.80503845]
[151.46125793 48.29553223]
[139.95509338 38.67221451]
[132.06553650 25.91467285]
[128.59568787 11.32151985]
[129.89767456 -3.61756396]
[124.67337036 -17.67838287]
[122.51702118 -2.83418727]
[120.36066437 12.01000786]
[118.20430756 26.85420418]
[116.04795074 41.69839859]
[113.89160156 56.54259491]
[122.61890411 59.60320282]
[130.67016602 64.42248535]
[137.69010925 70.85060120]
[143.35675049 78.66584778]
[147.39599609 87.58204651]
[149.59449768 97.25894928]
[149.81031799 107.31518555]
[147.98074341 117.34325409]
[144.12705994 126.92606354]
[138.35575867 135.65428162]
[130.85620117 143.14367676]
[121.89473724 149.05203247]
[126.84892273 163.21028137]
[131.80311584 177.36853027]
[136.75729370 191.52677917]
[141.71148682 205.68502808]
[154.48774719 215.96603394]
[151.70523071 232.12739563]
[136.22634888 237.54370117]
[123.97444916 226.64309692]
[127.55323029 210.63922119]
[122.59904480 196.48097229]
[117.64485931 182.32272339]
[112.69067383 168.16445923]
[107.73648834 154.00621033]
[100.30599213 152.98754883]
[98.26866913 167.84855652]
[96.23134613 182.70954895]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 33]
[6 32]
[8 31]
[9 30]
[10 29]
[11 28]
[12 27]
[13 26]
[38 167]
[39 166]
[40 165]
[41 164]
[42 163]
[43 162]
[45 126]
[46 125]
[47 124]
[48 123]
[49 122]
[50 121]
[56 115]
[57 114]
[58 113]
[59 112]
[60 71]
[61 70]
[62 69]
[63 68]
[73 108]
[74 107]
[75 106]
[76 105]
[81 98]
[82 97]
[83 96]
[85 93]
[86 92]
[87 91]
[127 143]
[128 142]
[129 141]
[130 140]
[179 192]
[180 191]
[181 190]
[182 189]
[183 188]
] def

init

% Start Annotations
6 32 0.0 1 colorpair
8 31 0.0 0.6 colorpair
9 30 0.32 0.6 colorpair
10 29 0.16 1 colorpair
11 28 0.0 1 colorpair
12 27 0.0 0.2 colorpair
13 26 0.0 0.2 colorpair
38 167 0.0 1 colorpair
39 166 0.16 1 colorpair
40 165 0.16 1 colorpair
41 164 0.0 1 colorpair
42 163 0.0 1 colorpair
43 162 0.0 1 colorpair
45 126 0.0 0.6 colorpair
46 125 0.0 1 colorpair
47 124 0.16 1 colorpair
48 123 0.0 1 colorpair
49 122 0.0 1 colorpair
50 121 0.0 0.2 colorpair
56 115 0.0 1 colorpair
57 114 0.32 1 colorpair
58 113 0.0 1 colorpair
59 112 0.0 1 colorpair
60 71 0.0 0.6 colorpair
61 70 0.0 1 colorpair
62 69 0.0 1 colorpair
63 68 0.0 1 colorpair
73 108 0.0 0.6 colorpair
74 107 0.0 1 colorpair
75 106 0.16 1 colorpair
76 105 0.0 1 colorpair
81 98 0.0 0.6 colorpair
82 97 0.0 1 colorpair
83 96 0.0 1 colorpair
85 93 0.16 1 colorpair
86 92 0.0 1 colorpair
87 91 0.16 1 colorpair
127 143 0.0 1 colorpair
128 142 0.0 1 colorpair
129 141 0.16 1 colorpair
130 140 0.0 0.6 colorpair
179 192 0.0 1 colorpair
180 191 0.0 0.2 colorpair
181 190 0.0 1 colorpair
182 189 0.0 1 colorpair
183 188 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
5 33 6 gmark
33 cmark
8 31 1 gmark
9 30 1 gmark
9 cmark
30 cmark
10 cmark
12 27 2 gmark
13 26 2 gmark
166 cmark
165 cmark
45 126 1 gmark
47 cmark
50 121 2 gmark
57 cmark
114 cmark
60 71 1 gmark
73 108 1 gmark
75 cmark
81 98 1 gmark
93 cmark
87 cmark
141 cmark
130 140 1 gmark
180 191 2 gmark

% End Annotations
showpage
end
%%EOF
