%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Dec 19 20:17:26 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGACUGAAGUUUCUCGCAAUUAAAAUUUAUCAGUUUUACUUUCUGCUCUCUGGAAACGCCUGCUUCUUUUUUACCUGAGAGCAUUUUUUCGCAUUCUGAUUUCGUUAGUUUAGAUUUUGAAUAUCUUGUCCAGUUAGUAGGAGUGCCACCUUCCUUUUCAAUAGUGGCGGUAAUUUU\
) } def
/len { sequence length } bind def

/coor [
[47.60494232 378.33859253]
[40.10608673 378.46948242]
[30.26519966 389.79013062]
[20.42431450 401.11077881]
[10.58342838 412.43139648]
[0.74254328 423.75204468]
[-9.09834194 435.07269287]
[-18.93922806 446.39334106]
[-28.78011322 457.71398926]
[-38.42192841 469.20465088]
[-47.86173248 480.86184692]
[-57.30154037 492.51904297]
[-66.74134827 504.17620850]
[-76.18115234 515.83343506]
[-70.60218048 530.14324951]
[-72.94142151 545.32293701]
[-82.56962585 557.28924561]
[-96.89685059 562.82336426]
[-112.06915283 560.43652344]
[-124.00525665 550.77087402]
[-129.49440002 536.42639160]
[-127.06005096 521.26165771]
[-117.35701752 509.35589600]
[-102.99537659 503.91171265]
[-87.83834076 506.39361572]
[-78.39853668 494.73641968]
[-68.95872498 483.07922363]
[-59.51892090 471.42202759]
[-50.07911682 459.76483154]
[-49.68345261 454.97979736]
[-46.25923920 450.40005493]
[-40.10075760 447.87310791]
[-30.25987053 436.55245972]
[-20.41898537 425.23181152]
[-10.57810020 413.91116333]
[-0.73721498 402.59051514]
[9.10367012 391.26986694]
[18.94455528 379.94924927]
[28.78544044 368.62860107]
[38.29462433 356.16891479]
[50.44523621 350.61181641]
[61.54837418 351.62203979]
[63.37641525 336.73385620]
[65.20445251 321.84567261]
[67.03249359 306.95745850]
[68.86053467 292.06927490]
[70.68857574 277.18109131]
[72.51661682 262.29287720]
[74.34465790 247.40469360]
[65.00080872 235.86225891]
[66.64260864 220.73747253]
[78.81274414 211.01504517]
[80.64078522 196.12684631]
[82.46882629 181.23864746]
[84.29686737 166.35046387]
[86.12490082 151.46226501]
[71.03259277 144.74118042]
[58.72346115 133.72137451]
[50.38016129 119.46163177]
[46.80431366 103.33202362]
[48.33948517 86.88227844]
[54.83817673 71.69287872]
[65.67599487 59.22321320]
[57.72720718 46.50249100]
[49.77841949 33.78177261]
[41.82963181 21.06104851]
[34.60736847 15.42176437]
[33.85536575 8.04822922]
[26.12979317 -4.80928040]
[18.40422249 -17.66679001]
[2.93503952 -18.88498878]
[-8.84185982 -28.98866463]
[-12.39801693 -44.09275055]
[-6.36601686 -58.38941193]
[6.93471241 -66.38129425]
[22.38977051 -64.99536133]
[34.05636978 -54.76452255]
[37.44846725 -39.62274933]
[31.26173210 -25.39236069]
[38.98730469 -12.53485107]
[46.71287537 0.32265800]
[54.55035400 13.11226082]
[62.49914169 25.83298111]
[70.44792938 38.55370331]
[78.39672089 51.27442551]
[86.97335815 48.31644440]
[95.92741394 46.85588074]
[104.99945831 46.93505096]
[113.92665863 48.55166245]
[122.45037079 51.65887451]
[130.61994934 39.07881546]
[138.78953552 26.49875832]
[146.95912170 13.91869926]
[141.56149292 -0.50945652]
[145.64683533 -15.17790413]
[157.44656372 -24.51762390]
[172.30541992 -25.11117363]
[180.47500610 -37.69123077]
[188.64459229 -50.27128983]
[196.81417847 -62.85134888]
[204.98376465 -75.43140411]
[197.93957520 -89.07966614]
[198.67929077 -104.42073822]
[207.00392151 -117.32794189]
[220.67419434 -124.32931519]
[236.01287842 -123.54151917]
[248.89392090 -115.17646790]
[255.85241699 -101.48431396]
[255.01654053 -86.14818573]
[246.61114502 -73.29341888]
[232.89726257 -66.37788391]
[217.56382751 -67.26182556]
[209.39424133 -54.68176270]
[201.22465515 -42.10170364]
[193.05506897 -29.52164650]
[184.88548279 -16.94158745]
[190.38688660 -3.12592602]
[186.65400696 11.45246983]
[174.91537476 21.15081215]
[159.53918457 22.08828545]
[151.36959839 34.66834259]
[143.20001221 47.24840164]
[135.03042603 59.82846069]
[145.35639954 72.00572205]
[151.61257935 86.69489288]
[153.23756409 102.57793427]
[150.08555603 118.22965240]
[142.43939209 132.24563599]
[130.98516846 143.36822510]
[116.75064850 150.59939575]
[101.01309967 153.29031372]
[99.18505859 168.17849731]
[97.35701752 183.06669617]
[95.52897644 197.95487976]
[93.70093536 212.84307861]
[103.15749359 225.22093201]
[101.09151459 240.29364014]
[89.23284912 249.23274231]
[87.40480804 264.12094116]
[85.57676697 279.00912476]
[83.74872589 293.89730835]
[81.92068481 308.78549194]
[80.09264374 323.67370605]
[78.26461029 338.56188965]
[76.43656921 353.45007324]
[81.07182312 367.71594238]
[91.30179596 378.68624878]
[101.53176880 389.65655518]
[111.76174927 400.62686157]
[121.99172211 411.59716797]
[132.22169495 422.56744385]
[146.44769287 417.21121216]
[161.64039612 417.71173096]
[175.48300171 423.99270630]
[185.86462402 435.09634399]
[191.20214844 449.32937622]
[190.68164062 464.52139282]
[184.38246155 478.35571289]
[173.26519775 488.72274780]
[159.02516174 494.04153442]
[143.83383179 493.50103760]
[130.00779724 487.18365479]
[119.65541840 476.05276489]
[114.35536194 461.80575562]
[114.91584015 446.61514282]
[121.25139618 432.79742432]
[111.02141571 421.82711792]
[100.79144287 410.85681152]
[90.56147003 399.88650513]
[80.33148956 388.91619873]
[70.10151672 377.94589233]
[62.60265732 378.07681274]
[66.32086182 392.60867310]
[75.55190277 404.43185425]
[74.41531372 419.38873291]
[63.50368118 429.68124390]
[48.50596619 429.94323730]
[37.24150467 420.03811646]
[35.58321762 405.13003540]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 39]
[3 38]
[4 37]
[5 36]
[6 35]
[7 34]
[8 33]
[9 32]
[10 29]
[11 28]
[12 27]
[13 26]
[14 25]
[42 145]
[43 144]
[44 143]
[45 142]
[46 141]
[47 140]
[48 139]
[49 138]
[52 135]
[53 134]
[54 133]
[55 132]
[56 131]
[63 85]
[64 84]
[65 83]
[66 82]
[68 81]
[69 80]
[70 79]
[90 123]
[91 122]
[92 121]
[93 120]
[97 116]
[98 115]
[99 114]
[100 113]
[101 112]
[146 171]
[147 170]
[148 169]
[149 168]
[150 167]
[151 166]
] def

init

% Start Annotations
2 39 0.0 1 colorpair
3 38 0.0 1 colorpair
4 37 0.0 1 colorpair
5 36 0.0 1 colorpair
6 35 0.0 1 colorpair
7 34 0.0 1 colorpair
8 33 0.0 1 colorpair
9 32 0.0 1 colorpair
10 29 0.0 1 colorpair
11 28 0.0 1 colorpair
12 27 0.0 1 colorpair
13 26 0.0 1 colorpair
14 25 0.0 1 colorpair
42 145 0.0 1 colorpair
43 144 0.0 1 colorpair
44 143 0.0 1 colorpair
45 142 0.0 1 colorpair
46 141 0.0 1 colorpair
47 140 0.0 1 colorpair
48 139 0.0 1 colorpair
49 138 0.0 1 colorpair
52 135 0.0 1 colorpair
53 134 0.0 1 colorpair
54 133 0.0 1 colorpair
55 132 0.0 1 colorpair
56 131 0.0 1 colorpair
63 85 0.0 1 colorpair
64 84 0.0 1 colorpair
65 83 0.0 1 colorpair
66 82 0.0 1 colorpair
68 81 0.0 1 colorpair
69 80 0.0 1 colorpair
70 79 0.0 1 colorpair
90 123 0.0 1 colorpair
91 122 0.0 1 colorpair
92 121 0.0 1 colorpair
93 120 0.0 1 colorpair
97 116 0.0 1 colorpair
98 115 0.0 1 colorpair
99 114 0.0 1 colorpair
100 113 0.0 1 colorpair
101 112 0.0 1 colorpair
146 171 0.0 1 colorpair
147 170 0.0 1 colorpair
148 169 0.0 1 colorpair
149 168 0.0 1 colorpair
150 167 0.0 1 colorpair
151 166 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
