%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Dec 19 17:36:53 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGAUAUGACAAUGUUAAACCAUGUCCAUUUUGUGGUUGUCCAUCAGUAACGGUGAAAGCCAUUUCAGGAUAUUACCGAGCGAAGUGUAACGGAUGCGAAUCCCGAACCGGCUAUGGUGGAAGUGAAAAAGAAGCACUCGAAAGAUGGAAUAAACGAACCACUGGAAAUAAUAAUGGAGGUGUUCAUGUA\
) } def
/len { sequence length } bind def

/coor [
[49.92733002 404.43215942]
[40.93876648 392.42358398]
[32.94434357 379.73150635]
[25.99578285 366.43798828]
[20.13803101 352.62905884]
[15.40898228 338.39401245]
[11.83922958 323.82498169]
[9.45186520 309.01617432]
[8.26233292 294.06341553]
[8.27832890 279.06344604]
[9.49974728 264.11325073]
[11.91868973 249.30957031]
[15.51950550 234.74818420]
[20.27890205 220.52326965]
[26.16609192 206.72685242]
[33.14298630 193.44819641]
[41.16445923 180.77317810]
[50.17861176 168.78381348]
[60.12713623 157.55763245]
[70.94567871 147.16729736]
[82.55747986 137.68507385]
[89.43970490 124.35709381]
[77.01020813 132.75398254]
[64.58071899 141.15087891]
[52.15122604 149.54776001]
[39.72173309 157.94464111]
[38.27847672 173.51548767]
[27.12782860 184.47892761]
[11.53478718 185.65837097]
[-1.13809037 176.49691772]
[-4.90705967 161.32032776]
[2.00747204 147.29452515]
[16.34067345 141.04205322]
[31.32484627 145.51515198]
[43.75433731 137.11827087]
[56.18383026 128.72137451]
[68.61331940 120.32449341]
[81.04281616 111.92760468]
[66.10922241 113.33755493]
[51.17563629 114.74749756]
[37.33485413 120.52960205]
[22.35336113 119.78472137]
[9.15439034 112.65821075]
[0.31336725 100.54061127]
[-2.44462252 85.79634094]
[1.41856885 71.30234528]
[11.14914417 59.88674927]
[24.84844398 53.77698517]
[39.84341812 54.16521454]
[53.20820236 60.97568512]
[62.33391953 72.87712097]
[74.58534241 81.53175354]
[86.83675385 90.18639374]
[80.23438263 76.71759033]
[73.63200378 63.24879074]
[67.02962494 49.77998734]
[68.71765900 64.68470764]
[66.98645782 79.58446503]
[61.92596817 93.70507050]
[53.79914856 106.31279755]
[43.02826691 116.75254059]
[30.17299843 124.48183441]
[15.90130615 129.09906006]
[0.95476276 130.36431885]
[-13.88999557 128.21183777]
[-27.86162186 122.75347900]
[-40.23413849 114.27285767]
[-50.36465454 103.21064758]
[-57.72678375 90.14163208]
[-61.93798447 75.74490356]
[-62.77943039 60.76852417]
[-60.20740891 45.99068069]
[-54.35556030 32.17924118]
[-45.52795029 20.05186272]
[-34.18327332 10.23869324]
[-20.91100693 3.24963593]
[-6.40078926 -0.55215275]
[8.59341431 -0.96912801]
[23.29249191 2.02037644]
[36.93266296 8.26102352]
[48.80517960 17.42854309]
[58.29252243 29.04564476]
[53.26432800 14.91350937]
[39.44921494 6.75739670]
[37.35510635 -9.14839649]
[48.58842850 -20.60230827]
[64.53192902 -18.81787491]
[72.95513153 -5.16396427]
[67.39646149 9.88531399]
[72.42465973 24.01745033]
[79.86883545 23.10410309]
[78.04237366 8.21571732]
[92.93078613 6.38948298]
[94.75719452 21.27740860]
[102.20137024 20.36406136]
[103.66403961 5.43554497]
[105.12670135 -9.49297142]
[97.86200714 -24.19522667]
[107.18604279 -37.68575668]
[123.50704193 -36.08665848]
[130.03535461 -21.04295158]
[120.05521393 -8.03030777]
[118.59255219 6.89820862]
[117.12989044 21.82672501]
[111.39090729 30.95950890]
[104.22151184 37.76921082]
[96.25498199 42.07335281]
[88.13801575 43.83837128]
[80.49842834 43.17761230]
[87.10080719 56.64641571]
[93.70318604 70.11521912]
[100.30555725 83.58401489]
[107.46805573 85.80856323]
[107.27275848 70.80983734]
[121.47705078 65.98925781]
[130.45104980 78.00871277]
[121.79305267 90.25765991]
[128.95555115 92.48220825]
[142.02655029 85.12361908]
[155.09756470 77.76502228]
[168.16856384 70.40643311]
[165.97427368 55.38812256]
[169.35722351 40.59217453]
[177.85987854 28.01961327]
[190.33233643 19.37077713]
[205.08778381 15.81534863]
[220.13067627 17.83417130]
[233.42660522 25.15421486]
[243.17736816 36.78550720]
[248.06428528 51.15500641]
[247.42642212 66.31935883]
[241.35005188 80.22770691]
[230.65696716 90.99906921]
[216.79328918 97.17669678]
[201.63400269 97.92512512]
[187.22924805 93.14312744]
[175.52716064 83.47743225]
[162.45614624 90.83602905]
[149.38514709 98.19461823]
[136.31414795 105.55321503]
[151.31292725 105.36201477]
[166.03123474 102.46865082]
[180.93444824 100.76748657]
[195.92617798 100.26951599]
[210.90943909 100.97797394]
[225.78730774 102.88827515]
[240.46353149 105.98805237]
[254.84315491 110.25726318]
[268.83319092 115.66828156]
[282.34310913 122.18611145]
[295.28552246 129.76858521]
[307.57672119 138.36665344]
[319.13714600 147.92468262]
[329.89208984 158.38085938]
[339.77191162 169.66754150]
[348.71270752 181.71170044]
[356.65667725 194.43544006]
[363.55239868 207.75643921]
[369.35528564 221.58853149]
[374.02777100 235.84222412]
[377.53964233 250.42532349]
[379.86819458 265.24346924]
[380.99835205 280.20083618]
[380.92279053 295.20065308]
[379.64202881 310.14587402]
[377.16430664 324.93981934]
[373.50570679 339.48681641]
[368.68988037 353.69271851]
[362.74795532 367.46563721]
[355.71838379 380.71649170]
[347.64663696 393.35955811]
[338.58496094 405.31304932]
[328.59194946 416.49963379]
[317.73223877 426.84692383]
[306.07608032 436.28802490]
[293.69891357 444.76184082]
[280.68078613 452.21353149]
[267.10586548 458.59494019]
[253.06205750 463.86477661]
[238.64013672 467.98889160]
[223.93344116 470.94067383]
[209.03709412 472.70101929]
[194.04745483 473.25848389]
[179.06150818 472.60952759]
[164.17617798 470.75833130]
[149.48776245 467.71682739]
[135.09129333 463.50476074]
[121.07988739 458.14932251]
[107.54419708 451.68518066]
[94.57177734 444.15417480]
[82.24655151 435.60498047]
[70.64823914 426.09292603]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 38]
[23 37]
[24 36]
[25 35]
[26 34]
[53 112]
[54 111]
[55 110]
[56 109]
[82 90]
[83 89]
[95 104]
[96 103]
[97 102]
[118 140]
[119 139]
[120 138]
[121 137]
] def

init

% Start Annotations
22 38 0.16 1 colorpair
23 37 0.0 1 colorpair
25 35 0.0 1 colorpair
26 34 0.0 1 colorpair
53 112 0.16 0.2 colorpair
55 110 0.16 1 colorpair
82 90 0.16 1 colorpair
83 89 0.16 1 colorpair
95 104 0.16 0.2 colorpair
96 103 0.48 0.6 colorpair
97 102 0.16 1 colorpair
121 137 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
22 cmark
24 36 3 gmark
24 cmark
36 cmark
53 112 2 gmark
53 cmark
112 cmark
54 111 7 gmark
54 cmark
111 cmark
110 cmark
56 109 3 gmark
109 cmark
90 cmark
83 cmark
95 104 2 gmark
104 cmark
96 103 1 gmark
96 cmark
103 cmark
102 cmark
118 140 3 gmark
118 cmark
119 139 3 gmark
119 cmark
139 cmark
120 138 5 gmark
120 cmark
138 cmark
121 137 1 gmark

% End Annotations
showpage
end
%%EOF
