%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Dec 19 18:06:56 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_ACUAUGAGAUAUGACAAUGUUAAACCAUGUCCGUUUUGUGGUUGUC_________CAUCAGUAACGGUGAAAGCCA_______UUUCAGGA________UAUUACCGAGCGAAGUGUAACGGAUGCGAAUCCCGAACCGGCUAUGGUGGAAGUGAAAAAGAAGCACUCGAAAGAUGGAAUAAACGAAC_______CACUGGAAAUAA_UAAUGGAGGUGUUCAUGUA_______\
) } def
/len { sequence length } bind def

/coor [
[38.79629135 638.45538330]
[23.91760826 636.55523682]
[9.09721279 634.24407959]
[-5.65354300 631.52368164]
[-20.32335854 628.39605713]
[-34.90099716 624.86358643]
[-49.37528610 620.92907715]
[-63.73514175 616.59545898]
[-77.96955872 611.86608887]
[-92.06764221 606.74462891]
[-106.01857758 601.23492432]
[-119.81168365 595.34118652]
[-133.43640137 589.06805420]
[-146.88227844 582.42016602]
[-160.13902283 575.40277100]
[-173.19647217 568.02111816]
[-186.04464722 560.28094482]
[-198.67366028 552.18817139]
[-211.07388306 543.74896240]
[-223.23577881 534.96978760]
[-235.15005493 525.85742188]
[-246.80758667 516.41876221]
[-258.19940186 506.66110229]
[-269.31683350 496.59191895]
[-280.15133667 486.21890259]
[-290.69458008 475.55001831]
[-300.93853760 464.59344482]
[-310.87533569 453.35751343]
[-320.49737549 441.85092163]
[-329.79727173 430.08239746]
[-338.76788330 418.06103516]
[-347.40237427 405.79598999]
[-359.90209961 414.08801270]
[-372.40179443 422.38000488]
[-376.98046875 437.75579834]
[-391.90988159 443.62884521]
[-405.73742676 435.49383545]
[-407.85583496 419.59124756]
[-396.64001465 408.12020874]
[-380.69378662 409.88031006]
[-368.19409180 401.58828735]
[-355.69436646 393.29629517]
[-363.63699341 380.57229614]
[-371.22445679 367.63333130]
[-378.45089722 354.48934937]
[-385.31079102 341.15042114]
[-391.79888916 327.62673950]
[-397.91024780 313.92868042]
[-403.64013672 300.06671143]
[-408.98422241 286.05148315]
[-413.93835449 271.89373779]
[-418.49877930 257.60430908]
[-422.66195679 243.19410706]
[-426.42474365 228.67422485]
[-429.78427124 214.05577087]
[-432.73791504 199.34994507]
[-435.28341675 184.56799316]
[-437.41885376 169.72126770]
[-439.14257812 154.82112122]
[-440.45327759 139.87896729]
[-441.34994507 124.90628052]
[-441.83187866 109.91450500]
[-441.89871216 94.91513062]
[-441.55041504 79.91966248]
[-440.78726196 64.93956757]
[-439.60977173 49.98633575]
[-438.01892090 35.07141876]
[-436.01589966 20.20624352]
[-433.60223389 5.40219736]
[-430.77978516 -9.32937813]
[-427.55068970 -23.97719765]
[-423.91748047 -38.53004074]
[-419.88287354 -52.97675705]
[-415.44998169 -67.30627441]
[-410.62222290 -81.50762939]
[-405.40328979 -95.56992340]
[-399.79718018 -109.48239899]
[-393.80816650 -123.23439026]
[-387.44082642 -136.81536865]
[-380.70010376 -150.21492004]
[-373.59109497 -163.42277527]
[-366.11929321 -176.42883301]
[-358.29037476 -189.22312927]
[-350.11038208 -201.79583740]
[-341.58557129 -214.13735962]
[-332.72244263 -226.23822021]
[-323.52783203 -238.08914185]
[-314.00872803 -249.68106079]
[-304.17248535 -261.00509644]
[-294.02661133 -272.05258179]
[-283.57885742 -282.81503296]
[-272.83724976 -293.28421021]
[-261.81002808 -303.45208740]
[-250.50563049 -313.31088257]
[-238.93270874 -322.85305786]
[-227.10012817 -332.07128906]
[-215.01696777 -340.95849609]
[-202.69247437 -349.50790405]
[-190.13607788 -357.71295166]
[-177.35742188 -365.56732178]
[-164.36628723 -373.06506348]
[-151.17262268 -380.20037842]
[-137.78652954 -386.96780396]
[-124.21827698 -393.36218262]
[-110.47824860 -399.37860107]
[-96.57698059 -405.01245117]
[-82.52510834 -410.25939941]
[-68.33341217 -415.11547852]
[-54.01275635 -419.57690430]
[-39.57411194 -423.64028931]
[-25.02853966 -427.30252075]
[-10.38718605 -430.56079102]
[4.33873415 -433.41259766]
[19.13793945 -435.85577393]
[33.99909210 -437.88842773]
[48.91080856 -439.50900269]
[63.86166382 -440.71627808]
[78.84020233 -441.50933838]
[93.83495331 -441.88751221]
[108.83442688 -441.85055542]
[123.82713318 -441.39852905]
[138.80158997 -440.53170776]
[153.74630737 -439.25079346]
[168.64985657 -437.55676270]
[183.50082397 -435.45092773]
[198.28781128 -432.93487549]
[212.99951172 -430.01055908]
[227.62463379 -426.68020630]
[242.15199280 -422.94635010]
[256.57043457 -418.81188965]
[270.86895752 -414.27996826]
[285.03656006 -409.35406494]
[299.06240845 -404.03793335]
[312.93572998 -398.33569336]
[326.64596558 -392.25164795]
[340.18255615 -385.79052734]
[353.53515625 -378.95721436]
[366.69351196 -371.75698853]
[379.64755249 -364.19537354]
[392.38735962 -356.27810669]
[404.90316772 -348.01132202]
[417.18539429 -339.40130615]
[429.22463989 -330.45465088]
[441.01165771 -321.17825317]
[452.53744507 -311.57919312]
[463.79315186 -301.66482544]
[474.77014160 -291.44274902]
[485.46005249 -280.92077637]
[495.85464478 -270.10699463]
[505.94598389 -259.00967407]
[515.72631836 -247.63732910]
[525.18817139 -235.99865723]
[534.32434082 -224.10256958]
[543.12768555 -211.95820618]
[551.59161377 -199.57484436]
[559.70959473 -186.96197510]
[567.47540283 -174.12927246]
[574.88299561 -161.08656311]
[581.92687988 -147.84384155]
[588.60150146 -134.41125488]
[594.90185547 -120.79907227]
[600.82305908 -107.01774597]
[606.36059570 -93.07781982]
[611.51019287 -78.98998260]
[616.26794434 -64.76502228]
[620.63012695 -50.41384125]
[624.59356689 -35.94742584]
[628.15502930 -21.37686157]
[631.31188965 -6.71331263]
[634.06176758 8.03198814]
[636.40246582 22.84774590]
[638.33227539 37.72260666]
[639.84960938 52.64517975]
[640.95343018 67.60403442]
[641.64276123 82.58769989]
[641.91717529 97.58470917]
[641.77648926 112.58356476]
[641.22070312 127.57278442]
[640.25024414 142.54087830]
[638.86596680 157.47639465]
[637.06884766 172.36785889]
[634.86035156 187.20388794]
[632.24200439 201.97311401]
[629.21594238 216.66423035]
[625.78448486 231.26596069]
[621.95019531 245.76712036]
[617.71606445 260.15661621]
[613.08532715 274.42343140]
[608.06152344 288.55661011]
[602.64843750 302.54534912]
[596.85034180 316.37890625]
[590.67156982 330.04669189]
[584.11694336 343.53823853]
[577.19140625 356.84323120]
[569.90032959 369.95144653]
[562.24920654 382.85287476]
[554.24401855 395.53759766]
[545.89080811 407.99591064]
[537.19598389 420.21826172]
[528.16625977 432.19531250]
[518.80853271 443.91784668]
[509.12994385 455.37692261]
[499.13793945 466.56375122]
[488.84014893 477.46978760]
[478.24444580 488.08660889]
[467.35900879 498.40612793]
[456.19213867 508.42044067]
[444.75238037 518.12182617]
[433.04849243 527.50292969]
[421.08947754 536.55657959]
[408.88449097 545.27569580]
[396.44287109 553.65374756]
[383.77413940 561.68420410]
[370.88800049 569.36102295]
[357.79434204 576.67828369]
[344.50320435 583.63031006]
[331.02474976 590.21185303]
[317.36929321 596.41784668]
[303.54733276 602.24353027]
[289.56942749 607.68444824]
[275.44628906 612.73645020]
[261.18875122 617.39569092]
[246.80772400 621.65850830]
[232.31422424 625.52166748]
[217.71937561 628.98223877]
[203.03433228 632.03759766]
[188.27035522 634.68536377]
[173.43875122 636.92346191]
[158.55088806 638.75030518]
[143.61817932 640.16436768]
[128.65205383 641.16461182]
[113.66397095 641.75030518]
[98.66542053 641.92095947]
[83.66789246 641.67645264]
[68.68288422 641.01690674]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 42]
[33 41]
[34 40]
] def

init

% Start Annotations
32 42 0.0 0.6 colorpair
33 41 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
32 42 1 gmark
34 40 13 gmark
34 cmark
40 cmark

% End Annotations
showpage
end
%%EOF
