%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Dec 19 17:36:58 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGAUAUGACAAUGUUAAACCAUGUCCAUUUUGUGGUUGUCCAUCAGUAACGGUGAAAGCCAUUUCAGGAUAUUACCGAGCGAAGUGUAACGGAUGCGAAUCCCGAACCGGCUAUGGUGGAAGUGAAAAAGAAGCACUCGAAAGAUGGAAUAAACGAACCACUGGAAAUAAUAAUGGAG_GUGUUCAUGUA\
) } def
/len { sequence length } bind def

/coor [
[50.79430008 405.59539795]
[41.89310074 393.52194214]
[33.97756195 380.78048706]
[27.09755516 367.45138550]
[21.29643440 353.61856079]
[16.61075020 339.36920166]
[13.07002831 324.79306030]
[10.69657612 309.98202515]
[9.50535107 295.02941895]
[9.50385666 280.02941895]
[10.69210339 265.07653809]
[13.06260395 250.26504517]
[16.60042381 235.68821716]
[21.28326797 221.43792725]
[27.08163261 207.60394287]
[33.95898056 194.27345276]
[41.87198257 181.53044128]
[50.77077866 169.45518494]
[60.59929276 158.12380981]
[71.29560089 147.60768127]
[82.78919220 137.97546387]
[89.60423279 124.61300659]
[77.21717072 133.07235718]
[64.83010864 141.53172302]
[52.44304657 149.99107361]
[40.05598450 158.45042419]
[38.69113541 174.02833557]
[27.59582138 185.04777527]
[12.00891685 186.30570984]
[-0.70992208 177.20817566]
[-4.55524731 162.05075073]
[2.28858638 147.99031067]
[16.59012985 141.66575623]
[31.59663010 146.06336975]
[43.98369217 137.60401917]
[56.37075424 129.14465332]
[68.75782013 120.68530273]
[81.14488220 112.22594452]
[66.21857452 113.71105194]
[51.29227829 115.19616699]
[37.52599335 121.15346527]
[22.53660965 120.58917999]
[9.25718403 113.61373138]
[0.28617287 101.59204865]
[-2.62101793 86.87646484]
[1.10447800 72.34647369]
[10.73367214 60.84523010]
[24.38236809 54.62324524]
[39.37985229 54.89801025]
[52.79148483 61.61576080]
[61.99322510 73.46261597]
[74.36328125 81.94681549]
[86.73334503 90.43101501]
[79.94513702 77.05490875]
[73.15692902 63.67879868]
[66.36872864 50.30268860]
[68.26730347 65.18205261]
[66.74692535 80.10479736]
[61.88657379 94.29553986]
[53.93880844 107.01689911]
[43.31659698 117.60787201]
[30.57188606 125.51813507]
[16.36689758 130.33666992]
[1.43973577 131.81309509]
[-13.43396950 129.87071228]
[-27.48136711 124.61042023]
[-39.97254181 116.30557251]
[-50.25844193 105.38768005]
[-57.80459976 92.42406464]
[-62.21891403 78.08831024]
[-63.27200699 63.12532043]
[-60.90916443 48.31259155]
[-55.25316238 34.41979980]
[-46.59788895 22.16883087]
[-35.39307785 12.19625664]
[-22.22094727 5.02025890]
[-7.76592827 1.01371050]
[7.22088146 0.38479453]
[21.96075439 3.16619039]
[35.68778992 9.21337414]
[47.68872452 18.21212769]
[57.33935928 29.69394112]
[52.10774612 15.63584042]
[38.17636490 7.67994642]
[35.85293579 -8.19397068]
[46.91979218 -19.80879974]
[62.88739014 -18.25463867]
[71.50675201 -4.72370577]
[66.16584778 10.40422344]
[71.39746094 24.46232414]
[78.82652283 23.43322754]
[76.76857758 8.57507038]
[91.62677002 6.51737022]
[93.68464661 21.37503433]
[101.11370850 20.34593964]
[102.32691956 5.39508152]
[103.54012299 -9.55577564]
[96.03096771 -24.13468552]
[105.12846375 -37.77901077]
[121.47388458 -36.45264053]
[128.25245667 -21.52003098]
[118.49098206 -8.34256840]
[117.27777100 6.60828829]
[116.06456757 21.55914497]
[110.46956635 30.80027199]
[103.40205383 37.73511505]
[95.49541473 42.17021179]
[87.39886475 44.06184769]
[79.74483490 43.51448441]
[86.53304291 56.89059448]
[93.32124329 70.26670074]
[100.10945129 83.64280701]
[107.31029510 85.73990631]
[106.84903717 70.74700165]
[120.96566010 65.67543030]
[130.15113831 77.53404999]
[121.71199036 89.93410492]
[128.91282654 92.03120422]
[141.82148743 84.39139557]
[154.73014832 76.75159454]
[167.63880920 69.11179352]
[165.11994934 54.14450455]
[168.18182373 39.27879333]
[176.41035461 26.52512932]
[188.69267273 17.60834122]
[203.36770630 13.73435020]
[218.45077515 15.42708206]
[231.90202332 22.45760918]
[241.90228271 33.87510681]
[247.09909058 48.13545990]
[246.78962708 63.31006622]
[241.01574707 77.34668732]
[230.55830383 88.34698486]
[216.83160400 94.82325745]
[201.69206238 95.89964294]
[187.18717957 91.43057251]
[175.27861023 82.02045441]
[162.36994934 89.66025543]
[149.46128845 97.30005646]
[136.55264282 104.93985748]
[151.54376221 104.42404175]
[166.21279907 101.29042053]
[181.08415222 99.33015442]
[196.06414795 98.55560303]
[211.05838013 98.97163391]
[225.97236633 100.57563782]
[240.71214294 103.35749817]
[255.18484497 107.29969788]
[269.29928589 112.37738800]
[282.96649170 118.55857849]
[296.10040283 125.80432129]
[308.61822510 134.06895447]
[320.44107056 143.30041504]
[331.49447632 153.44053650]
[341.70880127 164.42541504]
[351.01968384 176.18585205]
[359.36843872 188.64773560]
[366.70245361 201.73252869]
[372.97552490 215.35781860]
[378.14816284 229.43774414]
[382.18771362 243.88356018]
[385.06878662 258.60427856]
[386.77316284 273.50714111]
[387.29016113 288.49822998]
[386.61651611 303.48309326]
[384.75643921 318.36730957]
[381.72164917 333.05709839]
[377.53131104 347.45993042]
[372.21179199 361.48498535]
[365.79663086 375.04397583]
[358.32626343 388.05139160]
[349.84771729 400.42532349]
[340.41442871 412.08779907]
[330.08584595 422.96533203]
[318.92703247 432.98934937]
[307.00833130 442.09671021]
[294.40481567 450.23007202]
[281.19589233 457.33813477]
[267.46481323 463.37612915]
[253.29808044 468.30599976]
[238.78495789 472.09671021]
[224.01690674 474.72436523]
[209.08695984 476.17236328]
[194.08920288 476.43167114]
[179.11811829 475.50057983]
[164.26806641 473.38497925]
[149.63259888 470.09817505]
[135.30392456 465.66094971]
[121.37233734 460.10116577]
[107.92561340 453.45394897]
[95.04849243 445.76110840]
[82.82209778 437.07116699]
[71.32347107 427.43884277]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 38]
[23 37]
[24 36]
[25 35]
[26 34]
[53 112]
[54 111]
[55 110]
[56 109]
[82 90]
[83 89]
[95 104]
[96 103]
[97 102]
[118 140]
[119 139]
[120 138]
[121 137]
] def

init

% Start Annotations
22 38 0.16 1 colorpair
23 37 0.0 1 colorpair
25 35 0.0 1 colorpair
26 34 0.0 1 colorpair
53 112 0.16 0.2 colorpair
55 110 0.16 1 colorpair
82 90 0.16 1 colorpair
83 89 0.16 1 colorpair
95 104 0.16 0.2 colorpair
96 103 0.48 0.6 colorpair
97 102 0.16 1 colorpair
121 137 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
22 cmark
24 36 3 gmark
24 cmark
36 cmark
53 112 2 gmark
53 cmark
112 cmark
54 111 7 gmark
54 cmark
111 cmark
110 cmark
56 109 3 gmark
109 cmark
90 cmark
83 cmark
95 104 2 gmark
104 cmark
96 103 1 gmark
96 cmark
103 cmark
102 cmark
118 140 3 gmark
118 cmark
119 139 3 gmark
119 cmark
139 cmark
120 138 5 gmark
120 cmark
138 cmark
121 137 1 gmark

% End Annotations
showpage
end
%%EOF
