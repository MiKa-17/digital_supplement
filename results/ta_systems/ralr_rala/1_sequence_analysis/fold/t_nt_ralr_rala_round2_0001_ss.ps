%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Dec 19 17:46:29 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAGAUAUGACAAUGUUAAACCAUGUCCAUUUUGUGGUUGUCCAUCAGUAACGGUGAAAGCCAUUUCAGGAUAUUACCGAGCGAAGUGUAACGGAUGCGAAUCCCGAACCGGCUAUGGUGGAAGUGAAAAAGAAGCACUCGAAAGAUGGAAUAAACGAACCACUGGAAAUAAUAAUGGAGGUGUUCAUGUAUAA\
) } def
/len { sequence length } bind def

/coor [
[88.87381744 175.17251587]
[89.59482574 160.18984985]
[90.31582642 145.20719910]
[91.03683472 130.22453308]
[83.54550171 129.86402893]
[75.97620392 142.81414795]
[68.40690613 155.76428223]
[60.83760834 168.71440125]
[53.26831055 181.66453552]
[45.69901276 194.61465454]
[54.27220535 207.24252319]
[56.50886154 222.34086609]
[51.96489716 236.91191101]
[41.54251480 248.06254578]
[27.31108475 253.57881165]
[12.09627342 252.36544800]
[-1.08101153 244.66337585]
[-9.60440922 232.00184631]
[-11.78159332 216.89480591]
[-7.18028164 202.34178162]
[3.28593159 191.23226929]
[17.53897285 185.77209473]
[32.74888992 187.04534912]
[40.31818771 174.09523010]
[47.88748550 161.14511108]
[55.45678329 148.19497681]
[63.02608109 135.24485779]
[70.59538269 122.29473114]
[71.44219971 89.89856720]
[94.32242584 77.00828552]
[95.52327728 62.05642700]
[96.72412872 47.10457230]
[97.92498016 32.15271759]
[99.12583923 17.20086479]
[100.08689117 2.23168325]
[100.80789948 -12.75097847]
[101.52890015 -27.73364067]
[102.24990845 -42.71630096]
[102.97091675 -57.69896317]
[103.69191742 -72.68162537]
[93.29173279 -85.38397980]
[96.32809448 -101.44703674]
[89.17775726 -114.63311768]
[82.02742004 -127.81919861]
[74.87708282 -141.00527954]
[67.72674561 -154.19136047]
[60.57640839 -167.37742615]
[45.36659241 -166.72717285]
[31.43949318 -172.72073364]
[21.53629684 -184.12016296]
[17.58080864 -198.62930298]
[20.30590057 -213.35626221]
[29.11839867 -225.38977051]
[21.96806145 -238.57585144]
[14.81772518 -251.76193237]
[7.66738749 -264.94799805]
[-3.27372289 -275.20919800]
[-16.89083290 -281.50000000]
[-30.50794411 -287.79083252]
[-44.12505341 -294.08163452]
[-60.39863205 -292.05612183]
[-70.07238770 -305.29812622]
[-63.19479370 -320.18539429]
[-46.84092712 -321.40319824]
[-37.83424377 -307.69876099]
[-24.21713257 -301.40792847]
[-10.60002232 -295.11712646]
[3.01708817 -288.82632446]
[8.56917286 -293.86856079]
[25.22542763 -308.99533081]
[20.27124214 -323.15359497]
[15.31705666 -337.31182861]
[10.36287022 -351.47009277]
[-6.96652031 -354.32556152]
[-20.39917946 -365.50177002]
[-26.29809570 -381.85549927]
[-23.12550163 -398.85818481]
[-11.84253788 -411.84979248]
[-17.24797249 -425.84194946]
[-22.65340805 -439.83413696]
[-37.25168610 -451.04843140]
[-33.88397598 -468.26583862]
[-39.51298141 -482.16961670]
[-45.14198685 -496.07336426]
[-56.69034576 -508.48593140]
[-47.95977020 -523.01910400]
[-31.57768631 -518.65289307]
[-31.23823547 -501.70236206]
[-25.60923195 -487.79861450]
[-19.98022652 -473.89486694]
[-8.96178722 -468.88394165]
[-4.16218996 -457.33633423]
[-8.66122150 -445.23959351]
[-3.25578642 -431.24740601]
[2.14964843 -417.25521851]
[14.78310585 -416.65783691]
[26.29281425 -411.30319214]
[34.95103836 -401.95599365]
[39.44334793 -389.98321533]
[39.06809616 -377.15414429]
[33.84575272 -365.37893677]
[24.52112007 -356.42428589]
[29.47530556 -342.26602173]
[34.42949295 -328.10778809]
[39.38367844 -313.94952393]
[41.70799637 -298.15869141]
[37.97196579 -284.78939819]
[30.18016052 -275.80880737]
[20.85346603 -272.09835815]
[28.00380325 -258.91226196]
[35.15414047 -245.72618103]
[42.30447769 -232.54011536]
[57.19714355 -233.36105347]
[71.02626801 -227.61085510]
[81.02834320 -216.38056946]
[85.17952728 -201.86203003]
[82.60494995 -186.92019653]
[73.76248932 -174.52777100]
[80.91282654 -161.34169006]
[88.06316376 -148.15560913]
[95.21350098 -134.96952820]
[102.36383820 -121.78345490]
[109.51417542 -108.59737396]
[123.85952759 -104.21435547]
[137.15850830 -111.15242767]
[150.45750427 -118.09050751]
[163.75650024 -125.02857971]
[165.04591370 -140.40196228]
[174.46022034 -152.62384033]
[188.99537659 -157.79425049]
[204.01322937 -154.26332092]
[214.72166443 -143.15779114]
[217.70364380 -128.02136230]
[212.00764465 -113.68402863]
[199.45121765 -104.72078705]
[184.04109192 -103.99176025]
[170.69456482 -111.72959137]
[157.39558411 -104.79151154]
[144.09658813 -97.85343933]
[130.79760742 -90.91536713]
[145.79484558 -90.62822723]
[159.46977234 -96.79235077]
[174.39016724 -98.33564758]
[189.03726196 -95.10102081]
[201.92008972 -87.41773224]
[211.72726440 -76.06787872]
[217.46052551 -62.20679092]
[218.53623962 -47.24541473]
[214.84494019 -32.70669937]
[206.76234436 -20.07057571]
[195.11120605 -10.62329865]
[181.07751465 -5.32652950]
[166.08981323 -4.71943665]
[151.67370605 -8.86381817]
[139.29664612 -17.33780861]
[130.21853638 -29.27882004]
[125.36343384 -43.47135544]
[125.22490692 -58.46642685]
[118.67458344 -71.96061707]
[117.95357513 -56.97795868]
[117.23256683 -41.99529648]
[116.51156616 -27.01263428]
[115.79055786 -12.02997208]
[115.06954956 2.95268941]
[117.56880188 7.03569984]
[117.52111053 12.73421192]
[114.07769012 18.40171814]
[112.87683868 33.35357285]
[111.67598724 48.30542755]
[110.47512817 63.25728226]
[109.27427673 78.20913696]
[118.60879517 81.37807465]
[126.64802551 88.63629150]
[131.60697937 99.35437012]
[132.03419495 112.13973236]
[127.12793732 125.01522827]
[133.41874695 138.63233948]
[139.70956421 152.24945068]
[146.00036621 165.86656189]
[152.29118347 179.48367310]
[165.99562073 188.49035645]
[164.77783203 204.84422302]
[149.89056396 211.72181702]
[136.64855957 202.04806519]
[138.67407227 185.77449036]
[132.38325500 172.15737915]
[126.09245300 158.54026794]
[119.80163574 144.92315674]
[113.51082611 131.30604553]
[106.01949310 130.94554138]
[105.29849243 145.92820740]
[104.57748413 160.91085815]
[103.85647583 175.89352417]
[107.80063629 190.36569214]
[95.25558472 198.58892822]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 28]
[6 27]
[7 26]
[8 25]
[9 24]
[10 23]
[30 171]
[31 170]
[32 169]
[33 168]
[34 167]
[35 164]
[36 163]
[37 162]
[38 161]
[39 160]
[40 159]
[42 123]
[43 122]
[44 121]
[45 120]
[46 119]
[47 118]
[53 112]
[54 111]
[55 110]
[56 109]
[57 68]
[58 67]
[59 66]
[60 65]
[70 105]
[71 104]
[72 103]
[73 102]
[78 95]
[79 94]
[80 93]
[82 90]
[83 89]
[84 88]
[124 140]
[125 139]
[126 138]
[127 137]
[176 189]
[177 188]
[178 187]
[179 186]
[180 185]
] def

init

% Start Annotations
5 28 0.0 0.2 colorpair
6 27 0.32 0.2 colorpair
7 26 0.16 0.2 colorpair
8 25 0.0 0.2 colorpair
9 24 0.0 0.2 colorpair
10 23 0.0 0.2 colorpair
31 170 0.0 1 colorpair
32 169 0.0 1 colorpair
33 168 0.0 0.6 colorpair
34 167 0.16 1 colorpair
35 164 0.0 1 colorpair
36 163 0.16 1 colorpair
37 162 0.16 1 colorpair
38 161 0.0 1 colorpair
39 160 0.0 1 colorpair
40 159 0.0 1 colorpair
42 123 0.0 0.6 colorpair
43 122 0.0 1 colorpair
44 121 0.16 1 colorpair
45 120 0.0 1 colorpair
46 119 0.0 1 colorpair
47 118 0.0 0.2 colorpair
53 112 0.0 1 colorpair
54 111 0.32 1 colorpair
55 110 0.0 1 colorpair
56 109 0.0 1 colorpair
57 68 0.0 0.6 colorpair
58 67 0.0 1 colorpair
59 66 0.0 1 colorpair
60 65 0.0 1 colorpair
70 105 0.0 0.6 colorpair
71 104 0.0 1 colorpair
72 103 0.16 1 colorpair
73 102 0.0 1 colorpair
78 95 0.0 0.6 colorpair
79 94 0.0 1 colorpair
80 93 0.0 1 colorpair
82 90 0.16 1 colorpair
83 89 0.0 1 colorpair
84 88 0.16 1 colorpair
124 140 0.0 1 colorpair
125 139 0.0 1 colorpair
126 138 0.16 0.6 colorpair
127 137 0.0 0.6 colorpair
176 189 0.0 1 colorpair
177 188 0.0 0.2 colorpair
178 187 0.16 1 colorpair
179 186 0.16 1 colorpair
180 185 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
5 28 2 gmark
6 27 2 gmark
6 cmark
27 cmark
7 26 2 gmark
7 cmark
8 25 2 gmark
9 24 2 gmark
10 23 2 gmark
30 171 5 gmark
30 cmark
33 168 1 gmark
167 cmark
163 cmark
162 cmark
42 123 1 gmark
44 cmark
47 118 2 gmark
54 cmark
111 cmark
57 68 1 gmark
70 105 1 gmark
72 cmark
78 95 1 gmark
90 cmark
84 cmark
126 138 1 gmark
138 cmark
127 137 1 gmark
177 188 2 gmark
187 cmark
186 cmark

% End Annotations
showpage
end
%%EOF
