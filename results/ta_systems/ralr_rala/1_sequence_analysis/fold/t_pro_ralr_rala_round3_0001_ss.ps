%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Dec 19 17:56:29 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___AUGAGAUAUGACAAUGUUAAACCAUGUCCGUUUUGUGGUUGUCCAUCAGUAACGGUGAAAGCCAUUUCAGGAUAUUACCGAGC___GAAGUGUAACGGAUGCGAAUCCCGAACCGGCUAUGGUGGAAGUGAAAAAGAAGCACUCGAAAGAUGGAAUAAACGAACCACUGGAAAUAAUAAUGGAGG_UGUUCAU______GUA_\
) } def
/len { sequence length } bind def

/coor [
[237.68664551 390.43557739]
[227.08007812 395.23056030]
[216.30686951 399.63836670]
[205.38110352 403.65319824]
[194.31713867 407.26977539]
[183.12948608 410.48336792]
[171.83280945 413.28979492]
[160.44190979 415.68530273]
[148.97175598 417.66680908]
[137.43736267 419.23171997]
[125.85388184 420.37792969]
[114.23648834 421.10397339]
[102.60042572 421.40890503]
[90.96095276 421.29229736]
[79.33333588 420.75430298]
[67.73281860 419.79565430]
[56.17462158 418.41760254]
[44.67390060 416.62194824]
[33.24573898 414.41104126]
[21.90512657 411.78778076]
[10.66693592 408.75564575]
[-0.45409620 405.31854248]
[-11.44338322 401.48101807]
[-22.28651237 397.24813843]
[-32.96926498 392.62536621]
[-43.47762680 387.61886597]
[-53.79782104 382.23513794]
[-63.91630936 376.48126221]
[-73.81982422 370.36477661]
[-83.49537659 363.89370728]
[-92.93027496 357.07653809]
[-102.11214447 349.92224121]
[-111.02894592 342.44015503]
[-119.66898346 334.64010620]
[-128.02091980 326.53231812]
[-136.07382202 318.12747192]
[-143.81710815 309.43652344]
[-151.24063110 300.47091675]
[-158.33465576 291.24237061]
[-165.08987427 281.76303101]
[-171.49742126 272.04528809]
[-177.54891968 262.10192871]
[-183.23640442 251.94598389]
[-188.55241394 241.59074402]
[-193.49000549 231.04981995]
[-198.04267883 220.33702087]
[-202.20448303 209.46640015]
[-205.96994019 198.45220947]
[-209.33410645 187.30889893]
[-212.29260254 176.05110168]
[-214.84152222 164.69354248]
[-216.97752380 153.25114441]
[-218.69781494 141.73892212]
[-220.00013733 130.17193604]
[-220.88279724 118.56539917]
[-221.34460449 106.93450165]
[-221.38496399 95.29451752]
[-221.00384521 83.66069794]
[-220.20172119 72.04830933]
[-218.97966003 60.47257996]
[-217.33924866 48.94869232]
[-215.28266907 37.49175644]
[-212.81257629 26.11679840]
[-209.93225098 14.83873844]
[-206.64544678 3.67236757]
[-202.95646667 -7.36767054]
[-198.87017822 -18.26689720]
[-194.39190674 -29.01101685]
[-189.52755737 -39.58593750]
[-184.28347778 -49.97779465]
[-178.66658020 -60.17295837]
[-172.68420410 -70.15805054]
[-166.34420776 -79.91999054]
[-159.65490723 -89.44596100]
[-152.62506104 -98.72347260]
[-145.26390076 -107.74036407]
[-137.58108521 -116.48480225]
[-129.58666992 -124.94532013]
[-121.29116821 -133.11082458]
[-112.70543671 -140.97061157]
[-103.84074402 -148.51435852]
[-94.70871735 -155.73219299]
[-85.32132721 -162.61462402]
[-75.69089508 -169.15264893]
[-65.83004761 -175.33767700]
[-55.75170898 -181.16159058]
[-45.46910477 -186.61677551]
[-34.99571991 -191.69606018]
[-24.34528732 -196.39279175]
[-13.53177834 -200.70080566]
[-2.56937265 -204.61445618]
[8.52755165 -208.12858582]
[19.74444199 -211.23863220]
[31.06658745 -213.94047546]
[42.47913742 -216.23059082]
[53.96712494 -218.10597229]
[65.51548767 -219.56416321]
[77.10907745 -220.60325623]
[88.73268127 -221.22186279]
[100.37106323 -221.41920471]
[112.00896454 -221.19499207]
[112.91901398 -236.16735840]
[113.82906342 -251.13972473]
[106.02606964 -265.56350708]
[114.84526062 -279.38934326]
[131.21420288 -278.39440918]
[138.29393005 -263.60220337]
[128.80142212 -250.22967529]
[127.89138031 -235.25730896]
[126.98133087 -220.28494263]
[154.93916321 -216.68931580]
[182.47445679 -210.65802002]
[209.37542725 -202.23741150]
[235.43518066 -191.49227905]
[260.45327759 -178.50526428]
[284.23733521 -163.37623596]
[306.60440063 -146.22155762]
[327.38247681 -127.17317200]
[346.41171265 -106.37757874]
[363.54577637 -83.99472046]
[378.65289307 -60.19673920]
[391.61688232 -35.16667938]
[402.33801270 -9.09703827]
[410.73382568 17.81167603]
[425.32070923 14.31552982]
[439.90759277 10.81938362]
[454.49447632 7.32323790]
[469.08132935 3.82709169]
[467.90533447 -11.15834999]
[469.08813477 -26.14325714]
[472.60067749 -40.75861359]
[478.35641479 -54.64449692]
[486.21365356 -67.45896149]
[495.97885132 -78.88644409]
[507.41156006 -88.64552307]
[520.23022461 -96.49587250]
[534.11920166 -102.24417877]
[548.73645020 -105.74887085]
[563.72198486 -106.92366028]
[578.70678711 -105.73960876]
[593.32183838 -102.22586823]
[607.20727539 -96.46897125]
[620.02105713 -88.61069489]
[631.44775391 -78.84454346]
[641.20587158 -67.41102600]
[649.05517578 -54.59170532]
[654.80236816 -40.70225906]
[658.30584717 -26.08473396]
[659.47937012 -11.09909916]
[658.29406738 3.88561225]
[654.77917480 18.50038719]
[649.02111816 32.38532257]
[641.16174316 45.19849396]
[631.39465332 56.62435913]
[619.96038818 66.38155365]
[607.14038086 74.22978973]
[593.25048828 79.97579956]
[578.63262939 83.47808838]
[563.64691162 84.65039825]
[548.66229248 83.46386719]
[534.04785156 79.94771576]
[520.16339111 74.18853760]
[507.35083008 66.32814026]
[495.92578125 56.56010818]
[486.16952515 45.12498093]
[478.32235718 32.30435944]
[472.57748413 18.41396713]
[457.99060059 21.91011429]
[443.40374756 25.40625954]
[428.81686401 28.90240669]
[414.22998047 32.39855194]
[416.47167969 43.82071304]
[418.29833984 55.31655121]
[419.70751953 66.87099457]
[420.69744873 78.46887970]
[421.26675415 90.09500885]
[421.41473389 101.73412323]
[421.14117432 113.37096405]
[420.44644165 124.99027252]
[419.33145142 136.57681274]
[417.79766846 148.11537170]
[415.84707642 159.59083557]
[413.48223877 170.98812866]
[410.70629883 182.29234314]
[407.52285767 193.48861694]
[403.93612671 204.56228638]
[399.95077515 215.49882507]
[395.57202148 226.28388977]
[390.80563354 236.90333557]
[385.65786743 247.34323120]
[380.13543701 257.58987427]
[374.24563599 267.62985229]
[367.99615479 277.44998169]
[361.39520264 287.03738403]
[354.45144653 296.37948608]
[347.17395020 305.46405029]
[339.57229614 314.27914429]
[331.65646362 322.81320190]
[323.43679810 331.05505371]
[314.92407227 338.99389648]
[306.12951660 346.61926270]
[297.06460571 353.92120361]
[287.74124146 360.89013672]
[278.17166138 367.51690674]
[268.36840820 373.79284668]
[258.34436035 379.70968628]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[101 110]
[102 109]
[103 108]
[124 171]
[125 170]
[126 169]
[127 168]
[128 167]
] def

init

% Start Annotations
103 108 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
101 110 5 gmark
101 cmark
110 cmark
102 109 3 gmark
102 cmark
109 cmark
108 cmark
124 171 9 gmark
124 cmark
171 cmark
125 170 5 gmark
125 cmark
170 cmark
126 169 8 gmark
126 cmark
169 cmark
127 168 7 gmark
168 cmark
128 167 4 gmark
128 cmark
167 cmark

% End Annotations
showpage
end
%%EOF
