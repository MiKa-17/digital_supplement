%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Dec 19 19:53:37 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAUGAGAUAUGACAAUGUUAAACCAUGUCCAUUUUGUGGUUGUCCAUCAGUAACGGUGAAAGCCAUUUCAGGAUAUUACCGAGCGAAGUGUAACGGAUGCGAAUCCCGAACCGGUUAUGGUGGAAGUGAAAAAGAAGCACUCGAAAGAUGGAAUAAACGAACCACUGGAAAUAAUAAUGGAGGUGUUCAUGUA\
) } def
/len { sequence length } bind def

/coor [
[8.04474735 528.92138672]
[0.28404731 533.74267578]
[-7.80444479 537.99047852]
[-16.17842293 541.64257812]
[-24.79409409 544.67999268]
[-33.60640335 547.08685303]
[-42.56927109 548.85064697]
[-51.63583374 549.96221924]
[-60.75868988 550.41571045]
[-69.89015198 550.20886230]
[-78.98247528 549.34277344]
[-87.98813629 547.82208252]
[-96.86006927 545.65472412]
[-105.55190277 542.85205078]
[-114.01821899 539.42883301]
[-122.21477509 535.40301514]
[-130.09873962 530.79559326]
[-137.62892151 525.63073730]
[-144.76599121 519.93548584]
[-151.47265625 513.73968506]
[-157.71388245 507.07571411]
[-163.45710754 499.97842407]
[-168.67231750 492.48501587]
[-181.74209595 499.84576416]
[-194.81187439 507.20654297]
[-207.88165283 514.56732178]
[-220.95144653 521.92803955]
[-234.02122498 529.28881836]
[-247.09100342 536.64959717]
[-249.79281616 552.05200195]
[-261.79620361 562.07458496]
[-277.43353271 561.98504639]
[-289.32131958 551.82562256]
[-291.84655762 536.39324951]
[-283.81686401 522.97473145]
[-269.02362061 517.90576172]
[-254.45176697 523.57983398]
[-241.38198853 516.21905518]
[-228.31221008 508.85827637]
[-215.24241638 501.49752808]
[-202.17263794 494.13674927]
[-189.10285950 486.77600098]
[-176.03308105 479.41522217]
[-184.35189819 457.36465454]
[-188.42893982 434.14916992]
[-188.12104797 410.57723999]
[-183.43775940 387.46990967]
[-174.54101562 365.63229370]
[-161.73963928 345.82553101]
[-145.47853088 328.74014282]
[-126.32322693 314.97210693]
[-104.94026184 305.00192261]
[-82.07395172 299.17797852]
[-58.52050018 297.70428467]
[-35.10023880 300.63333130]
[-12.62910271 307.86428833]
[-5.90507412 294.45581055]
[0.81895483 281.04733276]
[7.54298353 267.63882446]
[14.26701260 254.23034668]
[0.44163147 245.68898010]
[-12.53932476 235.91191101]
[-24.56575394 224.98207092]
[-35.53565216 212.99218750]
[-45.35597992 200.04391479]
[-53.94343567 186.24711609]
[-61.22519302 171.71879578]
[-67.13948059 156.58216858]
[-71.63613892 140.96562195]
[-74.67703247 125.00162506]
[-76.23636627 108.82556915]
[-76.30091095 92.57466125]
[-74.87012482 76.38672638]
[-71.95613861 60.39907837]
[-67.58367157 44.74731064]
[-61.78981018 29.56418228]
[-54.62369156 14.97846985]
[-46.14610291 1.11388469]
[-36.42894363 -11.91197681]
[-25.55463219 -23.98863411]
[-13.61540413 -35.01365662]
[-0.71252275 -44.89352798]
[13.04457283 -53.54446030]
[27.53919983 -60.89306641]
[42.64841843 -66.87702942]
[38.38050461 -81.25704956]
[25.01968002 -90.13780975]
[23.77620888 -106.13259888]
[35.60397339 -116.97158813]
[51.42972565 -114.34001923]
[59.11330032 -100.25662231]
[52.76052094 -85.52496338]
[57.02843475 -71.14494324]
[78.04542542 -75.08610535]
[99.38481140 -76.45613861]
[120.73323822 -75.23492432]
[123.12723541 -90.04265594]
[125.40248871 -104.86909485]
[127.55884552 -119.71328735]
[129.71519470 -134.55747986]
[123.14312744 -149.58212280]
[133.08535767 -162.62376404]
[149.31416321 -160.26626587]
[155.13475037 -144.93482971]
[144.55938721 -132.40112305]
[142.40303040 -117.55693054]
[140.24668884 -102.71273804]
[142.39897156 -95.63260651]
[137.93496704 -87.64865875]
[135.54096985 -72.84092712]
[157.07952881 -66.97027588]
[177.70449829 -58.42713928]
[197.08573914 -47.34825134]
[205.86357117 -59.51170731]
[214.64140320 -71.67516327]
[215.76408386 -88.03583527]
[230.61109924 -94.99987793]
[243.90911865 -85.40328217]
[241.97827148 -69.11820221]
[226.80485535 -62.89733124]
[218.02702332 -50.73387527]
[209.24919128 -38.57041931]
[218.32785034 -30.90326691]
[226.86990356 -22.64246750]
[234.83659363 -13.82548237]
[242.19180298 -4.49229670]
[248.90216064 5.31476259]
[254.93724060 15.55122089]
[260.26968384 26.17065430]
[264.87530518 37.12490845]
[268.73321533 48.36429596]
[271.82592773 59.83785629]
[274.13940430 71.49355316]
[275.66314697 83.27852631]
[276.39025879 95.13932800]
[276.31744385 107.02217865]
[275.44500732 118.87317657]
[273.77694702 130.63859558]
[271.32080078 142.26506042]
[268.08770752 153.69984436]
[264.09231567 164.89111328]
[259.35278320 175.78810120]
[253.89059448 186.34136963]
[247.73049927 196.50309753]
[240.90043640 206.22717285]
[233.43139648 215.46951294]
[225.35723877 224.18820190]
[216.71459961 232.34368896]
[207.54264832 239.89898682]
[197.88298035 246.81985474]
[187.77941895 253.07489014]
[177.27777100 258.63571167]
[166.42567444 263.47714233]
[155.27233887 267.57717896]
[143.86834717 270.91726685]
[132.26539612 273.48223877]
[120.51613617 275.26046753]
[108.67382812 276.24389648]
[96.79218292 276.42803955]
[84.92508698 275.81210327]
[73.12635040 274.39883423]
[61.44949341 272.19467163]
[49.94746017 269.20959473]
[38.67241669 265.45718384]
[27.67549706 260.95437622]
[20.95146751 274.36285400]
[14.22743893 287.77136230]
[7.50340939 301.17984009]
[0.77938062 314.58831787]
[8.52396393 319.45242310]
[15.89659119 324.86318970]
[22.85874748 330.79232788]
[29.37406921 337.20880127]
[35.40852737 344.07901001]
[40.93061447 351.36703491]
[45.91149902 359.03472900]
[50.32518005 367.04199219]
[54.14862823 375.34695435]
[57.36189651 383.90615845]
[59.94823074 392.67483521]
[61.89415741 401.60717773]
[63.18954849 410.65646362]
[63.82767487 419.77536011]
[63.80525208 428.91622925]
[63.12244415 438.03125000]
[61.78285980 447.07278442]
[59.79355621 455.99359131]
[57.16497421 464.74700928]
[53.91089630 473.28735352]
[50.04838181 481.56994629]
[45.59766388 489.55151367]
[40.58205032 497.19039917]
[35.02779388 504.44662476]
[28.96397209 511.28234863]
[22.42231941 517.66180420]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[23 43]
[24 42]
[25 41]
[26 40]
[27 39]
[28 38]
[29 37]
[56 169]
[57 168]
[58 167]
[59 166]
[60 165]
[85 93]
[86 92]
[96 110]
[97 109]
[98 107]
[99 106]
[100 105]
[113 122]
[114 121]
[115 120]
] def

init

% Start Annotations
23 43 0.0 0.2 colorpair
24 42 0.0 1 colorpair
25 41 0.0 1 colorpair
26 40 0.0 1 colorpair
27 39 0.16 1 colorpair
28 38 0.0 1 colorpair
29 37 0.0 1 colorpair
56 169 0.0 0.2 colorpair
57 168 0.16 1 colorpair
58 167 0.0 1 colorpair
59 166 0.16 1 colorpair
85 93 0.16 1 colorpair
86 92 0.16 1 colorpair
96 110 0.16 1 colorpair
97 109 0.0 1 colorpair
98 107 0.0 0.2 colorpair
99 106 0.16 0.2 colorpair
100 105 0.0 1 colorpair
113 122 0.0 1 colorpair
115 120 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
23 43 2 gmark
27 cmark
56 169 2 gmark
57 cmark
166 cmark
60 165 8 gmark
165 cmark
93 cmark
86 cmark
96 cmark
98 107 2 gmark
99 106 2 gmark
99 cmark
114 121 24 gmark
114 cmark
121 cmark

% End Annotations
showpage
end
%%EOF
