%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Dec 19 19:53:04 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGACUGAAGUUUCUCGCAAUUAAAAUUUAUCAGUUUUACUUUCUGCUCUCUGGAAACGCCUGCUUC_UUUUUUACCUGAGAGCAUUUUUUCGCAUUCUGAUUUCGUUAGUUUAGAUUUUGAAUAUCUUGUCCAGUUAGUAGGAGUGCCACCUUCCUUUUCAAUAGUGGCGGUAAUUUU\
) } def
/len { sequence length } bind def

/coor [
[47.14302826 802.84216309]
[40.65582657 816.93811035]
[27.10574150 824.49951172]
[11.70305538 822.61889648]
[0.37041545 812.01928711]
[-2.53454733 796.77655029]
[4.10518503 782.75183105]
[17.73649979 775.33789062]
[19.55448914 760.44842529]
[21.37248039 745.55902100]
[23.19046974 730.66961670]
[25.00846100 715.78015137]
[15.65682220 704.24401855]
[17.28841782 689.11816406]
[29.45198631 679.38751221]
[31.26997566 664.49810791]
[32.82927322 649.57934570]
[34.12940216 634.63580322]
[35.42953491 619.69226074]
[28.82449532 606.34222412]
[37.72881317 593.26464844]
[39.02894211 578.32110596]
[40.32907486 563.37756348]
[33.72403717 550.02752686]
[42.62835312 536.94995117]
[43.92848587 522.00640869]
[45.22861481 507.06283569]
[31.71821213 503.04467773]
[19.25601196 496.44802856]
[8.32874680 487.52819824]
[-0.63634288 476.63134766]
[-7.28822327 464.18093872]
[-11.36580658 450.66134644]
[-12.70820045 436.59896851]
[-11.26105499 422.54177856]
[-7.07875824 409.03796387]
[-0.32239825 396.61450195]
[8.74644279 385.75662231]
[19.77581596 376.88891602]
[32.33706284 370.35858154]
[45.94147110 366.42202759]
[60.05929947 365.23461914]
[61.87728882 350.34518433]
[63.69528198 335.45578003]
[65.51326752 320.56634521]
[67.33126068 305.67691040]
[69.14925385 290.78750610]
[70.96723938 275.89807129]
[72.78523254 261.00866699]
[63.43359375 249.47251892]
[65.06518555 234.34663391]
[77.22875977 224.61599731]
[79.04674530 209.72656250]
[80.86473846 194.83714294]
[82.68272400 179.94772339]
[84.50071716 165.05830383]
[76.50926208 162.87158203]
[68.82183075 159.70365906]
[61.55883408 155.59629822]
[54.83499908 150.60606384]
[48.75754929 144.80351257]
[43.42450333 138.27220154]
[38.92309570 131.10752869]
[35.32834625 123.41526794]
[32.70183563 115.31008148]
[31.09065056 106.91378784]
[30.52656555 98.35350037]
[31.02544403 89.75975800]
[32.58688354 81.26448822]
[35.19411469 72.99900818]
[38.81414413 65.09198761]
[43.39817047 57.66743851]
[48.88220215 50.84278870]
[55.18797302 44.72701263]
[62.22402954 39.41889191]
[69.88706970 35.00544357]
[78.06343842 31.56048203]
[86.63084412 29.14339638]
[95.46015930 27.79814720]
[104.41735840 27.55248260]
[103.89675140 12.56151962]
[103.37615204 -2.42944384]
[95.16455078 -15.95276546]
[102.45546722 -28.94090652]
[101.93486786 -43.93186951]
[88.99745941 -52.49943161]
[83.59832001 -67.04690552]
[87.81352234 -81.98047638]
[100.02223206 -91.55789948]
[115.52996063 -92.09644318]
[128.37365723 -83.38903809]
[133.61466980 -68.78385925]
[129.23771667 -53.89688492]
[116.92583466 -44.45246887]
[117.44643402 -29.46150780]
[125.62079620 -17.01044083]
[118.36711121 -2.95004511]
[118.88771820 12.04091835]
[119.40831757 27.03188133]
[126.12885284 30.36120224]
[132.78749084 16.92012787]
[139.44613647 3.47905397]
[146.10478210 -9.96201992]
[148.28419495 -24.80284882]
[163.07215881 -27.31598854]
[170.03187561 -14.02830791]
[159.54585266 -3.30337763]
[152.88720703 10.13769627]
[146.22857666 23.57877159]
[139.56993103 37.01984406]
[146.29046631 40.34916687]
[158.53195190 31.68047523]
[170.77342224 23.01178551]
[183.01490784 14.34309483]
[184.11476135 -1.25576198]
[195.02116394 -12.46220970]
[210.58442688 -13.98490715]
[223.45606995 -5.10488319]
[227.55848694 9.98498726]
[220.95465088 24.15972710]
[206.76268005 30.72645950]
[191.68359375 26.58457375]
[179.44210815 35.25326538]
[167.20063782 43.92195511]
[154.95915222 52.59064484]
[166.53015137 73.08734894]
[170.83735657 95.95717621]
[167.58987427 118.73333740]
[157.30244446 139.01457214]
[141.22283936 154.71829224]
[121.18275452 164.29415894]
[99.39014435 166.87628174]
[97.57215118 181.76571655]
[95.75415802 196.65513611]
[93.93617249 211.54455566]
[92.11817932 226.43397522]
[101.58309174 238.80545044]
[99.52728271 253.87954712]
[87.67465210 262.82666016]
[85.85666656 277.71606445]
[84.03867340 292.60549927]
[82.22068024 307.49490356]
[80.40269470 322.38433838]
[78.58470154 337.27377319]
[76.76671600 352.16317749]
[74.94872284 367.05261230]
[89.99520111 372.36645508]
[103.48957062 380.87063599]
[114.76609802 392.14202881]
[123.26920319 405.62118530]
[128.58091736 420.63992310]
[130.44134521 436.45449829]
[128.76142883 452.28250122]
[123.62722015 467.34152222]
[115.29542542 480.88778687]
[104.18059540 492.25296021]
[90.83453369 500.87707520]
[75.91883850 506.33612061]
[60.17216492 508.36297607]
[58.87203217 523.30651855]
[57.57190323 538.25006104]
[64.08394623 552.66894531]
[55.27262497 564.67767334]
[53.97249222 579.62121582]
[52.67236328 594.56475830]
[59.18440628 608.98364258]
[50.37308502 620.99237061]
[49.07295227 635.93591309]
[47.77281952 650.87945557]
[50.23546219 657.06213379]
[49.32334518 662.70587158]
[46.15939713 666.31610107]
[44.34140778 681.20550537]
[53.80632019 693.57696533]
[51.75051498 708.65106201]
[39.89788437 717.59814453]
[38.07989502 732.48760986]
[36.26190186 747.37701416]
[34.44391251 762.26641846]
[32.62592316 777.15588379]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 180]
[9 179]
[10 178]
[11 177]
[12 176]
[15 173]
[16 172]
[17 169]
[18 168]
[19 167]
[21 165]
[22 164]
[23 163]
[25 161]
[26 160]
[27 159]
[42 146]
[43 145]
[44 144]
[45 143]
[46 142]
[47 141]
[48 140]
[49 139]
[52 136]
[53 135]
[54 134]
[55 133]
[56 132]
[80 99]
[81 98]
[82 97]
[84 95]
[85 94]
[111 125]
[112 124]
[113 123]
[114 122]
] def

init

% Start Annotations
8 180 0.0 1 colorpair
9 179 0.16 1 colorpair
10 178 0.0 0.2 colorpair
11 177 0.0 1 colorpair
12 176 0.0 1 colorpair
15 173 0.0 1 colorpair
16 172 0.16 0.6 colorpair
18 168 0.0 1 colorpair
19 167 0.0 1 colorpair
21 165 0.0 1 colorpair
22 164 0.0 1 colorpair
23 163 0.0 1 colorpair
25 161 0.0 1 colorpair
26 160 0.0 1 colorpair
27 159 0.0 1 colorpair
42 146 0.16 0.2 colorpair
43 145 0.0 0.2 colorpair
44 144 0.16 1 colorpair
45 143 0.16 1 colorpair
46 142 0.0 1 colorpair
47 141 0.0 1 colorpair
48 140 0.16 1 colorpair
49 139 0.16 1 colorpair
52 136 0.0 1 colorpair
53 135 0.0 0.2 colorpair
54 134 0.0 1 colorpair
55 133 0.0 1 colorpair
56 132 0.0 1 colorpair
80 99 0.0 1 colorpair
81 98 0.0 1 colorpair
82 97 0.0 1 colorpair
84 95 0.0 1 colorpair
85 94 0.0 1 colorpair
111 125 0.16 1 colorpair
112 124 0.32 1 colorpair
113 123 0.0 1 colorpair
114 122 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
9 cmark
10 178 2 gmark
16 172 1 gmark
172 cmark
17 169 3 gmark
17 cmark
42 146 2 gmark
146 cmark
43 145 2 gmark
144 cmark
45 cmark
48 cmark
139 cmark
53 135 2 gmark
111 cmark
112 cmark
124 cmark

% End Annotations
showpage
end
%%EOF
