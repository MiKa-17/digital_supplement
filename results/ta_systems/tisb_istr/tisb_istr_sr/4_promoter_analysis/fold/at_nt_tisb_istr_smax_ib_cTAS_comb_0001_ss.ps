%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 04:42:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_________________________UACUCAAAUACGUCAAAAUUCGUGCCG_AA_AUUGCGCGUUCUUCGCCGAACGCGUAUACUU_UUUG_U__________GUUGACAUAACACAGUGUGCUUUGCGGCUACCAACCGCAAAACG_CUGA_UAAAA_ACCUCGCUC_____CGGCGGGGUUUUUU\
) } def
/len { sequence length } bind def

/coor [
[111.39223480 286.91104126]
[105.06337738 300.51052856]
[97.12850189 313.23992920]
[87.70526123 324.91049194]
[76.93338776 335.34921265]
[64.97259521 344.40127563]
[52.00025940 351.93243408]
[38.20872116 357.83102417]
[23.80249023 362.00961304]
[8.99518394 364.40621948]
[-5.99363422 364.98529053]
[-20.94170761 363.73825073]
[-35.62738419 360.68359375]
[-49.83290100 355.86660767]
[-63.34762192 349.35873413]
[-75.97113800 341.25646973]
[-87.51628113 331.67996216]
[-97.81184387 320.77117920]
[-106.70516968 308.69189453]
[-114.06438446 295.62124634]
[-119.78036499 281.75302124]
[-123.76835632 267.29287720]
[-125.96922302 252.45521545]
[-126.35032654 237.46006775]
[-124.90602112 222.52975464]
[-121.65772247 207.88569641]
[-116.65358734 193.74502563]
[-109.96783447 180.31741333]
[-101.69958496 167.80198669]
[-91.97145081 156.38429260]
[-80.92768097 146.23367310]
[-68.73204041 137.50062561]
[-55.56534958 130.31463623]
[-41.62286377 124.78227234]
[-27.11131668 120.98556519]
[-12.24588776 118.98081207]
[2.75299525 118.79774475]
[17.65272903 120.43730927]
[32.08665848 116.35543823]
[46.52058792 112.27356720]
[60.95451736 108.19169617]
[75.38845062 104.10982513]
[60.76453018 100.77201080]
[46.14060974 97.43419647]
[30.96472549 101.90667725]
[20.27826309 91.53128052]
[5.65434504 88.19346619]
[-8.96957397 84.85565186]
[-23.59349251 81.51783752]
[-34.54077530 92.38800812]
[-49.63183594 95.59167480]
[-64.05116272 90.10656738]
[-73.19761658 77.68296051]
[-74.15258026 62.28518295]
[-66.61134338 48.82660675]
[-52.98027420 41.60181808]
[-37.60900497 42.91622162]
[-25.40245056 52.35039139]
[-20.25567818 66.89392090]
[-5.63175964 70.23173523]
[8.99215889 73.56954956]
[23.61607742 76.90736389]
[37.74596024 72.19613647]
[49.47842407 82.81027222]
[64.10234070 86.14808655]
[78.72625732 89.48590088]
[67.49279785 79.54561615]
[56.25933456 69.60533142]
[42.42908096 63.79808426]
[32.93473053 52.18527603]
[29.99182320 37.47679901]
[34.28709793 23.10493088]
[44.81824112 12.42340088]
[59.12776184 7.92478418]
[73.87648773 10.65884972]
[85.62274170 19.98759460]
[91.62549591 33.73411942]
[90.48379517 48.69119644]
[94.20455170 63.22240448]
[97.92530823 77.75360870]
[101.62666321 63.21745300]
[105.32802582 48.68129349]
[109.02938843 34.14513397]
[112.73075104 19.60897446]
[116.43211365 5.07281494]
[120.13346863 -9.46334457]
[108.47521210 -17.66177559]
[100.33527374 -29.32453156]
[96.67591858 -43.03724289]
[97.91754150 -57.14540482]
[103.89046478 -69.95401001]
[113.85783386 -79.93119049]
[126.60641479 -85.89140320]
[140.59428406 -87.13629913]
[128.75701904 -77.92331696]
[113.91468811 -75.75418854]
[99.93595123 -81.19432068]
[90.46438599 -92.82571411]
[87.96876526 -107.61665344]
[93.09957123 -121.71186066]
[104.51946259 -131.43740845]
[119.25182343 -134.25831604]
[133.45664978 -129.43931580]
[143.43145752 -118.23648071]
[146.57637024 -103.57196045]
[144.54121399 -119.84432983]
[157.77746582 -129.52593994]
[172.66880798 -122.65718842]
[173.89630127 -106.30404663]
[160.19721985 -97.28923035]
[155.06690979 -83.19384003]
[167.74093628 -73.69543457]
[175.82254028 -60.02943039]
[178.05032349 -44.27083206]
[174.05430603 -28.82558060]
[164.41703796 -16.06324196]
[150.58883667 -7.95345163]
[134.66963196 -5.76198339]
[130.96827698 8.77417564]
[127.26690674 23.31033516]
[123.56555176 37.84649277]
[119.86418915 52.38265228]
[116.16282654 66.91881561]
[112.46146393 81.45497131]
[117.69824219 86.82397461]
[132.23439026 83.12258148]
[128.17179871 97.56197357]
[133.40856934 102.93097687]
[148.03248596 99.59316254]
[162.65640259 96.25534821]
[177.28031921 92.91753387]
[184.25286865 78.92047882]
[198.61184692 72.72741699]
[213.57736206 77.26251984]
[222.08317566 90.38445282]
[220.11309814 105.89743805]
[208.59733582 116.47672272]
[192.97328186 117.12709045]
[180.61813354 107.54145813]
[165.99421692 110.87926483]
[151.37030029 114.21707916]
[136.74638367 117.55489349]
[133.89065552 124.48994446]
[148.32458496 128.57180786]
[162.75851440 132.65368652]
[177.19244385 136.73556519]
[191.62637329 140.81742859]
[206.06030273 144.89930725]
[220.49423218 148.98117065]
[235.49366760 149.11213684]
[247.34684753 158.30462646]
[251.20660400 172.79954529]
[245.49453735 186.66937256]
[232.54650879 194.24226379]
[217.65744019 192.42140198]
[206.91694641 181.95326233]
[193.79399109 174.68772888]
[180.67103577 167.42219543]
[167.54808044 160.15664673]
[154.42512512 152.89111328]
[141.30216980 145.62556458]
[128.17921448 138.36003113]
[125.32349396 145.29507446]
[133.35668945 157.96266174]
[141.38987732 170.63026428]
[149.42306519 183.29785156]
[157.45625305 195.96543884]
[172.88362122 195.95585632]
[185.85476685 204.30767822]
[192.23065186 218.35586548]
[189.97674561 233.61770630]
[179.81227112 245.22317505]
[164.98068237 249.46903992]
[150.21466064 245.00044250]
[140.22601318 233.24328613]
[138.20207214 217.94926453]
[144.78866577 203.99862671]
[136.75547791 191.33103943]
[128.72229004 178.66345215]
[120.68909454 165.99586487]
[112.65590668 153.32826233]
[113.63252258 168.29644775]
[114.60914612 183.26461792]
[115.58576965 198.23278809]
[116.56239319 213.20095825]
[119.15429688 227.97532654]
[119.93123627 242.95520020]
[118.88169098 257.91842651]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[42 66]
[43 65]
[44 64]
[46 62]
[47 61]
[48 60]
[49 59]
[80 124]
[81 123]
[82 122]
[83 121]
[84 120]
[85 119]
[86 118]
[94 111]
[105 110]
[128 142]
[129 141]
[130 140]
[131 139]
[163 181]
[164 180]
[165 179]
[166 178]
[167 177]
] def

init

% Start Annotations
43 65 0.16 0.2 colorpair
47 61 0.16 0.2 colorpair
48 60 0.32 0.6 colorpair
49 59 0.16 0.2 colorpair
80 124 0.32 0.2 colorpair
81 123 0.16 0.2 colorpair
82 122 0.0 0.6 colorpair
83 121 0.16 1 colorpair
84 120 0.32 1 colorpair
85 119 0.16 0.6 colorpair
86 118 0.0 0.6 colorpair
105 110 0.16 0.6 colorpair
128 142 0.16 1 colorpair
129 141 0.0 1 colorpair
130 140 0.16 1 colorpair
131 139 0.16 1 colorpair
163 181 0.0 1 colorpair
164 180 0.16 1 colorpair
165 179 0.0 1 colorpair
166 178 0.0 1 colorpair
167 177 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
42 66 3 gmark
43 65 2 gmark
43 cmark
65 cmark
44 64 3 gmark
64 cmark
46 62 3 gmark
46 cmark
47 61 2 gmark
61 cmark
48 60 1 gmark
48 cmark
60 cmark
49 59 2 gmark
49 cmark
80 124 2 gmark
80 cmark
124 cmark
81 123 2 gmark
123 cmark
82 122 1 gmark
83 cmark
84 cmark
120 cmark
85 119 1 gmark
85 cmark
86 118 1 gmark
94 111 13 gmark
94 cmark
111 cmark
105 110 1 gmark
110 cmark
142 cmark
140 cmark
139 cmark
180 cmark

% End Annotations
showpage
end
%%EOF
