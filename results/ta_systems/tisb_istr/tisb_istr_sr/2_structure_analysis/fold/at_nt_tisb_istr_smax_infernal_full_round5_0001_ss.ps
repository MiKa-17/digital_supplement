%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Jan 28 21:38:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______________________________________U_AC__UCA__AA__UACGU___CAAAAUU__C_GUGCC_G_A_A_AUUGCGCGUUCUGC_ACAGAACGCGUAUACUUUUG_G_UGUUGACAUAAUACAGUGUGCUUUGCGGCUACCACCCGCAUUC__CG_CUG__A_U_AAAA_A_CCUCG_CUC_____CG_GCGGGGUUUUUU\
) } def
/len { sequence length } bind def

/coor [
[178.93058777 465.58737183]
[167.07450867 467.94723511]
[155.14836121 469.92269897]
[143.16461182 471.51174927]
[131.13575745 472.71264648]
[119.07437134 473.52420044]
[106.99306488 473.94552612]
[94.90444946 473.97619629]
[82.82115936 473.61618042]
[70.75582123 472.86584473]
[58.72102737 471.72598267]
[46.72935867 470.19778442]
[34.79334259 468.28283691]
[22.92544365 465.98315430]
[11.13806629 463.30111694]
[-0.55647761 460.23956299]
[-12.14597130 456.80166626]
[-23.61830902 452.99102783]
[-34.96150208 448.81161499]
[-46.16370392 444.26782227]
[-57.21320724 439.36434937]
[-68.09847260 434.10635376]
[-78.80812836 428.49932861]
[-89.33098602 422.54910278]
[-99.65605164 416.26193237]
[-109.77253723 409.64437866]
[-119.66987610 402.70330811]
[-129.33772278 395.44604492]
[-138.76599121 387.88009644]
[-147.94482422 380.01342773]
[-156.86462402 371.85421753]
[-165.51608276 363.41101074]
[-173.89016724 354.69262695]
[-181.97810364 345.70816040]
[-189.77146912 336.46701050]
[-197.26211548 326.97882080]
[-204.44221497 317.25350952]
[-211.30427551 307.30123901]
[-217.84111023 297.13238525]
[-224.04589844 286.75762939]
[-229.91217041 276.18774414]
[-235.43377686 265.43377686]
[-240.60494995 254.50701904]
[-245.42031860 243.41882324]
[-249.87481689 232.18081665]
[-253.96380615 220.80471802]
[-257.68301392 209.30241394]
[-261.02856445 197.68591309]
[-263.99691772 185.96737671]
[-266.58505249 174.15902710]
[-268.79019165 162.27319336]
[-270.61007690 150.32231140]
[-272.04275513 138.31886292]
[-273.08679199 126.27538300]
[-273.74105835 114.20444489]
[-274.00491333 102.11867523]
[-273.87802124 90.03068542]
[-273.36053467 77.95311737]
[-272.45300293 65.89857483]
[-271.15640259 53.87966537]
[-269.47201538 41.90893173]
[-267.40167236 29.99888611]
[-264.94750977 18.16197014]
[-262.11209106 6.41055012]
[-258.89837646 -5.24309826]
[-255.30972290 -16.78680038]
[-251.34986877 -28.20849609]
[-247.02297974 -39.49625397]
[-242.33355713 -50.63828278]
[-237.28649902 -61.62294006]
[-231.88706970 -72.43875122]
[-226.14093018 -83.07441711]
[-220.05407715 -93.51882935]
[-213.63287354 -103.76107025]
[-206.88401794 -113.79045105]
[-199.81455994 -123.59648132]
[-192.43188477 -133.16893005]
[-184.74371338 -142.49777222]
[-176.75807190 -151.57330322]
[-168.48330688 -160.38600159]
[-159.92805481 -168.92668152]
[-151.10125732 -177.18641663]
[-142.01214600 -185.15658569]
[-132.67019653 -192.82884216]
[-123.08518982 -200.19519043]
[-113.26712799 -207.24792480]
[-103.22625732 -213.97967529]
[-92.97309113 -220.38342285]
[-82.51831818 -226.45246887]
[-71.87287140 -232.18048096]
[-61.04787445 -237.56144714]
[-50.05463409 -242.58978271]
[-38.90462875 -247.26020813]
[-27.60951233 -251.56787109]
[-16.18108559 -255.50823975]
[-4.63128376 -259.07720947]
[7.02782488 -262.27105713]
[18.78406143 -265.08645630]
[30.62514114 -267.52044678]
[42.53869629 -269.57049561]
[54.51228333 -271.23446655]
[66.53338623 -272.51058960]
[78.58945465 -273.39755249]
[90.66789246 -273.89447021]
[102.75608063 -274.00073242]
[114.84138489 -273.71630859]
[126.91118622 -273.04147339]
[138.95286560 -271.97692871]
[150.95385742 -270.52377319]
[162.90162659 -268.68353271]
[174.78367615 -266.45812988]
[186.58760071 -263.84988403]
[198.30107117 -260.86154175]
[209.91183472 -257.49621582]
[221.40779114 -253.75740051]
[232.77690125 -249.64903259]
[244.00730896 -245.17538452]
[255.08726501 -240.34114075]
[266.00521851 -235.15133667]
[276.74972534 -229.61141968]
[287.30960083 -223.72714233]
[297.67379761 -217.50468445]
[307.83148193 -210.95053101]
[317.77203369 -204.07151794]
[327.48510742 -196.87486267]
[336.96051025 -189.36805725]
[346.18838501 -181.55894470]
[355.15902710 -173.45568848]
[365.61026001 -184.21543884]
[376.06146240 -194.97517395]
[386.51269531 -205.73492432]
[386.03225708 -221.53190613]
[396.92340088 -232.98435974]
[412.72457886 -233.29776001]
[424.06124878 -222.28614807]
[424.20755005 -206.48254395]
[413.07672119 -195.26292419]
[397.27243042 -195.28370667]
[386.82122803 -184.52395630]
[376.36999512 -173.76422119]
[365.91879272 -163.00447083]
[387.96948242 -138.65818787]
[407.79898071 -112.47104645]
[425.25430298 -84.64503479]
[440.20083618 -55.39479828]
[452.52328491 -24.94594574]
[462.12658691 6.46665764]
[476.72225952 3.00741959]
[491.31793213 -0.45181835]
[505.91360474 -3.91105652]
[512.76959229 -17.96557808]
[527.07659912 -24.27776527]
[542.07928467 -19.86719704]
[550.69384766 -6.81640768]
[548.85278320 8.71241760]
[537.42535400 19.38704300]
[521.80725098 20.16723824]
[509.37283325 10.68461704]
[494.77716064 14.14385509]
[480.18148804 17.60309219]
[465.58581543 21.06233025]
[468.82391357 37.92679214]
[471.28445435 54.92211533]
[472.96228027 72.01246643]
[473.85382080 89.16181946]
[473.95727539 106.33402252]
[473.27233887 123.49286652]
[471.80050659 140.60218811]
[469.54486084 157.62591553]
[466.51016235 174.52815247]
[462.70281982 191.27328491]
[458.13085938 207.82600403]
[452.80389404 224.15139771]
[446.73315430 240.21507263]
[439.93148804 255.98313904]
[432.41317749 271.42239380]
[424.19409180 286.50024414]
[415.29156494 301.18493652]
[405.72436523 315.44552612]
[395.51263428 329.25189209]
[384.67794800 342.57498169]
[373.24310303 355.38668823]
[361.23223877 367.65997314]
[348.67065430 379.36904907]
[335.58483887 390.48913574]
[322.00238037 400.99682617]
[307.95190430 410.86999512]
[293.46304321 420.08779907]
[300.96304321 433.07818604]
[308.46304321 446.06857300]
[315.96304321 459.05895996]
[331.10406494 457.42514038]
[345.59860229 462.09716797]
[356.93542480 472.26556396]
[363.15032959 486.16860962]
[363.16656494 501.39752197]
[356.98132324 515.31378174]
[345.66619873 525.50634766]
[331.18164062 530.20922852]
[316.03717041 528.60766602]
[302.85665894 520.97918701]
[293.92370605 508.64538574]
[290.78604126 493.74322510]
[293.98721313 478.85455322]
[302.97265625 466.55895996]
[295.47265625 453.56857300]
[287.97265625 440.57818604]
[280.47265625 427.58779907]
[269.79159546 433.24911499]
[258.93313599 438.56225586]
[247.90866089 443.52172852]
[236.72966003 448.12231445]
[225.40782166 452.35922241]
[213.95497131 456.22805786]
[202.38307190 459.72470093]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[128 141]
[129 140]
[130 139]
[131 138]
[147 161]
[148 160]
[149 159]
[150 158]
[188 208]
[189 207]
[190 206]
[191 205]
] def

init

% Start Annotations
128 141 0.0 1 colorpair
129 140 0.16 0.6 colorpair
130 139 0.16 0.6 colorpair
131 138 0.0 0.6 colorpair
147 161 0.16 1 colorpair
148 160 0.0 0.2 colorpair
149 159 0.16 1 colorpair
150 158 0.16 1 colorpair
188 208 0.0 1 colorpair
189 207 0.32 1 colorpair
190 206 0.16 1 colorpair
191 205 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
129 140 1 gmark
129 cmark
130 139 1 gmark
130 cmark
131 138 1 gmark
161 cmark
148 160 2 gmark
159 cmark
158 cmark
189 cmark
207 cmark
190 cmark
191 205 1 gmark

% End Annotations
showpage
end
%%EOF
