%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 05:47:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACUAAAUACGUCAAAAUUCGUGCCGAAAUUGCGCGUUCUGCGCGGAACACGUAUACUUUCAGUGUUGACAUAAUACAGUGUGCUUUGCGGUUACCAGCCGCAGGCGGCUGACGAAA_CCUCGCUCCGGCGGGGUUUUUU\
) } def
/len { sequence length } bind def

/coor [
[96.32220459 157.63912964]
[87.78933716 156.45082092]
[79.52815247 154.00646973]
[71.72247314 150.36047363]
[64.54597473 145.59393311]
[58.15832901 139.81292725]
[52.70167160 133.14608765]
[48.29740524 125.74173737]
[45.04353333 117.76462555]
[43.01245117 109.39225006]
[42.24935150 100.81089783]
[42.77120972 92.21150208]
[28.29673576 88.27581787]
[13.82226276 84.34013367]
[-0.65221095 80.40444946]
[-15.12668419 76.46876526]
[-9.11115742 90.20970154]
[-14.38300133 104.25276947]
[-27.95493126 110.64046478]
[-42.13642502 105.75321198]
[-48.89155579 92.36037445]
[-44.39252853 78.05097961]
[-31.18939018 70.93350983]
[-45.01562119 65.11669922]
[-58.84185410 59.29988861]
[-74.56257629 61.08020020]
[-83.29349518 49.01287460]
[-97.11972809 43.19606400]
[-110.94596100 37.37924957]
[-124.77219391 31.56243706]
[-144.57325745 35.05234528]
[-155.71286011 19.30402946]
[-169.78285217 14.10449028]
[-183.85284424 8.90495205]
[-197.92285156 3.70541286]
[-213.54943848 6.17936325]
[-222.80558777 -5.48995209]
[-236.87557983 -10.68949032]
[-250.94557190 -15.88902950]
[-265.01556396 -21.08856773]
[-279.08557129 -26.28810692]
[-295.14923096 -22.98804665]
[-305.83523560 -35.42757416]
[-300.15069580 -50.80997086]
[-283.94338989 -53.31114578]
[-273.88601685 -40.35810471]
[-259.81604004 -35.15856552]
[-245.74603271 -29.95902634]
[-231.67604065 -24.75948715]
[-217.60604858 -19.55994797]
[-202.98583984 -22.40580368]
[-192.72331238 -10.36458302]
[-178.65332031 -5.16504478]
[-164.58331299 0.03449406]
[-150.51332092 5.23403263]
[-141.56288147 0.10726676]
[-131.05105591 0.81067693]
[-122.51311493 7.35230112]
[-118.95537567 17.73620605]
[-105.12914276 23.55301857]
[-91.30291748 29.36983109]
[-77.47668457 35.18664169]
[-62.74490738 32.99027252]
[-53.02504349 45.47365570]
[-39.19881058 51.29046631]
[-25.37257767 57.10728073]
[-11.19099998 61.99428940]
[3.28347325 65.92996979]
[17.75794792 69.86565399]
[32.23242188 73.80133820]
[46.70689392 77.73702240]
[55.70233917 62.93907166]
[68.68027496 51.47299957]
[84.47393799 44.36964417]
[101.66343689 42.26761627]
[118.70339203 45.35589600]
[134.06185913 53.35683441]
[146.35806274 65.55113220]
[159.45765686 58.24353409]
[172.55723572 50.93594360]
[185.65681458 43.62834930]
[191.68591309 36.65885162]
[199.12800598 36.30765533]
[212.38604736 29.29164124]
[225.64408875 22.27562714]
[231.82589722 15.44120884]
[239.27394104 15.25473499]
[252.68392944 8.53373241]
[266.09393311 1.81273103]
[279.50393677 -4.90827084]
[292.91394043 -11.62927246]
[306.32394409 -18.35027504]
[319.73394775 -25.07127571]
[333.14395142 -31.79227829]
[344.59497070 -44.29469681]
[359.77874756 -36.75219727]
[356.73428345 -20.07383728]
[339.86495972 -18.38227654]
[326.45495605 -11.66127491]
[313.04495239 -4.94027281]
[299.63494873 1.78072882]
[286.22494507 8.50173092]
[272.81494141 15.22273254]
[259.40493774 21.94373322]
[245.99493408 28.66473579]
[232.66009521 35.53366470]
[219.40206909 42.54967880]
[206.14402771 49.56569290]
[192.96441650 56.72793579]
[179.86482239 64.03553009]
[166.76524353 71.34311676]
[153.66566467 78.65071106]
[157.75511169 100.37741852]
[153.38206482 122.04882812]
[141.18727112 140.48954773]
[150.42800903 152.30517578]
[159.66873169 164.12078857]
[168.90946960 175.93641663]
[176.72554016 180.81831360]
[178.22045898 188.11717224]
[187.19755554 200.13432312]
[196.17463684 212.15147400]
[205.15171814 224.16862488]
[214.12879944 236.18579102]
[223.10589600 248.20294189]
[238.37977600 254.17291260]
[240.57872009 270.42395020]
[227.44064331 280.23840332]
[212.48088074 273.51995850]
[211.08872986 257.18002319]
[202.11164856 245.16287231]
[193.13456726 233.14572144]
[184.15748596 221.12857056]
[175.18040466 209.11140442]
[166.20330811 197.09425354]
[157.09384155 185.17713928]
[147.85311890 173.36152649]
[138.61238098 161.54589844]
[129.37165833 149.73028564]
[121.64753723 153.54605103]
[113.44176483 156.17039490]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 71]
[13 70]
[14 69]
[15 68]
[16 67]
[23 66]
[24 65]
[25 64]
[27 62]
[28 61]
[29 60]
[30 59]
[32 55]
[33 54]
[34 53]
[35 52]
[37 50]
[38 49]
[39 48]
[40 47]
[41 46]
[78 112]
[79 111]
[80 110]
[81 109]
[83 108]
[84 107]
[85 106]
[87 105]
[88 104]
[89 103]
[90 102]
[91 101]
[92 100]
[93 99]
[94 98]
[115 139]
[116 138]
[117 137]
[118 136]
[120 135]
[121 134]
[122 133]
[123 132]
[124 131]
[125 130]
] def

init

% Start Annotations
12 71 0.0 0.6 colorpair
13 70 0.0 1 colorpair
14 69 0.0 1 colorpair
15 68 0.0 1 colorpair
16 67 0.0 1 colorpair
23 66 0.16 1 colorpair
24 65 0.16 0.6 colorpair
25 64 0.16 0.6 colorpair
27 62 0.16 1 colorpair
28 61 0.0 1 colorpair
29 60 0.0 1 colorpair
30 59 0.0 1 colorpair
32 55 0.0 1 colorpair
33 54 0.0 1 colorpair
34 53 0.0 1 colorpair
35 52 0.0 0.2 colorpair
37 50 0.0 1 colorpair
38 49 0.0 1 colorpair
39 48 0.0 1 colorpair
40 47 0.16 1 colorpair
41 46 0.16 1 colorpair
78 112 0.0 1 colorpair
79 111 0.0 1 colorpair
80 110 0.0 1 colorpair
81 109 0.16 1 colorpair
83 108 0.16 0.6 colorpair
84 107 0.16 0.6 colorpair
85 106 0.16 1 colorpair
87 105 0.0 0.6 colorpair
88 104 0.16 0.6 colorpair
89 103 0.0 1 colorpair
90 102 0.0 1 colorpair
91 101 0.0 1 colorpair
92 100 0.0 1 colorpair
93 99 0.0 0.6 colorpair
94 98 0.0 1 colorpair
115 139 0.16 1 colorpair
116 138 0.0 1 colorpair
117 137 0.0 1 colorpair
118 136 0.0 1 colorpair
120 135 0.0 0.6 colorpair
121 134 0.0 1 colorpair
122 133 0.0 1 colorpair
123 132 0.0 1 colorpair
124 131 0.0 1 colorpair
125 130 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
12 71 1 gmark
66 cmark
24 65 1 gmark
65 cmark
25 64 1 gmark
25 cmark
62 cmark
35 52 2 gmark
40 cmark
46 cmark
109 cmark
83 108 1 gmark
108 cmark
84 107 1 gmark
107 cmark
85 cmark
106 cmark
87 105 1 gmark
88 104 1 gmark
104 cmark
93 99 1 gmark
115 cmark
120 135 1 gmark

% End Annotations
showpage
end
%%EOF
