%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan 29 05:46:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UACUCAAAAACGUCAAAAUCCGUGCC_GGAAUUGCGCGUUCGUCUUCGAUCGCGUAUACUUUUU_GCGUUGACGUAACACAGUGUGUUCUGCGGCGACCAACCGCAAAACCCUGAUAAAAACCUCGCUCCGGCGGGGUUUUUU\
) } def
/len { sequence length } bind def

/coor [
[96.76248932 148.05332947]
[88.15589905 146.68319702]
[79.93711853 143.78451538]
[72.37525940 139.45220947]
[65.71791840 133.82812500]
[60.18306732 127.09640503]
[55.95194244 119.47747040]
[53.16307831 111.22078705]
[51.90779114 102.59670258]
[52.22718430 93.88758850]
[37.82643890 89.69015503]
[23.42568970 85.49272156]
[9.02494144 81.29528046]
[-5.37580585 77.09784698]
[-19.77655411 72.90041351]
[-34.17730331 68.70298004]
[-38.51879501 69.94567871]
[-42.60494232 69.71732330]
[-45.99242783 68.28964996]
[-48.37691116 66.05342865]
[-49.62038803 63.46075439]
[-63.60050583 58.02418518]
[-77.58062744 52.58761597]
[-86.82459259 64.52198029]
[-99.04457092 73.35908508]
[-113.24521637 78.38967133]
[-128.27281189 79.21411896]
[-142.90901184 75.77413940]
[-155.96963501 68.35683441]
[-166.40042114 57.57076263]
[-173.36218262 44.29598618]
[-176.29829407 29.61230278]
[-174.97918701 14.71138763]
[-188.95930481 9.27481747]
[-202.93942261 3.83824658]
[-216.91954041 -1.59832406]
[-230.89965820 -7.03489447]
[-244.87977600 -12.47146511]
[-260.54592896 -10.26194763]
[-269.60354614 -22.08601952]
[-283.58367920 -27.52259064]
[-297.56378174 -32.95915985]
[-313.68093872 -29.93103790]
[-324.15518188 -42.54937744]
[-318.21151733 -57.83351135]
[-301.96426392 -60.06043243]
[-292.12722778 -46.93927765]
[-278.14709473 -41.50270844]
[-264.16699219 -36.06613922]
[-249.50077820 -38.66451645]
[-239.44320679 -26.45158386]
[-225.46308899 -21.01501274]
[-211.48297119 -15.57844162]
[-197.50285339 -10.14187145]
[-183.52273560 -4.70530081]
[-169.54260254 0.73126966]
[-160.44824219 -11.14601421]
[-148.36337280 -19.98835373]
[-134.26231384 -25.07224655]
[-119.28495789 -25.97763824]
[-104.64460754 -22.62262154]
[-91.52964783 -15.27076435]
[-81.00712585 -4.51042414]
[-73.93593597 8.79233170]
[-70.89668274 23.56342697]
[-72.14405060 38.60749817]
[-58.16393661 44.04406738]
[-44.18381882 49.48063660]
[-29.97986603 54.30223083]
[-15.57911873 58.49966431]
[-1.17837071 62.69710159]
[13.22237682 66.89453888]
[27.62312508 71.09197235]
[42.02387238 75.28940582]
[56.42462158 79.48683929]
[68.32365417 63.72035980]
[85.55080414 54.05629349]
[105.20838165 52.12018967]
[123.98989105 58.23771286]
[138.73617554 71.37985992]
[152.04133606 64.45362854]
[165.34649658 57.52740097]
[171.57177734 50.73722839]
[179.01832581 50.59878922]
[185.39024353 43.94603348]
[192.83802795 43.97007751]
[206.43264771 37.63080215]
[220.02726746 31.29152870]
[229.26454163 18.44694901]
[244.06929016 20.08054733]
[257.66390991 13.74127293]
[271.25854492 7.40199852]
[284.85314941 1.06272459]
[298.44775391 -5.27654934]
[302.32003784 -20.42711258]
[315.05502319 -29.50202179]
[330.63967896 -28.21638107]
[341.71536255 -17.17723274]
[343.05252075 -1.59692276]
[334.01977539 11.16800117]
[318.88208008 15.09033298]
[304.78704834 8.31806755]
[291.19241333 14.65734100]
[277.59780884 20.99661446]
[264.00317383 27.33588982]
[250.40856934 33.67516327]
[242.14367676 46.06631470]
[226.36654663 44.88614655]
[212.77192688 51.22541809]
[199.17730713 57.56469345]
[185.65264893 64.05187988]
[172.27272034 70.83256531]
[158.96755981 77.75879669]
[145.66239929 84.68502045]
[148.11383057 102.15924835]
[144.10699463 119.34363556]
[134.17971802 133.93154907]
[143.04936218 146.02821350]
[151.91900635 158.12489319]
[160.78865051 170.22155762]
[169.65829468 182.31822205]
[178.52793884 194.41490173]
[187.39758301 206.51156616]
[196.26724243 218.60823059]
[205.13688660 230.70489502]
[214.00653076 242.80157471]
[222.87617493 254.89823914]
[238.09623718 261.00408936]
[240.15029907 277.27407837]
[226.92529297 286.97106934]
[212.02598572 280.11959839]
[210.77949524 263.76788330]
[201.90985107 251.67121887]
[193.04020691 239.57453918]
[184.17056274 227.47787476]
[175.30091858 215.38121033]
[166.43127441 203.28454590]
[157.56163025 191.18786621]
[148.69198608 179.09120178]
[139.82234192 166.99453735]
[130.95269775 154.89785767]
[122.08305359 142.80119324]
[114.00840759 146.08001709]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 75]
[11 74]
[12 73]
[13 72]
[14 71]
[15 70]
[16 69]
[21 68]
[22 67]
[23 66]
[33 56]
[34 55]
[35 54]
[36 53]
[37 52]
[38 51]
[40 49]
[41 48]
[42 47]
[80 114]
[81 113]
[82 112]
[84 111]
[86 110]
[87 109]
[88 108]
[90 106]
[91 105]
[92 104]
[93 103]
[94 102]
[117 142]
[118 141]
[119 140]
[120 139]
[121 138]
[122 137]
[123 136]
[124 135]
[125 134]
[126 133]
[127 132]
] def

init

% Start Annotations
10 75 0.16 0.6 colorpair
11 74 0.0 0.6 colorpair
12 73 0.0 0.6 colorpair
13 72 0.0 0.6 colorpair
14 71 0.0 0.6 colorpair
15 70 0.0 0.6 colorpair
16 69 0.0 0.6 colorpair
21 68 0.0 0.6 colorpair
22 67 0.16 1 colorpair
23 66 0.0 0.6 colorpair
33 56 0.0 1 colorpair
34 55 0.0 1 colorpair
35 54 0.0 1 colorpair
36 53 0.0 0.6 colorpair
37 52 0.0 0.6 colorpair
38 51 0.0 0.6 colorpair
40 49 0.0 0.6 colorpair
41 48 0.0 0.6 colorpair
42 47 0.0 0.6 colorpair
80 114 0.0 1 colorpair
81 113 0.0 1 colorpair
82 112 0.0 1 colorpair
84 111 0.0 0.6 colorpair
86 110 0.0 0.6 colorpair
87 109 0.0 1 colorpair
88 108 0.0 1 colorpair
90 106 0.16 1 colorpair
91 105 0.0 1 colorpair
92 104 0.0 1 colorpair
93 103 0.0 1 colorpair
94 102 0.0 1 colorpair
117 142 0.0 1 colorpair
118 141 0.0 1 colorpair
119 140 0.0 1 colorpair
120 139 0.0 1 colorpair
121 138 0.0 1 colorpair
122 137 0.0 1 colorpair
123 136 0.0 1 colorpair
124 135 0.0 1 colorpair
125 134 0.0 1 colorpair
126 133 0.0 1 colorpair
127 132 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
10 75 1 gmark
10 cmark
11 74 1 gmark
12 73 1 gmark
13 72 1 gmark
14 71 1 gmark
15 70 1 gmark
16 69 1 gmark
21 68 1 gmark
22 cmark
67 cmark
23 66 1 gmark
36 53 1 gmark
37 52 1 gmark
38 51 1 gmark
40 49 1 gmark
41 48 1 gmark
42 47 1 gmark
84 111 1 gmark
86 110 1 gmark
106 cmark

% End Annotations
showpage
end
%%EOF
