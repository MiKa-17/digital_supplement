%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Dec 17 10:22:56 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__________________________________GCACUAAAUACGUCAAAAUUCGUGCCGAAAUUGCGCGUUCUGC_GCGGAACACGUACACUUUCAGUGUUGACAUAACACAGUGUGCUUUGCGGUUACCAGCCGCAGGCGACUGACGAA_ACCUCGCUCCGGCGGGGUUUUUU\
) } def
/len { sequence length } bind def

/coor [
[84.73101807 200.23004150]
[80.97473907 214.75210571]
[75.97069550 228.89280701]
[69.75675964 242.54516602]
[62.37992859 255.60588074]
[53.89602661 267.97616577]
[44.36924362 279.56237793]
[33.87165070 290.27685547]
[22.48268127 300.03860474]
[10.28849792 308.77368164]
[-2.61863685 316.41607666]
[-16.14106750 322.90789795]
[-30.17648506 328.20007324]
[-44.61869812 332.25253296]
[-59.35843658 335.03463745]
[-74.28417969 336.52532959]
[-89.28300476 336.71334839]
[-104.24142456 335.59722900]
[-119.04626465 333.18545532]
[-133.58551025 329.49624634]
[-147.74917603 324.55755615]
[-161.43006897 318.40670776]
[-174.52471924 311.09027100]
[-186.93400574 302.66357422]
[-198.56408691 293.19036865]
[-209.32693481 282.74234009]
[-219.14114380 271.39855957]
[-227.93244934 259.24484253]
[-235.63432312 246.37313843]
[-242.18852234 232.88081360]
[-247.54542542 218.86997986]
[-251.66452026 204.44662476]
[-254.51464844 189.71989441]
[-256.07424927 174.80119324]
[-256.33148193 159.80339050]
[-255.28445435 144.83998108]
[-252.94105530 130.02416992]
[-249.31901550 115.46804047]
[-244.44575500 101.28173065]
[-238.35813904 87.57257843]
[-231.10221863 74.44429779]
[-222.73289490 61.99622726]
[-213.31350708 50.32254410]
[-202.91528320 39.51156998]
[-191.61694336 29.64509773]
[-179.50393677 20.79778099]
[-166.66790771 13.03655624]
[-153.20599365 6.42014551]
[-139.22004700 0.99860758]
[-124.81586456 -3.18703794]
[-110.10243988 -6.10512257]
[-95.19110107 -7.73356867]
[-80.19464874 -8.06005573]
[-65.22656250 -7.08211231]
[-50.40008545 -4.80713844]
[-35.82738876 -1.25234604]
[-21.61873436 3.55536890]
[-7.88162184 9.57963181]
[5.28001356 16.77486420]
[17.76659203 25.08662415]
[29.48363876 34.45203018]
[40.34250641 44.80021667]
[50.26103210 56.05289841]
[59.16417694 68.12493134]
[66.98926544 80.93345642]
[79.86780548 88.62390900]
[72.25282288 75.70059967]
[64.63783264 62.77729034]
[56.90846252 49.92206573]
[49.06530762 37.13594437]
[33.86169815 32.01444244]
[28.52220917 16.88601112]
[37.14284134 3.35588765]
[53.11058426 1.80322397]
[64.17635345 13.41909122]
[61.85143280 29.29278946]
[69.69458771 42.07891464]
[75.89163971 46.14920044]
[77.56114960 55.16230392]
[85.17613220 68.08561707]
[92.79112244 81.00892639]
[92.30410767 66.01683044]
[91.81709290 51.02474213]
[91.33007812 36.03264999]
[83.74824524 23.08985901]
[78.96962738 8.87139130]
[77.19568634 -6.02334404]
[78.50120544 -20.96642303]
[82.83113861 -35.32788849]
[90.00295258 -48.50230026]
[99.71430206 -59.93425751]
[111.55578613 -69.14182281]
[125.02819824 -75.73682404]
[139.56358337 -79.44124603]
[154.54914856 -80.09891510]
[169.35317993 -77.68209839]
[183.35154724 -72.29268646]
[195.95411682 -64.15789032]
[206.62962341 -53.62063980]
[214.92800903 -41.12516403]
[220.49942017 -27.19823647]
[223.10899353 -12.42697620]
[222.64671326 2.56589866]
[219.13206482 17.14832878]
[212.71322632 30.70556068]
[203.66079712 42.66605759]
[192.35639954 52.52559280]
[179.27659607 59.86852264]
[164.97277832 64.38528442]
[150.04829407 65.88546753]
[137.64813232 74.32561493]
[125.24797821 82.76576233]
[112.84782410 91.20591736]
[127.77640533 89.74394226]
[142.70498657 88.28195953]
[157.63357544 86.81998444]
[166.42660522 77.35569763]
[178.91192627 76.46094513]
[188.33958435 84.07146454]
[203.29176331 82.87467194]
[218.24394226 81.67787933]
[233.19612122 80.48108673]
[241.53117371 76.66663361]
[248.42388916 79.39814758]
[263.39495850 78.46691895]
[278.36602783 77.53569031]
[293.33709717 76.60446167]
[308.30816650 75.67323303]
[319.96130371 64.64674377]
[335.82708740 67.02523804]
[343.73458862 80.98413849]
[337.61788940 95.81536865]
[322.16915894 100.14167786]
[309.23937988 90.64429474]
[294.26831055 91.57552338]
[279.29724121 92.50675201]
[264.32620239 93.43798828]
[249.35511780 94.36921692]
[234.39291382 95.43326569]
[219.44073486 96.63005829]
[204.48855591 97.82685089]
[189.53637695 99.02364349]
[175.66421509 109.75040436]
[159.09555054 101.74856567]
[144.16697693 103.21054840]
[129.23838806 104.67252350]
[114.30979919 106.13449860]
[110.91080475 112.82006836]
[104.11280823 126.19120026]
[100.71381378 132.87677002]
[108.32880402 145.80007935]
[115.94378662 158.72338867]
[123.01915741 164.55113220]
[123.57690430 171.94433594]
[130.96131897 185.00076294]
[138.34574890 198.05718994]
[145.73016357 211.11361694]
[153.11459351 224.17004395]
[160.49902344 237.22648621]
[167.88343811 250.28291321]
[182.27919006 258.13748169]
[182.40423584 274.53616333]
[168.12995911 282.60937500]
[154.14048767 274.05209351]
[154.82701111 257.66732788]
[147.44258118 244.61090088]
[140.05816650 231.55447388]
[132.67373657 218.49804688]
[125.28932190 205.44161987]
[117.90489960 192.38519287]
[110.52047729 179.32876587]
[103.02047729 166.33837891]
[95.40548706 153.41506958]
[87.79050446 140.49176025]
[88.27751923 155.48385620]
[88.39627075 170.48338318]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[66 81]
[67 80]
[68 79]
[69 77]
[70 76]
[113 147]
[114 146]
[115 145]
[116 144]
[119 142]
[120 141]
[121 140]
[122 139]
[124 138]
[125 137]
[126 136]
[127 135]
[128 134]
[150 174]
[151 173]
[152 172]
[154 171]
[155 170]
[156 169]
[157 168]
[158 167]
[159 166]
[160 165]
] def

init

% Start Annotations
66 81 0.16 0.6 colorpair
67 80 0.0 0.6 colorpair
68 79 0.0 0.6 colorpair
69 77 0.0 0.6 colorpair
70 76 0.16 0.6 colorpair
113 147 0.0 1 colorpair
114 146 0.0 1 colorpair
115 145 0.0 1 colorpair
116 144 0.32 1 colorpair
119 142 0.0 0.6 colorpair
120 141 0.0 0.6 colorpair
121 140 0.0 0.6 colorpair
122 139 0.0 1 colorpair
124 138 0.0 1 colorpair
125 137 0.0 1 colorpair
126 136 0.0 1 colorpair
127 135 0.0 1 colorpair
128 134 0.0 0.6 colorpair
150 174 0.0 1 colorpair
151 173 0.0 1 colorpair
152 172 0.0 1 colorpair
154 171 0.0 1 colorpair
155 170 0.0 1 colorpair
156 169 0.0 1 colorpair
157 168 0.0 1 colorpair
158 167 0.0 1 colorpair
159 166 0.0 1 colorpair
160 165 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
66 81 1 gmark
66 cmark
81 cmark
67 80 1 gmark
68 79 1 gmark
69 77 1 gmark
70 76 1 gmark
70 cmark
116 cmark
144 cmark
119 142 1 gmark
120 141 1 gmark
121 140 1 gmark
128 134 1 gmark

% End Annotations
showpage
end
%%EOF
