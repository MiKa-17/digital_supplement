%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Dec 17 10:23:08 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAUAAGAAUGGUGAUAUUCACGAGGCUCAUACGCUCUCCUUUUGGUACAAGGAGCACGGUGCUGGCGUACCUCGCCGCUGCCUGUUGCCAGCACCUUUGUUGACAUAACACAGCGUGCCUGGCGGCAACCAACCGCACAAUGCUGAUGAAAACCUCGCUCCGGCGGGGUUUUUU\
) } def
/len { sequence length } bind def

/coor [
[119.60133362 157.11346436]
[127.39190674 139.48512268]
[117.02321625 128.64582825]
[110.39289093 134.36553955]
[101.96803284 138.43273926]
[92.19027710 140.31401062]
[81.65285492 139.60017395]
[72.70734406 151.64085388]
[74.81310272 167.07469177]
[65.56955719 179.15821838]
[50.84276581 181.07061768]
[48.82361603 196.76245117]
[35.02266693 202.36451721]
[26.07715416 214.40518188]
[17.13164520 226.44586182]
[8.18613434 238.48654175]
[3.59365988 254.80662537]
[-13.35996342 254.91148376]
[-18.15394974 238.64944458]
[-3.85454035 229.54103088]
[5.09097004 217.50035095]
[14.03648090 205.45967102]
[22.98199081 193.41900635]
[24.36129951 178.58839417]
[38.80209351 172.12510681]
[36.38156128 157.47326660]
[45.28205490 145.13487244]
[60.66667175 142.69534302]
[69.61218262 130.65466309]
[66.45260620 123.85267639]
[55.46705246 134.06628418]
[42.35870743 126.77441406]
[45.24317169 112.05435944]
[60.13344574 110.24870300]
[56.97386551 103.44671631]
[42.00279999 102.51548004]
[27.03173256 101.58425140]
[12.06066704 100.65302277]
[-2.91039848 99.72179413]
[-17.90803528 99.45557404]
[-32.90272141 99.85488129]
[-46.59095764 108.88616943]
[-61.13331985 101.30648041]
[-61.56987381 84.91314697]
[-47.45153046 76.57022095]
[-33.30202866 84.86019897]
[-18.30734444 84.46089172]
[-27.08495903 72.29727936]
[-23.22361183 57.80279541]
[-9.55798244 51.61808777]
[3.87975836 58.28345871]
[7.22473717 72.90573883]
[-1.97916937 84.75073242]
[12.99189663 85.68196106]
[27.96296310 86.61318970]
[42.93402863 87.54441833]
[57.90509415 88.47564697]
[63.88308334 78.56468964]
[72.00202179 70.93898773]
[81.49749756 65.99964905]
[73.20549774 53.49993896]
[64.91349792 41.00022888]
[56.51089478 28.57460022]
[47.99835205 16.22402763]
[40.52740479 10.91288280]
[39.44661331 3.57785773]
[31.15461159 -8.92185116]
[22.86260986 -21.42156029]
[14.57060909 -33.92126846]
[-0.80518955 -38.49995422]
[-6.67823362 -53.42935181]
[1.45677352 -67.25690460]
[17.35935020 -69.37529755]
[28.83040237 -58.15948105]
[27.07031822 -42.21326828]
[35.36231995 -29.71356010]
[43.65431976 -17.21385193]
[51.94631958 -4.71414328]
[60.34892273 7.71148634]
[68.86146545 20.06205750]
[75.26636505 23.79675484]
[77.41320801 32.70822906]
[85.70520782 45.20793915]
[93.99720764 57.70764542]
[108.98775482 58.24000931]
[118.14556122 46.35999680]
[127.30335999 34.47998428]
[136.46116638 22.59997368]
[145.61895752 10.71996212]
[154.77676392 -1.16004932]
[163.93457031 -13.04006100]
[173.09236145 -24.92007256]
[182.25016785 -36.80008316]
[191.30218506 -48.76089859]
[200.24769592 -60.80157089]
[209.19320679 -72.84224701]
[218.03150940 -84.96183014]
[226.76190186 -97.15937805]
[228.50224304 -112.88457489]
[242.20158386 -118.73069000]
[250.93199158 -130.92823792]
[259.66238403 -143.12577820]
[268.39279175 -155.32331848]
[277.12319946 -167.52087402]
[281.42529297 -183.91990662]
[298.37438965 -184.32563782]
[303.45623779 -168.15124512]
[289.32073975 -158.79046631]
[280.59033203 -146.59292603]
[271.85992432 -134.39538574]
[263.12954712 -122.19783020]
[254.39913940 -110.00028992]
[253.28326416 -95.14754486]
[238.95945740 -88.42897797]
[230.22904968 -76.23143005]
[228.88861084 -68.93938446]
[221.23387146 -63.89673615]
[212.28836060 -51.85606384]
[203.34284973 -39.81538773]
[201.87319946 -32.54828262]
[194.13017273 -27.64228249]
[184.97238159 -15.76227093]
[175.81457520 -3.88225937]
[166.65676880 7.99775219]
[157.49897766 19.87776375]
[148.34117126 31.75777435]
[139.18336487 43.63778687]
[130.02557373 55.51779938]
[120.86776733 67.39781189]
[135.22102356 92.47694397]
[127.86251068 118.27713776]
[138.23120117 129.11643982]
[150.37413025 122.85996246]
[164.83644104 121.98260498]
[179.20722961 127.28784180]
[190.83369446 138.49638367]
[197.30410767 154.19619751]
[211.66543579 158.52658081]
[226.02676392 162.85696411]
[242.93702698 161.64068604]
[248.78698730 177.55339050]
[235.11558533 187.57981873]
[221.69638062 177.21829224]
[207.33505249 172.88790894]
[192.97372437 168.55752563]
[188.29011536 174.41532898]
[200.00556946 183.78273010]
[190.63796997 195.49803162]
[178.92291260 186.13093567]
[174.23930359 191.98873901]
[181.62373352 205.04516602]
[189.00814819 218.10159302]
[196.39257812 231.15802002]
[203.77699280 244.21444702]
[211.16142273 257.27087402]
[218.54583740 270.32730103]
[225.93026733 283.38372803]
[233.31468201 296.44015503]
[240.69911194 309.49658203]
[248.08352661 322.55300903]
[262.47927856 330.40759277]
[262.60433960 346.80627441]
[248.33004761 354.87948608]
[234.34059143 346.32220459]
[235.02709961 329.93743896]
[227.64268494 316.88101196]
[220.25825500 303.82458496]
[212.87384033 290.76815796]
[205.48941040 277.71173096]
[198.10499573 264.65530396]
[190.72056580 251.59887695]
[183.33615112 238.54244995]
[175.95172119 225.48602295]
[168.56730652 212.42959595]
[161.18287659 199.37316895]
[138.19909668 193.78405762]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 132]
[3 131]
[7 29]
[8 28]
[11 25]
[13 23]
[14 22]
[15 21]
[16 20]
[35 57]
[36 56]
[37 55]
[38 54]
[39 53]
[40 47]
[41 46]
[60 84]
[61 83]
[62 82]
[63 80]
[64 79]
[66 78]
[67 77]
[68 76]
[69 75]
[85 129]
[86 128]
[87 127]
[88 126]
[89 125]
[90 124]
[91 123]
[92 122]
[93 121]
[94 119]
[95 118]
[96 117]
[97 115]
[98 114]
[100 112]
[101 111]
[102 110]
[103 109]
[104 108]
[137 145]
[138 144]
[139 143]
[150 175]
[151 174]
[152 173]
[153 172]
[154 171]
[155 170]
[156 169]
[157 168]
[158 167]
[159 166]
[160 165]
] def

init

% Start Annotations
2 132 0.0 1 colorpair
3 131 0.0 1 colorpair
7 29 0.0 1 colorpair
8 28 0.0 1 colorpair
11 25 0.0 1 colorpair
13 23 0.0 1 colorpair
14 22 0.0 1 colorpair
15 21 0.0 1 colorpair
16 20 0.0 1 colorpair
35 57 0.0 1 colorpair
36 56 0.0 1 colorpair
37 55 0.0 1 colorpair
38 54 0.0 1 colorpair
39 53 0.0 1 colorpair
40 47 0.0 1 colorpair
41 46 0.0 1 colorpair
60 84 0.0 1 colorpair
61 83 0.0 1 colorpair
62 82 0.0 1 colorpair
63 80 0.0 1 colorpair
64 79 0.0 1 colorpair
66 78 0.0 1 colorpair
67 77 0.0 1 colorpair
68 76 0.0 1 colorpair
69 75 0.0 1 colorpair
85 129 0.0 1 colorpair
86 128 0.0 1 colorpair
87 127 0.0 1 colorpair
88 126 0.0 1 colorpair
89 125 0.0 1 colorpair
90 124 0.0 1 colorpair
91 123 0.0 1 colorpair
92 122 0.0 1 colorpair
93 121 0.0 1 colorpair
94 119 0.0 1 colorpair
95 118 0.0 1 colorpair
96 117 0.0 1 colorpair
97 115 0.0 1 colorpair
98 114 0.0 1 colorpair
100 112 0.0 1 colorpair
101 111 0.0 1 colorpair
102 110 0.0 1 colorpair
103 109 0.0 1 colorpair
104 108 0.0 1 colorpair
137 145 0.0 1 colorpair
138 144 0.0 1 colorpair
139 143 0.0 1 colorpair
150 175 0.0 1 colorpair
151 174 0.0 1 colorpair
152 173 0.0 1 colorpair
153 172 0.0 1 colorpair
154 171 0.0 1 colorpair
155 170 0.0 1 colorpair
156 169 0.0 1 colorpair
157 168 0.0 1 colorpair
158 167 0.0 1 colorpair
159 166 0.0 1 colorpair
160 165 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
