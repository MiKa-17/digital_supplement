%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Dec 23 16:44:13 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_____A_U_G_C__C____G_C___AA__AAG_____GC__GCUG___U_________U_G_A_U_GGCCCUG_AUC___GUCAUCU__GU______UUCACGGUCCUGGUAUU_CACACUGAUGACGAGA_GAAUCGCUGUGUGAGUUGCGGAUCAGAGACGG_UAA_UAC______GGAGGUU_GCGGC___UUUCAU___AG_CUUA_C_____G_____A_AU_C_C_A_A__G_A__\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50421143 92.11058044]
[62.52358246 91.33198547]
[47.56821823 90.16475677]
[32.64819336 88.60965729]
[17.77357292 86.66775513]
[2.95437646 84.34035492]
[-11.79940414 81.62902069]
[-26.47782516 78.53558350]
[-41.07099152 75.06212616]
[-55.56906509 71.21099091]
[-69.96227264 66.98477173]
[-84.24091339 62.38632202]
[-98.39537048 57.41873932]
[-112.41608429 52.08536911]
[-126.29362488 46.38981247]
[-140.01861572 40.33590317]
[-153.58183289 33.92772675]
[-166.97410583 27.16959763]
[-180.18643188 20.06607628]
[-193.20988464 12.62194633]
[-206.03569031 4.84222889]
[-218.65521240 -3.26783323]
[-231.05993652 -11.70277309]
[-243.24150085 -20.45690536]
[-255.19169617 -29.52432823]
[-266.90246582 -38.89892960]
[-278.36593628 -48.57439041]
[-289.57434082 -58.54419327]
[-300.52014160 -68.80161285]
[-311.19598389 -79.33972931]
[-321.59463501 -90.15145111]
[-331.70910645 -101.22948456]
[-341.53259277 -112.56636047]
[-351.05841064 -124.15444183]
[-360.28024292 -135.98591614]
[-369.19177246 -148.05281067]
[-377.78704834 -160.34696960]
[-386.06024170 -172.86013794]
[-394.00582886 -185.58387756]
[-401.61840820 -198.50958252]
[-408.89285278 -211.62857056]
[-415.82427979 -224.93197632]
[-422.40802002 -238.41084290]
[-428.63958740 -252.05609131]
[-434.51483154 -265.85852051]
[-440.02978516 -279.80880737]
[-445.18069458 -293.89758301]
[-449.96414185 -308.11532593]
[-454.37686157 -322.45245361]
[-458.41589355 -336.89929199]
[-462.07852173 -351.44613647]
[-465.36224365 -366.08316040]
[-468.26489258 -380.80050659]
[-470.78448486 -395.58822632]
[-472.91934204 -410.43640137]
[-474.66799927 -425.33496094]
[-476.02929688 -440.27392578]
[-477.00231934 -455.24316406]
[-477.58639526 -470.23263550]
[-477.78112793 -485.23223877]
[-477.58639526 -500.23181152]
[-477.00234985 -515.22131348]
[-476.02932739 -530.19055176]
[-474.66806030 -545.12951660]
[-472.91940308 -560.02807617]
[-470.78457642 -574.87622070]
[-468.26498413 -589.66394043]
[-465.36233521 -604.38128662]
[-462.07861328 -619.01831055]
[-458.41598511 -633.56518555]
[-454.37698364 -648.01202393]
[-449.96426392 -662.34918213]
[-445.18084717 -676.56689453]
[-440.02993774 -690.65570068]
[-434.51498413 -704.60595703]
[-428.63977051 -718.40838623]
[-422.40817261 -732.05364990]
[-415.82446289 -745.53253174]
[-408.89306641 -758.83593750]
[-401.61862183 -771.95495605]
[-394.00604248 -784.88067627]
[-386.06048584 -797.60437012]
[-377.78729248 -810.11755371]
[-369.19201660 -822.41174316]
[-360.28048706 -834.47863770]
[-351.05868530 -846.31011963]
[-341.53283691 -857.89819336]
[-331.70938110 -869.23510742]
[-321.59490967 -880.31311035]
[-311.19628906 -891.12487793]
[-300.52044678 -901.66296387]
[-289.57464600 -911.92041016]
[-278.36624146 -921.89019775]
[-266.90280151 -931.56567383]
[-255.19203186 -940.94030762]
[-243.24183655 -950.00775146]
[-231.06027222 -958.76190186]
[-218.65556335 -967.19683838]
[-206.03604126 -975.30688477]
[-193.21023560 -983.08660889]
[-180.18679810 -990.53076172]
[-166.97448730 -997.63427734]
[-153.58221436 -1004.39245605]
[-140.01901245 -1010.80059814]
[-126.29401398 -1016.85455322]
[-112.41648102 -1022.55010986]
[-98.39576721 -1027.88342285]
[-84.24131775 -1032.85107422]
[-69.96267700 -1037.44958496]
[-55.56946945 -1041.67578125]
[-41.07139969 -1045.52685547]
[-26.47823715 -1049.00036621]
[-11.79981899 -1052.09387207]
[2.95395923 -1054.80517578]
[17.77315331 -1057.13256836]
[32.64777374 -1059.07446289]
[47.56779480 -1060.62963867]
[62.52315903 -1061.79687500]
[77.50378418 -1062.57543945]
[92.49958038 -1062.96484375]
[107.50041962 -1062.96484375]
[122.49621582 -1062.57543945]
[137.47683716 -1061.79687500]
[152.43220520 -1060.62963867]
[167.35221863 -1059.07446289]
[182.22685242 -1057.13256836]
[197.04603577 -1054.80517578]
[211.79981995 -1052.09387207]
[226.47824097 -1049.00036621]
[241.07139587 -1045.52685547]
[255.56947327 -1041.67578125]
[269.96267700 -1037.44958496]
[284.24130249 -1032.85107422]
[298.39575195 -1027.88342285]
[312.41647339 -1022.55010986]
[326.29400635 -1016.85455322]
[340.01901245 -1010.80059814]
[353.58221436 -1004.39245605]
[366.97448730 -997.63427734]
[380.18679810 -990.53076172]
[393.21023560 -983.08660889]
[406.03604126 -975.30688477]
[418.65554810 -967.19683838]
[431.06027222 -958.76190186]
[443.24182129 -950.00775146]
[455.19201660 -940.94030762]
[466.90280151 -931.56567383]
[478.36624146 -921.89019775]
[489.57464600 -911.92041016]
[500.52044678 -901.66296387]
[511.19628906 -891.12487793]
[521.59490967 -880.31311035]
[531.70941162 -869.23510742]
[541.53283691 -857.89819336]
[551.05871582 -846.31011963]
[560.28045654 -834.47863770]
[569.19201660 -822.41174316]
[577.78729248 -810.11755371]
[586.06048584 -797.60437012]
[594.00604248 -784.88067627]
[601.61859131 -771.95495605]
[608.89306641 -758.83593750]
[615.82446289 -745.53253174]
[622.40820312 -732.05364990]
[628.63977051 -718.40838623]
[634.51501465 -704.60595703]
[640.02990723 -690.65570068]
[645.18084717 -676.56689453]
[649.96429443 -662.34918213]
[654.37695312 -648.01202393]
[658.41601562 -633.56518555]
[662.07861328 -619.01831055]
[665.36236572 -604.38128662]
[668.26495361 -589.66394043]
[670.78454590 -574.87622070]
[672.91937256 -560.02807617]
[674.66802979 -545.12951660]
[676.02935791 -530.19055176]
[677.00231934 -515.22131348]
[677.58642578 -500.23181152]
[677.78112793 -485.23223877]
[677.58636475 -470.23263550]
[677.00231934 -455.24316406]
[676.02929688 -440.27392578]
[674.66802979 -425.33496094]
[672.91937256 -410.43640137]
[670.78448486 -395.58822632]
[668.26489258 -380.80050659]
[665.36224365 -366.08316040]
[662.07849121 -351.44613647]
[658.41589355 -336.89929199]
[654.37683105 -322.45245361]
[649.96411133 -308.11532593]
[645.18072510 -293.89758301]
[640.02978516 -279.80880737]
[634.51483154 -265.85852051]
[628.63958740 -252.05609131]
[622.40802002 -238.41084290]
[615.82427979 -224.93197632]
[608.89288330 -211.62857056]
[601.61840820 -198.50958252]
[594.00579834 -185.58387756]
[586.06024170 -172.86013794]
[577.78704834 -160.34696960]
[569.19177246 -148.05281067]
[560.28021240 -135.98591614]
[551.05841064 -124.15444183]
[541.53259277 -112.56636047]
[531.70910645 -101.22948456]
[521.59460449 -90.15145111]
[511.19598389 -79.33972931]
[500.52014160 -68.80161285]
[489.57434082 -58.54419327]
[478.36593628 -48.57439041]
[466.90246582 -38.89892960]
[455.19168091 -29.52432823]
[443.24148560 -20.45690536]
[431.05993652 -11.70277309]
[418.65521240 -3.26783323]
[406.03567505 4.84222889]
[393.20986938 12.62194633]
[380.18643188 20.06607628]
[366.97412109 27.16959763]
[353.58181763 33.92772675]
[340.01861572 40.33590317]
[326.29360962 46.38981247]
[312.41607666 52.08536911]
[298.39535522 57.41873932]
[284.24090576 62.38632202]
[269.96228027 66.98477173]
[255.56906128 71.21099091]
[241.07098389 75.06212616]
[226.47782898 78.53558350]
[211.79940796 81.62902069]
[197.04562378 84.34035492]
[182.22642517 86.66775513]
[167.35180664 88.60965729]
[152.43177795 90.16475677]
[137.47640991 91.33198547]
[122.49578857 92.11058044]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
