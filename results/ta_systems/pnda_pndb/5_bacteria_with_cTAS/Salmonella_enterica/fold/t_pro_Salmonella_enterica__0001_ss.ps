%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 16:10:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___GGGGCUAUGAUGCCACAGCGAACGUUUUUAAUGAUGUUAAUCGUCAUCUGUGUGACGAUUCUGUGUUUUGUCUGGAUGGUGAGGGAUUCGCUUUGCGGACUCCGGCUCCAGCAGGGAAACACAGUGCUUGUGGCAACGUUAGCCUACGAAGUUAAACGUU\
) } def
/len { sequence length } bind def

/coor [
[130.20333862 403.75158691]
[126.22838593 389.28784180]
[133.49046326 376.16296387]
[147.85620117 371.84725952]
[161.14947510 378.79757690]
[158.01206970 364.12936401]
[154.87464905 349.46112061]
[151.73724365 334.79290771]
[148.59983826 320.12469482]
[145.46241760 305.45648193]
[142.18466187 290.81896973]
[138.76686096 276.21353149]
[128.33312988 265.58404541]
[132.72248840 250.38389587]
[129.30468750 235.77845764]
[125.88688660 221.17303467]
[122.46908569 206.56759644]
[119.05128479 191.96217346]
[115.63348389 177.35673523]
[112.21567535 162.75131226]
[108.65814209 148.17927551]
[104.96120453 133.64199829]
[101.26425934 119.10471344]
[88.08657837 111.93891907]
[73.87494659 116.73782349]
[59.66331482 121.53673553]
[45.45168686 126.33564758]
[31.24005508 131.13456726]
[17.02842331 135.93347168]
[10.24123764 150.20616150]
[-4.67811584 155.42041016]
[-18.87824821 148.48271179]
[-23.93447495 133.50906372]
[-16.84702301 119.38307190]
[-1.82075524 114.48544312]
[12.22951221 121.72183990]
[26.44114304 116.92292786]
[40.65277481 112.12401581]
[54.86440277 107.32511139]
[69.07603455 102.52619934]
[83.28766632 97.72728729]
[84.14921570 82.75204468]
[70.58170319 76.35495758]
[57.01419830 69.95787048]
[43.44668961 63.56078720]
[29.87918091 57.16370010]
[16.31167412 50.76661301]
[2.74416542 44.36952591]
[-10.82334232 37.97243500]
[-24.39085007 31.57534981]
[-40.67976761 33.47355270]
[-50.24969482 20.15632629]
[-43.25590897 5.32328939]
[-26.89302063 4.23339891]
[-17.99376297 18.00784111]
[-4.42625523 24.40492821]
[9.14125252 30.80201530]
[22.70876122 37.19910431]
[36.27626801 43.59619141]
[49.84377670 49.99327850]
[63.41128540 56.39036560]
[76.97879028 62.78745270]
[90.54630280 69.18453979]
[104.84724426 64.65872955]
[112.26414490 51.62072372]
[119.68104553 38.58271790]
[127.09794617 25.54471207]
[134.51484680 12.50670624]
[141.93174744 -0.53129965]
[149.34864807 -13.56930542]
[156.76554871 -26.60731125]
[164.18244934 -39.64531708]
[165.71846008 -48.69810486]
[171.86834717 -52.86006927]
[179.53361511 -65.75360870]
[187.19889832 -78.64715576]
[194.86418152 -91.54070282]
[192.44790649 -104.24153137]
[199.13525391 -114.83444214]
[210.86437988 -117.91039276]
[218.77522278 -130.65475464]
[226.68608093 -143.39909363]
[227.39035034 -159.20462036]
[240.67637634 -165.93743896]
[237.29161072 -181.14207458]
[245.49588013 -193.95396423]
[260.01205444 -197.08712769]
[267.92288208 -209.83148193]
[275.83374023 -222.57583618]
[283.62216187 -235.39537048]
[291.28744507 -248.28890991]
[298.95272827 -261.18246460]
[306.61801147 -274.07598877]
[314.28329468 -286.96954346]
[317.18011475 -303.67416382]
[334.03384399 -305.51483154]
[340.46817017 -289.82931519]
[327.17681885 -279.30426025]
[319.51153564 -266.41070557]
[311.84625244 -253.51716614]
[304.18099976 -240.62362671]
[296.51571655 -227.73008728]
[295.79730225 -220.33908081]
[288.57809448 -214.66497803]
[280.66723633 -201.92062378]
[272.75640869 -189.17628479]
[276.38967896 -174.77714539]
[268.54849243 -161.73986816]
[253.42073059 -158.02658081]
[253.28228760 -143.13262939]
[239.43041992 -135.48825073]
[231.51957703 -122.74389648]
[223.60873413 -109.99954987]
[224.01602173 -92.47515869]
[207.75772095 -83.87541962]
[200.09243774 -70.98187256]
[192.42716980 -58.08833313]
[184.76188660 -45.19478989]
[177.22044373 -32.22841644]
[169.80354309 -19.19041252]
[162.38665771 -6.15240622]
[154.96975708 6.88560009]
[147.55285645 19.92360497]
[140.13595581 32.96161270]
[132.71905518 45.99961853]
[125.30215454 59.03762436]
[117.88525391 72.07563019]
[115.80154419 115.40777588]
[119.49848938 129.94505310]
[123.19542694 144.48234558]
[128.36619568 152.07019043]
[126.82110596 159.33351135]
[130.23890686 173.93893433]
[133.65670776 188.54437256]
[137.07452393 203.14979553]
[140.49232483 217.75523376]
[143.91012573 232.36065674]
[147.32792664 246.96609497]
[158.00611877 258.64028931]
[153.37229919 272.79574585]
[156.79010010 287.40118408]
[161.81457520 295.08666992]
[160.13064575 302.31906128]
[163.26805115 316.98727417]
[166.40545654 331.65551758]
[169.54287720 346.32373047]
[172.68028259 360.99194336]
[175.81768799 375.66015625]
[179.79241943 390.12396240]
[184.59132385 404.33560181]
[189.39024353 418.54721069]
[204.24157715 423.04360962]
[213.58679199 435.43096924]
[213.83245850 450.94610596]
[204.88412476 463.62310791]
[190.18258667 468.58746338]
[175.38090515 463.93023682]
[166.17062378 451.44223022]
[166.09327698 435.92532349]
[175.17860413 423.34613037]
[170.37969971 409.13449097]
[165.58078003 394.92288208]
[157.70655823 407.68988037]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[11 141]
[12 140]
[14 138]
[15 137]
[16 136]
[17 135]
[18 134]
[19 133]
[20 132]
[21 130]
[22 129]
[23 128]
[24 41]
[25 40]
[26 39]
[27 38]
[28 37]
[29 36]
[42 63]
[43 62]
[44 61]
[45 60]
[46 59]
[47 58]
[48 57]
[49 56]
[50 55]
[64 127]
[65 126]
[66 125]
[67 124]
[68 123]
[69 122]
[70 121]
[71 120]
[72 119]
[74 118]
[75 117]
[76 116]
[77 115]
[80 113]
[81 112]
[82 111]
[84 109]
[87 106]
[88 105]
[89 104]
[90 102]
[91 101]
[92 100]
[93 99]
[94 98]
[149 162]
[150 161]
[151 160]
] def

init

% Start Annotations
5 148 0.0 1 colorpair
6 147 0.0 1 colorpair
7 146 0.0 1 colorpair
8 145 0.0 1 colorpair
9 144 0.0 1 colorpair
10 143 0.0 1 colorpair
11 141 0.0 1 colorpair
12 140 0.0 1 colorpair
14 138 0.0 1 colorpair
15 137 0.0 1 colorpair
16 136 0.0 1 colorpair
17 135 0.0 1 colorpair
18 134 0.0 1 colorpair
19 133 0.0 1 colorpair
20 132 0.0 1 colorpair
21 130 0.0 1 colorpair
22 129 0.0 1 colorpair
23 128 0.0 1 colorpair
24 41 0.0 1 colorpair
25 40 0.0 1 colorpair
26 39 0.0 1 colorpair
27 38 0.0 1 colorpair
28 37 0.0 1 colorpair
29 36 0.0 1 colorpair
42 63 0.0 1 colorpair
43 62 0.0 1 colorpair
44 61 0.0 1 colorpair
45 60 0.0 1 colorpair
46 59 0.0 1 colorpair
47 58 0.0 1 colorpair
48 57 0.0 1 colorpair
49 56 0.16 1 colorpair
50 55 0.0 1 colorpair
64 127 0.0 1 colorpair
65 126 0.0 1 colorpair
66 125 0.0 1 colorpair
67 124 0.0 1 colorpair
68 123 0.0 1 colorpair
69 122 0.0 1 colorpair
70 121 0.0 1 colorpair
71 120 0.0 1 colorpair
72 119 0.0 1 colorpair
74 118 0.0 1 colorpair
75 117 0.0 1 colorpair
76 116 0.0 1 colorpair
77 115 0.0 1 colorpair
80 113 0.0 1 colorpair
81 112 0.0 1 colorpair
82 111 0.0 1 colorpair
84 109 0.0 0.6 colorpair
87 106 0.0 1 colorpair
88 105 0.0 1 colorpair
89 104 0.0 1 colorpair
90 102 0.16 1 colorpair
91 101 0.0 0.6 colorpair
92 100 0.0 1 colorpair
93 99 0.0 1 colorpair
94 98 0.16 1 colorpair
149 162 0.0 1 colorpair
150 161 0.0 1 colorpair
151 160 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
49 cmark
84 109 1 gmark
102 cmark
91 101 1 gmark
94 cmark

% End Annotations
showpage
end
%%EOF
