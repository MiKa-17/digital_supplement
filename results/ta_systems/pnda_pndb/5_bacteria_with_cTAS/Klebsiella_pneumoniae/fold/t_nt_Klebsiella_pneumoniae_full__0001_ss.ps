%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 16:09:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__GAUGCCACAGCGAACGUUUUUAAUGAUGUUAAUCGUCAUCUGUGUGACGAUUCUGUGUUUUGUCUGGAUGGUGAGGGAUUCGCUUUGCGUACUCCGGCUCCAGCAGGGAAACACAGUGCUUGUGGCAACGUUAGCCUACGAAGUUAAACGUUAA\
) } def
/len { sequence length } bind def

/coor [
[129.08335876 263.48043823]
[121.36714935 250.61730957]
[122.53128052 235.66255188]
[132.14508057 224.14843750]
[146.65208435 220.33442688]
[160.68759155 225.63296509]
[154.02522278 212.19372559]
[147.36286926 198.75450134]
[140.70051575 185.31526184]
[134.03816223 171.87603760]
[127.37580109 158.43679810]
[120.57931519 145.06489563]
[113.64939117 131.76165771]
[106.71946716 118.45841980]
[92.11486816 115.03704834]
[79.99727631 123.87809753]
[67.87969208 132.71914673]
[55.76210403 141.56018066]
[43.64451599 150.40122986]
[31.52692795 159.24227905]
[29.33376312 174.89364624]
[16.66563797 184.34320068]
[1.03832388 181.98469543]
[-8.27677059 169.21736145]
[-5.75316429 153.61585999]
[7.11193132 144.43626404]
[22.68588257 147.12467957]
[34.80347061 138.28364563]
[46.92105865 129.44259644]
[59.03864670 120.60155487]
[71.15623474 111.76050568]
[83.27382660 102.91946411]
[79.85245514 88.31486511]
[65.06890106 85.77585602]
[50.28535080 83.23684692]
[35.50180054 80.69783783]
[20.71824646 78.15882874]
[5.93469381 75.61981964]
[-8.84885883 73.08081055]
[-23.63241196 70.54179382]
[-38.41596222 68.00278473]
[-53.60533142 74.18463135]
[-66.38584137 63.90890121]
[-63.61000061 47.74639130]
[-48.13335800 42.32370377]
[-35.87695312 53.21923447]
[-21.09340096 55.75824356]
[-6.30984879 58.29725266]
[8.47370434 60.83626556]
[23.25725746 63.37527466]
[38.04080963 65.91428375]
[52.82436371 68.45329285]
[67.60791779 70.99230194]
[82.39146423 73.53131104]
[95.25498199 65.81575012]
[99.97579193 51.57798386]
[104.69660187 37.34022141]
[109.41741180 23.10245514]
[114.13822174 8.86468983]
[118.85903168 -5.37307549]
[123.57984161 -19.61083984]
[128.30064392 -33.84860611]
[133.02145386 -48.08637238]
[130.02053833 -63.62036514]
[141.37019348 -73.26580811]
[145.80517578 -87.59517670]
[149.95256042 -102.01042175]
[154.09994507 -116.42566681]
[158.24732971 -130.84091187]
[162.39469910 -145.25614929]
[161.76196289 -154.42608643]
[166.77197266 -159.91677856]
[163.46083069 -175.38761902]
[174.61521912 -185.25822449]
[179.05020142 -199.58758545]
[178.60107422 -208.76835632]
[183.71994019 -214.15769958]
[188.44075012 -228.39546204]
[193.16156006 -242.63323975]
[185.76045227 -253.92663574]
[186.22640991 -267.22604370]
[194.16384888 -277.66336060]
[206.48361206 -281.54800415]
[211.48834229 -295.68847656]
[216.49308777 -309.82891846]
[216.07794189 -326.77780151]
[232.24952698 -331.86862183]
[241.61813354 -317.73834229]
[230.63354492 -304.82418823]
[225.62879944 -290.68374634]
[220.62406921 -276.54327393]
[228.51165771 -261.71844482]
[223.15718079 -245.44721985]
[207.39932251 -237.91242981]
[202.67851257 -223.67465210]
[197.95770264 -209.43688965]
[193.37957764 -195.15260315]
[188.94459534 -180.82324219]
[192.57295227 -166.37733459]
[181.10134888 -155.48179626]
[176.80995178 -141.10876465]
[172.66256714 -126.69352722]
[168.51518250 -112.27828217]
[164.36779785 -97.86303711]
[160.22041321 -83.44779968]
[161.73652649 -78.86521149]
[160.35000610 -73.28112030]
[155.60795593 -68.54499817]
[158.94654846 -54.02938080]
[147.25923157 -43.36556244]
[142.53842163 -29.12779617]
[137.81761169 -14.89003086]
[133.09680176 -0.65226597]
[128.37599182 13.58549881]
[123.65517426 27.82326508]
[118.93437195 42.06103134]
[114.21356201 56.29879379]
[109.49275208 70.53656006]
[120.02270508 111.52848816]
[126.95262909 124.83172607]
[133.88255310 138.13496399]
[140.66094971 144.34313965]
[140.81503296 151.77444458]
[147.47738647 165.21366882]
[154.13975525 178.65290833]
[160.80210876 192.09213257]
[167.46446228 205.53137207]
[174.12681580 218.97061157]
[181.84237671 231.83412170]
[190.56175232 244.03956604]
[199.28111267 256.24499512]
[208.00048828 268.45043945]
[216.71984863 280.65585327]
[225.43920898 292.86129761]
[234.28025818 304.97888184]
[243.24209595 317.00741577]
[252.20393372 329.03594971]
[267.82479858 329.75872803]
[279.29141235 340.39126587]
[281.18957520 355.91320801]
[272.62304688 368.99557495]
[257.63665771 373.46127319]
[243.30654907 367.20172119]
[236.39894104 353.17251587]
[240.17539978 337.99777222]
[231.21356201 325.96926880]
[222.25172424 313.94073486]
[215.69683838 310.43624878]
[213.23377991 301.58065796]
[204.51441956 289.37524414]
[195.79504395 277.16979980]
[187.07568359 264.96435547]
[178.35630798 252.75892639]
[169.63694763 240.55349731]
[167.70388794 255.42840576]
[157.50964355 266.43191528]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 128]
[7 127]
[8 126]
[9 125]
[10 124]
[11 123]
[12 121]
[13 120]
[14 119]
[15 32]
[16 31]
[17 30]
[18 29]
[19 28]
[20 27]
[33 54]
[34 53]
[35 52]
[36 51]
[37 50]
[38 49]
[39 48]
[40 47]
[41 46]
[55 118]
[56 117]
[57 116]
[58 115]
[59 114]
[60 113]
[61 112]
[62 111]
[63 110]
[65 108]
[66 105]
[67 104]
[68 103]
[69 102]
[70 101]
[72 100]
[74 98]
[75 97]
[77 96]
[78 95]
[79 94]
[83 91]
[84 90]
[85 89]
[129 154]
[130 153]
[131 152]
[132 151]
[133 150]
[134 149]
[135 147]
[136 146]
[137 145]
] def

init

% Start Annotations
6 128 0.0 1 colorpair
7 127 0.0 1 colorpair
8 126 0.0 1 colorpair
9 125 0.0 1 colorpair
10 124 0.0 1 colorpair
11 123 0.0 1 colorpair
12 121 0.0 1 colorpair
13 120 0.0 1 colorpair
14 119 0.0 1 colorpair
15 32 0.0 1 colorpair
16 31 0.0 1 colorpair
17 30 0.0 1 colorpair
18 29 0.0 1 colorpair
19 28 0.0 1 colorpair
20 27 0.0 1 colorpair
33 54 0.0 1 colorpair
34 53 0.0 1 colorpair
35 52 0.0 1 colorpair
36 51 0.0 1 colorpair
37 50 0.0 1 colorpair
38 49 0.0 1 colorpair
39 48 0.0 1 colorpair
40 47 0.16 1 colorpair
41 46 0.0 1 colorpair
55 118 0.0 1 colorpair
56 117 0.0 1 colorpair
57 116 0.0 1 colorpair
58 115 0.0 1 colorpair
59 114 0.0 1 colorpair
60 113 0.0 1 colorpair
61 112 0.0 1 colorpair
62 111 0.0 1 colorpair
63 110 0.0 1 colorpair
65 108 0.0 1 colorpair
66 105 0.0 1 colorpair
67 104 0.0 1 colorpair
68 103 0.0 1 colorpair
69 102 0.0 1 colorpair
70 101 0.0 1 colorpair
72 100 0.0 0.2 colorpair
74 98 0.0 1 colorpair
75 97 0.0 1 colorpair
77 96 0.0 1 colorpair
78 95 0.0 1 colorpair
79 94 0.0 1 colorpair
83 91 0.0 1 colorpair
84 90 0.0 1 colorpair
85 89 0.0 1 colorpair
129 154 0.0 1 colorpair
130 153 0.0 1 colorpair
131 152 0.0 1 colorpair
132 151 0.0 1 colorpair
133 150 0.0 1 colorpair
134 149 0.0 1 colorpair
135 147 0.0 1 colorpair
136 146 0.0 1 colorpair
137 145 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
40 cmark
72 100 2 gmark

% End Annotations
showpage
end
%%EOF
