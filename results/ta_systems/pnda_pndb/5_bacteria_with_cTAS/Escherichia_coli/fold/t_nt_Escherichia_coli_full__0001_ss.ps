%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 16:05:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__GAUGCCACAGCGAACGUUUUUAAUGAUGUUAAUCGUCGUCUGUGUGACGAUUCUGUGUUUUGUCUGGAUGGUGAGGGAUUCGCUUUGCGGACUCCGGCUCCAGCAGGGAAACACAGUGCUUGUGGCAACGUUAGCCUACGAAGUUAAACGUUAA\
) } def
/len { sequence length } bind def

/coor [
[123.12303162 263.36291504]
[115.40682983 250.49978638]
[116.57095337 235.54502869]
[126.18475342 224.03091431]
[140.69175720 220.21690369]
[154.72726440 225.51542664]
[148.06491089 212.07620239]
[141.40254211 198.63696289]
[134.74018860 185.19773865]
[128.07783508 171.75849915]
[121.41547394 158.31925964]
[114.75312042 144.88003540]
[107.95663452 131.50813293]
[101.02671051 118.20489502]
[86.42211151 114.78352356]
[74.30452728 123.62456512]
[62.18693542 132.46560669]
[50.06934738 141.30665588]
[37.95175934 150.14770508]
[25.83417130 158.98873901]
[23.64100838 174.64012146]
[10.97288322 184.08967590]
[-4.65443087 181.73115540]
[-13.96952534 168.96383667]
[-11.44591904 153.36233521]
[1.41917622 144.18273926]
[16.99312782 146.87115479]
[29.11071587 138.03010559]
[41.22830582 129.18907166]
[53.34589386 120.34802246]
[65.46347809 111.50698090]
[77.58106995 102.66593933]
[75.87038422 95.36363983]
[70.73833466 73.45674133]
[55.95478439 70.91773224]
[41.17123032 68.37872314]
[26.38767815 65.83971405]
[11.60412502 63.30070114]
[-3.17942762 60.76169205]
[-17.96298027 58.22268295]
[-30.72236633 67.54864502]
[-46.32601547 65.03833008]
[-55.51655960 52.18105316]
[-52.84140778 36.60481644]
[-39.88768387 27.55072403]
[-24.34060287 30.39040565]
[-15.42397022 43.43912888]
[-0.64041758 45.97814178]
[14.14313507 48.51715088]
[28.92668724 51.05615997]
[43.71023941 53.59516907]
[58.49379349 56.13418198]
[73.27734375 58.67319107]
[90.04135895 72.93162537]
[98.89285278 91.60218048]
[103.61366272 77.36441040]
[108.33447266 63.12664795]
[113.05528259 48.88888168]
[117.77609253 34.65111923]
[122.49690247 20.41335297]
[127.21771240 6.17558670]
[131.93852234 -8.06217861]
[136.65933228 -22.29994392]
[133.65840149 -37.83393860]
[145.00805664 -47.47937775]
[144.74272156 -56.66728592]
[149.96839905 -61.95313644]
[154.97314453 -76.09358978]
[143.36732483 -84.66097260]
[134.66235352 -96.14393616]
[129.55941772 -109.60260773]
[128.46536255 -123.93858337]
[131.46025085 -137.98455811]
[138.29153442 -150.59941101]
[148.39541626 -160.76087952]
[160.94329834 -167.64840698]
[174.90972900 -170.70941162]
[189.15626526 -169.70356750]
[194.44293213 -183.74105835]
[199.72961426 -197.77854919]
[197.35260010 -213.42016602]
[209.07908630 -222.60379028]
[214.22505188 -236.69346619]
[219.22979736 -250.83392334]
[224.23454285 -264.97439575]
[223.81939697 -281.92324829]
[239.99096680 -287.01406860]
[249.35958862 -272.88378906]
[238.37500000 -259.96963501]
[233.37025452 -245.82917786]
[228.36550903 -231.68872070]
[229.10260010 -224.29246521]
[223.11657715 -217.31712341]
[225.87171936 -202.67955017]
[213.76710510 -192.49186707]
[208.48042297 -178.45439148]
[203.19374084 -164.41690063]
[215.51335144 -154.78613281]
[224.27201843 -141.80856323]
[228.60549927 -126.74338531]
[228.07962036 -111.05673981]
[222.73368835 -96.27912903]
[213.07792664 -83.85604858]
[200.04470825 -75.00661469]
[184.89859009 -70.60389709]
[169.11360168 -71.08884430]
[164.10885620 -56.94839096]
[159.24583435 -42.75856781]
[162.58441162 -28.24295425]
[150.89709473 -17.57913399]
[146.17628479 -3.34136891]
[141.45547485 10.89639664]
[136.73466492 25.13416100]
[132.01385498 39.37192535]
[127.29304504 53.60969162]
[122.57223511 67.84745789]
[117.85143280 82.08522034]
[113.13062286 96.32299042]
[114.32994843 111.27496338]
[121.25987244 124.57820129]
[128.03826904 130.78637695]
[128.19235229 138.21768188]
[134.85470581 151.65690613]
[141.51705933 165.09614563]
[148.17942810 178.53536987]
[154.84178162 191.97460938]
[161.50413513 205.41384888]
[168.16650391 218.85307312]
[175.88206482 231.71659851]
[184.60142517 243.92202759]
[193.32078552 256.12747192]
[202.04016113 268.33288574]
[210.75952148 280.53833008]
[219.47889709 292.74377441]
[228.31993103 304.86135864]
[237.28176880 316.88989258]
[246.24360657 328.91842651]
[261.86447144 329.64117432]
[273.33108521 340.27371216]
[275.22924805 355.79568481]
[266.66271973 368.87805176]
[251.67633057 373.34375000]
[237.34622192 367.08419800]
[230.43861389 353.05499268]
[234.21507263 337.88024902]
[225.25325012 325.85171509]
[216.29141235 313.82318115]
[209.73652649 310.31872559]
[207.27345276 301.46313477]
[198.55409241 289.25769043]
[189.83471680 277.05227661]
[181.11535645 264.84683228]
[172.39599609 252.64138794]
[163.67662048 240.43595886]
[161.74356079 255.31088257]
[151.54931641 266.31439209]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 128]
[7 127]
[8 126]
[9 125]
[10 124]
[11 123]
[12 122]
[13 120]
[14 119]
[15 32]
[16 31]
[17 30]
[18 29]
[19 28]
[20 27]
[34 53]
[35 52]
[36 51]
[37 50]
[38 49]
[39 48]
[40 47]
[55 118]
[56 117]
[57 116]
[58 115]
[59 114]
[60 113]
[61 112]
[62 111]
[63 110]
[65 108]
[67 107]
[68 106]
[78 97]
[79 96]
[80 95]
[82 93]
[83 91]
[84 90]
[85 89]
[129 154]
[130 153]
[131 152]
[132 151]
[133 150]
[134 149]
[135 147]
[136 146]
[137 145]
] def

init

% Start Annotations
6 128 0.0 0.6 colorpair
7 127 0.0 0.2 colorpair
8 126 0.0 0.2 colorpair
9 125 0.0 0.2 colorpair
10 124 0.0 0.2 colorpair
11 123 0.0 0.2 colorpair
12 122 0.16 0.2 colorpair
13 120 0.0 0.6 colorpair
14 119 0.0 0.6 colorpair
15 32 0.0 1 colorpair
16 31 0.0 1 colorpair
17 30 0.0 1 colorpair
18 29 0.16 1 colorpair
19 28 0.0 1 colorpair
20 27 0.16 1 colorpair
34 53 0.0 1 colorpair
35 52 0.0 1 colorpair
36 51 0.16 1 colorpair
37 50 0.0 1 colorpair
38 49 0.0 1 colorpair
39 48 0.0 0.2 colorpair
40 47 0.16 1 colorpair
55 118 0.0 0.2 colorpair
56 117 0.16 0.2 colorpair
57 116 0.0 0.6 colorpair
58 115 0.0 0.2 colorpair
59 114 0.16 0.6 colorpair
60 113 0.0 0.6 colorpair
61 112 0.16 0.6 colorpair
62 111 0.0 0.6 colorpair
63 110 0.0 0.6 colorpair
65 108 0.0 0.2 colorpair
67 107 0.0 0.6 colorpair
68 106 0.0 0.2 colorpair
78 97 0.16 0.6 colorpair
80 95 0.0 0.6 colorpair
82 93 0.32 0.6 colorpair
83 91 0.0 0.2 colorpair
84 90 0.16 0.6 colorpair
85 89 0.0 0.2 colorpair
129 154 0.0 0.2 colorpair
130 153 0.0 0.2 colorpair
131 152 0.0 0.2 colorpair
132 151 0.0 0.2 colorpair
133 150 0.0 0.2 colorpair
134 149 0.0 0.2 colorpair
135 147 0.0 0.2 colorpair
136 146 0.0 0.2 colorpair
137 145 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
6 128 1 gmark
7 127 2 gmark
8 126 2 gmark
9 125 2 gmark
10 124 2 gmark
11 123 2 gmark
12 122 2 gmark
12 cmark
13 120 1 gmark
14 119 1 gmark
18 cmark
27 cmark
36 cmark
39 48 2 gmark
40 cmark
55 118 2 gmark
56 117 2 gmark
117 cmark
57 116 1 gmark
58 115 2 gmark
59 114 1 gmark
114 cmark
60 113 1 gmark
61 112 1 gmark
112 cmark
62 111 1 gmark
63 110 1 gmark
65 108 2 gmark
67 107 1 gmark
68 106 2 gmark
78 97 1 gmark
78 cmark
97 cmark
79 96 4 gmark
96 cmark
80 95 1 gmark
82 93 1 gmark
82 cmark
93 cmark
83 91 2 gmark
84 90 1 gmark
84 cmark
90 cmark
85 89 2 gmark
129 154 2 gmark
130 153 2 gmark
131 152 2 gmark
132 151 2 gmark
133 150 2 gmark
134 149 2 gmark
135 147 2 gmark
136 146 2 gmark
137 145 2 gmark

% End Annotations
showpage
end
%%EOF
