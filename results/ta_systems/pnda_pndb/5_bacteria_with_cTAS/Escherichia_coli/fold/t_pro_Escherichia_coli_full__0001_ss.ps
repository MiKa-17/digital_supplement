%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 16:05:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______________UGAUGCCACAGCGAACGUUUUUAAUGAUGUUAAUCGUCGUCUGUGUGACGAUUCUGUGUUUUGUCUGGAUGGUGAGGGAUUCGCUUUGCGGACUCCGGCUCCAGCAGGGAAACACAGUGCUUGUGGCAACGUUAGCCUACGAAGUUA______\
) } def
/len { sequence length } bind def

/coor [
[83.09844208 447.48587036]
[70.85585022 438.77578735]
[59.94467163 428.44659424]
[50.57728577 416.69934082]
[42.93602753 403.76266479]
[37.16964340 389.88842773]
[33.39037323 375.34664917]
[31.67178726 360.42041016]
[32.04733276 345.40023804]
[34.50970078 330.57855225]
[39.01095963 316.24380493]
[45.46349716 302.67504883]
[53.74170303 290.13641357]
[63.68444824 278.87197876]
[75.09819031 269.10095215]
[87.76075745 261.01358032]
[101.42566681 254.76728821]
[115.82693481 250.48362732]
[113.59130096 235.65116882]
[111.35566711 220.81871033]
[109.12003326 205.98623657]
[106.88439941 191.15377808]
[104.64876556 176.32131958]
[102.41313171 161.48886108]
[100.17749786 146.65638733]
[97.80327606 131.84547424]
[95.29068756 117.05741882]
[82.89710236 108.60761261]
[68.21332550 111.67139435]
[53.52955246 114.73517609]
[38.84577942 117.79895782]
[24.16200256 120.86273193]
[9.47822762 123.92651367]
[1.03185868 137.28445435]
[-14.40425587 140.67588806]
[-27.67214394 132.08877563]
[-30.90019989 116.61766052]
[-22.17327881 103.44130707]
[-6.66890621 100.37699890]
[6.41444826 109.24273682]
[21.09822273 106.17895508]
[35.78199768 103.11518097]
[50.46577454 100.05139923]
[65.14955139 96.98761749]
[79.83332062 93.92384338]
[81.08962250 86.52980804]
[84.85851288 64.34770966]
[72.01064301 56.60611343]
[59.16277313 48.86452103]
[46.31490707 41.12292862]
[33.46703720 33.38133240]
[20.61916924 25.63973808]
[7.77130079 17.89814568]
[-7.50602818 21.94521332]
[-21.12827110 13.93209457]
[-25.01359177 -1.38716841]
[-16.85689926 -14.92393017]
[-1.49741375 -18.64706993]
[11.95235348 -10.34771347]
[15.51289463 5.05027628]
[28.36076355 12.79187012]
[41.20863342 20.53346443]
[54.05649948 28.27505875]
[66.90436554 36.01665115]
[79.75223541 43.75824738]
[92.60010529 51.49983978]
[98.84378052 71.30429077]
[100.59311676 91.64447021]
[108.80969238 79.09505463]
[117.02626801 66.54563904]
[125.24284363 53.99621964]
[133.45942688 41.44680405]
[141.67599487 28.89738846]
[149.89257812 16.34797096]
[158.10916138 3.79855490]
[166.32572937 -8.75086117]
[168.42236328 -17.68521500]
[174.81512451 -21.45612907]
[183.26492310 -33.84971237]
[191.71472168 -46.24329376]
[200.16452026 -58.63687515]
[190.95448303 -70.62155914]
[185.90655518 -84.84691620]
[185.50325012 -99.91561890]
[189.77146912 -114.35159302]
[198.28114319 -126.74465179]
[210.18853760 -135.88822937]
[224.31985474 -140.89683533]
[239.28694153 -141.29183960]
[253.62373352 -137.04713440]
[262.07354736 -149.44070435]
[270.52334595 -161.83428955]
[265.45080566 -176.37992859]
[269.86425781 -190.95301819]
[281.87057495 -200.02561951]
[296.73901367 -200.28561401]
[305.18881226 -212.67919922]
[313.63861084 -225.07278442]
[317.56539917 -241.56570435]
[334.50079346 -242.35809326]
[339.95040894 -226.30386353]
[326.03219604 -216.62298584]
[317.58239746 -204.22940063]
[309.13259888 -191.83581543]
[314.32260132 -177.90019226]
[310.26358032 -163.40922546]
[298.31027222 -153.97671509]
[282.91693115 -153.38449097]
[274.46710205 -140.99090576]
[266.01730347 -128.59733582]
[275.20642090 -116.80236053]
[280.30682373 -102.72557068]
[280.80718994 -87.74124908]
[276.64593506 -73.31645203]
[268.21847534 -60.86731720]
[256.33978271 -51.62009430]
[242.16537476 -46.49031448]
[227.07913208 -45.99218750]
[212.55810547 -50.18707275]
[204.10830688 -37.79349136]
[195.65850830 -25.39990997]
[187.20870972 -13.00632858]
[178.87515259 -0.53428400]
[170.65856934 12.01513290]
[162.44200134 24.56454849]
[154.22541809 37.11396408]
[146.00883484 49.66338348]
[137.79226685 62.21279907]
[129.57568359 74.76221466]
[121.35910797 87.31163025]
[113.14253235 99.86104584]
[110.07875061 114.54482269]
[112.59134674 129.33288574]
[117.13130951 137.30830383]
[115.00995636 144.42076111]
[117.24559021 159.25321960]
[119.48122406 174.08567810]
[121.71685791 188.91815186]
[123.95249176 203.75061035]
[126.18812561 218.58306885]
[128.42376709 233.41552734]
[130.65939331 248.24800110]
[145.68348694 248.09649658]
[160.58242798 250.03749084]
[175.06622314 254.03320312]
[188.85295105 260.00585938]
[201.67422485 267.83917236]
[213.28047180 277.38070679]
[223.44580078 288.44473267]
[231.97232056 300.81585693]
[238.69407654 314.25326538]
[243.48019409 328.49542236]
[246.23754883 343.26510620]
[246.91244507 358.27478027]
[245.49176025 373.23229980]
[242.00312805 387.84652710]
[236.51448059 401.83297729]
[229.13262939 414.91940308]
[220.00128174 426.85107422]
[209.29818726 437.39572144]
[197.23167419 446.34811401]
[184.03660583 453.53399658]
[169.96986389 458.81344604]
[155.30523682 462.08374023]
[140.32818604 463.28121948]
[125.33023071 462.38253784]
[110.60332489 459.40524292]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 142]
[19 141]
[20 140]
[21 139]
[22 138]
[23 137]
[24 136]
[25 135]
[26 133]
[27 132]
[28 45]
[29 44]
[30 43]
[31 42]
[32 41]
[33 40]
[47 66]
[48 65]
[49 64]
[50 63]
[51 62]
[52 61]
[53 60]
[68 131]
[69 130]
[70 129]
[71 128]
[72 127]
[73 126]
[74 125]
[75 124]
[76 123]
[78 122]
[79 121]
[80 120]
[81 119]
[90 110]
[91 109]
[92 108]
[96 104]
[97 103]
[98 102]
] def

init

% Start Annotations
18 142 0.0 1 colorpair
19 141 0.0 1 colorpair
20 140 0.0 1 colorpair
21 139 0.0 1 colorpair
22 138 0.0 1 colorpair
23 137 0.0 1 colorpair
24 136 0.0 1 colorpair
25 135 0.16 1 colorpair
26 133 0.0 1 colorpair
27 132 0.0 1 colorpair
28 45 0.0 1 colorpair
29 44 0.0 1 colorpair
30 43 0.0 1 colorpair
31 42 0.16 1 colorpair
32 41 0.0 1 colorpair
33 40 0.16 1 colorpair
47 66 0.0 1 colorpair
48 65 0.0 1 colorpair
49 64 0.16 1 colorpair
50 63 0.0 1 colorpair
51 62 0.0 1 colorpair
52 61 0.0 1 colorpair
53 60 0.16 1 colorpair
68 131 0.0 1 colorpair
69 130 0.16 1 colorpair
70 129 0.0 1 colorpair
71 128 0.0 1 colorpair
72 127 0.16 1 colorpair
73 126 0.0 1 colorpair
74 125 0.0 1 colorpair
75 124 0.0 1 colorpair
76 123 0.0 1 colorpair
78 122 0.0 1 colorpair
79 121 0.0 0.2 colorpair
80 120 0.0 1 colorpair
81 119 0.0 1 colorpair
90 110 0.0 1 colorpair
91 109 0.16 1 colorpair
92 108 0.0 0.2 colorpair
96 104 0.0 1 colorpair
97 103 0.0 1 colorpair
98 102 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
25 cmark
31 cmark
40 cmark
49 cmark
53 cmark
130 cmark
127 cmark
79 121 2 gmark
109 cmark
92 108 2 gmark

% End Annotations
showpage
end
%%EOF
