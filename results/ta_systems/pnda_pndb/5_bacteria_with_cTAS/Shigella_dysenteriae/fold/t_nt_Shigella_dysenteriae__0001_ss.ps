%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 16:11:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__GAUGCCACAACGAACGUUUUUAAUGAUGUUAAUCGUCGUCUGUGUGACGAUACUGUGUUUUGUCUGGAUGGUGAGGGAUUCGCUUUGCGGACUCCGGAUCCAGCAGGGAAACACAGUGCUUGUGGCAACGUUAGCCUACGAAGUUAAACGUUAA\
) } def
/len { sequence length } bind def

/coor [
[112.52295685 243.74629211]
[104.80676270 230.88314819]
[105.97088623 215.92839050]
[115.58468628 204.41427612]
[130.09169006 200.60026550]
[144.12719727 205.89880371]
[137.46482849 192.45956421]
[130.80247498 179.02033997]
[124.14012146 165.58110046]
[117.47776031 152.14186096]
[110.81540680 138.70263672]
[104.15304565 125.26339722]
[93.59245300 129.63885498]
[80.53882599 129.14427185]
[67.31975555 122.65640259]
[55.20217133 131.49745178]
[43.08458328 140.33848572]
[30.96699524 149.17953491]
[18.84940529 158.02058411]
[6.73181820 166.86161804]
[4.53865480 182.51300049]
[-8.12947083 191.96255493]
[-23.75678444 189.60403442]
[-33.07188034 176.83671570]
[-30.54827309 161.23521423]
[-17.68317795 152.05561829]
[-2.10922599 154.74403381]
[10.00836182 145.90298462]
[22.12594986 137.06195068]
[34.24353790 128.22090149]
[46.36112595 119.37985992]
[58.47871399 110.53881073]
[56.98794937 103.18846130]
[42.28720856 106.16976929]
[39.30612946 91.46897888]
[54.00641632 88.48777008]
[52.51565170 81.13742065]
[37.91105652 77.71605682]
[23.30645943 74.29468536]
[8.70186138 70.87332153]
[-5.90273523 67.45195770]
[-20.50733185 64.03058624]
[-34.84310532 71.23233032]
[-49.35094452 64.38381195]
[-52.90167236 48.73862839]
[-42.77147675 36.29841995]
[-26.73137856 36.60625839]
[-17.08596611 49.42599106]
[-2.48136854 52.84735870]
[12.12322807 56.26872253]
[26.72782516 59.69009018]
[41.33242035 63.11145782]
[55.93701935 66.53282166]
[69.02629089 59.20677948]
[73.74710083 44.96901321]
[78.46791077 30.73124886]
[83.18872070 16.49348259]
[87.90953064 2.25571775]
[92.63034058 -11.98204708]
[97.35115051 -26.21981239]
[102.07196045 -40.45757675]
[106.79277039 -54.69534302]
[111.51357269 -68.93310547]
[111.24822998 -78.12101746]
[116.47390747 -83.40686798]
[121.47865295 -97.54732513]
[126.48339844 -111.68778229]
[131.48814392 -125.82823944]
[126.64119720 -137.82049561]
[131.14218140 -149.51754761]
[142.05570984 -154.81568909]
[147.34237671 -168.85317993]
[152.62905884 -182.89065552]
[143.14131165 -196.86117554]
[143.82255554 -213.56910706]
[154.20814514 -226.46249390]
[170.06671143 -230.60279846]
[175.07145691 -244.74325562]
[180.07620239 -258.88369751]
[185.08093262 -273.02416992]
[190.08567810 -287.16461182]
[195.09042358 -301.30508423]
[200.09516907 -315.44552612]
[205.09991455 -329.58599854]
[210.10466003 -343.72644043]
[209.68951416 -360.67532349]
[225.86108398 -365.76614380]
[235.22970581 -351.63586426]
[224.24511719 -338.72171021]
[219.24037170 -324.58123779]
[214.23562622 -310.44079590]
[209.23088074 -296.30032349]
[204.22613525 -282.15988159]
[199.22138977 -268.01940918]
[194.21665955 -253.87896729]
[189.21191406 -239.73851013]
[184.20716858 -225.59805298]
[192.77400208 -215.31811523]
[195.14767456 -202.03854370]
[190.60003662 -189.22302246]
[180.22254944 -180.26829529]
[166.66654968 -177.60398865]
[161.37986755 -163.56649780]
[156.09318542 -149.52900696]
[159.89768982 -132.42181396]
[145.62860107 -120.82349396]
[140.62385559 -106.68303680]
[135.61911011 -92.54257965]
[130.61436462 -78.40212250]
[125.75134277 -64.21229553]
[121.03053284 -49.97453308]
[116.30972290 -35.73676682]
[111.58891296 -21.49900246]
[106.86810303 -7.26123810]
[102.14729309 6.97652721]
[97.42648315 21.21429253]
[92.70567322 35.45205688]
[87.98486328 49.68982315]
[83.26405334 63.92758942]
[116.95755005 69.33132935]
[130.08232117 96.18262482]
[117.59228516 118.60104370]
[124.25463867 132.04026794]
[130.91699219 145.47950745]
[137.57936096 158.91874695]
[144.24171448 172.35797119]
[150.90406799 185.79721069]
[157.56642151 199.23643494]
[165.28199768 212.09996033]
[174.00135803 224.30538940]
[182.72071838 236.51083374]
[191.44009399 248.71626282]
[200.15945435 260.92169189]
[208.87881470 273.12713623]
[217.71986389 285.24472046]
[226.68170166 297.27325439]
[235.64353943 309.30178833]
[251.26440430 310.02453613]
[262.73101807 320.65710449]
[264.62918091 336.17904663]
[256.06265259 349.26141357]
[241.07626343 353.72711182]
[226.74615479 347.46755981]
[219.83854675 333.43835449]
[223.61500549 318.26361084]
[214.65316772 306.23507690]
[205.69132996 294.20657349]
[199.13644409 290.70208740]
[196.67338562 281.84649658]
[187.95402527 269.64105225]
[179.23464966 257.43563843]
[170.51528931 245.23019409]
[161.79591370 233.02476501]
[153.07655334 220.81932068]
[151.14349365 235.69424438]
[140.94924927 246.69775391]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 128]
[7 127]
[8 126]
[9 125]
[10 124]
[11 123]
[12 122]
[15 32]
[16 31]
[17 30]
[18 29]
[19 28]
[20 27]
[37 53]
[38 52]
[39 51]
[40 50]
[41 49]
[42 48]
[54 119]
[55 118]
[56 117]
[57 116]
[58 115]
[59 114]
[60 113]
[61 112]
[62 111]
[63 110]
[65 109]
[66 108]
[67 107]
[68 106]
[71 104]
[72 103]
[73 102]
[77 97]
[78 96]
[79 95]
[80 94]
[81 93]
[82 92]
[83 91]
[84 90]
[85 89]
[129 154]
[130 153]
[131 152]
[132 151]
[133 150]
[134 149]
[135 147]
[136 146]
[137 145]
] def

init

% Start Annotations
6 128 0.0 1 colorpair
7 127 0.0 1 colorpair
8 126 0.0 1 colorpair
9 125 0.0 1 colorpair
10 124 0.0 1 colorpair
11 123 0.0 1 colorpair
12 122 0.16 1 colorpair
15 32 0.0 1 colorpair
16 31 0.0 1 colorpair
17 30 0.0 1 colorpair
18 29 0.0 1 colorpair
19 28 0.0 1 colorpair
20 27 0.0 1 colorpair
37 53 0.0 1 colorpair
38 52 0.0 1 colorpair
39 51 0.0 1 colorpair
40 50 0.0 1 colorpair
41 49 0.0 1 colorpair
42 48 0.0 1 colorpair
54 119 0.0 0.6 colorpair
55 118 0.0 1 colorpair
56 117 0.16 1 colorpair
57 116 0.0 1 colorpair
58 115 0.0 1 colorpair
59 114 0.16 1 colorpair
60 113 0.0 1 colorpair
61 112 0.0 1 colorpair
62 111 0.0 1 colorpair
63 110 0.0 1 colorpair
65 109 0.0 1 colorpair
66 108 0.0 1 colorpair
67 107 0.0 1 colorpair
68 106 0.0 1 colorpair
71 104 0.0 1 colorpair
72 103 0.0 0.6 colorpair
73 102 0.0 1 colorpair
77 97 0.0 1 colorpair
78 96 0.16 1 colorpair
79 95 0.0 1 colorpair
80 94 0.0 0.6 colorpair
81 93 0.0 1 colorpair
82 92 0.0 1 colorpair
83 91 0.0 1 colorpair
84 90 0.0 1 colorpair
85 89 0.0 1 colorpair
129 154 0.0 1 colorpair
130 153 0.0 1 colorpair
131 152 0.0 1 colorpair
132 151 0.0 1 colorpair
133 150 0.0 1 colorpair
134 149 0.0 1 colorpair
135 147 0.0 1 colorpair
136 146 0.0 1 colorpair
137 145 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
12 cmark
54 119 1 gmark
117 cmark
114 cmark
72 103 1 gmark
96 cmark
80 94 1 gmark

% End Annotations
showpage
end
%%EOF
