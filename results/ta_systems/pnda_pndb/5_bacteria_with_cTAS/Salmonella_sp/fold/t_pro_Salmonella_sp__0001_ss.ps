%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 16:10:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCUAUGAUGCCACAGCGAACGUUUUUAAUGAUGUUAAUCGUCGUCUGUGUGACGAUUCUGUGUUUUGUCUGGAUAGUGAGGGAUUCGCUUUGCGGAUUCCGGCUCCAGCAGGGAAACACAGUGCUUGUGGCAACGUUAGCCUACGAAGUUAAACGUU\
) } def
/len { sequence length } bind def

/coor [
[177.63426208 379.71487427]
[178.95980835 374.56143188]
[174.91285706 360.11767578]
[170.86590576 345.67391968]
[166.81895447 331.23016357]
[162.77200317 316.78637695]
[158.72505188 302.34262085]
[154.53736877 287.93905640]
[150.20936584 273.57699585]
[139.12889099 263.62350464]
[142.55529785 248.17776489]
[138.22729492 233.81571960]
[133.89929199 219.45367432]
[129.57128906 205.09162903]
[125.24328613 190.72958374]
[120.91528320 176.36753845]
[116.58728027 162.00549316]
[112.11936188 147.68635559]
[107.51194763 133.41148376]
[102.90454102 119.13662720]
[89.20532990 113.02666473]
[75.50611877 119.13662720]
[61.80690765 125.24658966]
[48.10770035 131.35655212]
[34.40848923 137.46650696]
[20.70927811 143.57647705]
[15.28987980 158.42253113]
[0.92499667 165.01235962]
[-13.86294270 159.43629456]
[-20.30051613 145.00254822]
[-14.56842422 130.27438354]
[-0.06741698 123.98977661]
[14.59931564 129.87725830]
[28.29852676 123.76729584]
[41.99773788 117.65734100]
[55.69694901 111.54737854]
[69.39615631 105.43741608]
[83.09536743 99.32745361]
[82.65638733 84.33387756]
[68.62317657 79.03586578]
[54.58996582 73.73784637]
[40.55675507 68.43983459]
[26.52354240 63.14181519]
[12.49033070 57.84379959]
[-1.54288113 52.54578400]
[-15.57609272 47.24776840]
[-29.87325287 53.98325729]
[-44.71710587 48.55780029]
[-51.30105591 34.19022751]
[-45.71896744 19.40456581]
[-31.28258705 12.97288513]
[-16.55676842 18.71098709]
[-10.27807713 33.21455765]
[3.75513434 38.51257324]
[17.78834534 43.81058884]
[31.82155800 49.10860443]
[45.85477066 54.40662003]
[59.88798141 59.70463562]
[73.92119598 65.00264740]
[87.95440674 70.30066681]
[101.93525696 64.86598969]
[108.70597076 51.48101807]
[115.47667694 38.09604645]
[122.24739075 24.71107292]
[129.01809692 11.32609940]
[135.78880310 -2.05887318]
[142.55950928 -15.44384575]
[149.33023071 -28.82881927]
[156.10093689 -42.21379089]
[155.42582703 -58.02058792]
[168.07490540 -65.88506317]
[174.58316040 -79.39959717]
[180.82649231 -93.03854370]
[187.06980896 -106.67749786]
[193.31314087 -120.31644440]
[199.55645752 -133.95538330]
[199.31173706 -140.64418030]
[202.09431458 -145.67236328]
[206.31869507 -147.99731445]
[213.08940125 -161.38227844]
[209.81486511 -173.89198303]
[215.76942444 -184.91632080]
[227.26568604 -188.78012085]
[234.29627991 -202.03044128]
[241.32685852 -215.28076172]
[248.35745239 -228.53106689]
[255.38803101 -241.78138733]
[262.41860962 -255.03170776]
[269.44918823 -268.28201294]
[276.47979736 -281.53234863]
[283.51037598 -294.78265381]
[285.59320068 -311.60818481]
[302.33776855 -314.26449585]
[309.52563477 -298.90966797]
[296.76068115 -287.75207520]
[289.73010254 -274.50173950]
[282.69952393 -261.25143433]
[275.66894531 -248.00111389]
[268.63833618 -234.75080872]
[261.60775757 -221.50048828]
[254.57717896 -208.25016785]
[247.54660034 -194.99986267]
[240.51600647 -181.74954224]
[242.10954285 -164.29467773]
[226.47438049 -154.61157227]
[219.70367432 -141.22659302]
[213.19541931 -127.71206665]
[206.95208740 -114.07312012]
[200.70875549 -100.43416595]
[194.46543884 -86.79521942]
[188.22210693 -73.15627289]
[189.03825378 -68.40393829]
[186.84196472 -63.09341431]
[181.45988464 -59.11435699]
[182.61927795 -44.26494217]
[169.48590088 -35.44308090]
[162.71519470 -22.05810928]
[155.94448853 -8.67313671]
[149.17378235 4.71183634]
[142.40307617 18.09680939]
[135.63235474 31.48178101]
[128.86164856 44.86675262]
[122.09094238 58.25172806]
[115.32022858 71.63669586]
[117.17940521 114.52921295]
[121.78681946 128.80407715]
[126.39422607 143.07894897]
[132.03588867 150.32859802]
[130.94932556 157.67749023]
[135.27732849 172.03953552]
[139.60533142 186.40158081]
[143.93333435 200.76362610]
[148.26133728 215.12567139]
[152.58934021 229.48771667]
[156.91735840 243.84976196]
[168.30740356 254.83055115]
[164.57141113 269.24899292]
[168.89941406 283.61105347]
[174.39854431 290.96939087]
[173.16880798 298.29568481]
[177.21575928 312.73944092]
[181.26271057 327.18319702]
[185.30966187 341.62695312]
[189.35661316 356.07070923]
[193.40356445 370.51446533]
[197.87147522 384.83361816]
[202.75654602 399.01586914]
[207.64160156 413.19812012]
[222.51994324 417.60430908]
[231.94015503 429.93472290]
[232.27996826 445.44808960]
[223.40872192 458.17916870]
[208.73757935 463.23260498]
[193.90791321 458.66528320]
[184.62202454 446.23339844]
[184.45051575 430.71728516]
[193.45935059 418.08316040]
[188.57429504 403.90090942]
[183.68923950 389.71868896]
[180.64518738 387.84646606]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 145]
[3 144]
[4 143]
[5 142]
[6 141]
[7 140]
[8 138]
[9 137]
[11 135]
[12 134]
[13 133]
[14 132]
[15 131]
[16 130]
[17 129]
[18 127]
[19 126]
[20 125]
[21 38]
[22 37]
[23 36]
[24 35]
[25 34]
[26 33]
[39 60]
[40 59]
[41 58]
[42 57]
[43 56]
[44 55]
[45 54]
[46 53]
[61 124]
[62 123]
[63 122]
[64 121]
[65 120]
[66 119]
[67 118]
[68 117]
[69 116]
[71 114]
[72 111]
[73 110]
[74 109]
[75 108]
[76 107]
[79 106]
[80 105]
[83 103]
[84 102]
[85 101]
[86 100]
[87 99]
[88 98]
[89 97]
[90 96]
[91 95]
[146 159]
[147 158]
[148 157]
] def

init

% Start Annotations
2 145 0.0 1 colorpair
3 144 0.0 1 colorpair
4 143 0.0 1 colorpair
5 142 0.0 1 colorpair
6 141 0.0 1 colorpair
7 140 0.0 1 colorpair
8 138 0.0 1 colorpair
9 137 0.0 1 colorpair
11 135 0.0 1 colorpair
12 134 0.0 1 colorpair
13 133 0.0 1 colorpair
14 132 0.0 1 colorpair
15 131 0.0 1 colorpair
16 130 0.0 1 colorpair
17 129 0.0 1 colorpair
18 127 0.0 1 colorpair
19 126 0.0 1 colorpair
20 125 0.0 1 colorpair
21 38 0.0 1 colorpair
22 37 0.0 1 colorpair
23 36 0.0 1 colorpair
24 35 0.0 1 colorpair
25 34 0.0 1 colorpair
26 33 0.0 1 colorpair
39 60 0.0 1 colorpair
40 59 0.0 1 colorpair
41 58 0.0 1 colorpair
42 57 0.0 1 colorpair
43 56 0.0 1 colorpair
44 55 0.0 1 colorpair
45 54 0.0 1 colorpair
46 53 0.0 1 colorpair
61 124 0.0 1 colorpair
62 123 0.0 1 colorpair
63 122 0.0 1 colorpair
64 121 0.0 1 colorpair
65 120 0.0 1 colorpair
66 119 0.0 1 colorpair
67 118 0.0 1 colorpair
68 117 0.0 1 colorpair
69 116 0.0 1 colorpair
71 114 0.0 1 colorpair
72 111 0.0 1 colorpair
73 110 0.0 1 colorpair
74 109 0.0 1 colorpair
75 108 0.0 1 colorpair
76 107 0.0 1 colorpair
79 106 0.0 1 colorpair
80 105 0.0 1 colorpair
83 103 0.0 1 colorpair
84 102 0.0 1 colorpair
85 101 0.0 1 colorpair
86 100 0.0 1 colorpair
87 99 0.0 1 colorpair
88 98 0.0 1 colorpair
89 97 0.0 1 colorpair
90 96 0.0 1 colorpair
91 95 0.0 1 colorpair
146 159 0.0 1 colorpair
147 158 0.0 1 colorpair
148 157 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
