%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Dec 22 22:33:51 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAUGCCACAGCGAACGUUUUUAAUGAUGUUAAUCGUCGUCU______GUGUGACGAUUCUGUGUUUUGUCUGGAUGGUGAGGGAUUCGCUUUGCGGAUUCCGGCUCCAGCAGGGAAACACAGUGCUUGUGGCAACGUUAGCCUACGAAGUUAAACGUUAA\
) } def
/len { sequence length } bind def

/coor [
[113.47043610 251.17643738]
[106.01187897 238.16221619]
[107.47920990 223.23416138]
[117.32896423 211.92123413]
[131.91305542 208.41345215]
[145.83082581 214.01078796]
[139.39709473 200.46061707]
[132.96334839 186.91044617]
[126.52961731 173.36027527]
[120.09587860 159.81011963]
[113.66213989 146.25994873]
[107.22840881 132.70977783]
[97.26645660 133.38723755]
[87.54737091 131.09841919]
[78.93462372 126.04667664]
[67.13030243 135.30183411]
[55.32598114 144.55699158]
[43.52165604 153.81214905]
[31.71733475 163.06730652]
[19.91301155 172.32247925]
[18.26288605 188.04037476]
[5.92941809 197.92274475]
[-9.77016544 196.10653687]
[-19.52157974 183.66926575]
[-17.53948212 167.98976135]
[-4.99981785 158.37039185]
[10.65785313 160.51814270]
[22.46217537 151.26298523]
[34.26649857 142.00782776]
[46.07081985 132.75267029]
[57.87514496 123.49751282]
[69.67946625 114.24235535]
[67.32054138 107.36426544]
[66.50134277 100.13920593]
[51.86828995 96.84166718]
[37.23523712 93.54412842]
[22.60218239 90.24658966]
[7.96912909 86.94905853]
[-6.66392469 83.65151978]
[-21.29697800 80.35398102]
[-30.74006271 92.34526825]
[-44.45458221 99.04412842]
[-59.71750641 99.12049866]
[-73.49837494 92.55921936]
[-83.06098175 80.66303253]
[-86.50667572 65.79393768]
[-83.15129089 50.90420151]
[-73.66106415 38.95019531]
[-59.92026901 32.30539703]
[-44.65716171 32.28913116]
[-30.90223694 38.90462875]
[-21.38654709 50.83838272]
[-17.99944115 65.72093201]
[-3.36638832 69.01847076]
[11.26666546 72.31600189]
[25.89971924 75.61354065]
[40.53277206 78.91107941]
[55.16582489 82.20861053]
[69.79888153 85.50614929]
[85.05123901 70.02143860]
[106.59666443 67.15699005]
[112.76806641 53.48534393]
[118.93946075 39.81370163]
[125.11086273 26.14205742]
[131.28225708 12.47041321]
[137.45365906 -1.20123100]
[143.62506104 -14.87287521]
[149.79644775 -28.54451942]
[155.96784973 -42.21616364]
[156.65498352 -51.37390900]
[162.39218140 -56.09003830]
[168.82592773 -69.64020538]
[175.25965881 -83.19037628]
[181.69340515 -96.74053955]
[170.74246216 -107.15853119]
[163.55754089 -120.43329620]
[160.83117676 -135.25878906]
[162.81800842 -150.18083191]
[169.31098938 -163.73974609]
[179.66288757 -174.61306763]
[192.85078430 -181.74462891]
[207.57719421 -184.44708252]
[222.39761353 -182.46813965]
[228.83134460 -196.01831055]
[235.26507568 -209.56848145]
[234.19474792 -225.35343933]
[246.64312744 -233.53190613]
[253.07685852 -247.08206177]
[259.51058960 -260.63223267]
[265.94433594 -274.18240356]
[272.37808228 -287.73257446]
[273.70980835 -304.63412476]
[290.31948853 -308.03326416]
[298.18380737 -293.01364136]
[285.92822266 -281.29882812]
[279.49450684 -267.74865723]
[273.06076050 -254.19850159]
[266.62701416 -240.64833069]
[260.19329834 -227.09815979]
[261.72381592 -212.28240967]
[248.81524658 -203.13475037]
[242.38151550 -189.58457947]
[235.94776917 -176.03440857]
[246.84872437 -165.80061340]
[254.06254578 -152.68075562]
[256.87176514 -137.95362854]
[254.98887634 -123.05913544]
[248.58581543 -109.45754242]
[238.27825928 -98.48624420]
[225.06649780 -91.22830963]
[210.23832703 -88.40556335]
[195.24356079 -90.30680084]
[188.80982971 -76.75663757]
[182.37609863 -63.20647049]
[175.94235229 -49.65630341]
[169.63949585 -36.04476547]
[163.46809387 -22.37312126]
[157.29669189 -8.70147705]
[151.12530518 4.97016668]
[144.95390320 18.64181137]
[138.78250122 32.31345367]
[132.61111450 45.98509979]
[126.43971252 59.65674210]
[120.26831055 73.32838440]
[129.93746948 84.96913147]
[133.49739075 99.67718506]
[130.22160339 114.45111084]
[120.77857208 126.27603912]
[127.21231079 139.82620239]
[133.64604187 153.37637329]
[140.07978821 166.92654419]
[146.51351929 180.47671509]
[152.94725037 194.02687073]
[159.38099670 207.57704163]
[166.83923340 220.59144592]
[175.27764893 232.99278259]
[183.71606445 245.39411926]
[192.15449524 257.79544067]
[200.59291077 270.19677734]
[209.03134155 282.59811401]
[217.58888245 294.91754150]
[226.26473999 307.15393066]
[234.94059753 319.39035034]
[250.54010010 320.48107910]
[261.75292969 331.38088989]
[263.28472900 346.94326782]
[254.41224670 359.82012939]
[239.32478333 363.93136597]
[225.14617920 357.33584595]
[218.57113647 343.14770508]
[222.70419312 328.06619263]
[214.02833557 315.82980347]
[205.35247803 303.59341431]
[198.88739014 299.93826294]
[196.63000488 291.03652954]
[188.19158936 278.63519287]
[179.75315857 266.23385620]
[171.31474304 253.83253479]
[162.87631226 241.43119812]
[154.43789673 229.02987671]
[152.23159790 243.86672974]
[141.83259583 254.67694092]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 134]
[7 133]
[8 132]
[9 131]
[10 130]
[11 129]
[12 128]
[15 32]
[16 31]
[17 30]
[18 29]
[19 28]
[20 27]
[34 59]
[35 58]
[36 57]
[37 56]
[38 55]
[39 54]
[40 53]
[61 124]
[62 123]
[63 122]
[64 121]
[65 120]
[66 119]
[67 118]
[68 117]
[69 116]
[71 115]
[72 114]
[73 113]
[74 112]
[83 103]
[84 102]
[85 101]
[87 99]
[88 98]
[89 97]
[90 96]
[91 95]
[135 160]
[136 159]
[137 158]
[138 157]
[139 156]
[140 155]
[141 153]
[142 152]
[143 151]
] def

init

% Start Annotations
6 134 0.0 0.6 colorpair
7 133 0.0 0.6 colorpair
8 132 0.0 0.6 colorpair
9 131 0.0 0.6 colorpair
10 130 0.0 0.6 colorpair
11 129 0.0 0.6 colorpair
12 128 0.16 0.6 colorpair
15 32 0.0 0.6 colorpair
16 31 0.0 0.6 colorpair
17 30 0.0 0.6 colorpair
18 29 0.16 0.6 colorpair
19 28 0.0 0.6 colorpair
20 27 0.16 0.6 colorpair
34 59 0.0 0.6 colorpair
35 58 0.0 0.6 colorpair
36 57 0.16 0.6 colorpair
37 56 0.0 0.6 colorpair
38 55 0.0 0.6 colorpair
39 54 0.0 0.6 colorpair
40 53 0.16 0.6 colorpair
61 124 0.0 1 colorpair
62 123 0.16 1 colorpair
63 122 0.0 1 colorpair
64 121 0.0 1 colorpair
65 120 0.16 1 colorpair
66 119 0.0 1 colorpair
67 118 0.16 1 colorpair
68 117 0.0 1 colorpair
69 116 0.0 1 colorpair
71 115 0.0 1 colorpair
72 114 0.0 0.6 colorpair
73 113 0.0 1 colorpair
74 112 0.0 1 colorpair
83 103 0.0 0.6 colorpair
84 102 0.16 1 colorpair
85 101 0.0 1 colorpair
87 99 0.16 1 colorpair
88 98 0.0 0.6 colorpair
89 97 0.0 1 colorpair
90 96 0.0 1 colorpair
91 95 0.16 1 colorpair
135 160 0.0 1 colorpair
136 159 0.0 1 colorpair
137 158 0.0 1 colorpair
138 157 0.0 1 colorpair
139 156 0.0 1 colorpair
140 155 0.0 1 colorpair
141 153 0.0 1 colorpair
142 152 0.0 1 colorpair
143 151 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
6 134 1 gmark
7 133 1 gmark
8 132 1 gmark
9 131 1 gmark
10 130 1 gmark
11 129 1 gmark
12 128 1 gmark
12 cmark
15 32 1 gmark
16 31 1 gmark
17 30 1 gmark
18 29 1 gmark
18 cmark
19 28 1 gmark
20 27 1 gmark
27 cmark
34 59 1 gmark
35 58 1 gmark
36 57 1 gmark
36 cmark
37 56 1 gmark
38 55 1 gmark
39 54 1 gmark
40 53 1 gmark
40 cmark
123 cmark
120 cmark
118 cmark
72 114 1 gmark
83 103 1 gmark
102 cmark
99 cmark
88 98 1 gmark
91 cmark

% End Annotations
showpage
end
%%EOF
