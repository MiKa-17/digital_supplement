%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Dec 22 23:41:11 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___________AUGC___C___G___CAA_AAAUCUGUGCUUUUGGCCCUGAUCGUCAUC______UGUUUCACGGUGUUGGUAUUCACAUUGAUGAUGCGGGACUCGCUGUGUGAGCUGCGUAUCAGAGAGGGAAAUAC______GGAGGUU_GCGGCCUUUUUGGCUUACGAAUCC_A___AG_AAG_______________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50592041 92.03805542]
[62.53318405 91.11458588]
[47.59598160 89.73046875]
[32.70848846 87.88701630]
[17.88482666 85.58597565]
[3.13905668 82.82952881]
[-11.51483536 79.62029266]
[-26.06295013 75.96131897]
[-40.49148560 71.85606384]
[-54.78675461 67.30842590]
[-68.93520355 62.32272339]
[-82.92340088 56.90368271]
[-96.73809052 51.05644608]
[-110.36615753 44.78655624]
[-123.79467773 38.09996414]
[-137.01092529 31.00300980]
[-150.00233459 23.50242805]
[-162.75662231 15.60533142]
[-175.26165771 7.31921053]
[-187.50558472 -1.34807312]
[-199.47680664 -10.38829899]
[-211.16395569 -19.79289246]
[-222.55593872 -29.55293083]
[-233.64196777 -39.65915680]
[-244.41151428 -50.10198593]
[-254.85435486 -60.87150955]
[-264.96060181 -71.95751953]
[-274.72067261 -83.34948730]
[-284.12527466 -95.03661346]
[-293.16552734 -107.00781250]
[-301.83282471 -119.25173187]
[-310.11898804 -131.75675964]
[-318.01608276 -144.51101685]
[-325.51669312 -157.50242615]
[-332.61367798 -170.71865845]
[-339.30029297 -184.14717102]
[-345.57022095 -197.77522278]
[-351.41748047 -211.58988953]
[-356.83654785 -225.57809448]
[-361.82226562 -239.72651672]
[-366.36993408 -254.02178955]
[-370.47521973 -268.45031738]
[-374.13421631 -282.99841309]
[-377.34347534 -297.65231323]
[-380.09994507 -312.39807129]
[-382.40103149 -327.22174072]
[-384.24450684 -342.10922241]
[-385.62863159 -357.04641724]
[-386.55215454 -372.01916504]
[-387.01409912 -387.01324463]
[-387.01412964 -402.01443481]
[-386.55215454 -417.00851440]
[-385.62869263 -431.98123169]
[-384.24456787 -446.91842651]
[-382.40109253 -461.80593872]
[-380.10003662 -476.62957764]
[-377.34359741 -491.37536621]
[-374.13436890 -506.02926636]
[-370.47537231 -520.57739258]
[-366.37008667 -535.00592041]
[-361.82244873 -549.30114746]
[-356.83673096 -563.44958496]
[-351.41769409 -577.43780518]
[-345.57046509 -591.25250244]
[-339.30056763 -604.88055420]
[-332.61395264 -618.30908203]
[-325.51699829 -631.52532959]
[-318.01638794 -644.51672363]
[-310.11929321 -657.27099609]
[-301.83316040 -669.77600098]
[-293.16586304 -682.01995850]
[-284.12564087 -693.99114990]
[-274.72103882 -705.67828369]
[-264.96099854 -717.07031250]
[-254.85476685 -728.15631104]
[-244.41192627 -738.92584229]
[-233.64239502 -749.36871338]
[-222.55638123 -759.47491455]
[-211.16441345 -769.23498535]
[-199.47727966 -778.63958740]
[-187.50607300 -787.67980957]
[-175.26214600 -796.34710693]
[-162.75712585 -804.63323975]
[-150.00285339 -812.53039551]
[-137.01144409 -820.03094482]
[-123.79520416 -827.12792969]
[-110.36669159 -833.81457520]
[-96.73863220 -840.08447266]
[-82.92395020 -845.93170166]
[-68.93576050 -851.35076904]
[-54.78731918 -856.33648682]
[-40.49205399 -860.88415527]
[-26.06352425 -864.98944092]
[-11.51541615 -868.64843750]
[3.13847280 -871.85766602]
[17.88424110 -874.61413574]
[32.70790100 -876.91516113]
[47.59539032 -878.75866699]
[62.53258896 -880.14282227]
[77.50532532 -881.06628418]
[92.49940491 -881.52825928]
[107.50059509 -881.52825928]
[122.49467468 -881.06628418]
[137.46740723 -880.14282227]
[152.40461731 -878.75866699]
[167.29209900 -876.91516113]
[182.11575317 -874.61413574]
[196.86152649 -871.85766602]
[211.51541138 -868.64843750]
[226.06352234 -864.98944092]
[240.49205017 -860.88415527]
[254.78732300 -856.33648682]
[268.93576050 -851.35076904]
[282.92395020 -845.93170166]
[296.73864746 -840.08447266]
[310.36669922 -833.81457520]
[323.79519653 -827.12792969]
[337.01144409 -820.03094482]
[350.00283813 -812.53039551]
[362.75711060 -804.63323975]
[375.26214600 -796.34710693]
[387.50607300 -787.67980957]
[399.47726440 -778.63958740]
[411.16439819 -769.23498535]
[422.55639648 -759.47491455]
[433.64239502 -749.36871338]
[444.41192627 -738.92584229]
[454.85476685 -728.15631104]
[464.96099854 -717.07031250]
[474.72103882 -705.67828369]
[484.12564087 -693.99114990]
[493.16586304 -682.01995850]
[501.83316040 -669.77600098]
[510.11929321 -657.27099609]
[518.01641846 -644.51672363]
[525.51696777 -631.52532959]
[532.61395264 -618.30908203]
[539.30053711 -604.88055420]
[545.57043457 -591.25250244]
[551.41772461 -577.43780518]
[556.83673096 -563.44958496]
[561.82244873 -549.30114746]
[566.37011719 -535.00592041]
[570.47534180 -520.57739258]
[574.13433838 -506.02926636]
[577.34356689 -491.37536621]
[580.10003662 -476.62957764]
[582.40112305 -461.80593872]
[584.24456787 -446.91842651]
[585.62866211 -431.98123169]
[586.55218506 -417.00851440]
[587.01409912 -402.01443481]
[587.01409912 -387.01324463]
[586.55212402 -372.01916504]
[585.62866211 -357.04641724]
[584.24450684 -342.10922241]
[582.40100098 -327.22174072]
[580.09997559 -312.39807129]
[577.34350586 -297.65231323]
[574.13421631 -282.99841309]
[570.47521973 -268.45031738]
[566.36993408 -254.02178955]
[561.82226562 -239.72651672]
[556.83654785 -225.57809448]
[551.41748047 -211.58988953]
[545.57019043 -197.77522278]
[539.30029297 -184.14717102]
[532.61370850 -170.71865845]
[525.51672363 -157.50242615]
[518.01611328 -144.51101685]
[510.11898804 -131.75675964]
[501.83282471 -119.25173187]
[493.16552734 -107.00781250]
[484.12527466 -95.03661346]
[474.72067261 -83.34948730]
[464.96060181 -71.95751953]
[454.85437012 -60.87150955]
[444.41149902 -50.10198593]
[433.64196777 -39.65915680]
[422.55593872 -29.55293083]
[411.16394043 -19.79289246]
[399.47680664 -10.38829899]
[387.50558472 -1.34807312]
[375.26165771 7.31921053]
[362.75662231 15.60533142]
[350.00234985 23.50242805]
[337.01092529 31.00300980]
[323.79467773 38.09996414]
[310.36614990 44.78655624]
[296.73809814 51.05644608]
[282.92340088 56.90368271]
[268.93521118 62.32272339]
[254.78675842 67.30842590]
[240.49148560 71.85606384]
[226.06294250 75.96131897]
[211.51483154 79.62029266]
[196.86094666 82.82952881]
[182.11517334 85.58597565]
[167.29150391 87.88701630]
[152.40402222 89.73046875]
[137.46681213 91.11458588]
[122.49407959 92.03805542]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
