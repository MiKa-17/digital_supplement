%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Dec 22 22:33:57 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAUGCCGC___AA______AAA_ACUCUGUUGUUAAGUUUAAUAGUGA__UUU______GUGUCACGAUUUUAUUAUUCACCUGGAUGGUGCGUGAUUCGCUGUGUGAAUUGCAU_AUCAGACAGGGAAAUACAGAGCUGGCGGCAAUGUUAGCCUACGAAGUUAAACGG\
) } def
/len { sequence length } bind def

/coor [
[128.53860474 440.50503540]
[114.62911987 441.38558960]
[100.69529724 441.69818115]
[86.76032257 441.44229126]
[72.84736633 440.61834717]
[58.97959137 439.22772217]
[45.18005753 437.27273560]
[31.47172737 434.75662231]
[17.87740898 431.68359375]
[4.41971445 428.05874634]
[-8.87896347 423.88809204]
[-21.99650002 419.17858887]
[-34.91107178 413.93811035]
[-47.60119629 408.17529297]
[-60.04575729 401.89978027]
[-72.22405243 395.12200928]
[-84.11582184 387.85324097]
[-95.70127869 380.10559082]
[-106.96114349 371.89190674]
[-117.87669373 363.22589111]
[-128.42976379 354.12194824]
[-138.60281372 344.59521484]
[-148.37887573 334.66159058]
[-157.74172974 324.33752441]
[-166.67578125 313.64022827]
[-175.16616821 302.58752441]
[-183.19876099 291.19778442]
[-190.76019287 279.48992920]
[-197.83790588 267.48345947]
[-204.42010498 255.19834900]
[-210.49583435 242.65504456]
[-216.05500793 229.87440491]
[-221.08834839 216.87770081]
[-225.58750916 203.68653870]
[-229.54499817 190.32287598]
[-232.95422363 176.80894470]
[-235.80950928 163.16723633]
[-238.10612488 149.42042542]
[-239.84022522 135.59140015]
[-241.00894165 121.70315552]
[-241.61032104 107.77880859]
[-241.64338684 93.84152222]
[-241.10804749 79.91448212]
[-240.00520325 66.02085114]
[-238.33671570 52.18375778]
[-236.10533142 38.42621231]
[-233.31477356 24.77110863]
[-229.96968079 11.24116135]
[-226.07563782 -2.14111900]
[-221.63908386 -15.35346794]
[-216.66743469 -28.37390518]
[-211.16894531 -41.18076706]
[-205.15277100 -53.75275040]
[-198.62892151 -66.06893921]
[-191.60824585 -78.10883331]
[-184.10241699 -89.85241699]
[-176.12393188 -101.28014374]
[-167.68606567 -112.37300110]
[-158.80285645 -123.11254120]
[-149.48907471 -133.48088074]
[-139.76022339 -143.46080017]
[-129.63249207 -153.03565979]
[-119.12271881 -162.18954468]
[-108.24839020 -170.90724182]
[-97.02760315 -179.17422485]
[-85.47902679 -186.97674561]
[-73.62187195 -194.30183411]
[-61.47585678 -201.13729858]
[-49.06120300 -207.47175598]
[-36.39855576 -213.29469299]
[-23.50898170 -218.59638977]
[-10.41392899 -223.36804199]
[2.86481786 -227.60171509]
[16.30516815 -231.29035950]
[29.88475990 -234.42784119]
[43.58100128 -237.00894165]
[57.37110519 -239.02935791]
[71.23213196 -240.48573303]
[85.14102173 -241.37565613]
[99.07463074 -241.69763184]
[113.00977325 -241.45112610]
[126.92327881 -240.63655090]
[140.79199219 -239.25526428]
[154.59283447 -237.30957031]
[168.30285645 -234.80270386]
[181.89924622 -231.73881531]
[195.35937500 -228.12301636]
[208.66085815 -223.96133423]
[221.78155518 -219.26066589]
[234.69966125 -214.02886963]
[247.39366150 -208.27461243]
[259.84243774 -202.00747681]
[272.02529907 -195.23789978]
[283.92196655 -187.97714233]
[295.51263428 -180.23728943]
[306.77801514 -172.03120422]
[316.11514282 -183.77079773]
[325.45227051 -195.51039124]
[334.78939819 -207.24998474]
[333.19299316 -222.74479675]
[342.82940674 -234.51739502]
[357.61117554 -235.94384766]
[366.94830322 -247.68344116]
[372.07565308 -263.84347534]
[389.02355957 -263.39001465]
[393.27947998 -246.97894287]
[378.68789673 -238.34631348]
[369.35076904 -226.60671997]
[371.28753662 -211.88311768]
[361.98559570 -199.84448242]
[346.52899170 -197.91285706]
[337.19186401 -186.17326355]
[327.85473633 -174.43367004]
[318.51760864 -162.69407654]
[331.99575806 -150.87066650]
[344.83517456 -138.35659790]
[357.00051880 -125.18627930]
[368.45831299 -111.39598846]
[379.17697144 -97.02369690]
[389.12704468 -82.10897064]
[398.28109741 -66.69287109]
[406.61392212 -50.81783676]
[414.10263062 -34.52758026]
[420.72653198 -17.86694717]
[426.46743774 -0.88180953]
[431.30950928 16.38107109]
[435.23947144 33.87416840]
[438.24642944 51.54931641]
[440.32217407 69.35785675]
[441.46096802 87.25076294]
[441.65963745 105.17877197]
[440.91766357 123.09252167]
[439.23712158 140.94268799]
[436.62258911 158.68013000]
[433.08129883 176.25602722]
[428.62295532 193.62197876]
[423.25988770 210.73017883]
[417.00683594 227.53350830]
[409.88101196 243.98573303]
[401.90203857 260.04153442]
[393.09185791 275.65670776]
[383.47479248 290.78829956]
[373.07723999 305.39459229]
[361.92788696 319.43542480]
[350.05740356 332.87210083]
[360.80749512 343.33328247]
[371.55755615 353.79443359]
[387.09637451 352.03958130]
[400.09912109 360.72647095]
[404.42633057 375.75341797]
[398.03482056 390.02517700]
[383.94244385 396.80300903]
[368.80322266 392.88668823]
[359.76541138 380.12533569]
[361.09640503 364.54449463]
[350.34631348 354.08334351]
[339.59625244 343.62216187]
[329.46206665 353.19021606]
[318.94613647 362.33703613]
[308.06594849 371.04739380]
[296.83959961 379.30682373]
[285.28576660 387.10156250]
[273.42367554 394.41867065]
[261.27307129 401.24597168]
[248.85414124 407.57205200]
[236.18757629 413.38644409]
[223.29443359 418.67947388]
[210.19616699 423.44232178]
[196.91458130 427.66705322]
[183.47174072 431.34664917]
[169.89004517 434.47497559]
[156.19206238 437.04684448]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[96 114]
[97 113]
[98 112]
[99 111]
[102 108]
[103 107]
[145 157]
[146 156]
[147 155]
] def

init

% Start Annotations
97 113 0.16 0.6 colorpair
103 107 0.32 0.2 colorpair
145 157 0.32 0.6 colorpair
146 156 0.16 0.2 colorpair
147 155 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
96 114 24 gmark
96 cmark
114 cmark
97 113 1 gmark
97 cmark
98 112 30 gmark
98 cmark
112 cmark
99 111 5 gmark
99 cmark
111 cmark
102 108 4 gmark
102 cmark
108 cmark
103 107 2 gmark
103 cmark
107 cmark
145 157 1 gmark
145 cmark
157 cmark
146 156 2 gmark
156 cmark
147 cmark

% End Annotations
showpage
end
%%EOF
