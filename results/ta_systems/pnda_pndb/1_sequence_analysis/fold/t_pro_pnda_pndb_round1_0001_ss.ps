%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Dec 22 22:33:51 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___AUGCCGCAA___AAAACUCUGUUGUUAAGUUUAAUAGUGAUUU______GUGUCACGAUUUUAUUAUUCACCUGGAUGGUGCGUGAUUCGCUGUGUGAAUUGCAUAUCAGACAGGGAAAUACAGAGCUGGCGGCAAUGUUAGCCUACGAAGUUAAACGG\
) } def
/len { sequence length } bind def

/coor [
[125.89131927 416.96728516]
[112.01863861 417.79580688]
[98.12300110 418.01745605]
[84.23094940 417.63180542]
[70.36901093 416.63958740]
[56.56365967 415.04269409]
[42.84125137 412.84420776]
[29.22799873 410.04830933]
[15.74989414 406.66030884]
[2.43267679 402.68670654]
[-10.69822311 398.13507080]
[-23.61772919 393.01412964]
[-36.30117035 387.33361816]
[-48.72432709 381.10443115]
[-60.86347580 374.33840942]
[-72.69543457 367.04852295]
[-84.19760895 359.24865723]
[-95.34803009 350.95373535]
[-106.12540436 342.17956543]
[-116.50916290 332.94293213]
[-126.47946167 323.26144409]
[-136.01727295 313.15362549]
[-145.10437012 302.63876343]
[-153.72341919 291.73693848]
[-161.85794067 280.46896362]
[-169.49240112 268.85635376]
[-176.61224365 256.92129517]
[-183.20385742 244.68655396]
[-189.25463867 232.17553711]
[-194.75306702 219.41210938]
[-199.68861389 206.42063904]
[-204.05187988 193.22595215]
[-207.83450317 179.85324097]
[-211.02928162 166.32803345]
[-213.63011169 152.67616272]
[-215.63201904 138.92370605]
[-217.03117371 125.09691620]
[-217.82492065 111.22219849]
[-218.01174927 97.32604980]
[-217.59127808 83.43500519]
[-216.56433105 69.57559967]
[-214.93286133 55.77429199]
[-212.69998169 42.05743790]
[-209.86996460 28.45123482]
[-206.44821167 14.98166370]
[-202.44123840 1.67444539]
[-197.85673523 -11.44500732]
[-192.70341492 -24.35164070]
[-186.99114990 -37.02080536]
[-180.73083496 -49.42831421]
[-173.93441772 -61.55046844]
[-166.61489868 -73.36412048]
[-158.78623962 -84.84671021]
[-150.46339417 -95.97631073]
[-141.66224670 -106.73166656]
[-132.39961243 -117.09223938]
[-122.69319153 -127.03824615]
[-112.56150055 -136.55068970]
[-102.02389526 -145.61141968]
[-91.10049438 -154.20310974]
[-79.81217194 -162.30937195]
[-68.18046570 -169.91471863]
[-56.22759628 -177.00462341]
[-43.97639084 -183.56555176]
[-31.45024490 -189.58497620]
[-18.67307472 -195.05139160]
[-5.66928434 -199.95437622]
[7.53629684 -204.28454590]
[20.91844940 -208.03364563]
[34.45161819 -211.19451904]
[48.10996246 -213.76112366]
[61.86739731 -215.72856140]
[75.69765472 -217.09307861]
[89.57431030 -217.85205078]
[103.47088623 -218.00404358]
[117.36082458 -217.54876709]
[131.21762085 -216.48709106]
[145.01480103 -214.82104492]
[158.72601318 -212.55380249]
[172.32507324 -209.68969727]
[185.78604126 -206.23419189]
[199.08317566 -202.19389343]
[212.19108582 -197.57650757]
[225.08476257 -192.39086914]
[237.73957825 -186.64686584]
[250.13136292 -180.35548401]
[262.23645020 -173.52871704]
[270.19067383 -186.24603271]
[278.14492798 -198.96334839]
[286.09915161 -211.68066406]
[282.76623535 -226.89674377]
[291.01409912 -239.68060303]
[305.54086304 -242.76426697]
[313.49511719 -255.48158264]
[316.76809692 -272.11660767]
[333.65908813 -273.57653809]
[339.73785400 -257.74984741]
[326.21243286 -247.52735901]
[318.25817871 -234.81004333]
[321.84237671 -220.39860535]
[313.95678711 -207.38813782]
[298.81646729 -203.72642517]
[290.86224365 -191.00910950]
[282.90798950 -178.29179382]
[274.95376587 -165.57447815]
[289.60733032 -155.31878662]
[303.66113281 -144.25552368]
[317.07077026 -132.41966248]
[329.79382324 -119.84864044]
[341.79000854 -106.58223724]
[353.02139282 -92.66239929]
[363.45245361 -78.13316345]
[373.05023193 -63.04048538]
[381.78430176 -47.43210220]
[389.62710571 -31.35738564]
[396.55380249 -14.86717987]
[402.54248047 1.98635650]
[407.57418823 19.14991379]
[411.63305664 36.56920624]
[414.70617676 54.18912888]
[416.78390503 71.95395660]
[417.85961914 89.80749512]
[417.92993164 107.69326782]
[416.99459839 125.55471039]
[415.05661011 143.33532715]
[412.12210083 160.97886658]
[408.20031738 178.42951965]
[403.30368042 195.63211060]
[397.44769287 212.53221130]
[390.65084839 229.07635498]
[382.93466187 245.21223450]
[374.32354736 260.88879395]
[364.84475708 276.05645752]
[354.52822876 290.66726685]
[343.40661621 304.67495728]
[354.65637207 314.59680176]
[365.90612793 324.51864624]
[381.34027100 322.00451660]
[394.75308228 330.04385376]
[399.81140137 344.84072876]
[394.12689209 359.40850830]
[380.38354492 366.86871338]
[365.07061768 363.69891357]
[355.41836548 351.39575195]
[355.98428345 335.76840210]
[344.73452759 325.84655762]
[333.48477173 315.92471313]
[323.82830811 325.91925049]
[313.74441528 335.48236084]
[303.25234985 344.59579468]
[292.37216187 353.24212646]
[281.12460327 361.40484619]
[269.53115845 369.06838989]
[257.61398315 376.21813965]
[245.39581299 382.84036255]
[232.89999390 388.92251587]
[220.15039062 394.45288086]
[207.17132568 399.42098999]
[193.98762512 403.81729126]
[180.62442017 407.63342285]
[167.10726929 410.86209106]
[153.46195984 413.49710083]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[87 105]
[88 104]
[89 103]
[90 102]
[93 99]
[94 98]
[135 147]
[136 146]
[137 145]
] def

init

% Start Annotations
88 104 0.16 0.6 colorpair
94 98 0.32 0.2 colorpair
135 147 0.32 0.2 colorpair
136 146 0.16 0.2 colorpair
137 145 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
87 105 24 gmark
87 cmark
105 cmark
88 104 1 gmark
88 cmark
89 103 30 gmark
89 cmark
103 cmark
90 102 5 gmark
90 cmark
102 cmark
93 99 4 gmark
93 cmark
99 cmark
94 98 2 gmark
94 cmark
98 cmark
135 147 2 gmark
135 cmark
147 cmark
136 146 2 gmark
146 cmark
137 145 1 gmark

% End Annotations
showpage
end
%%EOF
