%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Dec 22 23:41:40 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__________________________________________G__A___G_GCCAAG_AA_U___GCU_________GCAAAAA_UAUGCCCUUAU______CG_________CCCUGAUCGUCAU______CUGUUU_CACGGUGUUGGUAUUC____ACAUUGAUGAUGCGGGACUCGCUGUGUGAGCUGCGU_AUCAGAGAGGGAAAUAC______GGAGGUUGC_GGCCAUUUUGGC___U_UACGAAUC_\
__G_AA_G___AAGUA__AGA_____ACCC_GGC_G__GG__________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50251770 92.19890594]
[62.51409912 91.59682465]
[47.54078674 90.69401550]
[32.58861160 89.49082947]
[17.66360283 87.98775482]
[2.77177048 86.18539429]
[-12.08088303 84.08448029]
[-26.88837242 81.68585968]
[-41.64473343 78.99049377]
[-56.34401703 75.99946594]
[-70.98030090 72.71398926]
[-85.54768372 69.13538361]
[-100.04030609 65.26509094]
[-114.45231628 61.10467529]
[-128.77790833 56.65580750]
[-143.01132202 51.92028046]
[-157.14680481 46.90000534]
[-171.17868042 41.59700394]
[-185.10127258 36.01341248]
[-198.90898132 30.15148354]
[-212.59625244 24.01357460]
[-226.15756226 17.60216331]
[-239.58743286 10.91983128]
[-252.88047791 3.96927094]
[-266.03131104 -3.24671674]
[-279.03466797 -10.72522354]
[-291.88528442 -18.46323586]
[-304.57797241 -26.45763779]
[-317.10766602 -34.70520401]
[-329.46926880 -43.20261383]
[-341.65780640 -51.94644547]
[-353.66839600 -60.93317032]
[-365.49615479 -70.15917206]
[-377.13635254 -79.62072754]
[-388.58425903 -89.31402588]
[-399.83532715 -99.23516083]
[-410.88497925 -109.38014221]
[-421.72872925 -119.74487305]
[-432.36227417 -130.32518005]
[-442.78131104 -141.11680603]
[-452.98162842 -152.11538696]
[-462.95910645 -163.31649780]
[-472.70974731 -174.71563721]
[-482.22961426 -186.30819702]
[-491.51483154 -198.08950806]
[-500.56173706 -210.05482483]
[-509.36663818 -222.19934082]
[-517.92596436 -234.51812744]
[-526.23632812 -247.00625610]
[-534.29431152 -259.65866089]
[-542.09674072 -272.47027588]
[-549.64044189 -285.43594360]
[-556.92230225 -298.55041504]
[-563.93951416 -311.80838013]
[-570.68914795 -325.20455933]
[-577.16857910 -338.73352051]
[-583.37506104 -352.38980103]
[-589.30627441 -366.16790771]
[-594.95965576 -380.06231689]
[-600.33300781 -394.06738281]
[-605.42413330 -408.17749023]
[-610.23107910 -422.38696289]
[-614.75177002 -436.69006348]
[-618.98449707 -451.08099365]
[-622.92742920 -465.55401611]
[-626.57916260 -480.10324097]
[-629.93804932 -494.72286987]
[-633.00280762 -509.40695190]
[-635.77221680 -524.14959717]
[-638.24511719 -538.94488525]
[-640.42053223 -553.78680420]
[-642.29760742 -568.66937256]
[-643.87554932 -583.58666992]
[-645.15380859 -598.53259277]
[-646.13171387 -613.50122070]
[-646.80902100 -628.48638916]
[-647.18542480 -643.48217773]
[-647.26068115 -658.48248291]
[-647.03485107 -673.48132324]
[-646.50799561 -688.47253418]
[-645.68035889 -703.45019531]
[-644.55218506 -718.40826416]
[-643.12402344 -733.34057617]
[-641.39642334 -748.24127197]
[-639.37011719 -763.10430908]
[-637.04583740 -777.92364502]
[-634.42449951 -792.69335938]
[-631.50732422 -807.40747070]
[-628.29534912 -822.06005859]
[-624.78985596 -836.64520264]
[-620.99237061 -851.15704346]
[-616.90429688 -865.58978271]
[-612.52740479 -879.93750000]
[-607.86334229 -894.19451904]
[-602.91406250 -908.35498047]
[-597.68157959 -922.41333008]
[-592.16790771 -936.36376953]
[-586.37536621 -950.20068359]
[-580.30621338 -963.91857910]
[-573.96295166 -977.51190186]
[-567.34808350 -990.97515869]
[-560.46429443 -1004.30291748]
[-553.31439209 -1017.48980713]
[-545.90124512 -1030.53051758]
[-538.22784424 -1043.41979980]
[-530.29724121 -1056.15246582]
[-522.11260986 -1068.72338867]
[-513.67736816 -1081.12744141]
[-504.99481201 -1093.35974121]
[-496.06848145 -1105.41528320]
[-486.90194702 -1117.28918457]
[-477.49893188 -1128.97668457]
[-467.86318970 -1140.47314453]
[-457.99862671 -1151.77380371]
[-447.90924072 -1162.87426758]
[-437.59906006 -1173.76989746]
[-427.07223511 -1184.45642090]
[-416.33303833 -1194.92944336]
[-405.38577271 -1205.18481445]
[-394.23489380 -1215.21838379]
[-382.88482666 -1225.02612305]
[-371.34017944 -1234.60400391]
[-359.60562134 -1243.94824219]
[-347.68585205 -1253.05505371]
[-335.58569336 -1261.92077637]
[-323.30999756 -1270.54187012]
[-310.86373901 -1278.91479492]
[-298.25189209 -1287.03625488]
[-285.47961426 -1294.90283203]
[-272.55197144 -1302.51147461]
[-259.47421265 -1309.85913086]
[-246.25161743 -1316.94274902]
[-232.88949585 -1323.75952148]
[-219.39321899 -1330.30676270]
[-205.76824951 -1336.58166504]
[-192.02008057 -1342.58190918]
[-178.15422058 -1348.30493164]
[-164.17628479 -1353.74853516]
[-150.09190369 -1358.91040039]
[-135.90673828 -1363.78857422]
[-121.62651825 -1368.38098145]
[-107.25699615 -1372.68591309]
[-92.80394745 -1376.70141602]
[-78.27321625 -1380.42614746]
[-63.67065048 -1383.85827637]
[-49.00212860 -1386.99670410]
[-34.27356339 -1389.84008789]
[-19.49089622 -1392.38720703]
[-4.66007805 -1394.63708496]
[10.21291351 -1396.58886719]
[25.12208557 -1398.24157715]
[40.06142807 -1399.59484863]
[55.02492523 -1400.64794922]
[70.00654602 -1401.40039062]
[85.00025177 -1401.85205078]
[100.00000000 -1402.00256348]
[114.99974823 -1401.85205078]
[129.99345398 -1401.40039062]
[144.97506714 -1400.64794922]
[159.93856812 -1399.59484863]
[174.87791443 -1398.24157715]
[189.78709412 -1396.58886719]
[204.66007996 -1394.63708496]
[219.49089050 -1392.38720703]
[234.27355957 -1389.84008789]
[249.00212097 -1386.99670410]
[263.67065430 -1383.85827637]
[278.27322388 -1380.42614746]
[292.80395508 -1376.70141602]
[307.25698853 -1372.68591309]
[321.62652588 -1368.38098145]
[335.90673828 -1363.78857422]
[350.09188843 -1358.91040039]
[364.17630005 -1353.74853516]
[378.15423584 -1348.30493164]
[392.02008057 -1342.58190918]
[405.76824951 -1336.58166504]
[419.39321899 -1330.30676270]
[432.88949585 -1323.75952148]
[446.25161743 -1316.94274902]
[459.47421265 -1309.85913086]
[472.55197144 -1302.51147461]
[485.47961426 -1294.90283203]
[498.25189209 -1287.03625488]
[510.86373901 -1278.91479492]
[523.30999756 -1270.54187012]
[535.58569336 -1261.92077637]
[547.68585205 -1253.05505371]
[559.60559082 -1243.94824219]
[571.34020996 -1234.60400391]
[582.88482666 -1225.02612305]
[594.23486328 -1215.21838379]
[605.38580322 -1205.18481445]
[616.33306885 -1194.92944336]
[627.07226562 -1184.45642090]
[637.59906006 -1173.76989746]
[647.90924072 -1162.87426758]
[657.99865723 -1151.77380371]
[667.86322021 -1140.47314453]
[677.49890137 -1128.97668457]
[686.90191650 -1117.28918457]
[696.06848145 -1105.41528320]
[704.99481201 -1093.35974121]
[713.67736816 -1081.12744141]
[722.11260986 -1068.72338867]
[730.29724121 -1056.15246582]
[738.22784424 -1043.41979980]
[745.90124512 -1030.53051758]
[753.31439209 -1017.48980713]
[760.46429443 -1004.30291748]
[767.34808350 -990.97515869]
[773.96295166 -977.51190186]
[780.30621338 -963.91857910]
[786.37536621 -950.20068359]
[792.16790771 -936.36376953]
[797.68157959 -922.41333008]
[802.91406250 -908.35498047]
[807.86334229 -894.19451904]
[812.52740479 -879.93750000]
[816.90429688 -865.58978271]
[820.99237061 -851.15704346]
[824.78985596 -836.64520264]
[828.29534912 -822.06005859]
[831.50732422 -807.40747070]
[834.42449951 -792.69335938]
[837.04583740 -777.92364502]
[839.37011719 -763.10430908]
[841.39642334 -748.24127197]
[843.12402344 -733.34057617]
[844.55218506 -718.40826416]
[845.68035889 -703.45019531]
[846.50799561 -688.47253418]
[847.03485107 -673.48132324]
[847.26068115 -658.48248291]
[847.18542480 -643.48217773]
[846.80902100 -628.48638916]
[846.13171387 -613.50122070]
[845.15380859 -598.53259277]
[843.87554932 -583.58666992]
[842.29760742 -568.66937256]
[840.42053223 -553.78680420]
[838.24511719 -538.94488525]
[835.77221680 -524.14959717]
[833.00280762 -509.40695190]
[829.93804932 -494.72286987]
[826.57916260 -480.10324097]
[822.92742920 -465.55401611]
[818.98449707 -451.08099365]
[814.75177002 -436.69006348]
[810.23107910 -422.38696289]
[805.42413330 -408.17749023]
[800.33300781 -394.06738281]
[794.95965576 -380.06231689]
[789.30627441 -366.16790771]
[783.37506104 -352.38980103]
[777.16857910 -338.73352051]
[770.68914795 -325.20455933]
[763.93951416 -311.80838013]
[756.92230225 -298.55041504]
[749.64044189 -285.43594360]
[742.09674072 -272.47027588]
[734.29431152 -259.65866089]
[726.23632812 -247.00625610]
[717.92596436 -234.51812744]
[709.36663818 -222.19934082]
[700.56176758 -210.05482483]
[691.51483154 -198.08950806]
[682.22961426 -186.30819702]
[672.70971680 -174.71563721]
[662.95910645 -163.31649780]
[652.98162842 -152.11538696]
[642.78131104 -141.11680603]
[632.36230469 -130.32518005]
[621.72875977 -119.74487305]
[610.88494873 -109.38014221]
[599.83532715 -99.23516083]
[588.58428955 -89.31402588]
[577.13635254 -79.62072754]
[565.49615479 -70.15917206]
[553.66839600 -60.93317032]
[541.65777588 -51.94644547]
[529.46923828 -43.20261383]
[517.10766602 -34.70520401]
[504.57797241 -26.45763779]
[491.88528442 -18.46323586]
[479.03466797 -10.72522354]
[466.03131104 -3.24671674]
[452.88046265 3.96927094]
[439.58743286 10.91983128]
[426.15756226 17.60216331]
[412.59625244 24.01357460]
[398.90899658 30.15148354]
[385.10128784 36.01341248]
[371.17868042 41.59700394]
[357.14682007 46.90000534]
[343.01132202 51.92028046]
[328.77792358 56.65580750]
[314.45233154 61.10467529]
[300.04031372 65.26509094]
[285.54769897 69.13538361]
[270.98028564 72.71398926]
[256.34402466 75.99946594]
[241.64472961 78.99049377]
[226.88836670 81.68585968]
[212.08088684 84.08448029]
[197.22822571 86.18539429]
[182.33639526 87.98775482]
[167.41139221 89.49082947]
[152.45921326 90.69401550]
[137.48590088 91.59682465]
[122.49748230 92.19890594]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
