%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Dec 23 04:45:16 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__________________________A___UGCC___G_CA_A_AA______AUCUG__UG_________CUUGU__GGCCCUGAU_C_GUCAUC______UGUUUCACGGUGUU_GGUAUUCACAUUGAUGACGCGG_GAAUCGCUGUGCGAGUUGCGUAUCAGAGACGGAAAUAC______GGAGGUU_GCGGCUUUUUUGGCUUACGAAUCC_AAG_AA______G____________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50397491 92.12152100]
[62.52227402 91.36480713]
[47.56443787 90.23032379]
[32.63998413 88.71880341]
[17.75842094 86.83119965]
[2.92922139 84.56872559]
[-11.83817291 81.93281555]
[-26.53436089 78.92514801]
[-41.14998245 75.54763794]
[-55.67573166 71.80243683]
[-70.10236359 67.69192505]
[-84.42069244 63.21873093]
[-98.62159729 58.38568878]
[-112.69603729 53.19588470]
[-126.63505554 47.65262222]
[-140.42976379 41.75942612]
[-154.07141113 35.52005005]
[-167.55126953 28.93847275]
[-180.86077881 22.01887703]
[-193.99147034 14.76567364]
[-206.93498230 7.18347788]
[-219.68305969 -0.72288156]
[-232.22758484 -8.94837093]
[-244.56059265 -17.48775291]
[-256.67419434 -26.33559036]
[-268.56072998 -35.48624802]
[-280.21258545 -44.93390274]
[-291.62237549 -54.67253876]
[-302.78277588 -64.69595337]
[-313.68676758 -74.99776459]
[-324.32733154 -85.57141876]
[-334.69775391 -96.41017914]
[-344.79138184 -107.50714111]
[-354.60180664 -118.85523987]
[-364.12277222 -130.44726562]
[-373.34826660 -142.27580261]
[-382.27233887 -154.33335876]
[-390.88937378 -166.61224365]
[-399.19384766 -179.10462952]
[-407.18048096 -191.80256653]
[-414.84420776 -204.69796753]
[-422.18011475 -217.78263855]
[-429.18353271 -231.04823303]
[-435.85003662 -244.48629761]
[-442.17535400 -258.08828735]
[-448.15545654 -271.84555054]
[-453.78656006 -285.74932861]
[-459.06506348 -299.79074097]
[-463.98760986 -313.96087646]
[-468.55105591 -328.25067139]
[-472.75250244 -342.65109253]
[-476.58929443 -357.15292358]
[-480.05892944 -371.74694824]
[-483.15927124 -386.42385864]
[-485.88830566 -401.17434692]
[-488.24429321 -415.98895264]
[-490.22576904 -430.85830688]
[-491.83142090 -445.77294922]
[-493.06024170 -460.72332764]
[-493.91146851 -475.69995117]
[-494.38455200 -490.69329834]
[-494.47918701 -505.69378662]
[-494.19531250 -520.69189453]
[-493.53311157 -535.67810059]
[-492.49301147 -550.64276123]
[-491.07568359 -565.57647705]
[-489.28198242 -580.46966553]
[-487.11309814 -595.31280518]
[-484.57040405 -610.09655762]
[-481.65548706 -624.81140137]
[-478.37023926 -639.44805908]
[-474.71673584 -653.99713135]
[-470.69732666 -668.44940186]
[-466.31454468 -682.79565430]
[-461.57116699 -697.02679443]
[-456.47024536 -711.13366699]
[-451.01501465 -725.10736084]
[-445.20895386 -738.93902588]
[-439.05575562 -752.61968994]
[-432.55935669 -766.14080811]
[-425.72384644 -779.49371338]
[-418.55361938 -792.66992188]
[-411.05322266 -805.66101074]
[-403.22744751 -818.45867920]
[-395.08123779 -831.05487061]
[-386.61981201 -843.44146729]
[-377.84857178 -855.61065674]
[-368.77307129 -867.55468750]
[-359.39910889 -879.26586914]
[-349.73263550 -890.73687744]
[-339.77981567 -901.96032715]
[-329.54699707 -912.92907715]
[-319.04067993 -923.63610840]
[-308.26754761 -934.07470703]
[-297.23449707 -944.23809814]
[-285.94848633 -954.11993408]
[-274.41677856 -963.71386719]
[-262.64663696 -973.01373291]
[-250.64562988 -982.01373291]
[-238.42135620 -990.70800781]
[-225.98159790 -999.09112549]
[-213.33428955 -1007.15771484]
[-200.48748779 -1014.90264893]
[-187.44935608 -1022.32092285]
[-174.22821045 -1029.40795898]
[-160.83245850 -1036.15905762]
[-147.27062988 -1042.57006836]
[-133.55136108 -1048.63684082]
[-119.68340302 -1054.35546875]
[-105.67556000 -1059.72241211]
[-91.53676605 -1064.73425293]
[-77.27601624 -1069.38781738]
[-62.90239716 -1073.68005371]
[-48.42505646 -1077.60815430]
[-33.85321426 -1081.16979980]
[-19.19614410 -1084.36267090]
[-4.46318340 -1087.18469238]
[10.33629036 -1089.63415527]
[25.19285393 -1091.70935059]
[40.09704590 -1093.40905762]
[55.03937912 -1094.73217773]
[70.01033783 -1095.67785645]
[85.00039673 -1096.24548340]
[100.00000000 -1096.43469238]
[114.99960327 -1096.24548340]
[129.98965454 -1095.67785645]
[144.96061707 -1094.73217773]
[159.90295410 -1093.40905762]
[174.80714417 -1091.70935059]
[189.66371155 -1089.63415527]
[204.46318054 -1087.18469238]
[219.19615173 -1084.36267090]
[233.85321045 -1081.16979980]
[248.42506409 -1077.60815430]
[262.90240479 -1073.68005371]
[277.27603149 -1069.38781738]
[291.53677368 -1064.73425293]
[305.67556763 -1059.72241211]
[319.68341064 -1054.35546875]
[333.55136108 -1048.63684082]
[347.27062988 -1042.57006836]
[360.83245850 -1036.15905762]
[374.22821045 -1029.40795898]
[387.44937134 -1022.32092285]
[400.48748779 -1014.90264893]
[413.33428955 -1007.15771484]
[425.98159790 -999.09112549]
[438.42135620 -990.70800781]
[450.64562988 -982.01373291]
[462.64663696 -973.01373291]
[474.41677856 -963.71386719]
[485.94848633 -954.11993408]
[497.23449707 -944.23809814]
[508.26754761 -934.07470703]
[519.04071045 -923.63610840]
[529.54699707 -912.92907715]
[539.77984619 -901.96032715]
[549.73266602 -890.73687744]
[559.39910889 -879.26586914]
[568.77307129 -867.55468750]
[577.84857178 -855.61065674]
[586.61981201 -843.44146729]
[595.08123779 -831.05487061]
[603.22741699 -818.45867920]
[611.05322266 -805.66101074]
[618.55358887 -792.66992188]
[625.72387695 -779.49371338]
[632.55932617 -766.14080811]
[639.05578613 -752.61968994]
[645.20898438 -738.93902588]
[651.01501465 -725.10736084]
[656.47027588 -711.13366699]
[661.57116699 -697.02679443]
[666.31451416 -682.79565430]
[670.69732666 -668.44940186]
[674.71673584 -653.99713135]
[678.37023926 -639.44805908]
[681.65551758 -624.81140137]
[684.57037354 -610.09655762]
[687.11309814 -595.31280518]
[689.28198242 -580.46966553]
[691.07568359 -565.57647705]
[692.49304199 -550.64276123]
[693.53314209 -535.67810059]
[694.19531250 -520.69189453]
[694.47918701 -505.69378662]
[694.38458252 -490.69329834]
[693.91149902 -475.69995117]
[693.06024170 -460.72332764]
[691.83142090 -445.77294922]
[690.22576904 -430.85830688]
[688.24432373 -415.98895264]
[685.88830566 -401.17434692]
[683.15930176 -386.42385864]
[680.05895996 -371.74694824]
[676.58929443 -357.15292358]
[672.75250244 -342.65109253]
[668.55108643 -328.25067139]
[663.98760986 -313.96087646]
[659.06506348 -299.79074097]
[653.78656006 -285.74932861]
[648.15545654 -271.84555054]
[642.17535400 -258.08828735]
[635.85003662 -244.48629761]
[629.18353271 -231.04823303]
[622.18011475 -217.78263855]
[614.84417725 -204.69796753]
[607.18048096 -191.80256653]
[599.19384766 -179.10462952]
[590.88940430 -166.61224365]
[582.27233887 -154.33335876]
[573.34826660 -142.27580261]
[564.12280273 -130.44726562]
[554.60180664 -118.85523987]
[544.79138184 -107.50714111]
[534.69775391 -96.41017914]
[524.32733154 -85.57141876]
[513.68676758 -74.99776459]
[502.78277588 -64.69595337]
[491.62237549 -54.67253876]
[480.21258545 -44.93390274]
[468.56072998 -35.48624802]
[456.67419434 -26.33559036]
[444.56057739 -17.48775291]
[432.22760010 -8.94837093]
[419.68304443 -0.72288156]
[406.93496704 7.18347788]
[393.99148560 14.76567364]
[380.86077881 22.01887703]
[367.55126953 28.93847275]
[354.07141113 35.52005005]
[340.42977905 41.75942612]
[326.63504028 47.65262222]
[312.69604492 53.19588470]
[298.62158203 58.38568878]
[284.42068481 63.21873093]
[270.10235596 67.69192505]
[255.67573547 71.80243683]
[241.14997864 75.54763794]
[226.53436279 78.92514801]
[211.83818054 81.93281555]
[197.07078552 84.56872559]
[182.24157715 86.83119965]
[167.36001587 88.71880341]
[152.43556213 90.23032379]
[137.47772217 91.36480713]
[122.49602509 92.12152100]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
