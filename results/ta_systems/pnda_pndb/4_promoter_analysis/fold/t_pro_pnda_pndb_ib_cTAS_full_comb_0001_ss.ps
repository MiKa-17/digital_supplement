%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 16:04:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______________UGAUG_CCACAGCGAACGUUUUUAAUGAUGUUAAUCGUCGUCUGUGUGACGAUUCUGUGUUUUGUCUGGAUGGUGAGGGAUUCGCUUUGCGGACUCCGGCUCCAGCAGGGAAACACAGUGCUUGUGGCAACGUUAGCCUACGAAGUUA______\
) } def
/len { sequence length } bind def

/coor [
[100.18237305 351.36322021]
[92.51820374 364.27258301]
[83.58732605 376.34033203]
[73.48136902 387.44262695]
[62.30405807 397.46551514]
[50.17007828 406.30621338]
[37.20394897 413.87393188]
[23.53871918 420.09103394]
[9.31462002 424.89376831]
[-5.32238626 428.23275757]
[-20.22210121 430.07385254]
[-35.23162842 430.39807129]
[-50.19694519 429.20208740]
[-64.96448517 426.49826050]
[-79.38270569 422.31423950]
[-93.30364990 416.69299316]
[-106.58447266 409.69223022]
[-119.08889008 401.38378906]
[-130.68858337 391.85287476]
[-141.26452637 381.19732666]
[-150.70817566 369.52648926]
[-158.92263794 356.96014404]
[-165.82362366 343.62719727]
[-171.34031677 329.66448975]
[-175.41609192 315.21530151]
[-178.00914001 300.42788696]
[-179.09284973 285.45404053]
[-178.65608215 270.44735718]
[-176.70335388 255.56185913]
[-173.25466919 240.95030212]
[-168.34542847 226.76261902]
[-162.02603149 213.14439392]
[-154.36128235 200.23538208]
[-145.42987061 188.16802979]
[-135.32344055 177.06617737]
[-124.14568329 167.04376221]
[-112.01131439 158.20362854]
[-99.04484558 150.63647461]
[-85.37934113 144.41995239]
[-71.15503693 139.61787415]
[-56.51787949 136.27949524]
[-41.61808395 134.43908691]
[-26.60854340 134.11553955]
[-11.64328003 135.31214905]
[3.12413907 138.01664734]
[17.54217529 142.20129395]
[31.46287537 147.82313538]
[44.74338913 154.82449341]
[57.24744034 163.13349915]
[66.77007294 151.54388428]
[76.29270935 139.95425415]
[85.81533813 128.36462402]
[72.82054138 112.38736725]
[72.85906982 93.01737976]
[84.37496185 78.99365997]
[100.97097778 75.68353271]
[106.15946198 61.60945511]
[111.34795380 47.53537750]
[116.53643799 33.46130371]
[121.72492218 19.38722801]
[126.91340637 5.31315136]
[118.05999756 -2.91366053]
[112.53077698 -13.62129211]
[110.95798492 -25.53417206]
[113.50408936 -37.24206924]
[119.84539795 -47.36703873]
[129.21295166 -54.72558212]
[140.48571777 -58.46698380]
[152.32476807 -58.17160797]
[158.28967285 -71.93460083]
[164.25456238 -85.69759369]
[170.21945190 -99.46059418]
[160.31770325 -108.61253357]
[153.73886108 -120.35588837]
[151.11425781 -133.53483582]
[152.68684387 -146.85728455]
[158.28875732 -159.02145386]
[167.35911560 -168.84318542]
[179.00015259 -175.37110901]
[192.06608582 -177.97888184]
[205.27581787 -176.42520142]
[211.74816895 -189.95697021]
[218.22050476 -203.48873901]
[224.69285583 -217.02050781]
[217.47288513 -230.62852478]
[219.62501526 -245.70240784]
[230.11642456 -256.49102783]
[244.77342224 -259.00308228]
[251.24575806 -272.53485107]
[257.59207153 -286.12619019]
[263.81173706 -299.77593994]
[270.03143311 -313.42565918]
[276.25112915 -327.07540894]
[272.00137329 -342.54534912]
[281.56265259 -355.42794800]
[297.60040283 -355.84078979]
[307.81179810 -343.46716309]
[304.36358643 -327.79907227]
[289.90087891 -320.85571289]
[283.68118286 -307.20596313]
[277.46148682 -293.55624390]
[271.24179077 -279.90649414]
[271.33010864 -272.48587036]
[264.77752686 -266.06250000]
[258.30517578 -252.53073120]
[265.54876709 -239.54348755]
[263.73446655 -224.60452271]
[253.35008240 -213.46821594]
[238.22462463 -210.54815674]
[231.75227356 -197.01638794]
[225.27993774 -183.48461914]
[218.80758667 -169.95285034]
[230.20854187 -157.86473083]
[236.12110901 -142.29664612]
[235.61669922 -125.61457062]
[228.74421692 -110.36531067]
[216.52688599 -98.88769531]
[200.81005859 -92.95386505]
[183.98245239 -93.49569702]
[178.01756287 -79.73270416]
[172.05265808 -65.96970367]
[166.08776855 -52.20671082]
[177.53248596 -38.21436691]
[180.34057617 -20.27137756]
[173.65592957 -3.29390216]
[159.23529053 8.02253532]
[140.98748779 10.50163651]
[135.79899597 24.57571220]
[130.61051941 38.64978790]
[125.42202759 52.72386551]
[120.23354340 66.79794312]
[115.04505920 80.87201691]
[127.78469849 96.33976746]
[125.39282227 118.99897766]
[139.09977722 125.09153748]
[152.80673218 131.18409729]
[169.73634338 132.09234619]
[173.55015564 148.61177063]
[158.73210144 156.84956360]
[146.71418762 144.89105225]
[133.00721741 138.79849243]
[119.30026245 132.70593262]
[128.40832520 144.62413025]
[140.46673584 153.54571533]
[146.70439148 167.18725586]
[145.56439209 182.14387512]
[137.33128357 194.68244934]
[124.06001282 201.67340088]
[109.06304169 201.37181091]
[96.08356476 193.85295105]
[88.36121368 180.99349976]
[87.82345581 166.00314331]
[94.60443115 152.62350464]
[97.40496826 137.88725281]
[87.88233185 149.47688293]
[78.35970306 161.06651306]
[68.83706665 172.65614319]
[79.41347504 183.31121826]
[88.85764313 194.98162842]
[97.07266235 207.54763794]
[103.97423553 220.88027954]
[109.49153900 234.84274292]
[113.56795502 249.29174805]
[116.16165161 264.07904053]
[117.24600983 279.05285645]
[116.80991364 294.05953979]
[114.85783386 308.94512939]
[111.40979004 323.55682373]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[49 157]
[50 156]
[51 155]
[52 154]
[56 132]
[57 131]
[58 130]
[59 129]
[60 128]
[61 127]
[69 122]
[70 121]
[71 120]
[72 119]
[81 112]
[82 111]
[83 110]
[84 109]
[88 105]
[89 104]
[90 102]
[91 101]
[92 100]
[93 99]
[134 142]
[135 141]
[136 140]
] def

init

% Start Annotations
49 157 0.0 1 colorpair
51 155 0.0 1 colorpair
52 154 0.0 1 colorpair
56 132 0.0 1 colorpair
57 131 0.16 1 colorpair
58 130 0.0 1 colorpair
59 129 0.0 1 colorpair
61 127 0.16 1 colorpair
69 122 0.16 1 colorpair
70 121 0.0 1 colorpair
71 120 0.0 1 colorpair
72 119 0.16 1 colorpair
81 112 0.0 1 colorpair
82 111 0.0 1 colorpair
84 109 0.0 1 colorpair
88 105 0.0 1 colorpair
90 102 0.0 0.2 colorpair
91 101 0.16 0.2 colorpair
92 100 0.16 0.2 colorpair
93 99 0.16 0.2 colorpair
134 142 0.0 0.2 colorpair
135 141 0.16 1 colorpair
136 140 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
50 156 12 gmark
50 cmark
131 cmark
60 128 8 gmark
128 cmark
127 cmark
69 cmark
72 cmark
119 cmark
83 110 4 gmark
110 cmark
89 104 4 gmark
89 cmark
104 cmark
90 102 2 gmark
91 101 2 gmark
101 cmark
92 100 2 gmark
92 cmark
93 99 2 gmark
99 cmark
134 142 2 gmark
135 cmark

% End Annotations
showpage
end
%%EOF
