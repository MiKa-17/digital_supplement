%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 16:04:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__GAUGCCACAGCGAACGUUUUUAAUGAUGUUAAUCGUCGUCUGUGUGACGAUUCUGUGUUUUGUCUGGAUGGUGAGGGAUUCGCUUUGCGGACUCCGGCUCCAGCAGGGAAACACAGUGCUUGUGGCAACGUUAGCCUACGAAGUUAAACGUUAA\
) } def
/len { sequence length } bind def

/coor [
[27.48955536 195.98417664]
[32.46699524 181.83407593]
[39.75470352 168.72341919]
[49.14480591 157.02616882]
[60.36947250 147.07594299]
[73.10546875 139.15814209]
[81.33269501 126.61569977]
[89.55992889 114.07326508]
[76.32669067 121.13594055]
[63.09345245 128.19862366]
[49.86021423 135.26129150]
[36.92014694 142.84777832]
[24.29397202 150.94590759]
[11.66779900 159.04403687]
[-0.95837492 167.14216614]
[-13.33583069 175.61557007]
[-25.45341873 184.45661926]
[-37.57100677 193.29766846]
[-49.68859482 202.13870239]
[-61.80618286 210.97975159]
[-63.99934769 226.63113403]
[-76.66747284 236.08068848]
[-92.29478455 233.72216797]
[-101.60987854 220.95484924]
[-99.08627319 205.35333252]
[-86.22117615 196.17375183]
[-70.64722443 198.86216736]
[-58.52964020 190.02111816]
[-46.41205215 181.18006897]
[-34.29446411 172.33903503]
[-22.17687416 163.49798584]
[-21.28401756 160.03228760]
[-18.63496208 156.84002686]
[-14.38320065 154.75714111]
[-9.05650616 154.51599121]
[3.56966758 146.41786194]
[16.19584084 138.31973267]
[28.82201576 130.22160339]
[29.53394127 127.45521545]
[31.41553688 124.81298828]
[34.42190170 122.75358582]
[38.33885956 121.70957947]
[42.79753494 122.02806091]
[56.03077316 114.96538544]
[69.26401520 107.90270233]
[82.49725342 100.84002686]
[67.59722137 102.56894684]
[54.30025864 95.62699127]
[47.20141983 82.41311646]
[48.75387192 67.49366760]
[58.42113113 56.02439880]
[72.86245728 51.96877289]
[87.08732605 56.72830200]
[96.18001556 68.65821838]
[96.99826050 83.63622284]
[101.71907043 69.39846039]
[106.43987274 55.16069412]
[103.43894958 39.62669754]
[114.78861237 29.98126030]
[119.50942230 15.74349499]
[124.23023224 1.50572944]
[128.95103455 -12.73203564]
[133.67184448 -26.96980095]
[130.67092896 -42.50379562]
[142.02058411 -52.14923477]
[141.75523376 -61.33714294]
[146.98091125 -66.62299347]
[151.98565674 -80.76345062]
[140.37983704 -89.33082581]
[131.67486572 -100.81379700]
[126.57193756 -114.27246857]
[125.47788239 -128.60844421]
[128.47276306 -142.65441895]
[135.30406189 -155.26927185]
[145.40794373 -165.43074036]
[157.95581055 -172.31826782]
[171.92225647 -175.37925720]
[186.16877747 -174.37342834]
[191.45545959 -188.41091919]
[196.74212646 -202.44841003]
[194.36511230 -218.09002686]
[206.09159851 -227.27365112]
[211.23756409 -241.36332703]
[216.24230957 -255.50378418]
[221.24705505 -269.64425659]
[220.83190918 -286.59310913]
[237.00347900 -291.68392944]
[246.37210083 -277.55364990]
[235.38751221 -264.63949585]
[230.38276672 -250.49903870]
[225.37802124 -236.35858154]
[226.11511230 -228.96232605]
[220.12908936 -221.98696899]
[222.88424683 -207.34941101]
[210.77961731 -197.16172791]
[205.49295044 -183.12423706]
[200.20626831 -169.08676147]
[212.52586365 -159.45597839]
[221.28453064 -146.47842407]
[225.61801147 -131.41323853]
[225.09213257 -115.72659302]
[219.74621582 -100.94898224]
[210.09043884 -88.52590942]
[197.05722046 -79.67646790]
[181.91110229 -75.27375793]
[166.12611389 -75.75870514]
[161.12136841 -61.61824799]
[156.25834656 -47.42842484]
[159.59693909 -32.91281128]
[147.90960693 -22.24899101]
[143.18879700 -8.01122665]
[138.46798706 6.22653866]
[133.74717712 20.46430397]
[129.02638245 34.70206833]
[132.36495972 49.21768570]
[120.67764282 59.88150406]
[115.95683289 74.11927032]
[111.23602295 88.35703278]
[114.07824707 92.28533173]
[115.61086273 96.84516144]
[130.14407349 100.55806732]
[144.67729187 104.27097321]
[161.52015686 102.33339691]
[168.04458618 117.98165894]
[154.81399536 128.58297729]
[140.96438599 118.80418396]
[126.43117523 115.09128571]
[111.89795685 111.37837982]
[122.87199402 121.60435486]
[133.84602356 131.83032227]
[148.10279846 136.49342346]
[161.37152100 143.48921204]
[173.27371216 152.61816406]
[183.46989441 163.61988831]
[191.66921997 176.18058777]
[197.63784790 189.94197083]
[201.20549011 204.51152039]
[202.27043152 219.47366333]
[200.80226135 234.40164185]
[196.84286499 248.86964417]
[190.50518799 262.46499634]
[181.97000122 274.79992676]
[171.48074341 285.52261353]
[159.33662415 294.32714844]
[145.88400269 300.96246338]
[131.50662231 305.23925781]
[116.61457825 307.03555298]
[101.63261414 306.30014038]
[86.98808289 303.05395508]
[73.09869385 297.38958740]
[60.36062241 289.46862793]
[49.13719559 279.51702881]
[39.74854279 267.81860352]
[32.46246719 254.70703125]
[27.48678589 240.55632019]
[24.96342278 225.77009583]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 46]
[9 45]
[10 44]
[11 43]
[12 38]
[13 37]
[14 36]
[15 35]
[16 31]
[17 30]
[18 29]
[19 28]
[20 27]
[55 118]
[56 117]
[57 116]
[59 114]
[60 113]
[61 112]
[62 111]
[63 110]
[65 108]
[67 107]
[68 106]
[78 97]
[79 96]
[80 95]
[82 93]
[83 91]
[84 90]
[85 89]
[120 128]
[121 127]
[122 126]
] def

init

% Start Annotations
8 46 0.0 0.6 colorpair
9 45 0.16 1 colorpair
10 44 0.16 1 colorpair
11 43 0.0 0.6 colorpair
12 38 0.16 1 colorpair
13 37 0.0 1 colorpair
14 36 0.16 0.6 colorpair
15 35 0.0 1 colorpair
16 31 0.0 0.6 colorpair
17 30 0.0 0.6 colorpair
18 29 0.16 0.6 colorpair
19 28 0.0 0.6 colorpair
20 27 0.16 0.6 colorpair
55 118 0.0 0.2 colorpair
56 117 0.16 0.2 colorpair
57 116 0.0 0.6 colorpair
59 114 0.16 0.2 colorpair
60 113 0.0 0.2 colorpair
61 112 0.16 0.6 colorpair
62 111 0.0 0.2 colorpair
63 110 0.0 0.6 colorpair
65 108 0.16 0.2 colorpair
67 107 0.0 0.6 colorpair
68 106 0.0 0.2 colorpair
78 97 0.16 0.2 colorpair
80 95 0.0 0.6 colorpair
82 93 0.32 0.6 colorpair
83 91 0.0 0.2 colorpair
84 90 0.32 0.6 colorpair
85 89 0.16 0.2 colorpair
120 128 0.0 0.6 colorpair
121 127 0.16 0.2 colorpair
122 126 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
8 46 1 gmark
9 cmark
10 cmark
11 43 1 gmark
12 cmark
14 36 1 gmark
36 cmark
16 31 1 gmark
17 30 1 gmark
18 29 1 gmark
18 cmark
19 28 1 gmark
20 27 1 gmark
27 cmark
55 118 2 gmark
56 117 2 gmark
117 cmark
57 116 1 gmark
59 114 2 gmark
114 cmark
60 113 2 gmark
61 112 1 gmark
112 cmark
62 111 2 gmark
63 110 1 gmark
65 108 2 gmark
65 cmark
67 107 1 gmark
68 106 2 gmark
78 97 2 gmark
78 cmark
97 cmark
79 96 4 gmark
96 cmark
80 95 1 gmark
82 93 1 gmark
82 cmark
93 cmark
83 91 2 gmark
84 90 1 gmark
84 cmark
90 cmark
85 89 2 gmark
85 cmark
120 128 1 gmark
121 127 2 gmark
121 cmark
122 126 1 gmark
122 cmark
126 cmark

% End Annotations
showpage
end
%%EOF
