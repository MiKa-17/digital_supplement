%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Dec 17 06:51:12 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__________________GUGAAAGAAAUAAUAU___CGUUGGUUAUCGCACCAAUCUUUGUAGGAUUGGUUAUGGAAAUGAUUUCUCAUUGGUUAGACGAGAAAGACGAUAACUAAAAGCAA\
) } def
/len { sequence length } bind def

/coor [
[4.30220175 325.25891113]
[-2.14114046 338.82867432]
[-10.30061817 351.44128418]
[-20.03661156 362.88092041]
[-31.18252563 372.95184326]
[-43.54763794 381.48175049]
[-56.92036438 388.32461548]
[-71.07188416 393.36343384]
[-85.76004791 396.51193237]
[-100.73351288 397.71621704]
[-115.73606873 396.95574951]
[-130.51100159 394.24346924]
[-144.80549622 389.62585449]
[-158.37493896 383.18185425]
[-170.98716736 375.02178955]
[-182.42634583 365.28524780]
[-192.49674988 354.13885498]
[-201.02604675 341.77331543]
[-207.86830139 328.40026855]
[-212.90641785 314.24850464]
[-216.05421448 299.56021118]
[-217.25781250 284.58666992]
[-216.49661255 269.58416748]
[-213.78364563 254.80935669]
[-209.16532898 240.51509094]
[-202.72068787 226.94593811]
[-194.56001282 214.33410645]
[-184.82293701 202.89538574]
[-173.67605591 192.82551575]
[-161.31013489 184.29681396]
[-147.93675232 177.45518494]
[-133.78475952 172.41773987]
[-119.09629822 169.27064514]
[-104.12271881 168.06776428]
[-89.12023926 168.82968140]
[-74.34556580 171.54335022]
[-60.05150986 176.16233826]
[-46.48267365 182.60762024]
[-33.87122726 190.76890564]
[-22.43297386 200.50653076]
[-11.30276966 190.45075989]
[-0.17256583 180.39498901]
[10.95763779 170.33921814]
[22.08784103 160.28343201]
[33.21804428 150.22766113]
[44.34824753 140.17189026]
[55.47845459 130.11611938]
[66.60865784 120.06034851]
[77.73886108 110.00457764]
[73.91874695 93.36319733]
[82.19442749 76.58132172]
[100.68564606 68.08195496]
[98.03935242 53.31722641]
[83.56494904 48.18037415]
[73.61038971 36.48411942]
[70.85340118 21.37469673]
[76.03560638 6.91646814]
[87.76300049 -3.00137782]
[102.88098907 -5.71098995]
[117.32290649 -0.48349637]
[127.20394135 11.27493382]
[129.86614990 26.40134048]
[124.59342194 40.82679749]
[112.80407715 50.67092896]
[115.45037079 65.43565369]
[120.20661163 51.20968628]
[124.96286011 36.98371887]
[123.78273010 22.03021622]
[128.01596069 7.63994789]
[137.10522461 -4.29258251]
[149.85391235 -12.19643879]
[164.58363342 -15.03106689]
[179.35520935 -12.42328262]
[192.22393799 -4.71640491]
[201.49562073 7.07494354]
[205.94963074 21.39841270]
[204.99958801 36.36829758]
[198.77058411 50.01378632]
[188.08264160 60.53843307]
[174.34288025 66.55664825]
[159.35757446 67.27577972]
[145.84648132 73.79119873]
[132.33540344 80.30661774]
[147.31616211 81.06635284]
[162.29690552 81.82609558]
[177.27764893 82.58583069]
[192.25839233 83.34556580]
[207.23915100 84.10530853]
[222.21989441 84.86504364]
[231.12341309 72.26619720]
[245.43353271 66.50217438]
[260.58395386 69.41224670]
[271.74020386 80.06782532]
[275.34240723 95.06874847]
[270.24108887 109.62828064]
[258.06405640 119.10053253]
[242.69696045 120.46292877]
[229.04339600 113.28074646]
[221.46015930 99.84579468]
[206.47941589 99.08605194]
[191.49865723 98.32631683]
[176.51791382 97.56658173]
[161.53717041 96.80683899]
[146.55641174 96.04710388]
[131.57566833 95.28736877]
[124.29045868 116.59658051]
[105.97396088 126.24101257]
[87.79463196 121.13478088]
[76.66442871 131.19055176]
[65.53422546 141.24632263]
[54.40402222 151.30209351]
[43.27381897 161.35786438]
[32.14361572 171.41363525]
[21.01341057 181.46942139]
[9.88320637 191.52519226]
[-1.24699700 201.58096313]
[-12.37720108 211.63673401]
[-3.84672332 224.00143433]
[2.99680328 237.37384033]
[8.03627777 251.52511597]
[11.18546772 266.21313477]
[12.39048672 281.18655396]
[11.63071537 296.18911743]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[40 117]
[41 116]
[42 115]
[43 114]
[44 113]
[45 112]
[46 111]
[47 110]
[48 109]
[49 108]
[52 65]
[53 64]
[83 105]
[84 104]
[85 103]
[86 102]
[87 101]
[88 100]
[89 99]
] def

init

% Start Annotations
40 117 0.0 0.6 colorpair
41 116 0.16 1 colorpair
42 115 0.32 1 colorpair
43 114 0.16 1 colorpair
44 113 0.16 1 colorpair
45 112 0.32 1 colorpair
46 111 0.16 1 colorpair
47 110 0.0 1 colorpair
48 109 0.16 1 colorpair
49 108 0.0 1 colorpair
52 65 0.0 0.2 colorpair
53 64 0.0 1 colorpair
83 105 0.0 0.6 colorpair
84 104 0.0 1 colorpair
85 103 0.16 1 colorpair
86 102 0.0 1 colorpair
87 101 0.0 1 colorpair
88 100 0.0 1 colorpair
89 99 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
40 117 1 gmark
116 cmark
42 cmark
115 cmark
43 cmark
114 cmark
113 cmark
45 cmark
112 cmark
46 cmark
111 cmark
48 cmark
109 cmark
52 65 2 gmark
83 105 1 gmark
103 cmark
89 99 1 gmark
89 cmark
99 cmark

% End Annotations
showpage
end
%%EOF
