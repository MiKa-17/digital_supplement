%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Dec 24 00:55:44 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGAUAAUUUUUUACUUAGUGUAUUAGCUAGUUUAACAGCUAGUUUAAUAGUUUACUUAAUUAGUAAAUUAUU_UAAAAAA_GUAAAAAGCCACUC______UGGCA___CUAAGAGUGACUUGG___AAUUUGAUUUUAAAAUCAAA______UUCAAAAAAAAAAAA_____________________________________________________________________________________\
___________\
) } def
/len { sequence length } bind def

/coor [
[18.50398064 703.28802490]
[3.66524076 701.09704590]
[-11.11501408 698.54113770]
[-25.82781029 695.62188721]
[-40.46421814 692.34100342]
[-55.01535034 688.70050049]
[-69.47237396 684.70263672]
[-83.82650757 680.34979248]
[-98.06904602 675.64459229]
[-112.19133759 670.58996582]
[-126.18480682 665.18890381]
[-140.04095459 659.44470215]
[-153.75138855 653.36090088]
[-167.30775452 646.94116211]
[-180.70185852 640.18933105]
[-193.92553711 633.10961914]
[-206.97076416 625.70617676]
[-219.82965088 617.98364258]
[-232.49435425 609.94665527]
[-244.95721436 601.60003662]
[-257.21066284 592.94891357]
[-269.24722290 583.99847412]
[-281.05963135 574.75427246]
[-292.64068604 565.22180176]
[-303.98336792 555.40692139]
[-315.08081055 545.31561279]
[-325.92626953 534.95385742]
[-336.51312256 524.32812500]
[-347.39675903 534.65026855]
[-358.28042603 544.97235107]
[-356.12612915 560.33917236]
[-363.44534302 574.02160645]
[-377.42367554 580.75848389]
[-392.68621826 577.95928955]
[-403.36413574 566.70050049]
[-405.35162354 551.31121826]
[-397.88439941 537.70898438]
[-383.83380127 531.12414551]
[-368.60253906 534.08868408]
[-357.71890259 523.76660156]
[-346.83523560 513.44445801]
[-356.88583374 502.31008911]
[-366.65902710 490.93145752]
[-376.14892578 479.31552124]
[-385.34976196 467.46926880]
[-394.25592041 455.39996338]
[-402.86206055 443.11486816]
[-411.16287231 430.62149048]
[-419.15338135 417.92736816]
[-426.82873535 405.04025269]
[-434.18420410 391.96795654]
[-441.21542358 378.71838379]
[-447.91802979 365.29962158]
[-454.28802490 351.71978760]
[-460.32150269 337.98712158]
[-466.01480103 324.11001587]
[-471.36450195 310.09680176]
[-476.36730957 295.95608521]
[-481.02020264 281.69638062]
[-485.32037354 267.32635498]
[-489.26519775 252.85478210]
[-492.85229492 238.29039001]
[-496.07943726 223.64204407]
[-498.94473267 208.91864014]
[-501.44641113 194.12910461]
[-503.58294678 179.28242493]
[-505.35302734 164.38761902]
[-506.75561523 149.45372009]
[-507.78985596 134.48980713]
[-508.45510864 119.50494385]
[-508.75097656 104.50823975]
[-508.67724609 89.50880432]
[-508.23400879 74.51573181]
[-507.42150879 59.53813553]
[-506.24026489 44.58510208]
[-504.69094849 29.66571236]
[-502.77453613 14.78902149]
[-500.49218750 -0.03593874]
[-497.84527588 -14.80016708]
[-494.83541870 -29.49470139]
[-491.46444702 -44.11061859]
[-487.73437500 -58.63904953]
[-483.64752197 -73.07116699]
[-479.20632935 -87.39821625]
[-474.41348267 -101.61149597]
[-469.27194214 -115.70238495]
[-463.78479004 -129.66230774]
[-457.95535278 -143.48281860]
[-451.78720093 -157.15550232]
[-445.28405762 -170.67207336]
[-438.44985962 -184.02432251]
[-431.28878784 -197.20413208]
[-423.80514526 -210.20352173]
[-416.00354004 -223.01457214]
[-407.88864136 -235.62953186]
[-399.46542358 -248.04074097]
[-390.73898315 -260.24063110]
[-381.71459961 -272.22183228]
[-372.39779663 -283.97708130]
[-362.79415894 -295.49920654]
[-352.90960693 -306.78121948]
[-342.75006104 -317.81625366]
[-332.32174683 -328.59768677]
[-321.63098145 -339.11886597]
[-310.68420410 -349.37350464]
[-299.48812866 -359.35528564]
[-288.04953003 -369.05822754]
[-276.37533569 -378.47640991]
[-264.47265625 -387.60409546]
[-252.34870911 -396.43576050]
[-240.01083374 -404.96603394]
[-227.46655273 -413.18975830]
[-214.72346497 -421.10189819]
[-201.78932190 -428.69772339]
[-188.67195129 -435.97253418]
[-175.37931824 -442.92199707]
[-161.91952515 -449.54183960]
[-148.30070496 -455.82803345]
[-134.53115845 -461.77682495]
[-120.61921692 -467.38455200]
[-106.57334137 -472.64779663]
[-92.40205383 -477.56341553]
[-78.11396790 -482.12838745]
[-63.71774292 -486.33996582]
[-49.22212601 -490.19558716]
[-34.63591766 -493.69287109]
[-19.96797371 -496.82974243]
[-5.22719622 -499.60427856]
[9.57746410 -502.01480103]
[24.43701935 -504.05984497]
[39.34244919 -505.73815918]
[54.28470230 -507.04873657]
[69.25470734 -507.99078369]
[84.24338531 -508.56372070]
[99.24162292 -508.76718140]
[114.24031830 -508.60107422]
[129.23037720 -508.06549072]
[144.20268250 -507.16076660]
[159.14816284 -505.88742065]
[174.05772400 -504.24624634]
[188.92233276 -502.23822021]
[203.73294067 -499.86459351]
[218.48059082 -497.12680054]
[233.15631104 -494.02648926]
[247.75117493 -490.56552124]
[262.25634766 -486.74606323]
[276.66302490 -482.57037354]
[290.96246338 -478.04101562]
[305.14593506 -473.16070557]
[319.20489502 -467.93246460]
[333.13073730 -462.35940552]
[346.91510010 -456.44497681]
[360.54953003 -450.19268799]
[374.02578735 -443.60641479]
[387.33566284 -436.69012451]
[400.47113037 -429.44796753]
[413.42416382 -421.88442993]
[426.18692017 -414.00402832]
[438.75164795 -405.81161499]
[451.11071777 -397.31210327]
[463.25665283 -388.51065063]
[475.18203735 -379.41265869]
[486.87966919 -370.02359009]
[498.34240723 -360.34921265]
[509.56332397 -350.39532471]
[520.53558350 -340.16799927]
[531.25256348 -329.67349243]
[541.70770264 -318.91809082]
[551.89471436 -307.90838623]
[561.80737305 -296.65103149]
[571.43963623 -285.15286255]
[580.78570557 -273.42089844]
[589.83990479 -261.46221924]
[598.59674072 -249.28407288]
[607.05084229 -236.89390564]
[615.19714355 -224.29920959]
[623.03063965 -211.50761414]
[630.54663086 -198.52691650]
[637.74053955 -185.36499023]
[644.60797119 -172.02981567]
[651.14477539 -158.52949524]
[657.34698486 -144.87222290]
[663.21081543 -131.06628418]
[668.73272705 -117.12006378]
[673.90942383 -103.04203033]
[678.73760986 -88.84073639]
[683.21447754 -74.52479553]
[687.33734131 -60.10290527]
[691.10357666 -45.58381653]
[694.51092529 -30.97634125]
[697.55737305 -16.28935242]
[700.24108887 -1.53176355]
[702.56036377 13.28746414]
[704.51385498 28.15933418]
[706.10028076 43.07481766]
[707.31884766 58.02486420]
[708.16864014 73.00038910]
[708.64923096 87.99230957]
[708.76031494 102.99151611]
[708.50183105 117.98890686]
[707.87390137 132.97537231]
[706.87695312 147.94183350]
[705.51159668 162.87918091]
[703.77856445 177.77835083]
[701.67907715 192.63029480]
[699.21423340 207.42602539]
[696.38568115 222.15652466]
[693.19500732 236.81285095]
[689.64422607 251.38613892]
[685.73547363 265.86752319]
[681.47113037 280.24819946]
[676.85375977 294.51943970]
[671.88616943 308.67260742]
[666.57141113 322.69906616]
[660.91271973 336.59033203]
[654.91345215 350.33798218]
[648.57733154 363.93365479]
[641.90814209 377.36907959]
[634.90997314 390.63610840]
[627.58709717 403.72671509]
[619.94390869 416.63290405]
[611.98504639 429.34689331]
[603.71539307 441.86093140]
[595.13989258 454.16741943]
[586.26379395 466.25888062]
[577.09252930 478.12802124]
[567.63159180 489.76757812]
[557.88677979 501.17050171]
[547.86395264 512.32989502]
[537.56927490 523.23895264]
[527.00891113 533.89105225]
[516.18933105 544.27978516]
[505.11706543 554.39874268]
[493.79885864 564.24188232]
[482.24160767 573.80316162]
[470.45227051 583.07678223]
[458.43804932 592.05712891]
[446.20620728 600.73876953]
[433.76419067 609.11639404]
[421.11953735 617.18499756]
[408.27993774 624.93957520]
[395.25320435 632.37542725]
[382.04721069 639.48809814]
[368.66998291 646.27325439]
[355.12963867 652.72680664]
[341.43441772 658.84478760]
[327.59262085 664.62347412]
[313.61267090 670.05938721]
[299.50302124 675.14923096]
[285.27224731 679.88989258]
[270.92901611 684.27850342]
[256.48199463 688.31237793]
[241.93997192 691.98913574]
[227.31179810 695.30645752]
[212.60632324 698.26239014]
[197.83247375 700.85510254]
[182.99925232 703.08306885]
[168.11563110 704.94488525]
[153.19064331 706.43945312]
[138.23338318 707.56585693]
[123.25290680 708.32342529]
[108.25831604 708.71166992]
[93.25870514 708.73034668]
[78.26319122 708.37945557]
[63.28087234 707.65924072]
[48.32084656 706.57012939]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 41]
[29 40]
[30 39]
] def

init

% Start Annotations
28 41 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
28 41 1 gmark
41 cmark
29 40 3 gmark
29 cmark
30 39 4 gmark
30 cmark
39 cmark

% End Annotations
showpage
end
%%EOF
