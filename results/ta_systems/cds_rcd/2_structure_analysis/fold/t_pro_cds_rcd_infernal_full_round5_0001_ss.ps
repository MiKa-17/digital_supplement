%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Dec 24 00:55:44 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGAUAAUUUUUUACUUAAUGUAUUAGCUAGUUUAACUGCUAGUUUAAUAGUUUACUUAAUUAGUAAAUUAUUUAAAAAA_GUAAAAAGCCACUC______UGGCA____CUA_AGAGUGGCUUGGA_AUUUGAUUUUAAAAUCAAGUUCCAUAAAAAUAAA____________________________________________________________________________________________\
_______________\
) } def
/len { sequence length } bind def

/coor [
[18.15617180 712.87634277]
[3.31369853 710.71075439]
[-11.47187519 708.18572998]
[-26.19184875 705.30279541]
[-40.83755875 702.06365967]
[-55.40039062 698.47021484]
[-69.87176514 694.52453613]
[-84.24317932 690.22900391]
[-98.50616455 685.58618164]
[-112.65232849 680.59869385]
[-126.67335510 675.26953125]
[-140.56098938 669.60186768]
[-154.30703735 663.59893799]
[-167.90344238 657.26440430]
[-181.34219360 650.60186768]
[-194.61537170 643.61535645]
[-207.71516418 636.30889893]
[-220.63388062 628.68682861]
[-233.36390686 620.75366211]
[-245.89775085 612.51397705]
[-258.22802734 603.97277832]
[-270.34750366 595.13488770]
[-282.24902344 586.00567627]
[-293.92559814 576.59045410]
[-305.37036133 566.89477539]
[-316.57653809 556.92431641]
[-327.53759766 546.68493652]
[-338.24703979 536.18273926]
[-349.00622559 546.63452148]
[-359.76541138 557.08630371]
[-357.42712402 572.42620850]
[-364.58184814 586.19537354]
[-378.47845459 593.09924316]
[-393.77343750 590.48321533]
[-404.58551025 579.35314941]
[-406.75726318 563.98876953]
[-399.45358276 550.29809570]
[-385.48287964 543.54534912]
[-370.21719360 546.32714844]
[-359.45800781 535.87536621]
[-348.69885254 525.42358398]
[-358.88632202 514.41430664]
[-368.80374146 503.16113281]
[-378.44531250 491.67071533]
[-387.80529785 479.94979858]
[-396.87820435 468.00531006]
[-405.65872192 455.84423828]
[-414.14163208 443.47375488]
[-422.32202148 430.90115356]
[-430.19500732 418.13381958]
[-437.75598145 405.17926025]
[-445.00048828 392.04510498]
[-451.92425537 378.73907471]
[-458.52322388 365.26901245]
[-464.79351807 351.64285278]
[-470.73144531 337.86859131]
[-476.33349609 323.95437622]
[-481.59637451 309.90832520]
[-486.51699829 295.73876953]
[-491.09246826 281.45404053]
[-495.32006836 267.06250000]
[-499.19732666 252.57264709]
[-502.72198486 237.99301147]
[-505.89193726 223.33216858]
[-508.70532227 208.59873962]
[-511.16049194 193.80140686]
[-513.25598145 178.94886780]
[-514.99060059 164.04988098]
[-516.36334229 149.11318970]
[-517.37329102 134.14759827]
[-518.01995850 119.16191864]
[-518.30291748 104.16495514]
[-518.22204590 89.16554260]
[-517.77728271 74.17250824]
[-516.96905518 59.19467163]
[-515.79766846 44.24084854]
[-514.26391602 29.31983757]
[-512.36871338 14.44042206]
[-510.11309814 -0.38864309]
[-507.49844360 -15.15863037]
[-504.52627563 -29.86084747]
[-501.19836426 -44.48664474]
[-497.51663208 -59.02740860]
[-493.48330688 -73.47459412]
[-489.10067749 -87.81968689]
[-484.37139893 -102.05424500]
[-479.29821777 -116.16989899]
[-473.88412476 -130.15834045]
[-468.13232422 -144.01133728]
[-462.04614258 -157.72073364]
[-455.62924194 -171.27847290]
[-448.88534546 -184.67655945]
[-441.81842041 -197.90711975]
[-434.43264771 -210.96235657]
[-426.73239136 -223.83460999]
[-418.72213745 -236.51628113]
[-410.40661621 -248.99990845]
[-401.79074097 -261.27816772]
[-392.87954712 -273.34381104]
[-383.67831421 -285.18975830]
[-374.19244385 -296.80899048]
[-364.42752075 -308.19473267]
[-354.38925171 -319.34027100]
[-344.08361816 -330.23898315]
[-333.51663208 -340.88455200]
[-322.69451904 -351.27062988]
[-311.62365723 -361.39117432]
[-300.31057739 -371.24017334]
[-288.76190186 -380.81185913]
[-276.98443604 -390.10058594]
[-264.98513794 -399.10089111]
[-252.77104187 -407.80749512]
[-240.34934998 -416.21524048]
[-227.72735596 -424.31921387]
[-214.91250610 -432.11462402]
[-201.91232300 -439.59689331]
[-188.73448181 -446.76159668]
[-175.38671875 -453.60455322]
[-161.87689209 -460.12173462]
[-148.21295166 -466.30926514]
[-134.40293884 -472.16354370]
[-120.45497894 -477.68109131]
[-106.37728882 -482.85870361]
[-92.17814636 -487.69329834]
[-77.86591339 -492.18203735]
[-63.44900513 -496.32229614]
[-48.93590546 -500.11160278]
[-34.33516312 -503.54779053]
[-19.65536499 -506.62875366]
[-4.90515041 -509.35275269]
[9.90679932 -511.71813965]
[24.77176857 -513.72351074]
[39.68100739 -515.36773682]
[54.62574387 -516.64984131]
[69.59718323 -517.56903076]
[84.58651733 -518.12481689]
[99.58491516 -518.31683350]
[114.58356476 -518.14495850]
[129.57362366 -517.60931396]
[144.54629517 -516.71020508]
[159.49273682 -515.44818115]
[174.40415955 -513.82397461]
[189.27182007 -511.83853149]
[204.08692932 -509.49304199]
[218.84078979 -506.78884888]
[233.52470398 -503.72760010]
[248.13005066 -500.31103516]
[262.64822388 -496.54119873]
[277.07067871 -492.42031860]
[291.38891602 -487.95080566]
[305.59454346 -483.13525391]
[319.67916870 -477.97656250]
[333.63452148 -472.47775269]
[347.45239258 -466.64202881]
[361.12463379 -460.47283936]
[374.64318848 -453.97381592]
[388.00012207 -447.14877319]
[401.18759155 -440.00173950]
[414.19778442 -432.53695679]
[427.02310181 -424.75875854]
[439.65597534 -416.67172241]
[452.08892822 -408.28067017]
[464.31472778 -399.59048462]
[476.32608032 -390.60629272]
[488.11599731 -381.33337402]
[499.67752075 -371.77722168]
[511.00381470 -361.94342041]
[522.08825684 -351.83773804]
[532.92431641 -341.46618652]
[543.50555420 -330.83483887]
[553.82586670 -319.94995117]
[563.87902832 -308.81793213]
[573.65924072 -297.44531250]
[583.16070557 -285.83880615]
[592.37786865 -274.00521851]
[601.30523682 -261.95156860]
[609.93756104 -249.68487549]
[618.26983643 -237.21241760]
[626.29711914 -224.54151917]
[634.01464844 -211.67962646]
[641.41796875 -198.63430786]
[648.50262451 -185.41325378]
[655.26452637 -172.02423096]
[661.69964600 -158.47511292]
[667.80419922 -144.77391052]
[673.57458496 -130.92864990]
[679.00744629 -116.94748688]
[684.09960938 -102.83865356]
[688.84796143 -88.61045074]
[693.24987793 -74.27125549]
[697.30261230 -59.82950211]
[701.00384521 -45.29369354]
[704.35137939 -30.67237854]
[707.34326172 -15.97416496]
[709.97772217 -1.20770192]
[712.25329590 13.61832142]
[714.16845703 28.49517822]
[715.72222900 43.41411591]
[716.91369629 58.36635208]
[717.74206543 73.34309387]
[718.20690918 88.33551788]
[718.30798340 103.33480835]
[718.04510498 118.33213806]
[717.41857910 133.31867981]
[716.42871094 148.28561401]
[715.07604980 163.22412109]
[713.36145020 178.12542725]
[711.28588867 192.98077393]
[708.85058594 207.78138733]
[706.05694580 222.51856995]
[702.90673828 237.18365479]
[699.40161133 251.76800537]
[695.54382324 266.26306152]
[691.33557129 280.66024780]
[686.77929688 294.95114136]
[681.87768555 309.12728882]
[676.63366699 323.18035889]
[671.05029297 337.10211182]
[665.13085938 350.88433838]
[658.87890625 364.51889038]
[652.29797363 377.99780273]
[645.39208984 391.31311035]
[638.16522217 404.45697021]
[630.62164307 417.42166138]
[622.76580811 430.19958496]
[614.60235596 442.78317261]
[606.13598633 455.16500854]
[597.37182617 467.33786011]
[588.31494141 479.29452515]
[578.97070312 491.02798462]
[569.34460449 502.53134155]
[559.44232178 513.79779053]
[549.26959229 524.82073975]
[538.83251953 535.59368896]
[528.13720703 546.11029053]
[517.18994141 556.36437988]
[505.99713135 566.34985352]
[494.56539917 576.06091309]
[482.90148926 585.49182129]
[471.01223755 594.63702393]
[458.90466309 603.49114990]
[446.58584595 612.04895020]
[434.06307983 620.30541992]
[421.34371948 628.25567627]
[408.43527222 635.89508057]
[395.34530640 643.21911621]
[382.08151245 650.22344971]
[368.65173340 656.90405273]
[355.06384277 663.25683594]
[341.32586670 669.27819824]
[327.44586182 674.96453857]
[313.43200684 680.31256104]
[299.29254150 685.31903076]
[285.03582764 689.98101807]
[270.67019653 694.29583740]
[256.20413208 698.26092529]
[241.64613342 701.87390137]
[227.00479126 705.13275146]
[212.28869629 708.03546143]
[197.50653076 710.58032227]
[182.66697693 712.76586914]
[167.77877808 714.59082031]
[152.85069275 716.05407715]
[137.89151001 717.15484619]
[122.91001892 717.89239502]
[107.91504669 718.26629639]
[92.91542053 718.27636719]
[77.91996765 717.92260742]
[62.93750000 717.20520020]
[47.97684479 716.12451172]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[28 41]
[29 40]
[30 39]
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
28 41 10 gmark
41 cmark
29 40 14 gmark
29 cmark
30 39 59 gmark
30 cmark
39 cmark

% End Annotations
showpage
end
%%EOF
