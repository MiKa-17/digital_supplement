%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan  8 17:26:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAAGAACUACAAUCUAUUUAGCCGUAGAGUGAAGUUCAUAAUAAACACAAU_______UAUUUAUUCUUUUUGAACUUGAUUUUAAAUUCAAAUCCCAAGUCACUCUUAGU_CCAG________________\
) } def
/len { sequence length } bind def

/coor [
[214.80783081 127.24243927]
[203.74958801 117.10063934]
[193.33021545 106.30354309]
[183.58843994 94.89131927]
[174.56053162 82.90642548]
[166.28005981 70.39344025]
[153.28968811 77.89344025]
[140.29930115 85.39344025]
[127.30892181 92.89344025]
[114.31854248 100.39344025]
[107.16197205 112.40489960]
[93.18145752 112.59693909]
[80.19107819 120.09693909]
[72.10842896 133.69772339]
[57.21763611 133.36065674]
[44.22725677 140.86065674]
[31.23687553 148.36065674]
[18.24649429 155.86065674]
[5.25611353 163.36065674]
[1.40826988 178.68937683]
[-12.19433498 186.73579407]
[-27.48151588 182.72610474]
[-35.38365936 169.03918457]
[-31.21256638 153.79524231]
[-17.44286919 146.03825378]
[-2.24388647 150.37028503]
[10.74649429 142.87028503]
[23.73687553 135.37028503]
[36.72725677 127.87028503]
[49.71763611 120.37028503]
[56.87112808 107.30594635]
[72.69107819 107.10655975]
[85.68145752 99.60655975]
[92.83802795 87.59510040]
[106.81854248 87.40306091]
[119.80892181 79.90306091]
[132.79930115 72.40306091]
[145.78968811 64.90306091]
[158.78005981 57.40306091]
[152.08374023 43.97547150]
[146.21847534 30.16462708]
[141.20608521 16.02189827]
[137.06521606 1.59989822]
[133.81126404 -13.04771996]
[131.45635986 -27.86646652]
[130.00924683 -42.80121613]
[129.47529602 -57.79640579]
[129.85652161 -72.79625702]
[131.15148926 -87.74496460]
[133.35537720 -102.58692169]
[136.46000671 -117.26691437]
[140.45379639 -131.73033142]
[145.32191467 -145.92337036]
[151.04624939 -159.79322815]
[157.60549927 -173.28829956]
[164.97526550 -186.35839844]
[173.12812805 -198.95489502]
[182.03376770 -211.03092957]
[191.65904236 -222.54156494]
[201.96813965 -233.44401550]
[212.92272949 -243.69767761]
[224.48205566 -253.26445007]
[236.60310364 -262.10870361]
[249.24078369 -270.19757080]
[262.34808350 -277.50094604]
[275.87628174 -283.99166870]
[289.77499390 -289.64556885]
[303.99252319 -294.44165039]
[318.47601318 -298.36203003]
[333.17156982 -301.39215088]
[348.02450562 -303.52072144]
[362.97961426 -304.73983765]
[377.98120117 -305.04498291]
[392.97348022 -304.43496704]
[407.90069580 -302.91213989]
[422.70730591 -300.48208618]
[437.33822632 -297.15390015]
[451.73904419 -292.93991089]
[465.85617065 -287.85586548]
[479.63708496 -281.92059326]
[493.03054810 -275.15625000]
[505.98669434 -267.58798218]
[518.45733643 -259.24389648]
[530.39611816 -250.15509033]
[541.75860596 -240.35534668]
[552.50250244 -229.88111877]
[562.58789062 -218.77139282]
[571.97717285 -207.06747437]
[580.63549805 -194.81292725]
[588.53063965 -182.05331421]
[595.63323975 -168.83612061]
[601.91680908 -155.21049500]
[607.35803223 -141.22715759]
[611.93670654 -126.93810272]
[615.63568115 -112.39649963]
[618.44128418 -97.65643311]
[620.34301758 -82.77274323]
[621.33386230 -67.80080414]
[621.41009521 -52.79629898]
[620.57147217 -37.81505966]
[618.82110596 -22.91281128]
[616.16546631 -8.14499187]
[612.61450195 6.43345976]
[608.18133545 20.76831055]
[602.88250732 34.80623627]
[596.73773193 48.49501038]
[589.76983643 61.78371048]
[582.00476074 74.62290192]
[573.47143555 86.96482849]
[564.20159912 98.76356506]
[554.22961426 109.97522736]
[543.59271240 120.55810547]
[532.33044434 130.47282410]
[520.48468018 139.68251038]
[508.09945679 148.15289307]
[495.22088623 155.85247803]
[481.89688110 162.75259399]
[468.17700195 168.82760620]
[454.11230469 174.05488586]
[439.75506592 178.41500854]
[425.15872192 181.89173889]
[410.37756348 184.47213745]
[395.46658325 186.14663696]
[380.48129272 186.90896606]
[365.47735596 186.75633240]
[350.51065063 185.68925476]
[335.63684082 183.71174622]
[320.91125488 180.83114624]
[306.38867188 177.05816650]
[292.12310791 172.40686035]
[278.16766357 166.89450073]
[264.57421875 160.54162598]
[251.39334106 153.37184143]
[238.67410278 145.41183472]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 39]
[7 38]
[8 37]
[9 36]
[10 35]
[12 33]
[13 32]
[15 30]
[16 29]
[17 28]
[18 27]
[19 26]
] def

init

% Start Annotations
6 39 0.0 1 colorpair
7 38 0.0 1 colorpair
8 37 0.16 1 colorpair
9 36 0.0 1 colorpair
10 35 0.0 1 colorpair
12 33 0.0 1 colorpair
13 32 0.0 1 colorpair
15 30 0.0 1 colorpair
16 29 0.0 0.6 colorpair
17 28 0.0 1 colorpair
18 27 0.0 1 colorpair
19 26 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
8 cmark
16 29 1 gmark
19 26 2 gmark

% End Annotations
showpage
end
%%EOF
