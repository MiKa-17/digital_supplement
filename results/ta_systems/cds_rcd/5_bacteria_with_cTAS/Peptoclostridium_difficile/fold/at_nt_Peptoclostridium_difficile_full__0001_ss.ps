%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan  8 17:27:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAAGA_ACUACAAUCUAUUUUGCGGUAGAGUGAAGUUC__AUAAUUAAAUGAAACUAUUUGUUCUUAUGGAACUUGAUUUUAAAAUCAAAUUCCCAGCCACUCUUACUC________GAGUGG______\
) } def
/len { sequence length } bind def

/coor [
[168.22938538 152.03878784]
[157.66265869 142.27058411]
[147.79855347 131.79304504]
[138.68460083 120.65657806]
[130.36466980 108.91479492]
[122.87885284 96.62419128]
[109.54631805 103.49758911]
[104.33351135 109.75666046]
[95.81371307 110.37164307]
[82.32138062 116.92581177]
[68.82905579 123.47998047]
[59.79673386 136.46949768]
[44.96792603 135.07099915]
[31.47559929 141.62516785]
[22.44327545 154.61468506]
[7.61447001 153.21618652]
[-5.87785673 159.77035522]
[-19.37018394 166.32452393]
[-32.86251068 172.87869263]
[-35.44858170 188.17875671]
[-46.55743790 199.01263428]
[-61.91749954 201.21447754]
[-75.62250519 193.93765259]
[-82.40261078 179.98020935]
[-79.65071106 164.70910645]
[-68.42498779 153.99638367]
[-53.04194260 151.96128845]
[-39.41667938 159.38636780]
[-25.92435074 152.83219910]
[-12.43202496 146.27803040]
[1.06030238 139.72386169]
[9.12756538 127.20314026]
[24.92143250 128.13284302]
[38.41376114 121.57867432]
[46.48102188 109.05795288]
[62.27489090 109.98765564]
[75.76721954 103.43348694]
[89.25954437 96.87931824]
[102.67292023 90.16506195]
[116.00545502 83.29166412]
[109.85430145 68.80990601]
[104.81871033 53.90380096]
[100.92761993 38.65913391]
[98.20336914 23.16364479]
[96.66161346 7.50650883]
[96.31115723 -8.22217083]
[97.15399933 -23.93188286]
[99.18523407 -39.53223038]
[102.39312744 -54.93344116]
[106.75919342 -70.04689789]
[112.25825500 -84.78565216]
[118.85862732 -99.06489563]
[126.52230072 -112.80247498]
[135.20512390 -125.91935730]
[144.85711670 -138.34008789]
[155.42268372 -149.99322510]
[166.84100342 -160.81172180]
[179.04632568 -170.73336792]
[191.96841431 -179.70111084]
[205.53286743 -187.66334534]
[219.66160583 -194.57432556]
[234.27331543 -200.39430237]
[249.28390503 -205.08981323]
[264.60696411 -208.63391113]
[280.15429688 -211.00621033]
[295.83648682 -212.19311523]
[311.56323242 -212.18785095]
[327.24404907 -210.99046326]
[342.78869629 -208.60789490]
[358.10775757 -205.05389404]
[373.11306763 -200.34896851]
[387.71826172 -194.52023315]
[401.83938599 -187.60124207]
[415.39514160 -179.63188171]
[428.30755615 -170.65802002]
[440.50231934 -160.73135376]
[451.90936279 -149.90901184]
[463.00863647 -159.99891663]
[474.10791016 -170.08882141]
[485.20715332 -180.17872620]
[496.30642700 -190.26863098]
[500.78164673 -206.04534912]
[516.74633789 -209.79515076]
[527.77740479 -197.66058350]
[522.52703857 -182.12463379]
[506.39633179 -179.16937256]
[495.29705811 -169.07946777]
[484.19781494 -158.98956299]
[473.09854126 -148.89965820]
[461.99926758 -138.80973816]
[470.89736938 -127.51131439]
[478.99075317 -115.62290955]
[486.24038696 -103.20174408]
[492.61135864 -90.30760956]
[498.07299805 -77.00256348]
[502.59896851 -63.35063934]
[506.16741943 -49.41754913]
[508.76123047 -35.27036667]
[510.36782837 -20.97718048]
[510.97946167 -6.60680056]
[510.59317017 7.77159739]
[509.21075439 22.08879471]
[506.83889771 36.27587128]
[503.48895264 50.26451874]
[499.17700195 63.98739624]
[493.92382812 77.37843323]
[487.75466919 90.37315369]
[480.69918823 102.90899658]
[472.79135132 114.92559814]
[464.06918335 126.36508942]
[454.57464600 137.17239380]
[444.35342407 147.29545593]
[433.45474243 156.68554688]
[421.93099976 165.29742432]
[409.83767700 173.08961487]
[397.23300171 180.02458191]
[384.17758179 186.06890869]
[370.73428345 191.19349670]
[356.96783447 195.37362671]
[342.94445801 198.58917236]
[328.73165894 200.82460022]
[314.39788818 202.06915283]
[300.01211548 202.31678772]
[285.64361572 201.56629944]
[271.36154175 199.82127380]
[257.23464966 197.09007263]
[243.33093262 193.38583374]
[229.71737671 188.72634888]
[216.45950317 183.13401794]
[203.62112427 176.63575745]
[191.26408386 169.26280212]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 40]
[7 39]
[9 38]
[10 37]
[11 36]
[13 34]
[14 33]
[16 31]
[17 30]
[18 29]
[19 28]
[77 90]
[78 89]
[79 88]
[80 87]
[81 86]
] def

init

% Start Annotations
6 40 0.16 1 colorpair
7 39 0.0 1 colorpair
9 38 0.0 1 colorpair
10 37 0.0 1 colorpair
11 36 0.0 1 colorpair
13 34 0.0 1 colorpair
14 33 0.0 1 colorpair
16 31 0.0 1 colorpair
17 30 0.0 1 colorpair
18 29 0.0 1 colorpair
19 28 0.0 1 colorpair
77 90 0.0 1 colorpair
78 89 0.0 0.2 colorpair
79 88 0.0 1 colorpair
80 87 0.16 0.2 colorpair
81 86 0.32 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
40 cmark
78 89 2 gmark
80 87 2 gmark
80 cmark
87 cmark
81 86 2 gmark
81 cmark
86 cmark

% End Annotations
showpage
end
%%EOF
