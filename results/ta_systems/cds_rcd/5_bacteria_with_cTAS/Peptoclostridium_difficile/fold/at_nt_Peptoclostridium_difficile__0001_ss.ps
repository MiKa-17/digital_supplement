%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Jan  8 17:27:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAAGA_ACUACAAUCUAUUUUGCCGUAGAGUGAAGUUC__AUAAUUAAAUAAAAAUAUUUUUUUUUAUUAAACUUGAUUUUUAAAUCAAACUCAAAGUCACUCUUG________CCAGAGUGG______\
) } def
/len { sequence length } bind def

/coor [
[60.46633148 226.17919922]
[42.42488480 219.03448486]
[25.62338638 209.32621765]
[10.42367649 197.26347351]
[-2.84690094 183.10606384]
[-13.90254974 167.15885925]
[-27.23508072 174.03225708]
[-33.50402069 180.81245422]
[-40.96768951 180.90631104]
[-54.46001816 187.46046448]
[-67.95234680 194.01463318]
[-76.98467255 207.00416565]
[-91.81347656 205.60566711]
[-105.30580139 212.15983582]
[-114.33812714 225.14935303]
[-129.16693115 223.75085449]
[-142.65925598 230.30502319]
[-156.15158081 236.85919189]
[-169.64390564 243.41334534]
[-172.22998047 258.71340942]
[-183.33883667 269.54730225]
[-198.69889832 271.74914551]
[-212.40391541 264.47229004]
[-219.18400574 250.51487732]
[-216.43211365 235.24377441]
[-205.20639038 224.53103638]
[-189.82334900 222.49594116]
[-176.19807434 229.92102051]
[-162.70574951 223.36685181]
[-149.21342468 216.81268311]
[-135.72109985 210.25852966]
[-127.65383911 197.73779297]
[-111.85997009 198.66749573]
[-98.36764526 192.11332703]
[-90.30037689 179.59260559]
[-74.50651550 180.52230835]
[-61.01418686 173.96813965]
[-47.52185822 167.41397095]
[-34.10847855 160.69972229]
[-20.77594757 153.82632446]
[-24.55157852 144.39602661]
[-27.59214211 134.70370483]
[-29.87969589 124.80658722]
[-31.40073967 114.76306152]
[-32.14629364 104.63241577]
[-32.11196136 94.47442627]
[-31.29794312 84.34904480]
[-29.70904350 74.31603241]
[-27.35464096 64.43460083]
[-24.24862862 54.76306152]
[-20.40933800 45.35850143]
[-15.85942841 36.27641678]
[-10.62575054 27.57040977]
[-4.73919249 19.29186058]
[1.76550484 11.48962593]
[8.84995270 4.20975447]
[16.47234154 -2.50479221]
[24.58768463 -8.61438656]
[33.14808655 -14.08297062]
[42.10303116 -18.87827110]
[51.39966583 -22.97198868]
[60.98312759 -26.33996201]
[70.79685211 -28.96231461]
[80.78292847 -30.82357025]
[90.88241577 -31.91274261]
[101.03570557 -32.22340775]
[111.18289185 -31.75372887]
[121.26407623 -30.50647926]
[131.21977234 -28.48901939]
[140.99121094 -25.71325684]
[150.52073669 -22.19557190]
[159.75210571 -17.95672417]
[168.63082886 -13.02173233]
[177.10450745 -7.41971922]
[185.12315369 -1.18374741]
[192.63941956 5.64938068]
[203.73869324 -4.44052505]
[214.83796692 -14.53043079]
[225.93724060 -24.62033653]
[237.03649902 -34.71024323]
[248.13577271 -44.80014801]
[252.61097717 -60.57685852]
[268.57565308 -64.32666779]
[279.60671997 -52.19209671]
[274.35635376 -36.65615082]
[258.22567749 -33.70087814]
[247.12641907 -23.61097145]
[236.02714539 -13.52106571]
[224.92787170 -3.43116021]
[213.82859802 6.65874529]
[202.72932434 16.74865150]
[213.39352417 31.98520470]
[221.81451416 48.56725311]
[227.82571411 66.16677094]
[231.30822754 84.43558502]
[232.19314575 103.01229858]
[230.46296692 121.52942657]
[226.15191650 139.62065125]
[219.34527588 156.92808533]
[210.17770386 173.10934448]
[222.18582153 182.09849548]
[234.19393921 191.08766174]
[246.20205688 200.07682800]
[258.21017456 209.06599426]
[270.21829224 218.05516052]
[283.27343750 210.26850891]
[298.31533813 208.07550049]
[313.05026245 211.81056213]
[325.23120117 220.90412903]
[333.00067139 233.96949768]
[335.17388916 249.01428223]
[331.41946411 263.74426270]
[322.30987549 275.91323853]
[309.23431396 283.66552734]
[294.18667603 285.81893921]
[279.46163940 282.04513550]
[267.30465698 272.91955566]
[259.56958008 259.83380127]
[257.43594360 244.78334045]
[261.22912598 230.06327820]
[249.22102356 221.07411194]
[237.21289062 212.08494568]
[225.20477295 203.09577942]
[213.19665527 194.10661316]
[201.18853760 185.11746216]
[187.64143372 199.01049805]
[172.20687866 210.77124023]
[155.21725464 220.14639282]
[137.03846741 226.93405151]
[118.06200409 230.98803711]
[98.69655609 232.22103882]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 40]
[7 39]
[9 38]
[10 37]
[11 36]
[13 34]
[14 33]
[16 31]
[17 30]
[18 29]
[19 28]
[76 91]
[77 90]
[78 89]
[79 88]
[80 87]
[81 86]
[100 125]
[101 124]
[102 123]
[103 122]
[104 121]
[105 120]
] def

init

% Start Annotations
6 40 0.16 1 colorpair
7 39 0.0 1 colorpair
9 38 0.0 1 colorpair
10 37 0.0 1 colorpair
11 36 0.0 1 colorpair
13 34 0.0 1 colorpair
14 33 0.0 1 colorpair
16 31 0.0 1 colorpair
17 30 0.0 1 colorpair
18 29 0.0 1 colorpair
19 28 0.0 1 colorpair
76 91 0.0 0.2 colorpair
77 90 0.0 1 colorpair
78 89 0.0 0.2 colorpair
79 88 0.0 1 colorpair
80 87 0.16 0.2 colorpair
81 86 0.32 0.2 colorpair
100 125 0.16 0.6 colorpair
101 124 0.0 0.2 colorpair
102 123 0.0 0.6 colorpair
103 122 0.0 0.6 colorpair
104 121 0.0 0.6 colorpair
105 120 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
40 cmark
76 91 2 gmark
78 89 2 gmark
80 87 2 gmark
80 cmark
87 cmark
81 86 2 gmark
81 cmark
86 cmark
100 125 1 gmark
100 cmark
101 124 2 gmark
102 123 1 gmark
103 122 1 gmark
104 121 1 gmark
105 120 1 gmark
105 cmark

% End Annotations
showpage
end
%%EOF
