%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Dec 23 22:48:15 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAAGAACUACAAUCUAUUUUGCUGUAGAGUGGAGUUCA_UAAUUUAGAA_AUUACUUAGUUUUAUGGAAUCUGAUUUUUAAAUCAAAUUCCCAACCACUCUUAGUUGCCGCUUUGAGUGGUUUUUU\
) } def
/len { sequence length } bind def

/coor [
[89.55850220 170.99029541]
[76.96977234 162.83407593]
[69.85641479 149.62800598]
[69.97241974 134.62846375]
[77.28919220 121.53399658]
[90.00140381 113.57382965]
[76.66127014 120.43246460]
[63.32114029 127.29109955]
[49.98100662 134.14973450]
[36.64087296 141.00837708]
[27.90562057 154.19950867]
[13.04890060 153.13784790]
[-0.29123166 159.99647522]
[-9.02648544 173.18760681]
[-23.88320541 172.12594604]
[-37.22333908 178.98458862]
[-50.56346893 185.84321594]
[-63.90360260 192.70185852]
[-77.24373627 199.56048584]
[-81.83333588 214.68368530]
[-95.81156921 222.05827332]
[-110.88539886 217.30903625]
[-118.11178589 203.25361633]
[-113.20344543 188.23085022]
[-99.07241058 181.15345764]
[-84.10237122 186.22035217]
[-70.76223755 179.36172485]
[-57.42210388 172.50308228]
[-44.08197403 165.64445496]
[-30.74184036 158.78581238]
[-22.96076202 146.08526611]
[-7.14986658 146.65634155]
[6.19026566 139.79771423]
[13.97134399 127.09715271]
[29.78223991 127.66824341]
[43.12237167 120.80960846]
[56.46250534 113.95097351]
[69.80263519 107.09233856]
[83.14276886 100.23370361]
[69.18714905 105.73285675]
[54.40180588 108.26141357]
[39.41185760 107.71244049]
[24.85107231 104.10916901]
[11.33508396 97.60393524]
[-0.56465399 88.47178650]
[-10.34502220 77.09881592]
[-17.59250832 63.96588135]
[-22.00069046 49.62824249]
[-23.38318825 34.69208527]
[-21.68155289 19.78891754]
[-16.96772575 5.54883957]
[-9.44101143 -7.42608118]
[0.58036417 -18.58726501]
[12.67269802 -27.46281815]
[26.32472801 -33.67748642]
[40.95924759 -36.96850967]
[55.95751190 -37.19674683]
[70.68539429 -34.35254669]
[84.52020264 -28.55616188]
[96.87700653 -20.05266190]
[107.23335266 -9.20157719]
[115.15138245 3.53831172]
[120.29632568 17.62836456]
[122.45064545 32.47285461]
[121.52326202 47.44416046]
[117.55339050 61.90929413]
[110.70886993 75.25667572]
[101.28102112 86.92002869]
[111.82284546 76.24904633]
[122.36467743 65.57806396]
[132.90650940 54.90708542]
[143.44833374 44.23610306]
[147.64263916 28.98099136]
[162.09152222 25.36451149]
[172.63334656 14.69353008]
[183.17517090 4.02254868]
[193.71701050 -6.64843321]
[204.25883484 -17.31941414]
[207.88098145 -33.31354141]
[223.62142944 -37.91465378]
[235.28776550 -26.38952065]
[230.87864685 -10.59421062]
[214.92980957 -6.77758598]
[204.38798523 3.89339566]
[193.84616089 14.56437683]
[183.30433655 25.23535919]
[172.76249695 35.90634155]
[169.32221985 50.39819336]
[154.11932373 54.77793121]
[143.57748413 65.44891357]
[133.03565979 76.11989594]
[122.49382782 86.79087830]
[111.95200348 97.46186066]
[116.79122162 99.43145752]
[121.16926575 103.01688385]
[133.36860657 111.74476624]
[145.56796265 120.47264862]
[157.76730347 129.20053101]
[169.96664429 137.92842102]
[182.16600037 146.65629578]
[194.36534119 155.38418579]
[206.56468201 164.11206055]
[221.95823669 161.72955322]
[234.20578003 170.75465393]
[236.38227844 185.44473267]
[248.58161926 194.17260742]
[260.78097534 202.90049744]
[277.14611816 203.95608521]
[284.17095947 218.77442932]
[274.62899780 232.11167908]
[258.33612061 230.24763489]
[252.05308533 215.09983826]
[239.85374451 206.37194824]
[227.65438843 197.64407349]
[213.04837036 200.32728577]
[200.55216980 191.64974976]
[197.83680725 176.31141663]
[185.63745117 167.58352661]
[173.43811035 158.85565186]
[161.23876953 150.12776184]
[149.03941345 141.39987183]
[136.84007263 132.67199707]
[124.64072418 123.94410706]
[112.44138336 115.21622467]
[123.85981750 124.94347382]
[129.19148254 138.96394348]
[127.12170410 153.82044983]
[118.16084290 165.84970093]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 39]
[7 38]
[8 37]
[9 36]
[10 35]
[12 33]
[13 32]
[15 30]
[16 29]
[17 28]
[18 27]
[19 26]
[68 93]
[69 92]
[70 91]
[71 90]
[72 89]
[74 87]
[75 86]
[76 85]
[77 84]
[78 83]
[95 124]
[96 123]
[97 122]
[98 121]
[99 120]
[100 119]
[101 118]
[102 117]
[105 114]
[106 113]
[107 112]
] def

init

% Start Annotations
6 39 0.0 0.6 colorpair
7 38 0.0 1 colorpair
8 37 0.16 1 colorpair
9 36 0.0 1 colorpair
10 35 0.0 1 colorpair
12 33 0.0 1 colorpair
13 32 0.0 1 colorpair
15 30 0.0 1 colorpair
16 29 0.0 1 colorpair
17 28 0.0 1 colorpair
18 27 0.0 1 colorpair
19 26 0.0 0.6 colorpair
68 93 0.0 1 colorpair
69 92 0.0 1 colorpair
70 91 0.0 1 colorpair
71 90 0.0 1 colorpair
72 89 0.16 1 colorpair
74 87 0.0 1 colorpair
75 86 0.0 0.6 colorpair
76 85 0.0 1 colorpair
77 84 0.0 1 colorpair
78 83 0.0 1 colorpair
95 124 0.0 1 colorpair
96 123 0.0 1 colorpair
97 122 0.0 1 colorpair
98 121 0.0 1 colorpair
99 120 0.0 1 colorpair
100 119 0.0 1 colorpair
101 118 0.0 1 colorpair
102 117 0.0 1 colorpair
105 114 0.0 1 colorpair
106 113 0.0 1 colorpair
107 112 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
6 39 1 gmark
8 cmark
19 26 1 gmark
72 cmark
89 cmark
75 86 1 gmark

% End Annotations
showpage
end
%%EOF
