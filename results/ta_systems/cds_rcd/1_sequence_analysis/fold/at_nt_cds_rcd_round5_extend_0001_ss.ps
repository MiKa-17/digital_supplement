%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Dec 23 22:59:28 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAAGAACUACAAUCUAUUUUGCAGUAGAGUGGAGUUCAUAAUUUAAA________AA_UUAUUUAAAUUUAUGGAACUUGAUUUUAAAAUCAAAUUCCCAACCACUCUUAGUUGCCCCUUUGAGUGGUUUUUU______\
) } def
/len { sequence length } bind def

/coor [
[214.70884705 117.02855682]
[203.35687256 108.46664429]
[192.62628174 99.13742828]
[182.56886292 89.08589172]
[173.23312378 78.36046600]
[164.66409302 67.01286316]
[152.07800293 75.17317200]
[139.49192810 83.33347321]
[126.90584564 91.49378204]
[114.31977081 99.65409088]
[107.79251862 112.01882172]
[93.84053802 112.93199158]
[81.25445557 121.09230042]
[73.88436890 135.09202576]
[58.99602127 135.52377319]
[46.40994263 143.68408203]
[33.82386398 151.84437561]
[21.23778343 160.00468445]
[20.54876137 175.50645447]
[10.85331154 187.62164307]
[-4.12047005 191.69172668]
[-18.61485672 186.15165710]
[-27.05646324 173.13171387]
[-26.19931602 157.63832092]
[-16.37301064 145.62902832]
[-1.35595751 141.72163391]
[13.07747746 147.41860962]
[25.66355705 139.25830078]
[38.24963760 131.09799194]
[50.83571625 122.93769073]
[57.30556488 109.52164459]
[73.09415436 108.50621796]
[85.68022919 100.34590912]
[92.20748138 87.98117828]
[106.15946198 87.06800842]
[118.74554443 78.90769958]
[131.33161926 70.74739838]
[143.91769409 62.58708954]
[156.50378418 54.42678452]
[148.87037659 40.43465042]
[142.34848022 25.89146805]
[136.97756958 10.88536549]
[132.79013062 -4.49272871]
[129.81152344 -20.14963531]
[128.05970764 -35.99048615]
[127.54527283 -51.91930389]
[128.27128601 -67.83958435]
[130.23329163 -83.65487671]
[133.41937256 -99.26937103]
[137.81016541 -114.58847809]
[143.37904358 -129.51939392]
[150.09220886 -143.97167969]
[157.90895081 -157.85778809]
[166.78187561 -171.09362793]
[176.65719604 -183.59902954]
[187.47502136 -195.29824829]
[199.16979980 -206.12043762]
[211.67063904 -216.00009155]
[224.90177917 -224.87734985]
[238.78302002 -232.69850159]
[253.23025513 -239.41618347]
[268.15594482 -244.98974609]
[283.46960449 -249.38546753]
[299.07849121 -252.57675171]
[314.88800049 -254.54431152]
[330.80236816 -255.27629089]
[346.72515869 -254.76826477]
[362.55990601 -253.02339172]
[378.21066284 -250.05227661]
[393.58264160 -245.87295532]
[408.58273315 -240.51081848]
[423.12005615 -233.99836731]
[437.10656738 -226.37510681]
[450.45755005 -217.68727112]
[463.09213257 -207.98753357]
[473.09616089 -219.16427612]
[483.10018921 -230.34100342]
[493.10421753 -241.51773071]
[503.10824585 -252.69445801]
[495.93051147 -266.04571533]
[493.75509644 -281.04714966]
[496.84472656 -295.88729858]
[504.82626343 -308.77413940]
[516.73596191 -318.15151978]
[531.13562012 -322.88705444]
[546.28643799 -322.40893555]
[560.35888672 -316.77487183]
[571.65362549 -306.66522217]
[578.80676270 -293.30078125]
[580.95446777 -278.29534912]
[577.83752441 -263.46090698]
[569.83221436 -250.58880615]
[557.90527344 -241.23339844]
[543.49688721 -236.52439880]
[528.34698486 -237.03045654]
[514.28497314 -242.69042969]
[504.28094482 -231.51370239]
[494.27691650 -220.33697510]
[484.27288818 -209.16023254]
[474.26885986 -197.98350525]
[484.15625000 -187.77711487]
[493.31161499 -176.90901184]
[501.69082642 -165.43159485]
[509.25341797 -153.40017700]
[515.96289062 -140.87275696]
[521.78692627 -127.90972900]
[526.69738770 -114.57360077]
[530.67053223 -100.92865753]
[533.68719482 -87.04068756]
[535.73284912 -72.97664642]
[536.79754639 -58.80435944]
[536.87615967 -44.59215164]
[535.96826172 -30.40855408]
[534.07824707 -16.32196236]
[531.21508789 -2.40030241]
[527.39270020 11.28928947]
[522.62945557 24.68079758]
[516.94824219 37.70963669]
[510.37643433 50.31297684]
[502.94570923 62.43002701]
[494.69192505 74.00234985]
[485.65478516 84.97413635]
[475.87789917 95.29244232]
[465.40835571 104.90751648]
[454.29666138 113.77296448]
[442.59631348 121.84602356]
[430.36373901 129.08773804]
[417.65795898 135.46315002]
[404.54016113 140.94152832]
[391.07360840 145.49639893]
[377.32324219 149.10580444]
[363.35534668 151.75227356]
[349.23724365 153.42304993]
[335.03707886 154.11004639]
[320.82324219 153.80990601]
[306.66430664 152.52406311]
[292.62854004 150.25869751]
[278.78366089 147.02467346]
[265.19638062 142.83758545]
[251.93226624 137.71759033]
[239.05526733 131.68936157]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 39]
[7 38]
[8 37]
[9 36]
[10 35]
[12 33]
[13 32]
[15 30]
[16 29]
[17 28]
[18 27]
[75 100]
[76 99]
[77 98]
[78 97]
[79 96]
] def

init

% Start Annotations
6 39 0.0 0.6 colorpair
7 38 0.0 1 colorpair
8 37 0.16 1 colorpair
9 36 0.0 1 colorpair
10 35 0.0 1 colorpair
12 33 0.0 1 colorpair
13 32 0.0 1 colorpair
15 30 0.0 1 colorpair
16 29 0.0 1 colorpair
17 28 0.0 1 colorpair
18 27 0.16 1 colorpair
75 100 0.16 1 colorpair
76 99 0.0 0.6 colorpair
77 98 0.0 1 colorpair
78 97 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
6 39 1 gmark
8 cmark
18 cmark
75 cmark
100 cmark
76 99 1 gmark
78 97 1 gmark
79 96 3 gmark
79 cmark
96 cmark

% End Annotations
showpage
end
%%EOF
