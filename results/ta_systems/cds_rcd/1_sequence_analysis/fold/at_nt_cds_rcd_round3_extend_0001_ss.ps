%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Dec 23 22:51:49 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAAGAACUACAAUCUAUUUUGCUGUAGAGUGGAGUUCAUAAUUU________AGAAA_UUAUUUAAAUUUAUGGAAUUUGAUUUUAAAAUCAAAUUCCCAACCACUCUUAGUUCCCGCUUUGAGUGGUUUUUU_\
) } def
/len { sequence length } bind def

/coor [
[85.29695892 173.34637451]
[74.25111389 163.19799805]
[68.92616272 149.17498779]
[70.45199585 134.25279236]
[78.50483704 121.59768677]
[91.37581635 113.89494324]
[78.50160217 121.59265137]
[65.62738800 129.29035950]
[52.75318146 136.98806763]
[39.87897110 144.68577576]
[32.00518036 158.40852356]
[17.11097527 158.29913330]
[4.23676443 165.99684143]
[-3.63702607 179.71960449]
[-18.53122902 179.61021423]
[-31.40544128 187.30792236]
[-44.27965164 195.00563049]
[-57.15386200 202.70333862]
[-70.02807617 210.40104675]
[-73.64113617 225.78678894]
[-87.11914825 234.04020691]
[-102.46583557 230.26467896]
[-110.57629395 216.70014954]
[-106.63871765 201.39424133]
[-92.98921204 193.42765808]
[-77.72577667 197.52682495]
[-64.85157013 189.82911682]
[-51.97735977 182.13142395]
[-39.10314941 174.43371582]
[-26.22893715 166.73600769]
[-19.27599525 153.56384277]
[-3.46094275 153.12263489]
[9.41326809 145.42492676]
[16.36620903 132.25276184]
[32.18126297 131.81156921]
[45.05547333 124.11385345]
[57.92968369 116.41615295]
[70.80389404 108.71844482]
[83.67810822 101.02073669]
[69.91851044 106.99346924]
[55.35557556 110.58802795]
[40.39712524 111.70376587]
[25.46207428 110.30942535]
[10.96866322 106.44406128]
[-2.67722225 100.21591949]
[-15.09343624 91.79940796]
[-25.93226814 81.43023682]
[-34.89018250 69.39878845]
[-41.71631622 56.04199219]
[-46.21950150 41.73390961]
[-48.27363968 26.87522316]
[-47.82119370 11.88204765]
[-44.87484360 -2.82573962]
[-39.51709366 -16.83625412]
[-31.89798737 -29.75713921]
[-22.23089600 -41.22654724]
[-10.78654289 -50.92328644]
[2.11458135 -58.57580185]
[16.11118507 -63.96979141]
[30.81129837 -66.95419312]
[45.80325317 -67.44543457]
[60.66720200 -65.42976379]
[74.98689270 -60.96361542]
[88.36130524 -54.17206955]
[100.41589355 -45.24531937]
[110.81307983 -34.43335724]
[119.26169586 -22.03896713]
[125.52513123 -8.40924358]
[129.42799377 6.07411528]
[130.86097717 21.00551033]
[129.78395081 35.96679306]
[126.22708893 50.53898239]
[120.28998566 64.31398773]
[112.13890839 76.90605164]
[102.00152588 87.96308899]
[113.47990417 78.30664062]
[124.95827484 68.65019989]
[136.43664551 58.99375153]
[147.91502380 49.33730698]
[142.68910217 35.10826874]
[142.64807129 19.94996643]
[147.79685974 5.69284010]
[157.51376343 -5.94149351]
[170.62539673 -13.54813194]
[185.54846191 -16.20853615]
[200.48094177 -13.60144997]
[213.61965942 -6.04169178]
[223.37805176 5.55786133]
[228.57774353 19.79650688]
[228.59083557 34.95486069]
[223.41577148 49.20247269]
[213.67745972 60.81887817]
[200.55183411 68.40134430]
[185.62388611 71.03424072]
[170.69622803 68.39964294]
[157.57147217 60.81568146]
[146.09309387 70.47212982]
[134.61471558 80.12857056]
[123.13634491 89.78501892]
[111.65797424 99.44145966]
[117.25851440 100.65069580]
[122.69673920 102.81149292]
[134.81173706 111.65607452]
[146.92674255 120.50065613]
[159.04174805 129.34524536]
[171.15675354 138.18981934]
[183.27175903 147.03440857]
[195.38676453 155.87898254]
[207.50177002 164.72357178]
[222.91748047 162.48892212]
[235.07781982 171.63117981]
[237.11322021 186.34146118]
[249.22822571 195.18605042]
[261.34323120 204.03063965]
[277.69747925 205.24327087]
[284.57977295 220.12835693]
[274.91021729 233.37341309]
[258.63598633 231.35304260]
[252.49864197 216.14564514]
[240.38363647 207.30105591]
[228.26863098 198.45646667]
[213.63752747 200.99935913]
[201.22518921 192.20227051]
[198.65719604 176.83857727]
[186.54219055 167.99398804]
[174.42718506 159.14941406]
[162.31217957 150.30482483]
[150.19717407 141.46025085]
[138.08216858 132.61566162]
[125.96715546 123.77108002]
[113.85215759 114.92649078]
[125.96360779 123.77593994]
[132.82334900 137.11550903]
[132.97584534 152.11473083]
[126.38874054 165.59100342]
[114.45971680 174.68487549]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 39]
[7 38]
[8 37]
[9 36]
[10 35]
[12 33]
[13 32]
[15 30]
[16 29]
[17 28]
[18 27]
[19 26]
[75 100]
[76 99]
[77 98]
[78 97]
[79 96]
[102 131]
[103 130]
[104 129]
[105 128]
[106 127]
[107 126]
[108 125]
[109 124]
[112 121]
[113 120]
[114 119]
] def

init

% Start Annotations
6 39 0.0 0.6 colorpair
7 38 0.0 1 colorpair
8 37 0.16 1 colorpair
9 36 0.0 1 colorpair
10 35 0.0 1 colorpair
12 33 0.0 1 colorpair
13 32 0.0 1 colorpair
15 30 0.0 1 colorpair
16 29 0.0 1 colorpair
17 28 0.0 1 colorpair
18 27 0.0 1 colorpair
19 26 0.0 0.2 colorpair
75 100 0.0 1 colorpair
76 99 0.0 1 colorpair
77 98 0.0 1 colorpair
78 97 0.0 1 colorpair
79 96 0.32 1 colorpair
102 131 0.0 0.2 colorpair
103 130 0.0 0.2 colorpair
104 129 0.0 1 colorpair
105 128 0.0 0.6 colorpair
106 127 0.0 1 colorpair
107 126 0.0 1 colorpair
108 125 0.0 1 colorpair
109 124 0.16 1 colorpair
112 121 0.0 0.6 colorpair
113 120 0.0 0.6 colorpair
114 119 0.16 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
6 39 1 gmark
8 cmark
19 26 2 gmark
79 cmark
96 cmark
102 131 2 gmark
103 130 2 gmark
105 128 1 gmark
109 cmark
112 121 1 gmark
113 120 1 gmark
114 119 2 gmark
114 cmark

% End Annotations
showpage
end
%%EOF
