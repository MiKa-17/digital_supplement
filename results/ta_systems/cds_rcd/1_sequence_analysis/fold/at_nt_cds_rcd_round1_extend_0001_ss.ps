%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Dec 23 22:45:37 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAAGAACUACAAUCUAUUUUGCUGUAGAGUGGAGUUCAUAAUUUAGAAAUUACUUAGUUUUAUGGAAUCUGAUUUUUAAAUCAAAUUCCCAACCACUCUUAGUUGCCGCUUUGAGUGGUUUUUU\
) } def
/len { sequence length } bind def

/coor [
[89.11084747 170.88847351]
[76.53150940 162.71777344]
[69.43334961 149.50354004]
[69.56661224 134.50411987]
[76.89845276 121.41809845]
[89.61981201 113.47256470]
[76.16329956 120.09996033]
[62.70679474 126.72735596]
[49.25028610 133.35475159]
[35.79377747 139.98214722]
[26.83217812 153.02056885]
[11.99599171 151.70266724]
[-1.46051657 158.33006287]
[-10.42211533 171.36848450]
[-25.25830078 170.05059814]
[-38.71480942 176.67799377]
[-52.17131805 183.30538940]
[-65.62783051 189.93278503]
[-79.08433533 196.56018066]
[-83.93424225 211.60192871]
[-98.03765869 218.73417664]
[-113.02728271 213.72552490]
[-120.01003265 199.54748535]
[-114.84317017 184.61164856]
[-100.59210205 177.77919006]
[-85.71173096 183.10366821]
[-72.25522614 176.47627258]
[-58.79871368 169.84887695]
[-45.34220505 163.22148132]
[-31.88569832 156.59408569]
[-23.88659859 144.02970886]
[-8.08791256 144.87356567]
[5.36859512 138.24617004]
[13.36769390 125.68178558]
[29.16637993 126.52563477]
[42.62289047 119.89823914]
[56.07939529 113.27084351]
[69.53590393 106.64344788]
[82.99241638 100.01605225]
[68.99234772 105.40103912]
[54.15359879 107.59457397]
[39.19428635 106.49049377]
[24.83835793 102.14223480]
[11.78056335 94.76023102]
[0.65282649 84.70172882]
[-8.00633049 72.45350647]
[-13.77785206 58.60830688]
[-16.38242722 43.83616638]
[-15.69401073 28.85197067]
[-11.74591541 14.38087749]
[-4.72920990 1.12320685]
[5.01653719 -10.27944279]
[17.01968384 -19.27524567]
[30.69934464 -25.42885208]
[45.39349747 -28.44246483]
[60.39102936 -28.17023849]
[74.96613312 -24.62534904]
[88.41346741 -17.97934723]
[100.08223724 -8.55386734]
[109.40775299 3.19495249]
[115.93870544 16.69853210]
[119.35903168 31.30337334]
[119.50320435 46.30268097]
[116.36425018 60.97056961]
[110.09407806 74.59719849]
[100.99700928 86.52217865]
[111.13465881 75.46650696]
[121.27231598 64.41082764]
[131.40995789 53.35514832]
[141.54762268 42.29946899]
[145.17163086 26.89891624]
[159.47601318 22.74754524]
[169.61366272 11.69186783]
[179.75132751 0.63618964]
[189.88897705 -10.41948795]
[200.02662659 -21.47516632]
[203.05139160 -37.59294510]
[218.60983276 -42.77630234]
[230.69674683 -31.69304657]
[226.87815857 -15.74467850]
[211.08230591 -11.33751392]
[200.94465637 -0.28183597]
[190.80699158 10.77384186]
[180.66934204 21.82951927]
[170.53169250 32.88519669]
[167.63279724 47.49497604]
[152.60330200 52.43712234]
[142.46563721 63.49280167]
[132.32798767 74.54847717]
[122.19033813 85.60415649]
[112.05268860 96.65983582]
[116.61242676 98.87960052]
[120.60232544 102.81224823]
[132.93084717 111.35669708]
[145.25936890 119.90114594]
[157.58789062 128.44558716]
[169.91641235 136.99003601]
[182.24493408 145.53448486]
[194.57345581 154.07893372]
[206.90197754 162.62336731]
[222.25817871 160.01087952]
[234.63932800 168.85179138]
[237.03530884 183.50767517]
[249.36383057 192.05212402]
[261.69235229 200.59655762]
[278.07144165 201.40727234]
[285.31713867 216.11888123]
[275.97570801 229.59736633]
[259.65679932 227.97720337]
[253.14790344 212.92507935]
[240.81938171 204.38064575]
[228.49085999 195.83619690]
[213.92658997 198.73756409]
[201.30200195 190.24790955]
[198.35752869 174.95188904]
[186.02900696 166.40745544]
[173.70048523 157.86300659]
[161.37196350 149.31855774]
[149.04344177 140.77410889]
[136.71492004 132.22966003]
[124.38640594 123.68521881]
[112.05788422 115.14076996]
[123.46511841 124.88114929]
[128.78065491 138.90774536]
[126.69377899 153.76185608]
[117.71907806 165.78079224]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 39]
[7 38]
[8 37]
[9 36]
[10 35]
[12 33]
[13 32]
[15 30]
[16 29]
[17 28]
[18 27]
[19 26]
[66 91]
[67 90]
[68 89]
[69 88]
[70 87]
[72 85]
[73 84]
[74 83]
[75 82]
[76 81]
[93 122]
[94 121]
[95 120]
[96 119]
[97 118]
[98 117]
[99 116]
[100 115]
[103 112]
[104 111]
[105 110]
] def

init

% Start Annotations
6 39 0.0 0.6 colorpair
7 38 0.0 1 colorpair
8 37 0.16 1 colorpair
9 36 0.0 1 colorpair
10 35 0.0 1 colorpair
12 33 0.0 1 colorpair
13 32 0.0 1 colorpair
15 30 0.0 1 colorpair
16 29 0.0 1 colorpair
17 28 0.0 1 colorpair
18 27 0.0 1 colorpair
19 26 0.0 0.6 colorpair
66 91 0.0 1 colorpair
67 90 0.0 1 colorpair
68 89 0.0 1 colorpair
69 88 0.0 1 colorpair
70 87 0.0 1 colorpair
72 85 0.0 1 colorpair
73 84 0.0 1 colorpair
74 83 0.0 1 colorpair
75 82 0.0 1 colorpair
76 81 0.0 1 colorpair
93 122 0.0 1 colorpair
94 121 0.0 1 colorpair
95 120 0.0 1 colorpair
96 119 0.0 1 colorpair
97 118 0.0 1 colorpair
98 117 0.0 1 colorpair
99 116 0.0 1 colorpair
100 115 0.0 1 colorpair
103 112 0.0 1 colorpair
104 111 0.0 1 colorpair
105 110 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
6 39 1 gmark
8 cmark
19 26 1 gmark

% End Annotations
showpage
end
%%EOF
