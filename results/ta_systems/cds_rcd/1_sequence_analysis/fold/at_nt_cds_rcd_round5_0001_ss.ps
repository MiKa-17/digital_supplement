%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Dec 23 22:59:23 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAAGAACUACAAUCUAUUUUGCAGUAGAGUGGAGUUCAUAAUUUAAA________AA_UUAUUUAAAUUUAUGGAACUUGAUUUUAAAAUCAAAUUCCCAACCACUCUUAGUU_CCGCUUUGAGUGG______\
) } def
/len { sequence length } bind def

/coor [
[215.95410156 122.24282837]
[204.43231201 113.35707855]
[193.62048340 103.61951447]
[183.58142090 93.08666229]
[174.37347412 81.81967926]
[166.05012512 69.88396454]
[153.11788940 77.48377228]
[140.18563843 85.08357239]
[127.25339508 92.68337250]
[114.32114410 100.28318024]
[107.25727844 112.34938812]
[93.27865601 112.64907074]
[80.34641266 120.24887085]
[72.36872864 133.91148376]
[57.47578049 133.68908691]
[44.54353333 141.28889465]
[31.61128616 148.88870239]
[18.67904091 156.48849487]
[17.31002617 171.94506836]
[7.09196854 183.62286377]
[-8.04608154 187.03153992]
[-22.28323364 180.86038208]
[-30.14501572 167.48234558]
[-28.60840797 152.04153442]
[-18.26426888 140.47528076]
[-3.09013247 137.23101807]
[11.07923794 143.55625916]
[24.01148415 135.95645142]
[36.94372940 128.35664368]
[49.87597656 120.75684357]
[56.92866135 107.63781738]
[72.74660492 107.31662750]
[85.67885590 99.71681976]
[92.74272156 87.65061188]
[106.72134399 87.35092926]
[119.65358734 79.75112915]
[132.58583069 72.15132904]
[145.51808167 64.55152130]
[158.45033264 56.95172119]
[151.68995667 42.99693680]
[146.08435059 28.53992271]
[141.67041016 13.67603779]
[138.47720337 -1.49666870]
[136.52572632 -16.87812042]
[135.82881165 -32.36687088]
[136.39100647 -47.86075974]
[138.20852661 -63.25761032]
[141.26933289 -78.45587921]
[145.55320740 -93.35535431]
[151.03184509 -107.85777283]
[157.66903687 -121.86750793]
[165.42097473 -135.29219055]
[174.23649597 -148.04331970]
[184.05740356 -160.03681946]
[194.81889343 -171.19361877]
[206.44995117 -181.44018555]
[218.87382507 -190.70898438]
[232.00856018 -198.93891907]
[245.76748657 -206.07577515]
[260.05984497 -212.07250977]
[274.79135132 -216.88963318]
[289.86483765 -220.49542236]
[305.18087769 -222.86616516]
[320.63845825 -223.98626709]
[336.13562012 -223.84838867]
[351.57015991 -222.45349121]
[366.84027100 -219.81085205]
[381.84530640 -215.93794250]
[396.48626709 -210.86033630]
[410.66662598 -204.61160278]
[424.29287720 -197.23298645]
[437.27520752 -188.77319336]
[449.52798462 -179.28807068]
[460.97048950 -168.84020996]
[471.52722168 -157.49856567]
[483.28549194 -166.81216431]
[495.04376221 -176.12576294]
[506.80203247 -185.43934631]
[518.56030273 -194.75294495]
[513.75646973 -209.12997437]
[514.16265869 -224.28288269]
[519.72985840 -238.38189697]
[529.78576660 -249.72448730]
[543.11608887 -256.94097900]
[558.11114502 -259.15997314]
[572.96020508 -256.11346436]
[585.87017822 -248.16935730]
[595.28210449 -236.28695679]
[600.05944824 -221.90110779]
[599.62536621 -206.74896240]
[594.03216553 -192.66023254]
[583.95538330 -181.33618164]
[570.61175537 -174.14427185]
[555.61260986 -171.95294189]
[540.76922607 -175.02679443]
[527.87390137 -182.99467468]
[516.11566162 -173.68107605]
[504.35736084 -164.36749268]
[492.59909058 -155.05389404]
[480.84082031 -145.74029541]
[488.96313477 -133.68009949]
[496.14355469 -121.03614807]
[502.34036255 -107.88184357]
[507.51748657 -94.29358673]
[511.64486694 -80.35026550]
[514.69842529 -66.13285828]
[516.66052246 -51.72392654]
[517.51953125 -37.20715332]
[517.27062988 -22.66684723]
[515.91503906 -8.18745899]
[513.46069336 6.14691353]
[509.92181396 20.25300980]
[505.31884766 34.04889297]
[499.67855835 47.45442581]
[493.03359985 60.39173508]
[485.42260742 72.78565979]
[476.88967896 84.56420135]
[467.48437500 95.65892029]
[457.26129150 106.00535583]
[446.27975464 115.54338837]
[434.60354614 124.21759033]
[422.30044556 131.97755432]
[409.44186401 138.77816772]
[396.10247803 144.57991028]
[382.35977173 149.34902954]
[368.29351807 153.05781555]
[353.98538208 155.68466187]
[339.51852417 157.21427917]
[324.97689819 157.63775635]
[310.44500732 156.95257568]
[296.00720215 155.16268921]
[281.74737549 152.27844238]
[267.74835205 148.31655884]
[254.09146118 143.30000305]
[240.85600281 137.25785828]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 39]
[7 38]
[8 37]
[9 36]
[10 35]
[12 33]
[13 32]
[15 30]
[16 29]
[17 28]
[18 27]
[75 100]
[76 99]
[77 98]
[78 97]
[79 96]
] def

init

% Start Annotations
6 39 0.0 0.6 colorpair
7 38 0.0 1 colorpair
8 37 0.16 1 colorpair
9 36 0.0 1 colorpair
10 35 0.0 1 colorpair
12 33 0.0 1 colorpair
13 32 0.0 1 colorpair
15 30 0.0 1 colorpair
16 29 0.0 1 colorpair
17 28 0.0 1 colorpair
18 27 0.16 1 colorpair
75 100 0.0 0.6 colorpair
76 99 0.0 0.6 colorpair
77 98 0.0 0.6 colorpair
78 97 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
6 39 1 gmark
8 cmark
18 cmark
75 100 1 gmark
76 99 1 gmark
77 98 1 gmark
78 97 1 gmark
79 96 3 gmark
79 cmark
96 cmark

% End Annotations
showpage
end
%%EOF
