%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Mar  2 02:25:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUGGCAUUACUGAAAUCUUUAGAAAGGAGACGCCUAAUGAUUACAAUUAGUACCAUGUUGCAGUUUGGUUUAUUCCUUAUUGCAUUGAUAGGUCUAGUAAUCAAGCUUAUUGAAUUAAGCAAUAAAAAA\
) } def
/len { sequence length } bind def

/coor [
[69.02356720 158.51785278]
[80.20731354 148.52497864]
[86.66201019 134.98478699]
[74.50596619 143.77287292]
[62.34991837 152.56095886]
[50.19387054 161.34904480]
[50.73448944 179.39309692]
[40.48575592 194.06401062]
[23.65347672 199.66641235]
[6.95328426 194.16137695]
[-4.77418804 203.51373291]
[-10.73946953 218.16726685]
[-25.51417923 220.05331421]
[-37.24164963 229.40567017]
[-48.96912384 238.75801086]
[-60.69659424 248.11036682]
[-72.42406464 257.46270752]
[-81.03776550 272.06546021]
[-97.45435333 267.83084106]
[-97.92977905 250.88356018]
[-81.77641296 245.73524475]
[-70.04894257 236.38288879]
[-58.32147217 227.03054810]
[-46.59399796 217.67819214]
[-34.86652756 208.32585144]
[-29.74007225 194.34126282]
[-14.12653446 191.78625488]
[-2.39906263 182.43391418]
[-4.74241972 170.41346741]
[-1.69819713 158.47624207]
[6.20804977 148.93432617]
[17.50296402 143.66316223]
[30.03967094 143.73318481]
[41.40578079 149.19300842]
[53.56182861 140.40490723]
[65.71787262 131.61682129]
[77.87392426 122.82873535]
[70.75505066 106.06630707]
[74.17597198 89.32549286]
[85.69022369 78.26938629]
[100.34127045 75.90763855]
[105.21176147 61.72037506]
[110.08225250 47.53311920]
[114.95274353 33.34585953]
[119.82323456 19.15860176]
[124.69372559 4.97134209]
[129.56422424 -9.21591663]
[128.51466370 -14.52546692]
[129.56398010 -19.20952415]
[132.10028076 -22.55676270]
[135.31468201 -24.21402550]
[141.17745972 -38.02082825]
[147.04023743 -51.82763290]
[147.52909851 -61.04689026]
[153.20799255 -65.88869476]
[159.39523315 -79.55317688]
[165.58247375 -93.21765900]
[166.28894043 -102.42279816]
[172.08062744 -107.12912750]
[178.58888245 -120.64365387]
[185.09713745 -134.15818787]
[191.12255859 -147.89479065]
[196.65760803 -161.83621216]
[202.19265747 -175.77763367]
[207.72769165 -189.71905518]
[213.26274109 -203.66049194]
[218.79777527 -217.60191345]
[212.78022766 -231.96946716]
[218.59214783 -246.02920532]
[232.32650757 -251.67747498]
[237.86155701 -265.61889648]
[231.36929321 -280.02813721]
[237.04550171 -294.77792358]
[251.52256775 -301.11749268]
[266.21151733 -295.28564453]
[272.39767456 -280.74237061]
[266.41085815 -266.11590576]
[251.80297852 -260.08386230]
[246.26792908 -246.14244080]
[252.38778687 -232.61161804]
[246.97306824 -218.39418030]
[232.73919678 -212.06686401]
[227.20416260 -198.12544250]
[221.66911316 -184.18402100]
[216.13407898 -170.24259949]
[210.59902954 -156.30117798]
[205.06399536 -142.35974121]
[206.18537903 -138.92152405]
[205.63653564 -134.75791931]
[203.09036255 -130.68870544]
[198.61166382 -127.64993286]
[192.10340881 -114.13539886]
[185.59515381 -100.62086487]
[179.24696350 -87.03041077]
[173.05972290 -73.36593628]
[166.87246704 -59.70145416]
[160.84704590 -45.96485138]
[154.98426819 -32.15805054]
[149.12149048 -18.35124588]
[143.75148010 -4.34542418]
[138.88098145 9.84183407]
[134.01049805 24.02909279]
[129.13999939 38.21635056]
[124.26950836 52.40361023]
[119.39901733 66.59086609]
[114.52852631 80.77812958]
[127.94319153 99.93796539]
[119.28201294 125.27683258]
[130.31787109 135.43605042]
[141.35372925 145.59527588]
[152.38958740 155.75450134]
[163.42544556 165.91372681]
[179.20390320 165.01026917]
[190.94401550 175.59069824]
[191.68058777 191.37780762]
[180.97663879 203.00540161]
[165.18261719 203.57502747]
[153.66883850 192.74874878]
[153.26623535 176.94958496]
[142.23036194 166.79035950]
[131.19450378 156.63113403]
[120.15865326 146.47190857]
[109.12279510 136.31268311]
[113.93708038 150.51911926]
[123.86651611 161.76217651]
[127.61782074 176.28552246]
[124.37522888 190.93084717]
[114.84387207 202.51330566]
[101.09649658 208.51411438]
[86.12268066 207.62831116]
[73.17868805 200.04853821]
[65.07939148 187.42309570]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 37]
[4 36]
[5 35]
[6 34]
[10 28]
[11 27]
[13 25]
[14 24]
[15 23]
[16 22]
[17 21]
[41 106]
[42 105]
[43 104]
[44 103]
[45 102]
[46 101]
[47 100]
[51 99]
[52 98]
[53 97]
[55 96]
[56 95]
[57 94]
[59 93]
[60 92]
[61 91]
[62 87]
[63 86]
[64 85]
[65 84]
[66 83]
[67 82]
[70 79]
[71 78]
[108 123]
[109 122]
[110 121]
[111 120]
[112 119]
] def

init

% Start Annotations
3 37 0.0 1 colorpair
4 36 0.0 1 colorpair
5 35 0.0 1 colorpair
6 34 0.0 1 colorpair
10 28 0.0 1 colorpair
11 27 0.0 1 colorpair
13 25 0.0 1 colorpair
14 24 0.0 1 colorpair
15 23 0.0 1 colorpair
16 22 0.0 1 colorpair
17 21 0.0 1 colorpair
41 106 0.0 1 colorpair
42 105 0.0 1 colorpair
43 104 0.0 1 colorpair
44 103 0.0 1 colorpair
45 102 0.0 1 colorpair
46 101 0.0 1 colorpair
47 100 0.0 1 colorpair
51 99 0.0 1 colorpair
52 98 0.0 1 colorpair
53 97 0.0 1 colorpair
55 96 0.0 1 colorpair
56 95 0.0 1 colorpair
57 94 0.0 1 colorpair
59 93 0.0 1 colorpair
60 92 0.0 1 colorpair
61 91 0.0 1 colorpair
62 87 0.0 1 colorpair
63 86 0.0 1 colorpair
64 85 0.0 1 colorpair
65 84 0.0 1 colorpair
66 83 0.0 1 colorpair
67 82 0.0 1 colorpair
70 79 0.0 1 colorpair
71 78 0.0 1 colorpair
108 123 0.0 1 colorpair
109 122 0.0 1 colorpair
110 121 0.0 1 colorpair
111 120 0.0 1 colorpair
112 119 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
