%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Mar  2 02:17:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUAUAUA_GAAAAAGGGCAACAUGCGCAAACAUGUUACCCUAAUGAGCCCGUUAAAAAGACGGUGGCUAUUUUAGAUUAAAGAUUAAAUUAAUAACCAUUUAACCAUCGAAACCAGCCAAAGUU___AGCGAUGGUUAUUUUUU\
) } def
/len { sequence length } bind def

/coor [
[142.60624695 205.09953308]
[131.03529358 214.64485168]
[117.35401154 220.79486084]
[102.53418732 223.11277771]
[87.62843323 221.43392944]
[73.69548798 215.87757874]
[61.72499084 206.83837891]
[52.56718445 194.95835876]
[46.87253571 181.08137512]
[45.04552841 166.19305420]
[47.21592712 151.35090637]
[53.22957993 137.60914612]
[62.65933990 125.94382477]
[74.83542633 117.18351746]
[88.89052582 111.95101929]
[74.77076721 117.01386261]
[60.65100479 122.07670593]
[46.53124619 127.13954926]
[36.15242004 139.08067322]
[21.56050301 136.09317017]
[7.44074249 141.15602112]
[-6.67901707 146.21885681]
[-20.79877663 151.28170776]
[-34.91853714 156.34454346]
[-49.03829575 161.40739441]
[-55.55840302 175.80404663]
[-70.37802124 181.29534912]
[-84.70494080 174.62339783]
[-90.03925323 159.74653625]
[-83.21620178 145.49096680]
[-68.28378296 140.31423950]
[-54.10113907 147.28762817]
[-39.98138046 142.22479248]
[-25.86161995 137.16194153]
[-11.74186039 132.09909058]
[2.37789893 127.03625488]
[16.49765968 121.97341156]
[25.86654472 110.39440918]
[41.46840286 113.01979065]
[55.58816147 107.95694733]
[69.70792389 102.89410400]
[83.82768250 97.83126068]
[87.96913910 83.41431427]
[78.68906403 71.62956238]
[69.40899658 59.84481812]
[60.12892151 48.06007004]
[44.68187332 46.05348206]
[35.43843842 33.96987152]
[37.44660950 19.25583649]
[28.04028702 7.57161283]
[18.50880241 -4.01073599]
[8.97731876 -15.59308434]
[-0.55416578 -27.17543411]
[-10.08565044 -38.75778198]
[-25.85027885 -41.73369598]
[-33.22503662 -55.98123932]
[-26.55263901 -70.57091522]
[-10.95158100 -74.31077576]
[1.61034214 -64.33191681]
[1.49669850 -48.28926849]
[11.02818298 -36.70691681]
[20.55966759 -25.12456894]
[30.09115219 -13.54222012]
[39.62263489 -1.95987177]
[46.35032272 1.22942615]
[49.23135757 9.97576618]
[64.00603485 11.47390079]
[73.58522797 23.29311371]
[71.91367340 38.77999878]
[81.19374084 50.56474686]
[90.47380829 62.34949493]
[99.75388336 74.13423920]
[97.25976562 59.34305191]
[94.55142212 44.58958054]
[95.86952209 29.64760399]
[101.11886597 15.59611416]
[109.92039490 3.44979358]
[121.63852692 -5.91424656]
[135.42709351 -11.81981087]
[150.29035950 -13.84044647]
[165.15505981 -11.83024120]
[178.94775391 -5.93435383]
[190.67245483 3.42146134]
[199.48251343 15.56160259]
[204.74171448 29.60940552]
[206.07029724 44.55045319]
[203.37231445 59.30582047]
[196.84259033 72.80999756]
[186.95265198 84.08781433]
[174.41667175 92.32488251]
[160.13990784 96.92639160]
[145.15328979 97.56004333]
[130.54071045 94.18072510]
[115.83600616 97.14241028]
[130.16050720 101.59310150]
[144.48501587 106.04379272]
[158.80950928 110.49448395]
[173.13401794 114.94517517]
[187.45851135 119.39586639]
[201.78302002 123.84655762]
[216.10751343 128.29725647]
[223.28684998 115.07064056]
[232.90885925 103.49898529]
[244.60369873 94.02707672]
[257.92184448 87.01898193]
[272.35137939 82.74407959]
[287.33767700 81.36668396]
[302.30468750 82.93974304]
[316.67715454 87.40277863]
[329.90258789 94.58425903]
[341.47268677 104.20814514]
[350.94271851 115.90451050]
[357.94863892 129.22378540]
[362.22122192 143.65400696]
[363.59619141 158.64053345]
[362.02069092 173.60729980]
[357.55532837 187.97903442]
[350.37170410 201.20332336]
[340.74597168 212.77185059]
[329.04806519 222.23997498]
[315.72766113 229.24375916]
[301.29672241 233.51399231]
[286.30999756 234.88653564]
[271.34347534 233.30863953]
[256.97247314 228.84094238]
[243.74934387 221.65518188]
[232.18237305 212.02755737]
[222.71614075 200.32812500]
[215.71450806 187.00657654]
[211.44662476 172.57496643]
[210.07650757 157.58801270]
[211.65682983 142.62174988]
[197.33232117 138.17106628]
[183.00782776 133.72036743]
[168.68331909 129.26968384]
[154.35882568 124.81898499]
[140.03431702 120.36829376]
[125.70981598 115.91760254]
[111.38531494 111.46691132]
[125.65479279 116.09097290]
[138.19612122 124.31988525]
[148.11851501 135.56915283]
[154.71719360 149.03977966]
[157.52346802 163.77493286]
[156.33801270 178.72801208]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 42]
[16 41]
[17 40]
[18 39]
[20 37]
[21 36]
[22 35]
[23 34]
[24 33]
[25 32]
[43 72]
[44 71]
[45 70]
[46 69]
[49 66]
[50 64]
[51 63]
[52 62]
[53 61]
[54 60]
[94 139]
[95 138]
[96 137]
[97 136]
[98 135]
[99 134]
[100 133]
[101 132]
] def

init

% Start Annotations
15 42 0.0 0.6 colorpair
16 41 0.0 1 colorpair
17 40 0.0 1 colorpair
18 39 0.0 1 colorpair
20 37 0.0 0.6 colorpair
21 36 0.0 1 colorpair
22 35 0.0 1 colorpair
23 34 0.0 0.6 colorpair
24 33 0.0 1 colorpair
25 32 0.0 0.6 colorpair
43 72 0.0 1 colorpair
44 71 0.32 0.6 colorpair
45 70 0.0 0.2 colorpair
46 69 0.16 0.2 colorpair
49 66 0.0 1 colorpair
50 64 0.0 0.6 colorpair
51 63 0.0 1 colorpair
52 62 0.0 1 colorpair
53 61 0.0 1 colorpair
54 60 0.0 1 colorpair
94 139 0.0 0.6 colorpair
95 138 0.0 1 colorpair
96 137 0.0 1 colorpair
97 136 0.16 1 colorpair
98 135 0.0 1 colorpair
99 134 0.16 1 colorpair
100 133 0.0 1 colorpair
101 132 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
15 42 1 gmark
20 37 1 gmark
23 34 1 gmark
25 32 1 gmark
44 71 1 gmark
44 cmark
71 cmark
45 70 2 gmark
46 69 2 gmark
69 cmark
50 64 1 gmark
94 139 1 gmark
97 cmark
99 cmark
134 cmark
101 132 1 gmark
101 cmark

% End Annotations
showpage
end
%%EOF
