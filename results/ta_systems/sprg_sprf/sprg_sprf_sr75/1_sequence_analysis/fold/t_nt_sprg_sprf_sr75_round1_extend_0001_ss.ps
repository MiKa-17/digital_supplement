%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  1 17:16:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUGGCAUUACUGAAAUCUUUAGAAAGGAGACGCCUA_AUGAUUACAAUUAGUACCAUGUUGCAGUUUGGUUUAUUCCUUAUUGCAUUGAUAGGUCUAGUAAUCAAGCUUAUUGAAUUAAGCAAUAAAA_AAUAA\
) } def
/len { sequence length } bind def

/coor [
[53.24910355 201.14866638]
[56.23092270 186.44802856]
[63.71163177 173.44653320]
[74.92584991 163.47830200]
[81.83792114 150.16577148]
[88.75000000 136.85325623]
[76.30171967 145.22225952]
[63.85344315 153.59127808]
[78.70016479 155.73014832]
[90.68760681 164.74687195]
[96.85990143 178.41810608]
[95.69509125 193.37280273]
[87.48039246 205.92346191]
[74.24138641 212.97531128]
[59.24253464 212.78953552]
[46.18225479 205.41192627]
[38.28094482 192.66165161]
[37.48690414 177.68269348]
[43.99514008 164.16946411]
[30.10450363 169.83074951]
[16.21386528 175.49203491]
[2.32322836 181.15332031]
[-11.56740952 186.81460571]
[-19.09129524 200.98396301]
[-34.88628769 203.79426575]
[-46.83582306 193.08967590]
[-45.77323532 177.08184814]
[-32.51365662 168.05061340]
[-17.22869682 172.92396545]
[-3.33805966 167.26268005]
[10.55257797 161.60139465]
[24.44321632 155.94010925]
[38.33385468 150.27882385]
[44.26628113 142.22343445]
[55.48443222 141.14299011]
[67.93270874 132.77398682]
[80.38098907 124.40497589]
[72.58731842 112.01818085]
[71.51484680 98.07929993]
[76.80770111 85.84976959]
[86.68784332 77.91527557]
[98.48901367 75.64184570]
[102.20613098 61.10970688]
[105.92324829 46.57756805]
[109.64035797 32.04543304]
[113.35747528 17.51329231]
[117.07459259 2.98115492]
[120.79170990 -11.55098343]
[119.32593536 -16.74120140]
[119.98907471 -21.47956848]
[122.23390961 -25.01440430]
[125.29034424 -26.93078613]
[129.99050903 -41.17538071]
[134.69067383 -55.41997528]
[134.41424561 -64.63844299]
[139.66334534 -69.93318176]
[144.68653870 -84.06710052]
[149.70973206 -98.20101166]
[138.02720642 -111.23054504]
[134.51902771 -128.28501892]
[140.05364990 -144.70019531]
[153.03877258 -156.03244019]
[169.87817383 -159.26156616]
[174.25286865 -173.60946655]
[178.62754822 -187.95736694]
[183.00224304 -202.30525208]
[187.37693787 -216.65315247]
[191.75161743 -231.00103760]
[184.57762146 -244.82752991]
[189.21856689 -259.31600952]
[202.44421387 -266.07009888]
[206.81890869 -280.41799927]
[199.16838074 -294.24713135]
[203.61755371 -309.41226196]
[217.52680969 -316.91613770]
[232.64402771 -312.30688477]
[240.00042725 -298.31906128]
[235.23161316 -283.25143433]
[221.16680908 -276.04330444]
[216.79211426 -261.69543457]
[223.99954224 -248.71125793]
[219.76737976 -234.09812927]
[206.09951782 -226.62635803]
[201.72482300 -212.27845764]
[197.35014343 -197.93057251]
[192.97544861 -183.58267212]
[188.60075378 -169.23477173]
[184.22607422 -154.88688660]
[193.85623169 -146.56520081]
[199.61833191 -135.16407776]
[200.61427307 -122.38141632]
[196.65872192 -110.13610077]
[188.31236267 -100.28000641]
[176.80271912 -94.31790924]
[163.84364319 -93.17781830]
[158.82044983 -79.04390717]
[153.79725647 -64.90998840]
[148.93525696 -50.71981812]
[144.23510742 -36.47522354]
[139.53494263 -22.23062706]
[135.32385254 -7.83386660]
[131.60673523 6.69827175]
[127.88961792 21.23040962]
[124.17250061 35.76254654]
[120.45538330 50.29468536]
[116.73826599 64.82682800]
[113.02114868 79.35896301]
[127.81352234 98.40838623]
[119.61901093 124.40497589]
[132.06729126 132.77398682]
[144.51556396 141.14299011]
[156.96385193 149.51200867]
[169.41212463 157.88101196]
[184.87130737 154.59629822]
[198.07954407 163.27488708]
[201.20063782 178.76792908]
[192.38288879 191.88368225]
[176.85771179 194.84078979]
[163.83592224 185.88487244]
[161.04312134 170.32929993]
[148.59483337 161.96028137]
[136.14656067 153.59127808]
[123.69828033 145.22225952]
[111.25000000 136.85325623]
[118.16207886 150.16577148]
[125.07415009 163.47830200]
[136.28572083 173.44326782]
[143.76759338 186.44410706]
[146.75073242 201.14447021]
[144.92851257 216.03337097]
[138.48822021 229.58042908]
[128.09185791 240.39317322]
[114.80801392 247.36021423]
[100.00209808 249.76539612]
[85.19596863 247.36154175]
[71.91149902 240.39570618]
[61.51416397 229.58387756]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 37]
[7 36]
[8 35]
[19 33]
[20 32]
[21 31]
[22 30]
[23 29]
[42 107]
[43 106]
[44 105]
[45 104]
[46 103]
[47 102]
[48 101]
[52 100]
[53 99]
[54 98]
[56 97]
[57 96]
[58 95]
[63 88]
[64 87]
[65 86]
[66 85]
[67 84]
[68 83]
[71 80]
[72 79]
[109 124]
[110 123]
[111 122]
[112 121]
[113 120]
] def

init

% Start Annotations
6 37 0.0 1 colorpair
7 36 0.0 1 colorpair
8 35 0.0 0.6 colorpair
19 33 0.0 1 colorpair
20 32 0.0 1 colorpair
21 31 0.0 1 colorpair
22 30 0.0 1 colorpair
23 29 0.0 1 colorpair
42 107 0.0 1 colorpair
43 106 0.16 1 colorpair
44 105 0.16 1 colorpair
45 104 0.0 0.6 colorpair
46 103 0.0 0.6 colorpair
47 102 0.0 0.6 colorpair
48 101 0.0 0.6 colorpair
52 100 0.0 0.6 colorpair
53 99 0.16 1 colorpair
54 98 0.16 0.6 colorpair
56 97 0.16 1 colorpair
57 96 0.16 0.6 colorpair
58 95 0.16 1 colorpair
63 88 0.16 1 colorpair
64 87 0.16 1 colorpair
65 86 0.0 0.6 colorpair
66 85 0.0 1 colorpair
67 84 0.16 1 colorpair
68 83 0.16 1 colorpair
71 80 0.16 1 colorpair
72 79 0.0 0.6 colorpair
109 124 0.0 0.6 colorpair
110 123 0.16 0.6 colorpair
111 122 0.0 1 colorpair
112 121 0.0 0.6 colorpair
113 120 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
8 35 1 gmark
106 cmark
44 cmark
45 104 1 gmark
46 103 1 gmark
47 102 1 gmark
48 101 1 gmark
52 100 1 gmark
53 cmark
99 cmark
54 98 1 gmark
54 cmark
98 cmark
56 cmark
57 96 1 gmark
57 cmark
96 cmark
58 cmark
88 cmark
64 cmark
87 cmark
65 86 1 gmark
67 cmark
84 cmark
83 cmark
71 cmark
80 cmark
72 79 1 gmark
109 124 1 gmark
110 123 1 gmark
110 cmark
112 121 1 gmark
113 cmark
120 cmark

% End Annotations
showpage
end
%%EOF
