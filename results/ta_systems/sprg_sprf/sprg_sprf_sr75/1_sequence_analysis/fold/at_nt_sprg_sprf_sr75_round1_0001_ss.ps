%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sun Mar  1 17:16:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUAUA_GAAAAAGGGCAACAUGC_GCAAACAUGUUACCCUAAUGAGCCCGUUAAAAAGACGGUGGCUAUUUUAGAUUAAAGAUUAAAUUAAUAACCAUUUAACCAUCGAAACCAGCCAAAGUUAGCGAUGGUUAUUUUUU\
) } def
/len { sequence length } bind def

/coor [
[89.98439026 276.63598633]
[74.67124939 275.09722900]
[59.54977798 272.23345947]
[44.73440170 268.06634521]
[30.33723831 262.62744141]
[16.46723175 255.95788574]
[3.22933912 248.10815430]
[-9.27626228 239.13763428]
[-20.95494080 229.11424255]
[-31.71832085 218.11380005]
[-41.48495102 206.21955872]
[-50.18092728 193.52151489]
[-57.74044037 180.11578369]
[-64.10629272 166.10377502]
[-78.24499512 171.11346436]
[-92.38370514 176.12316895]
[-106.52240753 181.13285828]
[-113.37771606 195.12008667]
[-127.78773499 199.99920654]
[-141.08016968 193.37751770]
[-155.21887207 198.38720703]
[-169.35758972 203.39691162]
[-183.49629211 208.40660095]
[-197.63499451 213.41629028]
[-202.93885803 228.12693787]
[-216.48358154 235.94194031]
[-231.87376404 233.17132568]
[-241.84262085 221.12326050]
[-241.68318176 205.48649597]
[-231.47071838 193.64421082]
[-216.02723694 191.18798828]
[-202.64468384 199.27758789]
[-188.50598145 194.26789856]
[-174.36727905 189.25819397]
[-160.22857666 184.24850464]
[-146.08985901 179.23881531]
[-139.93180847 165.72534180]
[-125.66452026 160.44338989]
[-111.53209686 166.99415588]
[-97.39339447 161.98445129]
[-83.25468445 156.97476196]
[-69.11598206 151.96507263]
[-74.94781494 126.34095764]
[-76.91966248 100.13565826]
[-74.98800659 73.92736816]
[-69.19547272 48.29433060]
[-59.66986847 23.80211639]
[-46.62136078 0.99110484]
[-30.33784485 -19.63540649]
[-11.17859936 -37.62232208]
[-20.10167694 -49.67963028]
[-29.02475548 -61.73693848]
[-37.94783401 -73.79425049]
[-46.87091064 -85.85155487]
[-62.46158981 -89.63445282]
[-69.09369659 -104.24248505]
[-61.67965317 -118.46962738]
[-45.90687180 -121.40202332]
[-33.87488556 -110.79019928]
[-34.81360245 -94.77463531]
[-25.89052391 -82.71732330]
[-16.96744537 -70.66001892]
[-8.04436874 -58.60270691]
[0.87870902 -46.54539871]
[9.27421951 -51.88619614]
[17.95671082 -56.74655533]
[26.89871597 -61.11109924]
[36.07195282 -64.96602631]
[45.44740677 -68.29913330]
[54.99541473 -71.09989166]
[64.68578339 -73.35942841]
[74.48785400 -75.07060242]
[84.37062836 -76.22799683]
[94.30283356 -76.82795715]
[104.25306702 -76.86858368]
[114.18984222 -76.34974670]
[124.08173370 -75.27308655]
[133.89744568 -73.64200592]
[143.60594177 -71.46167755]
[153.17651367 -68.73898315]
[162.57885742 -65.48253632]
[171.78327942 -61.70264816]
[180.76062012 -57.41126633]
[189.48251343 -52.62196732]
[197.92135620 -47.34989929]
[206.05044556 -41.61174393]
[213.84410095 -35.42564774]
[221.27763367 -28.81117630]
[228.32756042 -21.78925514]
[234.97155762 -14.38209534]
[241.18861389 -6.61312723]
[246.95907593 1.49307513]
[252.26467896 9.91087055]
[257.08865356 18.61363220]
[261.41571045 27.57383156]
[265.23220825 36.76312637]
[268.52603149 46.15245056]
[271.28680420 55.71210480]
[273.50573730 65.41184235]
[275.17587280 75.22099304]
[276.29187012 85.10852051]
[276.85025024 95.04315948]
[276.84924316 104.99346924]
[276.28878784 114.92798615]
[275.17074585 124.81528473]
[273.49856567 134.62408447]
[271.27761841 144.32336426]
[268.51489258 153.88244629]
[265.21911621 163.27108765]
[261.40072632 172.45959473]
[257.07177734 181.41889954]
[252.24601746 190.12066650]
[246.93867493 198.53735352]
[241.16653442 206.64236450]
[234.94786072 214.41004944]
[228.30233765 221.81582642]
[238.73274231 232.59574890]
[249.16314697 243.37567139]
[259.59353638 254.15557861]
[270.02395630 264.93551636]
[285.59497070 265.36080933]
[296.01931763 276.44177246]
[295.51791382 291.28372192]
[311.42623901 295.26583862]
[315.67102051 311.10607910]
[303.88558960 322.50939941]
[288.19378662 317.74502563]
[284.73800659 301.71414185]
[269.88754272 301.72628784]
[259.15606689 290.94250488]
[259.24404907 275.36590576]
[248.81362915 264.58599854]
[238.38322449 253.80607605]
[227.95281982 243.02615356]
[217.52241516 232.24623108]
[205.58453369 241.95947266]
[192.84765625 250.59846497]
[179.40817261 258.09783936]
[165.36779785 264.40084839]
[150.83276367 269.45977783]
[135.91305542 273.23635864]
[120.72159576 275.70202637]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 42]
[15 41]
[16 40]
[17 39]
[20 36]
[21 35]
[22 34]
[23 33]
[24 32]
[50 64]
[51 63]
[52 62]
[53 61]
[54 60]
[116 135]
[117 134]
[118 133]
[119 132]
[120 131]
[123 128]
] def

init

% Start Annotations
14 42 0.0 0.2 colorpair
15 41 0.0 1 colorpair
16 40 0.0 1 colorpair
17 39 0.0 1 colorpair
20 36 0.0 1 colorpair
21 35 0.16 1 colorpair
22 34 0.0 0.2 colorpair
23 33 0.16 1 colorpair
24 32 0.16 0.6 colorpair
50 64 0.0 0.6 colorpair
51 63 0.0 1 colorpair
52 62 0.0 1 colorpair
53 61 0.0 1 colorpair
54 60 0.0 1 colorpair
117 134 0.16 0.2 colorpair
118 133 0.16 0.2 colorpair
119 132 0.0 0.2 colorpair
120 131 0.0 0.2 colorpair
123 128 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
14 42 2 gmark
21 cmark
35 cmark
22 34 2 gmark
23 cmark
33 cmark
24 32 1 gmark
24 cmark
32 cmark
50 64 1 gmark
116 135 4 gmark
116 cmark
117 134 2 gmark
117 cmark
118 133 2 gmark
118 cmark
119 132 2 gmark
120 131 2 gmark
123 128 2 gmark

% End Annotations
showpage
end
%%EOF
