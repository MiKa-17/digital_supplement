%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Mar  2 02:16:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUGGCAUUACUGAAAUCUUUAGAAAGGAGACGCCUAAUGAUUACAAUUAGUACCAUGUUGCAGUUUGGUUUAUUCCUUAUUGCAUUGAUAGGUCUAGUAAUCAAGCUUAUUGAAUUAAGCAAUAAAAAA\
) } def
/len { sequence length } bind def

/coor [
[55.54243469 200.41319275]
[54.85232925 185.42907715]
[60.17345428 171.40461731]
[70.63102722 160.64846802]
[78.02822113 147.59927368]
[85.42541504 134.55007935]
[72.67765045 142.45542908]
[59.92988205 150.36076355]
[74.67741394 153.10124207]
[86.28850555 162.59770203]
[91.90008545 176.50849915]
[90.12847137 191.40350342]
[81.41048431 203.60992432]
[67.89582062 210.11791992]
[52.91691589 209.32272339]
[40.16725922 201.42042542]
[32.79065704 188.35957336]
[32.60603333 173.36071777]
[39.65808105 160.12315369]
[25.52933502 165.16085815]
[11.40058804 170.19856262]
[-2.72815990 175.23626709]
[-16.85690689 180.27397156]
[-25.00371933 194.09457397]
[-40.90810013 196.19938660]
[-52.36956787 184.97378540]
[-50.59587097 169.02908325]
[-36.94763184 160.59669495]
[-21.89461517 166.14523315]
[-7.76586676 161.10752869]
[6.36288071 156.06980896]
[20.49162865 151.03210449]
[34.62037659 145.99440002]
[40.85284042 138.26107788]
[52.02453995 137.61299133]
[64.77230835 129.70765686]
[77.52008057 121.80231476]
[71.04424286 105.33662415]
[74.66583252 89.12178802]
[85.97314453 78.46733093]
[100.24934387 76.17539978]
[105.11983490 61.98814392]
[109.99032593 47.80088425]
[114.86082458 33.61362457]
[119.73131561 19.42636681]
[124.60180664 5.23910809]
[129.47229004 -8.94815063]
[128.42274475 -14.25770092]
[129.47206116 -18.94175911]
[132.00836182 -22.28899765]
[135.22276306 -23.94625854]
[141.08554077 -37.75306320]
[146.94831848 -51.55986404]
[147.43716431 -60.77912140]
[153.11607361 -65.62093353]
[159.30331421 -79.28540802]
[165.49055481 -92.94989014]
[171.51599121 -106.68649292]
[177.37876892 -120.49329376]
[170.52516174 -136.53851318]
[177.22056580 -152.28535461]
[192.90196228 -158.24217224]
[198.43699646 -172.18359375]
[203.97204590 -186.12501526]
[209.50709534 -200.06643677]
[215.04212952 -214.00785828]
[220.57717896 -227.94927979]
[214.55963135 -242.31684875]
[220.37155151 -256.37658691]
[234.10591125 -262.02487183]
[239.64094543 -275.96627808]
[233.14868164 -290.37551880]
[238.82489014 -305.12530518]
[253.30195618 -311.46487427]
[267.99090576 -305.63302612]
[274.17706299 -291.08975220]
[268.19024658 -276.46325684]
[253.58236694 -270.43124390]
[248.04733276 -256.48980713]
[254.16717529 -242.95899963]
[248.75245667 -228.74156189]
[234.51860046 -222.41424561]
[228.98355103 -208.47282410]
[223.44851685 -194.53140259]
[217.91346741 -180.58996582]
[212.37841797 -166.64854431]
[206.84338379 -152.70712280]
[213.57205200 -141.65351868]
[212.66246033 -128.54934692]
[204.22415161 -118.22909546]
[191.18557739 -114.63051605]
[185.32278442 -100.82371521]
[185.60678101 -93.36634064]
[179.15504456 -86.76264954]
[172.96778870 -73.09816742]
[166.78054810 -59.43368530]
[160.75511169 -45.69708633]
[154.89233398 -31.89028358]
[149.02955627 -18.08348083]
[143.65956116 -4.07765818]
[138.78906250 10.10960007]
[133.91857910 24.29685974]
[129.04808044 38.48411942]
[124.17758942 52.67137527]
[119.30709839 66.85863495]
[114.43659973 81.04589081]
[127.56562805 100.54023743]
[117.98428345 125.63695526]
[129.02014160 135.79617310]
[140.05599976 145.95539856]
[151.09185791 156.11462402]
[162.12771606 166.27384949]
[177.90615845 165.37039185]
[189.64627075 175.95082092]
[190.38285828 191.73793030]
[179.67890930 203.36552429]
[163.88488770 203.93515015]
[152.37110901 193.10887146]
[151.96849060 177.30970764]
[140.93263245 167.15048218]
[129.89677429 156.99125671]
[118.86092377 146.83203125]
[107.82506561 136.67280579]
[112.63935089 150.87924194]
[117.45363617 165.08566284]
[125.70385742 177.61299133]
[128.29658508 192.38722229]
[124.80480957 206.97514343]
[115.80360413 218.97424316]
[102.77539825 226.40834045]
[87.86584473 228.05311584]
[73.53044128 223.63766479]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 37]
[7 36]
[8 35]
[19 33]
[20 32]
[21 31]
[22 30]
[23 29]
[41 106]
[42 105]
[43 104]
[44 103]
[45 102]
[46 101]
[47 100]
[51 99]
[52 98]
[53 97]
[55 96]
[56 95]
[57 94]
[58 92]
[59 91]
[62 87]
[63 86]
[64 85]
[65 84]
[66 83]
[67 82]
[70 79]
[71 78]
[108 123]
[109 122]
[110 121]
[111 120]
[112 119]
] def

init

% Start Annotations
6 37 0.0 0.6 colorpair
7 36 0.0 0.6 colorpair
8 35 0.0 0.6 colorpair
19 33 0.0 1 colorpair
20 32 0.0 1 colorpair
21 31 0.0 1 colorpair
22 30 0.0 1 colorpair
23 29 0.0 1 colorpair
41 106 0.16 1 colorpair
42 105 0.0 1 colorpair
43 104 0.16 1 colorpair
44 103 0.0 1 colorpair
45 102 0.0 0.6 colorpair
46 101 0.16 1 colorpair
47 100 0.0 0.6 colorpair
51 99 0.16 1 colorpair
52 98 0.0 1 colorpair
53 97 0.0 0.6 colorpair
55 96 0.0 1 colorpair
56 95 0.0 0.6 colorpair
57 94 0.0 1 colorpair
58 92 0.0 1 colorpair
59 91 0.0 1 colorpair
62 87 0.16 1 colorpair
63 86 0.0 1 colorpair
64 85 0.0 1 colorpair
65 84 0.0 1 colorpair
66 83 0.16 1 colorpair
67 82 0.0 1 colorpair
70 79 0.0 1 colorpair
71 78 0.0 1 colorpair
108 123 0.0 1 colorpair
109 122 0.16 1 colorpair
110 121 0.0 1 colorpair
111 120 0.0 1 colorpair
112 119 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
6 37 1 gmark
7 36 1 gmark
8 35 1 gmark
106 cmark
43 cmark
45 102 1 gmark
46 cmark
47 100 1 gmark
51 cmark
99 cmark
53 97 1 gmark
56 95 1 gmark
87 cmark
66 cmark
109 cmark

% End Annotations
showpage
end
%%EOF
