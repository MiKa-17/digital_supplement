%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Mar  4 16:38:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_____________CAAGCAAAA_____G__________UAUU_GCAAAU_AUUUC___A_UUAUUUUAUUA____A__GUAAU_ACAACC___U_ACUAU_AAUA_C_______AAUUG_GUU__AU__GUGUAU_UUCUUUCAUG_AGAAAUGCAUAAAAUAAAAAA_GACCAGGGUGCUG_CAACACCCCGG_CUC_UGUACAAAAAGCUG_CCCAUC___AAAGGGC_UU_GC_UC_G___AUGUGG_A___\
_UUCUG_GAUAGACCUAUCCCUUCA_GGUUUC__G_AG_GCUCAAGGG_A_GGU___CUAUUUUUUC_______\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50228119 92.21354675]
[62.51276016 91.64073944]
[47.53691864 90.78178406]
[32.58020782 89.63699341]
[17.64808464 88.20679474]
[2.74599934 86.49169922]
[-12.12061691 84.49234009]
[-26.94634056 82.20944214]
[-41.72576523 79.64383698]
[-56.45349884 76.79646301]
[-71.12417603 73.66835785]
[-85.73243713 70.26065826]
[-100.27295685 66.57461548]
[-114.74044037 62.61156464]
[-129.12959290 58.37295914]
[-143.43519592 53.86034012]
[-157.65199280 49.07535553]
[-171.77484131 44.01975250]
[-185.79855347 38.69536972]
[-199.71803284 33.10415268]
[-213.52821350 27.24813652]
[-227.22402954 21.12946320]
[-240.80050659 14.75035954]
[-254.25270081 8.11315346]
[-267.57568359 1.22026682]
[-280.76458740 -5.92578793]
[-293.81463623 -13.32240391]
[-306.72106934 -20.96688271]
[-319.47915649 -28.85643768]
[-332.08422852 -36.98819351]
[-344.53173828 -45.35917664]
[-356.81710815 -53.96634293]
[-368.93588257 -62.80654907]
[-380.88360596 -71.87657166]
[-392.65597534 -81.17309570]
[-404.24862671 -90.69274139]
[-415.65740967 -100.43203735]
[-426.87811279 -110.38742065]
[-437.90664673 -120.55526733]
[-448.73898315 -130.93186951]
[-459.37121582 -141.51344299]
[-469.79940796 -152.29612732]
[-480.01980591 -163.27598572]
[-490.02865601 -174.44902039]
[-499.82229614 -185.81114197]
[-509.39721680 -197.35823059]
[-518.74981689 -209.08605957]
[-527.87683105 -220.99035645]
[-536.77478027 -233.06677246]
[-545.44049072 -245.31091309]
[-553.87084961 -257.71829224]
[-562.06268311 -270.28442383]
[-570.01306152 -283.00466919]
[-577.71905518 -295.87445068]
[-585.17791748 -308.88903809]
[-592.38684082 -322.04367065]
[-599.34332275 -335.33358765]
[-606.04467773 -348.75393677]
[-612.48852539 -362.29980469]
[-618.67248535 -375.96624756]
[-624.59442139 -389.74829102]
[-630.25201416 -403.64093018]
[-635.64331055 -417.63906860]
[-640.76629639 -431.73760986]
[-645.61907959 -445.93139648]
[-650.19995117 -460.21527100]
[-654.50726318 -474.58404541]
[-658.53930664 -489.03244019]
[-662.29473877 -503.55517578]
[-665.77215576 -518.14703369]
[-668.97027588 -532.80255127]
[-671.88793945 -547.51654053]
[-674.52410889 -562.28356934]
[-676.87774658 -577.09820557]
[-678.94805908 -591.95513916]
[-680.73431396 -606.84881592]
[-682.23577881 -621.77398682]
[-683.45196533 -636.72503662]
[-684.38244629 -651.69659424]
[-685.02679443 -666.68322754]
[-685.38488770 -681.67938232]
[-685.45648193 -696.67968750]
[-685.24163818 -711.67858887]
[-684.74041748 -726.67071533]
[-683.95294189 -741.65045166]
[-682.87957764 -756.61248779]
[-681.52069092 -771.55126953]
[-679.87677002 -786.46136475]
[-677.94842529 -801.33734131]
[-675.73632812 -816.17376709]
[-673.24133301 -830.96533203]
[-670.46429443 -845.70648193]
[-667.40625000 -860.39190674]
[-664.06835938 -875.01629639]
[-660.45178223 -889.57421875]
[-656.55786133 -904.06048584]
[-652.38800049 -918.46966553]
[-647.94372559 -932.79669189]
[-643.22662354 -947.03613281]
[-638.23852539 -961.18298340]
[-632.98114014 -975.23193359]
[-627.45648193 -989.17797852]
[-621.66644287 -1003.01593018]
[-615.61322021 -1016.74084473]
[-609.29901123 -1030.34765625]
[-602.72613525 -1043.83129883]
[-595.89691162 -1057.18701172]
[-588.81390381 -1070.40991211]
[-581.47967529 -1083.49511719]
[-573.89691162 -1096.43786621]
[-566.06835938 -1109.23352051]
[-557.99688721 -1121.87731934]
[-549.68542480 -1134.36462402]
[-541.13702393 -1146.69091797]
[-532.35473633 -1158.85180664]
[-523.34185791 -1170.84265137]
[-514.10168457 -1182.65930176]
[-504.63748169 -1194.29724121]
[-494.95275879 -1205.75244141]
[-485.05105591 -1217.02050781]
[-474.93597412 -1228.09741211]
[-464.61120605 -1238.97924805]
[-454.08053589 -1249.66186523]
[-443.34774780 -1260.14147949]
[-432.41680908 -1270.41406250]
[-421.29168701 -1280.47619629]
[-409.97644043 -1290.32397461]
[-398.47521973 -1299.95385742]
[-386.79217529 -1309.36242676]
[-374.93157959 -1318.54614258]
[-362.89779663 -1327.50158691]
[-350.69515991 -1336.22570801]
[-338.32815552 -1344.71520996]
[-325.80130005 -1352.96691895]
[-313.11914062 -1360.97790527]
[-300.28628540 -1368.74536133]
[-287.30746460 -1376.26623535]
[-274.18740845 -1383.53796387]
[-260.93084717 -1390.55773926]
[-247.54264832 -1397.32299805]
[-234.02770996 -1403.83154297]
[-220.39093018 -1410.08068848]
[-206.63731384 -1416.06835938]
[-192.77185059 -1421.79223633]
[-178.79962158 -1427.25024414]
[-164.72570801 -1432.44042969]
[-150.55523682 -1437.36096191]
[-136.29338074 -1442.01000977]
[-121.94535828 -1446.38586426]
[-107.51638031 -1450.48681641]
[-93.01171875 -1454.31152344]
[-78.43666077 -1457.85864258]
[-63.79652786 -1461.12670898]
[-49.09665298 -1464.11450195]
[-34.34240341 -1466.82116699]
[-19.53915405 -1469.24548340]
[-4.69230843 -1471.38671875]
[10.19272137 -1473.24414062]
[25.11050415 -1474.81677246]
[40.05559921 -1476.10437012]
[55.02256012 -1477.10632324]
[70.00592041 -1477.82226562]
[85.00022888 -1478.25183105]
[100.00000000 -1478.39514160]
[114.99977112 -1478.25183105]
[129.99407959 -1477.82226562]
[144.97743225 -1477.10632324]
[159.94439697 -1476.10437012]
[174.88949585 -1474.81677246]
[189.80728149 -1473.24414062]
[204.69230652 -1471.38671875]
[219.53915405 -1469.24548340]
[234.34240723 -1466.82116699]
[249.09664917 -1464.11450195]
[263.79653931 -1461.12670898]
[278.43667603 -1457.85864258]
[293.01171875 -1454.31152344]
[307.51638794 -1450.48681641]
[321.94534302 -1446.38586426]
[336.29339600 -1442.01000977]
[350.55523682 -1437.36096191]
[364.72570801 -1432.44042969]
[378.79962158 -1427.25024414]
[392.77185059 -1421.79223633]
[406.63732910 -1416.06835938]
[420.39093018 -1410.08068848]
[434.02770996 -1403.83154297]
[447.54266357 -1397.32299805]
[460.93084717 -1390.55773926]
[474.18740845 -1383.53796387]
[487.30746460 -1376.26623535]
[500.28628540 -1368.74536133]
[513.11914062 -1360.97790527]
[525.80126953 -1352.96691895]
[538.32818604 -1344.71520996]
[550.69512939 -1336.22570801]
[562.89776611 -1327.50158691]
[574.93157959 -1318.54614258]
[586.79217529 -1309.36242676]
[598.47521973 -1299.95385742]
[609.97644043 -1290.32397461]
[621.29168701 -1280.47619629]
[632.41680908 -1270.41406250]
[643.34777832 -1260.14147949]
[654.08050537 -1249.66186523]
[664.61120605 -1238.97924805]
[674.93597412 -1228.09741211]
[685.05102539 -1217.02050781]
[694.95275879 -1205.75244141]
[704.63745117 -1194.29724121]
[714.10168457 -1182.65930176]
[723.34185791 -1170.84265137]
[732.35473633 -1158.85180664]
[741.13702393 -1146.69091797]
[749.68542480 -1134.36462402]
[757.99688721 -1121.87731934]
[766.06835938 -1109.23352051]
[773.89691162 -1096.43786621]
[781.47967529 -1083.49511719]
[788.81390381 -1070.40991211]
[795.89691162 -1057.18701172]
[802.72613525 -1043.83129883]
[809.29901123 -1030.34765625]
[815.61322021 -1016.74084473]
[821.66644287 -1003.01593018]
[827.45648193 -989.17797852]
[832.98114014 -975.23193359]
[838.23852539 -961.18298340]
[843.22662354 -947.03613281]
[847.94372559 -932.79669189]
[852.38800049 -918.46966553]
[856.55786133 -904.06048584]
[860.45178223 -889.57421875]
[864.06835938 -875.01629639]
[867.40625000 -860.39190674]
[870.46429443 -845.70648193]
[873.24133301 -830.96533203]
[875.73632812 -816.17376709]
[877.94842529 -801.33734131]
[879.87677002 -786.46136475]
[881.52069092 -771.55126953]
[882.87957764 -756.61248779]
[883.95294189 -741.65045166]
[884.74041748 -726.67071533]
[885.24163818 -711.67858887]
[885.45648193 -696.67968750]
[885.38488770 -681.67938232]
[885.02679443 -666.68322754]
[884.38244629 -651.69659424]
[883.45196533 -636.72503662]
[882.23577881 -621.77398682]
[880.73431396 -606.84881592]
[878.94805908 -591.95513916]
[876.87774658 -577.09820557]
[874.52410889 -562.28356934]
[871.88793945 -547.51654053]
[868.97027588 -532.80255127]
[865.77215576 -518.14703369]
[862.29473877 -503.55517578]
[858.53930664 -489.03244019]
[854.50726318 -474.58404541]
[850.19995117 -460.21527100]
[845.61907959 -445.93139648]
[840.76629639 -431.73760986]
[835.64331055 -417.63906860]
[830.25201416 -403.64093018]
[824.59442139 -389.74829102]
[818.67248535 -375.96624756]
[812.48852539 -362.29980469]
[806.04467773 -348.75393677]
[799.34332275 -335.33358765]
[792.38684082 -322.04367065]
[785.17791748 -308.88903809]
[777.71905518 -295.87445068]
[770.01306152 -283.00466919]
[762.06268311 -270.28442383]
[753.87084961 -257.71829224]
[745.44049072 -245.31091309]
[736.77478027 -233.06677246]
[727.87683105 -220.99035645]
[718.74981689 -209.08605957]
[709.39721680 -197.35823059]
[699.82232666 -185.81114197]
[690.02862549 -174.44902039]
[680.01977539 -163.27598572]
[669.79943848 -152.29612732]
[659.37121582 -141.51344299]
[648.73901367 -130.93186951]
[637.90661621 -120.55526733]
[626.87811279 -110.38742065]
[615.65740967 -100.43203735]
[604.24865723 -90.69274139]
[592.65594482 -81.17309570]
[580.88360596 -71.87657166]
[568.93585205 -62.80654907]
[556.81713867 -53.96634293]
[544.53173828 -45.35917664]
[532.08422852 -36.98819351]
[519.47912598 -28.85643768]
[506.72106934 -20.96688271]
[493.81463623 -13.32240391]
[480.76458740 -5.92578793]
[467.57568359 1.22026682]
[454.25268555 8.11315346]
[440.80050659 14.75035954]
[427.22402954 21.12946320]
[413.52819824 27.24813652]
[399.71804810 33.10415268]
[385.79855347 38.69536972]
[371.77484131 44.01975250]
[357.65200806 49.07535553]
[343.43518066 53.86034012]
[329.12960815 58.37295914]
[314.74044800 62.61156464]
[300.27294922 66.57461548]
[285.73242188 70.26065826]
[271.12417603 73.66835785]
[256.45349121 76.79646301]
[241.72576904 79.64383698]
[226.94633484 82.20944214]
[212.12062073 84.49234009]
[197.25399780 86.49169922]
[182.35191345 88.20679474]
[167.41979980 89.63699341]
[152.46308899 90.78178406]
[137.48724365 91.64073944]
[122.49771881 92.21354675]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
