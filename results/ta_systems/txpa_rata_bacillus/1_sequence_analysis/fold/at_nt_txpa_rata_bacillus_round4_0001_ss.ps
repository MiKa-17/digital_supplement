%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Dec 16 20:04:45 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
________________________________________________________________________GUGUAUUUCUUUCAUGAGAAAUGCAUAAAAUAAAAAAGACCGGGUGGC_________________________________________________________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[48.58975601 589.09423828]
[33.69816971 587.29895020]
[18.86825752 585.05035400]
[4.11381721 582.35052490]
[-10.55142593 579.20202637]
[-25.11383057 575.60772705]
[-39.55984879 571.57104492]
[-53.87604523 567.09564209]
[-68.04910278 562.18579102]
[-82.06583405 556.84594727]
[-95.91320038 551.08117676]
[-109.57832336 544.89672852]
[-123.04849243 538.29852295]
[-136.31117249 531.29248047]
[-149.35403442 523.88531494]
[-162.16493225 516.08380127]
[-174.73194885 507.89526367]
[-187.04341125 499.32727051]
[-199.08784485 490.38781738]
[-210.85406494 481.08520508]
[-222.33113098 471.42810059]
[-233.50833130 461.42550659]
[-244.37530518 451.08666992]
[-254.92193604 440.42123413]
[-265.13839722 429.43914795]
[-275.01519775 418.15060425]
[-284.54315186 406.56610107]
[-293.71337891 394.69641113]
[-302.51736450 382.55261230]
[-310.94689941 370.14593506]
[-318.99420166 357.48800659]
[-326.65170288 344.59051514]
[-333.91232300 331.46551514]
[-340.76931763 318.12518311]
[-347.21630859 304.58197021]
[-353.24725342 290.84841919]
[-358.85659790 276.93734741]
[-364.03909302 262.86169434]
[-368.78991699 248.63453674]
[-373.10464478 234.26910400]
[-376.97927856 219.77877808]
[-380.41021729 205.17703247]
[-383.39428711 190.47743225]
[-385.92864990 175.69367981]
[-388.01101685 160.83952332]
[-389.63940430 145.92875671]
[-390.81231689 130.97526550]
[-391.52865601 115.99296570]
[-391.78778076 100.99578857]
[-391.58938599 85.99768829]
[-390.93374634 71.01261139]
[-389.82138062 56.05449677]
[-388.25338745 41.13726044]
[-386.23120117 26.27478409]
[-383.75671387 11.48088741]
[-380.83221436 -3.23066568]
[-377.46044922 -17.84618950]
[-373.64450073 -32.35208893]
[-369.38796997 -46.73487091]
[-364.69482422 -60.98115540]
[-359.56936646 -75.07769012]
[-354.01641846 -89.01136017]
[-348.04110718 -102.76921082]
[-341.64904785 -116.33843231]
[-334.84613037 -129.70642090]
[-327.63870239 -142.86071777]
[-320.03350830 -155.78909302]
[-312.03753662 -168.47953796]
[-303.65829468 -180.92022705]
[-294.90356445 -193.09959412]
[-285.78146362 -205.00631714]
[-276.30050659 -216.62930298]
[-266.46951294 -227.95776367]
[-256.29760742 -238.98114014]
[-245.79426575 -249.68917847]
[-256.17742920 -260.51461792]
[-266.56057739 -271.34005737]
[-276.94372559 -282.16549683]
[-287.32687378 -292.99093628]
[-297.71002197 -303.81637573]
[-308.09317017 -314.64181519]
[-318.47631836 -325.46725464]
[-328.85946655 -336.29272461]
[-344.75024414 -340.34436035]
[-348.92568970 -356.20303345]
[-337.09048462 -367.55468750]
[-321.41967773 -362.72171021]
[-318.03402710 -346.67587280]
[-307.65087891 -335.85043335]
[-297.26773071 -325.02499390]
[-286.88458252 -314.19952393]
[-276.50143433 -303.37408447]
[-266.11828613 -292.54864502]
[-255.73512268 -281.72320557]
[-245.35197449 -270.89776611]
[-234.96882629 -260.07232666]
[-223.83219910 -270.12011719]
[-212.39433289 -279.82360840]
[-200.66587830 -289.17376709]
[-188.65771484 -298.16192627]
[-176.38105774 -306.77969360]
[-163.84727478 -315.01904297]
[-151.06806946 -322.87234497]
[-138.05531311 -330.33227539]
[-124.82110596 -337.39190674]
[-111.37776184 -344.04464722]
[-97.73778534 -350.28430176]
[-83.91387177 -356.10513306]
[-69.91887665 -361.50164795]
[-55.76581192 -366.46887207]
[-41.46784973 -371.00216675]
[-27.03829193 -375.09732056]
[-12.49055767 -378.75051880]
[2.16181898 -381.95837402]
[16.90520668 -384.71792603]
[31.72589302 -387.02651978]
[46.61009216 -388.88211060]
[61.54395294 -390.28289795]
[76.51358795 -391.22763062]
[91.50507355 -391.71539307]
[106.50445557 -391.74575806]
[121.49778748 -391.31866455]
[136.47113037 -390.43457031]
[151.41053772 -389.09420776]
[166.30212402 -387.29891968]
[181.13203430 -385.05029297]
[195.88647461 -382.35046387]
[210.55171204 -379.20196533]
[225.11412048 -375.60766602]
[239.56013489 -371.57095337]
[253.87632751 -367.09558105]
[268.04937744 -362.18566895]
[282.06610107 -356.84585571]
[295.91348267 -351.08105469]
[309.57858276 -344.89663696]
[323.04876709 -338.29837036]
[336.31143188 -331.29235840]
[349.35427856 -323.88516235]
[362.16516113 -316.08367920]
[374.73217773 -307.89511108]
[387.04364014 -299.32711792]
[399.08807373 -290.38766479]
[410.85430908 -281.08502197]
[422.33135986 -271.42791748]
[433.50854492 -261.42529297]
[444.37551880 -251.08645630]
[454.92211914 -240.42103577]
[465.13858032 -229.43893433]
[475.01538086 -218.15037537]
[484.54333496 -206.56587219]
[493.71356201 -194.69618225]
[502.51751709 -182.55236816]
[510.94708252 -170.14570618]
[518.99432373 -157.48774719]
[526.65185547 -144.59025574]
[533.91247559 -131.46525574]
[540.76947021 -118.12493134]
[547.21643066 -104.58169556]
[553.24737549 -90.84815979]
[558.85668945 -76.93708801]
[564.03918457 -62.86141968]
[568.78997803 -48.63425446]
[573.10473633 -34.26882553]
[576.97937012 -19.77849388]
[580.41027832 -5.17674255]
[583.39434814 9.52284813]
[585.92871094 24.30660439]
[588.01104736 39.16077042]
[589.63940430 54.07153320]
[590.81231689 69.02502441]
[591.52868652 84.00732422]
[591.78778076 99.00450134]
[591.58941650 114.00260162]
[590.93371582 128.98768616]
[589.82135010 143.94580078]
[588.25335693 158.86302185]
[586.23114014 173.72550964]
[583.75665283 188.51939392]
[580.83215332 203.23095703]
[577.46038818 217.84648132]
[573.64440918 232.35237122]
[569.38787842 246.73515320]
[564.69470215 260.98144531]
[559.56927490 275.07797241]
[554.01629639 289.01162720]
[548.04101562 302.76947021]
[541.64892578 316.33868408]
[534.84600830 329.70666504]
[527.63854980 342.86096191]
[520.03332520 355.78933716]
[512.03741455 368.47976685]
[503.65814209 380.92047119]
[494.90338135 393.09982300]
[485.78128052 405.00653076]
[476.30032349 416.62951660]
[466.46932983 427.95797729]
[456.29742432 438.98135376]
[445.79406738 449.68939209]
[434.96905518 460.07214355]
[423.83242798 470.11993408]
[412.39456177 479.82342529]
[400.66610718 489.17361450]
[388.65795898 498.16174316]
[376.38128662 506.77951050]
[363.84753418 515.01892090]
[351.06832886 522.87219238]
[338.05557251 530.33215332]
[324.82135010 537.39178467]
[311.37802124 544.04449463]
[297.73806763 550.28417969]
[283.91415405 556.10504150]
[269.91915894 561.50152588]
[255.76608276 566.46881104]
[241.46812439 571.00207520]
[227.03857422 575.09722900]
[212.49084473 578.75048828]
[197.83847046 581.95831299]
[183.09507751 584.71783447]
[168.27439880 587.02648926]
[153.39019775 588.88208008]
[138.45634460 590.28289795]
[123.48670197 591.22760010]
[108.49522400 591.71539307]
[93.49583435 591.74578857]
[78.50250244 591.31866455]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[75 96]
[76 95]
[77 94]
[78 93]
[79 92]
[80 91]
[81 90]
[82 89]
[83 88]
] def

init

% Start Annotations
75 96 0.0 1 colorpair
76 95 0.16 1 colorpair
77 94 0.16 1 colorpair
78 93 0.0 1 colorpair
79 92 0.0 1 colorpair
80 91 0.0 0.2 colorpair
81 90 0.0 1 colorpair
82 89 0.0 1 colorpair
83 88 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
76 cmark
77 cmark
80 91 2 gmark
88 cmark

% End Annotations
showpage
end
%%EOF
