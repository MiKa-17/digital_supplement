%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Dec 16 21:36:53 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAGCAAAAGUAUUGCAACUACUGGCGUAAGCUUAUAGUUGGUACCACAUUACCACAUUACCACUUGUUAAUGUGUGUUACUUUCAUGAGAAAUGCUAAAAUAUAAAAGCCAGAGUGUGGCAGCACUCUAGCUUUUAAAAAAGAAACUACCCUUU____________________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[139.71759033 94.80378723]
[153.72880554 89.41595459]
[165.50195312 80.12117004]
[150.71388245 82.63375854]
[135.92582703 85.14635468]
[121.13775635 87.65895081]
[136.13572693 87.41194153]
[149.66627502 93.88683319]
[158.88276672 105.72137451]
[161.84614563 120.42573547]
[157.93296814 134.90631104]
[147.96652222 146.11657715]
[134.04360962 151.69802856]
[119.09344482 150.47639465]
[106.26133728 142.70869446]
[98.24692535 130.02894592]
[87.49261475 140.48574829]
[76.73830414 150.94256592]
[65.98399353 161.39936829]
[55.22967911 171.85617065]
[44.47536850 182.31297302]
[44.08824539 197.88499451]
[33.03288269 208.33648682]
[18.18972588 207.87145996]
[7.43541479 218.32826233]
[-3.31889606 228.78507996]
[-7.26197910 244.70312500]
[-23.09178352 248.98672485]
[-34.52396393 237.22929382]
[-29.79807281 221.52584839]
[-13.77570248 218.03076172]
[-3.02139115 207.57395935]
[7.73291969 197.11715698]
[7.68436909 182.26678467]
[18.44180870 171.50889587]
[34.01856232 171.55867004]
[44.77287292 161.10186768]
[55.52718353 150.64505005]
[66.28149414 140.18824768]
[77.03580475 129.73144531]
[87.79011536 119.27463531]
[83.23497009 104.98300934]
[68.41311646 102.67806244]
[53.59127045 100.37310791]
[38.75362015 98.17214966]
[23.88656616 96.17950439]
[9.00590229 94.29115295]
[-5.87476110 92.40280914]
[-20.75542450 90.51445770]
[-35.63608932 88.62611389]
[-50.51675034 86.73777008]
[-65.39741516 84.84941864]
[-71.61696625 87.04660797]
[-77.18014526 85.94505310]
[-80.66673279 82.69374847]
[-95.48858643 80.38880157]
[-110.31043243 78.08384705]
[-121.15594482 89.18135071]
[-136.45870972 91.75139618]
[-150.33448792 84.80574799]
[-157.44778442 71.01514435]
[-155.06338501 55.68236542]
[-144.09812927 44.70316696]
[-128.76838684 42.29927826]
[-114.96875763 49.39504623]
[-108.00548553 63.26200104]
[-93.18363190 65.56694794]
[-78.36178589 67.87190247]
[-63.50906754 69.96875763]
[-48.62840652 71.85710144]
[-33.74774170 73.74545288]
[-18.86707878 75.63379669]
[-3.98641443 77.52214050]
[10.89424896 79.41049194]
[25.77491188 81.29883575]
[32.79954529 79.02478790]
[40.85047531 83.31943512]
[47.90631104 81.14412689]
[55.89622116 85.55126190]
[70.71807098 87.85620880]
[85.53991699 90.16116333]
[92.97910309 77.13585663]
[83.46320343 65.54070282]
[73.94730377 53.94554520]
[64.43141174 42.35038757]
[48.90110779 37.08333969]
[45.96316147 20.94950867]
[58.63987350 10.54599953]
[73.89053345 16.57505035]
[76.02656555 32.83449173]
[85.54246521 44.42964554]
[95.05836487 56.02480316]
[104.57426453 67.61995697]
[118.62516022 72.87088013]
[133.41322327 70.35829163]
[148.20129395 67.84569550]
[162.98936462 65.33309937]
[148.24888611 62.55490112]
[139.17665100 50.60942078]
[140.45666504 35.66413498]
[151.42807007 25.43532944]
[166.42628479 25.20416069]
[177.70770264 35.08997726]
[179.44720459 49.99070358]
[182.98979187 35.41503525]
[186.53236389 20.83936501]
[190.07495117 6.26369524]
[193.61752319 -8.31197357]
[197.16011047 -22.88764381]
[200.70268250 -37.46331406]
[196.44348145 -52.70042801]
[206.96772766 -63.24032974]
[210.51029968 -77.81600189]
[214.05287170 -92.39167023]
[217.59545898 -106.96733856]
[221.13803101 -121.54300690]
[224.68061829 -136.11868286]
[228.22319031 -150.69435120]
[223.09298706 -166.27038574]
[234.21745300 -178.31938171]
[250.15267944 -174.44636536]
[254.50588989 -158.63555908]
[242.79885864 -147.15176392]
[239.25628662 -132.57609558]
[235.71369934 -118.00042725]
[232.17112732 -103.42475891]
[228.62855530 -88.84909058]
[225.08596802 -74.27342224]
[221.54339600 -59.69775009]
[226.05598450 -45.50318146]
[215.27835083 -33.92073441]
[211.73577881 -19.34506416]
[208.19319153 -4.76939487]
[204.65061951 9.80627441]
[201.10803223 24.38194275]
[197.56546021 38.95761108]
[194.02287292 53.53328323]
[200.13958740 57.87331772]
[212.37300110 66.55338287]
[218.48970032 70.89341736]
[231.07739258 62.73559952]
[243.66508484 54.57778168]
[256.25277710 46.41996384]
[256.94485474 30.91832924]
[266.64270020 18.80505180]
[281.61727905 14.73793602]
[296.11059570 20.28086853]
[304.54962158 33.30247879]
[303.68942261 48.79569244]
[293.86071777 60.80305099]
[278.84289551 64.70748138]
[264.41061401 59.00765228]
[251.82290649 67.16547394]
[239.23521423 75.32329559]
[226.64752197 83.48110962]
[241.60533142 82.35681152]
[256.28585815 85.43613434]
[270.66165161 89.71825409]
[284.63433838 95.17386627]
[298.10833740 101.76564026]
[310.99142456 109.44847107]
[323.19546509 118.16979980]
[334.63693237 127.86993408]
[345.23757935 138.48251343]
[354.92480469 149.93490601]
[363.63238525 162.14875793]
[371.30068970 175.04049683]
[377.87728882 188.52191162]
[383.31713867 202.50074768]
[387.58306885 216.88136292]
[390.64584351 231.56533813]
[392.48452759 246.45222473]
[393.08654785 261.44012451]
[392.44775391 276.42651367]
[390.57257080 291.30886841]
[387.47375488 305.98529053]
[383.17257690 320.35537720]
[377.69842529 334.32083130]
[371.08877563 347.78607178]
[363.38885498 360.65893555]
[354.65133667 372.85140991]
[344.93603516 384.27999878]
[334.30938721 394.86651611]
[322.84414673 404.53857422]
[310.61874390 413.22991943]
[297.71685791 420.88110352]
[284.22671509 427.43981934]
[270.24069214 432.86111450]
[255.85443115 437.10797119]
[241.16639709 440.15124512]
[226.27708435 441.97018433]
[211.28839111 442.55230713]
[196.30285645 441.89364624]
[181.42303467 439.99868774]
[166.75073242 436.88040161]
[152.38635254 432.56015015]
[138.42817688 427.06747437]
[124.97172546 420.43997192]
[112.10906982 412.72296143]
[99.92822266 403.96929932]
[88.51252747 394.23883057]
[77.94010162 383.59814453]
[68.28329468 372.12008667]
[59.60816956 359.88317871]
[51.97409439 346.97113037]
[45.43330383 333.47232056]
[40.03055573 319.47909546]
[35.80281830 305.08718872]
[32.77901840 290.39514160]
[30.97984505 275.50344849]
[30.41761208 260.51397705]
[31.09616470 245.52932739]
[33.01086044 230.65203857]
[36.14860153 215.98388672]
[40.48791122 201.62524414]
[45.99910355 187.67437744]
[52.64446259 174.22673035]
[60.37852097 161.37432861]
[69.14836121 149.20510864]
[78.89396667 137.80233765]
[89.54865265 127.24404144]
[101.03952026 117.60247040]
[113.28794861 108.94358826]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 97]
[4 96]
[5 95]
[6 94]
[16 41]
[17 40]
[18 39]
[19 38]
[20 37]
[21 36]
[24 33]
[25 32]
[26 31]
[42 81]
[43 80]
[44 79]
[45 77]
[46 75]
[47 74]
[48 73]
[49 72]
[50 71]
[51 70]
[52 69]
[55 68]
[56 67]
[57 66]
[82 93]
[83 92]
[84 91]
[85 90]
[104 137]
[105 136]
[106 135]
[107 134]
[108 133]
[109 132]
[110 131]
[112 129]
[113 128]
[114 127]
[115 126]
[116 125]
[117 124]
[118 123]
[140 155]
[141 154]
[142 153]
[143 152]
] def

init

% Start Annotations
3 97 0.0 1 colorpair
4 96 0.0 1 colorpair
5 95 0.0 1 colorpair
6 94 0.0 1 colorpair
16 41 0.0 1 colorpair
17 40 0.0 1 colorpair
18 39 0.0 1 colorpair
19 38 0.0 1 colorpair
20 37 0.0 1 colorpair
21 36 0.0 1 colorpair
24 33 0.0 1 colorpair
25 32 0.0 1 colorpair
26 31 0.0 1 colorpair
42 81 0.0 1 colorpair
43 80 0.0 1 colorpair
44 79 0.0 1 colorpair
45 77 0.0 1 colorpair
46 75 0.0 1 colorpair
47 74 0.0 1 colorpair
48 73 0.0 1 colorpair
49 72 0.0 1 colorpair
50 71 0.0 1 colorpair
51 70 0.0 1 colorpair
52 69 0.0 1 colorpair
55 68 0.0 1 colorpair
56 67 0.0 1 colorpair
57 66 0.0 1 colorpair
82 93 0.0 1 colorpair
83 92 0.0 1 colorpair
84 91 0.0 1 colorpair
85 90 0.0 1 colorpair
104 137 0.0 1 colorpair
105 136 0.0 1 colorpair
106 135 0.0 1 colorpair
107 134 0.0 1 colorpair
108 133 0.0 1 colorpair
109 132 0.0 1 colorpair
110 131 0.0 1 colorpair
112 129 0.0 1 colorpair
113 128 0.0 1 colorpair
114 127 0.0 1 colorpair
115 126 0.0 1 colorpair
116 125 0.0 1 colorpair
117 124 0.0 1 colorpair
118 123 0.0 1 colorpair
140 155 0.0 1 colorpair
141 154 0.0 1 colorpair
142 153 0.0 1 colorpair
143 152 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
