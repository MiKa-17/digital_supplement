%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Dec 18 16:29:10 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGCUCGCAGAGCUGGGCAUGGCCUUCUGGCAUGAUUUAGCGGCUCCGGUCAUUGCUGGCAUUCUUGCCAGUAUGAUCGUGAACUGGCUGAACAAGCGGAAGUAA\
) } def
/len { sequence length } bind def

/coor [
[86.88195038 316.10696411]
[72.19443512 313.06118774]
[58.20920563 307.63775635]
[45.30828857 299.98489380]
[33.84409714 290.31161499]
[24.12978745 278.88217163]
[16.43072701 266.00878906]
[10.95722389 252.04307556]
[7.85879612 237.36657715]
[7.22008276 222.38018799]
[9.05853081 207.49327087]
[13.32392120 193.11250305]
[19.89973640 179.63072205]
[28.60634804 167.41618347]
[39.20592499 156.80255127]
[51.40427017 148.08253479]
[36.53025818 146.14251709]
[21.65624237 144.20248413]
[6.78222942 142.26245117]
[-8.09178352 140.32241821]
[-17.46973991 152.40550232]
[-31.54370689 158.13441467]
[-46.49619293 156.06329346]
[-58.32524872 146.84757996]
[-63.91555023 133.04125977]
[-78.78956604 131.10124207]
[-93.66357422 129.16120911]
[-108.59095764 135.95129395]
[-121.77593994 126.19998169]
[-119.65495300 109.93856812]
[-104.40987396 103.89541626]
[-91.72354889 114.28719330]
[-76.84953308 116.22721863]
[-61.97551727 118.16725159]
[-53.03094864 106.25674438]
[-39.23382187 100.38347626]
[-24.25033760 102.21693420]
[-12.11667252 111.36412048]
[-6.15175200 125.44840240]
[8.72226143 127.38843536]
[23.59627533 129.32846069]
[38.47028732 131.26849365]
[53.34430313 133.20852661]
[67.30364227 127.71883392]
[76.87166595 116.16664886]
[86.43968201 104.61446381]
[88.96847534 90.86321259]
[102.00813293 85.81752014]
[111.57614899 74.26533508]
[114.16090393 56.10504150]
[130.72210693 50.50089645]
[139.95323181 38.67778015]
[149.18437195 26.85466194]
[158.41551208 15.03154373]
[167.64665222 3.20842576]
[166.86264038 -9.76539421]
[174.92102051 -19.44457245]
[187.02243042 -20.92594719]
[196.59045410 -32.47813034]
[206.15846252 -44.03031921]
[209.00230408 -59.59383774]
[223.07948303 -64.46031189]
[232.64749146 -76.01249695]
[230.91990662 -91.72208405]
[240.87170410 -103.99958801]
[256.59866333 -105.56099701]
[268.77029419 -95.47994232]
[270.16531372 -79.73734283]
[259.95614624 -67.67300415]
[244.19967651 -66.44448090]
[234.63166809 -54.89229202]
[232.47219849 -40.15506363]
[217.71064758 -34.46229553]
[208.14263916 -22.91011238]
[198.57461548 -11.35792637]
[196.65301514 6.01984882]
[179.46975708 12.43956184]
[170.23863220 24.26268005]
[161.00749207 36.08580017]
[151.77635193 47.90891647]
[142.54521179 59.73203278]
[143.69389343 71.86953735]
[135.96838379 81.81642151]
[123.12833405 83.83335114]
[113.56031799 95.38553619]
[111.03152466 109.13678741]
[97.99186707 114.18247986]
[88.42385101 125.73466492]
[78.85582733 137.28684998]
[93.73174286 135.36143494]
[108.72161102 135.91255188]
[123.41597748 138.92514038]
[137.41342163 144.31694031]
[150.33160400 151.94062805]
[161.81762695 161.58796692]
[171.55773926 172.99543762]
[179.28587341 185.85140991]
[184.79092407 199.80470276]
[187.92251587 214.47416687]
[188.59509277 229.45907593]
[186.79028320 244.35009766]
[182.55740356 258.74047852]
[176.01208496 272.23709106]
[167.33308411 284.47128296]
[156.75752258 295.10882568]
[144.57427979 303.85916138]
[131.11614990 310.48324585]
[116.75076294 314.80017090]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 43]
[17 42]
[18 41]
[19 40]
[20 39]
[25 34]
[26 33]
[27 32]
[44 89]
[45 88]
[46 87]
[48 85]
[49 84]
[51 81]
[52 80]
[53 79]
[54 78]
[55 77]
[58 75]
[59 74]
[60 73]
[62 71]
[63 70]
] def

init

% Start Annotations
16 43 0.16 0.2 colorpair
17 42 0.0 0.6 colorpair
18 41 0.16 0.6 colorpair
19 40 0.16 1 colorpair
20 39 0.16 1 colorpair
25 34 0.16 0.6 colorpair
26 33 0.0 1 colorpair
27 32 0.16 0.2 colorpair
44 89 0.16 0.2 colorpair
45 88 0.16 1 colorpair
46 87 0.16 0.6 colorpair
48 85 0.16 0.6 colorpair
49 84 0.0 0.6 colorpair
52 80 0.32 1 colorpair
53 79 0.16 1 colorpair
54 78 0.16 0.6 colorpair
55 77 0.0 1 colorpair
58 75 0.32 0.2 colorpair
59 74 0.0 1 colorpair
60 73 0.16 0.6 colorpair
62 71 0.0 1 colorpair
63 70 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
16 43 2 gmark
16 cmark
17 42 1 gmark
18 41 1 gmark
18 cmark
19 cmark
20 cmark
25 34 1 gmark
34 cmark
27 32 2 gmark
27 cmark
44 89 2 gmark
44 cmark
45 cmark
46 87 1 gmark
87 cmark
48 85 1 gmark
85 cmark
49 84 1 gmark
51 81 4 gmark
51 cmark
81 cmark
52 cmark
80 cmark
53 cmark
79 cmark
54 78 1 gmark
54 cmark
58 75 2 gmark
58 cmark
75 cmark
60 73 1 gmark
60 cmark
73 cmark
63 70 1 gmark
63 cmark

% End Annotations
showpage
end
%%EOF
