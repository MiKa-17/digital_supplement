%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Dec 18 14:15:27 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGCUCGCAGAGCUGGGCAUGGCCUUCUGGCAUGAUUUAGCGGCUCCGGUCAUUGCUGGCAUUCUUGCCAGUAUGAUCGUGAACUGGCUGAACAAGCGGAAGUAA\
) } def
/len { sequence length } bind def

/coor [
[127.07065582 274.49142456]
[112.38314056 271.44561768]
[98.39791107 266.02221680]
[85.49699402 258.36935425]
[74.03280640 248.69607544]
[64.31849670 237.26663208]
[56.61943436 224.39323425]
[51.14593124 210.42753601]
[48.04750443 195.75102234]
[47.40879059 180.76463318]
[49.24723816 165.87771606]
[53.51262665 151.49694824]
[60.08844376 138.01516724]
[68.79505920 125.80062866]
[79.39463043 115.18700409]
[91.59297943 106.46698761]
[76.71896362 104.52696228]
[61.84495163 102.58692932]
[46.97093582 100.64689636]
[32.09692383 98.70686340]
[17.19649696 96.98137665]
[2.27275372 95.47078705]
[-12.65099049 93.96019745]
[-21.65949440 96.23220062]
[-27.98085976 92.18498230]
[-42.85487366 90.24494934]
[-57.72888565 88.30491638]
[-72.65626526 95.09500885]
[-85.84125519 85.34369659]
[-83.72026062 69.08228302]
[-68.47518921 63.03912735]
[-55.78885651 73.43090057]
[-40.91484070 75.37093353]
[-26.04082870 77.31096649]
[-11.14040279 79.03645325]
[3.78334093 80.54704285]
[18.70708466 82.05763245]
[25.78609848 79.56219482]
[34.03695679 83.83284760]
[48.91096878 85.77288055]
[63.78498077 87.71291351]
[78.65899658 89.65294647]
[93.53301239 91.59297943]
[107.49234772 86.10327911]
[117.06037140 74.55109406]
[126.62839508 62.99890900]
[129.47222900 47.43539047]
[143.54940796 42.56891251]
[153.11741638 31.01672935]
[155.70217896 12.85643959]
[172.26336670 7.25229502]
[181.49450684 -4.57082272]
[190.72564697 -16.39394188]
[199.95678711 -28.21706009]
[209.18791199 -40.04017639]
[208.40391541 -53.01399612]
[216.46229553 -62.69317627]
[228.56370544 -64.17455292]
[238.13171387 -75.72673798]
[247.69973755 -87.27892303]
[257.26776123 -98.83110809]
[266.83578491 -110.38329315]
[276.40380859 -121.93547821]
[274.67620850 -137.64506531]
[284.62802124 -149.92256165]
[300.35498047 -151.48397827]
[312.52658081 -141.40292358]
[313.92163086 -125.66032410]
[303.71246338 -113.59597778]
[287.95599365 -112.36745453]
[278.38796997 -100.81526947]
[268.81994629 -89.26308441]
[259.25192261 -77.71089935]
[249.68389893 -66.15871429]
[240.11589050 -54.60652924]
[238.19429016 -37.22875595]
[221.01103210 -30.80904007]
[211.77989197 -18.98592377]
[202.54876709 -7.16280460]
[193.31762695 4.66031361]
[184.08648682 16.48343086]
[185.23516846 28.62093544]
[177.50964355 38.56781769]
[164.66960144 40.58475113]
[155.10159302 52.13693619]
[152.94210815 66.87416840]
[138.18057251 72.56693268]
[128.61256409 84.11911774]
[119.04453278 95.67130280]
[133.92044067 93.74588013]
[148.91032410 94.29699707]
[163.60467529 97.30959320]
[177.60212708 102.70138550]
[190.52030945 110.32508087]
[202.00633240 119.97241974]
[211.74644470 131.37988281]
[219.47457886 144.23585510]
[224.97962952 158.18914795]
[228.11122131 172.85861206]
[228.78379822 187.84352112]
[226.97898865 202.73455811]
[222.74610901 217.12492371]
[216.20079041 230.62153625]
[207.52180481 242.85571289]
[196.94624329 253.49327087]
[184.76298523 262.24362183]
[171.30485535 268.86770630]
[156.93946838 273.18463135]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 43]
[17 42]
[18 41]
[19 40]
[20 39]
[21 37]
[22 36]
[23 35]
[25 34]
[26 33]
[27 32]
[44 89]
[45 88]
[46 87]
[48 85]
[49 84]
[51 81]
[52 80]
[53 79]
[54 78]
[55 77]
[58 75]
[59 74]
[60 73]
[61 72]
[62 71]
[63 70]
] def

init

% Start Annotations
16 43 0.16 1 colorpair
17 42 0.0 0.6 colorpair
18 41 0.16 0.6 colorpair
19 40 0.0 1 colorpair
20 39 0.16 1 colorpair
21 37 0.16 1 colorpair
23 35 0.0 1 colorpair
25 34 0.0 0.6 colorpair
26 33 0.0 1 colorpair
27 32 0.16 0.2 colorpair
44 89 0.0 0.2 colorpair
45 88 0.16 1 colorpair
46 87 0.16 0.6 colorpair
48 85 0.16 1 colorpair
49 84 0.0 1 colorpair
51 81 0.32 0.2 colorpair
52 80 0.16 1 colorpair
53 79 0.16 1 colorpair
54 78 0.16 0.6 colorpair
55 77 0.0 1 colorpair
58 75 0.32 0.2 colorpair
59 74 0.0 1 colorpair
60 73 0.16 0.6 colorpair
61 72 0.0 0.2 colorpair
62 71 0.0 1 colorpair
63 70 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
16 cmark
17 42 1 gmark
18 41 1 gmark
18 cmark
20 cmark
21 cmark
22 36 14 gmark
22 cmark
36 cmark
25 34 1 gmark
27 32 2 gmark
27 cmark
44 89 2 gmark
45 cmark
46 87 1 gmark
87 cmark
85 cmark
51 81 2 gmark
51 cmark
81 cmark
52 cmark
53 cmark
79 cmark
54 78 1 gmark
54 cmark
58 75 2 gmark
58 cmark
75 cmark
60 73 1 gmark
60 cmark
73 cmark
61 72 2 gmark
63 70 1 gmark
63 cmark

% End Annotations
showpage
end
%%EOF
