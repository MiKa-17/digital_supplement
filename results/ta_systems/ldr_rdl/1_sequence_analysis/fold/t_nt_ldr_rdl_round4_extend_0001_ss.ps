%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Dec 18 16:29:21 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGCUCGCAGAGCUGGGCAUGGCCUUCUGGCAUGAUUUAGCGGCUCCGGUCAUUGCUGGCAUUCUUGCCAGUAUGAUCGUGAACUGGCUGAACAAGCGGAAGUAA\
) } def
/len { sequence length } bind def

/coor [
[100.12807465 177.68531799]
[89.54576874 176.97879028]
[79.15830994 174.83749390]
[69.15931702 171.30131531]
[59.73514557 166.43618774]
[51.06145859 160.33277893]
[40.53155518 171.01553345]
[30.00165558 181.69828796]
[34.16091919 196.48329163]
[30.35490036 211.36312866]
[19.60739708 222.33522034]
[4.80943680 226.44812012]
[-10.05840492 222.59547424]
[-20.99675369 211.81362915]
[-25.06324768 197.00285339]
[-21.16402245 182.14717102]
[-10.34794712 171.24266052]
[4.47550678 167.22261047]
[19.31890488 171.16838074]
[29.84880447 160.48564148]
[40.37870789 149.80288696]
[32.34053040 138.17358398]
[26.54293442 125.28014374]
[23.17790604 111.54953766]
[22.35688019 97.43646240]
[7.48286581 95.49642944]
[-7.39114761 93.55639648]
[-22.31852722 100.34648895]
[-35.50351334 90.59516907]
[-33.38252258 74.33376312]
[-18.13744736 68.29060364]
[-5.45111561 78.68238068]
[9.42289829 80.62241364]
[24.29691124 82.56244659]
[32.10860443 62.24044418]
[45.25265884 44.88417053]
[62.69671249 31.85683823]
[83.07065582 24.18164253]
[104.77428436 22.46141434]
[126.10292053 26.83126640]
[145.38136292 36.94797897]
[155.27832031 25.67632103]
[165.17527771 14.40466499]
[175.07223511 3.13300824]
[184.80574036 -8.28009796]
[194.37376404 -19.83228302]
[197.21759033 -35.39580154]
[211.29476929 -40.26227951]
[220.86279297 -51.81446457]
[223.44754028 -69.97475433]
[240.00874329 -75.57889557]
[249.23986816 -87.40201569]
[258.47100830 -99.22513580]
[267.70214844 -111.04825592]
[276.93328857 -122.87136841]
[276.14929199 -135.84518433]
[284.20767212 -145.52436829]
[296.30905151 -147.00573730]
[305.87707520 -158.55792236]
[315.44509888 -170.11010742]
[318.28894043 -185.67362976]
[332.36611938 -190.54011536]
[341.93414307 -202.09230042]
[340.20654297 -217.80187988]
[350.15835571 -230.07939148]
[365.88531494 -231.64079285]
[378.05691528 -221.55973816]
[379.45196533 -205.81713867]
[369.24279785 -193.75280762]
[353.48632812 -192.52427673]
[343.91830444 -180.97209167]
[341.75881958 -166.23486328]
[326.99728394 -160.54209900]
[317.42926025 -148.98991394]
[307.86123657 -137.43772888]
[305.93966675 -120.05995178]
[288.75640869 -113.64023590]
[279.52526855 -101.81711578]
[270.29412842 -89.99399567]
[261.06298828 -78.17088318]
[251.83184814 -66.34776306]
[252.98052979 -54.21025848]
[245.25502014 -44.26337814]
[232.41497803 -42.24644470]
[222.84695435 -30.69425964]
[220.68748474 -15.95702839]
[205.92594910 -10.26426220]
[196.35792542 1.28792286]
[194.48681641 8.55693913]
[186.34388733 13.02996540]
[176.44692993 24.30162239]
[166.54997253 35.57327652]
[156.65301514 46.84493637]
[163.36503601 55.05671692]
[168.89601135 64.10617828]
[173.14285278 73.82464600]
[176.02642822 84.03099060]
[177.49296570 94.53498077]
[177.51515198 105.14082336]
[176.09255981 115.65084839]
[173.25170898 125.86916351]
[169.04554749 135.60531616]
[163.55247498 144.67784119]
[156.87487793 152.91761780]
[149.13720703 160.17109680]
[140.48368835 166.30307007]
[131.07560730 171.19924927]
[121.08833313 174.76835632]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 21]
[7 20]
[8 19]
[25 34]
[26 33]
[27 32]
[41 93]
[42 92]
[43 91]
[44 90]
[45 88]
[46 87]
[48 85]
[49 84]
[51 81]
[52 80]
[53 79]
[54 78]
[55 77]
[58 75]
[59 74]
[60 73]
[62 71]
[63 70]
] def

init

% Start Annotations
6 21 0.16 0.6 colorpair
7 20 0.16 0.6 colorpair
8 19 0.16 1 colorpair
25 34 0.16 0.6 colorpair
26 33 0.0 1 colorpair
27 32 0.16 0.2 colorpair
41 93 0.16 1 colorpair
42 92 0.0 1 colorpair
43 91 0.16 1 colorpair
44 90 0.16 1 colorpair
45 88 0.16 1 colorpair
46 87 0.16 0.6 colorpair
48 85 0.16 0.6 colorpair
49 84 0.0 0.6 colorpair
52 80 0.32 1 colorpair
53 79 0.16 1 colorpair
54 78 0.16 0.6 colorpair
55 77 0.0 1 colorpair
58 75 0.32 0.2 colorpair
59 74 0.0 1 colorpair
60 73 0.16 0.6 colorpair
62 71 0.0 1 colorpair
63 70 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
6 21 1 gmark
21 cmark
7 20 1 gmark
7 cmark
19 cmark
25 34 1 gmark
34 cmark
27 32 2 gmark
27 cmark
93 cmark
91 cmark
44 cmark
45 cmark
46 87 1 gmark
87 cmark
48 85 1 gmark
85 cmark
49 84 1 gmark
51 81 4 gmark
51 cmark
81 cmark
52 cmark
80 cmark
53 cmark
79 cmark
54 78 1 gmark
54 cmark
58 75 2 gmark
58 cmark
75 cmark
60 73 1 gmark
60 cmark
73 cmark
63 70 1 gmark
63 cmark

% End Annotations
showpage
end
%%EOF
