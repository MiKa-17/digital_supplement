%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Dec 18 14:15:39 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGCUCGCAGAGCUGGGCAUGGCCUUCUGGCAUGAUUUAGCGGCUCCGGUCAUUGCUGGCAUUCUUGCCAGUAUGAUCGUGAACUGGCUGAACAAGCGGAAGUAA\
) } def
/len { sequence length } bind def

/coor [
[140.36595154 258.17205811]
[125.37724304 258.75415039]
[110.53833008 256.56170654]
[96.35838318 251.66996765]
[83.32394409 244.24679565]
[71.88227081 234.54690552]
[62.42594910 222.90310669]
[55.27945709 209.71493530]
[50.68801498 195.43493652]
[48.80916214 180.55307007]
[49.70737076 165.57998657]
[53.35181808 151.02944946]
[59.61745453 137.40074158]
[68.28929138 125.16148376]
[79.06976318 114.73165894]
[91.59297943 106.46698761]
[76.71896362 104.52696228]
[61.84495163 102.58692932]
[46.97093582 100.64689636]
[32.09692383 98.70686340]
[17.19649696 96.98137665]
[2.27275372 95.47078705]
[-12.65099049 93.96019745]
[-21.65949440 96.23220062]
[-27.98085976 92.18498230]
[-42.85487366 90.24494934]
[-57.72888565 88.30491638]
[-72.65626526 95.09500885]
[-85.84125519 85.34369659]
[-83.72026062 69.08228302]
[-68.47518921 63.03912735]
[-55.78885651 73.43090057]
[-40.91484070 75.37093353]
[-26.04082870 77.31096649]
[-11.14040279 79.03645325]
[3.78334093 80.54704285]
[18.70708466 82.05763245]
[25.78609848 79.56219482]
[34.03695679 83.83284760]
[48.91096878 85.77288055]
[63.78498077 87.71291351]
[78.65899658 89.65294647]
[93.53301239 91.59297943]
[107.78543854 86.91662598]
[118.61882019 76.54176331]
[129.45220947 66.16689301]
[140.28558350 55.79203033]
[150.50326538 44.81026840]
[160.07127380 33.25808334]
[162.65603638 15.09779263]
[179.21722412 9.49364758]
[188.44836426 -2.32947040]
[197.67950439 -14.15258884]
[206.91064453 -25.97570610]
[216.14176941 -37.79882431]
[215.35777283 -50.77264404]
[223.41615295 -60.45182419]
[235.51756287 -61.93319702]
[245.08557129 -73.48538208]
[254.65359497 -85.03756714]
[264.22161865 -96.58975220]
[273.78964233 -108.14193726]
[283.35766602 -119.69412231]
[281.63006592 -135.40370178]
[291.58187866 -147.68121338]
[307.30883789 -149.24261475]
[319.48043823 -139.16157532]
[320.87548828 -123.41896820]
[310.66632080 -111.35462952]
[294.90985107 -110.12610626]
[285.34182739 -98.57392120]
[275.77380371 -87.02173615]
[266.20578003 -75.46955109]
[256.63775635 -63.91736221]
[247.06974792 -52.36517715]
[245.14814758 -34.98740387]
[227.96488953 -28.56768799]
[218.73376465 -16.74456978]
[209.50262451 -4.92145252]
[200.27148438 6.90166569]
[191.04034424 18.72478485]
[192.18902588 30.86228752]
[184.46350098 40.80916977]
[171.62345886 42.82610321]
[162.05545044 54.37828827]
[162.28295898 57.31903458]
[161.26786804 60.53087234]
[158.89910889 63.50482559]
[155.26557922 65.70129395]
[150.66044617 66.62541199]
[139.82707214 77.00028229]
[128.99368286 87.37514496]
[118.16030121 97.75000763]
[133.14097595 96.98872375]
[148.00503540 99.00354767]
[162.24247742 103.72534180]
[175.36476135 110.99210358]
[186.92161560 120.55447388]
[196.51651001 132.08435059]
[203.82020569 145.18609619]
[208.58210754 159.41018677]
[210.63879395 174.26850891]
[209.91970825 189.25126648]
[206.44953918 203.84434509]
[200.34733582 217.54701233]
[191.82249451 229.88909912]
[181.16752625 240.44709778]
[168.74801636 248.85876465]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 43]
[17 42]
[18 41]
[19 40]
[20 39]
[21 37]
[22 36]
[23 35]
[25 34]
[26 33]
[27 32]
[44 93]
[45 92]
[46 91]
[47 90]
[48 85]
[49 84]
[51 81]
[52 80]
[53 79]
[54 78]
[55 77]
[58 75]
[59 74]
[60 73]
[61 72]
[62 71]
[63 70]
] def

init

% Start Annotations
16 43 0.16 1 colorpair
17 42 0.0 0.6 colorpair
18 41 0.16 0.6 colorpair
19 40 0.0 1 colorpair
20 39 0.16 1 colorpair
21 37 0.16 1 colorpair
23 35 0.0 1 colorpair
25 34 0.0 0.6 colorpair
26 33 0.0 1 colorpair
27 32 0.16 0.2 colorpair
44 93 0.0 0.2 colorpair
45 92 0.16 1 colorpair
46 91 0.16 0.6 colorpair
47 90 0.16 1 colorpair
48 85 0.16 1 colorpair
49 84 0.0 1 colorpair
51 81 0.32 0.2 colorpair
52 80 0.16 1 colorpair
53 79 0.16 1 colorpair
54 78 0.16 0.6 colorpair
55 77 0.0 1 colorpair
58 75 0.32 0.2 colorpair
59 74 0.0 1 colorpair
60 73 0.16 0.6 colorpair
61 72 0.0 0.2 colorpair
62 71 0.0 1 colorpair
63 70 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
16 cmark
17 42 1 gmark
18 41 1 gmark
18 cmark
20 cmark
21 cmark
22 36 14 gmark
22 cmark
36 cmark
25 34 1 gmark
27 32 2 gmark
27 cmark
44 93 2 gmark
45 cmark
46 91 1 gmark
91 cmark
47 cmark
85 cmark
51 81 2 gmark
51 cmark
81 cmark
52 cmark
53 cmark
79 cmark
54 78 1 gmark
54 cmark
58 75 2 gmark
58 cmark
75 cmark
60 73 1 gmark
60 cmark
73 cmark
61 72 2 gmark
63 70 1 gmark
63 cmark

% End Annotations
showpage
end
%%EOF
