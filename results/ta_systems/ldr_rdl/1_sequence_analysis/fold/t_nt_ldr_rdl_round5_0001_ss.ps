%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Dec 18 18:35:28 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGCUCGCAGAGCUGGGCAUGGCCUUCUGGCAUGAUUUAGCGGCUCCGGUCAUUGCUGGCAUUCUUGCCAGUAUGAUCGUGAACUGGCUGAACAAGCGGAAGUAA\
) } def
/len { sequence length } bind def

/coor [
[97.32868195 183.58572388]
[86.40933990 182.51667786]
[75.72392273 180.02737427]
[65.45634460 176.16064453]
[55.78332520 170.98304749]
[46.87135696 164.58370972]
[36.34145355 175.26646423]
[25.81155396 185.94921875]
[29.97081757 200.73420715]
[26.16479683 215.61405945]
[15.41729546 226.58615112]
[0.61933482 230.69905090]
[-14.24850750 226.84640503]
[-25.18685532 216.06455994]
[-29.25334930 201.25378418]
[-25.35412407 186.39808655]
[-14.53804874 175.49359131]
[0.28540438 171.47354126]
[15.12880230 175.41931152]
[25.65870285 164.73655701]
[36.18860626 154.05380249]
[27.30657005 141.34457397]
[20.92344093 127.21408081]
[17.25864029 112.14807892]
[16.43815041 96.66447449]
[1.56413662 94.72444153]
[-13.30987644 92.78440857]
[-28.23725700 99.57450104]
[-41.42224121 89.82318878]
[-39.30125046 73.56177521]
[-24.05617714 67.51862335]
[-11.36984539 77.91040039]
[3.50416851 79.85042572]
[18.37818146 81.79045868]
[25.33596230 62.33051682]
[36.85341644 45.17101669]
[52.22718430 31.35987663]
[70.51839447 21.74053764]
[90.61003113 16.90044022]
[111.27510071 17.13516617]
[131.25160217 22.43038177]
[149.31961060 32.46271133]
[159.21656799 21.19105721]
[169.11352539 9.91940022]
[178.84701538 -1.49370575]
[188.41503906 -13.04589081]
[191.25888062 -28.60941124]
[205.33604431 -33.47588730]
[214.90406799 -45.02807236]
[217.48883057 -63.18836212]
[234.05001831 -68.79250336]
[243.28115845 -80.61562347]
[252.51229858 -92.43874359]
[261.74343872 -104.26186371]
[270.97457886 -116.08497620]
[270.19055176 -129.05879211]
[278.24893188 -138.73797607]
[290.35034180 -140.21934509]
[299.91836548 -151.77153015]
[309.48638916 -163.32371521]
[312.33023071 -178.88723755]
[326.40740967 -183.75372314]
[335.97540283 -195.30590820]
[334.24783325 -211.01548767]
[344.19961548 -223.29299927]
[359.92660522 -224.85440063]
[372.09820557 -214.77334595]
[373.49325562 -199.03074646]
[363.28405762 -186.96641541]
[347.52758789 -185.73788452]
[337.95959473 -174.18569946]
[335.80010986 -159.44847107]
[321.03857422 -153.75570679]
[311.47055054 -142.20352173]
[301.90252686 -130.65133667]
[299.98092651 -113.27355957]
[282.79766846 -106.85384369]
[273.56655884 -95.03072357]
[264.33541870 -83.20760345]
[255.10427856 -71.38449097]
[245.87313843 -59.56137085]
[247.02180481 -47.42386627]
[239.29629517 -37.47698593]
[226.45625305 -35.46005249]
[216.88822937 -23.90786743]
[214.72875977 -9.17063713]
[199.96722412 -3.47787046]
[190.39920044 8.07431507]
[188.52809143 15.34333038]
[180.38517761 19.81635666]
[170.48822021 31.08801460]
[160.59126282 42.35966873]
[167.61560059 50.78780746]
[173.47613525 60.06298065]
[178.07202148 70.02554321]
[181.32414246 80.50402069]
[183.17651367 91.31806183]
[183.59727478 102.28153229]
[182.57916260 113.20574188]
[180.13970947 123.90264893]
[176.32089233 134.18814087]
[171.18846130 143.88520813]
[164.83074951 152.82691956]
[157.35716248 160.85937500]
[148.89636230 167.84432983]
[139.59396362 173.66156006]
[129.61009216 178.21093750]
[119.11655426 181.41416931]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 21]
[7 20]
[8 19]
[25 34]
[26 33]
[27 32]
[42 92]
[43 91]
[44 90]
[45 88]
[46 87]
[48 85]
[49 84]
[51 81]
[52 80]
[53 79]
[54 78]
[55 77]
[58 75]
[59 74]
[60 73]
[62 71]
[63 70]
] def

init

% Start Annotations
8 19 0.16 0.2 colorpair
26 33 0.0 0.2 colorpair
42 92 0.0 0.6 colorpair
43 91 0.16 0.6 colorpair
44 90 0.16 1 colorpair
45 88 0.16 1 colorpair
46 87 0.16 0.6 colorpair
48 85 0.16 0.6 colorpair
49 84 0.0 0.6 colorpair
52 80 0.32 1 colorpair
53 79 0.16 1 colorpair
54 78 0.16 0.6 colorpair
55 77 0.0 1 colorpair
58 75 0.32 0.2 colorpair
59 74 0.0 1 colorpair
60 73 0.16 0.6 colorpair
62 71 0.0 1 colorpair
63 70 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
6 21 3 gmark
21 cmark
7 20 3 gmark
7 cmark
8 19 2 gmark
19 cmark
25 34 3 gmark
34 cmark
26 33 2 gmark
27 32 4 gmark
27 cmark
42 92 1 gmark
43 91 1 gmark
91 cmark
44 cmark
45 cmark
46 87 1 gmark
87 cmark
48 85 1 gmark
85 cmark
49 84 1 gmark
51 81 4 gmark
51 cmark
81 cmark
52 cmark
80 cmark
53 cmark
79 cmark
54 78 1 gmark
54 cmark
58 75 2 gmark
58 cmark
75 cmark
60 73 1 gmark
60 cmark
73 cmark
63 70 1 gmark
63 cmark

% End Annotations
showpage
end
%%EOF
