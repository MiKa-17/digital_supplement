%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Dec 18 11:04:12 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGCUCGCAGAGCUGGGCAUGGCCUUCUGGCAUGAUUUAGCGGCUCCGGUCAUUGCUGGCAUUCUUGCCAGUAUGAUCGUGAACUGGCUGAACAAGCGGAAGUAA\
) } def
/len { sequence length } bind def

/coor [
[80.22911835 229.52301025]
[75.58492279 214.98361206]
[77.71756744 199.87022400]
[86.20360565 187.18362427]
[99.35813141 179.44273376]
[98.06275940 164.49877930]
[96.76738739 149.55480957]
[95.47201538 134.61085510]
[85.52324677 131.76219177]
[76.84691620 126.12179565]
[70.20562744 118.18540955]
[56.02206802 123.06665802]
[41.83850861 127.94790649]
[27.65494919 132.82916260]
[24.04115868 137.01390076]
[19.60200691 139.07847595]
[15.32761860 139.07586670]
[12.03057480 137.46139526]
[-2.52153373 141.09954834]
[-17.07364273 144.73768616]
[-31.62575150 148.37583923]
[-45.52543640 158.08331299]
[-58.70135498 147.41413879]
[-52.09658432 131.79960632]
[-35.26390076 133.82373047]
[-20.71179199 130.18557739]
[-6.15968323 126.54743195]
[8.39242554 122.90928650]
[22.77369690 118.64559937]
[36.95725632 113.76435089]
[51.14081955 108.88309479]
[65.32437897 104.00184631]
[65.77561951 93.13668823]
[69.54856110 82.93766022]
[76.27702332 74.39465332]
[85.30796051 68.33681488]
[95.76486206 65.35209656]
[106.63281250 65.73020172]
[116.85700226 69.43441010]
[126.75395203 58.16275787]
[136.65090942 46.89110184]
[146.54786682 35.61944580]
[156.44482422 24.34778786]
[166.34178162 13.07613182]
[176.07528687 1.66302562]
[185.64331055 -9.88915920]
[188.48715210 -25.45267868]
[202.56431580 -30.31915665]
[212.13233948 -41.87134171]
[221.53288269 -53.56020737]
[230.76402283 -65.38332367]
[239.99516296 -77.20644379]
[249.22630310 -89.02956390]
[258.45742798 -100.85267639]
[267.68856812 -112.67579651]
[266.90457153 -125.64962006]
[274.96295166 -135.32879639]
[287.06436157 -136.81016541]
[296.63238525 -148.36235046]
[306.20037842 -159.91453552]
[315.76840210 -171.46672058]
[325.33642578 -183.01890564]
[334.90444946 -194.57109070]
[344.47247314 -206.12327576]
[346.68170166 -222.37294006]
[361.95938110 -228.33325195]
[374.58911133 -217.87275696]
[371.57852173 -201.75231934]
[356.02465820 -196.55526733]
[346.45663452 -185.00308228]
[336.88861084 -173.45089722]
[327.32058716 -161.89871216]
[317.75256348 -150.34652710]
[308.18457031 -138.79434204]
[298.61654663 -127.24214935]
[296.69494629 -109.86437225]
[279.51168823 -103.44466400]
[270.28054810 -91.62154388]
[261.04940796 -79.79842377]
[251.81828308 -67.97530365]
[242.58714294 -56.15218735]
[233.35600281 -44.32907104]
[231.69515991 -37.00915146]
[223.68452454 -32.30332184]
[214.11650085 -20.75113487]
[211.95703125 -6.01390553]
[197.19549561 -0.32113898]
[187.62747192 11.23104572]
[185.75636292 18.50006294]
[177.61343384 22.97308922]
[167.71647644 34.24474335]
[157.81951904 45.51640320]
[147.92257690 56.78805923]
[138.02561951 68.05971527]
[128.12866211 79.33136749]
[134.90577698 100.00451660]
[128.12330627 120.67590332]
[110.41597748 133.31547546]
[111.71134949 148.25944519]
[113.00672150 163.20339966]
[114.30209351 178.14736938]
[128.59239197 183.50927734]
[139.13485718 194.54644775]
[143.83625793 209.06745911]
[141.76315308 224.18911743]
[133.32714844 236.90904236]
[120.20320129 244.70167542]
[104.99710846 246.01976013]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 101]
[6 100]
[7 99]
[8 98]
[11 32]
[12 31]
[13 30]
[14 29]
[18 28]
[19 27]
[20 26]
[21 25]
[39 95]
[40 94]
[41 93]
[42 92]
[43 91]
[44 90]
[45 88]
[46 87]
[48 85]
[49 84]
[50 82]
[51 81]
[52 80]
[53 79]
[54 78]
[55 77]
[58 75]
[59 74]
[60 73]
[61 72]
[62 71]
[63 70]
[64 69]
] def

init

% Start Annotations
5 101 0.0 0.2 colorpair
6 100 0.0 0.6 colorpair
7 99 0.16 0.2 colorpair
8 98 0.0 1 colorpair
11 32 0.0 0.6 colorpair
12 31 0.16 1 colorpair
13 30 0.0 1 colorpair
14 29 0.0 1 colorpair
18 28 0.0 0.6 colorpair
19 27 0.0 0.6 colorpair
20 26 0.0 1 colorpair
21 25 0.0 0.6 colorpair
39 95 0.0 1 colorpair
40 94 0.0 1 colorpair
41 93 0.0 1 colorpair
42 92 0.0 1 colorpair
43 91 0.0 1 colorpair
44 90 0.0 1 colorpair
45 88 0.0 1 colorpair
46 87 0.16 1 colorpair
48 85 0.0 1 colorpair
49 84 0.0 1 colorpair
50 82 0.16 1 colorpair
51 81 0.16 1 colorpair
52 80 0.16 1 colorpair
53 79 0.0 1 colorpair
54 78 0.0 1 colorpair
55 77 0.0 1 colorpair
58 75 0.32 1 colorpair
59 74 0.0 1 colorpair
60 73 0.0 1 colorpair
61 72 0.0 1 colorpair
62 71 0.0 1 colorpair
63 70 0.16 0.6 colorpair
64 69 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
5 101 2 gmark
6 100 1 gmark
7 99 2 gmark
7 cmark
11 32 1 gmark
12 cmark
18 28 1 gmark
19 27 1 gmark
21 25 1 gmark
87 cmark
50 cmark
81 cmark
52 cmark
58 cmark
75 cmark
63 70 1 gmark
63 cmark

% End Annotations
showpage
end
%%EOF
