%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Dec 18 12:25:27 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGCUCGCAGAACUGGGCAUGGCCUUCUGGCAUGAUUUAGCGGCUCCGGUCAUUGCUGGCAUUCUUGCCAGUAUGAUCGUGAACUGGCUGAACAAGCGGAAGUAA\
) } def
/len { sequence length } bind def

/coor [
[105.14196014 164.04551697]
[95.62475586 164.10246277]
[86.20355988 162.75289917]
[77.08507538 160.02644348]
[68.46938324 155.98292542]
[60.54551315 150.71105957]
[50.01561356 161.39381409]
[39.48571014 172.07656860]
[28.95581055 182.75932312]
[18.42590904 193.44206238]
[18.79039764 209.24215698]
[7.81551123 220.61437988]
[-7.98754454 220.81179810]
[-19.24309731 209.71728516]
[-19.27342796 193.91302490]
[-8.06054020 182.77540588]
[7.74315739 182.91217041]
[18.27305794 172.22941589]
[28.80295944 161.54666138]
[39.33286285 150.86390686]
[49.86276245 140.18115234]
[43.72301483 131.00273132]
[39.24556732 120.90854645]
[36.56267548 110.19676971]
[35.75358200 99.18380737]
[20.87957001 97.24377441]
[6.00555658 95.30374146]
[-8.92182350 102.09383392]
[-22.10680771 92.34251404]
[-19.98581696 76.08110809]
[-4.74074316 70.03794861]
[7.94558859 80.42972565]
[22.81960106 82.36975861]
[37.69361496 84.30979156]
[48.16730118 62.03107071]
[66.25014496 45.32627869]
[89.28755188 36.64771652]
[113.89756775 37.26942062]
[136.46739197 47.10011673]
[146.36434937 35.82846069]
[156.26130676 24.55680275]
[166.15826416 13.28514671]
[176.05522156 2.01349020]
[185.95217896 -9.25816631]
[195.68566895 -20.67127228]
[205.25369263 -32.22345734]
[208.09753418 -47.78697586]
[222.17469788 -52.65345383]
[231.74272156 -64.20564270]
[241.14328003 -75.89450073]
[250.37442017 -87.71762085]
[259.60556030 -99.54074097]
[268.83670044 -111.36386108]
[278.06781006 -123.18697357]
[287.29895020 -135.01010132]
[286.51495361 -147.98391724]
[294.57333374 -157.66308594]
[306.67474365 -159.14447021]
[316.24276733 -170.69665527]
[325.81079102 -182.24884033]
[335.37881470 -193.80102539]
[344.94683838 -205.35321045]
[354.51483154 -216.90539551]
[364.08285522 -228.45758057]
[366.29211426 -244.70722961]
[381.56976318 -250.66754150]
[394.19949341 -240.20704651]
[391.18890381 -224.08660889]
[375.63504028 -218.88955688]
[366.06701660 -207.33737183]
[356.49902344 -195.78518677]
[346.93099976 -184.23300171]
[337.36297607 -172.68081665]
[327.79495239 -161.12863159]
[318.22692871 -149.57644653]
[316.30532837 -132.19866943]
[299.12207031 -125.77896118]
[289.89093018 -113.95584106]
[280.65982056 -102.13272095]
[271.42868042 -90.30960083]
[262.19754028 -78.48648834]
[252.96640015 -66.66336823]
[251.30554199 -59.34344864]
[243.29490662 -54.63761902]
[233.72688293 -43.08543396]
[231.56741333 -28.34820366]
[216.80587769 -22.65543747]
[207.23785400 -11.10325146]
[205.36676025 -3.83423567]
[197.22383118 0.63879102]
[187.32687378 11.91044712]
[177.42991638 23.18210411]
[167.53295898 34.45376205]
[157.63600159 45.72541809]
[147.73904419 56.99707413]
[153.56768799 64.52084351]
[158.22099304 72.82308197]
[161.59683228 81.72161865]
[163.62113953 91.02120972]
[164.24951172 100.51781464]
[163.46815491 110.00305176]
[161.29421997 119.26881409]
[157.77539062 128.11178589]
[152.98889160 136.33793640]
[147.03973389 143.76678467]
[140.05845642 150.23533630]
[132.19822693 155.60163879]
[123.63153839 159.74795532]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 21]
[7 20]
[8 19]
[9 18]
[10 17]
[25 34]
[26 33]
[27 32]
[39 95]
[40 94]
[41 93]
[42 92]
[43 91]
[44 90]
[45 88]
[46 87]
[48 85]
[49 84]
[50 82]
[51 81]
[52 80]
[53 79]
[54 78]
[55 77]
[58 75]
[59 74]
[60 73]
[61 72]
[62 71]
[63 70]
[64 69]
] def

init

% Start Annotations
6 21 0.0 0.6 colorpair
7 20 0.16 0.6 colorpair
8 19 0.0 1 colorpair
9 18 0.0 0.2 colorpair
10 17 0.16 1 colorpair
25 34 0.0 0.6 colorpair
26 33 0.0 1 colorpair
27 32 0.0 0.2 colorpair
39 95 0.0 0.6 colorpair
40 94 0.0 0.6 colorpair
41 93 0.0 1 colorpair
42 92 0.0 1 colorpair
43 91 0.0 1 colorpair
44 90 0.0 1 colorpair
45 88 0.0 1 colorpair
46 87 0.16 0.6 colorpair
48 85 0.0 1 colorpair
49 84 0.0 1 colorpair
50 82 0.16 0.2 colorpair
51 81 0.32 1 colorpair
52 80 0.16 1 colorpair
53 79 0.0 1 colorpair
54 78 0.0 1 colorpair
55 77 0.0 1 colorpair
58 75 0.32 1 colorpair
59 74 0.0 1 colorpair
60 73 0.0 1 colorpair
61 72 0.0 1 colorpair
62 71 0.0 1 colorpair
63 70 0.16 0.6 colorpair
64 69 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
6 21 1 gmark
7 20 1 gmark
7 cmark
9 18 2 gmark
17 cmark
25 34 1 gmark
27 32 2 gmark
39 95 1 gmark
40 94 1 gmark
46 87 1 gmark
87 cmark
50 82 2 gmark
50 cmark
51 cmark
81 cmark
52 cmark
58 cmark
75 cmark
63 70 1 gmark
63 cmark

% End Annotations
showpage
end
%%EOF
