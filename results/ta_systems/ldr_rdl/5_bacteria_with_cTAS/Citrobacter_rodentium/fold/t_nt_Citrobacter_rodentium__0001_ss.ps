%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 09:12:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGCUGAUUCAGUUAGGCAUUGCCUUCUGGCACGAUUUAGCGGCUCCAGCCAUCGCGGGUAUAAUCGCGGGAAUGGUUGUGAACUGGUUACGUAGCAGGAAGUAA\
) } def
/len { sequence length } bind def

/coor [
[-25.04351997 281.92556763]
[-34.61154175 293.47775269]
[-44.17956161 305.02993774]
[-47.31108093 313.77685547]
[-54.19358826 316.77197266]
[-57.57587814 325.42504883]
[-64.54183960 328.22058105]
[-74.75951385 339.20233154]
[-84.97718811 350.18408203]
[-95.19486237 361.16586304]
[-105.41252899 372.14761353]
[-111.77516937 387.86236572]
[-128.63713074 386.09866333]
[-131.61019897 369.40744019]
[-116.39429474 361.92996216]
[-106.17662048 350.94818115]
[-95.95895386 339.96643066]
[-85.74127960 328.98464966]
[-75.52360535 318.00289917]
[-65.46524811 306.87503052]
[-55.73174667 295.46191406]
[-46.16372681 283.90972900]
[-36.59570694 272.35754395]
[-27.36456871 260.53442383]
[-18.47798538 248.45021057]
[-9.59140015 236.36596680]
[-8.28455639 221.52880859]
[6.12449074 214.99505615]
[15.01107502 202.91082764]
[23.89765930 190.82659912]
[32.78424454 178.74237061]
[41.67082977 166.65814209]
[39.17874908 152.01829529]
[48.01886368 139.63656616]
[63.39138031 137.12190247]
[72.27796173 125.03768158]
[81.16455078 112.95344543]
[77.24620819 102.19795990]
[79.03340912 90.89132690]
[86.07799530 81.86870575]
[96.61354828 77.39252472]
[107.99825287 78.58518982]
[110.84209442 63.02167511]
[124.91926575 58.15519714]
[134.48728943 46.60301208]
[144.05529785 35.05082703]
[146.89913940 19.48730659]
[160.97631836 14.62082958]
[170.54432678 3.06864429]
[179.94488525 -8.62022114]
[189.17602539 -20.44333839]
[198.40716553 -32.26645660]
[207.63829041 -44.08957672]
[216.86943054 -55.91269302]
[226.10057068 -67.73580933]
[235.33171082 -79.55892944]
[244.39151001 -91.51384735]
[246.33398438 -107.21535492]
[260.10739136 -112.88475800]
[268.99398804 -124.96899414]
[270.93646240 -140.67050171]
[284.70986938 -146.33990479]
[282.08007812 -161.92387390]
[291.30804443 -174.75431824]
[306.91891479 -177.21919250]
[319.65109253 -167.85612488]
[321.95077515 -152.22004700]
[312.45361328 -139.58757019]
[296.79409790 -137.45332336]
[295.48727417 -122.61615753]
[281.07821655 -116.08240509]
[272.19161987 -103.99817657]
[270.88479614 -89.16101074]
[256.47573853 -82.62725830]
[255.02651978 -75.26251984]
[247.15483093 -70.32779694]
[237.92369080 -58.50467682]
[228.69255066 -46.68155670]
[219.46141052 -34.85844040]
[210.23028564 -23.03532028]
[200.99914551 -11.21220303]
[191.76800537 0.61091530]
[190.10714722 7.93083382]
[182.09651184 12.63666534]
[172.52850342 24.18885040]
[170.36903381 38.92607880]
[155.60748291 44.61884689]
[146.03947449 56.17103195]
[136.47145081 67.72322083]
[134.31198120 82.46044922]
[119.55043793 88.15321350]
[122.08939362 105.88429260]
[111.06622314 120.00261688]
[93.24877930 121.84003448]
[84.36219788 133.92427063]
[75.47560883 146.00849915]
[77.65673065 161.43186951]
[68.47232819 173.56040955]
[53.75505829 175.54472351]
[44.86847305 187.62895203]
[35.98188782 199.71318054]
[27.09530449 211.79740906]
[18.20872116 223.88163757]
[16.26624870 239.58314514]
[2.49282980 245.25256348]
[-6.39375448 257.33679199]
[-15.28033829 269.42102051]
[-16.42819786 276.18383789]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 23]
[2 22]
[3 21]
[5 20]
[7 19]
[8 18]
[9 17]
[10 16]
[11 15]
[24 107]
[25 106]
[26 105]
[28 103]
[29 102]
[30 101]
[31 100]
[32 99]
[35 96]
[36 95]
[37 94]
[42 91]
[44 89]
[45 88]
[46 87]
[48 85]
[49 84]
[50 82]
[51 81]
[52 80]
[53 79]
[54 78]
[55 77]
[56 76]
[57 74]
[59 72]
[60 71]
[62 69]
] def

init

% Start Annotations
1 23 0.0 1 colorpair
2 22 0.0 1 colorpair
3 21 0.0 1 colorpair
5 20 0.0 1 colorpair
7 19 0.0 1 colorpair
8 18 0.0 1 colorpair
9 17 0.0 1 colorpair
10 16 0.0 1 colorpair
11 15 0.0 1 colorpair
24 107 0.0 1 colorpair
25 106 0.0 1 colorpair
26 105 0.0 1 colorpair
28 103 0.0 1 colorpair
29 102 0.0 1 colorpair
30 101 0.0 1 colorpair
31 100 0.0 1 colorpair
32 99 0.0 1 colorpair
35 96 0.0 1 colorpair
36 95 0.0 1 colorpair
37 94 0.0 1 colorpair
42 91 0.0 1 colorpair
44 89 0.0 1 colorpair
45 88 0.0 1 colorpair
46 87 0.0 1 colorpair
48 85 0.0 1 colorpair
49 84 0.0 1 colorpair
50 82 0.0 1 colorpair
51 81 0.0 1 colorpair
52 80 0.0 1 colorpair
53 79 0.0 1 colorpair
54 78 0.0 1 colorpair
55 77 0.0 1 colorpair
56 76 0.0 1 colorpair
57 74 0.0 1 colorpair
59 72 0.0 1 colorpair
60 71 0.0 1 colorpair
62 69 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
