%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 09:11:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGCUGACUCAGUUAGGCAUUGCCUUCUGGCACGAUUUAGCAGCUCCAGCCAUUGCCGGUAUCAUUGCGGGUAUGGCUGUGAACUGGCUACGUAGCAGGAAGUAA\
) } def
/len { sequence length } bind def

/coor [
[-15.25679207 268.97808838]
[-24.82481194 280.53027344]
[-34.39283371 292.08245850]
[-37.52435303 300.82937622]
[-44.40686035 303.82449341]
[-47.78915024 312.47753906]
[-54.75511169 315.27307129]
[-64.97278595 326.25485229]
[-75.19046021 337.23660278]
[-85.40813446 348.21838379]
[-95.62580109 359.20013428]
[-101.98844147 374.91488647]
[-118.85040283 373.15118408]
[-121.82347107 356.45993042]
[-106.60756683 348.98248291]
[-96.38989258 338.00070190]
[-86.17222595 327.01895142]
[-75.95455170 316.03717041]
[-65.73687744 305.05541992]
[-55.67851639 293.92755127]
[-45.94501877 282.51443481]
[-36.37699890 270.96224976]
[-26.80897713 259.41006470]
[-17.57784081 247.58694458]
[-8.69125652 235.50271606]
[0.19532797 223.41848755]
[1.50217175 208.58132935]
[15.91121960 202.04757690]
[24.79780388 189.96334839]
[33.68438721 177.87910461]
[42.57097244 165.79487610]
[51.45755768 153.71064758]
[48.96547699 139.07080078]
[57.80559540 126.68908691]
[73.17810822 124.17442322]
[82.06469727 112.09019470]
[90.95127869 100.00596619]
[90.87367249 95.97823334]
[92.65193939 91.95234680]
[96.23344421 88.79396057]
[101.16440582 87.30672455]
[111.06136322 76.03507233]
[120.95832062 64.76341248]
[130.85527039 53.49175644]
[140.58877563 42.07865143]
[150.15679932 30.52646637]
[153.00064087 14.96294594]
[167.07780457 10.09646893]
[176.64582825 -1.45571625]
[186.04638672 -13.14458179]
[195.27751160 -24.96769905]
[204.50865173 -36.79081726]
[213.73979187 -48.61393738]
[222.97093201 -60.43705368]
[232.20205688 -72.26016998]
[241.43319702 -84.08329010]
[244.31135559 -92.91682434]
[251.10469055 -96.10903931]
[260.67269897 -107.66122437]
[270.24072266 -119.21340942]
[273.08456421 -134.77693176]
[287.16174316 -139.64340210]
[296.72976685 -151.19558716]
[306.29779053 -162.74777222]
[308.50701904 -178.99743652]
[323.78466797 -184.95774841]
[336.41439819 -174.49725342]
[333.40383911 -158.37681580]
[317.84997559 -153.17976379]
[308.28195190 -141.62757874]
[298.71392822 -130.07539368]
[296.55444336 -115.33815765]
[281.79290771 -109.64539337]
[272.22488403 -98.09320831]
[262.65686035 -86.54102325]
[253.25631714 -74.85215759]
[244.02517700 -63.02903748]
[234.79405212 -51.20591736]
[225.56291199 -39.38280106]
[216.33177185 -27.55968094]
[207.10063171 -15.73656368]
[197.86950684 -3.91344523]
[196.20864868 3.40647292]
[188.19801331 8.11230469]
[178.62998962 19.66448975]
[176.47052002 34.40171814]
[161.70898438 40.09448624]
[152.14096069 51.64667130]
[150.26985168 58.91568756]
[142.12693787 63.38871384]
[132.22998047 74.66036987]
[122.33302307 85.93202972]
[112.43606567 97.20368195]
[103.03550720 108.89254761]
[94.14892578 120.97677612]
[85.26233673 133.06100464]
[87.44345856 148.48439026]
[78.25905609 160.61291504]
[63.54178619 162.59722900]
[54.65520096 174.68147278]
[45.76861954 186.76570129]
[36.88203430 198.84992981]
[27.99544907 210.93415833]
[26.05297852 226.63566589]
[12.27955818 232.30506897]
[3.39297390 244.38929749]
[-5.49361038 256.47354126]
[-6.64146852 263.23635864]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 23]
[2 22]
[3 21]
[5 20]
[7 19]
[8 18]
[9 17]
[10 16]
[11 15]
[24 107]
[25 106]
[26 105]
[28 103]
[29 102]
[30 101]
[31 100]
[32 99]
[35 96]
[36 95]
[37 94]
[41 93]
[42 92]
[43 91]
[44 90]
[45 88]
[46 87]
[48 85]
[49 84]
[50 82]
[51 81]
[52 80]
[53 79]
[54 78]
[55 77]
[56 76]
[58 75]
[59 74]
[60 73]
[62 71]
[63 70]
[64 69]
] def

init

% Start Annotations
1 23 0.0 1 colorpair
2 22 0.0 1 colorpair
3 21 0.0 1 colorpair
5 20 0.0 1 colorpair
7 19 0.0 1 colorpair
8 18 0.0 1 colorpair
9 17 0.0 1 colorpair
10 16 0.0 1 colorpair
11 15 0.0 1 colorpair
24 107 0.0 1 colorpair
25 106 0.0 1 colorpair
26 105 0.0 1 colorpair
28 103 0.0 1 colorpair
29 102 0.0 1 colorpair
30 101 0.0 1 colorpair
31 100 0.0 1 colorpair
32 99 0.0 1 colorpair
35 96 0.0 1 colorpair
36 95 0.0 1 colorpair
37 94 0.0 1 colorpair
41 93 0.0 1 colorpair
42 92 0.0 1 colorpair
43 91 0.0 1 colorpair
44 90 0.0 1 colorpair
45 88 0.0 1 colorpair
46 87 0.0 1 colorpair
48 85 0.0 1 colorpair
49 84 0.0 1 colorpair
50 82 0.0 1 colorpair
51 81 0.0 1 colorpair
52 80 0.0 1 colorpair
53 79 0.0 1 colorpair
54 78 0.0 1 colorpair
55 77 0.0 1 colorpair
56 76 0.0 1 colorpair
58 75 0.0 1 colorpair
59 74 0.0 1 colorpair
60 73 0.0 1 colorpair
62 71 0.0 1 colorpair
63 70 0.0 1 colorpair
64 69 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
