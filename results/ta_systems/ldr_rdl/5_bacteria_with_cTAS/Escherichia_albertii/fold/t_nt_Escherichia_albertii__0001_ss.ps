%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 09:13:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGCUCGCGCAGUUAGGCAUGGCCUUCUGGCACGAUUUAGCGGCUCCGGUCAUUGCUGGCAUUCUCGCCAGCUUGAUCGUGAACUGGCUGAAUCAGCGGAAGUAA\
) } def
/len { sequence length } bind def

/coor [
[97.39922333 213.15217590]
[92.75503540 198.61277771]
[94.88768005 183.49938965]
[103.37371826 170.81277466]
[116.52823639 163.07189941]
[115.23286438 148.12792969]
[113.93749237 133.18397522]
[112.64212036 118.24001312]
[97.76589966 119.82015228]
[86.93292236 111.93686676]
[72.61458588 116.40735626]
[65.22164917 122.03404236]
[57.81883240 120.79392242]
[43.37761307 124.84992218]
[28.93639183 128.90592957]
[21.88180161 139.82231140]
[9.65552235 142.84590149]
[-0.97117853 136.86997986]
[-15.52328682 140.50811768]
[-30.07539558 144.14627075]
[-44.62750626 147.78442383]
[-58.52719116 157.49189758]
[-71.70310974 146.82270813]
[-65.09833527 131.20819092]
[-48.26565552 133.23231506]
[-33.71354675 129.59416199]
[-19.16143608 125.95601654]
[-4.60932827 122.31786346]
[7.23400640 109.45648956]
[24.88039017 114.46469879]
[39.32161331 110.40869904]
[53.76283264 106.35269928]
[68.14410400 102.08901215]
[82.46244049 97.61853027]
[90.06729889 83.57283783]
[107.06048584 80.54695892]
[120.99078369 92.79524994]
[130.88774109 81.52359772]
[140.78469849 70.25193787]
[150.68165588 58.98028183]
[160.57861328 47.70862579]
[170.47557068 36.43696976]
[180.37252808 25.16531372]
[190.26948547 13.89365768]
[200.00297546 2.48055196]
[209.57099915 -9.07163334]
[212.41484070 -24.63515282]
[226.49200439 -29.50162888]
[236.06002808 -41.05381393]
[245.46058655 -52.74267960]
[254.69172668 -64.56579590]
[263.92285156 -76.38891602]
[273.15399170 -88.21203613]
[282.38513184 -100.03515625]
[291.61627197 -111.85826874]
[290.83227539 -124.83209229]
[298.89065552 -134.51126099]
[310.99203491 -135.99264526]
[320.56005859 -147.54483032]
[330.12808228 -159.09701538]
[339.69610596 -170.64920044]
[349.26412964 -182.20138550]
[358.83215332 -193.75357056]
[357.10455322 -209.46315002]
[367.05636597 -221.74066162]
[382.78332520 -223.30206299]
[394.95492554 -213.22100830]
[396.34997559 -197.47840881]
[386.14080811 -185.41407776]
[370.38433838 -184.18554688]
[360.81631470 -172.63336182]
[351.24829102 -161.08117676]
[341.68026733 -149.52899170]
[332.11224365 -137.97680664]
[322.54421997 -126.42462158]
[320.62265015 -109.04684448]
[303.43939209 -102.62713623]
[294.20825195 -90.80401611]
[284.97711182 -78.98089600]
[275.74597168 -67.15778351]
[266.51483154 -55.33466339]
[257.28369141 -43.51154327]
[255.62284851 -36.19162750]
[247.61221313 -31.48579407]
[238.04418945 -19.93360901]
[235.88471985 -5.19637918]
[221.12318420 0.49638730]
[211.55516052 12.04857254]
[209.68406677 19.31758881]
[201.54113770 23.79061508]
[191.64418030 35.06227112]
[181.74722290 46.33392715]
[171.85026550 57.60558319]
[161.95330811 68.87724304]
[152.05635071 80.14889526]
[142.15939331 91.42055511]
[132.26243591 102.69220734]
[127.58608246 116.94464111]
[128.88145447 131.88859558]
[130.17683411 146.83256531]
[131.47219849 161.77651978]
[145.76249695 167.13844299]
[156.30496216 178.17561340]
[161.00637817 192.69660950]
[158.93325806 207.81828308]
[150.49725342 220.53820801]
[137.37330627 228.33084106]
[122.16721344 229.64892578]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 101]
[6 100]
[7 99]
[8 98]
[10 34]
[11 33]
[13 32]
[14 31]
[15 30]
[18 28]
[19 27]
[20 26]
[21 25]
[37 97]
[38 96]
[39 95]
[40 94]
[41 93]
[42 92]
[43 91]
[44 90]
[45 88]
[46 87]
[48 85]
[49 84]
[50 82]
[51 81]
[52 80]
[53 79]
[54 78]
[55 77]
[58 75]
[59 74]
[60 73]
[61 72]
[62 71]
[63 70]
] def

init

% Start Annotations
5 101 0.0 1 colorpair
6 100 0.0 1 colorpair
7 99 0.0 1 colorpair
8 98 0.0 1 colorpair
10 34 0.16 1 colorpair
11 33 0.0 1 colorpair
13 32 0.0 1 colorpair
14 31 0.0 1 colorpair
15 30 0.0 1 colorpair
18 28 0.0 1 colorpair
19 27 0.16 1 colorpair
20 26 0.0 1 colorpair
21 25 0.0 1 colorpair
37 97 0.0 1 colorpair
38 96 0.0 1 colorpair
39 95 0.0 1 colorpair
40 94 0.0 1 colorpair
41 93 0.0 1 colorpair
42 92 0.0 1 colorpair
43 91 0.16 1 colorpair
44 90 0.16 1 colorpair
45 88 0.16 1 colorpair
46 87 0.0 1 colorpair
48 85 0.0 0.6 colorpair
49 84 0.0 1 colorpair
50 82 0.0 1 colorpair
51 81 0.0 1 colorpair
52 80 0.0 1 colorpair
53 79 0.0 1 colorpair
54 78 0.0 1 colorpair
55 77 0.0 1 colorpair
58 75 0.0 1 colorpair
59 74 0.0 1 colorpair
60 73 0.0 1 colorpair
61 72 0.0 1 colorpair
62 71 0.0 1 colorpair
63 70 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
34 cmark
27 cmark
91 cmark
44 cmark
45 cmark
48 85 1 gmark

% End Annotations
showpage
end
%%EOF
