%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 09:13:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGCUCGCGCAGUUAGGCAUGGCCUUCUGGCACGAUUUAGCGGCUCCGGUCAUUGCUGGCAUUCUCGCCAGCUUGAUCGUGAACUGGCUGAAUCAGCGGAAG\
) } def
/len { sequence length } bind def

/coor [
[103.48285675 213.76626587]
[93.40601349 202.08462524]
[91.26702881 186.80625916]
[97.74845123 172.80644226]
[110.78208160 164.55247498]
[110.78208160 149.55247498]
[110.78208160 134.55247498]
[110.78208160 119.55247498]
[96.37456512 119.70807648]
[86.45899963 111.47504425]
[71.98946381 115.42884827]
[64.39134979 120.79114532]
[57.03241348 119.27861786]
[42.45206833 122.80191040]
[27.87172508 126.32520294]
[20.41694260 136.97938538]
[8.08137417 139.54859924]
[-2.31923127 133.17668152]
[-16.99757957 136.26635742]
[-31.67592621 139.35603333]
[-46.35427475 142.44572449]
[-60.60834122 151.62492371]
[-73.37474060 140.46896362]
[-66.18885803 125.11320496]
[-49.44395447 127.76737213]
[-34.76560593 124.67768860]
[-20.08725739 121.58801270]
[-5.40891075 118.49832916]
[6.90288496 106.09009552]
[24.34843445 111.74485779]
[38.92877960 108.22156525]
[53.50912094 104.69827271]
[68.03565216 100.95932007]
[82.50518799 97.00550842]
[90.93553162 82.98871613]
[108.52230835 81.02393341]
[121.70418549 94.75778961]
[132.77168274 84.63304901]
[143.83918762 74.50830078]
[154.90669250 64.38355255]
[165.97418213 54.25881195]
[177.04168701 44.13406754]
[188.10917664 34.00931931]
[199.17668152 23.88457680]
[210.09294128 13.59694099]
[220.85554504 3.14867592]
[225.36784363 -12.01541710]
[239.88917542 -15.32904243]
[250.65179443 -25.77730751]
[261.25839233 -36.38391113]
[271.70666504 -47.14651871]
[282.15490723 -57.90912628]
[292.60317993 -68.67173767]
[303.05145264 -79.43434906]
[313.49972534 -90.19695282]
[314.11599731 -103.18563080]
[323.17538452 -111.94316101]
[335.37158203 -112.10717773]
[346.13418579 -122.55544281]
[356.89682007 -133.00370789]
[367.65942383 -143.45196533]
[378.42202759 -153.90023804]
[389.18463135 -164.34849548]
[389.16818237 -180.15278625]
[400.39086914 -191.28054810]
[416.19442749 -191.12989807]
[427.20291138 -179.79020691]
[426.88519287 -163.98912048]
[415.42974854 -153.10112000]
[399.63290405 -153.58589172]
[388.87030029 -143.13763428]
[378.10766602 -132.68936157]
[367.34506226 -122.24109650]
[356.58245850 -111.79283142]
[345.81985474 -101.34456635]
[342.03286743 -84.27989197]
[324.26232910 -79.74868774]
[313.81405640 -68.98607635]
[303.36578369 -58.22347260]
[292.91754150 -47.46086121]
[282.46926880 -36.69825363]
[272.02099609 -25.93564415]
[269.58108521 -18.83011627]
[261.10006714 -15.01469898]
[250.33744812 -4.56643391]
[246.59495544 9.85032940]
[231.30380249 13.91128445]
[220.54119873 24.35955048]
[217.89181519 31.38965416]
[209.30142212 34.95207596]
[198.23393250 45.07682037]
[187.16642761 55.20156479]
[176.09893799 65.32630920]
[165.03143311 75.45105743]
[153.96392822 85.57579803]
[142.89643860 95.70054626]
[131.82893372 105.82528687]
[125.78208160 119.55247498]
[125.78208160 134.55247498]
[125.78208160 149.55247498]
[125.78208160 164.55247498]
[138.81570435 172.80644226]
[145.29713440 186.80625916]
[143.15815735 202.08462524]
[133.08129883 213.76626587]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 101]
[6 100]
[7 99]
[8 98]
[10 34]
[11 33]
[13 32]
[14 31]
[15 30]
[18 28]
[19 27]
[20 26]
[21 25]
[37 97]
[38 96]
[39 95]
[40 94]
[41 93]
[42 92]
[43 91]
[44 90]
[45 88]
[46 87]
[48 85]
[49 84]
[50 82]
[51 81]
[52 80]
[53 79]
[54 78]
[55 77]
[58 75]
[59 74]
[60 73]
[61 72]
[62 71]
[63 70]
] def

init

% Start Annotations
5 101 0.0 1 colorpair
6 100 0.0 1 colorpair
7 99 0.0 1 colorpair
8 98 0.0 1 colorpair
10 34 0.16 1 colorpair
11 33 0.0 1 colorpair
13 32 0.0 1 colorpair
14 31 0.0 1 colorpair
15 30 0.0 1 colorpair
18 28 0.0 1 colorpair
19 27 0.16 1 colorpair
20 26 0.0 1 colorpair
21 25 0.0 1 colorpair
37 97 0.0 1 colorpair
38 96 0.0 1 colorpair
39 95 0.0 1 colorpair
40 94 0.0 1 colorpair
41 93 0.0 1 colorpair
42 92 0.0 1 colorpair
43 91 0.16 1 colorpair
44 90 0.16 1 colorpair
45 88 0.16 1 colorpair
46 87 0.0 1 colorpair
48 85 0.0 0.2 colorpair
49 84 0.0 1 colorpair
50 82 0.0 1 colorpair
51 81 0.0 1 colorpair
52 80 0.0 1 colorpair
53 79 0.0 1 colorpair
54 78 0.0 1 colorpair
55 77 0.0 1 colorpair
58 75 0.0 1 colorpair
59 74 0.0 1 colorpair
60 73 0.0 1 colorpair
61 72 0.0 1 colorpair
62 71 0.0 1 colorpair
63 70 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
34 cmark
27 cmark
91 cmark
44 cmark
45 cmark
48 85 2 gmark

% End Annotations
showpage
end
%%EOF
