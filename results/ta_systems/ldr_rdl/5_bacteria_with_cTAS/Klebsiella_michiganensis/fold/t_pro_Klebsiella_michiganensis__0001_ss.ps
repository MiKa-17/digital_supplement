%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 15:03:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGCUCGCUCAGUUGGGCCUGGUGCUGUGGGACGAUCUGGCGGCUCCGGUGAUUGCUGGCAUUCUGGUCAGCAUUAUCGUGAGCCGGAUGGAUAACCGGAAG\
) } def
/len { sequence length } bind def

/coor [
[84.46028137 187.49584961]
[70.63729858 181.67132568]
[61.42391205 169.83436584]
[59.17045975 155.00459290]
[64.45278168 140.96372986]
[51.10792542 147.81315613]
[37.76306915 154.66259766]
[33.01936722 166.76974487]
[21.63238525 172.16453552]
[10.02608299 168.41383362]
[-3.51588488 174.86480713]
[-16.96077347 181.51574707]
[-30.30562973 188.36518860]
[-43.65048599 195.21461487]
[-56.99534225 202.06405640]
[-61.59536362 217.18409729]
[-75.57867432 224.54904175]
[-90.64923096 219.78942871]
[-97.86592865 205.72901917]
[-92.94723511 190.70964050]
[-78.81132507 183.64199829]
[-63.84477997 188.71920776]
[-50.49992371 181.86976624]
[-37.15506744 175.02032471]
[-23.81021118 168.17088318]
[-19.22314453 162.22105408]
[-9.96686268 161.32284546]
[3.57510448 154.87185669]
[12.62793064 139.91889954]
[30.91362953 141.31774902]
[44.25848389 134.46830750]
[57.60334015 127.61886597]
[69.79064178 118.87417603]
[80.55325317 108.42591095]
[79.24188232 95.72538757]
[85.46447754 84.57630157]
[96.96261597 79.02510834]
[109.56314850 81.08656311]
[120.63064575 70.96181488]
[131.69815063 60.83707428]
[142.76564026 50.71232986]
[153.83314514 40.58758163]
[158.88896179 22.95913124]
[176.05836487 19.67947960]
[186.82096863 9.23121357]
[197.58357239 -1.21705210]
[208.34619141 -11.66531754]
[219.10879517 -22.11358261]
[229.87139893 -32.56184769]
[240.47801208 -43.16844940]
[250.92626953 -53.93106079]
[261.37454224 -64.69366455]
[271.82281494 -75.45627594]
[282.27105713 -86.21888733]
[292.71932983 -96.98149109]
[303.16760254 -107.74410248]
[306.98300171 -116.22515106]
[314.08853149 -118.66504669]
[324.85116577 -129.11331177]
[335.61376953 -139.56158447]
[346.37637329 -150.00984192]
[357.13897705 -160.45811462]
[367.90158081 -170.90637207]
[367.88513184 -186.71066284]
[379.10781860 -197.83842468]
[394.91137695 -197.68777466]
[405.91989136 -186.34808350]
[405.60214233 -170.54698181]
[394.14669800 -159.65899658]
[378.34985352 -160.14376831]
[367.58724976 -149.69549561]
[356.82464600 -139.24723816]
[346.06201172 -128.79896545]
[335.29940796 -118.35070801]
[324.53680420 -107.90244293]
[313.93020630 -97.29583740]
[303.48193359 -86.53322601]
[293.03369141 -75.77062225]
[282.58541870 -65.00801086]
[272.13714600 -54.24540329]
[261.68887329 -43.48279190]
[251.24061584 -32.72018433]
[248.80072021 -25.61465645]
[240.31967163 -21.79924011]
[229.55706787 -11.35097408]
[218.79444885 -0.90270871]
[208.03184509 9.54555702]
[197.26924133 19.99382210]
[186.50662231 30.44208717]
[185.98127747 42.62806320]
[176.95912170 51.42396927]
[163.95788574 51.65508270]
[152.89039612 61.77982712]
[141.82289124 71.90457153]
[130.75538635 82.02931976]
[119.68789673 92.15406036]
[119.37799072 108.58284760]
[107.41981506 119.85240936]
[91.00151825 119.18851471]
[80.23890686 129.63677979]
[95.23031616 129.12919617]
[108.55762482 136.01272583]
[116.82102966 148.53135681]
[117.91252136 163.49159241]
[111.55366516 177.07705688]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 32]
[6 31]
[7 30]
[10 28]
[11 27]
[12 25]
[13 24]
[14 23]
[15 22]
[33 100]
[34 99]
[38 96]
[39 95]
[40 94]
[41 93]
[42 92]
[44 89]
[45 88]
[46 87]
[47 86]
[48 85]
[49 84]
[50 82]
[51 81]
[52 80]
[53 79]
[54 78]
[55 77]
[56 76]
[58 75]
[59 74]
[60 73]
[61 72]
[62 71]
[63 70]
] def

init

% Start Annotations
5 32 0.0 1 colorpair
6 31 0.0 1 colorpair
7 30 0.0 1 colorpair
10 28 0.0 1 colorpair
11 27 0.0 1 colorpair
12 25 0.0 0.2 colorpair
13 24 0.0 1 colorpair
14 23 0.0 1 colorpair
15 22 0.0 1 colorpair
33 100 0.0 1 colorpair
34 99 0.0 1 colorpair
38 96 0.0 1 colorpair
39 95 0.0 1 colorpair
40 94 0.0 1 colorpair
41 93 0.16 1 colorpair
42 92 0.0 1 colorpair
44 89 0.0 1 colorpair
45 88 0.0 1 colorpair
46 87 0.0 1 colorpair
47 86 0.0 1 colorpair
48 85 0.0 1 colorpair
49 84 0.0 1 colorpair
50 82 0.0 1 colorpair
51 81 0.0 1 colorpair
52 80 0.0 1 colorpair
53 79 0.0 1 colorpair
54 78 0.0 1 colorpair
55 77 0.0 1 colorpair
56 76 0.0 1 colorpair
58 75 0.0 1 colorpair
59 74 0.0 1 colorpair
60 73 0.0 1 colorpair
61 72 0.0 1 colorpair
62 71 0.0 1 colorpair
63 70 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
12 25 2 gmark
93 cmark
63 70 1 gmark

% End Annotations
showpage
end
%%EOF
