%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 15:03:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGCUCGCUCAGUUGGGCCUGGUGCUGUGGGACGAUCUGGCGGCUCCGGUGAUUGCUGGCAUUCUGGUCAGCAUUAUCGUGAGCCGGAUGGAUAACCGGAAGUAG\
) } def
/len { sequence length } bind def

/coor [
[25.71464157 242.02987671]
[19.19233513 252.29882812]
[9.57612228 259.69277954]
[-1.95706570 263.33697510]
[-14.00597095 262.81381226]
[-25.11525345 258.21041870]
[-35.64515686 268.89315796]
[-46.17505646 279.57592773]
[-56.70495605 290.25866699]
[-67.23485565 300.94143677]
[-66.87036896 316.74151611]
[-77.84525299 328.11373901]
[-93.64831543 328.31115723]
[-104.90386200 317.21664429]
[-104.93419647 301.41238403]
[-93.72130585 290.27474976]
[-77.91761017 290.41152954]
[-67.38771057 279.72875977]
[-56.85780716 269.04602051]
[-46.32790756 258.36328125]
[-35.79800415 247.68051147]
[-41.44704819 230.64175415]
[-37.78668976 212.98286438]
[-25.71925735 199.46882629]
[-8.42701244 193.78890991]
[9.46670723 197.54968262]
[19.03472710 185.99749756]
[28.60274887 174.44531250]
[38.17076874 162.89312744]
[40.33023834 148.15589905]
[55.09177780 142.46313477]
[57.25124741 127.72589874]
[72.01278687 122.03313446]
[81.58081055 110.48094940]
[78.90198517 98.00233459]
[83.87527466 86.24826813]
[94.69689941 79.48185730]
[107.44192505 80.15724945]
[117.33888245 68.88559723]
[127.23583984 57.61393738]
[137.13279724 46.34228134]
[147.02975464 35.07062531]
[150.13677979 16.99236679]
[166.85260010 11.86780834]
[176.42062378 0.31562331]
[185.98863220 -11.23656178]
[195.55665588 -22.78874779]
[205.12467957 -34.34093094]
[214.69270325 -45.89311600]
[224.09324646 -57.58198166]
[233.32438660 -69.40509796]
[242.55552673 -81.22821808]
[251.78666687 -93.05133820]
[261.01779175 -104.87445831]
[270.24893188 -116.69757080]
[279.48007202 -128.52069092]
[282.35821533 -137.35423279]
[289.15155029 -140.54644775]
[298.71957397 -152.09863281]
[308.28759766 -163.65081787]
[317.85562134 -175.20300293]
[327.42364502 -186.75518799]
[336.99166870 -198.30737305]
[335.26406860 -214.01695251]
[345.21588135 -226.29446411]
[360.94284058 -227.85586548]
[373.11444092 -217.77481079]
[374.50949097 -202.03221130]
[364.30032349 -189.96786499]
[348.54385376 -188.73934937]
[338.97583008 -177.18716431]
[329.40780640 -165.63497925]
[319.83978271 -154.08279419]
[310.27175903 -142.53060913]
[300.70373535 -130.97842407]
[291.30319214 -119.28955841]
[282.07205200 -107.46643829]
[272.84091187 -95.64331818]
[263.60977173 -83.82019806]
[254.37864685 -71.99708557]
[245.14750671 -60.17396545]
[235.91636658 -48.35084534]
[234.25552368 -41.03092957]
[226.24488831 -36.32509613]
[216.67686462 -24.77291107]
[207.10884094 -13.22072697]
[197.54081726 -1.66854131]
[187.97280884 9.88364410]
[178.40478516 21.43582916]
[179.20320129 33.60139465]
[171.19424438 43.32151031]
[158.30140686 44.96758270]
[148.40444946 56.23923874]
[138.50749207 67.51089478]
[128.61053467 78.78255463]
[118.71358490 90.05420685]
[120.19560242 106.42296600]
[109.53047180 118.92847443]
[93.13299561 120.04896545]
[83.56497192 131.60115051]
[80.72113037 147.16467285]
[66.64395905 152.03114319]
[63.80012131 167.59466553]
[49.72295380 172.46115112]
[40.15493393 184.01333618]
[30.58691216 195.56552124]
[21.01889229 207.11770630]
[26.71174431 217.98725891]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 21]
[7 20]
[8 19]
[9 18]
[10 17]
[26 107]
[27 106]
[28 105]
[29 104]
[31 102]
[33 100]
[34 99]
[38 96]
[39 95]
[40 94]
[41 93]
[42 92]
[44 89]
[45 88]
[46 87]
[47 86]
[48 85]
[49 84]
[50 82]
[51 81]
[52 80]
[53 79]
[54 78]
[55 77]
[56 76]
[58 75]
[59 74]
[60 73]
[61 72]
[62 71]
[63 70]
] def

init

% Start Annotations
6 21 0.0 1 colorpair
7 20 0.0 1 colorpair
8 19 0.0 1 colorpair
9 18 0.0 1 colorpair
10 17 0.0 1 colorpair
26 107 0.0 1 colorpair
27 106 0.0 1 colorpair
28 105 0.0 1 colorpair
29 104 0.0 1 colorpair
31 102 0.0 1 colorpair
33 100 0.0 1 colorpair
34 99 0.0 1 colorpair
38 96 0.0 1 colorpair
39 95 0.0 1 colorpair
40 94 0.0 1 colorpair
41 93 0.16 1 colorpair
42 92 0.0 1 colorpair
44 89 0.0 1 colorpair
45 88 0.0 1 colorpair
46 87 0.0 1 colorpair
47 86 0.0 1 colorpair
48 85 0.0 1 colorpair
49 84 0.0 1 colorpair
50 82 0.0 1 colorpair
51 81 0.0 1 colorpair
52 80 0.0 1 colorpair
53 79 0.0 1 colorpair
54 78 0.0 1 colorpair
55 77 0.0 1 colorpair
56 76 0.0 1 colorpair
58 75 0.0 1 colorpair
59 74 0.0 1 colorpair
60 73 0.0 1 colorpair
61 72 0.0 1 colorpair
62 71 0.0 1 colorpair
63 70 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
93 cmark
63 70 1 gmark

% End Annotations
showpage
end
%%EOF
