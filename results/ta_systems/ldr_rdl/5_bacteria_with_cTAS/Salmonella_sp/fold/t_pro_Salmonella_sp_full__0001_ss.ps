%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 15:28:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGCUUACGCAGUUGGGCGUGGCCUUCUGGCACGAUCUGGCGGCACCGAUCAUUGCUGGCAUUAUCGCCAGUGUGAUCGUCAACUGGCUACGUGACAGGAAG\
) } def
/len { sequence length } bind def

/coor [
[-6.58028221 264.43054199]
[-18.45582581 269.47619629]
[-31.31112099 269.59866333]
[-43.19320679 264.81530762]
[-53.95581818 275.26358032]
[-64.71842194 285.71185303]
[-75.48103333 296.16012573]
[-86.24364471 306.60836792]
[-97.00624847 317.05664062]
[-107.76885986 327.50491333]
[-107.75241852 343.30920410]
[-118.97509003 354.43695068]
[-134.77865601 354.28631592]
[-145.78715515 342.94662476]
[-145.46942139 327.14550781]
[-134.01397705 316.25753784]
[-118.21712494 316.74230957]
[-107.45451355 306.29403687]
[-96.69190979 295.84576416]
[-85.92929840 285.39749146]
[-75.16668701 274.94924927]
[-64.40408325 264.50097656]
[-53.64147186 254.05270386]
[-58.47407532 237.66740417]
[-54.41537094 220.98297119]
[-42.47465897 208.52143860]
[-25.80967331 203.70576477]
[-8.89187336 207.91983032]
[1.23287153 196.85232544]
[11.35761642 185.78482056]
[21.48236084 174.71733093]
[31.60710716 163.64982605]
[34.48896027 149.03668213]
[49.51268005 144.07699585]
[59.63742447 133.00950623]
[69.76216888 121.94200134]
[79.88691711 110.87450409]
[77.13671875 99.75211334]
[80.12741852 88.69197845]
[88.10804749 80.47123718]
[99.07470703 77.15410614]
[110.27370453 79.57350159]
[114.78600311 64.40940857]
[129.30734253 61.09578323]
[140.06994629 50.64751816]
[150.83256531 40.19925308]
[148.18638611 23.57142448]
[155.84350586 8.76193619]
[170.64463806 1.45448613]
[186.73258972 4.32234573]
[197.18084717 -6.44026327]
[207.62911987 -17.20287132]
[218.07737732 -27.96548080]
[228.52565002 -38.72808838]
[238.97390747 -49.49069977]
[242.78933716 -57.97174454]
[249.89485168 -60.41164398]
[260.65747070 -70.85990906]
[271.42007446 -81.30817413]
[282.18267822 -91.75643921]
[292.94528198 -102.20470428]
[303.70791626 -112.65296936]
[314.47052002 -123.10123444]
[314.45407104 -138.90551758]
[325.67672729 -150.03327942]
[341.48031616 -149.88262939]
[352.48880005 -138.54293823]
[352.17108154 -122.74184418]
[340.71563721 -111.85385895]
[324.91876221 -112.33863068]
[314.15615845 -101.89036560]
[303.39355469 -91.44209290]
[292.63095093 -80.99382782]
[281.86834717 -70.54556274]
[271.10574341 -60.09730148]
[260.34310913 -49.64903641]
[249.73652649 -39.04243469]
[239.28825378 -28.27982521]
[228.83999634 -17.51721573]
[218.39172363 -6.75460672]
[207.94346619 4.00800228]
[197.49519348 14.77061081]
[200.99491882 27.74643326]
[197.55882263 40.85173416]
[187.99028015 50.59637833]
[174.74043274 54.32991409]
[161.28082275 50.96186066]
[150.51821899 61.41012573]
[139.75559998 71.85839081]
[136.01312256 86.27515411]
[120.72196960 90.33611298]
[121.33165741 108.23112488]
[108.85963440 121.07836914]
[90.95441437 120.99924469]
[80.82966614 132.06674194]
[70.70492554 143.13424683]
[60.58018112 154.20173645]
[56.97413635 169.60652161]
[42.67460632 173.77456665]
[32.54986191 184.84207153]
[22.42511559 195.90957642]
[12.30037117 206.97706604]
[2.17562580 218.04457092]
[7.27295351 230.10292053]
[7.37336683 243.14688110]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 23]
[5 22]
[6 21]
[7 20]
[8 19]
[9 18]
[10 17]
[28 103]
[29 102]
[30 101]
[31 100]
[32 99]
[34 97]
[35 96]
[36 95]
[37 94]
[42 91]
[44 89]
[45 88]
[46 87]
[50 82]
[51 81]
[52 80]
[53 79]
[54 78]
[55 77]
[57 76]
[58 75]
[59 74]
[60 73]
[61 72]
[62 71]
[63 70]
] def

init

% Start Annotations
4 23 0.0 1 colorpair
5 22 0.0 0.2 colorpair
6 21 0.0 1 colorpair
7 20 0.0 1 colorpair
8 19 0.16 1 colorpair
9 18 0.16 1 colorpair
10 17 0.0 1 colorpair
28 103 0.0 0.2 colorpair
29 102 0.0 1 colorpair
30 101 0.0 1 colorpair
31 100 0.0 0.2 colorpair
32 99 0.0 1 colorpair
34 97 0.0 0.2 colorpair
35 96 0.0 1 colorpair
36 95 0.0 0.2 colorpair
37 94 0.0 1 colorpair
42 91 0.16 1 colorpair
44 89 0.0 1 colorpair
45 88 0.0 1 colorpair
46 87 0.0 1 colorpair
50 82 0.0 0.2 colorpair
51 81 0.16 1 colorpair
52 80 0.0 1 colorpair
53 79 0.0 0.2 colorpair
54 78 0.0 0.2 colorpair
55 77 0.0 0.2 colorpair
57 76 0.16 1 colorpair
58 75 0.0 1 colorpair
59 74 0.16 1 colorpair
60 73 0.16 1 colorpair
61 72 0.0 0.2 colorpair
62 71 0.0 1 colorpair
63 70 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
5 22 2 gmark
19 cmark
9 cmark
28 103 2 gmark
31 100 2 gmark
34 97 2 gmark
36 95 2 gmark
91 cmark
50 82 2 gmark
51 cmark
81 cmark
53 79 2 gmark
54 78 2 gmark
55 77 2 gmark
57 cmark
76 cmark
59 cmark
60 cmark
73 cmark
61 72 2 gmark
63 70 2 gmark

% End Annotations
showpage
end
%%EOF
