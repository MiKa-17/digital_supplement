%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 15:28:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGCUUACGCAGUUGGGCGUGGCCUUCUGGCACGAUCUGGCGGCACCGAUCAUUGCUGGCAUUAUCGCCAGUGUGAUCGUCAACUGGCUACGUGACAGGAAGUAA\
) } def
/len { sequence length } bind def

/coor [
[-13.99188137 289.54330444]
[-20.74263382 293.11199951]
[-28.25496292 294.01971436]
[-35.52754593 292.19519043]
[-46.05744934 302.87792969]
[-56.58734894 313.56069946]
[-67.11724854 324.24343872]
[-77.64715576 334.92617798]
[-88.17705536 345.60894775]
[-98.70695496 356.29168701]
[-98.34246826 372.09176636]
[-109.31735229 383.46398926]
[-125.12040710 383.66140747]
[-136.37596130 372.56692505]
[-136.40629578 356.76266479]
[-125.19340515 345.62503052]
[-109.38970947 345.76177979]
[-98.85980225 335.07904053]
[-88.32990265 324.39630127]
[-77.80000305 313.71353149]
[-67.27010345 303.03079224]
[-56.74020004 292.34802246]
[-46.21030045 281.66528320]
[-43.41448975 259.40496826]
[-21.35990715 252.36912537]
[-12.47332287 240.28489685]
[-11.16647911 225.44772339]
[3.24256873 218.91397095]
[12.12915325 206.82974243]
[21.01573753 194.74551392]
[29.90232086 182.66128540]
[38.78890610 170.57705688]
[40.09574890 155.73989868]
[54.50479889 149.20614624]
[63.39138031 137.12190247]
[72.27796173 125.03768158]
[81.16455078 112.95344543]
[77.24620819 102.19795990]
[79.03340912 90.89132690]
[86.07799530 81.86870575]
[96.61354828 77.39252472]
[107.99825287 78.58518982]
[110.84209442 63.02167511]
[124.91926575 58.15519714]
[134.48728943 46.60301208]
[144.05529785 35.05082703]
[139.62489319 18.80265236]
[145.63972473 3.24901199]
[159.57058716 -5.61336279]
[175.87782288 -4.49264622]
[185.10894775 -16.31576347]
[194.34008789 -28.13888168]
[203.57122803 -39.96200180]
[212.80236816 -51.78511810]
[222.03349304 -63.60823822]
[224.91165161 -72.44177246]
[231.70498657 -75.63398743]
[241.27301025 -87.18617249]
[250.84103394 -98.73835754]
[260.40905762 -110.29054260]
[269.97708130 -121.84272766]
[279.54507446 -133.39491272]
[289.11309814 -144.94709778]
[287.38552856 -160.65667725]
[297.33731079 -172.93418884]
[313.06430054 -174.49559021]
[325.23590088 -164.41453552]
[326.63092041 -148.67193604]
[316.42175293 -136.60760498]
[300.66528320 -135.37907410]
[291.09725952 -123.82688904]
[281.52926636 -112.27470398]
[271.96124268 -100.72251892]
[262.39321899 -89.17033386]
[252.82519531 -77.61814880]
[243.25717163 -66.06596375]
[233.85661316 -54.37710190]
[224.62548828 -42.55398178]
[215.39434814 -30.73086357]
[206.16320801 -18.90774536]
[196.93206787 -7.08462811]
[187.70094299 4.73849010]
[192.57405090 17.25812721]
[190.57023621 30.65242195]
[182.11183167 41.36854172]
[169.34754944 46.50993729]
[155.60748291 44.61884689]
[146.03947449 56.17103195]
[136.47145081 67.72322083]
[134.31198120 82.46044922]
[119.55043793 88.15321350]
[122.08939362 105.88429260]
[111.06622314 120.00261688]
[93.24877930 121.84003448]
[84.36219788 133.92427063]
[75.47560883 146.00849915]
[66.58902740 158.09272766]
[64.64655304 173.79423523]
[50.87313461 179.46363831]
[41.98655319 191.54786682]
[33.09996796 203.63209534]
[24.21338272 215.71632385]
[15.32679939 227.80056763]
[13.38432693 243.50207520]
[-0.38909227 249.17147827]
[-9.27567673 261.25570679]
[-6.34359169 268.60437012]
[-6.23685598 276.44665527]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 23]
[5 22]
[6 21]
[7 20]
[8 19]
[9 18]
[10 17]
[25 106]
[26 105]
[28 103]
[29 102]
[30 101]
[31 100]
[32 99]
[34 97]
[35 96]
[36 95]
[37 94]
[42 91]
[44 89]
[45 88]
[46 87]
[50 82]
[51 81]
[52 80]
[53 79]
[54 78]
[55 77]
[57 76]
[58 75]
[59 74]
[60 73]
[61 72]
[62 71]
[63 70]
] def

init

% Start Annotations
4 23 0.0 1 colorpair
5 22 0.0 0.6 colorpair
6 21 0.0 1 colorpair
7 20 0.0 1 colorpair
8 19 0.16 1 colorpair
9 18 0.16 1 colorpair
10 17 0.0 1 colorpair
25 106 0.16 1 colorpair
26 105 0.0 1 colorpair
28 103 0.0 0.6 colorpair
29 102 0.0 1 colorpair
30 101 0.0 1 colorpair
31 100 0.0 0.6 colorpair
32 99 0.0 1 colorpair
34 97 0.0 0.6 colorpair
35 96 0.0 1 colorpair
36 95 0.0 0.6 colorpair
37 94 0.0 1 colorpair
42 91 0.16 1 colorpair
44 89 0.0 1 colorpair
45 88 0.0 1 colorpair
46 87 0.0 1 colorpair
50 82 0.0 0.6 colorpair
51 81 0.16 1 colorpair
52 80 0.0 1 colorpair
53 79 0.0 0.6 colorpair
54 78 0.0 0.6 colorpair
55 77 0.0 0.6 colorpair
57 76 0.16 1 colorpair
58 75 0.0 1 colorpair
59 74 0.16 1 colorpair
60 73 0.16 1 colorpair
61 72 0.0 0.6 colorpair
62 71 0.0 1 colorpair
63 70 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
5 22 1 gmark
19 cmark
9 cmark
25 cmark
28 103 1 gmark
31 100 1 gmark
34 97 1 gmark
36 95 1 gmark
91 cmark
50 82 1 gmark
51 cmark
81 cmark
53 79 1 gmark
54 78 1 gmark
55 77 1 gmark
57 cmark
76 cmark
59 cmark
60 cmark
73 cmark
61 72 1 gmark
63 70 1 gmark

% End Annotations
showpage
end
%%EOF
