%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 09:12:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGCUCGCACAGUUAGGCGUGGCUUUCUGGCACGAUUUAGCGGCUCCAAUUAUCGCUGGCAUUAUUGCCAGCUUGAUUGUGAACUGGCUG_______________\
) } def
/len { sequence length } bind def

/coor [
[76.91550446 210.21891785]
[76.44361115 195.14483643]
[79.73612213 180.42715454]
[86.58606720 166.99104309]
[96.56285095 155.68110657]
[109.03932190 147.20829773]
[103.95418549 133.09655762]
[98.86904907 118.98480225]
[81.14997864 110.18780518]
[79.31876373 88.15029907]
[64.35768127 87.07041168]
[55.41839600 89.60107422]
[48.98302460 85.73770142]
[39.97451782 88.00970459]
[33.65315247 83.96248627]
[18.77913857 82.02245331]
[3.90512586 80.08242035]
[-10.96888733 78.14238739]
[-25.84290123 76.20235443]
[-40.71691513 74.26232910]
[-55.61734009 72.53683472]
[-70.54108429 71.02625275]
[-85.46482849 69.51566315]
[-100.38857269 68.00507355]
[-114.89778137 74.31328583]
[-126.78115845 65.33360291]
[-140.06921387 74.32289124]
[-155.33869934 69.40126038]
[-160.87615967 54.34417343]
[-152.43376160 40.70213318]
[-136.48774719 38.94014740]
[-125.27056885 50.40986252]
[-111.82881165 43.99360657]
[-98.87798309 53.08132935]
[-83.95423889 54.59191895]
[-69.03049469 56.10250473]
[-54.10675430 57.61309433]
[-47.02774048 55.11765671]
[-38.77688217 59.38831329]
[-23.90286827 61.32834244]
[-9.02885532 63.26837540]
[5.84515762 65.20840454]
[20.71917152 67.14843750]
[35.59318542 69.08847046]
[50.49361038 70.81395721]
[65.43757629 72.10932922]
[80.39865112 73.18922424]
[94.19399261 67.29952240]
[103.76201630 55.74734116]
[113.16256714 44.05847549]
[122.39370728 32.23535538]
[131.62484741 20.41223717]
[140.85597229 8.58911991]
[150.08711243 -3.23399854]
[159.31825256 -15.05711651]
[158.53424072 -28.03093719]
[166.59262085 -37.71011353]
[178.69403076 -39.19149017]
[188.26205444 -50.74367523]
[197.83007812 -62.29586029]
[207.39808655 -73.84804535]
[216.96611023 -85.40023041]
[226.53413391 -96.95241547]
[236.10215759 -108.50460052]
[238.31138611 -124.75425720]
[253.58905029 -130.71456909]
[266.21878052 -120.25407410]
[263.20819092 -104.13363647]
[247.65434265 -98.93657684]
[238.08631897 -87.38439178]
[228.51829529 -75.83220673]
[218.95027161 -64.28002167]
[209.38226318 -52.72784042]
[199.81423950 -41.17565536]
[190.24621582 -29.62346840]
[188.32463074 -12.24569416]
[171.14137268 -5.82598019]
[161.91023254 5.99713802]
[152.67909241 17.82025528]
[143.44795227 29.64337349]
[134.21682739 41.46649170]
[124.98568726 53.28961182]
[123.32483673 60.60952759]
[115.31420135 65.31536102]
[105.74617767 76.86754608]
[115.91924286 83.91431427]
[120.74014282 94.61845398]
[119.41915894 105.64395142]
[112.98079681 113.89966583]
[118.06593323 128.01141357]
[123.15106964 142.12315369]
[138.16430664 140.69010925]
[153.06211853 143.03654480]
[166.90805054 149.01493835]
[178.83169556 158.24951172]
[188.08355713 170.15975952]
[194.08203125 183.99699402]
[196.45005798 198.89140320]
[195.03878784 213.90670776]
[189.93692017 228.09901428]
[181.46516418 240.57620239]
[170.15608215 250.55395508]
[156.72055054 257.40502930]
[142.00314331 260.69879150]
[126.92902374 260.22817993]
[112.44573975 256.02279663]
[99.46373749 248.34695435]
[88.79907227 237.68319702]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 91]
[7 90]
[8 89]
[10 47]
[11 46]
[13 45]
[15 44]
[16 43]
[17 42]
[18 41]
[19 40]
[20 39]
[21 37]
[22 36]
[23 35]
[24 34]
[26 32]
[48 85]
[49 84]
[50 82]
[51 81]
[52 80]
[53 79]
[54 78]
[55 77]
[58 75]
[59 74]
[60 73]
[61 72]
[62 71]
[63 70]
[64 69]
] def

init

% Start Annotations
6 91 0.0 1 colorpair
7 90 0.16 1 colorpair
8 89 0.0 1 colorpair
10 47 0.0 0.2 colorpair
11 46 0.16 1 colorpair
13 45 0.0 1 colorpair
15 44 0.0 0.2 colorpair
16 43 0.0 0.2 colorpair
17 42 0.0 1 colorpair
18 41 0.0 1 colorpair
19 40 0.0 1 colorpair
20 39 0.0 1 colorpair
21 37 0.0 1 colorpair
22 36 0.0 0.2 colorpair
23 35 0.0 1 colorpair
24 34 0.0 1 colorpair
26 32 0.0 1 colorpair
48 85 0.0 1 colorpair
49 84 0.0 0.2 colorpair
50 82 0.0 1 colorpair
51 81 0.16 0.2 colorpair
52 80 0.16 1 colorpair
53 79 0.16 1 colorpair
54 78 0.16 0.2 colorpair
55 77 0.0 1 colorpair
58 75 0.16 1 colorpair
59 74 0.0 1 colorpair
60 73 0.16 1 colorpair
61 72 0.0 0.2 colorpair
62 71 0.0 1 colorpair
63 70 0.16 1 colorpair
64 69 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
7 cmark
10 47 2 gmark
11 cmark
15 44 2 gmark
16 43 2 gmark
22 36 2 gmark
49 84 2 gmark
51 81 2 gmark
51 cmark
52 cmark
53 cmark
79 cmark
54 78 2 gmark
54 cmark
75 cmark
60 cmark
73 cmark
61 72 2 gmark
63 cmark

% End Annotations
showpage
end
%%EOF
