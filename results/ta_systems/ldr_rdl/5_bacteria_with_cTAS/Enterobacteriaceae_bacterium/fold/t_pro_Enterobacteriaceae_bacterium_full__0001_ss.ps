%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 09:13:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGCUCGUGCAGUUUAGCGUGAUGUUCUGGCACGACCUGGCAGCCCCAAUCCUUGCGGGUAUUAUCACCGCAGCGAUUGUCGGCUGGUGGCGUAACAGGAAG\
) } def
/len { sequence length } bind def

/coor [
[-4.18827200 255.44285583]
[-8.63267136 261.86734009]
[-14.56795502 266.91235352]
[-21.58433342 270.24462891]
[-29.20123863 271.64862061]
[-36.90023804 271.04052734]
[-44.16032028 268.47293091]
[-50.49315262 264.13076782]
[-62.93423843 272.51046753]
[-75.37532043 280.89016724]
[-87.81640625 289.26986694]
[-100.25749207 297.64956665]
[-112.69857788 306.02926636]
[-115.47801971 321.58721924]
[-128.49211121 330.55435181]
[-144.01982117 327.61056519]
[-152.84883118 314.50241089]
[-149.74105835 299.00668335]
[-136.54026794 290.31674194]
[-121.07827759 293.58816528]
[-108.63719177 285.20846558]
[-96.19610596 276.82876587]
[-83.75502777 268.44906616]
[-71.31394196 260.06936646]
[-58.87285233 251.68966675]
[-57.67939377 228.68148804]
[-40.16954041 213.33551025]
[-16.71753120 215.20866394]
[-6.59278536 204.14117432]
[3.53195953 193.07366943]
[13.65670490 182.00616455]
[23.78145027 170.93867493]
[22.86500549 156.11653137]
[32.97527695 144.74829102]
[48.52830887 143.88752747]
[58.65305710 132.82003784]
[68.77780151 121.75253296]
[71.00606537 114.57782745]
[79.37032318 110.51276398]
[89.81858826 99.75015259]
[92.79134369 92.10643768]
[100.73953247 88.82920837]
[105.25183868 73.66511536]
[119.77317047 70.35148621]
[130.53578186 59.90322495]
[141.29838562 49.45495987]
[152.06098938 39.00669098]
[162.82360840 28.55842781]
[167.35479736 10.78789711]
[184.41947937 7.00089741]
[194.86775208 -3.76171136]
[205.31600952 -14.52432060]
[215.76428223 -25.28692818]
[226.21253967 -36.04953766]
[230.27349854 -51.34068680]
[244.69026184 -55.08317184]
[255.13853455 -65.84577942]
[265.58679199 -76.60839081]
[276.03506470 -87.37099457]
[286.48333740 -98.13360596]
[296.93157959 -108.89621735]
[293.32919312 -123.89708710]
[298.43029785 -138.45669556]
[310.60717773 -147.92912292]
[325.97424316 -149.29174805]
[339.62792969 -142.10975647]
[347.21136475 -128.67491150]
[346.30471802 -113.27421570]
[337.19729614 -100.82197571]
[322.79522705 -95.29164886]
[307.69421387 -98.44795227]
[297.24594116 -87.68534088]
[286.79766846 -76.92272949]
[276.34939575 -66.16012573]
[265.90112305 -55.39751434]
[255.45286560 -44.63490677]
[252.13925171 -30.11357117]
[236.97515869 -25.60127258]
[226.52688599 -14.83866405]
[216.07862854 -4.07605457]
[205.63035583 6.68655396]
[195.18209839 17.44916344]
[195.01808167 29.64535713]
[186.26054382 38.70475388]
[173.27186584 39.32103729]
[162.50926208 49.76930237]
[151.74665833 60.21756744]
[140.98403931 70.66583252]
[130.22143555 81.11409760]
[126.47895050 95.53086090]
[111.18780518 99.59181976]
[100.58119965 110.19841766]
[90.13293457 120.96102905]
[79.84529877 131.87727356]
[69.72055817 142.94477844]
[59.59580994 154.01228333]
[60.11950302 169.58030701]
[49.69391251 180.66009521]
[34.84894943 181.06341553]
[24.72420311 192.13092041]
[14.59945869 203.19841003]
[4.47471380 214.26591492]
[-5.65003157 225.33340454]
[-2.29023480 232.48440552]
[-0.89427656 240.23844910]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 25]
[9 24]
[10 23]
[11 22]
[12 21]
[13 20]
[28 103]
[29 102]
[30 101]
[31 100]
[32 99]
[35 96]
[36 95]
[37 94]
[39 93]
[40 92]
[42 91]
[44 89]
[45 88]
[46 87]
[47 86]
[48 85]
[50 82]
[51 81]
[52 80]
[53 79]
[54 78]
[56 76]
[57 75]
[58 74]
[59 73]
[60 72]
[61 71]
] def

init

% Start Annotations
8 25 0.0 1 colorpair
9 24 0.0 1 colorpair
10 23 0.0 1 colorpair
11 22 0.16 1 colorpair
12 21 0.16 1 colorpair
13 20 0.0 1 colorpair
28 103 0.0 1 colorpair
29 102 0.0 1 colorpair
30 101 0.0 1 colorpair
31 100 0.0 0.2 colorpair
32 99 0.0 1 colorpair
35 96 0.0 1 colorpair
36 95 0.0 1 colorpair
37 94 0.0 1 colorpair
39 93 0.16 1 colorpair
40 92 0.0 1 colorpair
42 91 0.0 1 colorpair
44 89 0.0 1 colorpair
45 88 0.0 0.2 colorpair
46 87 0.0 1 colorpair
47 86 0.0 1 colorpair
48 85 0.0 0.2 colorpair
50 82 0.0 1 colorpair
51 81 0.16 1 colorpair
52 80 0.0 1 colorpair
53 79 0.0 1 colorpair
54 78 0.16 1 colorpair
56 76 0.0 1 colorpair
57 75 0.16 1 colorpair
58 74 0.0 1 colorpair
59 73 0.16 1 colorpair
60 72 0.0 1 colorpair
61 71 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
11 cmark
12 cmark
21 cmark
31 100 2 gmark
39 cmark
45 88 2 gmark
48 85 2 gmark
51 cmark
81 cmark
54 cmark
78 cmark
57 cmark
75 cmark
59 cmark
73 cmark

% End Annotations
showpage
end
%%EOF
