%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 09:12:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGCUCACACAGUUAAGCAUGACUUUCUGGCACGAUCUAGCAGCACCAACGAUCGCCGGAAUCACAACCAGCCUGAUUGUAAACUGGCGGCGUAACAGGAAG\
) } def
/len { sequence length } bind def

/coor [
[-50.42399216 299.15664673]
[-71.46191406 300.91894531]
[-79.84161377 313.36001587]
[-88.22131348 325.80111694]
[-96.60102081 338.24218750]
[-104.98072052 350.68328857]
[-113.36042023 363.12435913]
[-121.74011993 375.56546021]
[-125.57373810 392.08029175]
[-142.50440979 392.96826172]
[-148.04455566 376.94503784]
[-134.18121338 367.18576050]
[-125.80150604 354.74465942]
[-117.42180634 342.30358887]
[-109.04210663 329.86248779]
[-100.66239929 317.42141724]
[-92.28269958 304.98031616]
[-83.90299988 292.53924561]
[-88.52134705 284.75811768]
[-90.27846527 275.83703613]
[-88.94289398 266.79864502]
[-84.63945770 258.68923950]
[-77.83822632 252.45739746]
[-69.30332184 248.84324646]
[-60.00713348 248.29052734]
[-51.01953506 250.89236450]
[-40.89479065 239.82487488]
[-30.77004623 228.75737000]
[-20.64530182 217.68986511]
[-10.52055645 206.62237549]
[-0.39581171 195.55487061]
[9.72893333 184.48736572]
[8.81248951 169.66523743]
[18.92276001 158.29698181]
[34.47579575 157.43623352]
[44.60054016 146.36872864]
[54.72528458 135.30123901]
[51.73637772 124.09657288]
[54.62919235 112.74190521]
[62.78144836 104.15787506]
[74.20276642 100.61167908]
[86.01976776 103.11905670]
[90.02264404 89.72246552]
[103.53196716 86.11833191]
[114.29457855 75.67006683]
[125.05718231 65.22180176]
[135.81979370 54.77354050]
[146.58239746 44.32527542]
[157.34501648 33.87700653]
[161.85731506 18.71291542]
[176.37864685 15.39929008]
[187.14125061 4.95102453]
[191.65354919 -10.21306896]
[206.17488098 -13.52669430]
[216.93750000 -23.97496033]
[221.44979858 -39.13905334]
[235.97113037 -42.45267868]
[246.73373413 -52.90094376]
[257.49633789 -63.34920883]
[268.25894165 -73.79747772]
[279.02157593 -84.24574280]
[289.78417969 -94.69400787]
[300.54678345 -105.14227295]
[300.53033447 -120.94654846]
[311.75302124 -132.07432556]
[327.55657959 -131.92367554]
[338.56506348 -120.58397675]
[338.24734497 -104.78288269]
[326.79190063 -93.89488983]
[310.99505615 -94.37966156]
[300.23245239 -83.93139648]
[289.46981812 -73.48313141]
[278.70721436 -63.03486633]
[267.94461060 -52.58660126]
[257.18200684 -42.13833618]
[246.41938782 -31.69006920]
[242.67691040 -17.27330589]
[227.38575745 -13.21235085]
[216.62315369 -2.76408529]
[212.88066101 11.65267849]
[197.58952332 15.71363354]
[186.82690430 26.16189957]
[183.08442688 40.57866287]
[167.79327393 44.63961792]
[157.03067017 55.08788300]
[146.26805115 65.53614807]
[135.50544739 75.98441315]
[124.74284363 86.43267822]
[113.98023224 96.88094330]
[109.97735596 110.27753448]
[96.46803284 113.88166809]
[97.01202393 132.69114685]
[83.97595978 145.82127380]
[65.79278564 145.42597961]
[55.66803741 156.49348450]
[45.54329300 167.56097412]
[46.06698608 183.12901306]
[35.64139557 194.20880127]
[20.79643250 194.61212158]
[10.67168713 205.67961121]
[0.54694247 216.74711609]
[-9.57780266 227.81462097]
[-19.70254707 238.88211060]
[-29.82729340 249.94961548]
[-39.95203781 261.01712036]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 18]
[3 17]
[4 16]
[5 15]
[6 14]
[7 13]
[8 12]
[26 105]
[27 104]
[28 103]
[29 102]
[30 101]
[31 100]
[32 99]
[35 96]
[36 95]
[37 94]
[42 91]
[44 89]
[45 88]
[46 87]
[47 86]
[48 85]
[49 84]
[51 82]
[52 81]
[54 79]
[55 78]
[57 76]
[58 75]
[59 74]
[60 73]
[61 72]
[62 71]
[63 70]
] def

init

% Start Annotations
2 18 0.0 1 colorpair
3 17 0.0 1 colorpair
4 16 0.0 1 colorpair
5 15 0.0 1 colorpair
6 14 0.0 0.6 colorpair
7 13 0.0 0.6 colorpair
8 12 0.0 1 colorpair
26 105 0.16 1 colorpair
27 104 0.0 1 colorpair
28 103 0.0 1 colorpair
29 102 0.0 1 colorpair
30 101 0.16 1 colorpair
31 100 0.0 1 colorpair
32 99 0.0 1 colorpair
35 96 0.0 1 colorpair
36 95 0.0 1 colorpair
37 94 0.0 1 colorpair
42 91 0.0 0.6 colorpair
44 89 0.0 1 colorpair
45 88 0.16 1 colorpair
46 87 0.16 1 colorpair
47 86 0.0 0.6 colorpair
48 85 0.0 0.6 colorpair
49 84 0.0 0.6 colorpair
51 82 0.0 0.6 colorpair
52 81 0.0 1 colorpair
54 79 0.16 1 colorpair
55 78 0.0 0.6 colorpair
57 76 0.0 0.6 colorpair
58 75 0.16 1 colorpair
59 74 0.16 1 colorpair
60 73 0.0 0.6 colorpair
61 72 0.0 1 colorpair
62 71 0.0 1 colorpair
63 70 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
6 14 1 gmark
7 13 1 gmark
26 cmark
30 cmark
42 91 1 gmark
45 cmark
87 cmark
47 86 1 gmark
48 85 1 gmark
49 84 1 gmark
51 82 1 gmark
54 cmark
79 cmark
55 78 1 gmark
57 76 1 gmark
75 cmark
59 cmark
60 73 1 gmark
63 70 1 gmark

% End Annotations
showpage
end
%%EOF
