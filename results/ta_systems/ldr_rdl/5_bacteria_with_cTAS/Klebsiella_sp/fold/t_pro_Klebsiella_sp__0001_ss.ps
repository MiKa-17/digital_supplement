%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 15:05:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGCUCGCUCAGUUGGGCCUGGUGCUGUGGGACGAUCUGGCGGCUCCGGUGAUUGCUGGCAUUCUGGUCAGCAUCAUCGUGAGCCGGAUGGAUAACCGCAAG\
) } def
/len { sequence length } bind def

/coor [
[42.82722473 190.25117493]
[36.70661926 193.88682556]
[29.79274940 195.34841919]
[22.82826233 194.51336670]
[16.55023384 191.50392151]
[4.36293125 200.24862671]
[-7.82437181 208.99331665]
[-20.01167488 217.73800659]
[-27.11697197 234.64476013]
[-44.55376053 235.87071228]
[-56.47657776 244.97271729]
[-68.39939117 254.07472229]
[-80.32221222 263.17672729]
[-86.13246918 278.51205444]
[-102.35968781 280.88049316]
[-112.31069183 267.84555054]
[-105.74874878 252.81648254]
[-89.42420959 251.25390625]
[-77.50139618 242.15190125]
[-65.57858276 233.04989624]
[-53.65576172 223.94789124]
[-51.69282150 211.90959167]
[-41.69367981 204.24249268]
[-28.75636673 205.55070496]
[-16.56906509 196.80601501]
[-4.38176107 188.06132507]
[7.80554199 179.31661987]
[14.22262192 157.05941772]
[37.78043747 153.32414246]
[48.22870636 142.56153870]
[58.67697144 131.79891968]
[69.12523651 121.03631592]
[79.57350159 110.27370453]
[77.15410614 99.07470703]
[80.47123718 88.10804749]
[88.69197845 80.12741852]
[99.75211334 77.13671875]
[110.87450409 79.88691711]
[121.94200134 69.76216888]
[133.00950623 59.63742447]
[144.07699585 49.51268005]
[155.14450073 39.38793564]
[160.20030212 21.75948334]
[177.36970520 18.47983170]
[188.13232422 8.03156567]
[198.89492798 -2.41670012]
[209.65753174 -12.86496544]
[220.42015076 -23.31323051]
[231.18275452 -33.76149750]
[241.78935242 -44.36809921]
[252.23762512 -55.13070679]
[262.68588257 -65.89331818]
[273.13415527 -76.65592194]
[283.58242798 -87.41853333]
[294.03067017 -98.18114471]
[304.47894287 -108.94374847]
[308.29437256 -117.42479706]
[315.39990234 -119.86469269]
[326.16250610 -130.31295776]
[336.92510986 -140.76123047]
[347.68771362 -151.20948792]
[358.45031738 -161.65776062]
[369.21295166 -172.10601807]
[369.19650269 -187.91030884]
[380.41915894 -199.03807068]
[396.22274780 -198.88742065]
[407.23123169 -187.54772949]
[406.91351318 -171.74662781]
[395.45806885 -160.85864258]
[379.66119385 -161.34341431]
[368.89859009 -150.89514160]
[358.13598633 -140.44688416]
[347.37338257 -129.99861145]
[336.61077881 -119.55035400]
[325.84817505 -109.10208893]
[315.24154663 -98.49548340]
[304.79330444 -87.73287964]
[294.34503174 -76.97026825]
[283.89675903 -66.20765686]
[273.44848633 -55.44504929]
[263.00024414 -44.68244171]
[252.55197144 -33.91983414]
[250.11206055 -26.81430435]
[241.63102722 -22.99888802]
[230.86840820 -12.55062199]
[220.10580444 -2.10235667]
[209.34320068 8.34590912]
[198.58058167 18.79417419]
[187.81797791 29.24243927]
[187.29261780 41.42841721]
[178.27047729 50.22432327]
[165.26924133 50.45543289]
[154.20173645 60.58018112]
[143.13424683 70.70492554]
[132.06674194 80.82966614]
[120.99924469 90.95441437]
[121.07836914 108.85963440]
[108.23112488 121.33165741]
[90.33611298 120.72196960]
[79.88784790 131.48458862]
[69.43957520 142.24719238]
[58.99131393 153.00979614]
[48.54304886 163.77241516]
[50.53886795 170.82357788]
[50.16199112 178.08970642]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 27]
[6 26]
[7 25]
[8 24]
[10 21]
[11 20]
[12 19]
[13 18]
[29 103]
[30 102]
[31 101]
[32 100]
[33 99]
[38 96]
[39 95]
[40 94]
[41 93]
[42 92]
[44 89]
[45 88]
[46 87]
[47 86]
[48 85]
[49 84]
[50 82]
[51 81]
[52 80]
[53 79]
[54 78]
[55 77]
[56 76]
[58 75]
[59 74]
[60 73]
[61 72]
[62 71]
[63 70]
] def

init

% Start Annotations
5 27 0.0 0.6 colorpair
6 26 0.0 1 colorpair
7 25 0.0 0.6 colorpair
8 24 0.0 1 colorpair
10 21 0.0 1 colorpair
11 20 0.0 1 colorpair
12 19 0.0 1 colorpair
13 18 0.0 0.2 colorpair
29 103 0.0 1 colorpair
30 102 0.16 0.2 colorpair
31 101 0.0 1 colorpair
32 100 0.0 1 colorpair
33 99 0.0 1 colorpair
38 96 0.0 1 colorpair
39 95 0.0 1 colorpair
40 94 0.0 1 colorpair
41 93 0.0 1 colorpair
42 92 0.0 0.6 colorpair
44 89 0.0 1 colorpair
45 88 0.16 1 colorpair
46 87 0.0 1 colorpair
47 86 0.0 1 colorpair
48 85 0.0 1 colorpair
49 84 0.0 1 colorpair
50 82 0.0 1 colorpair
51 81 0.0 1 colorpair
52 80 0.0 1 colorpair
53 79 0.0 1 colorpair
54 78 0.16 0.2 colorpair
55 77 0.0 0.6 colorpair
56 76 0.0 1 colorpair
58 75 0.0 1 colorpair
59 74 0.0 1 colorpair
60 73 0.0 0.2 colorpair
61 72 0.0 1 colorpair
62 71 0.0 1 colorpair
63 70 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
5 27 1 gmark
7 25 1 gmark
13 18 2 gmark
30 102 2 gmark
30 cmark
102 cmark
42 92 1 gmark
88 cmark
54 78 2 gmark
78 cmark
55 77 1 gmark
60 73 2 gmark

% End Annotations
showpage
end
%%EOF
