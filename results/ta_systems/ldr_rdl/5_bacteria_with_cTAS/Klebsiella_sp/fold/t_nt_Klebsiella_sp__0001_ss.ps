%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 15:05:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGCUCGCUCAGUUGGGCCUGGUGCUGUGGGACGAUCUGGCGGCUCCGGUGAUUGCUGGCAUUCUGGUCAGCAUCAUCGUGAGCCGGAUGGAUAACCGCAAGUAG\
) } def
/len { sequence length } bind def

/coor [
[35.84935760 232.01113892]
[34.06967163 241.93495178]
[29.91710472 251.10656738]
[23.65149498 258.96899414]
[15.66077614 265.04666138]
[6.43694735 268.97415161]
[-3.45420647 270.51806641]
[-13.40782642 269.59112549]
[-22.81696510 266.25686646]
[-31.10959244 260.72537231]
[-42.79845810 270.12591553]
[-54.48732376 279.52645874]
[-66.17618561 288.92703247]
[-71.59684753 304.40438843]
[-87.75898743 307.18234253]
[-98.03639984 294.40316772]
[-91.85654449 279.21301270]
[-75.57674408 277.23815918]
[-63.88787842 267.83761597]
[-52.19901276 258.43704224]
[-40.51014709 249.03649902]
[-45.38520050 229.10168457]
[-39.81434631 209.27699280]
[-25.16956329 194.70019531]
[-5.18365383 189.18423462]
[15.00105572 194.22004700]
[24.56907654 182.66786194]
[34.13709641 171.11567688]
[43.70511627 159.56349182]
[53.10567093 147.87461853]
[62.33680725 136.05151367]
[71.56794739 124.22838593]
[80.79907990 112.40527344]
[77.19232178 101.54132843]
[79.30460358 90.29089355]
[86.60628510 81.47502899]
[97.26645660 77.30432129]
[108.61206055 78.82457733]
[118.50901794 67.55292511]
[128.40597534 56.28126907]
[138.30293274 45.00961304]
[148.19989014 33.73795319]
[151.30691528 15.65969563]
[168.02273560 10.53513813]
[177.59075928 -1.01704717]
[187.15876770 -12.56923199]
[196.72679138 -24.12141800]
[206.29481506 -35.67360306]
[215.86283875 -47.22578812]
[225.26339722 -58.91465378]
[234.49452209 -70.73777008]
[243.72566223 -82.56089020]
[252.95680237 -94.38401031]
[262.18792725 -106.20712280]
[271.41906738 -118.03024292]
[280.65020752 -129.85336304]
[283.52835083 -138.68690491]
[290.32168579 -141.87910461]
[299.88970947 -153.43128967]
[309.45773315 -164.98347473]
[319.02575684 -176.53565979]
[328.59378052 -188.08784485]
[338.16180420 -199.64004517]
[336.43420410 -215.34962463]
[346.38601685 -227.62712097]
[362.11297607 -229.18853760]
[374.28457642 -219.10748291]
[375.67962646 -203.36488342]
[365.47045898 -191.30053711]
[349.71398926 -190.07202148]
[340.14596558 -178.51983643]
[330.57794189 -166.96765137]
[321.00991821 -155.41546631]
[311.44189453 -143.86328125]
[301.87387085 -132.31109619]
[292.47332764 -120.62222290]
[283.24218750 -108.79911041]
[274.01104736 -96.97599030]
[264.77990723 -85.15287018]
[255.54878235 -73.32975006]
[246.31764221 -61.50663376]
[237.08650208 -49.68351746]
[235.42565918 -42.36359787]
[227.41502380 -37.65776825]
[217.84700012 -26.10558128]
[208.27897644 -14.55339718]
[198.71095276 -3.00121188]
[189.14294434 8.55097294]
[179.57492065 20.10315895]
[180.37333679 32.26872253]
[172.36437988 41.98884201]
[159.47154236 43.63491058]
[149.57458496 54.90656662]
[139.67762756 66.17822266]
[129.78067017 77.44988251]
[119.88372040 88.72153473]
[121.91064453 106.51841736]
[110.48519135 120.31321716]
[92.62220001 121.63640594]
[83.39105988 133.45951843]
[74.15992737 145.28263855]
[64.92878723 157.10575867]
[62.05063629 165.93930054]
[55.25730133 169.13151550]
[45.68928146 180.68370056]
[36.12126160 192.23588562]
[26.55323982 203.78807068]
[31.97983551 212.33584595]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 21]
[11 20]
[12 19]
[13 18]
[26 107]
[27 106]
[28 105]
[29 104]
[30 102]
[31 101]
[32 100]
[33 99]
[38 96]
[39 95]
[40 94]
[41 93]
[42 92]
[44 89]
[45 88]
[46 87]
[47 86]
[48 85]
[49 84]
[50 82]
[51 81]
[52 80]
[53 79]
[54 78]
[55 77]
[56 76]
[58 75]
[59 74]
[60 73]
[61 72]
[62 71]
[63 70]
] def

init

% Start Annotations
10 21 0.0 1 colorpair
11 20 0.0 1 colorpair
12 19 0.0 1 colorpair
13 18 0.0 0.2 colorpair
26 107 0.0 1 colorpair
27 106 0.16 1 colorpair
28 105 0.0 1 colorpair
29 104 0.0 1 colorpair
30 102 0.16 0.2 colorpair
31 101 0.0 1 colorpair
32 100 0.0 1 colorpair
33 99 0.0 1 colorpair
38 96 0.0 1 colorpair
39 95 0.0 1 colorpair
40 94 0.0 1 colorpair
41 93 0.0 1 colorpair
42 92 0.0 0.6 colorpair
44 89 0.0 1 colorpair
45 88 0.16 1 colorpair
46 87 0.0 1 colorpair
47 86 0.0 1 colorpair
48 85 0.0 1 colorpair
49 84 0.0 1 colorpair
50 82 0.0 1 colorpair
51 81 0.0 1 colorpair
52 80 0.0 1 colorpair
53 79 0.0 1 colorpair
54 78 0.16 0.2 colorpair
55 77 0.0 0.6 colorpair
56 76 0.0 1 colorpair
58 75 0.0 1 colorpair
59 74 0.0 1 colorpair
60 73 0.0 0.2 colorpair
61 72 0.0 1 colorpair
62 71 0.0 1 colorpair
63 70 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
13 18 2 gmark
27 cmark
30 102 2 gmark
30 cmark
102 cmark
42 92 1 gmark
88 cmark
54 78 2 gmark
78 cmark
55 77 1 gmark
60 73 2 gmark

% End Annotations
showpage
end
%%EOF
