%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 09:12:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGCUCACACAGUUGGGUCUGAUCUUAUGGGACGAUCUGGCGGCGCCGAUAAUCGCUGGCAUCGUGGUCAGCAUUAUCGUCAGCUGGAUGCAUAACCAGAAGUGA\
) } def
/len { sequence length } bind def

/coor [
[78.97970581 277.96755981]
[71.90297699 291.49099731]
[59.65435028 300.59777832]
[44.66579819 303.47982788]
[29.91331482 299.56484985]
[18.32601166 289.63021851]
[12.20455647 275.64843750]
[12.76437092 260.39556885]
[19.89430237 246.90013123]
[32.17869568 237.84164429]
[47.17847824 235.01864624]
[51.02595520 220.52047729]
[54.87342834 206.02230835]
[47.19635773 193.31018066]
[50.89171219 178.55216980]
[64.27741241 170.58593750]
[68.12488556 156.08776855]
[71.97235870 141.58959961]
[75.81983185 127.09143066]
[66.93325043 115.00720215]
[51.94726562 114.35890961]
[36.96128082 113.71061707]
[21.97529793 113.06232452]
[7.85361910 120.19596100]
[-4.52735901 111.91582489]
[-19.51334190 111.26753235]
[-35.59899521 116.62366486]
[-45.19875717 102.64936829]
[-34.42806244 89.55629730]
[-18.86505127 96.28154755]
[-3.87906694 96.92984009]
[9.17071438 89.74983215]
[22.62359047 98.07633972]
[37.60957336 98.72463226]
[52.59555817 99.37292480]
[67.58154297 100.02121735]
[82.78515625 76.32276154]
[108.07376099 75.14926910]
[116.60841370 62.81396866]
[125.14305878 50.47866058]
[133.67770386 38.14335632]
[142.21235657 25.80805397]
[150.74700928 13.47274876]
[159.28166199 1.13744402]
[153.56495667 -10.17399597]
[153.26390076 -22.77160072]
[158.37438965 -34.21034241]
[167.84806824 -42.29695129]
[179.80676270 -45.51041794]
[191.91461182 -43.28778076]
[201.14575195 -55.11090088]
[210.37689209 -66.93402100]
[219.60801697 -78.75713348]
[228.83915710 -90.58025360]
[238.07029724 -102.40337372]
[247.30143738 -114.22649384]
[250.17958069 -123.06002808]
[256.97293091 -126.25224304]
[266.54095459 -137.80442810]
[276.10894775 -149.35661316]
[285.67697144 -160.90879822]
[295.24499512 -172.46098328]
[304.81301880 -184.01316833]
[303.08541870 -199.72274780]
[313.03723145 -212.00025940]
[328.76419067 -213.56166077]
[340.93579102 -203.48060608]
[342.33084106 -187.73800659]
[332.12167358 -175.67367554]
[316.36520386 -174.44514465]
[306.79718018 -162.89295959]
[297.22915649 -151.34077454]
[287.66113281 -139.78858948]
[278.09313965 -128.23640442]
[268.52511597 -116.68421936]
[259.12454224 -104.99535370]
[249.89341736 -93.17223358]
[240.66227722 -81.34912109]
[231.43113708 -69.52600098]
[222.20001221 -57.70288086]
[212.96887207 -45.87976456]
[203.73773193 -34.05664444]
[209.42549133 -17.46631622]
[204.07861328 -0.60005957]
[189.61994934 9.86536884]
[171.61697388 9.67209435]
[163.08232117 22.00739861]
[154.54766846 34.34270477]
[146.01301575 46.67800903]
[137.47836304 59.01331329]
[128.94371033 71.34861755]
[120.40906525 83.68392181]
[125.73671722 91.74625397]
[127.88595581 101.49982452]
[126.34528351 111.69570160]
[121.09141541 120.94319153]
[112.62185669 127.89928436]
[101.91475677 131.46180725]
[90.31800842 130.93890381]
[86.47052765 145.43707275]
[82.62305450 159.93524170]
[78.77558136 174.43341064]
[86.45002747 187.98851013]
[82.34160614 202.63691711]
[69.37159729 209.86978149]
[65.52412415 224.36795044]
[61.67665100 238.86611938]
[73.30298615 248.75506592]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 107]
[12 106]
[13 105]
[16 102]
[17 101]
[18 100]
[19 99]
[20 36]
[21 35]
[22 34]
[23 33]
[25 31]
[26 30]
[38 92]
[39 91]
[40 90]
[41 89]
[42 88]
[43 87]
[44 86]
[50 82]
[51 81]
[52 80]
[53 79]
[54 78]
[55 77]
[56 76]
[58 75]
[59 74]
[60 73]
[61 72]
[62 71]
[63 70]
] def

init

% Start Annotations
11 107 0.0 1 colorpair
12 106 0.0 1 colorpair
13 105 0.0 1 colorpair
16 102 0.0 1 colorpair
17 101 0.0 1 colorpair
18 100 0.0 1 colorpair
19 99 0.0 1 colorpair
20 36 0.0 1 colorpair
21 35 0.0 1 colorpair
22 34 0.0 1 colorpair
23 33 0.0 1 colorpair
25 31 0.0 1 colorpair
26 30 0.0 1 colorpair
38 92 0.0 1 colorpair
39 91 0.0 1 colorpair
40 90 0.0 1 colorpair
41 89 0.0 1 colorpair
42 88 0.0 1 colorpair
43 87 0.0 1 colorpair
44 86 0.0 1 colorpair
50 82 0.0 1 colorpair
51 81 0.0 1 colorpair
52 80 0.0 1 colorpair
53 79 0.0 1 colorpair
54 78 0.0 1 colorpair
55 77 0.0 1 colorpair
56 76 0.0 1 colorpair
58 75 0.16 1 colorpair
59 74 0.0 1 colorpair
60 73 0.0 1 colorpair
61 72 0.0 1 colorpair
62 71 0.0 1 colorpair
63 70 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
75 cmark

% End Annotations
showpage
end
%%EOF
