%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 09:12:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGCUCACACAGUUAGGCGUGGCCUUCUGGCACGAUUUAGCGGCUCCAAUCAUCGCUGGCACCAUUGCCAGCCUGAUUGUGAACUGGCUG_______________\
) } def
/len { sequence length } bind def

/coor [
[103.37715149 168.80590820]
[94.21930695 168.78114319]
[85.12777710 167.54048157]
[76.26358795 165.10113525]
[67.78439331 161.50155640]
[59.84162140 156.80085754]
[52.57781601 151.07792664]
[46.12405396 144.42994690]
[40.59759903 136.97093201]
[28.38656425 145.68244934]
[16.17552948 154.39396667]
[3.96449399 163.10549927]
[-8.24654102 171.81701660]
[-10.60622692 187.44415283]
[-23.37424850 196.75828552]
[-38.97556305 194.23352051]
[-48.15419006 181.36773682]
[-45.46461105 165.79399109]
[-32.50250626 156.75189209]
[-16.95806313 159.60598755]
[-4.74702787 150.89445496]
[7.46400738 142.18293762]
[19.67504311 133.47142029]
[31.88607788 124.75989532]
[28.24792862 110.20778656]
[13.37391472 108.26775360]
[-1.50009847 106.32772064]
[-16.42747879 113.11781311]
[-29.61246300 103.36649323]
[-27.49147224 87.10508728]
[-12.24639797 81.06192780]
[0.43993342 91.45370483]
[15.31394672 93.39373779]
[30.18795967 95.33377075]
[35.17656708 74.97524261]
[45.91701889 57.14404678]
[61.36453629 43.40802002]
[80.06524658 34.94486618]
[100.29278564 32.44145203]
[120.20761871 36.03878403]
[138.02430725 45.32694244]
[147.92126465 34.05528641]
[157.81822205 22.78362846]
[167.71517944 11.51197243]
[177.44868469 0.09886617]
[187.01669312 -11.45331860]
[196.58471680 -23.00550461]
[206.15274048 -34.55768967]
[215.72076416 -46.10987473]
[225.12130737 -57.79874039]
[234.35244751 -69.62185669]
[243.58358765 -81.44497681]
[252.81472778 -93.26809692]
[262.04586792 -105.09120941]
[271.27700806 -116.91432953]
[270.49298096 -129.88815308]
[278.55136108 -139.56732178]
[290.65277100 -141.04870605]
[300.22079468 -152.60089111]
[309.78881836 -164.15307617]
[319.35684204 -175.70526123]
[328.92486572 -187.25744629]
[338.49288940 -198.80963135]
[348.06091309 -210.36181641]
[350.27014160 -226.61146545]
[365.54779053 -232.57177734]
[378.17752075 -222.11128235]
[375.16696167 -205.99084473]
[359.61309814 -200.79379272]
[350.04507446 -189.24160767]
[340.47705078 -177.68942261]
[330.90902710 -166.13723755]
[321.34100342 -154.58505249]
[311.77297974 -143.03286743]
[302.20495605 -131.48068237]
[300.28338623 -114.10290527]
[283.10012817 -107.68319702]
[273.86898804 -95.86007690]
[264.63784790 -84.03695679]
[255.40670776 -72.21383667]
[246.17556763 -60.39072037]
[236.94442749 -48.56760406]
[235.28358459 -41.24768448]
[227.27294922 -36.54185486]
[217.70492554 -24.98966789]
[208.13690186 -13.43748379]
[198.56887817 -1.88529849]
[189.00086975 9.66688633]
[187.12976074 16.93590164]
[178.98683167 21.40892982]
[169.08987427 32.68058395]
[159.19291687 43.95224380]
[149.29595947 55.22389984]
[154.90513611 62.07373810]
[159.56642151 69.62177277]
[163.19355774 77.73734283]
[165.71821594 86.27920532]
[167.09130859 95.09800720]
[167.28392029 104.03890228]
[166.28790283 112.94425201]
[164.11611938 121.65642548]
[160.80227661 130.02058411]
[156.40043640 137.88740540]
[150.98408508 145.11578369]
[144.64500427 151.57536316]
[137.49162292 157.14886475]
[129.64723206 161.73420715]
[121.24782562 165.24641418]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 24]
[10 23]
[11 22]
[12 21]
[13 20]
[25 34]
[26 33]
[27 32]
[41 93]
[42 92]
[43 91]
[44 90]
[45 88]
[46 87]
[47 86]
[48 85]
[49 84]
[50 82]
[51 81]
[52 80]
[53 79]
[54 78]
[55 77]
[58 75]
[59 74]
[60 73]
[61 72]
[62 71]
[63 70]
[64 69]
] def

init

% Start Annotations
9 24 0.0 1 colorpair
10 23 0.16 1 colorpair
11 22 0.0 1 colorpair
12 21 0.0 0.2 colorpair
13 20 0.0 1 colorpair
25 34 0.0 1 colorpair
26 33 0.0 1 colorpair
27 32 0.16 1 colorpair
41 93 0.0 1 colorpair
42 92 0.0 1 colorpair
43 91 0.0 1 colorpair
44 90 0.0 1 colorpair
45 88 0.0 1 colorpair
46 87 0.0 1 colorpair
47 86 0.0 0.2 colorpair
48 85 0.0 1 colorpair
49 84 0.0 1 colorpair
50 82 0.0 1 colorpair
51 81 0.0 0.2 colorpair
52 80 0.0 1 colorpair
53 79 0.0 1 colorpair
54 78 0.16 1 colorpair
55 77 0.0 1 colorpair
58 75 0.0 1 colorpair
59 74 0.0 1 colorpair
60 73 0.0 1 colorpair
61 72 0.0 1 colorpair
62 71 0.0 1 colorpair
63 70 0.0 1 colorpair
64 69 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
10 cmark
12 21 2 gmark
27 cmark
47 86 2 gmark
51 81 2 gmark
54 cmark

% End Annotations
showpage
end
%%EOF
