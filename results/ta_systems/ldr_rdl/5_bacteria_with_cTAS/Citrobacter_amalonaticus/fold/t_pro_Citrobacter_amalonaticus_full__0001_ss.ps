%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 09:11:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGCUGACUCAGAUAAGCAUGGCCUUCUGGCACGAUUUAGCGGCUCCAGCCAUUGCCGGUAUCAUUGCGGGAAUGGUCGUGAACUGGCUACGUAACAGGAAG\
) } def
/len { sequence length } bind def

/coor [
[-67.99817657 311.94784546]
[-73.47060394 324.97604370]
[-83.48609161 334.88281250]
[-96.49264526 340.17990112]
[-110.49268341 340.08975220]
[-123.34975433 334.65948486]
[-134.11236572 345.10772705]
[-144.87496948 355.55599976]
[-141.04232788 370.42901611]
[-145.17510986 385.22143555]
[-156.16163635 395.95416260]
[-171.04658508 399.74017334]
[-185.82597351 395.56103516]
[-196.52423096 384.54092407]
[-200.26356506 369.64419556]
[-196.03813171 354.87796021]
[-184.98452759 344.21432495]
[-170.07614136 340.52169800]
[-155.32324219 344.79339600]
[-144.56062317 334.34512329]
[-133.79801941 323.89685059]
[-139.13677979 308.91442871]
[-137.43933105 293.04183960]
[-128.99203491 279.42886353]
[-115.42565155 270.79870605]
[-99.40073395 268.90332031]
[-84.08592987 274.16806030]
[-73.63766479 263.40545654]
[-63.18939972 252.64283752]
[-52.74113464 241.88023376]
[-42.29286957 231.11763000]
[-31.84460258 220.35501099]
[-21.39633751 209.59240723]
[-10.94807148 198.82980347]
[-0.66043699 187.91354370]
[9.46430779 176.84603882]
[19.58905220 165.77854919]
[19.73426437 162.10168457]
[21.77237701 158.33105469]
[25.71700096 155.40586853]
[31.13840866 154.22918701]
[42.20590973 144.10444641]
[53.27340698 133.97970581]
[64.34090424 123.85495758]
[75.25715637 113.56732178]
[86.01976776 103.11905670]
[90.02264404 89.72246552]
[103.53196716 86.11833191]
[114.29457855 75.67006683]
[124.90117645 65.06346893]
[128.96212769 49.77231979]
[143.37889099 46.02983475]
[153.82716370 35.26722717]
[164.27542114 24.50461769]
[174.72369385 13.74200821]
[185.17195129 2.97939920]
[188.98738098 -5.50164700]
[196.09289551 -7.94154596]
[206.85551453 -18.38981056]
[217.61811829 -28.83807755]
[222.13041687 -44.00217056]
[236.65174866 -47.31579590]
[247.41436768 -57.76406097]
[258.17697144 -68.21232605]
[262.13269043 -84.12723541]
[277.96588135 -88.39827728]
[289.38873291 -76.63176727]
[284.65039062 -60.93208694]
[268.62524414 -57.44971848]
[257.86264038 -47.00145340]
[247.10002136 -36.55318832]
[243.35752869 -22.13642311]
[228.06639099 -18.07546806]
[217.30377197 -7.62720251]
[206.54116821 2.82106280]
[195.93457031 13.42766476]
[185.48629761 24.19027328]
[175.03804016 34.95288086]
[164.58976746 45.71549225]
[154.14151001 56.47809982]
[150.82788086 70.99943542]
[135.66378784 75.51173401]
[133.22389221 82.61726379]
[124.74284363 86.43267822]
[113.98023224 96.88094330]
[109.97735596 110.27753448]
[96.46803284 113.88166809]
[85.70542145 124.32993317]
[81.64035797 132.69418335]
[74.46565247 134.92245483]
[63.39815140 145.04719543]
[52.33065414 155.17195129]
[41.26315308 165.29669189]
[30.65655136 175.90328979]
[20.53180695 186.97079468]
[10.40706253 198.03828430]
[6.84464169 206.62867737]
[-0.18546294 209.27806091]
[-10.63372803 220.04066467]
[-21.08199310 230.80328369]
[-31.53026009 241.56588745]
[-41.97852325 252.32849121]
[-52.42678833 263.09109497]
[-62.87505722 273.85372925]
[-73.32331848 284.61633301]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 21]
[7 20]
[8 19]
[27 105]
[28 104]
[29 103]
[30 102]
[31 101]
[32 100]
[33 99]
[34 98]
[35 96]
[36 95]
[37 94]
[41 93]
[42 92]
[43 91]
[44 90]
[45 88]
[46 87]
[48 85]
[49 84]
[50 82]
[52 80]
[53 79]
[54 78]
[55 77]
[56 76]
[58 75]
[59 74]
[60 73]
[62 71]
[63 70]
[64 69]
] def

init

% Start Annotations
6 21 0.0 1 colorpair
7 20 0.16 1 colorpair
8 19 0.16 1 colorpair
27 105 0.16 1 colorpair
28 104 0.0 1 colorpair
29 103 0.0 1 colorpair
30 102 0.0 1 colorpair
31 101 0.0 1 colorpair
32 100 0.0 0.6 colorpair
33 99 0.0 1 colorpair
34 98 0.0 0.6 colorpair
35 96 0.0 1 colorpair
36 95 0.0 1 colorpair
37 94 0.0 1 colorpair
41 93 0.0 1 colorpair
42 92 0.0 1 colorpair
43 91 0.0 1 colorpair
44 90 0.0 1 colorpair
45 88 0.0 1 colorpair
46 87 0.0 1 colorpair
48 85 0.0 1 colorpair
49 84 0.0 1 colorpair
50 82 0.0 1 colorpair
52 80 0.0 1 colorpair
53 79 0.0 1 colorpair
54 78 0.0 1 colorpair
55 77 0.0 1 colorpair
56 76 0.0 1 colorpair
58 75 0.0 0.6 colorpair
59 74 0.0 1 colorpair
60 73 0.0 1 colorpair
62 71 0.0 1 colorpair
63 70 0.0 1 colorpair
64 69 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
7 cmark
19 cmark
27 cmark
32 100 1 gmark
34 98 1 gmark
58 75 1 gmark

% End Annotations
showpage
end
%%EOF
