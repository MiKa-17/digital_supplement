%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 09:11:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGCUGACUCAGAUAAGCAUGGCCUUCUGGCACGAUUUAGCGGCUCCAGCCAUUGCCGGUAUCAUUGCGGGAAUGGUCGUGAACUGGCUACGUAACAGGAAGUAA\
) } def
/len { sequence length } bind def

/coor [
[-77.11576080 360.63424683]
[-79.79914856 367.93045044]
[-84.87078857 373.73092651]
[-91.62154388 377.29959106]
[-99.13387299 378.20730591]
[-106.40645599 376.38278198]
[-116.93635559 387.06552124]
[-127.46625519 397.74829102]
[-123.30699158 412.53326416]
[-127.11301422 427.41311646]
[-137.86051941 438.38522339]
[-152.65847778 442.49810791]
[-167.52632141 438.64547729]
[-178.46466064 427.86361694]
[-182.53115845 413.05285645]
[-178.63194275 398.19714355]
[-167.81585693 387.29266357]
[-152.99240112 383.27261353]
[-138.14900208 387.21838379]
[-127.61911011 376.53561401]
[-117.08921051 365.85287476]
[-114.29339600 343.59255981]
[-92.23881531 336.55673218]
[-83.35223389 324.47250366]
[-74.46564484 312.38824463]
[-65.57906342 300.30401611]
[-56.69247818 288.21978760]
[-47.80589294 276.13555908]
[-38.91930771 264.05133057]
[-30.03272438 251.96710205]
[-21.14614105 239.88287354]
[-12.25955677 227.79864502]
[-14.75163460 213.15879822]
[-5.91151905 200.77708435]
[9.46099663 198.26242065]
[18.34758186 186.17819214]
[27.23416519 174.09396362]
[26.99110603 170.43090820]
[28.61019707 166.47503662]
[32.20445633 163.15089417]
[37.44729233 161.39472961]
[47.34424973 150.12306213]
[57.24120712 138.85140991]
[67.13816833 127.57975006]
[76.87166595 116.16664886]
[86.43968201 104.61446381]
[88.96847534 90.86321259]
[102.00813293 85.81752014]
[111.57614899 74.26533508]
[120.97670746 62.57646561]
[123.37085724 46.93745804]
[137.30194092 41.66732788]
[146.53306580 29.84420776]
[155.76420593 18.02108955]
[164.99534607 6.19797182]
[174.22648621 -5.62514591]
[177.10462952 -14.45868301]
[183.89796448 -17.65089607]
[193.46598816 -29.20308113]
[203.03401184 -40.75526428]
[205.87785339 -56.31878662]
[219.95501709 -61.18526077]
[229.52304077 -72.73744965]
[239.09106445 -84.28963470]
[241.30029297 -100.53929138]
[256.57794189 -106.49959564]
[269.20767212 -96.03910828]
[266.19711304 -79.91867065]
[250.64324951 -74.72161102]
[241.07522583 -63.16942596]
[231.50720215 -51.61724091]
[229.34773254 -36.88001251]
[214.58619690 -31.18724632]
[205.01817322 -19.63506126]
[195.45014954 -8.08287525]
[186.04959106 3.60599017]
[176.81846619 15.42910862]
[167.58732605 27.25222588]
[158.35618591 39.07534409]
[149.12504578 50.89846420]
[147.39117432 65.69180298]
[132.79981995 71.80760193]
[131.13897705 79.12751770]
[123.12833405 83.83335114]
[113.56031799 95.38553619]
[111.03152466 109.13678741]
[97.99186707 114.18247986]
[88.42385101 125.73466492]
[85.29232788 134.48159790]
[78.40982056 137.47671509]
[68.51286316 148.74836731]
[58.61590576 160.02001953]
[48.71894836 171.29168701]
[39.31839371 182.98054504]
[30.43181038 195.06477356]
[21.54522705 207.14900208]
[23.72634888 222.57237244]
[14.54194450 234.70091248]
[-0.17532641 236.68522644]
[-9.06191063 248.76945496]
[-17.94849586 260.85369873]
[-26.83507919 272.93792725]
[-35.72166443 285.02215576]
[-44.60824585 297.10638428]
[-53.49483109 309.19061279]
[-62.38141632 321.27484131]
[-71.26799774 333.35906982]
[-80.15458679 345.44329834]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 21]
[7 20]
[8 19]
[23 108]
[24 107]
[25 106]
[26 105]
[27 104]
[28 103]
[29 102]
[30 101]
[31 100]
[32 99]
[35 96]
[36 95]
[37 94]
[41 93]
[42 92]
[43 91]
[44 90]
[45 88]
[46 87]
[48 85]
[49 84]
[50 82]
[52 80]
[53 79]
[54 78]
[55 77]
[56 76]
[58 75]
[59 74]
[60 73]
[62 71]
[63 70]
[64 69]
] def

init

% Start Annotations
6 21 0.0 1 colorpair
7 20 0.16 1 colorpair
8 19 0.16 1 colorpair
23 108 0.0 1 colorpair
24 107 0.0 0.6 colorpair
25 106 0.0 1 colorpair
26 105 0.0 1 colorpair
27 104 0.0 0.6 colorpair
28 103 0.0 1 colorpair
29 102 0.0 1 colorpair
30 101 0.0 1 colorpair
31 100 0.0 0.6 colorpair
32 99 0.0 1 colorpair
35 96 0.0 1 colorpair
36 95 0.0 1 colorpair
37 94 0.0 1 colorpair
41 93 0.0 1 colorpair
42 92 0.0 1 colorpair
43 91 0.0 1 colorpair
44 90 0.0 1 colorpair
45 88 0.0 1 colorpair
46 87 0.0 1 colorpair
48 85 0.0 1 colorpair
49 84 0.0 1 colorpair
50 82 0.0 1 colorpair
52 80 0.0 1 colorpair
53 79 0.0 1 colorpair
54 78 0.0 1 colorpair
55 77 0.0 1 colorpair
56 76 0.0 1 colorpair
58 75 0.0 0.6 colorpair
59 74 0.0 1 colorpair
60 73 0.0 1 colorpair
62 71 0.0 1 colorpair
63 70 0.0 1 colorpair
64 69 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
7 cmark
19 cmark
24 107 1 gmark
27 104 1 gmark
31 100 1 gmark
58 75 1 gmark

% End Annotations
showpage
end
%%EOF
