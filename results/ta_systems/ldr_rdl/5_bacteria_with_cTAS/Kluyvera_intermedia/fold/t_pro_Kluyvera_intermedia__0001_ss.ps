%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 15:05:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGCUAACGCAAGGGGGAAUUAUGUUCUGGCACGAUCUGGCCGCACCGACCAUCGUCAGCAUGCCCACAGGUCUGAUUUUAGGCUGGUGGCAUAACAGGAAA\
) } def
/len { sequence length } bind def

/coor [
[146.88790894 157.62925720]
[159.44224548 149.42021179]
[174.15649414 146.49209595]
[160.81163025 139.64265442]
[147.46678162 132.79321289]
[134.12191772 125.94377899]
[120.77706909 119.09434509]
[107.43221283 112.24490356]
[93.45926666 112.74340057]
[85.71835327 101.09995270]
[72.37349701 94.25051880]
[59.02863693 87.40107727]
[52.15464783 87.34444427]
[47.17599487 84.20127106]
[45.11408615 79.72998810]
[32.19843292 72.10202789]
[19.28277779 64.47406006]
[6.36712313 56.84609222]
[-6.54853106 49.21812439]
[-19.46418571 41.59015656]
[-29.87971687 50.34999847]
[-42.48347473 55.42330933]
[-56.01739502 56.31911469]
[-69.13535309 52.96264648]
[-80.53706360 45.70137787]
[-89.09695435 35.26909256]
[-93.97529602 22.71176529]
[-94.70055389 9.28268337]
[-91.21492767 -3.68262029]
[-103.65600586 -12.06232166]
[-116.09709167 -20.44202423]
[-128.53817749 -28.82172394]
[-140.97926331 -37.20142746]
[-156.44125366 -33.92999268]
[-169.64204407 -42.61992645]
[-172.74981689 -58.11564636]
[-163.92080688 -71.22380829]
[-148.39309692 -74.16758728]
[-135.37899780 -65.20047760]
[-132.59956360 -49.64251328]
[-120.15847778 -41.26280975]
[-107.71739197 -32.88311005]
[-95.27630615 -24.50340652]
[-82.83522034 -16.12370491]
[-69.31454468 -25.60120392]
[-53.17009354 -29.23289871]
[-36.82170486 -26.44613266]
[-22.73055458 -17.63241768]
[-13.02866173 -4.09270000]
[-9.19630146 12.15460968]
[-11.83621788 28.67450333]
[1.07943594 36.30247116]
[13.99509048 43.93043518]
[26.91074371 51.55840302]
[39.82639694 59.18637085]
[52.74205399 66.81433868]
[65.87807465 74.05622101]
[79.22293091 80.90565491]
[92.56778717 87.75509644]
[106.54073334 87.25659943]
[114.28164673 98.90004730]
[127.62650299 105.74948120]
[140.97135925 112.59892273]
[154.31622314 119.44836426]
[167.66107178 126.29779816]
[181.00593567 133.14723206]
[195.47546387 137.10104370]
[210.44912720 137.98965454]
[225.42277527 138.87826538]
[240.39643860 139.76687622]
[255.37008667 140.65548706]
[270.34375000 141.54409790]
[285.31741333 142.43270874]
[300.29104614 143.32131958]
[315.26470947 144.20991516]
[330.23837280 145.09852600]
[345.21203613 145.98713684]
[360.18566895 146.87574768]
[374.59826660 139.05212402]
[388.43673706 147.85150146]
[387.46524048 164.22184753]
[372.68316650 171.32275391]
[359.29705811 161.84941101]
[344.32342529 160.96080017]
[329.34976196 160.07218933]
[314.37609863 159.18357849]
[299.40243530 158.29496765]
[284.42880249 157.40635681]
[269.45513916 156.51774597]
[254.48147583 155.62913513]
[239.50782776 154.74052429]
[224.53416443 153.85192871]
[209.56051636 152.96331787]
[194.58685303 152.07470703]
[205.76573181 162.07633972]
[212.40194702 175.52850342]
[213.53575134 190.48559570]
[209.00312805 204.78437805]
[199.45964050 216.35684204]
[186.28555298 223.52925110]
[171.38624573 225.26428223]
[156.91656494 221.31100464]
[144.96928406 212.24114990]
[137.27229309 199.36650085]
[134.93884277 184.54910278]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 66]
[4 65]
[5 64]
[6 63]
[7 62]
[8 61]
[10 59]
[11 58]
[12 57]
[15 56]
[16 55]
[17 54]
[18 53]
[19 52]
[20 51]
[29 44]
[30 43]
[31 42]
[32 41]
[33 40]
[67 94]
[68 93]
[69 92]
[70 91]
[71 90]
[72 89]
[73 88]
[74 87]
[75 86]
[76 85]
[77 84]
[78 83]
] def

init

% Start Annotations
3 66 0.0 0.6 colorpair
4 65 0.0 1 colorpair
5 64 0.0 0.6 colorpair
6 63 0.16 1 colorpair
7 62 0.0 1 colorpair
8 61 0.0 1 colorpair
10 59 0.0 1 colorpair
11 58 0.16 1 colorpair
12 57 0.16 1 colorpair
15 56 0.0 1 colorpair
16 55 0.16 1 colorpair
17 54 0.16 1 colorpair
18 53 0.0 0.6 colorpair
19 52 0.16 1 colorpair
20 51 0.16 1 colorpair
29 44 0.0 0.6 colorpair
30 43 0.0 1 colorpair
31 42 0.0 1 colorpair
32 41 0.0 1 colorpair
33 40 0.0 1 colorpair
67 94 0.0 0.6 colorpair
68 93 0.16 1 colorpair
69 92 0.0 0.6 colorpair
70 91 0.0 1 colorpair
71 90 0.0 1 colorpair
72 89 0.0 0.6 colorpair
73 88 0.0 1 colorpair
74 87 0.0 1 colorpair
75 86 0.0 1 colorpair
76 85 0.0 1 colorpair
77 84 0.16 1 colorpair
78 83 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
3 66 1 gmark
5 64 1 gmark
63 cmark
11 cmark
57 cmark
16 cmark
55 cmark
17 cmark
54 cmark
18 53 1 gmark
19 cmark
52 cmark
20 cmark
51 cmark
29 44 1 gmark
67 94 1 gmark
68 cmark
69 92 1 gmark
72 89 1 gmark
84 cmark

% End Annotations
showpage
end
%%EOF
