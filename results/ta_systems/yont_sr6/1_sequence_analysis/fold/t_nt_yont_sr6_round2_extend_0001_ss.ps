%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Dec 25 12:58:30 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCUUGAGAAAGUGGGUAUAAUAGUUGCUUUCCUCAUAUCUUUAACGGUUCUUACAAUCAACUGUCUAACAAUAGUUGAGAAGAUAAGAAACCUAA___AGAAUGGGACAAGCAAAAAGAAAAAGCGUACACGCAAGCGCCUCCGUAGCAAGAGACAACGCAAACGUAUACGCAGAUAA\
) } def
/len { sequence length } bind def

/coor [
[85.47462463 159.10937500]
[80.12747192 173.12394714]
[74.78031921 187.13850403]
[69.43317413 201.15306091]
[64.08602142 215.16763306]
[58.73886871 229.18218994]
[67.32888031 242.10470581]
[66.64904785 257.60687256]
[56.96078110 269.72781372]
[41.98941422 273.80676270]
[27.49174690 268.27529907]
[19.04242516 255.26034546]
[19.89038658 239.76646423]
[29.70957184 227.75134277]
[44.72430801 223.83503723]
[50.07145691 209.82048035]
[55.41860962 195.80590820]
[60.76575851 181.79135132]
[66.11290741 167.77679443]
[71.46006012 153.76222229]
[56.46859741 142.54318237]
[45.59669876 127.29808807]
[39.87321472 109.46966553]
[39.83978271 90.74508667]
[45.49957275 72.89633942]
[56.31697083 57.61252594]
[46.92107010 45.91991806]
[37.52516937 34.22731400]
[28.12926865 22.53470612]
[18.73336792 10.84209919]
[9.33746719 -0.85050797]
[-6.05491590 -0.23347564]
[-18.71125031 -8.69932461]
[-23.89444160 -22.82725906]
[-19.81349373 -37.12704468]
[-29.20939445 -48.81965256]
[-38.60529709 -60.51225662]
[-48.00119781 -72.20486450]
[-61.97044373 -66.48297119]
[-76.97087860 -64.93076324]
[-91.78593445 -67.66553497]
[-105.21653748 -74.45724487]
[-116.17807007 -84.74785614]
[-123.78805542 -97.69715118]
[-127.43711090 -112.25136566]
[-126.83781433 -127.22889709]
[-122.04727173 -141.41629028]
[-113.46181488 -153.66648865]
[-122.85771179 -165.35908508]
[-132.25361633 -177.05169678]
[-141.64952087 -188.74430847]
[-151.14653015 -200.35493469]
[-165.92253113 -206.01007080]
[-168.11953735 -220.74174500]
[-177.71696472 -232.26951599]
[-187.31437683 -243.79728699]
[-206.21279907 -244.78140259]
[-218.20681763 -259.00469971]
[-216.06056213 -277.16497803]
[-226.05229187 -288.35272217]
[-236.04402161 -299.54043579]
[-250.11227417 -293.89593506]
[-265.26272583 -293.40655518]
[-279.66589355 -298.13140869]
[-291.58255005 -307.49990845]
[-299.57369995 -320.38082886]
[-302.67431641 -335.21865845]
[-300.51007080 -350.22174072]
[-293.34222412 -363.57830811]
[-282.03640747 -373.67550659]
[-267.95776367 -379.29409790]
[-252.80644226 -379.75555420]
[-238.41198730 -375.00418091]
[-226.51261902 -365.61370850]
[-218.54524231 -352.71810913]
[-215.47195435 -337.87454224]
[-217.66386414 -322.87551880]
[-224.85629272 -309.53216553]
[-214.86456299 -298.34445190]
[-204.87283325 -287.15670776]
[-193.58158875 -288.99850464]
[-182.69494629 -285.10919189]
[-174.96786499 -276.34976196]
[-172.41503906 -264.82861328]
[-175.78660583 -253.39471436]
[-166.18919373 -241.86694336]
[-156.59176636 -230.33917236]
[-142.50224304 -225.50857544]
[-139.61875916 -209.95234680]
[-132.90455627 -206.81512451]
[-129.95690918 -198.14019775]
[-120.56100464 -186.44760132]
[-111.16510773 -174.75498962]
[-101.76920319 -163.06237793]
[-87.95807648 -168.80955505]
[-73.07206726 -170.43377686]
[-58.31665421 -167.79492188]
[-44.88915634 -161.09843445]
[-33.88158417 -150.87934875]
[-26.19183731 -137.95960999]
[-22.45045471 -123.38187408]
[-22.96892738 -108.32543945]
[-27.71377945 -94.01081085]
[-36.30858994 -81.60076904]
[-26.91268921 -69.90815735]
[-17.51678848 -58.21555328]
[-8.12088776 -46.52294540]
[6.72213173 -47.43000793]
[19.40310669 -39.32711411]
[24.94604683 -25.14511108]
[21.03007317 -10.24640846]
[30.42597389 1.44619823]
[39.82187653 13.13880539]
[49.21777725 24.83141136]
[58.61367798 36.52401733]
[68.00957489 48.21662521]
[81.78832245 41.92040253]
[96.69516754 39.22185135]
[111.80672455 40.28813934]
[126.18692780 45.05321121]
[138.94502258 53.22189713]
[149.29069519 64.28820038]
[156.58311462 77.56663513]
[160.37055969 92.23468018]
[160.41842651 107.38373566]
[156.72372437 122.07541656]
[169.92559814 129.19653320]
[183.12748718 136.31767273]
[196.32936096 143.43879700]
[209.53123474 150.55992126]
[225.35032654 150.30165100]
[232.87870789 163.15361023]
[246.08058167 170.27473450]
[259.28247070 177.39585876]
[273.22470093 170.84451294]
[288.17642212 173.72531128]
[298.44342041 184.72770691]
[300.24154663 199.48930359]
[313.44342041 206.61042786]
[326.64529419 213.73155212]
[347.96676636 211.76678467]
[358.12698364 229.71513367]
[371.68161011 236.13949585]
[385.23623657 242.56385803]
[398.78958130 235.00833130]
[414.19146729 236.89567566]
[425.51950073 247.50015259]
[428.41784668 262.74414062]
[421.77203369 276.76602173]
[408.13751221 284.17407227]
[392.75701904 282.11975098]
[381.54467773 271.39300537]
[378.81185913 256.11846924]
[365.25726318 249.69412231]
[351.70263672 243.26976013]
[343.89569092 247.59631348]
[334.83529663 247.83329773]
[326.56500244 243.80006409]
[321.00885010 236.29342651]
[319.52416992 226.93342590]
[306.32229614 219.81230164]
[293.12039185 212.69117737]
[279.79705811 219.29623413]
[264.96371460 216.75942993]
[254.34422302 205.84704590]
[252.16133118 190.59774780]
[238.95945740 183.47660828]
[225.75756836 176.35548401]
[210.88276672 177.12310791]
[202.41011047 163.76179504]
[189.20823669 156.64067078]
[176.00634766 149.51954651]
[162.80447388 142.39842224]
[149.60260010 135.27728271]
[143.80789185 142.25840759]
[137.03987122 148.30064392]
[129.44891357 153.26976013]
[121.20365906 157.05532837]
[112.48730469 159.57325745]
[103.49351501 160.76759338]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 20]
[2 19]
[3 18]
[4 17]
[5 16]
[6 15]
[26 116]
[27 115]
[28 114]
[29 113]
[30 112]
[31 111]
[35 107]
[36 106]
[37 105]
[38 104]
[48 94]
[49 93]
[50 92]
[51 91]
[52 89]
[54 87]
[55 86]
[56 85]
[59 80]
[60 79]
[61 78]
[126 174]
[127 173]
[128 172]
[129 171]
[130 170]
[132 168]
[133 167]
[134 166]
[138 162]
[139 161]
[140 160]
[142 155]
[143 154]
[144 153]
] def

init

% Start Annotations
1 20 0.0 1 colorpair
2 19 0.0 1 colorpair
3 18 0.0 1 colorpair
4 17 0.0 1 colorpair
5 16 0.0 1 colorpair
6 15 0.0 1 colorpair
26 116 0.0 1 colorpair
27 115 0.0 1 colorpair
28 114 0.16 1 colorpair
29 113 0.0 1 colorpair
30 112 0.0 1 colorpair
31 111 0.0 0.6 colorpair
35 107 0.16 1 colorpair
36 106 0.32 1 colorpair
37 105 0.0 1 colorpair
38 104 0.16 1 colorpair
48 94 0.16 1 colorpair
49 93 0.16 1 colorpair
50 92 0.0 1 colorpair
51 91 0.0 1 colorpair
52 89 0.16 1 colorpair
54 87 0.16 1 colorpair
55 86 0.16 1 colorpair
59 80 0.0 1 colorpair
60 79 0.0 1 colorpair
61 78 0.0 1 colorpair
126 174 0.0 0.6 colorpair
127 173 0.0 1 colorpair
128 172 0.0 1 colorpair
129 171 0.0 1 colorpair
130 170 0.0 1 colorpair
132 168 0.0 1 colorpair
133 167 0.0 0.2 colorpair
134 166 0.0 1 colorpair
138 162 0.0 1 colorpair
139 161 0.0 1 colorpair
140 160 0.0 1 colorpair
142 155 0.0 1 colorpair
143 154 0.0 1 colorpair
144 153 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
114 cmark
31 111 1 gmark
107 cmark
36 cmark
106 cmark
104 cmark
48 cmark
94 cmark
93 cmark
52 cmark
89 cmark
54 cmark
87 cmark
55 cmark
56 85 5 gmark
56 cmark
85 cmark
126 174 1 gmark
133 167 2 gmark

% End Annotations
showpage
end
%%EOF
