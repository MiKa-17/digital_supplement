%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Dec 25 12:57:03 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCUUGAGAAAGUGGGUAUCAUAGUUGCUUUCCUCAUAUCUUUAACGGUUCUUACAAUCAACAGUCUAACAAUAGUUGAGAAGGUAAGAAACCUAAAGAAUGGGACAAGC\
) } def
/len { sequence length } bind def

/coor [
[94.46756744 198.51405334]
[81.51416779 187.57579041]
[88.43910217 172.10058594]
[89.28015900 157.12419128]
[90.12121582 142.14778137]
[90.96227264 127.17138672]
[91.80332947 112.19498444]
[84.41204071 105.14569855]
[82.90931702 93.92881775]
[69.05111694 99.66906738]
[55.19292831 105.40931702]
[41.33473587 111.14957428]
[27.47654152 116.88982391]
[13.61834812 122.63007355]
[-0.23984449 128.37033081]
[-14.09803772 134.11058044]
[-23.88679695 146.54000854]
[-38.60620117 144.26219177]
[-52.46439362 150.00244141]
[-64.78401184 161.64990234]
[-79.38669586 153.03608704]
[-75.15193176 136.61953735]
[-58.20464325 136.14425659]
[-44.34645081 130.40399170]
[-35.54892349 118.38514709]
[-19.83828926 120.25238800]
[-5.98009586 114.51213074]
[7.87809706 108.77188110]
[21.73628998 103.03163147]
[35.59448242 97.29138184]
[49.45267487 91.55112457]
[63.31086731 85.81087494]
[77.16905975 80.07062531]
[89.52300262 71.56297302]
[99.82795715 60.66307068]
[110.13291168 49.76316452]
[120.43786621 38.86326218]
[130.74282837 27.96335602]
[134.43690491 19.44820404]
[141.49293518 16.90739822]
[152.09953308 6.30079603]
[162.70613098 -4.30580568]
[173.31272888 -14.91240788]
[183.91934204 -25.51900864]
[194.52593994 -36.12561035]
[196.67579651 -42.62494659]
[201.16781616 -46.39677811]
[206.03724670 -47.00859451]
[217.22187805 -57.00379562]
[228.40650940 -66.99899292]
[239.59114075 -76.99419403]
[250.63450623 -87.14526367]
[261.53439331 -97.45021820]
[272.43429565 -107.75517273]
[283.33422852 -118.06012726]
[294.23413086 -128.36508179]
[293.95007324 -147.19427490]
[307.18865967 -160.13951111]
[325.37634277 -159.45712280]
[335.68130493 -170.35702515]
[345.98626709 -181.25692749]
[356.29122925 -192.15682983]
[366.59616089 -203.05673218]
[361.10491943 -217.29783630]
[362.34500122 -232.51049805]
[370.07022095 -245.67422485]
[382.74670410 -254.17536926]
[397.85754395 -256.32601929]
[412.40246582 -251.69912720]
[423.49356079 -241.21342468]
[428.92871094 -226.95080566]
[427.62872314 -211.74314880]
[419.85171509 -198.60993958]
[407.14184570 -190.15878296]
[392.02267456 -188.06767273]
[377.49606323 -192.75178528]
[367.19113159 -181.85188293]
[356.88616943 -170.95198059]
[346.58120728 -160.05206299]
[336.27624512 -149.15216064]
[339.07879639 -137.92018127]
[336.01593018 -126.63116455]
[327.75189209 -118.18315125]
[316.30133057 -114.80410767]
[304.53906250 -117.46517944]
[293.63916016 -107.16022491]
[282.73925781 -96.85527039]
[271.83935547 -86.55031586]
[260.93945312 -76.24536133]
[258.20175171 -69.26336670]
[249.58634949 -65.80956268]
[238.40171814 -55.81436157]
[227.21707153 -45.81916046]
[216.03244019 -35.82396317]
[205.13253784 -25.51900864]
[194.52593994 -14.91240788]
[183.91934204 -4.30580568]
[173.31272888 6.30079603]
[162.70613098 16.90739822]
[152.09953308 27.51399994]
[141.64273071 38.26831055]
[131.33776855 49.16821671]
[121.03282166 60.06811905]
[110.72786713 70.96802521]
[100.42291260 81.86792755]
[115.99002075 96.28757477]
[106.77973175 113.03604126]
[105.93867493 128.01243591]
[105.09761810 142.98884583]
[104.25656128 157.96524048]
[103.41550446 172.94165039]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 111]
[4 110]
[5 109]
[6 108]
[7 107]
[9 33]
[10 32]
[11 31]
[12 30]
[13 29]
[14 28]
[15 27]
[16 26]
[18 24]
[19 23]
[34 105]
[35 104]
[36 103]
[37 102]
[38 101]
[40 100]
[41 99]
[42 98]
[43 97]
[44 96]
[45 95]
[48 94]
[49 93]
[50 92]
[51 91]
[52 89]
[53 88]
[54 87]
[55 86]
[56 85]
[59 80]
[60 79]
[61 78]
[62 77]
[63 76]
] def

init

% Start Annotations
3 111 0.0 1 colorpair
4 110 0.0 1 colorpair
5 109 0.0 1 colorpair
6 108 0.0 1 colorpair
7 107 0.0 1 colorpair
9 33 0.16 1 colorpair
10 32 0.0 1 colorpair
11 31 0.0 1 colorpair
12 30 0.16 1 colorpair
13 29 0.0 0.6 colorpair
14 28 0.0 1 colorpair
15 27 0.0 1 colorpair
16 26 0.0 1 colorpair
18 24 0.0 1 colorpair
19 23 0.0 1 colorpair
34 105 0.0 1 colorpair
35 104 0.0 1 colorpair
36 103 0.16 1 colorpair
37 102 0.0 1 colorpair
38 101 0.0 1 colorpair
40 100 0.0 1 colorpair
41 99 0.0 1 colorpair
42 98 0.16 1 colorpair
43 97 0.0 1 colorpair
44 96 0.0 1 colorpair
45 95 0.0 1 colorpair
48 94 0.16 1 colorpair
49 93 0.16 1 colorpair
50 92 0.0 1 colorpair
51 91 0.0 1 colorpair
52 89 0.0 1 colorpair
53 88 0.0 1 colorpair
54 87 0.0 1 colorpair
55 86 0.0 1 colorpair
56 85 0.0 0.2 colorpair
59 80 0.0 1 colorpair
60 79 0.0 1 colorpair
61 78 0.0 1 colorpair
62 77 0.0 1 colorpair
63 76 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
33 cmark
12 cmark
13 29 1 gmark
36 cmark
42 cmark
98 cmark
48 cmark
94 cmark
93 cmark
56 85 2 gmark

% End Annotations
showpage
end
%%EOF
