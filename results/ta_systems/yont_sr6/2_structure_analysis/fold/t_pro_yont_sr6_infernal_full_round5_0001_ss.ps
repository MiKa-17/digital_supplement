%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Dec 25 14:21:25 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCUUGAGAAAGUGGGUAUCAUAGUUGCUUUCCUCAUAUCUUUAACGGUUCUUACAAUCAACAGUCUAACAAUAGUUGAGAAGAUAAGAAACCUA___AAGAAUGGGACAAGC\
) } def
/len { sequence length } bind def

/coor [
[-41.94127274 272.01245117]
[-50.08219910 284.61105347]
[-58.22312546 297.20968628]
[-66.36405182 309.80831909]
[-74.50497437 322.40695190]
[-82.64590454 335.00555420]
[-76.92671967 349.43020630]
[-80.81099701 364.45324707]
[-92.80516052 374.29803467]
[-108.29721069 375.17901611]
[-121.33012390 366.75747681]
[-126.89249420 352.27163696]
[-122.84547424 337.29159546]
[-110.74521637 327.57751465]
[-95.24452972 326.86462402]
[-87.10359955 314.26602173]
[-78.96267700 301.66738892]
[-70.82174683 289.06875610]
[-62.68082428 276.47015381]
[-54.53989792 263.87152100]
[-57.81365204 257.81317139]
[-58.98668289 250.97457886]
[-57.90289307 244.06843567]
[-54.64316559 237.82536316]
[-49.52032471 232.91659546]
[-43.04939270 229.88182068]
[-35.89589691 229.07002258]
[-28.80745506 230.59960938]
[-18.71984673 219.49824524]
[-8.63223743 208.39689636]
[-13.30042934 194.25215149]
[-10.24144745 179.57228088]
[-0.17879650 168.32020569]
[14.25970840 163.58454895]
[29.22763824 166.73229980]
[39.31524658 155.63095093]
[49.40285492 144.52958679]
[59.49046326 133.42823792]
[51.71558762 120.66602325]
[47.84976196 106.23072815]
[48.20596313 91.29099274]
[52.75534821 77.05632782]
[61.12960815 64.67916107]
[72.65077209 55.16152573]
[86.38609314 49.27396393]
[101.22358704 47.49312210]
[115.96201324 49.96318054]
[129.40817261 56.48416138]
[139.49578857 45.38280106]
[149.58338928 34.28144455]
[159.67100525 23.18008614]
[169.60604858 11.94198036]
[172.73802185 -3.56612349]
[186.90301514 -8.17069912]
[196.68363953 -19.54345703]
[206.46424866 -30.91621399]
[204.24684143 -49.62302017]
[216.09602356 -63.85910416]
[234.26463318 -65.03269958]
[243.40959167 -76.92259216]
[252.55456543 -88.81249237]
[244.40359497 -101.59284973]
[241.11836243 -116.39092255]
[243.09556580 -131.41978455]
[250.09645081 -144.86460876]
[261.27563477 -155.10188293]
[275.28317261 -160.89538574]
[290.42758179 -161.54554749]
[304.88009644 -156.97384644]
[316.89550781 -147.73234558]
[325.02291870 -134.93699646]
[328.28088379 -120.13288879]
[326.27597046 -105.10770416]
[319.25033569 -91.67579651]
[308.05230713 -81.45914459]
[294.03411865 -75.69145966]
[278.88851929 -75.06920624]
[264.44445801 -79.66753387]
[255.29949951 -67.77763367]
[246.15454102 -55.88773346]
[250.08113098 -45.00752640]
[248.18679810 -33.47425461]
[240.83598328 -24.23265076]
[229.80123901 -19.70025063]
[217.83700562 -21.13560104]
[208.05639648 -9.76284313]
[198.27577209 1.60991406]
[195.84336853 16.30456161]
[180.97880554 21.72259331]
[178.97619629 28.94350815]
[170.77236938 33.26769257]
[160.68475342 44.36905289]
[150.59715271 55.47040939]
[140.50953674 66.57176971]
[148.28440857 79.33397675]
[152.15023804 93.76927185]
[151.79403687 108.70900726]
[147.24465942 122.94367218]
[138.87039185 135.32084656]
[127.34922791 144.83847046]
[113.61390686 150.72604370]
[98.77641296 152.50688171]
[84.03798676 150.03681946]
[70.59181976 143.51583862]
[60.50421143 154.61720276]
[50.41660309 165.71855164]
[40.32899475 176.81991577]
[44.89133072 191.41896057]
[41.55572891 206.24362183]
[31.31570053 217.33453369]
[16.99491501 221.78100586]
[2.46912074 218.48449707]
[-7.61848736 229.58586121]
[-17.70609665 240.68722534]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 20]
[2 19]
[3 18]
[4 17]
[5 16]
[6 15]
[28 114]
[29 113]
[30 112]
[35 107]
[36 106]
[37 105]
[38 104]
[48 94]
[49 93]
[50 92]
[51 91]
[52 89]
[54 87]
[55 86]
[56 85]
[59 80]
[60 79]
[61 78]
] def

init

% Start Annotations
1 20 0.0 1 colorpair
2 19 0.0 1 colorpair
3 18 0.0 1 colorpair
4 17 0.0 1 colorpair
5 16 0.0 1 colorpair
6 15 0.0 1 colorpair
28 114 0.16 1 colorpair
29 113 0.0 1 colorpair
30 112 0.0 1 colorpair
35 107 0.16 1 colorpair
36 106 0.32 1 colorpair
37 105 0.0 1 colorpair
38 104 0.16 1 colorpair
48 94 0.16 1 colorpair
49 93 0.16 1 colorpair
50 92 0.0 1 colorpair
51 91 0.0 1 colorpair
52 89 0.16 1 colorpair
54 87 0.16 1 colorpair
55 86 0.16 1 colorpair
59 80 0.0 1 colorpair
60 79 0.16 1 colorpair
61 78 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
114 cmark
107 cmark
36 cmark
106 cmark
104 cmark
48 cmark
94 cmark
93 cmark
52 cmark
89 cmark
54 cmark
87 cmark
55 cmark
56 85 11 gmark
56 cmark
85 cmark
60 cmark

% End Annotations
showpage
end
%%EOF
