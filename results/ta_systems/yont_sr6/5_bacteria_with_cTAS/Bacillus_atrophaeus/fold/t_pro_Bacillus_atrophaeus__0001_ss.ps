%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Dec 25 14:25:26 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCUUGAGAAGAUGGGUAUAAUCGUUGCUAGUCUCAUCUCAUUAUCGGUUCUUACAAUCAAUUGCCUCACAAUAAUUGAGAAGAUAAGAAACCUAAUGAGUGGGACAAGU\
) } def
/len { sequence length } bind def

/coor [
[-88.06910706 310.44476318]
[-96.40265656 322.91680908]
[-104.73621368 335.38885498]
[-113.06976318 347.86090088]
[-121.40332031 360.33291626]
[-129.73687744 372.80496216]
[-124.24000549 387.31579590]
[-128.35467529 402.27740479]
[-140.49870300 411.93670654]
[-156.00245667 412.57955933]
[-168.90441895 403.95870972]
[-174.24354553 389.38912964]
[-169.96682739 374.47305298]
[-157.71873474 364.94604492]
[-142.20892334 364.47143555]
[-133.87536621 351.99938965]
[-125.54180908 339.52734375]
[-117.20825958 327.05529785]
[-108.87470245 314.58325195]
[-100.54115295 302.11120605]
[-103.73300934 295.98239136]
[-104.80051422 289.10232544]
[-103.59802246 282.19158936]
[-100.21939087 275.98474121]
[-94.99158478 271.15243530]
[-88.44328308 268.22894287]
[-81.25146484 267.55310059]
[-74.17150879 269.22952271]
[-63.86655807 258.32962036]
[-53.56160355 247.42970276]
[-50.44039536 232.86579895]
[-35.33732986 228.15325928]
[-25.03237724 217.25335693]
[-14.72742271 206.35345459]
[-4.42246866 195.45355225]
[5.88248539 184.55364990]
[16.18743896 173.65374756]
[18.52935028 166.52922058]
[26.93754768 162.59777832]
[37.54415131 151.99118042]
[48.15075302 141.38458252]
[58.75735474 130.77798462]
[69.36395264 120.17137909]
[79.97055817 109.56477356]
[90.57715607 98.95817566]
[91.78625488 93.69340515]
[95.92501831 89.53438568]
[102.08846283 88.07518768]
[113.27310181 78.07998657]
[124.45773315 68.08479309]
[135.64236450 58.08959198]
[146.68571472 47.93851852]
[157.58561707 37.63356400]
[168.48553467 27.32860947]
[179.38543701 17.02365494]
[190.13973999 6.56684971]
[189.78050232 -10.85374928]
[201.84333801 -22.95762062]
[218.59347534 -22.66881943]
[228.89842224 -33.56872559]
[239.20338440 -44.46862793]
[249.50833130 -55.36853409]
[259.81329346 -66.26844025]
[270.11825562 -77.16834259]
[280.42318726 -88.06824493]
[277.43466187 -103.29480743]
[283.99734497 -117.35577393]
[297.58776855 -124.84441376]
[312.98016357 -122.88119507]
[324.25579834 -112.22100830]
[327.07897949 -96.96292114]
[320.36416626 -82.97397614]
[306.69326782 -75.63320923]
[291.32308960 -77.76329041]
[281.01815796 -66.86338806]
[270.71319580 -55.96348572]
[260.40823364 -45.06357956]
[250.10328674 -34.16367340]
[239.79833984 -23.26376915]
[229.49337769 -12.36386490]
[231.64758301 0.42446569]
[225.91699219 12.27564812]
[214.21307373 18.71715164]
[200.74635315 17.17345047]
[198.20553589 24.22948074]
[189.69038391 27.92356110]
[178.79048157 38.22851562]
[167.89057922 48.53347015]
[156.99067688 58.83842087]
[154.25297546 65.82041931]
[145.63755798 69.27422333]
[134.45292664 79.26942444]
[123.26829529 89.26462555]
[112.08366394 99.25981903]
[101.18376160 109.56477356]
[90.57715607 120.17137909]
[79.97055817 130.77798462]
[69.36395264 141.38458252]
[58.75735474 151.99118042]
[48.15075302 162.59777832]
[37.54415131 173.20439148]
[27.08734322 183.95869446]
[16.78239059 194.85859680]
[6.47743607 205.75849915]
[-3.82751775 216.65841675]
[-14.13247204 227.55831909]
[-24.43742561 238.45822144]
[-28.29571152 253.80175781]
[-42.66169739 257.73464966]
[-52.96665192 268.63455200]
[-63.27160645 279.53448486]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 20]
[2 19]
[3 18]
[4 17]
[5 16]
[6 15]
[28 111]
[29 110]
[30 109]
[32 107]
[33 106]
[34 105]
[35 104]
[36 103]
[37 102]
[39 101]
[40 100]
[41 99]
[42 98]
[43 97]
[44 96]
[45 95]
[48 94]
[49 93]
[50 92]
[51 91]
[52 89]
[53 88]
[54 87]
[55 86]
[56 84]
[59 80]
[60 79]
[61 78]
[62 77]
[63 76]
[64 75]
[65 74]
] def

init

% Start Annotations
1 20 0.0 1 colorpair
2 19 0.0 1 colorpair
3 18 0.0 1 colorpair
4 17 0.0 1 colorpair
5 16 0.0 1 colorpair
6 15 0.0 1 colorpair
28 111 0.0 1 colorpair
29 110 0.0 1 colorpair
30 109 0.0 1 colorpair
32 107 0.0 1 colorpair
33 106 0.0 1 colorpair
34 105 0.0 1 colorpair
35 104 0.0 1 colorpair
36 103 0.0 1 colorpair
37 102 0.0 1 colorpair
39 101 0.0 1 colorpair
40 100 0.0 1 colorpair
41 99 0.0 1 colorpair
42 98 0.0 1 colorpair
43 97 0.0 1 colorpair
44 96 0.0 1 colorpair
45 95 0.0 1 colorpair
48 94 0.0 1 colorpair
49 93 0.0 1 colorpair
50 92 0.0 1 colorpair
51 91 0.0 1 colorpair
52 89 0.0 1 colorpair
53 88 0.0 1 colorpair
54 87 0.0 1 colorpair
55 86 0.0 1 colorpair
56 84 0.0 1 colorpair
59 80 0.0 1 colorpair
60 79 0.0 1 colorpair
61 78 0.0 1 colorpair
62 77 0.0 1 colorpair
63 76 0.0 1 colorpair
64 75 0.0 1 colorpair
65 74 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
