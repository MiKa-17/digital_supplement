%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Dec 25 14:26:34 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCUUGAGAAAGUGGGUAUAACAAUUGCUUUCCUUAUUCCUAUCACGGUUUUAAUCAUCAACUGUUUAACGAUAGCUGAGAAGAUUCAAAACCUGAUGAAGAAUAAAAAAAGC\
) } def
/len { sequence length } bind def

/coor [
[-103.67704773 343.35940552]
[-111.81797791 355.95800781]
[-119.95890045 368.55664062]
[-128.09982300 381.15527344]
[-136.24075317 393.75387573]
[-144.38168335 406.35250854]
[-138.66249084 420.77716064]
[-142.54676819 435.80020142]
[-154.54093933 445.64498901]
[-170.03298950 446.52597046]
[-183.06590271 438.10443115]
[-188.62828064 423.61859131]
[-184.58125305 408.63854980]
[-172.48098755 398.92446899]
[-156.98030090 398.21157837]
[-148.83937073 385.61297607]
[-140.69845581 373.01434326]
[-132.55752563 360.41571045]
[-124.41660309 347.81707764]
[-116.27567291 335.21847534]
[-119.54943085 329.16012573]
[-120.72245789 322.32153320]
[-119.63867188 315.41537476]
[-116.37894440 309.17233276]
[-111.25610352 304.26354980]
[-104.78517151 301.22875977]
[-97.63167572 300.41696167]
[-90.54322815 301.94656372]
[-80.45561981 290.84521484]
[-70.36801147 279.74383545]
[-60.28040695 268.64248657]
[-50.19279861 257.54113770]
[-40.10519028 246.43977356]
[-30.01758194 235.33840942]
[-19.92997360 224.23706055]
[-9.84236431 213.13569641]
[0.24524385 202.03433228]
[10.33285236 190.93298340]
[20.42045975 179.83161926]
[30.50806808 168.73027039]
[33.23310089 151.45304871]
[50.70626450 145.84515381]
[60.48687744 134.47239685]
[70.26748657 123.09963226]
[80.04810333 111.72687531]
[89.82871246 100.35411835]
[92.32645416 92.56563568]
[100.03514862 88.80902100]
[110.12275696 77.70766449]
[120.21036530 66.60630035]
[130.29797363 55.50494385]
[140.38558960 44.40358734]
[150.47319031 33.30222702]
[160.40823364 22.06412125]
[170.18884277 10.69136429]
[179.96945190 -0.68139327]
[189.75007629 -12.05415058]
[192.44631958 -31.94014740]
[210.77920532 -37.83015442]
[219.92416382 -49.72005463]
[229.06912231 -61.60995483]
[231.34954834 -77.26595306]
[245.24195862 -82.63719177]
[254.38691711 -94.52709198]
[263.53186035 -106.41699219]
[272.67684937 -118.30689240]
[281.82180786 -130.19679260]
[283.44326782 -146.51557922]
[298.49591064 -153.02325439]
[311.49487305 -143.02528381]
[309.06790161 -126.80671692]
[293.71170044 -121.05182648]
[284.56674194 -109.16192627]
[275.42178345 -97.27203369]
[266.27682495 -85.38213348]
[257.13186646 -73.49223328]
[255.50553894 -58.68667984]
[240.95901489 -52.46499252]
[231.81405640 -40.57509232]
[222.66909790 -28.68519592]
[224.91062927 -18.54604912]
[221.05206299 -8.66764450]
[212.16874695 -2.47889543]
[201.12283325 -2.27353740]
[191.34220886 9.09921932]
[181.56159973 20.47197723]
[171.78099060 31.84473419]
[169.77839661 39.06565094]
[161.57455444 43.38983536]
[151.48693848 54.49119568]
[141.39933777 65.59255219]
[131.31172180 76.69390869]
[121.22412109 87.79527283]
[111.13651276 98.89662933]
[101.20146942 110.13473511]
[91.42086029 121.50749207]
[81.64024353 132.88024902]
[71.85963440 144.25300598]
[62.07902145 155.62576294]
[62.24993134 168.61143494]
[53.75602341 177.89656067]
[41.60942841 178.81787109]
[31.52181816 189.91923523]
[21.43420982 201.02058411]
[11.34660244 212.12194824]
[1.25899386 223.22331238]
[-8.82861423 234.32466125]
[-18.91622353 245.42602539]
[-29.00383186 256.52737427]
[-39.09143829 267.62872314]
[-49.17904663 278.73010254]
[-59.26665497 289.83145142]
[-69.35426331 300.93280029]
[-79.44187164 312.03417969]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 20]
[2 19]
[3 18]
[4 17]
[5 16]
[6 15]
[28 114]
[29 113]
[30 112]
[31 111]
[32 110]
[33 109]
[34 108]
[35 107]
[36 106]
[37 105]
[38 104]
[39 103]
[40 102]
[42 99]
[43 98]
[44 97]
[45 96]
[46 95]
[48 94]
[49 93]
[50 92]
[51 91]
[52 90]
[53 89]
[54 87]
[55 86]
[56 85]
[57 84]
[59 80]
[60 79]
[61 78]
[63 76]
[64 75]
[65 74]
[66 73]
[67 72]
] def

init

% Start Annotations
1 20 0.0 1 colorpair
2 19 0.0 1 colorpair
3 18 0.0 1 colorpair
4 17 0.0 1 colorpair
5 16 0.0 1 colorpair
6 15 0.0 1 colorpair
28 114 0.0 1 colorpair
29 113 0.0 1 colorpair
30 112 0.0 1 colorpair
31 111 0.0 1 colorpair
32 110 0.0 1 colorpair
33 109 0.0 0.2 colorpair
34 108 0.0 0.2 colorpair
35 107 0.0 1 colorpair
36 106 0.0 1 colorpair
37 105 0.0 1 colorpair
38 104 0.0 1 colorpair
39 103 0.0 1 colorpair
40 102 0.0 1 colorpair
42 99 0.0 1 colorpair
43 98 0.0 1 colorpair
44 97 0.0 1 colorpair
45 96 0.0 1 colorpair
46 95 0.0 1 colorpair
48 94 0.0 1 colorpair
49 93 0.0 1 colorpair
50 92 0.0 1 colorpair
51 91 0.0 1 colorpair
52 90 0.0 1 colorpair
53 89 0.0 1 colorpair
54 87 0.0 1 colorpair
55 86 0.16 1 colorpair
56 85 0.0 1 colorpair
57 84 0.0 1 colorpair
59 80 0.0 1 colorpair
60 79 0.16 1 colorpair
61 78 0.0 1 colorpair
63 76 0.0 0.6 colorpair
64 75 0.0 1 colorpair
65 74 0.0 1 colorpair
66 73 0.0 1 colorpair
67 72 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
33 109 2 gmark
34 108 2 gmark
55 cmark
60 cmark
63 76 1 gmark

% End Annotations
showpage
end
%%EOF
