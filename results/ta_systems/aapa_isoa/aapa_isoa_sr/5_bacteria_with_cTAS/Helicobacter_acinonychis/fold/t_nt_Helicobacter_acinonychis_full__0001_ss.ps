%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan 23 21:22:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_______________________________________________________________________________________CUAACGAAACAAUCACUUUAAACCCUAAAAAAGAAAUUUCAAGGCAUAAUGUUCUCUAGGAGUUUUUGCCAUUUUUGUCGUUCAUGGCAAACUCCUUAUGUAAAGGUUAUUCCCAUAAUUGCACUUAUGGGGG\
) } def
/len { sequence length } bind def

/coor [
[-257.91250610 162.95777893]
[-260.69995117 177.70046997]
[-264.30242920 192.26547241]
[-268.70880127 206.60774231]
[-273.90542603 220.68296814]
[-279.87625122 234.44764709]
[-286.60281372 247.85922241]
[-294.06433105 260.87622070]
[-302.23773193 273.45846558]
[-311.09774780 285.56701660]
[-320.61703491 297.16442871]
[-330.76611328 308.21493530]
[-341.51361084 318.68429565]
[-352.82638550 328.54019165]
[-364.66937256 337.75213623]
[-377.00604248 346.29168701]
[-389.79821777 354.13244629]
[-403.00634766 361.25015259]
[-416.58966064 367.62280273]
[-430.50613403 373.23071289]
[-444.71273804 378.05657959]
[-459.16561890 382.08541870]
[-473.82003784 385.30484009]
[-488.63073730 387.70486450]
[-503.55194092 389.27807617]
[-518.53747559 390.01959229]
[-533.54113770 389.92715454]
[-548.51641846 389.00106812]
[-563.41705322 387.24411011]
[-578.19708252 384.66180420]
[-592.81072998 381.26208496]
[-607.21282959 377.05545044]
[-621.35894775 372.05493164]
[-635.20526123 366.27597046]
[-648.70904541 359.73641968]
[-661.82849121 352.45654297]
[-674.52307129 344.45877075]
[-686.75354004 335.76788330]
[-698.48217773 326.41070557]
[-709.67260742 316.41616821]
[-720.29034424 305.81515503]
[-730.30249023 294.64047241]
[-739.67816162 282.92663574]
[-748.38830566 270.70983887]
[-756.40606689 258.02786255]
[-763.70660400 244.91990662]
[-770.26745605 231.42646790]
[-776.06823730 217.58927917]
[-781.09100342 203.45108032]
[-785.32031250 189.05560303]
[-788.74310303 174.44732666]
[-791.34869385 159.67141724]
[-793.12908936 144.77352905]
[-794.07885742 129.79971313]
[-794.19488525 114.79627228]
[-793.47698975 99.80955505]
[-791.92730713 84.88591003]
[-789.55059814 70.07144165]
[-786.35430908 55.41195679]
[-782.34820557 40.95276260]
[-777.54479980 26.73855209]
[-771.95880127 12.81326103]
[-765.60754395 -0.78006846]
[-758.51068115 -13.99942017]
[-750.69012451 -26.80393410]
[-742.16998291 -39.15402985]
[-732.97674561 -51.01153946]
[-723.13867188 -62.33980179]
[-712.68621826 -73.10381317]
[-701.65179443 -83.27029419]
[-690.06933594 -92.80782318]
[-677.97479248 -101.68692017]
[-665.40545654 -109.88014221]
[-652.40020752 -117.36215973]
[-638.99926758 -124.10985565]
[-625.24401855 -130.10235596]
[-611.17700195 -135.32116699]
[-596.84167480 -139.75012207]
[-582.28240967 -143.37554932]
[-567.54412842 -146.18624878]
[-552.67236328 -148.17352295]
[-537.71325684 -149.33123779]
[-522.71282959 -149.65580750]
[-507.71759033 -149.14622498]
[-492.77386475 -147.80407715]
[-477.92779541 -145.63349915]
[-463.22531128 -142.64120483]
[-448.71182251 -138.83645630]
[-434.43225098 -134.23100281]
[-420.43066406 -128.83908081]
[-406.75039673 -122.67735291]
[-393.43368530 -115.76486969]
[-380.52172852 -108.12299347]
[-368.05441284 -99.77534485]
[-356.07031250 -90.74772644]
[-344.60641479 -81.06805420]
[-333.69818115 -70.76622772]
[-323.37933350 -59.87410355]
[-313.68179321 -48.42534256]
[-304.63546753 -36.45533371]
[-296.26837158 -24.00107765]
[-288.60632324 -11.10106659]
[-281.67306519 2.20482254]
[-275.48999023 15.87546349]
[-270.07620239 29.86860085]
[-265.44845581 44.14098358]
[-261.62103271 58.64849472]
[-258.60580444 73.34629059]
[-256.41204834 88.18894958]
[-255.04655457 103.13057709]
[-240.05603027 102.59761810]
[-225.06550598 102.06465149]
[-210.07496643 101.53168488]
[-195.08444214 100.99872589]
[-190.53845215 86.76428223]
[-181.37954712 74.92184448]
[-168.69784546 66.91252136]
[-154.01367188 63.71931458]
[-139.09521484 65.74647522]
[-125.74560547 72.76846313]
[-115.58506775 83.95485687]
[-109.85418701 97.96850586]
[-94.86365509 97.43553925]
[-79.87313080 96.90258026]
[-64.88259888 96.36961365]
[-58.48628998 84.65548706]
[-47.04621887 77.57320404]
[-33.49272537 77.06258392]
[-21.36010933 83.36376953]
[-13.86499977 94.92661285]
[1.13159001 94.60678864]
[13.69099808 86.59988403]
[27.65300369 94.04118347]
[42.64959335 93.72136688]
[57.64618301 93.40154266]
[72.64277649 93.08171844]
[87.63936615 92.76190186]
[99.69459534 85.67931366]
[112.04081726 92.24150848]
[127.03740692 91.92168427]
[137.93571472 80.79223633]
[153.14894104 80.68152618]
[163.69201660 91.13998413]
[180.44976807 79.92691803]
[196.97167969 89.98065186]
[211.95310974 89.23464966]
[226.93455505 88.48865509]
[241.91598511 87.74265289]
[256.89743042 86.99665833]
[271.87887573 86.25066376]
[286.86029053 85.50466156]
[292.60205078 82.25087738]
[298.27474976 82.36287689]
[302.27700806 84.95654297]
[317.27359009 84.63672638]
[332.27020264 84.31690216]
[347.26678467 83.99708557]
[362.26336670 83.67726135]
[377.25994873 83.35743713]
[384.02505493 69.62819672]
[396.40237427 60.62483597]
[411.54769897 58.41625214]
[425.98074341 63.50996780]
[436.38488770 74.73548126]
[440.36935425 89.51325989]
[437.01852417 104.44746399]
[427.10241699 116.10633850]
[412.89965820 121.81074524]
[397.67395020 120.24986267]
[384.92404175 111.78237152]
[377.57977295 98.35403442]
[362.58319092 98.67385101]
[347.58660889 98.99367523]
[332.59002686 99.31349182]
[317.59341431 99.63331604]
[302.59683228 99.95314026]
[287.60629272 100.48609924]
[272.62487793 101.23210144]
[257.64343262 101.97809601]
[242.66198730 102.72409058]
[227.68055725 103.47009277]
[212.69911194 104.21608734]
[197.71768188 104.96208954]
[191.57617188 113.11753845]
[181.75447083 116.62364197]
[171.41033936 114.09705353]
[164.01182556 106.13657379]
[153.92422485 117.03500366]
[138.72010803 117.57298279]
[127.35722351 106.91828156]
[112.36063385 107.23809814]
[100.30540466 114.32068634]
[87.95918274 107.75849152]
[72.96259308 108.07831573]
[57.96600342 108.39813232]
[42.96941376 108.71795654]
[27.97282410 109.03777313]
[14.34076023 117.06755829]
[1.45141125 109.60337830]
[-13.54517937 109.92320251]
[-23.00648880 123.94812012]
[-38.80704117 129.51226807]
[-54.65095901 124.60867310]
[-64.34963226 111.36014557]
[-79.34016418 111.89310455]
[-94.33069611 112.42607117]
[-109.32122040 112.95903015]
[-114.04242706 127.34429169]
[-123.38288879 139.22401428]
[-136.20010376 147.17631531]
[-150.93695068 150.25781250]
[-165.81080627 148.11549377]
[-179.02928162 141.02700806]
[-189.00608826 129.86491394]
[-194.55148315 115.98925018]
[-209.54200745 116.52221680]
[-224.53253174 117.05518341]
[-239.52307129 117.58814240]
[-254.51359558 118.12110901]
[-254.81452942 133.12199402]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[110 219]
[111 218]
[112 217]
[113 216]
[114 215]
[122 207]
[123 206]
[124 205]
[125 204]
[130 200]
[131 199]
[133 197]
[134 196]
[135 195]
[136 194]
[137 193]
[139 191]
[140 190]
[143 187]
[145 183]
[146 182]
[147 181]
[148 180]
[149 179]
[150 178]
[151 177]
[154 176]
[155 175]
[156 174]
[157 173]
[158 172]
[159 171]
] def

init

% Start Annotations
110 219 0.0 1 colorpair
111 218 0.0 1 colorpair
112 217 0.0 1 colorpair
113 216 0.0 1 colorpair
114 215 0.0 1 colorpair
122 207 0.0 1 colorpair
123 206 0.0 1 colorpair
124 205 0.0 1 colorpair
125 204 0.0 1 colorpair
130 200 0.0 1 colorpair
131 199 0.0 1 colorpair
133 197 0.0 1 colorpair
134 196 0.0 1 colorpair
135 195 0.0 1 colorpair
136 194 0.0 1 colorpair
137 193 0.0 1 colorpair
139 191 0.0 1 colorpair
140 190 0.0 1 colorpair
143 187 0.0 1 colorpair
145 183 0.0 1 colorpair
146 182 0.0 1 colorpair
147 181 0.0 1 colorpair
148 180 0.0 1 colorpair
149 179 0.0 1 colorpair
150 178 0.0 1 colorpair
151 177 0.0 1 colorpair
154 176 0.0 1 colorpair
155 175 0.0 1 colorpair
156 174 0.0 1 colorpair
157 173 0.0 1 colorpair
158 172 0.0 1 colorpair
159 171 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
