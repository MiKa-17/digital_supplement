%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan 23 20:05:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_U____C_A_GAAAACAU_CA_C_U_UU__AAACCC_C_AA_AAA_A_G_AAAUU_U___________CAAGGUAUAAUGUUUU_CC_AAGAGUUU____UUGCCA______UGUU_UU_UU___UU_U__C______________AUG_GCA____A__GC______UCCUU__U__U___A__U_G_U___A__A_____UU_U____________GC__CCC_AU_A__A___UG_C___________A__A\
__U__U_AU_GG_____G_G________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50308228 92.16699219]
[62.51724625 91.50112152]
[47.54988861 90.50273895]
[32.60838699 89.17231750]
[17.70009995 87.51051331]
[2.83238149 85.51815796]
[-11.98744202 83.19622803]
[-26.75206566 80.54586029]
[-41.45421219 77.56836700]
[-56.08663559 74.26522064]
[-70.64212036 70.63804626]
[-85.11349487 66.68862915]
[-99.49362183 62.41891479]
[-113.77541351 57.83101273]
[-127.95184326 52.92718124]
[-142.01589966 47.70983887]
[-155.96067810 42.18155670]
[-169.77928162 36.34505844]
[-183.46490479 30.20322227]
[-197.01081848 23.75907516]
[-210.41030884 17.01579475]
[-223.65681458 9.97670364]
[-236.74377441 2.64527225]
[-249.66476440 -4.97488642]
[-262.41339111 -12.88001633]
[-274.98336792 -21.06622124]
[-287.36853027 -29.52946472]
[-299.56274414 -38.26557541]
[-311.56002808 -47.27024841]
[-323.35443115 -56.53904343]
[-334.94015503 -66.06739044]
[-346.31149292 -75.85060120]
[-357.46282959 -85.88384247]
[-368.38870239 -96.16217804]
[-379.08367920 -106.68053436]
[-389.54251099 -117.43373108]
[-399.76007080 -128.41645813]
[-409.73126221 -139.62332153]
[-419.45120239 -151.04878235]
[-428.91510010 -162.68721008]
[-438.11831665 -174.53288269]
[-447.05627441 -186.57994080]
[-455.72457886 -198.82244873]
[-464.11892700 -211.25437927]
[-472.23526001 -223.86961365]
[-480.06951904 -236.66191101]
[-487.61785889 -249.62498474]
[-494.87652588 -262.75244141]
[-501.84201050 -276.03778076]
[-508.51080322 -289.47451782]
[-514.87969971 -303.05596924]
[-520.94549561 -316.77548218]
[-526.70520020 -330.62625122]
[-532.15600586 -344.60150146]
[-537.29522705 -358.69430542]
[-542.12030029 -372.89773560]
[-546.62884521 -387.20477295]
[-550.81872559 -401.60836792]
[-554.68774414 -416.10144043]
[-558.23406982 -430.67681885]
[-561.45599365 -445.32736206]
[-564.35180664 -460.04580688]
[-566.92022705 -474.82489014]
[-569.15985107 -489.65737915]
[-571.06964111 -504.53591919]
[-572.64868164 -519.45318604]
[-573.89617920 -534.40185547]
[-574.81146240 -549.37451172]
[-575.39416504 -564.36383057]
[-575.64398193 -579.36236572]
[-575.56066895 -594.36273193]
[-575.14447021 -609.35760498]
[-574.39538574 -624.33947754]
[-573.31396484 -639.30108643]
[-571.90063477 -654.23498535]
[-570.15606689 -669.13378906]
[-568.08123779 -683.99023438]
[-565.67706299 -698.79693604]
[-562.94482422 -713.54663086]
[-559.88574219 -728.23199463]
[-556.50146484 -742.84588623]
[-552.79351807 -757.38098145]
[-548.76385498 -771.83026123]
[-544.41436768 -786.18646240]
[-539.74725342 -800.44256592]
[-534.76483154 -814.59155273]
[-529.46948242 -828.62640381]
[-523.86389160 -842.54028320]
[-517.95080566 -856.32629395]
[-511.73306274 -869.97760010]
[-505.21383667 -883.48754883]
[-498.39627075 -896.84942627]
[-491.28378296 -910.05664062]
[-483.87982178 -923.10272217]
[-476.18804932 -935.98120117]
[-468.21228027 -948.68572998]
[-459.95642090 -961.21008301]
[-451.42456055 -973.54809570]
[-442.62091064 -985.69360352]
[-433.54977417 -997.64074707]
[-424.21566772 -1009.38348389]
[-414.62313843 -1020.91613770]
[-404.77697754 -1032.23303223]
[-394.68197632 -1043.32849121]
[-384.34317017 -1054.19714355]
[-373.76559448 -1064.83361816]
[-362.95452881 -1075.23254395]
[-351.91522217 -1085.38903809]
[-340.65319824 -1095.29785156]
[-329.17398071 -1104.95422363]
[-317.48318481 -1114.35339355]
[-305.58660889 -1123.49072266]
[-293.49014282 -1132.36157227]
[-281.19970703 -1140.96179199]
[-268.72137451 -1149.28710938]
[-256.06127930 -1157.33325195]
[-243.22569275 -1165.09631348]
[-230.22091675 -1172.57263184]
[-217.05337524 -1179.75830078]
[-203.72955322 -1186.64990234]
[-190.25602722 -1193.24401855]
[-176.63941956 -1199.53747559]
[-162.88645935 -1205.52697754]
[-149.00392151 -1211.20971680]
[-134.99864197 -1216.58288574]
[-120.87753296 -1221.64379883]
[-106.64754486 -1226.39001465]
[-92.31570435 -1230.81909180]
[-77.88906097 -1234.92883301]
[-63.37474442 -1238.71740723]
[-48.77989197 -1242.18286133]
[-34.11170578 -1245.32336426]
[-19.37741470 -1248.13745117]
[-4.58427954 -1250.62377930]
[10.26040554 -1252.78100586]
[25.14932442 -1254.60827637]
[40.07513809 -1256.10449219]
[55.03048706 -1257.26892090]
[70.00800323 -1258.10107422]
[85.00030518 -1258.60058594]
[100.00000000 -1258.76708984]
[114.99969482 -1258.60058594]
[129.99198914 -1258.10107422]
[144.96951294 -1257.26892090]
[159.92486572 -1256.10449219]
[174.85067749 -1254.60827637]
[189.73959351 -1252.78100586]
[204.58427429 -1250.62377930]
[219.37741089 -1248.13745117]
[234.11170959 -1245.32336426]
[248.77989197 -1242.18286133]
[263.37475586 -1238.71740723]
[277.88906860 -1234.92883301]
[292.31570435 -1230.81909180]
[306.64755249 -1226.39001465]
[320.87753296 -1221.64379883]
[334.99862671 -1216.58288574]
[349.00390625 -1211.20971680]
[362.88647461 -1205.52697754]
[376.63943481 -1199.53747559]
[390.25601196 -1193.24401855]
[403.72955322 -1186.64990234]
[417.05337524 -1179.75830078]
[430.22091675 -1172.57263184]
[443.22567749 -1165.09631348]
[456.06127930 -1157.33325195]
[468.72137451 -1149.28710938]
[481.19970703 -1140.96179199]
[493.49014282 -1132.36157227]
[505.58660889 -1123.49072266]
[517.48315430 -1114.35339355]
[529.17395020 -1104.95422363]
[540.65319824 -1095.29785156]
[551.91522217 -1085.38903809]
[562.95452881 -1075.23254395]
[573.76562500 -1064.83361816]
[584.34313965 -1054.19714355]
[594.68200684 -1043.32849121]
[604.77697754 -1032.23303223]
[614.62316895 -1020.91613770]
[624.21563721 -1009.38348389]
[633.54980469 -997.64074707]
[642.62091064 -985.69360352]
[651.42456055 -973.54809570]
[659.95642090 -961.21008301]
[668.21228027 -948.68572998]
[676.18804932 -935.98120117]
[683.87982178 -923.10272217]
[691.28375244 -910.05664062]
[698.39630127 -896.84942627]
[705.21386719 -883.48754883]
[711.73309326 -869.97760010]
[717.95080566 -856.32629395]
[723.86389160 -842.54028320]
[729.46948242 -828.62640381]
[734.76483154 -814.59155273]
[739.74725342 -800.44256592]
[744.41436768 -786.18646240]
[748.76385498 -771.83026123]
[752.79351807 -757.38098145]
[756.50146484 -742.84588623]
[759.88574219 -728.23199463]
[762.94482422 -713.54663086]
[765.67706299 -698.79693604]
[768.08123779 -683.99023438]
[770.15606689 -669.13378906]
[771.90063477 -654.23498535]
[773.31396484 -639.30108643]
[774.39538574 -624.33947754]
[775.14447021 -609.35760498]
[775.56066895 -594.36273193]
[775.64398193 -579.36236572]
[775.39416504 -564.36383057]
[774.81146240 -549.37451172]
[773.89617920 -534.40185547]
[772.64868164 -519.45318604]
[771.06964111 -504.53591919]
[769.15985107 -489.65737915]
[766.92022705 -474.82489014]
[764.35180664 -460.04580688]
[761.45599365 -445.32736206]
[758.23406982 -430.67681885]
[754.68774414 -416.10144043]
[750.81872559 -401.60836792]
[746.62884521 -387.20477295]
[742.12030029 -372.89773560]
[737.29522705 -358.69430542]
[732.15600586 -344.60150146]
[726.70520020 -330.62625122]
[720.94549561 -316.77548218]
[714.87969971 -303.05596924]
[708.51080322 -289.47451782]
[701.84197998 -276.03778076]
[694.87652588 -262.75244141]
[687.61785889 -249.62498474]
[680.06951904 -236.66191101]
[672.23522949 -223.86961365]
[664.11895752 -211.25437927]
[655.72454834 -198.82244873]
[647.05627441 -186.57994080]
[638.11828613 -174.53288269]
[628.91510010 -162.68721008]
[619.45123291 -151.04878235]
[609.73126221 -139.62332153]
[599.76007080 -128.41645813]
[589.54254150 -117.43373108]
[579.08367920 -106.68053436]
[568.38867188 -96.16217804]
[557.46282959 -85.88384247]
[546.31146240 -75.85060120]
[534.94012451 -66.06739044]
[523.35443115 -56.53904343]
[511.56002808 -47.27024841]
[499.56274414 -38.26557541]
[487.36853027 -29.52946472]
[474.98336792 -21.06622124]
[462.41339111 -12.88001633]
[449.66476440 -4.97488642]
[436.74377441 2.64527225]
[423.65682983 9.97670364]
[410.41030884 17.01579475]
[397.01080322 23.75907516]
[383.46490479 30.20322227]
[369.77926636 36.34505844]
[355.96066284 42.18155670]
[342.01589966 47.70983887]
[327.95184326 52.92718124]
[313.77542114 57.83101273]
[299.49362183 62.41891479]
[285.11349487 66.68862915]
[270.64212036 70.63804626]
[256.08663940 74.26522064]
[241.45420837 77.56836700]
[226.75205994 80.54586029]
[211.98744202 83.19622803]
[197.16761780 85.51815796]
[182.29989624 87.51051331]
[167.39161682 89.17231750]
[152.45010376 90.50273895]
[137.48275757 91.50112152]
[122.49691772 92.16699219]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
