%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan 23 18:21:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
________________________G_CAUGAAAAGAAAA_AAUGGCAAACGCUCUU_GG_AAAACAUUAUACCUU___________GAAAUUU_CUUU_UUUGGG_GUUUAAAGUGGUCGUUUCUAUGAAACGC______\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.51256561 91.82697296]
[62.57042313 90.48220825]
[47.70365906 88.46842194]
[32.94221115 85.78966522]
[18.31580925 82.45133972]
[3.85390854 78.46016693]
[-10.41436577 73.82417297]
[-24.46027946 68.55271149]
[-38.25554657 62.65638351]
[-51.77238464 56.14707184]
[-64.98357391 49.03788376]
[-77.86250305 41.34313202]
[-90.38324738 33.07831955]
[-102.52057648 24.26008797]
[-114.25006104 14.90619659]
[-125.54807281 5.03548050]
[-136.39186096 -5.33218002]
[-146.75958252 -16.17590714]
[-156.63035583 -27.47385979]
[-165.98431396 -39.20328903]
[-174.80261230 -51.34057236]
[-183.06750488 -63.86126328]
[-190.76232910 -76.74015045]
[-197.87158203 -89.95130157]
[-204.38098145 -103.46810150]
[-210.27738953 -117.26333618]
[-215.54893494 -131.30921936]
[-220.18499756 -145.57746887]
[-224.17625427 -160.03935242]
[-227.51466370 -174.66572571]
[-230.19351196 -189.42715454]
[-232.20738220 -204.29391479]
[-233.55221558 -219.23605347]
[-234.22534180 -234.22348022]
[-234.22537231 -249.22601318]
[-233.55230713 -264.21343994]
[-232.20751953 -279.15557861]
[-230.19371033 -294.02233887]
[-227.51492310 -308.78378296]
[-224.17657471 -323.41018677]
[-220.18536377 -337.87207031]
[-215.54934692 -352.14035034]
[-210.27784729 -366.18624878]
[-204.38150024 -379.98150635]
[-197.87216187 -393.49832153]
[-190.76295471 -406.70950317]
[-183.06817627 -419.58840942]
[-174.80334473 -432.10916138]
[-165.98509216 -444.24645996]
[-156.63116455 -455.97592163]
[-146.76043701 -467.27392578]
[-136.39274597 -478.11767578]
[-125.54900360 -488.48538208]
[-114.25103760 -498.35614014]
[-102.52159119 -507.71008301]
[-90.38428497 -516.52838135]
[-77.86357880 -524.79321289]
[-64.98468018 -532.48803711]
[-51.77351379 -539.59722900]
[-38.25670242 -546.10662842]
[-24.46145630 -552.00299072]
[-10.41556263 -557.27453613]
[3.85269427 -561.91058350]
[18.31457901 -565.90179443]
[32.94096756 -569.24017334]
[47.70240784 -571.91900635]
[62.56916428 -573.93280029]
[77.51130676 -575.27764893]
[92.49873352 -575.95074463]
[107.50126648 -575.95074463]
[122.48869324 -575.27764893]
[137.43083191 -573.93280029]
[152.29759216 -571.91900635]
[167.05903625 -569.24017334]
[181.68542480 -565.90179443]
[196.14730835 -561.91058350]
[210.41555786 -557.27453613]
[224.46145630 -552.00299072]
[238.25669861 -546.10662842]
[251.77351379 -539.59722900]
[264.98468018 -532.48803711]
[277.86358643 -524.79321289]
[290.38427734 -516.52838135]
[302.52157593 -507.71008301]
[314.25103760 -498.35614014]
[325.54901123 -488.48538208]
[336.39276123 -478.11767578]
[346.76043701 -467.27392578]
[356.63116455 -455.97592163]
[365.98507690 -444.24645996]
[374.80334473 -432.10916138]
[383.06817627 -419.58840942]
[390.76293945 -406.70950317]
[397.87216187 -393.49832153]
[404.38150024 -379.98150635]
[410.27786255 -366.18624878]
[415.54934692 -352.14035034]
[420.18536377 -337.87207031]
[424.17657471 -323.41018677]
[427.51492310 -308.78378296]
[430.19369507 -294.02233887]
[432.20751953 -279.15557861]
[433.55230713 -264.21343994]
[434.22537231 -249.22601318]
[434.22534180 -234.22348022]
[433.55221558 -219.23605347]
[432.20736694 -204.29391479]
[430.19351196 -189.42715454]
[427.51467896 -174.66572571]
[424.17626953 -160.03935242]
[420.18499756 -145.57746887]
[415.54891968 -131.30921936]
[410.27737427 -117.26333618]
[404.38098145 -103.46810150]
[397.87158203 -89.95130157]
[390.76232910 -76.74015045]
[383.06750488 -63.86126328]
[374.80261230 -51.34057236]
[365.98431396 -39.20328903]
[356.63037109 -27.47385979]
[346.75958252 -16.17590714]
[336.39184570 -5.33218002]
[325.54806519 5.03548050]
[314.25006104 14.90619659]
[302.52056885 24.26008797]
[290.38323975 33.07831955]
[277.86251831 41.34313202]
[264.98358154 49.03788376]
[251.77238464 56.14707184]
[238.25555420 62.65638351]
[224.46028137 68.55271149]
[210.41436768 73.82417297]
[196.14608765 78.46016693]
[181.68418884 82.45133972]
[167.05778503 85.78966522]
[152.29634094 88.46842194]
[137.42958069 90.48220825]
[122.48743439 91.82697296]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
