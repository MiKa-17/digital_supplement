%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Dec 16 23:59:52 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__________________________________________________________________ACUUU_________U_GAAAAAC__A_AAAGCUAUCGUU__U_UAAAAAAACUUUGUAGUUAAAAAUU_____UUCAAUA_AAACAA_CAACUUUACACC_CC_AAAAA_A_GAAAUUUCAAGGUAUAAUGUUUUCGCAG_AGUUU___UU_CC__AUUUUA_GUUUU__CCAUGGCAAACUCCU__UU\
UUAGAAUUUAUCCCCAUAA_UCGC_ACUUAUGGGGGU_\
) } def
/len { sequence length } bind def

/coor [
[231.68220520 735.86004639]
[216.96005249 738.73199463]
[202.17549133 741.26312256]
[187.33641052 743.45208740]
[172.45071411 745.29772949]
[157.52636719 746.79901123]
[142.57133484 747.95520020]
[127.59357452 748.76562500]
[112.60109711 749.22991943]
[97.60189819 749.34771729]
[82.60397339 749.11907959]
[67.61533356 748.54412842]
[52.64397430 747.62304688]
[37.69787979 746.35644531]
[22.78503227 744.74499512]
[7.91338396 742.78948975]
[-6.90912819 740.49096680]
[-21.67459488 737.85070801]
[-36.37513733 734.87011719]
[-51.00291443 731.55078125]
[-65.55011749 727.89440918]
[-80.00898743 723.90301514]
[-94.37180328 719.57873535]
[-108.63091278 714.92388916]
[-122.77869415 709.94091797]
[-136.80760193 704.63244629]
[-150.71015930 699.00140381]
[-164.47894287 693.05072021]
[-178.10659790 686.78356934]
[-191.58586121 680.20336914]
[-204.90954590 673.31353760]
[-218.07052612 666.11779785]
[-231.06179810 658.61999512]
[-243.87641907 650.82415771]
[-256.50753784 642.73437500]
[-268.94845581 634.35498047]
[-281.19250488 625.69049072]
[-293.23315430 616.74554443]
[-305.06396484 607.52478027]
[-316.67864990 598.03326416]
[-328.07098389 588.27600098]
[-339.23492432 578.25817871]
[-350.16452026 567.98522949]
[-360.85388184 557.46252441]
[-371.29733276 546.69567871]
[-381.48931885 535.69055176]
[-391.42440796 524.45294189]
[-401.09725952 512.98883057]
[-410.50274658 501.30435181]
[-419.63583374 489.40576172]
[-428.49163818 477.29937744]
[-437.06546021 464.99166870]
[-445.35272217 452.48919678]
[-453.34899902 439.79867554]
[-461.04998779 426.92681885]
[-468.45162964 413.88052368]
[-475.54995728 400.66674805]
[-482.34115601 387.29254150]
[-488.82165527 373.76504517]
[-494.98794556 360.09149170]
[-500.83676147 346.27911377]
[-506.36502075 332.33535767]
[-511.56970215 318.26760864]
[-516.44805908 304.08340454]
[-520.99749756 289.79031372]
[-525.21557617 275.39596558]
[-529.10003662 260.90798950]
[-532.64880371 246.33418274]
[-535.86004639 231.68229675]
[-538.73199463 216.96012878]
[-541.26312256 202.17556763]
[-543.45208740 187.33648682]
[-545.29766846 172.45080566]
[-546.79901123 157.52645874]
[-547.95520020 142.57141113]
[-548.76562500 127.59365845]
[-549.22985840 112.60118103]
[-549.34771729 97.60198212]
[-549.11907959 82.60405731]
[-548.54412842 67.61541748]
[-547.62310791 52.64405823]
[-546.35650635 37.69796371]
[-544.74499512 22.78511429]
[-542.78948975 7.91346693]
[-540.49096680 -6.90904570]
[-537.85070801 -21.67451286]
[-534.87011719 -36.37505722]
[-531.55078125 -51.00283432]
[-527.89440918 -65.55004120]
[-523.90307617 -80.00890350]
[-519.57879639 -94.37172699]
[-514.92388916 -108.63082886]
[-509.94091797 -122.77861786]
[-504.63247681 -136.80752563]
[-499.00140381 -150.71008301]
[-493.05072021 -164.47886658]
[-486.78359985 -178.10652161]
[-480.20336914 -191.58578491]
[-473.31356812 -204.90946960]
[-466.11785889 -218.07046509]
[-458.62005615 -231.06172180]
[-450.82418823 -243.87634277]
[-442.73443604 -256.50747681]
[-434.35504150 -268.94839478]
[-425.69055176 -281.19244385]
[-416.74557495 -293.23306274]
[-407.52484131 -305.06390381]
[-398.03332520 -316.67858887]
[-388.27606201 -328.07092285]
[-378.25827026 -339.23486328]
[-367.98526001 -350.16445923]
[-357.46255493 -360.85382080]
[-346.69577026 -371.29727173]
[-335.69061279 -381.48928833]
[-324.45300293 -391.42434692]
[-312.98889160 -401.09719849]
[-301.30441284 -410.50268555]
[-289.40582275 -419.63577271]
[-277.29943848 -428.49160767]
[-264.99172974 -437.06542969]
[-252.48928833 -445.35269165]
[-239.79873657 -453.34893799]
[-226.92689514 -461.04995728]
[-213.88059998 -468.45159912]
[-200.66682434 -475.54989624]
[-187.29263306 -482.34112549]
[-173.76513672 -488.82162476]
[-160.09155273 -494.98791504]
[-146.27920532 -500.83673096]
[-132.33543396 -506.36499023]
[-118.26769257 -511.56967163]
[-104.08349609 -516.44799805]
[-89.79039764 -520.99743652]
[-75.39603424 -525.21551514]
[-60.90808105 -529.10003662]
[-46.33426666 -532.64880371]
[-31.68237495 -535.86004639]
[-16.96021843 -538.73199463]
[-2.17565298 -541.26312256]
[12.66343117 -543.45208740]
[27.54911613 -545.29766846]
[42.47346115 -546.79901123]
[57.42850113 -547.95520020]
[72.40625763 -548.76562500]
[87.39873505 -549.22985840]
[102.39793396 -549.34771729]
[117.39585876 -549.11914062]
[132.38450623 -548.54412842]
[147.35586548 -547.62310791]
[162.30195618 -546.35650635]
[177.21479797 -544.74499512]
[192.08645630 -542.78948975]
[206.90896606 -540.49096680]
[221.67443848 -537.85076904]
[236.37496948 -534.87011719]
[251.00274658 -531.55078125]
[265.54995728 -527.89447021]
[280.00881958 -523.90307617]
[294.37164307 -519.57879639]
[308.63073730 -514.92395020]
[322.77853394 -509.94094849]
[336.80746460 -504.63250732]
[350.70999146 -499.00143433]
[364.47879028 -493.05075073]
[378.10644531 -486.78363037]
[391.58572388 -480.20343018]
[404.90939331 -473.31359863]
[418.07037354 -466.11788940]
[431.06164551 -458.62008667]
[443.87628174 -450.82424927]
[456.50741577 -442.73446655]
[468.94830322 -434.35510254]
[481.19235229 -425.69061279]
[493.23300171 -416.74563599]
[505.06384277 -407.52490234]
[516.67852783 -398.03338623]
[528.07086182 -388.27612305]
[539.23480225 -378.25833130]
[550.16436768 -367.98532104]
[560.85375977 -357.46261597]
[571.29724121 -346.69583130]
[581.48919678 -335.69067383]
[591.42431641 -324.45306396]
[601.09716797 -312.98895264]
[610.50262451 -301.30447388]
[619.63574219 -289.40588379]
[628.49157715 -277.29949951]
[637.06536865 -264.99179077]
[645.35266113 -252.48934937]
[653.34887695 -239.79881287]
[661.04992676 -226.92697144]
[668.45153809 -213.88067627]
[675.54986572 -200.66690063]
[682.34106445 -187.29270935]
[688.82159424 -173.76519775]
[694.98785400 -160.09162903]
[700.83673096 -146.27928162]
[706.36492920 -132.33551025]
[711.56964111 -118.26777649]
[716.44799805 -104.08357239]
[720.99743652 -89.79048157]
[725.21551514 -75.39611053]
[729.09997559 -60.90816116]
[732.64880371 -46.33435059]
[735.86004639 -31.68245697]
[738.73199463 -16.96030045]
[741.26312256 -2.17573571]
[743.45202637 12.66334820]
[745.29766846 27.54903412]
[746.79901123 42.47337723]
[747.95513916 57.42841721]
[748.76562500 72.40617371]
[749.22985840 87.39865112]
[749.34771729 102.39785004]
[749.11914062 117.39577484]
[748.54412842 132.38441467]
[747.62310791 147.35577393]
[746.35650635 162.30186462]
[744.74499512 177.21472168]
[742.78948975 192.08636475]
[740.49102783 206.90887451]
[737.85076904 221.67434692]
[734.87017822 236.37489319]
[731.55084229 251.00267029]
[727.89447021 265.54986572]
[723.90313721 280.00875854]
[719.57885742 294.37155151]
[714.92395020 308.63067627]
[709.94097900 322.77847290]
[704.63256836 336.80737305]
[699.00146484 350.70993042]
[693.05078125 364.47869873]
[686.78369141 378.10638428]
[680.20343018 391.58563232]
[673.31365967 404.90933228]
[666.11791992 418.07031250]
[658.62011719 431.06158447]
[650.82427979 443.87622070]
[642.73449707 456.50735474]
[634.35516357 468.94824219]
[625.69067383 481.19229126]
[616.74566650 493.23294067]
[607.52496338 505.06375122]
[598.03344727 516.67846680]
[588.27618408 528.07080078]
[578.25836182 539.23474121]
[567.98541260 550.16430664]
[557.46270752 560.85369873]
[546.69586182 571.29718018]
[535.69073486 581.48913574]
[524.45312500 591.42425537]
[512.98901367 601.09710693]
[501.30453491 610.50256348]
[489.40594482 619.63568115]
[477.29956055 628.49151611]
[464.99188232 637.06530762]
[452.48941040 645.35260010]
[439.79888916 653.34887695]
[426.92703247 661.04986572]
[413.88073730 668.45147705]
[400.66699219 675.54980469]
[387.29278564 682.34106445]
[373.76528931 688.82153320]
[360.09170532 694.98785400]
[346.27935791 700.83666992]
[332.33560181 706.36492920]
[318.26785278 711.56958008]
[323.14633179 725.75415039]
[328.02478027 739.93865967]
[332.90325928 754.12316895]
[337.78173828 768.30767822]
[342.66021729 782.49218750]
[347.53866577 796.67669678]
[352.41714478 810.86120605]
[367.29342651 815.27435303]
[376.70791626 827.60913086]
[377.04052734 843.12261963]
[368.16336060 855.84960938]
[353.48986816 860.89624023]
[338.66232300 856.32202148]
[329.38223267 843.88580322]
[329.21792603 828.36962891]
[338.23263550 815.73968506]
[333.35415649 801.55517578]
[328.47567749 787.37066650]
[323.59722900 773.18615723]
[318.71875000 759.00164795]
[313.84027100 744.81713867]
[308.96179199 730.63256836]
[304.08334351 716.44805908]
[289.79025269 720.99749756]
[275.39587402 725.21557617]
[260.90792847 729.10003662]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[267 290]
[268 289]
[269 288]
[270 287]
[271 286]
[272 285]
[273 284]
[274 283]
] def

init

% Start Annotations
267 290 0.16 1 colorpair
268 289 0.0 1 colorpair
269 288 0.16 1 colorpair
270 287 0.16 1 colorpair
271 286 0.0 1 colorpair
272 285 0.0 1 colorpair
273 284 0.0 1 colorpair
274 283 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
267 cmark
269 cmark
270 cmark
274 283 1 gmark

% End Annotations
showpage
end
%%EOF
