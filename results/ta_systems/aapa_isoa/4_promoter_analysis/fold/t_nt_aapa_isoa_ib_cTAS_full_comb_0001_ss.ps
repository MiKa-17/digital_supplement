%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Dec 16 23:59:53 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_________________________________________________________________GAACU__________UUUGAAAA__A________AAA_GCUAUCGUUU_UACAGAAACUUCGUUUUACAAAA_CU_____UUCAA_A_A_AAACAACAACUUUACACCC_C_AAAAAA_GAAAUUUCAAGGUAUAAUGUUUUCGCAG_AGUUU_U____U_CCA_UU_UUUAGUUUU_____CAUGGCAA\
ACUCCU__UUUUAGAA_UUUAUCCCCAUAA_UC_G__CA_CUUAUGGGGGU_\
) } def
/len { sequence length } bind def

/coor [
[250.52774048 758.63037109]
[235.86889648 761.80981445]
[221.14306641 764.66302490]
[206.35752869 767.18859863]
[191.51957703 769.38531494]
[176.63650513 771.25213623]
[161.71565247 772.78802490]
[146.76438904 773.99230957]
[131.79006958 774.86437988]
[116.80007935 775.40380859]
[101.80181122 775.61035156]
[86.80265045 775.48382568]
[71.80999756 775.02435303]
[56.83124161 774.23217773]
[41.87376404 773.10766602]
[26.94493484 771.65136719]
[12.05211735 769.86395264]
[-2.79734969 767.74639893]
[-17.59614754 765.29974365]
[-32.33697891 762.52508545]
[-47.01258087 759.42388916]
[-61.61571884 755.99768066]
[-76.13919830 752.24804688]
[-90.57585144 748.17700195]
[-104.91857147 743.78643799]
[-119.16027832 739.07849121]
[-133.29396057 734.05560303]
[-147.31265259 728.72015381]
[-161.20944214 723.07476807]
[-174.97747803 717.12231445]
[-188.60997009 710.86566162]
[-202.10020447 704.30786133]
[-215.44154358 697.45227051]
[-228.62738037 690.30212402]
[-241.65124512 682.86102295]
[-254.50669861 675.13262939]
[-267.18740845 667.12078857]
[-279.68713379 658.82934570]
[-291.99969482 650.26245117]
[-304.11904907 641.42437744]
[-316.03921509 632.31939697]
[-327.75430298 622.95202637]
[-339.25854492 613.32690430]
[-350.54626465 603.44873047]
[-361.61190796 593.32244873]
[-372.45001221 582.95294189]
[-383.05523682 572.34539795]
[-393.42236328 561.50506592]
[-403.54629517 550.43725586]
[-413.42199707 539.14733887]
[-423.04464722 527.64105225]
[-432.40948486 515.92395020]
[-441.51187134 504.00180054]
[-450.34735107 491.88052368]
[-458.91156006 479.56610107]
[-467.20028687 467.06460571]
[-475.20941162 454.38214111]
[-482.93502808 441.52502441]
[-490.37329102 428.49954224]
[-497.52053833 415.31216431]
[-504.37329102 401.96932983]
[-510.92813110 388.47769165]
[-517.18182373 374.84384155]
[-523.13134766 361.07452393]
[-528.77368164 347.17651367]
[-534.10607910 333.15664673]
[-539.12597656 319.02188110]
[-543.83074951 304.77914429]
[-548.21826172 290.43548584]
[-552.28619385 275.99795532]
[-556.03265381 261.47366333]
[-559.45568848 246.86978149]
[-562.55371094 232.19351196]
[-565.32519531 217.45207214]
[-567.76867676 202.65275574]
[-569.88299561 187.80282593]
[-571.66711426 172.90962219]
[-573.12023926 157.98048401]
[-574.24151611 143.02275085]
[-575.03045654 128.04382324]
[-575.48669434 113.05107880]
[-575.60992432 98.05188751]
[-575.40014648 83.05366516]
[-574.85748291 68.06379700]
[-573.98217773 53.08966446]
[-572.77465820 38.13866043]
[-571.23553467 23.21814537]
[-569.36547852 8.33547688]
[-567.16558838 -6.50200844]
[-564.63677979 -21.28699875]
[-561.78033447 -36.01220322]
[-558.59777832 -50.67036819]
[-555.09051514 -65.25426483]
[-551.26037598 -79.75670624]
[-547.10925293 -94.17053986]
[-542.63909912 -108.48867035]
[-537.85223389 -122.70403290]
[-532.75097656 -136.80961609]
[-527.33776855 -150.79847717]
[-521.61535645 -164.66371155]
[-515.58660889 -178.39849854]
[-509.25436401 -191.99606323]
[-502.62182617 -205.44969177]
[-495.69223022 -218.75276184]
[-488.46902466 -231.89871216]
[-480.95578003 -244.88107300]
[-473.15615845 -257.69342041]
[-465.07400513 -270.32949829]
[-456.71334839 -282.78298950]
[-448.07824707 -295.04782104]
[-439.17303467 -307.11795044]
[-430.00201416 -318.98736572]
[-420.56979370 -330.65026855]
[-410.88095093 -342.10092163]
[-400.94027710 -353.33364868]
[-390.75271606 -364.34292603]
[-380.32324219 -375.12329102]
[-369.65701294 -385.66949463]
[-358.75927734 -395.97628784]
[-347.63540649 -406.03863525]
[-336.29092407 -415.85153198]
[-324.73135376 -425.41015625]
[-312.96246338 -434.70980835]
[-300.98999023 -443.74588013]
[-288.81985474 -452.51394653]
[-276.45809937 -461.00967407]
[-263.91076660 -469.22888184]
[-251.18405151 -477.16751099]
[-238.28424072 -484.82162476]
[-225.21769714 -492.18750000]
[-211.99082947 -499.26144409]
[-198.61019897 -506.04003906]
[-185.08236694 -512.51989746]
[-171.41401672 -518.69781494]
[-157.61187744 -524.57080078]
[-143.68276978 -530.13592529]
[-129.63354492 -535.39044189]
[-115.47112274 -540.33178711]
[-101.20249939 -544.95745850]
[-86.83470154 -549.26525879]
[-72.37480927 -553.25299072]
[-57.82994843 -556.91876221]
[-43.20729446 -560.26074219]
[-28.51405144 -563.27722168]
[-13.75746346 -565.96679688]
[1.05519772 -568.32812500]
[15.91662979 -570.36004639]
[30.81950760 -572.06146240]
[45.75648499 -573.43164062]
[60.72019958 -574.46990967]
[75.70327759 -575.17572021]
[90.69832611 -575.54870605]
[105.69796753 -575.58868408]
[120.69479370 -575.29571533]
[135.68142700 -574.66986084]
[150.65046692 -573.71142578]
[165.59454346 -572.42095947]
[180.50628662 -570.79901123]
[195.37834167 -568.84643555]
[210.20338440 -566.56414795]
[224.97410583 -563.95336914]
[239.68324280 -561.01525879]
[254.32351685 -557.75134277]
[268.88772583 -554.16320801]
[283.36868286 -550.25262451]
[297.75924683 -546.02154541]
[312.05233765 -541.47204590]
[326.24090576 -536.60632324]
[340.31796265 -531.42681885]
[354.27658081 -525.93609619]
[368.10983276 -520.13684082]
[381.81094360 -514.03186035]
[395.37316895 -507.62426758]
[408.78976440 -500.91717529]
[422.05416870 -493.91387939]
[435.15982056 -486.61779785]
[448.10028076 -479.03259277]
[460.86917114 -471.16198730]
[473.46014404 -463.00982666]
[485.86706543 -454.58016968]
[498.08377075 -445.87716675]
[510.10427856 -436.90505981]
[521.92260742 -427.66833496]
[533.53302002 -418.17150879]
[544.92968750 -408.41925049]
[556.10705566 -398.41641235]
[567.05963135 -388.16787720]
[577.78198242 -377.67874146]
[588.26879883 -366.95413208]
[598.51495361 -355.99935913]
[608.51538086 -344.81982422]
[618.26513672 -333.42102051]
[627.75946045 -321.80859375]
[636.99365234 -309.98825073]
[645.96313477 -297.96582031]
[654.66357422 -285.74722290]
[663.09051514 -273.33847046]
[671.23992920 -260.74572754]
[679.10778809 -247.97515869]
[686.69024658 -235.03305054]
[693.98345947 -221.92582703]
[700.98388672 -208.65991211]
[707.68811035 -195.24185181]
[714.09277344 -181.67825317]
[720.19476318 -167.97583008]
[725.99102783 -154.14131165]
[731.47875977 -140.18151855]
[736.65521240 -126.10334778]
[741.51782227 -111.91372681]
[746.06427002 -97.61964417]
[750.29223633 -83.22815704]
[754.19970703 -68.74635315]
[757.78466797 -54.18137360]
[761.04541016 -39.54039383]
[763.98034668 -24.83063698]
[766.58795166 -10.05934620]
[768.86700439 4.76619244]
[770.81640625 19.63867378]
[772.43511963 34.55076599]
[773.72235107 49.49511719]
[774.67755127 64.46436310]
[775.30017090 79.45112610]
[775.58990479 94.44802094]
[775.54669189 109.44764709]
[775.17041016 124.44261932]
[774.46142578 139.42553711]
[773.41992188 154.38903809]
[772.04650879 169.32571411]
[770.34185791 184.22822571]
[768.30676270 199.08921814]
[765.94219971 213.90136719]
[763.24945068 228.65737915]
[760.22979736 243.34996033]
[756.88464355 257.97189331]
[753.21575928 272.51596069]
[749.22485352 286.97500610]
[744.91394043 301.34185791]
[740.28515625 315.60949707]
[735.34082031 329.77084351]
[730.08325195 343.81893921]
[724.51513672 357.74682617]
[718.63916016 371.54769897]
[712.45825195 385.21472168]
[705.97546387 398.74114990]
[699.19403076 412.12033081]
[692.11718750 425.34564209]
[684.74853516 438.41061401]
[677.09161377 451.30877686]
[669.15020752 464.03375244]
[660.92834473 476.57931519]
[652.42993164 488.93923950]
[643.65924072 501.10748291]
[634.62054443 513.07800293]
[625.31835938 524.84490967]
[615.75726318 536.40234375]
[605.94189453 547.74475098]
[595.87713623 558.86645508]
[585.56799316 569.76196289]
[575.01947021 580.42590332]
[564.23687744 590.85302734]
[553.22540283 601.03820801]
[541.99053955 610.97644043]
[530.53778076 620.66284180]
[518.87286377 630.09252930]
[507.00140381 639.26098633]
[494.92938232 648.16363525]
[482.66268921 656.79602051]
[470.20736694 665.15399170]
[457.56958008 673.23345947]
[444.75552368 681.03027344]
[431.77154541 688.54077148]
[418.62402344 695.76110840]
[405.31945801 702.68780518]
[391.86441040 709.31744385]
[378.26547241 715.64672852]
[364.52938843 721.67254639]
[350.66290283 727.39196777]
[336.67288208 732.80212402]
[341.77120972 746.90911865]
[346.86956787 761.01605225]
[351.96789551 775.12304688]
[357.06625366 789.23004150]
[362.16458130 803.33703613]
[367.26290894 817.44403076]
[372.36126709 831.55096436]
[387.53289795 833.57086182]
[400.02136230 842.41943359]
[406.95684814 856.06335449]
[406.74566650 871.36743164]
[399.43634033 884.81481934]
[386.70849609 893.31542969]
[371.48687744 894.91589355]
[357.26934814 889.24841309]
[347.32296753 877.61535645]
[343.93331909 862.68994141]
[347.87933350 847.90185547]
[358.25427246 836.64935303]
[353.15594482 822.54235840]
[348.05758667 808.43536377]
[342.95925903 794.32836914]
[337.86093140 780.22137451]
[332.76257324 766.11444092]
[327.66424561 752.00744629]
[322.56588745 737.90045166]
[308.34948730 742.68426514]
[294.03039551 747.15124512]
[279.61566162 751.29931641]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[278 304]
[279 303]
[280 302]
[281 301]
[282 300]
[283 299]
[284 298]
[285 297]
] def

init

% Start Annotations
278 304 0.16 1 colorpair
279 303 0.0 1 colorpair
280 302 0.16 1 colorpair
281 301 0.16 1 colorpair
282 300 0.0 1 colorpair
283 299 0.0 1 colorpair
284 298 0.0 1 colorpair
285 297 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
278 cmark
280 cmark
281 cmark
285 297 1 gmark

% End Annotations
showpage
end
%%EOF
