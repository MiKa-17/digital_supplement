%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Dec 17 00:00:35 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
____________________________________________________________________________________________UUUCUAAAGAAACAAUAACUUUAAACCCCAAAAAAGAAAUUUCAAGGUAUAAUGCUUUCCAAGAGUUUUUGCCAUGUUUUGUCGCCAUGACAAACUCCUUUUGAAAAAUUUAUCCCCAUAAUUACGACUUAUGGGGGU\
) } def
/len { sequence length } bind def

/coor [
[-14.20441532 246.19590759]
[-20.93937683 259.59890747]
[-28.53099823 272.53594971]
[-36.94719315 284.95239258]
[-46.15238953 296.79571533]
[-56.10768127 308.01586914]
[-66.77099609 318.56546021]
[-78.09725952 328.39987183]
[-90.03860474 337.47756958]
[-102.54455566 345.76013184]
[-115.56225586 353.21261597]
[-129.03669739 359.80346680]
[-142.91091919 365.50488281]
[-157.12628174 370.29272461]
[-171.62271118 374.14678955]
[-186.33891296 377.05075073]
[-201.21272278 378.99234009]
[-216.18125916 379.96337891]
[-231.18125916 379.95974731]
[-246.14932251 378.98147583]
[-261.02218628 377.03265381]
[-275.73699951 374.12158203]
[-290.23156738 370.26049805]
[-304.44461060 365.46578979]
[-318.31607056 359.75765991]
[-331.78732300 353.16027832]
[-344.80139160 345.70150757]
[-357.30334473 337.41287231]
[-369.24029541 328.32940674]
[-380.56179810 318.48950195]
[-391.22000122 307.93475342]
[-401.16986084 296.70977783]
[-410.36932373 284.86199951]
[-418.77951050 272.44149780]
[-426.36486816 259.50076294]
[-433.09332275 246.09451294]
[-438.93649292 232.27938843]
[-443.86959839 218.11378479]
[-447.87188721 203.65757751]
[-450.92636108 188.97187805]
[-453.02014160 174.11871338]
[-454.14434814 159.16090393]
[-454.29431152 144.16165161]
[-453.46929932 129.18435669]
[-451.67288208 114.29232788]
[-448.91259766 99.54848480]
[-445.20013428 85.01515961]
[-440.55117798 70.75376892]
[-434.98535156 56.82460022]
[-428.52624512 43.28651428]
[-421.20108032 30.19673920]
[-413.04089355 17.61059380]
[-404.08010864 5.58127546]
[-394.35662842 -5.84037256]
[-383.91156006 -16.60607719]
[-372.78903198 -26.67033768]
[-361.03604126 -35.99061584]
[-348.70230103 -44.52751923]
[-335.83990479 -52.24496460]
[-322.50326538 -59.11033630]
[-308.74868774 -65.09461975]
[-294.63433838 -70.17251587]
[-280.21984863 -74.32257080]
[-265.56619263 -77.52723694]
[-250.73524475 -79.77297211]
[-235.78973389 -81.05028534]
[-220.79280090 -81.35378265]
[-205.80784607 -80.68217468]
[-190.89819336 -79.03829956]
[-176.12686157 -76.42910767]
[-161.55628967 -72.86562347]
[-147.24804688 -68.36291504]
[-133.26263428 -62.94000626]
[-119.65912628 -56.61982346]
[-106.49504089 -49.42907715]
[-93.82601166 -41.39815521]
[-81.70558167 -32.56100464]
[-70.18498230 -22.95497513]
[-59.31290817 -12.62066555]
[-49.13530350 -1.60175645]
[-39.69518661 10.05518150]
[-31.03245926 22.30088043]
[-23.18373299 35.08358383]
[-16.18217850 48.34926224]
[-10.05739117 62.04185104]
[-4.83525610 76.10347748]
[-0.53784537 90.47470856]
[2.81667781 105.09480286]
[5.21413565 119.90196991]
[6.64439487 134.83361816]
[7.10141087 149.82666016]
[6.58325148 164.81770325]
[5.09124422 179.74990845]
[16.01739120 169.47277832]
[26.94353867 159.19564819]
[37.86968613 148.91853333]
[41.83920670 134.56262207]
[57.19253540 130.74346924]
[68.11868286 120.46634674]
[79.04483032 110.18921661]
[89.97097778 99.91209412]
[76.47576904 106.46033478]
[62.03850937 110.53040314]
[47.11019897 111.99516296]
[32.15718460 110.80885315]
[17.64658165 107.00852966]
[4.03169060 100.71291351]
[-8.26217365 92.11868286]
[-18.85096169 81.49429321]
[-27.40389252 69.17166138]
[-33.65377808 55.53571701]
[-37.40538025 41.01243973]
[-38.54150009 26.05552864]
[-37.02664948 11.13221741]
[-32.90814590 -3.29130340]
[-26.31465340 -16.76445580]
[-17.45214272 -28.86635399]
[-6.59747219 -39.21894455]
[5.91027069 -47.49882126]
[19.68035507 -53.44733047]
[34.28261948 -56.87864685]
[49.26089859 -57.68557739]
[64.14728546 -55.84291840]
[78.47675323 -51.40822983]
[91.80165100 -44.52004623]
[103.70572662 -35.39354706]
[113.81710815 -24.31384087]
[121.81993103 -11.62704182]
[127.46418762 2.27052498]
[130.57356262 16.94471359]
[131.05091858 31.93711662]
[128.88133240 46.77938461]
[124.13259888 61.00786209]
[116.95305634 74.17806244]
[107.56218719 85.88356781]
[120.01293945 77.51824188]
[127.15277100 63.39969254]
[142.03204346 62.72418594]
[154.48280334 54.35885620]
[166.93354797 45.99352646]
[179.38430786 37.62819672]
[178.86293030 23.86232185]
[185.15835571 11.73098564]
[196.53306580 4.35047150]
[209.96078491 3.55699778]
[221.93139648 9.45094872]
[234.49476624 1.25571704]
[247.05813599 -6.93951464]
[259.62149048 -15.13474655]
[272.18487549 -23.32997894]
[282.14764404 -37.04782867]
[298.08737183 -31.27187729]
[296.94970703 -14.35614395]
[280.38009644 -10.76661205]
[267.81674194 -2.57138014]
[255.25335693 5.62385178]
[242.69000244 13.81908321]
[230.12663269 22.01431465]
[229.82333374 38.43371964]
[219.68737793 51.56538391]
[203.56016541 56.10806274]
[187.74963379 50.07894897]
[175.29888916 58.44427872]
[162.84812927 66.80960846]
[150.39738464 75.17494202]
[144.14810181 88.69514465]
[128.37826538 89.96899414]
[115.92751312 98.33432770]
[117.64610291 105.63476562]
[122.80187225 127.53609467]
[137.67684937 129.46870422]
[152.55183411 131.40130615]
[167.42680359 133.33392334]
[182.30178833 135.26652527]
[197.17677307 137.19912720]
[210.71406555 128.58976746]
[225.83804321 133.94183350]
[230.94689941 149.14970398]
[222.12153625 162.54718018]
[206.13203430 163.85688782]
[195.24415588 152.07411194]
[180.36918640 150.14151001]
[165.49420166 148.20889282]
[150.61921692 146.27629089]
[135.74424744 144.34367371]
[120.86926270 142.41107178]
[113.03816223 135.86454773]
[106.90871429 128.22097778]
[102.61530304 119.77552032]
[100.24810028 110.83824158]
[89.32195282 121.11536407]
[78.39580536 131.39248657]
[67.46965790 141.66961670]
[62.71862793 156.76062012]
[48.14681244 159.84468079]
[37.22066498 170.12179565]
[26.29451752 180.39892578]
[15.36837006 190.67605591]
[29.75075912 186.41613770]
[42.59638214 194.16145325]
[45.54203796 208.86938477]
[36.66994095 220.96424866]
[21.75631332 222.57165527]
[10.51092720 212.64546204]
[16.08586311 226.57098389]
[21.66080093 240.49650574]
[27.23573685 254.42202759]
[32.81067276 268.34753418]
[38.38561249 282.27307129]
[43.96054840 296.19857788]
[49.53548431 310.12411499]
[55.11042023 324.04962158]
[60.68535995 337.97512817]
[75.59763336 342.68237305]
[83.95170593 355.90142822]
[81.80302429 371.39068604]
[70.16613770 381.83657837]
[54.53563309 382.30691528]
[42.29174805 372.57955933]
[39.21567154 357.24749756]
[46.75983810 343.55007935]
[41.18490219 329.62454224]
[35.60996628 315.69903564]
[30.03502846 301.77352905]
[24.46009254 287.84799194]
[18.88515472 273.92248535]
[13.31021881 259.99694824]
[7.73528194 246.07144165]
[2.16034484 232.14591980]
[-3.41459179 218.22039795]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[93 198]
[94 197]
[95 196]
[96 195]
[98 193]
[99 192]
[100 191]
[101 190]
[135 168]
[136 167]
[138 165]
[139 164]
[140 163]
[141 162]
[146 158]
[147 157]
[148 156]
[149 155]
[150 154]
[170 186]
[171 185]
[172 184]
[173 183]
[174 182]
[175 181]
[204 230]
[205 229]
[206 228]
[207 227]
[208 226]
[209 225]
[210 224]
[211 223]
[212 222]
[213 221]
] def

init

% Start Annotations
93 198 0.0 1 colorpair
94 197 0.0 1 colorpair
95 196 0.0 1 colorpair
96 195 0.0 1 colorpair
98 193 0.0 1 colorpair
99 192 0.0 1 colorpair
100 191 0.0 1 colorpair
101 190 0.0 1 colorpair
135 168 0.0 1 colorpair
136 167 0.0 1 colorpair
138 165 0.0 1 colorpair
139 164 0.0 1 colorpair
140 163 0.0 1 colorpair
141 162 0.0 1 colorpair
146 158 0.0 1 colorpair
147 157 0.0 1 colorpair
148 156 0.0 1 colorpair
149 155 0.0 1 colorpair
150 154 0.0 1 colorpair
170 186 0.0 1 colorpair
171 185 0.0 1 colorpair
172 184 0.0 1 colorpair
173 183 0.0 1 colorpair
174 182 0.0 1 colorpair
175 181 0.0 1 colorpair
204 230 0.0 1 colorpair
205 229 0.0 1 colorpair
206 228 0.0 1 colorpair
207 227 0.0 1 colorpair
208 226 0.0 1 colorpair
209 225 0.0 1 colorpair
210 224 0.0 1 colorpair
211 223 0.0 1 colorpair
212 222 0.0 1 colorpair
213 221 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
