%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Dec 17 00:00:55 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_____________________________________________________________GAACU__________UUUGAAAA__A________AAA_GCUAUCGUUU_UACAGAAACUUCGUUUUACAAAA_CU_____UUCAA_A_A_AAACAACAACUUUACACCC_C_AAAAAA_GAAAUUUCAAGGUAUAAUGUUUUCGCCG_AGUUU_U____U_CCA_UU_UUUAGUUUU_____CAUGGCAAACUC\
CU__UUUUAGAAUUUAUCCCCAUAA_UC_G__CA_CUUAUGGGGGU_\
) } def
/len { sequence length } bind def

/coor [
[250.14894104 746.46832275]
[235.50076294 749.69647217]
[220.78337097 752.59277344]
[206.00427246 755.15576172]
[191.17103577 757.38409424]
[176.29121399 759.27661133]
[161.37243652 760.83233643]
[146.42231750 762.05053711]
[131.44847107 762.93060303]
[116.45856476 763.47198486]
[101.46025085 763.67449951]
[86.46119690 763.53802490]
[71.46904755 763.06256104]
[56.49148178 762.24841309]
[41.53613663 761.09600830]
[26.61065483 759.60595703]
[11.72266102 757.77893066]
[-3.12024117 755.61590576]
[-17.91046906 753.11798096]
[-32.64046860 750.28643799]
[-47.30271530 747.12280273]
[-61.88972092 743.62854004]
[-76.39402771 739.80554199]
[-90.80824280 735.65570068]
[-105.12498474 731.18121338]
[-119.33695221 726.38427734]
[-133.43687439 721.26739502]
[-147.41757202 715.83319092]
[-161.27186584 710.08441162]
[-174.99272156 704.02398682]
[-188.57310486 697.65502930]
[-202.00608826 690.98077393]
[-215.28480530 684.00469971]
[-228.40246582 676.73028564]
[-241.35238647 669.16125488]
[-254.12794495 661.30151367]
[-266.72259521 653.15502930]
[-279.12994385 644.72607422]
[-291.34362793 636.01879883]
[-303.35742188 627.03771973]
[-315.16516113 617.78747559]
[-326.76086426 608.27270508]
[-338.13854980 598.49835205]
[-349.29244995 588.46929932]
[-360.21682739 578.19079590]
[-370.90615845 567.66802979]
[-381.35491943 556.90637207]
[-391.55783081 545.91131592]
[-401.50964355 534.68847656]
[-411.20526123 523.24359131]
[-420.63980103 511.58255005]
[-429.80834961 499.71124268]
[-438.70629883 487.63577271]
[-447.32907104 475.36230469]
[-455.67227173 462.89709473]
[-463.73162842 450.24652100]
[-471.50305176 437.41702271]
[-478.98251343 424.41519165]
[-486.16625977 411.24765015]
[-493.05056763 397.92111206]
[-499.63195801 384.44241333]
[-505.90707397 370.81838989]
[-511.87268066 357.05606079]
[-517.52569580 343.16241455]
[-522.86334229 329.14456177]
[-527.88281250 315.00967407]
[-532.58154297 300.76495361]
[-536.95715332 286.41766357]
[-541.00744629 271.97515869]
[-544.73028564 257.44482422]
[-548.12377930 242.83404541]
[-551.18621826 228.15032959]
[-553.91601562 213.40113831]
[-556.31182861 198.59402466]
[-558.37237549 183.73655701]
[-560.09661865 168.83630371]
[-561.48370361 153.90089417]
[-562.53289795 138.93795776]
[-563.24365234 123.95512390]
[-563.61560059 108.96006012]
[-563.64862061 93.96041870]
[-563.34265137 78.96385956]
[-562.69781494 63.97804642]
[-561.71447754 49.01063538]
[-560.39312744 34.06926727]
[-558.73449707 19.16157532]
[-556.73931885 4.29517841]
[-554.40875244 -10.52233315]
[-551.74383545 -25.28339005]
[-548.74609375 -39.98045349]
[-545.41687012 -54.60601044]
[-541.75805664 -69.15259552]
[-537.77136230 -83.61278534]
[-533.45892334 -97.97917938]
[-528.82293701 -112.24444580]
[-523.86572266 -126.40129089]
[-518.58984375 -140.44250488]
[-512.99798584 -154.36088562]
[-507.09298706 -168.14935303]
[-500.87792969 -181.80082703]
[-494.35589600 -195.30838013]
[-487.53030396 -208.66508484]
[-480.40457153 -221.86412048]
[-472.98239136 -234.89874268]
[-465.26751709 -247.76229858]
[-457.26391602 -260.44821167]
[-448.97564697 -272.95001221]
[-440.40698242 -285.26132202]
[-431.56225586 -297.37582397]
[-422.44601440 -309.28735352]
[-413.06289673 -320.98983765]
[-403.41772461 -332.47726440]
[-393.51541138 -343.74377441]
[-383.36099243 -354.78363037]
[-372.95965576 -365.59115601]
[-362.31677246 -376.16088867]
[-351.43771362 -386.48739624]
[-340.32806396 -396.56536865]
[-328.99349976 -406.38973999]
[-317.43978882 -415.95541382]
[-305.67285156 -425.25756836]
[-293.69873047 -434.29141235]
[-281.52346802 -443.05230713]
[-269.15335083 -451.53585815]
[-256.59463501 -459.73764038]
[-243.85380554 -467.65353394]
[-230.93731689 -475.27947998]
[-217.85179138 -482.61154175]
[-204.60391235 -489.64602661]
[-191.20042419 -496.37933350]
[-177.64820862 -502.80798340]
[-163.95416260 -508.92871094]
[-150.12528992 -514.73840332]
[-136.16864014 -520.23413086]
[-122.09136963 -525.41296387]
[-107.90065002 -530.27239990]
[-93.60373688 -534.80987549]
[-79.20793152 -539.02307129]
[-64.72058868 -542.90985107]
[-50.14910126 -546.46826172]
[-35.50091934 -549.69647217]
[-20.78352165 -552.59277344]
[-6.00442982 -555.15576172]
[8.82880974 -557.38403320]
[23.70862007 -559.27655029]
[38.62739944 -560.83233643]
[53.57752609 -562.05053711]
[68.55136871 -562.93060303]
[83.54127502 -563.47198486]
[98.53958893 -563.67449951]
[113.53864288 -563.53802490]
[128.53079224 -563.06256104]
[143.50836182 -562.24847412]
[158.46369934 -561.09606934]
[173.38919067 -559.60595703]
[188.27717590 -557.77893066]
[203.12008667 -555.61590576]
[217.91030884 -553.11804199]
[232.64030457 -550.28649902]
[247.30256653 -547.12280273]
[261.88955688 -543.62860107]
[276.39389038 -539.80560303]
[290.80807495 -535.65576172]
[305.12481689 -531.18127441]
[319.33679199 -526.38433838]
[333.43673706 -521.26745605]
[347.41741943 -515.83325195]
[361.27172852 -510.08447266]
[374.99258423 -504.02404785]
[388.57296753 -497.65512085]
[402.00595093 -490.98086548]
[415.28466797 -484.00476074]
[428.40231323 -476.73034668]
[441.35223389 -469.16134644]
[454.12780762 -461.30160522]
[466.72247314 -453.15515137]
[479.12982178 -444.72613525]
[491.34350586 -436.01889038]
[503.35729980 -427.03784180]
[515.16503906 -417.78756714]
[526.76074219 -408.27282715]
[538.13842773 -398.49844360]
[549.29229736 -388.46942139]
[560.21673584 -378.19091797]
[570.90606689 -367.66815186]
[581.35479736 -356.90646362]
[591.55773926 -345.91140747]
[601.50952148 -334.68859863]
[611.20520020 -323.24374390]
[620.63970947 -311.58267212]
[629.80828857 -299.71136475]
[638.70623779 -287.63592529]
[647.32897949 -275.36242676]
[655.67218018 -262.89721680]
[663.73156738 -250.24665833]
[671.50292969 -237.41717529]
[678.98242188 -224.41534424]
[686.16619873 -211.24778748]
[693.05053711 -197.92126465]
[699.63189697 -184.44255066]
[705.90698242 -170.81854248]
[711.87261963 -157.05621338]
[717.52569580 -143.16256714]
[722.86328125 -129.14471436]
[727.88275146 -115.00981903]
[732.58148193 -100.76509094]
[736.95715332 -86.41781616]
[741.00738525 -71.97531891]
[744.73022461 -57.44497299]
[748.12371826 -42.83420944]
[751.18615723 -28.15048218]
[753.91601562 -13.40129566]
[756.31176758 1.40581524]
[758.37237549 16.26328850]
[760.09661865 31.16353416]
[761.48370361 46.09894180]
[762.53289795 61.06188202]
[763.24365234 76.04471588]
[763.61560059 91.03977966]
[763.64862061 106.03942108]
[763.34265137 121.03598022]
[762.69781494 136.02178955]
[761.71447754 150.98921204]
[760.39318848 165.93057251]
[758.73449707 180.83827209]
[756.73937988 195.70466614]
[754.40875244 210.52217102]
[751.74389648 225.28323364]
[748.74609375 239.98030090]
[745.41693115 254.60585022]
[741.75805664 269.15243530]
[737.77142334 283.61264038]
[733.45898438 297.97903442]
[728.82299805 312.24429321]
[723.86578369 326.40115356]
[718.58990479 340.44235229]
[712.99804688 354.36074829]
[707.09307861 368.14920044]
[700.87799072 381.80068970]
[694.35595703 395.30822754]
[687.53039551 408.66494751]
[680.40466309 421.86398315]
[672.98248291 434.89859009]
[665.26757812 447.76217651]
[657.26397705 460.44808960]
[648.97570801 472.94989014]
[640.40704346 485.26119995]
[631.56231689 497.37570190]
[622.44610596 509.28723145]
[613.06298828 520.98968506]
[603.41784668 532.47711182]
[593.51550293 543.74365234]
[583.36108398 554.78350830]
[572.95977783 565.59106445]
[562.31689453 576.16076660]
[551.43780518 586.48730469]
[540.32818604 596.56524658]
[528.99359131 606.38964844]
[517.43994141 615.95532227]
[505.67300415 625.25744629]
[493.69885254 634.29132080]
[481.52359009 643.05224609]
[469.15347290 651.53576660]
[456.59478760 659.73754883]
[443.85394287 667.65344238]
[430.93746948 675.27941895]
[417.85192871 682.61145020]
[404.60403442 689.64593506]
[391.20056152 696.37927246]
[377.64834595 702.80792236]
[363.95431519 708.92864990]
[350.12542725 714.73834229]
[336.16879272 720.23406982]
[341.34777832 734.31164551]
[346.52676392 748.38922119]
[351.70574951 762.46679688]
[356.88473511 776.54437256]
[362.06372070 790.62194824]
[367.24270630 804.69952393]
[372.42169189 818.77709961]
[387.60464478 820.71008301]
[400.14352417 829.48706055]
[407.15698242 843.09106445]
[407.03341675 858.39611816]
[399.80114746 871.88507080]
[387.12216187 880.45843506]
[371.90997314 882.14593506]
[357.66021729 876.55993652]
[347.64743042 864.98400879]
[344.17242432 850.07818604]
[348.03375244 835.26776123]
[358.34411621 823.95605469]
[353.16513062 809.87847900]
[347.98614502 795.80090332]
[342.80715942 781.72332764]
[337.62817383 767.64575195]
[332.44918823 753.56817627]
[327.27020264 739.49060059]
[322.09121704 725.41302490]
[307.90051270 730.27246094]
[293.60357666 734.80993652]
[279.20776367 739.02313232]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[273 299]
[274 298]
[275 297]
[276 296]
[277 295]
[278 294]
[279 293]
[280 292]
] def

init

% Start Annotations
273 299 0.0 1 colorpair
274 298 0.0 1 colorpair
275 297 0.16 1 colorpair
276 296 0.16 1 colorpair
277 295 0.0 1 colorpair
278 294 0.0 1 colorpair
279 293 0.0 1 colorpair
280 292 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
275 cmark
276 cmark
280 292 1 gmark

% End Annotations
showpage
end
%%EOF
