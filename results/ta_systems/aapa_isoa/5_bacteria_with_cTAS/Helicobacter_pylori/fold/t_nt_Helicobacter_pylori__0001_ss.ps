%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Dec 17 00:00:54 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______________________________________________________________ACUUU_________UGAAAAAC__A_AAAGCUAUCGUU__U_UAAAAAAACUUUGAAGUUAAAAAUU_____UUCAAUA_AAACAA_CAACUUUACACC_CC_AAAAA_A_GAAAUUUCAAGGUAUAAUGUUUUCGCCG_AGUUU___UU_CC__AUUUUA_GUUUU__CCAUGGCAAACUCCU__UUUUAGA\
AUUUAUCCCCAUAA_UCGC_ACUUAUGGGGGU_\
) } def
/len { sequence length } bind def

/coor [
[231.35298157 723.73468018]
[216.63992310 726.65277100]
[201.86225891 729.22387695]
[187.02819824 731.44647217]
[172.14593506 733.31945801]
[157.22373962 734.84173584]
[142.26983643 736.01245117]
[127.29253387 736.83099365]
[112.30011749 737.29687500]
[97.30088806 737.40985107]
[82.30316162 737.16986084]
[67.31522369 736.57702637]
[52.34539413 735.63165283]
[37.40194702 734.33435059]
[22.49316788 732.68572998]
[7.62730646 730.68682861]
[-7.18740273 728.33862305]
[-21.94275665 725.64251709]
[-36.63058472 722.59991455]
[-51.24275208 719.21258545]
[-65.77116394 715.48236084]
[-80.20778656 711.41125488]
[-94.54461670 707.00164795]
[-108.77371216 702.25585938]
[-122.88720703 697.17657471]
[-136.87727356 691.76660156]
[-150.73616028 686.02899170]
[-164.45620728 679.96679688]
[-178.02981567 673.58349609]
[-191.44944763 666.88250732]
[-204.70770264 659.86767578]
[-217.79722595 652.54278564]
[-230.71075439 644.91186523]
[-243.44116211 636.97924805]
[-255.98138428 628.74932861]
[-268.32449341 620.22656250]
[-280.46362305 611.41571045]
[-292.39205933 602.32165527]
[-304.10324097 592.94946289]
[-315.59060669 583.30426025]
[-326.84786987 573.39147949]
[-337.86877441 563.21649170]
[-348.64718628 552.78503418]
[-359.17715454 542.10284424]
[-369.45285034 531.17584229]
[-379.46859741 520.01007080]
[-389.21881104 508.61169434]
[-398.69815063 496.98709106]
[-407.90130615 485.14260864]
[-416.82324219 473.08486938]
[-425.45895386 460.82055664]
[-433.80371094 448.35641479]
[-441.85284424 435.69937134]
[-449.60195923 422.85644531]
[-457.04669189 409.83471680]
[-464.18298340 396.64141846]
[-471.00686646 383.28384399]
[-477.51452637 369.76943970]
[-483.70239258 356.10562134]
[-489.56704712 342.29998779]
[-495.10522461 328.36016846]
[-500.31384277 314.29391479]
[-505.19003296 300.10897827]
[-509.73110962 285.81323242]
[-513.93450928 271.41458130]
[-517.79797363 256.92102051]
[-521.31933594 242.34057617]
[-524.49664307 227.68130493]
[-527.32812500 212.95132446]
[-529.81219482 198.15879822]
[-531.94757080 183.31192017]
[-533.73291016 168.41889954]
[-535.16741943 153.48799133]
[-536.25012207 138.52746582]
[-536.98052979 123.54560852]
[-537.35821533 108.55071259]
[-537.38293457 93.55107880]
[-537.05468750 78.55501556]
[-536.37371826 63.57083511]
[-535.34033203 48.60681915]
[-533.95507812 33.67126846]
[-532.21881104 18.77244186]
[-530.13250732 3.91859865]
[-527.69720459 -10.88204002]
[-524.91430664 -25.62127686]
[-521.78533936 -40.29095078]
[-518.31207275 -54.88293839]
[-514.49645996 -69.38916016]
[-510.34051514 -83.80157471]
[-505.84661865 -98.11221313]
[-501.01721191 -112.31314850]
[-495.85501099 -126.39651489]
[-490.36285400 -140.35450745]
[-484.54376221 -154.17941284]
[-478.40097046 -167.86355591]
[-471.93789673 -181.39936829]
[-465.15814209 -194.77935791]
[-458.06539917 -207.99610901]
[-450.66360474 -221.04231262]
[-442.95690918 -233.91073608]
[-434.94952393 -246.59425354]
[-426.64593506 -259.08584595]
[-418.05068970 -271.37857056]
[-409.16857910 -283.46566772]
[-400.00454712 -295.34042358]
[-390.56359863 -306.99624634]
[-380.85101318 -318.42669678]
[-370.87213135 -329.62542725]
[-360.63253784 -340.58627319]
[-350.13784790 -351.30313110]
[-339.39389038 -361.77008057]
[-328.40661621 -371.98132324]
[-317.18209839 -381.93118286]
[-305.72659302 -391.61419678]
[-294.04638672 -401.02496338]
[-282.14797974 -410.15829468]
[-270.03796387 -419.00912476]
[-257.72305298 -427.57254028]
[-245.21003723 -435.84384155]
[-232.50585938 -443.81838989]
[-219.61755371 -451.49179077]
[-206.55226135 -458.85980225]
[-193.31721497 -465.91836548]
[-179.91973877 -472.66351318]
[-166.36726379 -479.09158325]
[-152.66728210 -485.19897461]
[-138.82739258 -490.98226929]
[-124.85523987 -496.43835449]
[-110.75857544 -501.56411743]
[-96.54520416 -506.35678101]
[-82.22299194 -510.81369019]
[-67.79987335 -514.93231201]
[-53.28383636 -518.71044922]
[-38.68291855 -522.14599609]
[-24.00520515 -525.23699951]
[-9.25882339 -527.98175049]
[5.54806185 -530.37878418]
[20.40724945 -532.42675781]
[35.31051254 -534.12445068]
[50.24959946 -535.47106934]
[65.21623230 -536.46575928]
[80.20213318 -537.10803223]
[95.19898987 -537.39746094]
[110.19850922 -537.33398438]
[125.19237518 -536.91754150]
[140.17230225 -536.14837646]
[155.12997437 -535.02697754]
[170.05711365 -533.55395508]
[184.94546509 -531.73004150]
[199.78678894 -529.55633545]
[214.57284546 -527.03399658]
[229.29545593 -524.16442871]
[243.94645691 -520.94927979]
[258.51776123 -517.39025879]
[273.00128174 -513.48931885]
[287.38900757 -509.24865723]
[301.67297363 -504.67065430]
[315.84524536 -499.75778198]
[329.89797974 -494.51281738]
[343.82342529 -488.93862915]
[357.61386108 -483.03833008]
[371.26162720 -476.81515503]
[384.75918579 -470.27255249]
[398.09906006 -463.41418457]
[411.27386475 -456.24380493]
[424.27627563 -448.76541138]
[437.09915161 -440.98312378]
[449.73535156 -432.90127563]
[462.17785645 -424.52432251]
[474.41983032 -415.85693359]
[486.45446777 -406.90386963]
[498.27508545 -397.67010498]
[509.87515259 -388.16076660]
[521.24829102 -378.38110352]
[532.38812256 -368.33651733]
[543.28851318 -358.03259277]
[553.94348145 -347.47503662]
[564.34704590 -336.66970825]
[574.49346924 -325.62255859]
[584.37713623 -314.33969116]
[593.99255371 -302.82742310]
[603.33447266 -291.09207153]
[612.39764404 -279.14013672]
[621.17706299 -266.97827148]
[629.66790771 -254.61317444]
[637.86541748 -242.05171204]
[645.76507568 -229.30084229]
[653.36254883 -216.36761475]
[660.65356445 -203.25920105]
[667.63415527 -189.98286438]
[674.30035400 -176.54594421]
[680.64855957 -162.95588684]
[686.67529297 -149.22019958]
[692.37707520 -135.34652710]
[697.75085449 -121.34252167]
[702.79357910 -107.21595001]
[707.50256348 -92.97462463]
[711.87512207 -78.62644196]
[715.90887451 -64.17934418]
[719.60150146 -49.64133453]
[722.95111084 -35.02045822]
[725.95568848 -20.32481575]
[728.61364746 -5.56254005]
[730.92352295 9.25819016]
[732.88403320 24.12916946]
[734.49407959 39.04216385]
[735.75274658 53.98891068]
[736.65936279 68.96113586]
[737.21343994 83.95055389]
[737.41467285 98.94886017]
[737.26293945 113.94773865]
[736.75830078 128.93890381]
[735.90106201 143.91403198]
[734.69165039 158.86485291]
[733.13079834 173.78308105]
[731.21936035 188.66044617]
[728.95837402 203.48870850]
[726.34912109 218.25967407]
[723.39300537 232.96514893]
[720.09167480 247.59698486]
[716.44702148 262.14709473]
[712.46093750 276.60742188]
[708.13574219 290.96994019]
[703.47375488 305.22671509]
[698.47760010 319.36984253]
[693.15002441 333.39151001]
[687.49401855 347.28390503]
[681.51269531 361.03939819]
[675.20935059 374.65032959]
[668.58746338 388.10916138]
[661.65069580 401.40844727]
[654.40295410 414.54083252]
[646.84820557 427.49905396]
[638.99060059 440.27590942]
[630.83459473 452.86431885]
[622.38458252 465.25735474]
[613.64532471 477.44812012]
[604.62158203 489.42987061]
[595.31848145 501.19595337]
[585.74102783 512.73992920]
[575.89465332 524.05529785]
[565.78466797 535.13586426]
[555.41680908 545.97546387]
[544.79675293 556.56805420]
[533.93041992 566.90789795]
[522.82373047 576.98913574]
[511.48297119 586.80627441]
[499.91430664 596.35382080]
[488.12420654 605.62652588]
[476.11917114 614.61926270]
[463.90585327 623.32696533]
[451.49102783 631.74493408]
[438.88156128 639.86840820]
[426.08444214 647.69293213]
[413.10675049 655.21417236]
[399.95565796 662.42791748]
[386.63848877 669.33026123]
[373.16256714 675.91735840]
[359.53540039 682.18548584]
[345.76449585 688.13128662]
[331.85751343 693.75134277]
[317.82214355 699.04266357]
[322.78182983 713.19897461]
[327.74151611 727.35528564]
[332.70120239 741.51159668]
[337.66088867 755.66796875]
[342.62054443 769.82427979]
[347.58023071 783.98059082]
[352.53991699 798.13690186]
[367.44125366 802.46472168]
[376.92626953 814.74536133]
[377.34777832 830.25671387]
[368.54370117 843.03430176]
[353.89938354 848.16497803]
[339.04586792 843.67578125]
[329.69464111 831.29296875]
[329.44143677 815.77795410]
[338.38360596 803.09661865]
[333.42391968 788.94030762]
[328.46423340 774.78393555]
[323.50454712 760.62762451]
[318.54486084 746.47131348]
[313.58517456 732.31500244]
[308.62548828 718.15863037]
[303.66583252 704.00231934]
[289.39703369 708.62744141]
[275.02337646 712.91546631]
[260.55279541 716.86413574]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[262 285]
[263 284]
[264 283]
[265 282]
[266 281]
[267 280]
[268 279]
[269 278]
] def

init

% Start Annotations
262 285 0.0 1 colorpair
263 284 0.0 1 colorpair
264 283 0.16 1 colorpair
265 282 0.16 1 colorpair
266 281 0.0 1 colorpair
267 280 0.0 1 colorpair
268 279 0.0 1 colorpair
269 278 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
264 cmark
265 cmark
269 278 1 gmark

% End Annotations
showpage
end
%%EOF
