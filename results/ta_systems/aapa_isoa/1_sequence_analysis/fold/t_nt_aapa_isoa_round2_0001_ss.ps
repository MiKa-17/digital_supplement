%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Dec 16 21:19:55 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCCCAUAAGUUAAGGAUAAACUUUAAAGGAAAACCCUUAAAGCUAAAA_GCCUUAAGGGAACUUUUGAAAAAC_A_AAAGCUAUCGUUUUACAGAAACUUCGUUUUACAAAACUAUCGCUUCAAUAAAACAACAACUUUACACCCC_AAAAA_C_GAAAUUUCAAGGUAUAAUGUUUUCCAA_GAGUU_UUUGCCAUUUUU_UGUUU_CC_AUGGCAAACUCCU__UUUAAGAA_UUUAUCCCCAUAA_UCCC\
_ACUUAUGGGGGUG\
) } def
/len { sequence length } bind def

/coor [
[229.98773193 677.61053467]
[215.31356812 680.71813965]
[200.56539917 683.45294189]
[185.75268555 685.81329346]
[170.88491821 687.79766846]
[155.97166443 689.40472412]
[141.02247620 690.63348389]
[126.04696655 691.48315430]
[111.05473328 691.95318604]
[96.05540466 692.04327393]
[81.05860901 691.75329590]
[66.07397461 691.08355713]
[51.11111069 690.03442383]
[36.17963028 688.60662842]
[21.28911018 686.80096436]
[6.44911098 684.61865234]
[-8.33084202 682.06115723]
[-23.04126358 679.13006592]
[-37.67271042 675.82720947]
[-52.21579361 672.15478516]
[-66.66117859 668.11517334]
[-80.99958801 663.71081543]
[-95.22182465 658.94470215]
[-109.31875610 653.81982422]
[-123.28134155 648.33947754]
[-137.10061646 642.50720215]
[-150.76770020 636.32672119]
[-164.27383423 629.80194092]
[-177.61033630 622.93713379]
[-190.76866150 615.73669434]
[-203.74035645 608.20526123]
[-216.51708984 600.34759521]
[-229.09068298 592.16876221]
[-241.45303345 583.67407227]
[-253.59623718 574.86889648]
[-265.51248169 565.75897217]
[-277.19409180 556.35003662]
[-288.63363647 546.64825439]
[-299.82373047 536.65979004]
[-310.75720215 526.39099121]
[-321.42700195 515.84857178]
[-331.82632446 505.03924561]
[-341.94848633 493.96990967]
[-351.78698730 482.64773560]
[-361.33551025 471.07992554]
[-370.58792114 459.27398682]
[-379.53826904 447.23739624]
[-388.18084717 434.97796631]
[-396.51007080 422.50350952]
[-404.52062988 409.82208252]
[-412.20733643 396.94177246]
[-419.56530762 383.87088013]
[-426.58978271 370.61776733]
[-433.27624512 357.19097900]
[-439.62045288 343.59909058]
[-445.61831665 329.85086060]
[-451.26596069 315.95510864]
[-456.55978394 301.92074585]
[-461.49636841 287.75677490]
[-466.07254028 273.47229004]
[-470.28540039 259.07647705]
[-474.13223267 244.57855225]
[-477.61053467 229.98782349]
[-480.71810913 215.31367493]
[-483.45294189 200.56549072]
[-485.81329346 185.75277710]
[-487.79766846 170.88502502]
[-489.40472412 155.97175598]
[-490.63348389 141.02258301]
[-491.48315430 126.04706573]
[-491.95318604 111.05483246]
[-492.04324341 96.05550385]
[-491.75332642 81.05871582]
[-491.08358765 66.07407379]
[-490.03445435 51.11121368]
[-488.60659790 36.17972946]
[-486.80096436 21.28920937]
[-484.61868286 6.44921064]
[-482.06118774 -8.33074379]
[-479.13006592 -23.04116631]
[-475.82723999 -37.67261505]
[-472.15481567 -52.21569824]
[-468.11517334 -66.66107941]
[-463.71087646 -80.99948883]
[-458.94476318 -95.22173309]
[-453.81988525 -109.31866455]
[-448.33953857 -123.28125000]
[-442.50723267 -137.10052490]
[-436.32675171 -150.76760864]
[-429.80200195 -164.27374268]
[-422.93719482 -177.61024475]
[-415.73675537 -190.76856995]
[-408.20529175 -203.74026489]
[-400.34762573 -216.51701355]
[-392.16882324 -229.09059143]
[-383.67410278 -241.45295715]
[-374.86895752 -253.59614563]
[-365.75900269 -265.51239014]
[-356.35012817 -277.19403076]
[-346.64831543 -288.63357544]
[-336.65985107 -299.82363892]
[-326.39108276 -310.75711060]
[-315.84866333 -321.42694092]
[-305.03930664 -331.82626343]
[-293.97000122 -341.94842529]
[-282.64779663 -351.78692627]
[-271.08001709 -361.33544922]
[-259.27404785 -370.58786011]
[-247.23748779 -379.53820801]
[-234.97804260 -388.18078613]
[-222.50360107 -396.51000977]
[-209.82215881 -404.52056885]
[-196.94184875 -412.20727539]
[-183.87095642 -419.56524658]
[-170.61785889 -426.58972168]
[-157.19107056 -433.27621460]
[-143.59919739 -439.62042236]
[-129.85096741 -445.61828613]
[-115.95521545 -451.26593018]
[-101.92084503 -456.55972290]
[-87.75688171 -461.49633789]
[-73.47239685 -466.07250977]
[-59.07657623 -470.28536987]
[-44.57864761 -474.13220215]
[-29.98792458 -477.61050415]
[-15.31376743 -480.71807861]
[-0.56559640 -483.45294189]
[14.24712276 -485.81329346]
[29.11488152 -487.79763794]
[44.02813721 -489.40472412]
[58.97732162 -490.63348389]
[73.95283508 -491.48315430]
[88.94506836 -491.95315552]
[103.94438934 -492.04324341]
[118.94118500 -491.75332642]
[133.92582703 -491.08358765]
[148.88868713 -490.03445435]
[163.82017517 -488.60662842]
[178.71069336 -486.80099487]
[193.55068970 -484.61871338]
[208.33064270 -482.06118774]
[223.04106140 -479.13009644]
[237.67251587 -475.82727051]
[252.21560669 -472.15484619]
[266.66098022 -468.11520386]
[280.99938965 -463.71090698]
[295.22164917 -458.94479370]
[309.31857300 -453.81991577]
[323.28115845 -448.33956909]
[337.10043335 -442.50729370]
[350.76751709 -436.32678223]
[364.27365112 -429.80203247]
[377.61016846 -422.93725586]
[390.76849365 -415.73681641]
[403.74017334 -408.20535278]
[416.51693726 -400.34768677]
[429.09051514 -392.16888428]
[441.45288086 -383.67416382]
[453.59606934 -374.86901855]
[465.51229858 -365.75906372]
[477.19393921 -356.35018921]
[488.63348389 -346.64837646]
[499.82357788 -336.65991211]
[510.75704956 -326.39114380]
[521.42687988 -315.84872437]
[531.82617188 -305.03939819]
[541.94836426 -293.97006226]
[551.78686523 -282.64788818]
[561.33538818 -271.08010864]
[570.58776855 -259.27413940]
[579.53814697 -247.23756409]
[588.18072510 -234.97813416]
[596.50994873 -222.50367737]
[604.52050781 -209.82223511]
[612.20721436 -196.94194031]
[619.56518555 -183.87104797]
[626.58966064 -170.61795044]
[633.27618408 -157.19116211]
[639.62036133 -143.59928894]
[645.61822510 -129.85105896]
[651.26586914 -115.95530701]
[656.55969238 -101.92094421]
[661.49627686 -87.75697327]
[666.07250977 -73.47249603]
[670.28533936 -59.07667160]
[674.13220215 -44.57874680]
[677.61047363 -29.98802185]
[680.71807861 -15.31386566]
[683.45294189 -0.56569564]
[685.81329346 14.24702263]
[687.79760742 29.11478233]
[689.40472412 44.02803802]
[690.63348389 58.97722244]
[691.48315430 73.95273590]
[691.95318604 88.94496155]
[692.04327393 103.94429016]
[691.75335693 118.94108582]
[691.08361816 133.92572021]
[690.03448486 148.88858032]
[688.60662842 163.82006836]
[686.80102539 178.71058655]
[684.61871338 193.55059814]
[682.06121826 208.33055115]
[679.13012695 223.04096985]
[675.82727051 237.67242432]
[672.15490723 252.21549988]
[668.11523438 266.66088867]
[663.71093750 280.99929810]
[658.94482422 295.22152710]
[653.81994629 309.31848145]
[648.33959961 323.28106689]
[642.50732422 337.10034180]
[636.32684326 350.76742554]
[629.80206299 364.27355957]
[622.93731689 377.61007690]
[615.73687744 390.76840210]
[608.20538330 403.74011230]
[600.34771729 416.51684570]
[592.16894531 429.09042358]
[583.67425537 441.45278931]
[574.86907959 453.59597778]
[565.75915527 465.51223755]
[556.35021973 477.19387817]
[546.64843750 488.63342285]
[536.65997314 499.82351685]
[526.39123535 510.75695801]
[515.84881592 521.42681885]
[505.03945923 531.82611084]
[493.97015381 541.94830322]
[482.64794922 551.78680420]
[471.08016968 561.33532715]
[459.27420044 570.58770752]
[447.23764038 579.53808594]
[434.97821045 588.18066406]
[422.50375366 596.50988770]
[409.82232666 604.52044678]
[396.94201660 612.20721436]
[383.87112427 619.56512451]
[370.61804199 626.58966064]
[357.19125366 633.27612305]
[343.59936523 639.62036133]
[329.85116577 645.61816406]
[315.95541382 651.26586914]
[321.24935913 665.30059814]
[326.54330444 679.33532715]
[331.83728027 693.37005615]
[337.13122559 707.40484619]
[342.42520142 721.43957520]
[347.71914673 735.47430420]
[353.01312256 749.50903320]
[368.01287842 753.48223877]
[377.78643799 765.53454590]
[378.57562256 781.03155518]
[370.07699585 794.01434326]
[355.55844116 799.49078369]
[340.60266113 795.35510254]
[330.96044922 783.19750977]
[330.33941650 767.69287109]
[338.97836304 754.80297852]
[333.68441772 740.76824951]
[328.39044189 726.73352051]
[323.09649658 712.69879150]
[317.80252075 698.66400146]
[312.50857544 684.62927246]
[307.21463013 670.59454346]
[301.92065430 656.55981445]
[287.75668335 661.49639893]
[273.47219849 666.07257080]
[259.07638550 670.28540039]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[243 266]
[244 265]
[245 264]
[246 263]
[247 262]
[248 261]
[249 260]
[250 259]
] def

init

% Start Annotations
243 266 0.16 0.2 colorpair
244 265 0.0 0.2 colorpair
245 264 0.16 0.2 colorpair
246 263 0.0 0.2 colorpair
247 262 0.0 0.2 colorpair
248 261 0.0 0.2 colorpair
249 260 0.0 0.2 colorpair
250 259 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
243 266 2 gmark
243 cmark
244 265 2 gmark
245 264 2 gmark
245 cmark
246 263 2 gmark
247 262 2 gmark
248 261 2 gmark
249 260 2 gmark
250 259 2 gmark

% End Annotations
showpage
end
%%EOF
