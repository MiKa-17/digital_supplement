%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Dec 20 01:19:53 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGAAAUAUGCCCUUAUCGGGUUGCUCGCCGUGUGCGCCACGGUGUUGU_GUUUUUCACUGAUAUUCAGGGAACGGUUAUGUGAGCUGAAUAUUCACAGGGGAAAUAC______AGUGGUGCAGGUAACUCUGGCCUACGAAGCACGGAAGUAA\
) } def
/len { sequence length } bind def

/coor [
[108.35456085 188.76945496]
[115.67872620 201.85978699]
[114.07437134 216.77374268]
[104.13364410 228.00680542]
[89.52550507 231.41304016]
[75.64160919 225.73524475]
[67.60628510 213.06901550]
[68.38524628 198.08924866]
[77.69000244 186.32542419]
[81.48200226 171.81265259]
[85.27399445 157.29986572]
[89.06599426 142.78709412]
[81.58970642 142.19120789]
[71.30411530 153.10939026]
[61.01852798 164.02757263]
[50.73294067 174.94575500]
[49.77220154 190.96002197]
[36.57033920 200.07540894]
[21.25468826 195.29937744]
[15.57411098 180.29570007]
[23.88625717 166.57389832]
[39.81475830 164.66017151]
[50.10034561 153.74198914]
[60.38593292 142.82380676]
[70.67152405 131.90562439]
[64.98791504 123.94509125]
[61.34487534 115.09215546]
[59.84691620 105.84756470]
[60.48012161 96.71229553]
[63.11753845 88.16051483]
[67.53060913 80.61492157]
[73.40572357 74.42591095]
[80.36483765 69.85549927]
[87.98883820 67.06678009]
[95.84226227 66.11923981]
[89.51288605 51.61925125]
[98.47521210 39.72278214]
[99.96401978 24.79685020]
[101.45282745 9.87091827]
[102.94163513 -5.05501413]
[104.43044281 -19.98094749]
[105.91925049 -34.90687943]
[107.40805817 -49.83280945]
[108.89686584 -64.75874329]
[95.66238403 -57.69839096]
[81.81134033 -63.45587158]
[77.48126984 -77.81729126]
[85.84134674 -90.27157593]
[100.77285004 -91.70346069]
[111.34694672 -81.06636810]
[113.42797852 -95.92131042]
[114.61972809 -110.87389374]
[112.17266846 -119.73243713]
[115.98672485 -126.11093903]
[117.47553253 -141.03688049]
[118.96434021 -155.96279907]
[120.45314789 -170.88873291]
[121.94195557 -185.81466675]
[123.43076324 -200.74060059]
[115.86460876 -211.23045349]
[117.44590759 -223.66255188]
[126.77991486 -231.41050720]
[128.56518555 -246.30389404]
[130.35046387 -261.19726562]
[131.69081116 -276.13726807]
[132.58503723 -291.11059570]
[133.47926331 -306.08392334]
[134.37348938 -321.05722046]
[135.26771545 -336.03054810]
[136.16194153 -351.00387573]
[137.05616760 -365.97720337]
[137.95039368 -380.95053101]
[126.13356018 -390.83325195]
[122.44495392 -405.60647583]
[128.09579468 -419.55395508]
[140.72474670 -427.40554810]
[141.61897278 -442.37884521]
[142.51319885 -457.35217285]
[134.69497681 -471.76770020]
[143.49955750 -485.60287476]
[159.86953735 -484.62521362]
[166.96488953 -469.84051514]
[157.48652649 -456.45794678]
[156.59230042 -441.48461914]
[155.69807434 -426.51132202]
[167.30278015 -417.21243286]
[171.25344849 -402.69155884]
[165.83277893 -388.46237183]
[152.92372131 -380.05630493]
[152.02949524 -365.08297729]
[151.13525391 -350.10964966]
[150.24102783 -335.13632202]
[149.34680176 -320.16299438]
[148.45257568 -305.18969727]
[147.55834961 -290.21636963]
[146.66412354 -275.24304199]
[148.76751709 -272.34915161]
[149.54324341 -268.27587891]
[148.44496155 -263.67285156]
[145.24383545 -259.41198730]
[143.45857239 -244.51861572]
[141.67329407 -229.62522888]
[149.44869995 -213.91874695]
[138.35668945 -199.25180054]
[136.86788940 -184.32586670]
[135.37907410 -169.39993286]
[133.89027405 -154.47399902]
[132.40147400 -139.54806519]
[130.91265869 -124.62213135]
[129.57231140 -109.68213654]
[128.38055420 -94.72955322]
[140.68020630 -103.31551361]
[155.47962952 -100.87071991]
[164.36444092 -88.78518677]
[162.28308105 -73.93029022]
[150.41891479 -64.75196075]
[135.51747131 -66.46865082]
[126.05140686 -78.10345459]
[123.82279205 -63.26993561]
[122.33398438 -48.34400558]
[120.84518433 -33.41807175]
[119.35637665 -18.49213982]
[117.86756897 -3.56620741]
[116.37876129 11.35972500]
[114.88995361 26.28565788]
[113.40114594 41.21158981]
[119.83701324 54.64397430]
[110.76819611 67.60804749]
[132.56950378 82.02092743]
[139.10543823 109.61399078]
[123.90442657 136.14840698]
[132.33074951 148.55796814]
[140.75706482 160.96752930]
[149.30633545 173.29269409]
[157.97770691 185.53227234]
[166.64909363 197.77185059]
[175.44172668 209.92460632]
[184.35473633 221.98936462]
[199.97254944 222.77542114]
[211.39598083 233.45434570]
[213.23121643 248.98387146]
[204.61172485 262.03140259]
[189.60737610 266.43634033]
[175.30274963 260.11877441]
[168.45205688 246.06167603]
[172.28999329 230.90237427]
[163.37698364 218.83763123]
[156.83728027 215.30708313]
[154.40951538 206.44322205]
[145.73814392 194.20365906]
[137.06675720 181.96408081]
[130.59855652 178.30421448]
[128.34750366 169.39384460]
[119.92118835 156.98428345]
[111.49486542 144.57472229]
[104.01857758 143.97883606]
[105.46390533 158.90904236]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 25]
[14 24]
[15 23]
[16 22]
[35 128]
[37 126]
[38 125]
[39 124]
[40 123]
[41 122]
[42 121]
[43 120]
[44 119]
[50 118]
[51 111]
[52 110]
[54 109]
[55 108]
[56 107]
[57 106]
[58 105]
[59 104]
[62 102]
[63 101]
[64 100]
[65 96]
[66 95]
[67 94]
[68 93]
[69 92]
[70 91]
[71 90]
[72 89]
[76 85]
[77 84]
[78 83]
[131 155]
[132 154]
[133 153]
[134 151]
[135 150]
[136 149]
[137 147]
[138 146]
] def

init

% Start Annotations
35 128 0.16 0.2 colorpair
37 126 0.0 1 colorpair
38 125 0.0 1 colorpair
39 124 0.16 1 colorpair
40 123 0.0 1 colorpair
41 122 0.0 1 colorpair
42 121 0.16 1 colorpair
43 120 0.0 1 colorpair
44 119 0.16 0.6 colorpair
50 118 0.0 1 colorpair
51 111 0.0 1 colorpair
52 110 0.0 1 colorpair
54 109 0.16 0.2 colorpair
55 108 0.0 1 colorpair
56 107 0.0 1 colorpair
57 106 0.0 1 colorpair
58 105 0.0 1 colorpair
59 104 0.0 1 colorpair
62 102 0.0 0.6 colorpair
63 101 0.16 0.6 colorpair
64 100 0.0 1 colorpair
65 96 0.0 1 colorpair
66 95 0.0 1 colorpair
67 94 0.0 1 colorpair
68 93 0.16 0.6 colorpair
69 92 0.0 1 colorpair
70 91 0.0 1 colorpair
71 90 0.0 1 colorpair
72 89 0.16 1 colorpair
76 85 0.0 1 colorpair
77 84 0.16 1 colorpair
78 83 0.16 0.6 colorpair
131 155 0.0 0.6 colorpair
132 154 0.0 0.2 colorpair
133 153 0.0 0.2 colorpair
134 151 0.16 0.6 colorpair
135 150 0.16 0.6 colorpair
136 149 0.0 0.6 colorpair
137 147 0.16 0.6 colorpair
138 146 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
13 25 6 gmark
13 cmark
25 cmark
14 24 3 gmark
15 23 3 gmark
15 cmark
16 22 3 gmark
16 cmark
35 128 2 gmark
128 cmark
39 cmark
42 cmark
44 119 1 gmark
44 cmark
54 109 2 gmark
54 cmark
62 102 1 gmark
63 101 1 gmark
101 cmark
68 93 1 gmark
93 cmark
89 cmark
77 cmark
78 83 1 gmark
78 cmark
131 155 1 gmark
132 154 2 gmark
133 153 2 gmark
134 151 1 gmark
134 cmark
135 150 1 gmark
150 cmark
136 149 1 gmark
137 147 1 gmark
147 cmark
138 146 1 gmark

% End Annotations
showpage
end
%%EOF
