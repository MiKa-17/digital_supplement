%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Dec 20 05:10:29 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_____________________________________________C__G______CAA______AAAUCUGUGUUUGUGGCCCU_________GAUCGU___CAUCUGU______UUCACGGUGUUGGUAUUCACAUUGAUGACGCGGG_AAUCGCUGUGCGAGUUGCGUAUCAGAAACGGAAAUAC______GGAGGUU_GC_GGCUUUUUUGGCUUACGAAUCC_AAG___AAG___________________\
___________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50348663 92.14570618]
[62.51951981 91.43731689]
[47.55646896 90.37522125]
[32.62267303 88.96001434]
[17.72647285 87.19247437]
[2.87617326 85.07360840]
[-11.91993809 82.60457611]
[-26.65360641 79.78677368]
[-41.31661224 76.62176514]
[-55.90077209 73.11131287]
[-70.39794922 69.25738525]
[-84.80006409 65.06212616]
[-99.09906769 60.52787399]
[-113.28698730 55.65716171]
[-127.35591888 50.45270538]
[-141.29798889 44.91741180]
[-155.10543823 39.05436325]
[-168.77056885 32.86684036]
[-182.28573608 26.35828590]
[-195.64340210 19.53233528]
[-208.83613586 12.39279747]
[-221.85655212 4.94365501]
[-234.69738770 -2.81093645]
[-247.35150146 -10.86664963]
[-259.81182861 -19.21899033]
[-272.07138062 -27.86330032]
[-284.12335205 -36.79475403]
[-295.96102905 -46.00836945]
[-307.57775879 -55.49900436]
[-318.96710205 -65.26136780]
[-330.12271118 -75.29000854]
[-341.03833008 -85.57933807]
[-351.70788574 -96.12361145]
[-362.12542725 -106.91693878]
[-372.28512573 -117.95330811]
[-382.18133545 -129.22656250]
[-391.80850220 -140.73040771]
[-401.16128540 -152.45841980]
[-410.23446655 -164.40406799]
[-419.02297974 -176.56066895]
[-427.52191162 -188.92146301]
[-435.72650146 -201.47955322]
[-443.63223267 -214.22790527]
[-451.23461914 -227.15943909]
[-458.52947998 -240.26692200]
[-465.51272583 -253.54302979]
[-472.18045044 -266.98037720]
[-478.52896118 -280.57147217]
[-484.55468750 -294.30871582]
[-490.25424194 -308.18444824]
[-495.62451172 -322.19091797]
[-500.66247559 -336.32031250]
[-505.36529541 -350.56475830]
[-509.73034668 -364.91632080]
[-513.75524902 -379.36697388]
[-517.43768311 -393.90866089]
[-520.77569580 -408.53326416]
[-523.76733398 -423.23260498]
[-526.41088867 -437.99853516]
[-528.70501709 -452.82278442]
[-530.64837646 -467.69705200]
[-532.23986816 -482.61309814]
[-533.47863770 -497.56256104]
[-534.36395264 -512.53710938]
[-534.89532471 -527.52838135]
[-535.07250977 -542.52807617]
[-534.89532471 -557.52770996]
[-534.36395264 -572.51898193]
[-533.47863770 -587.49353027]
[-532.23992920 -602.44299316]
[-530.64843750 -617.35906982]
[-528.70507812 -632.23333740]
[-526.41094971 -647.05755615]
[-523.76739502 -661.82348633]
[-520.77575684 -676.52282715]
[-517.43780518 -691.14746094]
[-513.75531006 -705.68914795]
[-509.73046875 -720.13977051]
[-505.36538696 -734.49133301]
[-500.66256714 -748.73577881]
[-495.62463379 -762.86523438]
[-490.25439453 -776.87170410]
[-484.55480957 -790.74743652]
[-478.52911377 -804.48468018]
[-472.18060303 -818.07574463]
[-465.51290894 -831.51312256]
[-458.52966309 -844.78924561]
[-451.23480225 -857.89672852]
[-443.63241577 -870.82824707]
[-435.72668457 -883.57659912]
[-427.52209473 -896.13470459]
[-419.02316284 -908.49548340]
[-410.23468018 -920.65209961]
[-401.16149902 -932.59777832]
[-391.80871582 -944.32574463]
[-382.18154907 -955.82965088]
[-372.28536987 -967.10290527]
[-362.12567139 -978.13928223]
[-351.70812988 -988.93261719]
[-341.03857422 -999.47686768]
[-330.12295532 -1009.76617432]
[-318.96737671 -1019.79486084]
[-307.57803345 -1029.55725098]
[-295.96130371 -1039.04785156]
[-284.12362671 -1048.26147461]
[-272.07165527 -1057.19299316]
[-259.81210327 -1065.83728027]
[-247.35179138 -1074.18957520]
[-234.69769287 -1082.24536133]
[-221.85684204 -1089.99987793]
[-208.83644104 -1097.44909668]
[-195.64370728 -1104.58862305]
[-182.28604126 -1111.41455078]
[-168.77087402 -1117.92309570]
[-155.10575867 -1124.11071777]
[-141.29830933 -1129.97375488]
[-127.35623932 -1135.50903320]
[-113.28732300 -1140.71350098]
[-99.09940338 -1145.58422852]
[-84.80039978 -1150.11853027]
[-70.39829254 -1154.31372070]
[-55.90111160 -1158.16772461]
[-41.31695175 -1161.67810059]
[-26.65394974 -1164.84313965]
[-11.92028236 -1167.66101074]
[2.87582731 -1170.13000488]
[17.72612572 -1172.24890137]
[32.62232590 -1174.01647949]
[47.55611801 -1175.43164062]
[62.51917267 -1176.49377441]
[77.50313568 -1177.20214844]
[92.49964905 -1177.55639648]
[107.50035095 -1177.55639648]
[122.49686432 -1177.20214844]
[137.48083496 -1176.49377441]
[152.44387817 -1175.43164062]
[167.37767029 -1174.01647949]
[182.27388000 -1172.24890137]
[197.12417603 -1170.13000488]
[211.92028809 -1167.66101074]
[226.65394592 -1164.84313965]
[241.31695557 -1161.67810059]
[255.90110779 -1158.16772461]
[270.39828491 -1154.31372070]
[284.80038452 -1150.11853027]
[299.09939575 -1145.58422852]
[313.28732300 -1140.71350098]
[327.35623169 -1135.50903320]
[341.29830933 -1129.97375488]
[355.10577393 -1124.11071777]
[368.77087402 -1117.92309570]
[382.28604126 -1111.41455078]
[395.64370728 -1104.58862305]
[408.83642578 -1097.44909668]
[421.85684204 -1089.99987793]
[434.69769287 -1082.24536133]
[447.35180664 -1074.18957520]
[459.81210327 -1065.83728027]
[472.07165527 -1057.19299316]
[484.12362671 -1048.26147461]
[495.96130371 -1039.04785156]
[507.57803345 -1029.55725098]
[518.96740723 -1019.79486084]
[530.12298584 -1009.76617432]
[541.03857422 -999.47686768]
[551.70812988 -988.93261719]
[562.12567139 -978.13928223]
[572.28533936 -967.10290527]
[582.18157959 -955.82965088]
[591.80871582 -944.32574463]
[601.16149902 -932.59777832]
[610.23468018 -920.65209961]
[619.02319336 -908.49548340]
[627.52209473 -896.13470459]
[635.72668457 -883.57659912]
[643.63238525 -870.82824707]
[651.23480225 -857.89672852]
[658.52966309 -844.78924561]
[665.51287842 -831.51312256]
[672.18060303 -818.07574463]
[678.52911377 -804.48468018]
[684.55480957 -790.74743652]
[690.25439453 -776.87170410]
[695.62463379 -762.86523438]
[700.66259766 -748.73577881]
[705.36541748 -734.49133301]
[709.73046875 -720.13977051]
[713.75531006 -705.68914795]
[717.43780518 -691.14746094]
[720.77575684 -676.52282715]
[723.76739502 -661.82348633]
[726.41094971 -647.05755615]
[728.70507812 -632.23333740]
[730.64843750 -617.35906982]
[732.23992920 -602.44299316]
[733.47863770 -587.49353027]
[734.36395264 -572.51898193]
[734.89532471 -557.52770996]
[735.07250977 -542.52807617]
[734.89532471 -527.52838135]
[734.36395264 -512.53710938]
[733.47863770 -497.56256104]
[732.23986816 -482.61309814]
[730.64837646 -467.69705200]
[728.70501709 -452.82278442]
[726.41088867 -437.99853516]
[723.76733398 -423.23260498]
[720.77569580 -408.53326416]
[717.43768311 -393.90866089]
[713.75524902 -379.36697388]
[709.73034668 -364.91632080]
[705.36529541 -350.56475830]
[700.66247559 -336.32031250]
[695.62451172 -322.19091797]
[690.25427246 -308.18444824]
[684.55468750 -294.30871582]
[678.52893066 -280.57147217]
[672.18048096 -266.98037720]
[665.51275635 -253.54302979]
[658.52947998 -240.26692200]
[651.23461914 -227.15943909]
[643.63220215 -214.22790527]
[635.72650146 -201.47955322]
[627.52191162 -188.92146301]
[619.02294922 -176.56066895]
[610.23449707 -164.40406799]
[601.16131592 -152.45841980]
[591.80853271 -140.73040771]
[582.18133545 -129.22656250]
[572.28509521 -117.95330811]
[562.12542725 -106.91693878]
[551.70788574 -96.12361145]
[541.03833008 -85.57933807]
[530.12274170 -75.29000854]
[518.96710205 -65.26136780]
[507.57775879 -55.49900436]
[495.96102905 -46.00836945]
[484.12335205 -36.79475403]
[472.07138062 -27.86330032]
[459.81182861 -19.21899033]
[447.35150146 -10.86664963]
[434.69738770 -2.81093645]
[421.85653687 4.94365501]
[408.83612061 12.39279747]
[395.64340210 19.53233528]
[382.28573608 26.35828590]
[368.77056885 32.86684036]
[355.10543823 39.05436325]
[341.29800415 44.91741180]
[327.35592651 50.45270538]
[313.28698730 55.65716171]
[299.09906006 60.52787399]
[284.80004883 65.06212616]
[270.39794922 69.25738525]
[255.90077209 73.11131287]
[241.31660461 76.62176514]
[226.65361023 79.78677368]
[211.91993713 82.60457611]
[197.12382507 85.07360840]
[182.27352905 87.19247437]
[167.37731934 88.96001434]
[152.44352722 90.37522125]
[137.48048401 91.43731689]
[122.49651337 92.14570618]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
