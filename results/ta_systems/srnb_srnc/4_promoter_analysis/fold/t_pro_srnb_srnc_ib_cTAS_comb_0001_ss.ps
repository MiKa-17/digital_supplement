%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 16:21:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGAAAUAUGCCCUUAUCGGGUUGCUCGCCGUGUGCGCCACGGUGUUGUGUUUUUCACUGAUAUUCAGGGAACGGUUAUGUGAGCUGAAUAUUCACAGGGGAAAUACAGUGGUGCAGGUAACUCUGGCCUACGAAGCACGGAAG\
) } def
/len { sequence length } bind def

/coor [
[78.06940460 233.03668213]
[67.69032288 243.86601257]
[57.31124115 254.69535828]
[53.34835434 270.01220703]
[38.95586777 273.84701538]
[28.57678604 284.67636108]
[18.19770432 295.50570679]
[22.03346443 307.48632812]
[20.39310646 319.88552856]
[13.65239716 330.33477783]
[3.15538287 336.86474609]
[-9.05319691 338.27633667]
[-20.62610435 334.36041260]
[-31.45544624 344.73950195]
[-42.28478622 355.11859131]
[-53.11412811 365.49765015]
[-54.89082336 381.44204712]
[-68.54064941 389.87185669]
[-83.59262085 384.32049561]
[-88.50016022 369.04647827]
[-79.49861908 355.76672363]
[-63.49320984 354.66833496]
[-52.66387177 344.28924561]
[-41.83452988 333.91015625]
[-31.00518799 323.53106689]
[-34.23102188 306.22406006]
[-26.40036011 290.28204346]
[-10.45284653 282.11361694]
[7.36836195 285.12661743]
[17.74744606 274.29727173]
[28.12652779 263.46792603]
[31.34703064 248.92565918]
[46.48189926 244.31628418]
[56.86098099 233.48693848]
[67.24006653 222.65759277]
[68.36973572 215.95426941]
[73.41474915 210.41082764]
[75.94976044 195.62660217]
[78.48477936 180.84236145]
[81.01979065 166.05812073]
[83.55480194 151.27388000]
[86.08981323 136.48963928]
[88.62482452 121.70540619]
[91.15983582 106.92116547]
[77.42738342 112.95603943]
[64.04727173 106.17573547]
[60.79310608 91.53297424]
[70.04192352 79.72367859]
[85.03784943 79.37404633]
[94.82721710 90.74028778]
[98.91413879 76.30778503]
[103.00106812 61.87528992]
[107.08799744 47.44279099]
[111.17491913 33.01029205]
[115.26184845 18.57779121]
[119.34877777 4.14529228]
[123.43569946 -10.28720665]
[127.52262878 -24.71970558]
[121.91390991 -36.38477707]
[125.66441345 -48.35250854]
[136.22877502 -54.33342361]
[140.62112427 -68.67592621]
[145.01345825 -83.01842499]
[148.94699097 -97.49348450]
[152.41769409 -112.08643341]
[155.88841248 -126.67938232]
[159.35911560 -141.27233887]
[162.82983398 -155.86528015]
[166.30053711 -170.45823669]
[169.77125549 -185.05117798]
[173.24197388 -199.64413452]
[163.31268311 -211.42189026]
[162.23503113 -226.61044312]
[170.21321106 -239.37023926]
[184.00991821 -244.91903687]
[187.48063660 -259.51199341]
[190.95133972 -274.10491943]
[185.74444580 -289.65551758]
[196.80940247 -301.75918579]
[212.76351929 -297.96472168]
[217.19459534 -282.17556763]
[205.54429626 -270.63421631]
[202.07357788 -256.04125977]
[198.60285950 -241.44831848]
[208.42420959 -230.28233337]
[209.80361938 -215.29696655]
[202.00341797 -202.21987915]
[187.83491516 -196.17341614]
[184.36421204 -181.58047485]
[180.89349365 -166.98751831]
[177.42277527 -152.39457703]
[173.95207214 -137.80162048]
[170.48135376 -123.20867157]
[167.01065063 -108.61572266]
[163.53993225 -94.02277374]
[165.12301636 -90.79898834]
[165.18128967 -86.63388062]
[163.28334045 -82.27236176]
[159.35597229 -78.62608337]
[154.96362305 -64.28358459]
[150.57128906 -49.94108200]
[155.44978333 -33.11458206]
[141.95512390 -20.63277817]
[137.86819458 -6.20027971]
[133.78128052 8.23221970]
[129.69435120 22.66471863]
[125.60742188 37.09721756]
[121.52049255 51.52971649]
[117.43356323 65.96221924]
[113.34664154 80.39471436]
[109.25971222 94.82721710]
[105.94407654 109.45617676]
[103.40906525 124.24041748]
[100.87405396 139.02465820]
[98.33904266 153.80889893]
[95.80402374 168.59312439]
[93.26901245 183.37736511]
[90.73400116 198.16160583]
[88.19898987 212.94584656]
[98.05151367 201.63533020]
[109.94963074 192.50106812]
[123.42162323 185.90519714]
[137.93336487 182.10923767]
[152.90951538 181.26368713]
[167.75631714 183.40205383]
[181.88513184 188.43955994]
[194.73580933 196.17649841]
[205.79884338 206.30612183]
[214.63563538 218.42680359]
[220.89582825 232.05801392]
[224.33123779 246.65931702]
[224.80563354 261.65182495]
[222.30023193 276.44110107]
[216.91433716 290.44082642]
[208.86152649 303.09594727]
[198.46102905 313.90472412]
[186.12519836 322.43862915]
[172.34312439 328.35931396]
[157.66122437 331.43203735]
[142.66157532 331.53500366]
[127.93888092 328.66409302]
[114.07683563 322.93313599]
[101.62503052 314.56936646]
[91.07714844 303.90435791]
[82.85137177 291.36099243]
[77.27383423 277.43649292]
[74.56565857 262.68301392]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 35]
[2 34]
[3 33]
[5 31]
[6 30]
[7 29]
[13 25]
[14 24]
[15 23]
[16 22]
[37 119]
[38 118]
[39 117]
[40 116]
[41 115]
[42 114]
[43 113]
[44 112]
[50 111]
[51 110]
[52 109]
[53 108]
[54 107]
[55 106]
[56 105]
[57 104]
[58 103]
[61 101]
[62 100]
[63 99]
[64 95]
[65 94]
[66 93]
[67 92]
[68 91]
[69 90]
[70 89]
[71 88]
[75 84]
[76 83]
[77 82]
] def

init

% Start Annotations
1 35 0.0 0.2 colorpair
2 34 0.16 0.2 colorpair
3 33 0.16 1 colorpair
5 31 0.0 1 colorpair
6 30 0.16 1 colorpair
7 29 0.0 1 colorpair
14 24 0.0 1 colorpair
15 23 0.0 1 colorpair
16 22 0.0 1 colorpair
37 119 0.0 0.6 colorpair
38 118 0.0 1 colorpair
39 117 0.32 1 colorpair
40 116 0.0 1 colorpair
41 115 0.0 0.6 colorpair
42 114 0.16 0.6 colorpair
43 113 0.0 1 colorpair
44 112 0.16 0.6 colorpair
50 111 0.0 0.6 colorpair
51 110 0.0 0.6 colorpair
52 109 0.0 0.6 colorpair
53 108 0.0 0.6 colorpair
54 107 0.0 1 colorpair
55 106 0.0 1 colorpair
56 105 0.0 1 colorpair
57 104 0.0 1 colorpair
58 103 0.0 1 colorpair
61 101 0.0 1 colorpair
62 100 0.0 1 colorpair
63 99 0.0 1 colorpair
64 95 0.0 1 colorpair
65 94 0.0 1 colorpair
66 93 0.0 1 colorpair
67 92 0.16 1 colorpair
68 91 0.0 1 colorpair
69 90 0.0 1 colorpair
70 89 0.0 1 colorpair
71 88 0.0 1 colorpair
75 84 0.0 1 colorpair
76 83 0.0 1 colorpair
77 82 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
1 35 2 gmark
2 34 2 gmark
34 cmark
33 cmark
30 cmark
13 25 3 gmark
13 cmark
25 cmark
37 119 1 gmark
39 cmark
117 cmark
41 115 1 gmark
42 114 1 gmark
42 cmark
44 112 1 gmark
44 cmark
50 111 1 gmark
51 110 1 gmark
52 109 1 gmark
53 108 1 gmark
92 cmark
77 82 1 gmark
77 cmark

% End Annotations
showpage
end
%%EOF
