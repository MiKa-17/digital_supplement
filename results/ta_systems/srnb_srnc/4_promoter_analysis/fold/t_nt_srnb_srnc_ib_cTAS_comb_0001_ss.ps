%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 16:20:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGAAAUAUGCCCUUAUCGGGUUGCUCGCCGUGUGCGCCACGGUGUUGUGUUUUUCACUGAUAUUCAGGGAACGGUUAUGUGAGCUGAAUAUUCACAGGGGAAAUACAGUGGUGCAGGUAACUCUGGCCUACGAAGCACGG__AAGUAA_\
) } def
/len { sequence length } bind def

/coor [
[88.04597473 124.43171692]
[77.99386597 135.56523132]
[67.94175720 146.69874573]
[64.43658447 162.12677002]
[50.16463470 166.38830566]
[40.11252594 177.52182007]
[30.06041527 188.65533447]
[34.24873352 200.50639343]
[32.98395920 212.93922424]
[26.56971169 223.58006287]
[16.28680038 230.42387390]
[4.13792801 232.21202087]
[-7.54224157 228.66334534]
[-18.04010582 239.37757874]
[-28.53797150 250.09181213]
[-39.03583527 260.80606079]
[-40.31065369 276.79837036]
[-53.68885803 285.65292358]
[-68.90782928 280.57727051]
[-74.29288483 265.46499634]
[-65.71305847 251.90895081]
[-49.75007248 250.30818176]
[-39.25220490 239.59394836]
[-28.75434113 228.87971497]
[-18.25647736 218.16548157]
[-22.02179146 200.96040344]
[-14.68256569 184.77819824]
[1.01582789 176.12525940]
[18.92690468 178.60322571]
[28.97901344 167.46971130]
[39.03112411 156.33619690]
[41.81729889 141.70451355]
[56.80824280 136.64662170]
[66.86035156 125.51311493]
[76.91246033 114.37960815]
[74.81827545 89.71953583]
[93.57265472 73.57091522]
[94.18448639 58.58339691]
[94.79631042 43.59587860]
[95.40814209 28.60836220]
[96.01997375 13.62084484]
[96.63179779 -1.36667240]
[97.24362946 -16.35418892]
[97.85546112 -31.34170723]
[85.04055786 -23.54566574]
[70.88480377 -28.50699806]
[65.74068451 -42.59735107]
[73.37022400 -55.51207733]
[88.19374084 -57.80629730]
[99.37071991 -47.80144119]
[101.50543976 -62.64876175]
[103.64015961 -77.49608612]
[105.77488708 -92.34340668]
[107.90960693 -107.19072723]
[110.04432678 -122.03804779]
[112.17905426 -136.88537598]
[114.31377411 -151.73269653]
[116.44849396 -166.58001709]
[109.34300232 -177.39163208]
[111.46563721 -189.74649048]
[121.13288116 -197.08027649]
[123.57002258 -211.88096619]
[126.00716400 -226.68165588]
[127.99033356 -241.54997253]
[129.51768494 -256.47201538]
[131.04502869 -271.39404297]
[132.57237244 -286.31610107]
[134.09971619 -301.23812866]
[135.62705994 -316.16015625]
[137.15440369 -331.08221436]
[138.68174744 -346.00424194]
[127.29391479 -356.37841797]
[124.23406219 -371.29452515]
[130.47032166 -384.99026489]
[143.42036438 -392.30014038]
[144.94770813 -407.22219849]
[146.47505188 -422.14422607]
[139.27413940 -436.87783813]
[148.65655518 -450.32781982]
[164.97047424 -448.65802002]
[171.43353271 -433.58615112]
[161.39709473 -420.61688232]
[159.86975098 -405.69485474]
[158.34240723 -390.77279663]
[169.54301453 -380.99096680]
[172.87538147 -366.31585693]
[166.85716248 -352.32891846]
[153.60379028 -344.47689819]
[152.07644653 -329.55487061]
[150.54910278 -314.63281250]
[149.02175903 -299.71078491]
[147.49440002 -284.78875732]
[145.96705627 -269.86669922]
[144.43971252 -254.94467163]
[142.91236877 -240.02262878]
[144.89640808 -237.03918457]
[145.49948120 -232.92942810]
[144.20057678 -228.36920166]
[140.80784607 -224.24450684]
[138.37071228 -209.44383240]
[135.93356323 -194.64314270]
[143.01367188 -178.61383057]
[131.29582214 -164.44529724]
[129.16110229 -149.59797668]
[127.02637482 -134.75064087]
[124.89165497 -119.90332794]
[122.75692749 -105.05600739]
[120.62220764 -90.20867920]
[118.48748016 -75.36135864]
[116.35276031 -60.51403809]
[114.21804047 -45.66671753]
[112.84297180 -30.72987747]
[112.23114777 -15.74236107]
[111.61931610 -0.75484365]
[111.00749207 14.23267365]
[110.39566040 29.22019005]
[109.78382874 44.20770645]
[109.17200470 59.19522476]
[108.56017303 74.18273926]
[117.31039429 79.02006531]
[123.72155762 86.69229126]
[126.92736053 96.16271210]
[126.49461365 106.15164948]
[122.48179626 115.30934906]
[132.07142639 126.84360504]
[141.77819824 138.27944946]
[151.83030701 149.41296387]
[162.10743713 160.33911133]
[172.38455200 171.26525879]
[182.77259827 182.08601379]
[193.27046204 192.80024719]
[208.84664917 191.41598511]
[221.63882446 200.41011047]
[225.60691833 215.53585815]
[218.87728882 229.65132141]
[204.62750244 236.09161377]
[189.58583069 231.81581116]
[180.85452271 218.84281921]
[182.55622864 203.29811096]
[172.05836487 192.58387756]
[165.08871460 189.99159241]
[161.45840454 181.54237366]
[151.18128967 170.61624146]
[140.90415955 159.69009399]
[136.18577576 158.65414429]
[132.08964539 154.60589600]
[130.44195557 148.10235596]
[123.64391327 145.08865356]
[120.53716278 136.43322754]
[110.94754028 124.89897156]
[106.47547150 126.41733551]
[101.80817413 127.13922882]
[97.08635712 127.04289246]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 35]
[2 34]
[3 33]
[5 31]
[6 30]
[7 29]
[13 25]
[14 24]
[15 23]
[16 22]
[37 119]
[38 118]
[39 117]
[40 116]
[41 115]
[42 114]
[43 113]
[44 112]
[50 111]
[51 110]
[52 109]
[53 108]
[54 107]
[55 106]
[56 105]
[57 104]
[58 103]
[61 101]
[62 100]
[63 99]
[64 95]
[65 94]
[66 93]
[67 92]
[68 91]
[69 90]
[70 89]
[71 88]
[75 84]
[76 83]
[77 82]
[124 150]
[125 149]
[126 147]
[127 144]
[128 143]
[129 142]
[130 140]
[131 139]
] def

init

% Start Annotations
1 35 0.0 1 colorpair
2 34 0.16 1 colorpair
3 33 0.16 1 colorpair
5 31 0.0 1 colorpair
6 30 0.16 1 colorpair
7 29 0.0 1 colorpair
14 24 0.0 1 colorpair
15 23 0.0 1 colorpair
16 22 0.0 1 colorpair
37 119 0.16 1 colorpair
38 118 0.0 1 colorpair
39 117 0.16 1 colorpair
40 116 0.0 1 colorpair
41 115 0.0 0.6 colorpair
42 114 0.16 0.6 colorpair
43 113 0.0 0.6 colorpair
44 112 0.16 0.2 colorpair
50 111 0.0 0.6 colorpair
51 110 0.0 0.6 colorpair
52 109 0.0 0.6 colorpair
53 108 0.0 0.6 colorpair
54 107 0.0 1 colorpair
55 106 0.0 1 colorpair
56 105 0.0 1 colorpair
57 104 0.0 1 colorpair
58 103 0.0 1 colorpair
61 101 0.0 1 colorpair
62 100 0.0 1 colorpair
63 99 0.0 1 colorpair
64 95 0.0 1 colorpair
65 94 0.0 1 colorpair
66 93 0.0 1 colorpair
67 92 0.16 1 colorpair
68 91 0.0 1 colorpair
69 90 0.0 1 colorpair
70 89 0.0 1 colorpair
71 88 0.0 1 colorpair
75 84 0.0 1 colorpair
76 83 0.0 1 colorpair
77 82 0.16 0.6 colorpair
124 150 0.0 0.6 colorpair
125 149 0.0 0.2 colorpair
126 147 0.16 0.2 colorpair
127 144 0.32 0.6 colorpair
128 143 0.16 1 colorpair
129 142 0.16 0.6 colorpair
130 140 0.32 1 colorpair
131 139 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
34 cmark
33 cmark
30 cmark
13 25 3 gmark
13 cmark
25 cmark
119 cmark
39 cmark
41 115 1 gmark
42 114 1 gmark
42 cmark
43 113 1 gmark
44 112 2 gmark
44 cmark
50 111 1 gmark
51 110 1 gmark
52 109 1 gmark
53 108 1 gmark
92 cmark
77 82 1 gmark
77 cmark
124 150 1 gmark
125 149 2 gmark
126 147 2 gmark
126 cmark
147 cmark
127 144 1 gmark
127 cmark
144 cmark
143 cmark
129 142 1 gmark
142 cmark
130 cmark
140 cmark
131 139 2 gmark

% End Annotations
showpage
end
%%EOF
