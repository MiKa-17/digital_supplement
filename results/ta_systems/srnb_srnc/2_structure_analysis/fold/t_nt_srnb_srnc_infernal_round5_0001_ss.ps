%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Dec 20 07:08:39 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGAAAUAUGCCCUUAUCGGGUUGCUCGCCGUGUGCGCCACGGUGUUGUGUU_UUUCACUGAUAUUCAGGGAACGGUUAUGUGAGCUGAAUAUUCACAGGGGAAAUAC______AGUGGUGCAGGUAACUCUGGCCUACGAAGCACGGAAGUAA__\
) } def
/len { sequence length } bind def

/coor [
[124.05042267 274.37612915]
[113.85897064 285.38223267]
[99.99845886 291.11688232]
[85.00999451 290.52871704]
[71.64147949 283.72555542]
[62.34381866 271.95468140]
[58.82159424 257.37408447]
[61.72055435 242.65687561]
[70.51176453 230.49896240]
[74.45145416 216.02557373]
[78.39114380 201.55218506]
[82.33082581 187.07881165]
[86.27051544 172.60542297]
[90.21019745 158.13203430]
[82.71598053 157.83758545]
[72.31967163 168.65039062]
[61.92335892 179.46319580]
[58.51821136 195.50492859]
[42.84152985 200.31883240]
[31.02014542 188.95278931]
[35.21488190 173.09921265]
[51.11055756 169.06687927]
[61.50686646 158.25408936]
[71.90317535 147.44128418]
[63.65970612 140.78620911]
[56.91350174 132.74493408]
[51.88767624 123.64205933]
[48.73697662 113.83586121]
[47.54322815 103.70423126]
[48.31358719 93.63013458]
[50.98169327 83.98713684]
[55.41149521 75.12555695]
[61.40372467 67.35974884]
[68.70455170 60.95694733]
[77.01619720 56.12818146]
[86.00898743 53.02139282]
[95.33435822 51.71712112]
[96.21742249 36.74313736]
[97.10048676 21.76915169]
[90.18903351 7.53741360]
[98.66217804 -4.71228313]
[99.54523468 -19.68626785]
[100.42829895 -34.66025162]
[87.49876404 -27.05583763]
[73.42109680 -32.23457336]
[68.50183868 -46.40499496]
[76.34248352 -59.19265747]
[91.20273590 -61.23545456]
[102.20369720 -51.03632355]
[104.55021667 -65.85164642]
[106.02046967 -80.77941895]
[106.60936737 -95.76785278]
[107.19826508 -110.75629425]
[107.78716278 -125.74472809]
[108.37606049 -140.73316956]
[105.57497406 -149.48329163]
[109.12652588 -156.00926208]
[110.00959015 -170.98324585]
[110.89264679 -185.95722961]
[102.75263977 -173.35801697]
[91.78580475 -163.12431335]
[78.65438080 -155.87409973]
[64.15130615 -152.04515076]
[49.15234375 -151.86871338]
[34.56320572 -155.35540771]
[21.26485825 -162.29472351]
[10.06031799 -172.26759338]
[1.62617171 -184.67182922]
[-3.52828670 -198.75840759]
[-5.09180546 -213.67669678]
[-2.96997166 -228.52586365]
[2.70908809 -242.40925598]
[11.60244370 -254.48849487]
[23.17307281 -264.03421021]
[36.72228241 -270.46997070]
[51.43190384 -273.40713501]
[66.41370392 -272.66836548]
[80.76300049 -268.29827881]
[93.61331177 -260.56076050]
[104.18868256 -249.92301941]
[111.85051727 -237.02742004]
[116.13615417 -222.65267944]
[116.78717041 -207.67138672]
[123.59702301 -221.03648376]
[130.40689087 -234.40158081]
[137.21673584 -247.76667786]
[144.02659607 -261.13177490]
[150.83645630 -274.49688721]
[144.56022644 -288.81967163]
[149.00846863 -303.81124878]
[162.08085632 -312.39303589]
[177.60501099 -310.51293945]
[188.25090027 -299.05871582]
[188.99185181 -283.43869019]
[179.47802734 -271.02816772]
[164.20155334 -267.68701172]
[157.39169312 -254.32191467]
[150.58183289 -240.95681763]
[143.77198792 -227.59172058]
[136.96212769 -214.22662354]
[130.15226746 -200.86152649]
[131.32743835 -195.69338989]
[129.95655823 -190.00454712]
[125.86663055 -185.07415771]
[124.98357391 -170.10017395]
[124.10050964 -155.12619019]
[123.36449432 -140.14427185]
[122.77559662 -125.15583038]
[122.18669891 -110.16739655]
[121.59780121 -95.17895508]
[121.00890350 -80.19052124]
[132.94209290 -89.27892303]
[147.82984924 -87.44734955]
[157.20433044 -75.73755646]
[155.73350525 -60.80984116]
[144.25396729 -51.15478134]
[129.29504395 -52.26397324]
[119.36553955 -63.50513077]
[117.01902008 -48.68980789]
[115.40228271 -33.77719116]
[114.51921844 -18.80320549]
[113.63616180 -3.82922101]
[120.61077881 9.33147812]
[112.07447052 22.65221405]
[111.19140625 37.62619781]
[110.30834198 52.60018158]
[126.57005310 58.28893661]
[140.10671997 69.47457886]
[149.09286499 84.94663239]
[152.21543884 102.90162659]
[148.86093140 121.15260315]
[139.21926880 137.39540100]
[124.28800964 149.49948120]
[133.80390930 161.09463501]
[143.31980896 172.68980408]
[152.83570862 184.28495789]
[167.65480042 180.63018799]
[182.59031677 183.77552795]
[194.67678833 193.09646606]
[201.51446533 206.74230957]
[201.74568176 222.00367737]
[195.32456970 235.85040283]
[183.52601624 245.53321838]
[168.69265747 249.12960815]
[153.76963806 245.92547607]
[141.71995544 236.55702209]
[134.93608093 222.88435364]
[134.76495361 207.62219238]
[141.24055481 193.80085754]
[131.72465515 182.20570374]
[122.20875549 170.61053467]
[112.69285583 159.01538086]
[105.19863129 158.72093201]
[107.99060822 173.45880127]
[110.78257751 188.19668579]
[113.57455444 202.93455505]
[116.36652374 217.67242432]
[119.15850067 232.41029358]
[126.96759796 245.21725464]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 24]
[16 23]
[17 22]
[37 126]
[38 125]
[39 124]
[41 122]
[42 121]
[43 120]
[49 119]
[50 118]
[51 111]
[52 110]
[53 109]
[54 108]
[55 107]
[57 106]
[58 105]
[59 104]
[83 101]
[84 100]
[85 99]
[86 98]
[87 97]
[88 96]
[133 152]
[134 151]
[135 150]
[136 149]
] def

init

% Start Annotations
15 24 0.16 0.6 colorpair
16 23 0.16 0.2 colorpair
17 22 0.16 0.2 colorpair
37 126 0.0 0.6 colorpair
38 125 0.0 1 colorpair
41 122 0.16 0.6 colorpair
43 120 0.0 1 colorpair
49 119 0.32 0.2 colorpair
50 118 0.16 0.6 colorpair
51 111 0.0 0.6 colorpair
52 110 0.0 0.6 colorpair
53 109 0.32 0.6 colorpair
54 108 0.32 0.6 colorpair
55 107 0.16 1 colorpair
57 106 0.16 1 colorpair
58 105 0.16 1 colorpair
59 104 0.0 1 colorpair
83 101 0.16 1 colorpair
84 100 0.16 0.6 colorpair
85 99 0.16 0.6 colorpair
86 98 0.32 0.6 colorpair
134 151 0.32 0.2 colorpair
135 150 0.16 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
15 24 1 gmark
15 cmark
16 23 2 gmark
16 cmark
17 22 2 gmark
17 cmark
37 126 1 gmark
39 124 6 gmark
39 cmark
124 cmark
41 122 1 gmark
41 cmark
42 121 4 gmark
42 cmark
49 119 2 gmark
49 cmark
119 cmark
50 118 1 gmark
118 cmark
51 111 1 gmark
52 110 1 gmark
53 109 1 gmark
53 cmark
109 cmark
54 108 1 gmark
54 cmark
108 cmark
107 cmark
106 cmark
58 cmark
101 cmark
84 100 1 gmark
100 cmark
85 99 1 gmark
85 cmark
99 cmark
86 98 1 gmark
86 cmark
98 cmark
87 97 3 gmark
87 cmark
97 cmark
88 96 5 gmark
88 cmark
133 152 4 gmark
133 cmark
152 cmark
134 151 2 gmark
134 cmark
151 cmark
135 150 2 gmark
150 cmark
136 149 5 gmark
136 cmark
149 cmark

% End Annotations
showpage
end
%%EOF
