%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Dec 20 07:08:41 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGAAAUAUGCCCUUAUCGGGUUGCUCGCCGUGUGCGCCACGGUGUUGUGUU_UUUCACUGAUAUUCAGGGAACGGUUAUGUGAACUGAAUAUUCACAGGGGAAAUAC______AGUGGUGCAGGUAACUCUGGCCUACGAAGCA__CGGAAGUAA\
) } def
/len { sequence length } bind def

/coor [
[120.52764130 246.02909851]
[112.64205933 258.78909302]
[99.36555481 265.77011108]
[84.38362122 265.03424072]
[71.85514069 256.78576660]
[65.25795746 243.31443787]
[66.42340088 228.35977173]
[75.02840424 216.07276917]
[78.68315887 201.52482605]
[82.33792114 186.97688293]
[85.99268341 172.42893982]
[89.64744568 157.88098145]
[82.15647888 157.51298523]
[71.97446442 168.52781677]
[61.79245758 179.54264832]
[63.94525528 195.03134155]
[55.59470367 208.25262451]
[40.68368149 212.96382141]
[26.25270844 206.94044495]
[19.11565590 193.02655029]
[22.64241982 177.79185486]
[35.16777039 168.42970276]
[50.77761841 169.36064148]
[60.95962906 158.34580994]
[71.14163971 147.33096313]
[62.36734772 139.93504333]
[55.38743591 130.97375488]
[50.46675873 120.86564636]
[47.77552032 110.07051849]
[47.38374329 99.06861877]
[49.26024246 88.33925629]
[53.27604675 78.33994293]
[59.21203613 69.48689270]
[66.77039337 62.13769531]
[75.58922577 56.57695389]
[85.25977325 53.00542831]
[95.34521484 51.53304291]
[96.22827911 36.55905914]
[97.11134338 21.58507347]
[90.19988251 7.35333443]
[98.67303467 -4.89636230]
[99.55609131 -19.87034607]
[100.43915558 -34.84432983]
[87.50962067 -27.23991776]
[73.43195343 -32.41865158]
[68.51269531 -46.58907700]
[76.35334015 -59.37673950]
[91.21358490 -61.41953278]
[102.21455383 -51.22040176]
[104.56106567 -66.03572845]
[106.03132629 -80.96350098]
[106.62022400 -95.95193481]
[107.20912170 -110.94036865]
[107.79801941 -125.92880249]
[108.38691711 -140.91723633]
[105.58583069 -149.66737366]
[109.13738251 -156.19334412]
[110.02044678 -171.16732788]
[110.90350342 -186.14131165]
[102.76349640 -173.54208374]
[91.79666138 -163.30839539]
[78.66523743 -156.05816650]
[64.16216278 -152.22923279]
[49.16319656 -152.05279541]
[34.57406235 -155.53948975]
[21.27571297 -162.47879028]
[10.07117367 -172.45167542]
[1.63702738 -184.85591125]
[-3.51743102 -198.94248962]
[-5.08094978 -213.86077881]
[-2.95911574 -228.70994568]
[2.71994376 -242.59332275]
[11.61329937 -254.67257690]
[23.18392754 -264.21829224]
[36.73313522 -270.65405273]
[51.44276047 -273.59121704]
[66.42455292 -272.85244751]
[80.77384949 -268.48236084]
[93.62416840 -260.74484253]
[104.19953918 -250.10710144]
[111.86137390 -237.21150208]
[116.14701080 -222.83676147]
[116.79802704 -207.85546875]
[123.60787964 -221.22056580]
[130.41773987 -234.58566284]
[137.22760010 -247.95075989]
[144.03746033 -261.31585693]
[150.84730530 -274.68093872]
[144.57107544 -289.00375366]
[149.01931763 -303.99533081]
[162.09170532 -312.57708740]
[177.61585999 -310.69702148]
[188.26174927 -299.24279785]
[189.00271606 -283.62277222]
[179.48889160 -271.21224976]
[164.21241760 -267.87109375]
[157.40255737 -254.50599670]
[150.59269714 -241.14089966]
[143.78283691 -227.77580261]
[136.97297668 -214.41070557]
[130.16311646 -201.04560852]
[131.33828735 -195.87747192]
[129.96742249 -190.18862915]
[125.87748718 -185.25823975]
[124.99443054 -170.28425598]
[124.11136627 -155.31027222]
[123.37535095 -140.32833862]
[122.78645325 -125.33990479]
[122.19755554 -110.35147095]
[121.60865784 -95.36303711]
[121.01976013 -80.37460327]
[132.95294189 -89.46300507]
[147.84071350 -87.63142395]
[157.21517944 -75.92163849]
[155.74436951 -60.99391937]
[144.26483154 -51.33885956]
[129.30589294 -52.44805527]
[119.37639618 -63.68921280]
[117.02987671 -48.87388611]
[115.41313934 -33.96126938]
[114.53007507 -18.98728371]
[113.64701843 -4.01329994]
[120.62163544 9.14739895]
[112.08532715 22.46813583]
[111.20226288 37.44211960]
[110.31919861 52.41610336]
[126.69647217 58.13388824]
[140.32464600 69.40569305]
[149.35324097 85.00598145]
[152.45231628 103.10608673]
[149.00360107 121.48783875]
[139.20617676 137.81533813]
[124.08015442 149.93167114]
[133.13348389 161.89147949]
[142.18682861 173.85128784]
[151.24017334 185.81109619]
[165.93971252 181.93914795]
[181.00137329 183.99214172]
[194.12835693 191.65702820]
[203.31890869 203.76496887]
[207.17152405 218.46958923]
[205.09870911 233.52853394]
[197.41656494 246.64543152]
[185.29653931 255.82005310]
[170.58686829 259.65332031]
[155.53067017 257.56069946]
[142.42388916 249.86129761]
[133.26521301 237.72921753]
[129.45130920 223.01452637]
[131.56372070 207.96107483]
[139.28036499 194.86444092]
[130.22702026 182.90463257]
[121.17368317 170.94482422]
[112.12033844 158.98501587]
[104.62937927 158.61700439]
[106.84059143 173.45312500]
[109.05180359 188.28924561]
[111.26301575 203.12536621]
[113.47423553 217.96148682]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 25]
[14 24]
[15 23]
[37 126]
[38 125]
[39 124]
[41 122]
[42 121]
[43 120]
[49 119]
[50 118]
[51 111]
[52 110]
[53 109]
[54 108]
[55 107]
[57 106]
[58 105]
[59 104]
[83 101]
[84 100]
[85 99]
[86 98]
[87 97]
[88 96]
[133 154]
[134 153]
[135 152]
[136 151]
] def

init

% Start Annotations
14 24 0.0 0.6 colorpair
15 23 0.16 1 colorpair
37 126 0.0 0.2 colorpair
38 125 0.0 1 colorpair
41 122 0.16 0.2 colorpair
43 120 0.0 1 colorpair
50 118 0.16 0.2 colorpair
51 111 0.0 0.2 colorpair
52 110 0.0 0.2 colorpair
53 109 0.32 0.2 colorpair
54 108 0.32 0.6 colorpair
55 107 0.16 1 colorpair
57 106 0.16 1 colorpair
58 105 0.16 1 colorpair
59 104 0.0 1 colorpair
83 101 0.16 1 colorpair
84 100 0.16 0.6 colorpair
85 99 0.16 0.6 colorpair
86 98 0.32 0.6 colorpair
134 153 0.32 0.2 colorpair
135 152 0.32 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
13 25 23 gmark
13 cmark
25 cmark
14 24 1 gmark
15 cmark
37 126 2 gmark
39 124 12 gmark
39 cmark
124 cmark
41 122 2 gmark
41 cmark
42 121 8 gmark
42 cmark
49 119 5 gmark
49 cmark
119 cmark
50 118 2 gmark
118 cmark
51 111 2 gmark
52 110 2 gmark
53 109 2 gmark
53 cmark
109 cmark
54 108 1 gmark
54 cmark
108 cmark
107 cmark
106 cmark
58 cmark
101 cmark
84 100 1 gmark
100 cmark
85 99 1 gmark
85 cmark
99 cmark
86 98 1 gmark
86 cmark
98 cmark
87 97 6 gmark
87 cmark
97 cmark
88 96 11 gmark
88 cmark
133 154 11 gmark
133 cmark
154 cmark
134 153 2 gmark
134 cmark
153 cmark
135 152 2 gmark
135 cmark
152 cmark
136 151 8 gmark
136 cmark
151 cmark

% End Annotations
showpage
end
%%EOF
