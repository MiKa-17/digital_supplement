%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 16:30:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGAAAUAUGCCCUUAUCGGGCUGCUCGCCGUGUGCGCCACGGUGUUGUGUUUUUCACUGAUAUUCAGGGAACGGUUAUGUGAGCUGAAUAUUCACAGGGGAAAUACAGUGGUGCAGGUAACUCUGGCCUACGAAGCACGGAAGUAA\
) } def
/len { sequence length } bind def

/coor [
[88.27475739 123.62657928]
[78.06127930 134.61224365]
[67.84780121 145.59790039]
[57.63431931 156.58357239]
[47.42083740 167.56924438]
[37.20735931 178.55490112]
[26.99387741 189.54057312]
[31.00993919 201.45642090]
[29.56101799 213.87419128]
[22.98608589 224.42240906]
[12.59706497 231.11328125]
[0.41747674 232.71714783]
[-11.21157646 228.98811340]
[-21.87320328 239.53941345]
[-32.53482819 250.09069824]
[-43.19645691 260.64199829]
[-44.71741486 276.61279297]
[-58.23040009 285.26025391]
[-73.36940002 279.95080566]
[-78.52107239 264.75741577]
[-69.73349762 251.33509827]
[-53.74774551 249.98036194]
[-43.08612061 239.42907715]
[-32.42449188 228.87777710]
[-21.76286697 218.32649231]
[-25.26417160 201.06935120]
[-17.68315887 185.00297546]
[-1.86082518 176.58654785]
[16.00821304 179.32708740]
[26.22169304 168.34141541]
[36.43517303 157.35575867]
[46.64865494 146.37008667]
[56.86213303 135.38442993]
[67.07561493 124.39876556]
[77.28909302 113.41310120]
[75.98680878 89.08838654]
[95.16634369 74.07062531]
[96.72392273 59.15171814]
[98.28150177 44.23280334]
[99.83908844 29.31389236]
[101.39666748 14.39498043]
[102.95424652 -0.52393198]
[104.51182556 -15.44284439]
[106.06941223 -30.36175728]
[92.77559662 -23.41376495]
[78.97010803 -29.27963257]
[74.74362946 -43.67188263]
[83.18538666 -56.07094955]
[98.12512970 -57.41411209]
[108.64289856 -46.72025681]
[111.74121857 -61.39678192]
[114.83954620 -76.07330322]
[117.93786621 -90.74983215]
[121.03618622 -105.42636108]
[124.13450623 -120.10288239]
[127.23283386 -134.77940369]
[130.33114624 -149.45593262]
[133.42947388 -164.13246155]
[136.52780151 -178.80899048]
[135.23587036 -187.91847229]
[139.84625244 -193.75714111]
[143.24923706 -208.36602783]
[146.65220642 -222.97492981]
[149.59768677 -237.68289185]
[152.08280945 -252.47560120]
[154.56793213 -267.26831055]
[157.05305481 -282.06100464]
[159.53816223 -296.85372925]
[162.02328491 -311.64642334]
[164.50840759 -326.43911743]
[166.99353027 -341.23184204]
[156.29739380 -352.31781006]
[154.20446777 -367.40002441]
[161.30975342 -380.66574097]
[174.70364380 -387.12649536]
[177.18876648 -401.91921997]
[179.67388916 -416.71191406]
[173.43673706 -431.87866211]
[183.66581726 -444.69653320]
[199.83833313 -441.97961426]
[205.31738281 -426.52282715]
[194.46659851 -414.22680664]
[191.98147583 -399.43408203]
[189.49635315 -384.64138794]
[200.04379272 -374.15856934]
[202.42420959 -359.29928589]
[195.51774597 -345.72894287]
[181.78622437 -338.74673462]
[179.30111694 -323.95401001]
[176.81599426 -309.16131592]
[174.33087158 -294.36859131]
[171.84574890 -279.57589722]
[169.36064148 -264.78317261]
[166.87551880 -249.99047852]
[164.39039612 -235.19776917]
[166.18197632 -232.09008789]
[166.51918030 -227.94424438]
[164.92362976 -223.47135925]
[161.26110840 -219.57194519]
[157.85812378 -204.96305847]
[154.45515442 -190.35417175]
[151.20431519 -175.71066284]
[148.10600281 -161.03413391]
[145.00767517 -146.35760498]
[141.90936279 -131.68109131]
[138.81103516 -117.00456238]
[135.71270752 -102.32803345]
[132.61439514 -87.65151215]
[129.51606750 -72.97498322]
[126.41774750 -58.29845810]
[123.31942749 -43.62193298]
[120.98831940 -28.80417633]
[119.43074036 -13.88526344]
[117.87316132 1.03364897]
[116.31558228 15.95256138]
[114.75799561 30.87147331]
[113.20041656 45.79038620]
[111.64283752 60.70929718]
[110.08525848 75.62821198]
[118.16538239 80.87631226]
[123.82158661 88.67620087]
[126.29914093 97.98709106]
[125.26744080 107.56657410]
[120.86415100 116.13640594]
[129.63035583 128.30824280]
[138.39657593 140.48007202]
[147.28892517 152.56007385]
[156.30644226 164.54690552]
[165.32397461 176.53373718]
[174.46571350 188.42611694]
[183.73066711 200.22274780]
[199.36486816 200.54788208]
[211.09825134 210.88526917]
[213.39068604 226.35391235]
[205.15974426 239.64997864]
[190.29183960 244.49549866]
[175.80711365 238.60253906]
[168.54483032 224.75358582]
[171.93402100 209.48770142]
[162.66906738 197.69105530]
[156.02119446 194.35169983]
[153.33714294 185.55126953]
[144.31961060 173.56443787]
[135.30207825 161.57759094]
[128.72511292 158.10066223]
[126.22473145 149.24629211]
[117.45852661 137.07444763]
[108.69231415 124.90261078]
[103.59458160 126.12997437]
[98.35478973 126.32469940]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 35]
[2 34]
[3 33]
[4 32]
[5 31]
[6 30]
[7 29]
[13 25]
[14 24]
[15 23]
[16 22]
[37 119]
[38 118]
[39 117]
[40 116]
[41 115]
[42 114]
[43 113]
[44 112]
[50 111]
[51 110]
[52 109]
[53 108]
[54 107]
[55 106]
[56 105]
[57 104]
[58 103]
[59 102]
[61 101]
[62 100]
[63 99]
[64 95]
[65 94]
[66 93]
[67 92]
[68 91]
[69 90]
[70 89]
[71 88]
[75 84]
[76 83]
[77 82]
[124 148]
[125 147]
[126 146]
[127 144]
[128 143]
[129 142]
[130 140]
[131 139]
] def

init

% Start Annotations
1 35 0.0 1 colorpair
2 34 0.0 1 colorpair
3 33 0.0 1 colorpair
4 32 0.0 0.2 colorpair
5 31 0.0 1 colorpair
6 30 0.0 1 colorpair
7 29 0.0 1 colorpair
13 25 0.16 1 colorpair
14 24 0.0 1 colorpair
15 23 0.0 1 colorpair
16 22 0.0 1 colorpair
37 119 0.0 1 colorpair
38 118 0.0 1 colorpair
39 117 0.0 1 colorpair
40 116 0.0 1 colorpair
41 115 0.0 1 colorpair
42 114 0.0 1 colorpair
43 113 0.0 1 colorpair
44 112 0.0 1 colorpair
50 111 0.0 1 colorpair
51 110 0.0 1 colorpair
52 109 0.0 1 colorpair
53 108 0.0 1 colorpair
54 107 0.0 1 colorpair
55 106 0.0 1 colorpair
56 105 0.0 1 colorpair
57 104 0.0 1 colorpair
58 103 0.0 1 colorpair
59 102 0.0 1 colorpair
61 101 0.0 1 colorpair
62 100 0.0 1 colorpair
63 99 0.0 1 colorpair
64 95 0.0 1 colorpair
65 94 0.0 1 colorpair
66 93 0.0 1 colorpair
67 92 0.0 1 colorpair
68 91 0.0 1 colorpair
69 90 0.0 1 colorpair
70 89 0.0 1 colorpair
71 88 0.0 1 colorpair
75 84 0.0 1 colorpair
76 83 0.0 1 colorpair
77 82 0.0 1 colorpair
124 148 0.0 1 colorpair
125 147 0.0 1 colorpair
126 146 0.0 1 colorpair
127 144 0.0 1 colorpair
128 143 0.0 1 colorpair
129 142 0.0 1 colorpair
130 140 0.0 1 colorpair
131 139 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
4 32 2 gmark
25 cmark

% End Annotations
showpage
end
%%EOF
