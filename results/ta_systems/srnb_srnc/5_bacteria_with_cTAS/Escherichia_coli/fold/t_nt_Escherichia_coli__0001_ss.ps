%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Sat Jan 11 16:22:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGAAAUAUGCCCUUAUCGGGUUGCUCGCCGUGUGCGCCACGGUGUUGUGUUUUUCACUGAUAUUCAGGGAACGGUUAUGUGAGCUGAAUAUUCACAGGGGAAAUACAGUGGUGCAGGUAACUCUGGCCUACGAAGCACGG__AAGUAA_\
) } def
/len { sequence length } bind def

/coor [
[65.75028229 252.52232361]
[53.07015610 244.50892639]
[44.33633804 232.31382751]
[40.83211899 217.72889709]
[43.07323456 202.89476013]
[33.02112198 214.02825928]
[22.96901321 225.16177368]
[27.15732956 237.01283264]
[25.89255714 249.44566345]
[19.47830963 260.08651733]
[9.19539738 266.93032837]
[-2.95347452 268.71847534]
[-14.63364410 265.16979980]
[-25.13150978 275.88403320]
[-35.62937546 286.59826660]
[-46.12723923 297.31250000]
[-47.40205765 313.30480957]
[-60.78026199 322.15936279]
[-75.99923706 317.08370972]
[-81.38428497 301.97143555]
[-72.80446625 288.41540527]
[-56.84147263 286.81463623]
[-46.34360886 276.10040283]
[-35.84574509 265.38616943]
[-25.34787941 254.67192078]
[-29.11319542 237.46684265]
[-21.77396774 221.28463745]
[-6.07557487 212.63169861]
[11.83550167 215.10966492]
[21.88761139 203.97615051]
[31.93972015 192.84263611]
[40.30504990 180.39189148]
[46.81330872 166.87734985]
[53.32156372 153.36282349]
[59.82981873 139.84829712]
[66.33807373 126.33375549]
[72.84632874 112.81922913]
[90.91452789 84.64205933]
[91.52635193 69.65454865]
[92.13818359 54.66702652]
[92.75001526 39.67951202]
[93.36183929 24.69199371]
[93.97367096 9.70447731]
[94.58549500 -5.28304005]
[81.77059174 2.51300025]
[67.61484528 -2.44833279]
[62.47072983 -16.53868484]
[70.10026550 -29.45341110]
[84.92378235 -31.74763107]
[96.10075378 -21.74277496]
[98.23548126 -36.59009552]
[100.37020111 -51.43741608]
[102.50492859 -66.28473663]
[104.63964844 -81.13205719]
[106.77436829 -95.97938538]
[108.90909576 -110.82670593]
[111.04381561 -125.67402649]
[113.17853546 -140.52134705]
[106.07304382 -151.33296204]
[108.19567871 -163.68782043]
[117.86292267 -171.02160645]
[120.30006409 -185.82229614]
[122.73720551 -200.62298584]
[124.72037506 -215.49131775]
[126.24771881 -230.41334534]
[127.77506256 -245.33538818]
[129.30241394 -260.25741577]
[130.82975769 -275.17947388]
[132.35710144 -290.10150146]
[133.88444519 -305.02352905]
[135.41178894 -319.94558716]
[124.02395630 -330.31973267]
[120.96410370 -345.23587036]
[127.20036316 -358.93161011]
[140.15040588 -366.24148560]
[141.67774963 -381.16351318]
[143.20509338 -396.08557129]
[136.00418091 -410.81915283]
[145.38659668 -424.26916504]
[161.70051575 -422.59933472]
[168.16357422 -407.52749634]
[158.12713623 -394.55822754]
[156.59979248 -379.63616943]
[155.07244873 -364.71414185]
[166.27305603 -354.93231201]
[169.60542297 -340.25717163]
[163.58720398 -326.27026367]
[150.33383179 -318.41824341]
[148.80648804 -303.49618530]
[147.27914429 -288.57415771]
[145.75178528 -273.65213013]
[144.22444153 -258.73007202]
[142.69709778 -243.80804443]
[141.16975403 -228.88600159]
[139.64241028 -213.96395874]
[141.62643433 -210.98052979]
[142.22952271 -206.87075806]
[140.93061829 -202.31054688]
[137.53788757 -198.18585205]
[135.10075378 -183.38516235]
[132.66360474 -168.58447266]
[139.74371338 -152.55516052]
[128.02586365 -138.38662720]
[125.89113617 -123.53930664]
[123.75641632 -108.69197845]
[121.62168884 -93.84465790]
[119.48696899 -78.99733734]
[117.35224915 -64.15001678]
[115.21752167 -49.30269623]
[113.08280182 -34.45537186]
[110.94808197 -19.60805130]
[109.57301331 -4.67121124]
[108.96118927 10.31630611]
[108.34935760 25.30382347]
[107.73752594 40.29133987]
[107.12570190 55.27885818]
[106.51387024 70.26637268]
[105.90204620 85.25389099]
[113.75256348 98.03549194]
[127.39704132 104.26671600]
[141.04151917 110.49794006]
[154.68600464 116.72916412]
[168.72688293 109.84529877]
[183.89520264 113.64741516]
[193.02894592 126.34027863]
[191.81542969 141.93070984]
[180.82765198 153.05737305]
[165.25370789 154.46661377]
[152.44711304 145.49301147]
[148.45477295 130.37364197]
[134.81030273 124.14242554]
[121.16581726 117.91119385]
[107.52133942 111.67996979]
[118.81383514 121.55313873]
[119.14096069 136.54957581]
[108.28973389 146.90577698]
[93.32489777 145.87928772]
[83.98937988 134.13841248]
[86.36086273 119.32748413]
[79.85260773 132.84201050]
[73.34435272 146.35655212]
[66.83609772 159.87107849]
[60.32783890 173.38562012]
[53.81958389 186.90014648]
[66.70387268 179.21931458]
[81.53121948 176.95001221]
[96.12299347 180.42567444]
[108.33517456 189.13558960]
[116.37337494 201.80000305]
[119.05652618 216.55807495]
[115.99037933 231.24136353]
[107.62545013 243.69238281]
[95.19082642 252.08166504]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 31]
[6 30]
[7 29]
[13 25]
[14 24]
[15 23]
[16 22]
[32 144]
[33 143]
[34 142]
[35 141]
[36 140]
[37 139]
[38 118]
[39 117]
[40 116]
[41 115]
[42 114]
[43 113]
[44 112]
[50 111]
[51 110]
[52 109]
[53 108]
[54 107]
[55 106]
[56 105]
[57 104]
[58 103]
[61 101]
[62 100]
[63 99]
[64 95]
[65 94]
[66 93]
[67 92]
[68 91]
[69 90]
[70 89]
[71 88]
[75 84]
[76 83]
[77 82]
[119 133]
[120 132]
[121 131]
[122 130]
] def

init

% Start Annotations
5 31 0.0 1 colorpair
6 30 0.16 1 colorpair
7 29 0.0 1 colorpair
14 24 0.0 1 colorpair
15 23 0.0 1 colorpair
16 22 0.0 1 colorpair
32 144 0.0 0.6 colorpair
33 143 0.16 0.6 colorpair
34 142 0.16 0.2 colorpair
35 141 0.0 0.2 colorpair
36 140 0.16 1 colorpair
37 139 0.16 1 colorpair
38 118 0.0 1 colorpair
39 117 0.16 1 colorpair
40 116 0.0 1 colorpair
41 115 0.0 0.6 colorpair
42 114 0.16 0.6 colorpair
43 113 0.0 0.6 colorpair
44 112 0.16 0.6 colorpair
50 111 0.0 0.6 colorpair
51 110 0.0 0.6 colorpair
52 109 0.0 0.6 colorpair
53 108 0.0 0.6 colorpair
54 107 0.0 1 colorpair
55 106 0.0 1 colorpair
56 105 0.0 1 colorpair
57 104 0.0 1 colorpair
58 103 0.0 1 colorpair
61 101 0.0 1 colorpair
62 100 0.0 1 colorpair
63 99 0.0 1 colorpair
64 95 0.0 1 colorpair
65 94 0.0 1 colorpair
66 93 0.0 1 colorpair
67 92 0.16 1 colorpair
68 91 0.0 1 colorpair
69 90 0.0 1 colorpair
70 89 0.0 1 colorpair
71 88 0.0 1 colorpair
75 84 0.0 1 colorpair
76 83 0.0 1 colorpair
77 82 0.16 0.6 colorpair
119 133 0.0 0.2 colorpair
120 132 0.0 0.2 colorpair
121 131 0.0 0.2 colorpair
122 130 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
30 cmark
13 25 3 gmark
13 cmark
25 cmark
32 144 1 gmark
33 143 1 gmark
33 cmark
34 142 2 gmark
142 cmark
35 141 2 gmark
140 cmark
139 cmark
39 cmark
41 115 1 gmark
42 114 1 gmark
42 cmark
43 113 1 gmark
44 112 1 gmark
44 cmark
50 111 1 gmark
51 110 1 gmark
52 109 1 gmark
53 108 1 gmark
92 cmark
77 82 1 gmark
77 cmark
119 133 2 gmark
120 132 2 gmark
121 131 2 gmark
130 cmark

% End Annotations
showpage
end
%%EOF
