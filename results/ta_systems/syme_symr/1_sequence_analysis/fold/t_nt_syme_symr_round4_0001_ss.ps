%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Dec 23 17:53:00 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACUAACACGCAUUCUAUUGCAGAACCGUUCGAUCCAGAAGUCUCCCCGGCAAAUAACCGUCAAUUAACCGUGAGUUAUGCGAGCCGCUACCCGGAUUACAGCCGUAUUCCCGCCAUCACCCUGAAAGGUCAGUGGCUGGAAGCCGCCGGUUUUGCCACCGGCACGGAGGUAGAUGUCAAAGUGAUGGAAGGCUGUAUUGUGCUCACCGCCCAACCACCGGACCCCGAAGAGAGCGAACUGAUGCAGUCGCUG\
CGCCAGGUGUGCAAGCUGUCGGCGCGUAAACAA________AAGCAGGUGCAGGAGUUUAUUGGCGUGAU_UGC_G_____GU______________________\
) } def
/len { sequence length } bind def

/coor [
[30.60280418 836.01776123]
[17.00881004 834.60913086]
[3.44317579 832.94946289]
[-10.08945942 831.03924561]
[-23.58447075 828.87927246]
[-37.03724670 826.47015381]
[-50.44319153 823.81280518]
[-63.79771805 820.90802002]
[-77.09626770 817.75695801]
[-90.33429718 814.36053467]
[-103.50727844 810.71997070]
[-116.61071014 806.83654785]
[-129.64010620 802.71154785]
[-142.59103394 798.34637451]
[-155.45904541 793.74261475]
[-168.23976135 788.90167236]
[-180.92880249 783.82537842]
[-193.52183533 778.51531982]
[-206.01455688 772.97338867]
[-218.40269470 767.20147705]
[-230.68202209 761.20153809]
[-242.84834290 754.97564697]
[-254.89749146 748.52593994]
[-266.82534790 741.85455322]
[-278.62783813 734.96380615]
[-290.30093384 727.85607910]
[-301.84063721 720.53381348]
[-313.24301147 712.99945068]
[-324.50418091 705.25555420]
[-335.62023926 697.30487061]
[-346.58746338 689.15002441]
[-357.40203857 680.79382324]
[-368.06030273 672.23919678]
[-378.55859375 663.48895264]
[-388.89334106 654.54614258]
[-399.06100464 645.41381836]
[-409.05813599 636.09509277]
[-418.88128662 626.59313965]
[-428.52709961 616.91125488]
[-437.99227905 607.05267334]
[-447.27362061 597.02081299]
[-456.36788940 586.81915283]
[-465.27206421 576.45104980]
[-473.98303223 565.92016602]
[-482.49783325 555.23004150]
[-490.81359863 544.38427734]
[-498.92742920 533.38671875]
[-506.83654785 522.24102783]
[-514.53833008 510.95104980]
[-522.03002930 499.52059937]
[-529.30920410 487.95364380]
[-536.37329102 476.25408936]
[-543.21990967 464.42593384]
[-549.84667969 452.47326660]
[-556.25140381 440.40011597]
[-562.43182373 428.21063232]
[-568.38580322 415.90899658]
[-574.11145020 403.49938965]
[-579.60668945 390.98605347]
[-584.86962891 378.37326050]
[-589.89855957 365.66537476]
[-594.69171143 352.86666870]
[-599.24743652 339.98153687]
[-603.56420898 327.01440430]
[-607.64050293 313.96969604]
[-611.47497559 300.85186768]
[-615.06628418 287.66537476]
[-618.41326904 274.41476440]
[-621.51470947 261.10452271]
[-624.36950684 247.73924255]
[-626.97680664 234.32347107]
[-629.33569336 220.86178589]
[-631.44525146 207.35881042]
[-633.30487061 193.81913757]
[-634.91394043 180.24740601]
[-636.27178955 166.64823914]
[-637.37799072 153.02630615]
[-638.23223877 139.38624573]
[-638.83416748 125.73271942]
[-639.18359375 112.07040405]
[-639.28045654 98.40396118]
[-639.12457275 84.73806763]
[-638.71618652 71.07739258]
[-638.05529785 57.42659760]
[-637.14215088 43.79035187]
[-635.97711182 30.17331505]
[-634.56054688 16.58014488]
[-632.89294434 3.01548195]
[-630.97491455 -10.51603603]
[-628.80700684 -24.00978470]
[-626.39007568 -37.46115112]
[-623.72485352 -50.86554337]
[-620.81231689 -64.21837616]
[-617.65344238 -77.51508331]
[-614.24932861 -90.75112915]
[-610.60113525 -103.92198181]
[-606.71002197 -117.02313995]
[-602.57745361 -130.05014038]
[-598.20471191 -142.99850464]
[-593.59338379 -155.86384583]
[-588.74505615 -168.64172363]
[-583.66131592 -181.32780457]
[-578.34393311 -193.91773987]
[-572.79473877 -206.40722656]
[-567.01556396 -218.79199219]
[-561.00848389 -231.06781006]
[-554.77551270 -243.23048401]
[-548.31872559 -255.27586365]
[-541.64038086 -267.19982910]
[-534.74279785 -278.99829102]
[-527.62823486 -290.66723633]
[-520.29919434 -302.20266724]
[-512.75817871 -313.60067749]
[-505.00775146 -324.85729980]
[-497.05056763 -335.96871948]
[-488.88931274 -346.93118286]
[-480.52682495 -357.74087524]
[-471.96594238 -368.39413452]
[-463.20956421 -378.88732910]
[-454.26074219 -389.21685791]
[-445.12246704 -399.37921143]
[-435.79791260 -409.37088013]
[-426.29025269 -419.18847656]
[-416.60272217 -428.82864380]
[-406.73864746 -438.28808594]
[-396.70138550 -447.56353760]
[-386.49438477 -456.65188599]
[-376.12109375 -465.54998779]
[-365.58511353 -474.25482178]
[-354.89001465 -482.76339722]
[-344.03945923 -491.07281494]
[-333.03713989 -499.18020630]
[-321.88684082 -507.08285522]
[-310.59237671 -514.77801514]
[-299.15756226 -522.26306152]
[-287.58633423 -529.53546143]
[-275.88265991 -536.59277344]
[-264.05053711 -543.43243408]
[-271.30426025 -556.56195068]
[-278.55801392 -569.69140625]
[-285.81176758 -582.82086182]
[-293.06549072 -595.95037842]
[-307.91607666 -593.06671143]
[-322.93066406 -594.91528320]
[-336.63830566 -601.31500244]
[-347.69601440 -611.63885498]
[-355.02050781 -624.87548828]
[-357.89419556 -639.72796631]
[-356.03555298 -654.74133301]
[-349.62664795 -668.44464111]
[-339.29537964 -679.49542236]
[-326.05389404 -686.81109619]
[-311.19946289 -689.67480469]
[-296.18737793 -687.80609131]
[-282.48834229 -681.38800049]
[-271.44445801 -671.04937744]
[-264.13772583 -657.80297852]
[-261.28393555 -642.94659424]
[-263.16268921 -627.93579102]
[-269.58996582 -614.24102783]
[-279.93603516 -603.20410156]
[-272.68228149 -590.07464600]
[-265.42852783 -576.94512939]
[-258.17480469 -563.81567383]
[-250.92105103 -550.68621826]
[-227.52821350 -562.76947021]
[-203.71992493 -574.01208496]
[-179.52641296 -584.39978027]
[-154.97833252 -593.91943359]
[-130.10684204 -602.55883789]
[-104.94348907 -610.30718994]
[-79.52017975 -617.15454102]
[-53.86917114 -623.09222412]
[-28.02299309 -628.11279297]
[-2.01442862 -632.20977783]
[24.12353134 -635.37805176]
[50.35773087 -637.61352539]
[76.65489960 -638.91345215]
[102.98168182 -639.27612305]
[129.30467224 -638.70111084]
[155.59049988 -637.18914795]
[181.80581665 -634.74206543]
[207.91737366 -631.36309814]
[210.25744629 -646.17944336]
[212.59751892 -660.99578857]
[201.52574158 -671.86755371]
[198.99197388 -687.17633057]
[205.97048950 -701.03564453]
[219.77790833 -708.11621094]
[235.10499573 -705.69549561]
[246.05816650 -694.70422363]
[248.42572021 -679.36883545]
[241.29727173 -665.58605957]
[227.41384888 -658.65570068]
[225.07379150 -643.83935547]
[222.73371887 -629.02301025]
[236.18930054 -626.62957764]
[249.59832764 -623.98785400]
[262.95623779 -621.09869385]
[276.25845337 -617.96313477]
[289.50042725 -614.58215332]
[302.67767334 -610.95703125]
[315.78561401 -607.08886719]
[328.81982422 -602.97906494]
[341.77584839 -598.62902832]
[354.64920044 -594.04028320]
[367.43557739 -589.21429443]
[380.13052368 -584.15277100]
[392.72973633 -578.85742188]
[405.22894287 -573.33007812]
[417.62380981 -567.57263184]
[429.91012573 -561.58703613]
[442.08367920 -555.37536621]
[454.14035034 -548.93969727]
[466.07598877 -542.28222656]
[477.88650513 -535.40527344]
[489.56790161 -528.31121826]
[501.11614990 -521.00238037]
[512.52728271 -513.48132324]
[523.79748535 -505.75061035]
[534.92285156 -497.81286621]
[545.89953613 -489.67083740]
[556.72387695 -481.32727051]
[567.39208984 -472.78503418]
[577.90063477 -464.04705811]
[588.24578857 -455.11633301]
[598.42413330 -445.99588013]
[608.43212891 -436.68881226]
[618.26635742 -427.19836426]
[627.92346191 -417.52770996]
[637.40014648 -407.68020630]
[646.69317627 -397.65921021]
[655.79937744 -387.46813965]
[664.71563721 -377.11044312]
[673.43884277 -366.58972168]
[681.96612549 -355.90954590]
[690.29455566 -345.07354736]
[698.42120361 -334.08544922]
[706.34332275 -322.94897461]
[714.05828857 -311.66799927]
[721.56335449 -300.24630737]
[728.85601807 -288.68783569]
[735.93371582 -276.99652100]
[742.79412842 -265.17639160]
[749.43487549 -253.23144531]
[755.85363770 -241.16578674]
[762.04827881 -228.98352051]
[768.01666260 -216.68884277]
[773.75677490 -204.28591919]
[779.26660156 -191.77902222]
[784.54431152 -179.17239380]
[789.58801270 -166.47035217]
[794.39611816 -153.67726135]
[798.96685791 -140.79747009]
[803.29876709 -127.83538055]
[807.39031982 -114.79543304]
[811.24005127 -101.68207550]
[814.84680176 -88.49979401]
[818.20922852 -75.25308990]
[821.32617188 -61.94649124]
[824.19659424 -48.58454895]
[826.81958008 -35.17182922]
[829.19415283 -21.71291351]
[831.31945801 -8.21240139]
[833.19488525 5.32509232]
[834.81976318 18.89494133]
[836.19348145 32.49250793]
[837.31561279 46.11314774]
[838.18579102 59.75220108]
[838.80364990 73.40501404]
[839.16900635 87.06690979]
[839.28179932 100.73322296]
[839.14190674 114.39929199]
[838.74945068 128.06044006]
[838.10449219 141.71199036]
[837.20727539 155.34930420]
[836.05810547 168.96768188]
[834.65740967 182.56250000]
[833.00567627 196.12910461]
[831.10339355 209.66284180]
[828.95123291 223.15911865]
[826.54998779 236.61329651]
[823.90045166 250.02078247]
[821.00347900 263.37701416]
[817.86016846 276.67739868]
[814.47149658 289.91738892]
[810.83862305 303.09249878]
[806.96282959 316.19821167]
[802.84545898 329.23001099]
[798.48785400 342.18347168]
[793.89154053 355.05416870]
[789.05810547 367.83770752]
[783.98919678 380.52972412]
[778.68646240 393.12585449]
[773.15185547 405.62179565]
[767.38714600 418.01330566]
[761.39440918 430.29614258]
[755.17559814 442.46606445]
[748.73291016 454.51898193]
[742.06848145 466.45071411]
[735.18469238 478.25723267]
[728.08374023 489.93447876]
[720.76818848 501.47845459]
[713.24047852 512.88525391]
[705.50317383 524.15087891]
[697.55895996 535.27160645]
[689.41052246 546.24359131]
[681.06066895 557.06304932]
[672.51220703 567.72625732]
[663.76812744 578.22967529]
[654.83129883 588.56964111]
[645.70495605 598.74267578]
[636.39202881 608.74523926]
[626.89581299 618.57391357]
[617.21954346 628.22534180]
[607.36651611 637.69628906]
[597.34008789 646.98345947]
[587.14373779 656.08374023]
[576.78082275 664.99395752]
[566.25500488 673.71105957]
[555.56982422 682.23211670]
[544.72900391 690.55413818]
[533.73614502 698.67443848]
[522.59509277 706.59008789]
[511.30960083 714.29840088]
[499.88351440 721.79681396]
[488.32080078 729.08270264]
[476.62536621 736.15362549]
[464.80123901 743.00714111]
[452.85241699 749.64086914]
[440.78298950 756.05261230]
[428.59713745 762.24017334]
[416.29898071 768.20135498]
[403.89270020 773.93420410]
[391.38256836 779.43676758]
[378.77288818 784.70709229]
[366.06790161 789.74340820]
[353.27200317 794.54400635]
[340.38955688 799.10723877]
[327.42492676 803.43157959]
[314.38259888 807.51550293]
[301.26699829 811.35766602]
[288.08261108 814.95666504]
[274.83395386 818.31134033]
[261.52554321 821.42053223]
[248.16192627 824.28320312]
[234.74768066 826.89831543]
[221.28736877 829.26501465]
[207.78562927 831.38250732]
[194.24703979 833.25000000]
[180.67623901 834.86694336]
[167.07788086 836.23272705]
[153.45658875 837.34692383]
[139.81703186 838.20910645]
[126.16385651 838.81903076]
[112.50174713 839.17645264]
[98.83536530 839.28125000]
[85.16938782 839.13336182]
[71.50846863 838.73291016]
[57.85729218 838.08001709]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[138 165]
[139 164]
[140 163]
[141 162]
[142 161]
[183 196]
[184 195]
[185 194]
] def

init

% Start Annotations
185 194 0.16 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
138 165 18 gmark
165 cmark
139 164 3 gmark
139 cmark
140 163 3 gmark
163 cmark
141 162 5 gmark
162 cmark
142 161 4 gmark
161 cmark
183 196 5 gmark
183 cmark
184 195 3 gmark
195 cmark
185 194 2 gmark
194 cmark

% End Annotations
showpage
end
%%EOF
