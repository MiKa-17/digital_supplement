%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Dec 23 01:43:03 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACUGACACGCAUUCUAUUGCAGAACCGUUCGAUCCAGAAGUCUCCCCGGCAAAUAACCGUCAAUUAACCGUGAGUUAUGCGAGCCGCUACCCGGAUUACAGCCGUAUUCCCGCCAUCACCCUGAAAGGUCAGUGGCUGGAAGCCGCCGGUUUUGCCACCGGCACGGCGGUAGAUGUCAAAGUGAUGGAAGGCUGUAUUGUGCUCACCGCCCAACCACCCGCCCCCGAAGAGAGCGAACUGAUGCAGUCGCUG\
CGCCAGGUGUGCAAGCUGUCGGCGCGUAAACAAAAGCAGGUGCAGGAGUUUAUUGGGGUGAUUGC__GGU_____________________\
) } def
/len { sequence length } bind def

/coor [
[162.18870544 416.02523804]
[157.49523926 401.77661133]
[153.33148193 387.36431885]
[149.70312500 372.80798340]
[146.61511230 358.12753296]
[144.07168579 343.34298706]
[142.07630920 328.47457886]
[140.63169861 313.54257202]
[139.73983765 298.56738281]
[139.40194702 283.56948853]
[139.61848450 268.56933594]
[140.38914490 253.58741760]
[141.71289062 238.64421082]
[143.58789062 223.76013184]
[146.01161194 208.95550537]
[148.98072815 194.25053406]
[152.49119568 179.66532898]
[156.53820801 165.21980286]
[161.11622620 150.93368530]
[166.21902466 136.82649231]
[171.83963013 122.91748810]
[158.14936829 116.78750610]
[144.45909119 110.65752411]
[153.53456116 122.60054779]
[162.61003113 134.54357910]
[171.68548584 146.48660278]
[185.23590088 152.91984558]
[198.09294128 160.64619446]
[210.13360596 169.59172058]
[221.24267578 179.67083740]
[231.31385803 190.78709412]
[240.25079346 202.83413696]
[247.96797180 215.69668579]
[254.39155579 229.25166321]
[259.46008301 243.36940002]
[263.12503052 257.91476440]
[265.35134888 272.74862671]
[266.11773682 287.72903442]
[265.41687012 302.71267700]
[263.25543213 317.55612183]
[259.65414429 332.11740112]
[254.64741516 346.25714111]
[248.28318787 359.84008789]
[240.62234497 372.73626709]
[231.73817444 384.82229614]
[221.71569824 395.98248291]
[210.65081787 406.11007690]
[198.64939880 415.10818481]
[185.82626343 422.89068604]
[172.30412292 429.38314819]
[158.21237183 434.52340698]
[143.68582153 438.26229858]
[128.86346436 440.56405640]
[113.88715363 441.40661621]
[98.90016937 440.78198242]
[84.04590607 438.69610596]
[69.46650696 435.16891479]
[55.30146408 430.23416138]
[41.68631744 423.93911743]
[28.75133705 416.34396362]
[16.62029457 407.52139282]
[5.40925980 397.55581665]
[-4.77449512 386.54260254]
[-13.83352947 374.58709717]
[-21.68116188 361.80371094]
[-28.24230576 348.31478882]
[-33.45418167 334.24935913]
[-37.26691818 319.74200439]
[-39.64403534 304.93154907]
[-40.56278992 289.95971680]
[-40.01438904 274.96975708]
[-38.00407791 260.10507202]
[-34.55109787 245.50791931]
[-29.68848228 231.31796265]
[-23.46276093 217.67095947]
[-15.93350315 204.69752502]
[-7.17275095 192.52175903]
[2.73566914 181.26017761]
[13.69253922 171.02426147]
[26.75740433 163.65478516]
[39.82226944 156.28529358]
[52.88713837 148.91581726]
[37.88851929 149.11952209]
[25.71405602 159.56758118]
[9.98239517 156.42204285]
[2.76152158 142.09588623]
[9.59067154 127.57892609]
[25.23110580 124.00731659]
[37.68482208 134.12089539]
[52.68343735 133.91720581]
[55.40391922 126.92799377]
[41.42551041 121.48703003]
[27.44710350 116.04606628]
[13.46869564 110.60510254]
[-0.50971311 105.16413879]
[-14.48812103 99.72316742]
[-28.46652985 94.28220367]
[-42.44493866 88.84123993]
[-56.42334747 83.40027618]
[-70.40175629 77.95931244]
[-84.38016510 72.51834869]
[-98.35857391 67.07737732]
[-112.33698273 61.63641357]
[-127.31258392 60.78129196]
[-131.12701416 46.27439117]
[-118.50883484 38.16379929]
[-106.89601135 47.65800858]
[-92.91760254 53.09897232]
[-78.93920135 58.53993607]
[-64.96079254 63.98090363]
[-50.98237991 69.42186737]
[-37.00397110 74.86283112]
[-23.02556419 80.30379486]
[-9.04715633 85.74476624]
[4.93125200 91.18572998]
[18.90966034 96.62669373]
[32.88806915 102.06765747]
[46.86647797 107.50862122]
[60.84488678 112.94958496]
[63.56536865 105.96038055]
[52.65131378 95.67041779]
[41.73725510 85.38045502]
[35.50038910 83.51795197]
[31.67360687 79.42503357]
[30.72088242 74.80400085]
[19.99492836 64.31810760]
[4.19647503 64.74755859]
[-7.22077322 53.81951904]
[-7.48316574 38.01740646]
[3.56497049 26.71633530]
[19.36897278 26.62102699]
[30.55260468 37.78802872]
[30.48081970 53.59215164]
[41.20677185 64.07804108]
[52.02722168 74.46640015]
[62.94127655 84.75636292]
[73.85533142 95.04632568]
[86.17928314 86.49529266]
[80.36071014 72.66979980]
[74.54213715 58.84431076]
[68.72355652 45.01882172]
[62.90498352 31.19333076]
[57.22639465 45.07690811]
[44.72798538 53.37086487]
[29.72886086 53.20904541]
[17.41230011 44.64736557]
[12.03457165 30.64450836]
[15.45406818 16.03947449]
[26.48910713 5.87935972]
[41.32628250 3.67522192]
[54.83853531 10.18898869]
[49.90724564 -3.97725201]
[44.97595596 -18.14349365]
[34.05853653 -31.11447334]
[43.50036621 -45.19595718]
[59.64529800 -40.02126312]
[59.14219666 -23.07478333]
[64.07348633 -8.90854168]
[69.00477600 5.25769901]
[77.69337463 12.65772438]
[76.73046875 25.37475586]
[82.54904938 39.20024490]
[88.36762238 53.02573776]
[94.18620300 66.85122681]
[100.00477600 80.67671967]
[107.49371338 80.26950836]
[106.67929077 65.29163361]
[105.86486816 50.31375885]
[105.05044556 35.33588409]
[104.23602295 20.35800934]
[103.42160034 5.38013458]
[102.60718536 -9.59774017]
[97.20437622 -23.59094238]
[108.84326172 -33.05330658]
[121.43901825 -24.90794182]
[117.58506012 -10.41216183]
[118.39947510 4.56571293]
[119.21389771 19.54358673]
[120.02832031 34.52146149]
[120.84274292 49.49933624]
[121.65716553 64.47721100]
[122.47158813 79.45508575]
[129.96052551 79.04787445]
[134.24569702 64.67298889]
[138.53088379 50.29811096]
[128.99943542 38.05347061]
[128.51921082 22.54382896]
[137.27484131 9.73295689]
[151.89962769 4.54689789]
[166.77003479 8.97979641]
[176.16809082 21.32711220]
[176.48004150 36.84105301]
[167.58595276 49.55618668]
[152.90576172 54.58329010]
[148.62059021 68.95817566]
[144.33540344 83.33305359]
[150.58908081 96.96725464]
[164.27934265 103.09724426]
[177.96960449 109.22722626]
[184.60200500 95.77127075]
[191.72711182 82.56958008]
[199.33515930 69.64019012]
[207.41577148 57.00076294]
[215.95791626 44.66855621]
[224.94990540 32.66041565]
[234.37948608 20.99274635]
[244.23376465 9.68148041]
[254.49928284 -1.25792909]
[265.16201782 -11.81054115]
[276.20739746 -21.96194267]
[287.62036133 -31.69826698]
[299.38528442 -41.00621414]
[311.48614502 -49.87307739]
[323.90634155 -58.28673553]
[336.62899780 -66.23570251]
[349.63665771 -73.70912170]
[362.91159058 -80.69678497]
[376.43569946 -87.18914032]
[390.19042969 -93.17733765]
[404.15707397 -98.65317535]
[418.31649780 -103.60919189]
[432.64938354 -108.03860474]
[447.13616943 -111.93537903]
[461.75701904 -115.29417419]
[476.49203491 -118.11042023]
[491.32104492 -120.38025665]
[506.22378540 -122.10059357]
[521.17993164 -123.26907349]
[536.16900635 -123.88410187]
[551.17065430 -123.94483948]
[566.16424561 -123.45121002]
[581.12933350 -122.40387726]
[596.04553223 -120.80427551]
[610.89245605 -118.65458679]
[625.64978027 -115.95775604]
[640.29736328 -112.71746063]
[654.81518555 -108.93812561]
[669.18347168 -104.62491608]
[683.38256836 -99.78372192]
[697.39312744 -94.42115021]
[711.19586182 -88.54454041]
[724.77209473 -82.16190338]
[738.10321045 -75.28196716]
[751.17095947 -67.91412354]
[763.95751953 -60.06843567]
[776.44549561 -51.75562668]
[788.61773682 -42.98704529]
[800.45764160 -33.77466583]
[811.94903564 -24.13107872]
[823.07629395 -14.06945229]
[833.82409668 -3.60352826]
[844.17785645 7.25239706]
[854.12341309 18.48349571]
[863.64715576 30.07442665]
[872.73614502 42.00936127]
[881.37786865 54.27199173]
[889.56054688 66.84557343]
[897.27307129 79.71293640]
[904.50482178 92.85649109]
[911.24597168 106.25830078]
[917.48730469 119.90005493]
[923.22027588 133.76310730]
[928.43707275 147.82855225]
[933.13055420 162.07714844]
[937.29437256 176.48944092]
[940.92272949 191.04576111]
[944.01080322 205.72621155]
[946.55426025 220.51074219]
[948.54962158 235.37916565]
[949.99426270 250.31115723]
[950.88616943 265.28634644]
[951.22412109 280.28424072]
[951.00756836 295.28439331]
[950.23693848 310.26632690]
[948.91326904 325.20950317]
[947.03826904 340.09359741]
[944.61456299 354.89822388]
[941.64550781 369.60321045]
[938.13507080 384.18841553]
[934.08807373 398.63394165]
[929.51007080 412.92007446]
[924.40734863 427.02728271]
[918.78674316 440.93630981]
[912.65606689 454.62814331]
[906.02362061 468.08407593]
[898.89849854 481.28573608]
[891.29046631 494.21511841]
[883.20977783 506.85452271]
[874.66766357 519.18670654]
[865.67559814 531.19482422]
[856.24603271 542.86248779]
[846.39172363 554.17376709]
[836.12615967 565.11309814]
[825.46337891 575.66571045]
[814.41796875 585.81707764]
[803.00500488 595.55340576]
[791.24005127 604.86132812]
[779.13922119 613.72814941]
[766.71899414 622.14178467]
[753.99633789 630.09069824]
[740.98864746 637.56414795]
[727.71368408 644.55175781]
[714.18957520 651.04406738]
[700.43481445 657.03222656]
[686.46820068 662.50805664]
[672.30877686 667.46405029]
[657.97583008 671.89343262]
[643.48907471 675.79016113]
[628.86816406 679.14892578]
[614.13317871 681.96514893]
[599.30413818 684.23498535]
[584.40142822 685.95526123]
[569.44525146 687.12371826]
[554.45617676 687.73870850]
[539.45458984 687.79943848]
[524.46099854 687.30572510]
[509.49584961 686.25836182]
[494.57968140 684.65875244]
[479.73278809 682.50903320]
[464.97546387 679.81219482]
[450.32788086 676.57183838]
[435.81002808 672.79248047]
[421.44174194 668.47924805]
[407.24264526 663.63800049]
[393.23214722 658.27539062]
[379.42938232 652.39874268]
[365.85317993 646.01611328]
[352.52209473 639.13616943]
[339.45437622 631.76824951]
[326.66778564 623.92254639]
[314.17987061 615.60974121]
[302.00765991 606.84112549]
[290.16775513 597.62872314]
[278.67636108 587.98510742]
[267.54913330 577.92346191]
[256.80133057 567.45751953]
[246.44758606 556.60156250]
[236.50205994 545.37042236]
[226.97833252 533.77947998]
[217.88941956 521.84454346]
[209.24772644 509.58187866]
[201.06504822 497.00827026]
[193.35258484 484.14089966]
[186.12084961 470.99734497]
[179.37973022 457.59552002]
[173.13842773 443.95373535]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 199]
[22 198]
[23 197]
[82 90]
[83 89]
[120 137]
[121 136]
[122 135]
[125 134]
[126 133]
[138 165]
[139 164]
[140 163]
[141 162]
[142 161]
[151 159]
[152 158]
[153 157]
[183 196]
[184 195]
[185 194]
] def

init

% Start Annotations
21 199 0.0 0.2 colorpair
23 197 0.0 0.6 colorpair
82 90 0.16 0.2 colorpair
121 136 0.0 0.2 colorpair
125 134 0.0 0.6 colorpair
139 164 0.16 0.2 colorpair
151 159 0.16 0.6 colorpair
183 196 0.16 0.6 colorpair
184 195 0.16 0.2 colorpair
185 194 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
21 199 2 gmark
22 198 4 gmark
198 cmark
23 197 1 gmark
82 90 2 gmark
90 cmark
83 89 3 gmark
83 cmark
120 137 7 gmark
120 cmark
121 136 2 gmark
122 135 8 gmark
122 cmark
125 134 1 gmark
126 133 3 gmark
133 cmark
138 165 17 gmark
165 cmark
139 164 2 gmark
139 cmark
140 163 3 gmark
163 cmark
141 162 4 gmark
162 cmark
142 161 4 gmark
161 cmark
151 159 1 gmark
159 cmark
152 158 4 gmark
158 cmark
153 157 23 gmark
153 cmark
157 cmark
183 196 1 gmark
183 cmark
184 195 2 gmark
195 cmark
185 194 1 gmark
194 cmark

% End Annotations
showpage
end
%%EOF
