%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Mon Dec 23 09:31:35 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACUAACACGCAUUCUAUUGCAGAACCGUUCGAUCCAGAAGUCUCCCCGGCAAAUAACCGUCAAUUAACCGUGAGUUAUGCGAGCCGCUACCCGGAUUACAGCCGUAUUCCCGCCAUCACCCUGAAAGGUCAGUGGCUGGAAGCCGCCGGUUUUGCCACCGGCACGGAGGUAGAUGUCAAAGUGAUGGAAGGCUGUAUUGUGCUCACCGCCCAACCACCGGACCCCGAAGAGAGCGAACUGAUGCAGUCGCUG\
CGCCAGGUGUGCAAGCUGUCGGCGCGUAAACAA________AAGCAGGUGCAGGAGUUUAU_UGGGGUGAUUGC_G____GU______________________\
) } def
/len { sequence length } bind def

/coor [
[30.99256706 833.70050049]
[17.40112305 832.29498291]
[3.83807707 830.63763428]
[-9.69190979 828.72912598]
[-23.18418694 826.57012939]
[-36.63411331 824.16131592]
[-50.03706741 821.50354004]
[-63.38844299 818.59771729]
[-76.68364716 815.44488525]
[-89.91810608 812.04608154]
[-103.08728027 808.40246582]
[-116.18663025 804.51531982]
[-129.21165466 800.38598633]
[-142.15789795 796.01586914]
[-155.02087402 791.40643311]
[-167.79617310 786.55932617]
[-180.47941589 781.47619629]
[-193.06623840 776.15875244]
[-205.55230713 770.60888672]
[-217.93331909 764.82849121]
[-230.20504761 758.81951904]
[-242.36325073 752.58404541]
[-254.40374756 746.12420654]
[-266.32241821 739.44226074]
[-278.11514282 732.54046631]
[-289.77786255 725.42120361]
[-301.30657959 718.08697510]
[-312.69735718 710.54022217]
[-323.94625854 702.78356934]
[-335.04940796 694.81976318]
[-346.00296021 686.65136719]
[-356.80322266 678.28131104]
[-367.44644165 669.71252441]
[-377.92892456 660.94781494]
[-388.24713135 651.99023438]
[-398.39749146 642.84295654]
[-408.37649536 633.50897217]
[-418.18072510 623.99163818]
[-427.80679321 614.29412842]
[-437.25143433 604.41986084]
[-446.51138306 594.37213135]
[-455.58343506 584.15447998]
[-464.46447754 573.77032471]
[-473.15148926 563.22338867]
[-481.64141846 552.51708984]
[-489.93142700 541.65533447]
[-498.01861572 530.64166260]
[-505.90020752 519.47998047]
[-513.57348633 508.17407227]
[-521.03582764 496.72784424]
[-528.28466797 485.14520264]
[-535.31756592 473.43017578]
[-542.13201904 461.58676147]
[-548.72570801 449.61904907]
[-555.09631348 437.53115845]
[-561.24176025 425.32720947]
[-567.15991211 413.01141357]
[-572.84869385 400.58801270]
[-578.30615234 388.06127930]
[-583.53039551 375.43548584]
[-588.51965332 362.71502686]
[-593.27221680 349.90426636]
[-597.78643799 337.00756836]
[-602.06079102 324.02938843]
[-606.09375000 310.97421265]
[-609.88397217 297.84646606]
[-613.43017578 284.65072632]
[-616.73107910 271.39151001]
[-619.78558350 258.07339478]
[-622.59265137 244.70089722]
[-625.15130615 231.27867126]
[-627.46063232 217.81130981]
[-629.51989746 204.30343628]
[-631.32836914 190.75971985]
[-632.88537598 177.18479919]
[-634.19049072 163.58332825]
[-635.24316406 149.96002197]
[-636.04302979 136.31951904]
[-636.58990479 122.66654205]
[-636.88354492 109.00576782]
[-636.92388916 95.34190369]
[-636.71081543 81.67963409]
[-636.24450684 68.02366638]
[-635.52508545 54.37869263]
[-634.55285645 40.74940109]
[-633.32800293 27.14047813]
[-631.85107422 13.55660343]
[-630.12255859 0.00244776]
[-628.14306641 -13.51733017]
[-625.91320801 -26.99808311]
[-623.43377686 -40.43517685]
[-620.70568848 -53.82398605]
[-617.72979736 -67.15991974]
[-614.50714111 -80.43837738]
[-611.03887939 -93.65480804]
[-607.32617188 -106.80466461]
[-603.37030029 -119.88342285]
[-599.17260742 -132.88658142]
[-594.73455811 -145.80969238]
[-590.05761719 -158.64828491]
[-585.14349365 -171.39796448]
[-579.99383545 -184.05433655]
[-574.61041260 -196.61305237]
[-568.99505615 -209.06980896]
[-563.14965820 -221.42030334]
[-557.07635498 -233.66029358]
[-550.77709961 -245.78558350]
[-544.25415039 -257.79199219]
[-537.50970459 -269.67538452]
[-530.54608154 -281.43170166]
[-523.36566162 -293.05688477]
[-515.97100830 -304.54696655]
[-508.36453247 -315.89794922]
[-500.54891968 -327.10592651]
[-492.52685547 -338.16711426]
[-484.30108643 -349.07763672]
[-475.87445068 -359.83377075]
[-467.24984741 -370.43182373]
[-458.43020630 -380.86816406]
[-449.41860962 -391.13919067]
[-440.21810913 -401.24136353]
[-430.83187866 -411.17120361]
[-421.26318359 -420.92532349]
[-411.51525879 -430.50033569]
[-401.59152222 -439.89300537]
[-391.49530029 -449.10003662]
[-381.23013306 -458.11831665]
[-370.79953003 -466.94470215]
[-360.20706177 -475.57620239]
[-349.45639038 -484.00979614]
[-338.55117798 -492.24264526]
[-327.49520874 -500.27188110]
[-316.29229736 -508.09475708]
[-304.94622803 -515.70855713]
[-293.46096802 -523.11071777]
[-281.84045410 -530.29864502]
[-270.08865356 -537.26983643]
[-258.20962524 -544.02203369]
[-265.36700439 -557.20428467]
[-272.52438354 -570.38653564]
[-279.68176270 -583.56878662]
[-286.83914185 -596.75103760]
[-301.71044922 -593.97625732]
[-316.71109009 -595.93475342]
[-330.37149048 -602.43469238]
[-341.35327148 -612.83929443]
[-348.58062744 -626.12915039]
[-351.34545898 -641.00231934]
[-349.37689209 -656.00164795]
[-342.86779785 -669.65765381]
[-332.45587158 -680.63250732]
[-319.16116333 -687.85095215]
[-304.28613281 -690.60577393]
[-289.28814697 -688.62719727]
[-275.63647461 -682.10894775]
[-264.66864014 -671.68963623]
[-257.45910645 -658.39013672]
[-254.71420288 -643.51324463]
[-256.70288086 -628.51660156]
[-263.23025513 -614.86926270]
[-273.65689087 -603.90844727]
[-266.49951172 -590.72619629]
[-259.34213257 -577.54388428]
[-252.18475342 -564.36163330]
[-245.02737427 -551.17938232]
[-221.55540466 -563.08416748]
[-197.67330933 -574.14324951]
[-173.41156006 -584.34246826]
[-148.80110168 -593.66888428]
[-123.87330627 -602.11053467]
[-98.65998077 -609.65673828]
[-73.19327545 -616.29785156]
[-47.50568008 -622.02532959]
[-21.62995148 -626.83190918]
[4.40090990 -630.71148682]
[30.55369949 -633.65911865]
[56.79506302 -635.67102051]
[83.09152985 -636.74456787]
[109.40956879 -636.87854004]
[135.71560669 -636.07263184]
[161.97607422 -634.32788086]
[188.15751648 -631.64660645]
[214.22651672 -628.03216553]
[216.70222473 -642.82641602]
[219.17793274 -657.62072754]
[208.20623779 -668.59344482]
[205.81282043 -683.92486572]
[212.91801453 -697.71960449]
[226.78973389 -704.67340088]
[242.09399414 -702.11236572]
[252.94601440 -691.02124023]
[255.17297363 -675.66479492]
[247.91854858 -661.94787598]
[233.97222900 -655.14501953]
[231.49650574 -640.35070801]
[229.02079773 -625.55639648]
[242.45092773 -623.03955078]
[255.83207703 -620.27416992]
[269.15966797 -617.26110840]
[282.42910767 -614.00146484]
[295.63580322 -610.49639893]
[308.77526855 -606.74707031]
[321.84295654 -602.75469971]
[334.83435059 -598.52081299]
[347.74505615 -594.04675293]
[360.57055664 -589.33410645]
[373.30648804 -584.38446045]
[385.94845581 -579.19952393]
[398.49212646 -573.78106689]
[410.93316650 -568.13104248]
[423.26733398 -562.25128174]
[435.49035645 -556.14379883]
[447.59802246 -549.81085205]
[459.58621216 -543.25439453]
[471.45077515 -536.47686768]
[483.18762207 -529.48052979]
[494.79275513 -522.26776123]
[506.26217651 -514.84106445]
[517.59191895 -507.20300293]
[528.77807617 -499.35620117]
[539.81683350 -491.30334473]
[550.70440674 -483.04721069]
[561.43701172 -474.59060669]
[572.01098633 -465.93649292]
[582.42272949 -457.08779907]
[592.66857910 -448.04760742]
[602.74505615 -438.81896973]
[612.64868164 -429.40512085]
[622.37609863 -419.80926514]
[631.92395020 -410.03472900]
[641.28887939 -400.08480835]
[650.46777344 -389.96298218]
[659.45739746 -379.67272949]
[668.25469971 -369.21755981]
[676.85662842 -358.60107422]
[685.26025391 -347.82693481]
[693.46264648 -336.89883423]
[701.46099854 -325.82052612]
[709.25262451 -314.59585571]
[716.83477783 -303.22860718]
[724.20489502 -291.72277832]
[731.36041260 -280.08224487]
[738.29888916 -268.31106567]
[745.01788330 -256.41326904]
[751.51513672 -244.39292908]
[757.78845215 -232.25421143]
[763.83557129 -220.00125122]
[769.65454102 -207.63827515]
[775.24322510 -195.16955566]
[780.59979248 -182.59934998]
[785.72241211 -169.93199158]
[790.60925293 -157.17182922]
[795.25866699 -144.32325745]
[799.66906738 -131.39070129]
[803.83898926 -118.37858582]
[807.76684570 -105.29139709]
[811.45141602 -92.13362885]
[814.89141846 -78.90981293]
[818.08569336 -65.62448883]
[821.03302002 -52.28222275]
[823.73248291 -38.88760757]
[826.18316650 -25.44524384]
[828.38415527 -11.95975208]
[830.33477783 1.56422865]
[832.03430176 15.12205029]
[833.48217773 28.70905304]
[834.67785645 42.32056427]
[835.62097168 55.95190430]
[836.31121826 69.59838867]
[836.74835205 83.25531769]
[836.93212891 96.91801453]
[836.86260986 110.58176422]
[836.53973389 124.24187469]
[835.96368408 137.89366150]
[835.13464355 151.53240967]
[834.05279541 165.15344238]
[832.71862793 178.75207520]
[831.13256836 192.32363892]
[829.29516602 205.86346436]
[827.20703125 219.36689758]
[824.86889648 232.82928467]
[822.28149414 246.24601746]
[819.44586182 259.61245728]
[816.36285400 272.92404175]
[813.03363037 286.17617798]
[809.45922852 299.36428833]
[805.64093018 312.48388672]
[801.58001709 325.53042603]
[797.27795410 338.49942017]
[792.73614502 351.38641357]
[787.95617676 364.18701172]
[782.93969727 376.89675903]
[777.68847656 389.51135254]
[772.20428467 402.02636719]
[766.48895264 414.43759155]
[760.54449463 426.74069214]
[754.37292480 438.93145752]
[747.97644043 451.00573730]
[741.35717773 462.95932007]
[734.51739502 474.78811646]
[727.45953369 486.48806763]
[720.18591309 498.05517578]
[712.69909668 509.48541260]
[705.00164795 520.77490234]
[697.09619141 531.91967773]
[688.98547363 542.91601562]
[680.67230225 553.76007080]
[672.15942383 564.44812012]
[663.44989014 574.97650146]
[654.54669189 585.34161377]
[645.45275879 595.53985596]
[636.17138672 605.56774902]
[626.70562744 615.42181396]
[617.05883789 625.09869385]
[607.23425293 634.59503174]
[597.23535156 643.90765381]
[587.06542969 653.03320312]
[576.72808838 661.96868896]
[566.22686768 670.71093750]
[555.56536865 679.25701904]
[544.74725342 687.60394287]
[533.77624512 695.74884033]
[522.65606689 703.68896484]
[511.39062500 711.42150879]
[499.98373413 718.94384766]
[488.43936157 726.25341797]
[476.76141357 733.34771729]
[464.95394897 740.22424316]
[453.02102661 746.88067627]
[440.96673584 753.31475830]
[428.79522705 759.52423096]
[416.51068115 765.50695801]
[404.11734009 771.26086426]
[391.61944580 776.78399658]
[379.02127075 782.07452393]
[366.32717896 787.13049316]
[353.54153442 791.95025635]
[340.66873169 796.53216553]
[327.71319580 800.87457275]
[314.67935181 804.97607422]
[301.57171631 808.83520508]
[288.39477539 812.45062256]
[275.15307617 815.82110596]
[261.85116577 818.94555664]
[248.49360657 821.82281494]
[235.08500671 824.45190430]
[221.62994385 826.83190918]
[208.13308716 828.96209717]
[194.59904480 830.84167480]
[181.03248596 832.46997070]
[167.43806458 833.84643555]
[153.82046509 834.97064209]
[140.18437195 835.84216309]
[126.53444672 836.46075439]
[112.87540436 836.82611084]
[99.21193695 836.93817139]
[85.54873657 836.79687500]
[71.89051056 836.40228271]
[58.24194336 835.75457764]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[138 165]
[139 164]
[140 163]
[141 162]
[142 161]
[183 196]
[184 195]
[185 194]
] def

init

% Start Annotations
139 164 0.16 0.2 colorpair
185 194 0.16 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
138 165 18 gmark
165 cmark
139 164 2 gmark
139 cmark
140 163 3 gmark
163 cmark
141 162 5 gmark
162 cmark
142 161 4 gmark
161 cmark
183 196 5 gmark
183 cmark
184 195 3 gmark
195 cmark
185 194 2 gmark
194 cmark

% End Annotations
showpage
end
%%EOF
