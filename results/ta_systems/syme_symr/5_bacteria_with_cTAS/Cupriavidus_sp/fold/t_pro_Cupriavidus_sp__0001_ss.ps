%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Dec 24 20:27:13 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_______________________GGAGUUGAUCAUGGCUGACGCCAAUCUUAAGGCACGUUCGCCCGUCACGGAACGUUUUGUGACCAUCCAGCAAUCGCAACGCCAUCAGCGCAACGGGAGAAGCCGCUCCACGCCGCCGCUUUAUCCGUGGAUGAAGCUCGCCGGCCGGUGGAUCGAGCACGCGGGCUUCGAGGCCGGGCAGCGUGUCAGGAUCGCUGUCGAACAGGGGCGGCUGGUCAUUACCGCCGAG___\
_____________________________________________\
) } def
/len { sequence length } bind def

/coor [
[152.80287170 820.50158691]
[144.84158325 807.77947998]
[137.90299988 794.47198486]
[132.02990723 780.66107178]
[127.25851440 766.43194580]
[123.61824799 751.87231445]
[121.13153839 737.07196045]
[119.81372833 722.12213135]
[119.67294312 707.11499023]
[120.71004486 692.14306641]
[122.91863251 677.29870605]
[126.28510284 662.67333984]
[130.78869629 648.35717773]
[136.40164185 634.43853760]
[143.08934021 621.00317383]
[150.81054688 608.13397217]
[159.51768494 595.91021729]
[169.15702820 584.40728760]
[179.66918945 573.69616699]
[190.98931885 563.84277344]
[203.04765320 554.90802002]
[215.76983643 546.94683838]
[229.07743835 540.00836182]
[242.88838196 534.13543701]
[238.11933899 519.91375732]
[223.87951660 515.62823486]
[214.78611755 503.63766479]
[214.49343872 488.41372681]
[223.32325745 475.79071045]
[218.55419922 461.56903076]
[213.78514099 447.34738159]
[209.01608276 433.12570190]
[204.24703979 418.90402222]
[199.47798157 404.68234253]
[184.98571777 400.81265259]
[173.76205444 410.76400757]
[162.53839111 420.71533203]
[151.31472778 430.66668701]
[146.64401245 446.38662720]
[130.63401794 449.93795776]
[119.75444031 437.66738892]
[125.19726562 422.19781494]
[141.36337280 419.44302368]
[152.58703613 409.49166870]
[163.81071472 399.54034424]
[175.03437805 389.58898926]
[178.29582214 374.94784546]
[172.35729980 361.17346191]
[166.41876221 347.39907837]
[160.48022461 333.62466431]
[154.54168701 319.85028076]
[150.55683899 317.29855347]
[148.10673523 312.23840332]
[148.62629700 305.72586060]
[142.97656250 291.83050537]
[137.32682800 277.93518066]
[131.67710876 264.03982544]
[126.02737427 250.14448547]
[120.37763977 236.24914551]
[114.72791290 222.35380554]
[109.07818604 208.45846558]
[103.67447662 203.47024536]
[103.44283295 194.38848877]
[97.93843842 180.43493652]
[92.43404388 166.48138428]
[86.92964935 152.52783203]
[74.63986969 143.92774963]
[59.64497757 143.53640747]
[44.65008545 143.14505005]
[29.65518951 142.75369263]
[14.66029549 142.36235046]
[-0.33459806 141.97099304]
[-15.32949162 141.57965088]
[-30.32438660 141.18829346]
[-44.46948624 149.48577881]
[-58.59225464 141.15034485]
[-58.16440201 124.75679016]
[-43.62606430 117.16938019]
[-29.93303680 126.19340515]
[-14.93814182 126.58475494]
[0.05675195 126.97610474]
[15.05164623 127.36745453]
[30.04653931 127.75880432]
[45.04143524 128.15016174]
[60.03632736 128.54150391]
[75.03121948 128.93286133]
[76.77635193 121.63871002]
[62.18806839 118.14845276]
[47.59983826 114.65794373]
[51.09058762 100.06977844]
[65.67832947 103.56016541]
[80.26661682 107.05043030]
[82.01174927 99.75628662]
[68.46343231 93.31864166]
[52.16891098 95.16812134]
[42.63885880 81.82232666]
[49.67698288 67.01027679]
[66.04306030 65.96932983]
[74.90107727 79.77033234]
[88.44938660 86.20796967]
[92.45618439 79.86797333]
[100.46977997 67.18798065]
[104.47657776 60.84798050]
[92.84735107 51.37374115]
[81.21813202 41.89950562]
[65.17623138 42.09228134]
[55.13553238 29.57973099]
[58.79839325 13.96041584]
[73.35498047 7.21613598]
[87.63872528 14.52052593]
[90.69236755 30.27028275]
[102.32158661 39.74451828]
[113.95081329 49.21875763]
[120.05048370 44.85481644]
[132.24983215 36.12693024]
[138.34950256 31.76298904]
[133.13755798 17.69758415]
[127.92561340 3.63217974]
[122.71366119 -10.43322468]
[117.50171661 -24.49863052]
[105.45144653 -34.75053787]
[108.28440857 -49.37324524]
[103.07246399 -63.43865204]
[97.86051941 -77.50405884]
[92.64856720 -91.56945801]
[87.43662262 -105.63486481]
[75.38635254 -115.88677216]
[78.21931458 -130.50947571]
[73.00737000 -144.57489014]
[58.03104401 -148.63558960]
[48.32801437 -160.74472046]
[47.62929535 -176.24604797]
[56.20355606 -189.17901611]
[70.75381470 -194.57063293]
[85.68521118 -190.34770203]
[95.25630951 -178.13403320]
[95.78682709 -162.62602234]
[87.07276917 -149.78683472]
[92.28472137 -135.72142029]
[103.96219635 -126.47557068]
[101.50202942 -110.84680939]
[106.71397400 -96.78141022]
[111.92591858 -82.71600342]
[117.13787079 -68.65059662]
[122.34981537 -54.58519363]
[134.02728271 -45.33933640]
[131.56712341 -29.71057701]
[136.77906799 -15.64517212]
[141.99101257 -1.57976687]
[147.20295715 12.48563766]
[152.41491699 26.55104256]
[167.36897278 27.72402763]
[174.71025085 14.64328575]
[173.60241699 -5.51615620]
[190.72306824 -14.56298065]
[197.78970337 -27.79410553]
[204.85633850 -41.02523041]
[211.92297363 -54.25635529]
[218.98960876 -67.48748016]
[226.05624390 -80.71860504]
[233.12287903 -93.94972992]
[240.18951416 -107.18085480]
[247.25616455 -120.41197968]
[254.32279968 -133.64309692]
[249.95790100 -148.59587097]
[257.31295776 -161.91345215]
[271.59503174 -165.98255920]
[278.66168213 -179.21368408]
[285.65914917 -192.48150635]
[292.58731079 -205.78567505]
[287.59863281 -220.78195190]
[294.74966431 -234.87585449]
[309.79782104 -239.70573425]
[323.81533813 -232.40609741]
[328.48587036 -217.30767822]
[321.03842163 -203.36811829]
[305.89147949 -198.85751343]
[298.96331787 -185.55334473]
[298.66241455 -178.20542908]
[291.89279175 -172.14704895]
[284.82617188 -158.91592407]
[289.38674927 -144.78309631]
[282.40866089 -131.26419067]
[267.55392456 -126.57646942]
[260.48727417 -113.34534454]
[253.42063904 -100.11421967]
[246.35400391 -86.88309479]
[239.28736877 -73.65196991]
[232.22073364 -60.42084122]
[225.15409851 -47.18972015]
[218.08746338 -33.95859528]
[211.02082825 -20.72747040]
[203.95419312 -7.49634504]
[207.77626038 1.91609228]
[205.76965332 12.09804249]
[198.35604858 19.66966248]
[187.79098511 21.98455429]
[180.44972229 35.06529617]
[100.88320160 147.02343750]
[106.38759613 160.97698975]
[111.89199066 174.93054199]
[117.39638519 188.88409424]
[122.97352600 202.80873108]
[128.62326050 216.70407104]
[134.27297974 230.59941101]
[139.92271423 244.49476624]
[145.57244873 258.39010620]
[151.22216797 272.28546143]
[156.87190247 286.18078613]
[162.52163696 300.07614136]
[168.31608582 313.91174316]
[174.25462341 327.68612671]
[180.19314575 341.46054077]
[186.13168335 355.23492432]
[192.07022095 369.00930786]
[206.30935669 365.89523315]
[222.56936646 372.75985718]
[237.56916809 372.83813477]
[252.56895447 372.91641235]
[267.56875610 372.99468994]
[282.56854248 373.07296753]
[297.56835938 373.15124512]
[307.54370117 361.10855103]
[322.93536377 358.34622192]
[336.47589111 366.16851807]
[341.77182007 380.88201904]
[336.32260132 395.53945923]
[322.70117188 403.22000122]
[307.33917236 400.29718018]
[297.49005127 388.15103149]
[282.49026489 388.07275391]
[267.49047852 387.99447632]
[252.49067688 387.91619873]
[237.49089050 387.83792114]
[222.49108887 387.75964355]
[213.69966125 399.91326904]
[218.46871948 414.13494873]
[223.23776245 428.35662842]
[228.00682068 442.57830811]
[232.77587891 456.79998779]
[237.54493713 471.02166748]
[252.19979858 475.76940918]
[261.14447021 488.09197998]
[261.11834717 503.14068604]
[252.34101868 515.14471436]
[257.11007690 529.36639404]
[271.66958618 525.72564697]
[286.46984863 523.23852539]
[301.41964722 521.92022705]
[316.42678833 521.77899170]
[331.39874268 522.81561279]
[346.24319458 525.02374268]
[360.86865234 528.38977051]
[375.18493652 532.89294434]
[389.10375977 538.50543213]
[402.53930664 545.19274902]
[415.40878296 552.91357422]
[427.63281250 561.62030029]
[439.13601685 571.25933838]
[449.84747314 581.77111816]
[459.70117188 593.09100342]
[468.63635254 605.14904785]
[476.59790039 617.87097168]
[483.53677368 631.17834473]
[489.41012573 644.98913574]
[494.18182373 659.21813965]
[497.82238770 673.77770996]
[500.30938721 688.57800293]
[501.62750244 703.52783203]
[501.76858521 718.53497314]
[500.73181152 733.50689697]
[498.52352905 748.35131836]
[495.15734863 762.97674561]
[490.65405273 777.29296875]
[485.04138184 791.21173096]
[478.35394287 804.64721680]
[470.63299561 817.51660156]
[461.92614746 829.74053955]
[452.28701782 841.24365234]
[441.77508545 851.95501709]
[430.45513916 861.80859375]
[418.39700317 870.74365234]
[405.67498779 878.70507812]
[392.36752319 885.64379883]
[378.55667114 891.51702881]
[364.32760620 896.28857422]
[349.76803589 899.92901611]
[334.96771240 902.41583252]
[320.01788330 903.73382568]
[305.01074219 903.87475586]
[290.03881836 902.83782959]
[275.19439697 900.62939453]
[260.56900024 897.26306152]
[246.25282288 892.75958252]
[232.33410645 887.14678955]
[218.89868164 880.45922852]
[206.02937317 872.73815918]
[193.80554199 864.03112793]
[182.30253601 854.39190674]
[171.59127808 843.87988281]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 246]
[25 245]
[29 241]
[30 240]
[31 239]
[32 238]
[33 237]
[34 236]
[35 46]
[36 45]
[37 44]
[38 43]
[47 215]
[48 214]
[49 213]
[50 212]
[51 211]
[54 210]
[55 209]
[56 208]
[57 207]
[58 206]
[59 205]
[60 204]
[61 203]
[63 202]
[64 201]
[65 200]
[66 199]
[67 86]
[68 85]
[69 84]
[70 83]
[71 82]
[72 81]
[73 80]
[74 79]
[93 100]
[94 99]
[103 113]
[104 112]
[105 111]
[116 151]
[117 150]
[118 149]
[119 148]
[120 147]
[122 145]
[123 144]
[124 143]
[125 142]
[126 141]
[128 139]
[129 138]
[152 198]
[153 197]
[155 193]
[156 192]
[157 191]
[158 190]
[159 189]
[160 188]
[161 187]
[162 186]
[163 185]
[164 184]
[167 181]
[168 180]
[169 178]
[170 177]
[217 235]
[218 234]
[219 233]
[220 232]
[221 231]
[222 230]
] def

init

% Start Annotations
24 246 0.0 1 colorpair
25 245 0.0 1 colorpair
29 241 0.0 1 colorpair
30 240 0.0 1 colorpair
31 239 0.0 1 colorpair
32 238 0.0 1 colorpair
33 237 0.0 1 colorpair
34 236 0.0 1 colorpair
35 46 0.0 1 colorpair
36 45 0.0 1 colorpair
37 44 0.0 1 colorpair
38 43 0.0 1 colorpair
47 215 0.0 1 colorpair
48 214 0.0 1 colorpair
49 213 0.0 1 colorpair
50 212 0.0 1 colorpair
51 211 0.0 1 colorpair
54 210 0.0 1 colorpair
55 209 0.0 1 colorpair
56 208 0.0 1 colorpair
57 207 0.0 1 colorpair
58 206 0.0 1 colorpair
59 205 0.0 1 colorpair
60 204 0.0 1 colorpair
61 203 0.0 1 colorpair
63 202 0.0 1 colorpair
64 201 0.0 1 colorpair
65 200 0.0 1 colorpair
66 199 0.0 1 colorpair
67 86 0.0 1 colorpair
68 85 0.0 1 colorpair
69 84 0.0 1 colorpair
70 83 0.0 1 colorpair
71 82 0.0 1 colorpair
72 81 0.0 1 colorpair
73 80 0.0 1 colorpair
74 79 0.0 1 colorpair
93 100 0.0 1 colorpair
94 99 0.0 1 colorpair
103 113 0.0 1 colorpair
104 112 0.0 1 colorpair
105 111 0.0 1 colorpair
116 151 0.0 1 colorpair
117 150 0.0 1 colorpair
118 149 0.0 1 colorpair
119 148 0.0 1 colorpair
120 147 0.0 1 colorpair
122 145 0.0 1 colorpair
123 144 0.0 1 colorpair
124 143 0.0 1 colorpair
125 142 0.0 1 colorpair
126 141 0.0 1 colorpair
128 139 0.0 1 colorpair
129 138 0.0 1 colorpair
152 198 0.0 1 colorpair
153 197 0.0 1 colorpair
155 193 0.0 1 colorpair
156 192 0.0 1 colorpair
157 191 0.0 1 colorpair
158 190 0.0 1 colorpair
159 189 0.0 1 colorpair
160 188 0.0 1 colorpair
161 187 0.0 1 colorpair
162 186 0.0 1 colorpair
163 185 0.0 1 colorpair
164 184 0.0 1 colorpair
167 181 0.0 1 colorpair
168 180 0.0 1 colorpair
169 178 0.0 1 colorpair
170 177 0.0 1 colorpair
217 235 0.0 1 colorpair
218 234 0.0 1 colorpair
219 233 0.0 1 colorpair
220 232 0.0 1 colorpair
221 231 0.0 1 colorpair
222 230 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
