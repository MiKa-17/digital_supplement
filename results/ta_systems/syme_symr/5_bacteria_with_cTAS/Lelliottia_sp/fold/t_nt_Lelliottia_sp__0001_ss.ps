%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Dec 24 20:46:14 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__________________________________________________________________________________________________________________________CAUGAACGGCCACUGGAUGGAAGAAGCCGGAUUCACCACCGGCACAAAACUGGACGUGAAGGUGAUGAAAGGCUGCAUGAUCAUGACCACACGA___CCAAAA___GAAGACACGGAAAUGAAAAAGCUGACC\
AAAAAAACCACCAAGCUCCCAGAAAACAAGCAAAAGCAGGUGGUGGAGCUUGUGCAGG__________\
) } def
/len { sequence length } bind def

/coor [
[-49.25817108 407.24011230]
[-52.45277786 421.89865112]
[-56.31125259 436.39660645]
[-60.82559967 450.70391846]
[-65.98645782 464.79092407]
[-71.78313446 478.62844849]
[-78.20361328 492.18777466]
[-85.23458862 505.44085693]
[-92.86148834 518.36016846]
[-101.06849670 530.91894531]
[-109.83860779 543.09118652]
[-119.15364838 554.85162354]
[-128.99430847 566.17596436]
[-139.34019470 577.04058838]
[-150.16986084 587.42309570]
[-161.46086121 597.30200195]
[-173.18978882 606.65667725]
[-185.33233643 615.46783447]
[-197.86334229 623.71722412]
[-210.75682068 631.38769531]
[-223.98606873 638.46337891]
[-237.52365112 644.92962646]
[-251.34150696 650.77301025]
[-265.41101074 655.98144531]
[-279.70297241 660.54406738]
[-294.18780518 664.45147705]
[-308.83547974 667.69555664]
[-323.61563110 670.26965332]
[-338.49758911 672.16827393]
[-353.45059204 673.38763428]
[-368.44354248 673.92517090]
[-383.44546509 673.77972412]
[-398.42520142 672.95159912]
[-413.35171509 671.44256592]
[-428.19409180 669.25573730]
[-442.92153931 666.39556885]
[-457.50357056 662.86810303]
[-471.90991211 658.68054199]
[-486.11074829 653.84167480]
[-500.07659912 648.36145020]
[-513.77856445 642.25128174]
[-527.18823242 635.52380371]
[-540.27783203 628.19293213]
[-553.02014160 620.27386475]
[-565.38885498 611.78308105]
[-577.35827637 602.73815918]
[-588.90362549 593.15777588]
[-600.00097656 583.06188965]
[-610.62725830 572.47137451]
[-620.76055908 561.40814209]
[-630.37982178 549.89520264]
[-639.46508789 537.95629883]
[-647.99755859 525.61633301]
[-655.95953369 512.90075684]
[-663.33447266 499.83602905]
[-670.10717773 486.44912720]
[-676.26354980 472.76785278]
[-681.79083252 458.82052612]
[-686.67761230 444.63610840]
[-690.91369629 430.24398804]
[-694.49035645 415.67395020]
[-697.40014648 400.95620728]
[-699.63708496 386.12130737]
[-701.19647217 371.19995117]
[-702.07507324 356.22311401]
[-702.27111816 341.22177124]
[-701.78424072 326.22708130]
[-700.61529541 311.27008057]
[-698.76684570 296.38177490]
[-696.24267578 281.59301758]
[-693.04803467 266.93450928]
[-689.18945312 252.43656921]
[-684.67504883 238.12928772]
[-679.51416016 224.04229736]
[-673.71740723 210.20480347]
[-667.29687500 196.64549255]
[-660.26586914 183.39245605]
[-652.63891602 170.47315979]
[-644.43188477 157.91439819]
[-635.66168213 145.74220276]
[-626.34661865 133.98178101]
[-616.50592041 122.65752411]
[-606.15997314 111.79290009]
[-595.33026123 101.41042328]
[-584.03924561 91.53161621]
[-572.31024170 82.17695618]
[-560.16766357 73.36583710]
[-547.63665771 65.11650848]
[-534.74316406 57.44607162]
[-521.51385498 50.37043381]
[-507.97625732 43.90425110]
[-494.15838623 38.06092834]
[-480.08886719 32.85257721]
[-465.79687500 28.28999710]
[-451.31201172 24.38263702]
[-436.66433716 21.13859940]
[-421.88418579 18.56460953]
[-407.00219727 16.66599846]
[-392.04922485 15.44670486]
[-377.05624390 14.90925407]
[-362.05432129 15.05476093]
[-347.07458496 15.88292408]
[-332.14807129 17.39202499]
[-317.30572510 19.57893753]
[-302.57827759 22.43913078]
[-287.99627686 25.96667290]
[-273.58993530 30.15425301]
[-259.38912964 34.99319458]
[-245.42327881 40.47346497]
[-231.72134399 46.58370590]
[-218.31170654 53.31125641]
[-205.22216797 60.64216995]
[-192.47985840 68.56124878]
[-180.11119080 77.05208588]
[-168.14179993 86.09707642]
[-156.59648132 95.67748260]
[-145.49919128 105.77343750]
[-134.87290955 116.36401367]
[-124.73966217 127.42726898]
[-115.12046051 138.94027710]
[-106.03523254 150.87916565]
[-97.50282288 163.21919250]
[-89.54090118 175.93476868]
[-76.47841644 168.56108093]
[-69.19858551 155.56672668]
[-53.37744522 155.52073669]
[-40.31495285 148.14704895]
[-27.25246239 140.77336121]
[-14.18997192 133.39965820]
[-6.91014385 120.40530396]
[8.91099548 120.35932159]
[21.97348595 112.98562622]
[35.03597641 105.61193848]
[48.09846878 98.23824310]
[53.22877121 84.14285278]
[47.96203995 70.09786987]
[42.69530869 56.05289078]
[37.42857742 42.00790787]
[32.16184616 27.96292496]
[26.89511299 13.91794205]
[12.40556908 7.60694742]
[6.70029593 -7.13162136]
[13.16413021 -21.55363274]
[27.96219444 -27.10276222]
[42.31505966 -20.48681068]
[47.70742416 -5.63090467]
[40.94009781 8.65121078]
[46.20682907 22.69619370]
[51.47356033 36.74117661]
[56.74029160 50.78615952]
[62.00702286 64.83113861]
[67.27375793 78.87612152]
[74.75119781 78.29492950]
[81.22171021 64.76228333]
[89.70609283 77.13254547]
[97.18354034 76.55135345]
[100.21680450 61.86124039]
[95.42999268 46.78155518]
[105.58112335 35.88183975]
[108.61438751 21.19172859]
[111.64765167 6.50161982]
[114.68091583 -8.18848991]
[109.89409637 -23.26817703]
[120.04522705 -34.16789246]
[123.07849121 -48.85800171]
[126.11175537 -63.54811096]
[129.14501953 -78.23822021]
[132.17828369 -92.92832947]
[121.62926483 -104.30804443]
[119.81719208 -119.71894836]
[127.43883514 -133.23524475]
[141.56352234 -139.65962219]
[156.76002502 -136.52180481]
[167.18498230 -125.02832031]
[168.82977295 -109.59866333]
[161.06193542 -96.16584778]
[146.86839294 -89.89506531]
[143.83512878 -75.20495605]
[140.80186462 -60.51484680]
[137.76860046 -45.82473755]
[134.73533630 -31.13463020]
[139.73910522 -17.10567665]
[129.37101746 -5.15522623]
[126.33776093 9.53488350]
[123.30449677 24.22499275]
[120.27123260 38.91510010]
[125.27500153 52.94405365]
[114.90691376 64.89450836]
[111.87364960 79.58461761]
[118.31361389 83.42868042]
[131.41168213 76.11837769]
[131.19354248 91.11682129]
[137.63351440 94.96089172]
[149.12417603 85.31907654]
[160.61483765 75.67726135]
[171.86842346 65.75976562]
[182.87832642 55.57241440]
[193.88822937 45.38506699]
[204.89813232 35.19771576]
[201.42298889 20.23713303]
[205.90908813 5.54800129]
[217.14965820 -4.91837788]
[232.12106323 -8.34660149]
[246.79605103 -3.81449342]
[257.22714233 7.45883131]
[260.60842896 22.44090462]
[256.03033447 37.10162354]
[244.72438049 47.49732971]
[229.73178101 50.83163071]
[215.08547974 46.20761490]
[204.07557678 56.39496613]
[193.06567383 66.58231354]
[182.05578613 76.76966858]
[196.78057861 79.62981415]
[203.81347656 92.87890625]
[197.93151855 106.67755127]
[183.50292969 110.77824402]
[171.24302673 102.13562775]
[170.25665283 87.16793060]
[158.76599121 96.80974579]
[147.27531433 106.45155334]
[148.39826965 113.86701202]
[163.10481262 110.91444397]
[177.81135559 107.96187592]
[192.51789856 105.00930786]
[207.22444153 102.05673981]
[221.93098450 99.10416412]
[236.63751221 96.15159607]
[251.34405518 93.19902802]
[266.05059814 90.24645996]
[280.75714111 87.29389191]
[295.46368408 84.34132385]
[308.56869507 77.04346466]
[323.05154419 80.94822693]
[330.71188354 93.84469604]
[327.21237183 108.43076324]
[314.53445435 116.44765472]
[299.85763550 113.35687256]
[284.93627930 114.89098358]
[270.01492310 116.42508698]
[255.09359741 117.95919037]
[240.17224121 119.49329376]
[225.25090027 121.02739716]
[210.32955933 122.56150055]
[195.40821838 124.09561157]
[180.48687744 125.62971497]
[165.56552124 127.16381836]
[150.64418030 128.69792175]
[151.76713562 136.11337280]
[165.59733582 141.92074585]
[179.42753601 147.72811890]
[193.25773621 153.53549194]
[207.08793640 159.34286499]
[216.15425110 159.77125549]
[221.02365112 165.27416992]
[234.79689026 171.21536255]
[248.57012939 177.15655518]
[262.34338379 183.09776306]
[274.20208740 173.42150879]
[289.20150757 170.37600708]
[303.89495850 174.66105652]
[314.90591431 185.29200745]
[319.70419312 199.82594299]
[317.18713379 214.92306519]
[307.93319702 227.11416626]
[294.06881714 233.59782410]
[278.77996826 232.88414001]
[265.57989502 225.13711548]
[257.50186157 212.13694763]
[256.40216064 196.87100220]
[242.62893677 190.92980957]
[228.85569763 184.98860168]
[215.08244324 179.04740906]
[201.28056335 173.17306519]
[187.45036316 167.36569214]
[173.62016296 161.55831909]
[159.78996277 155.75094604]
[145.95976257 149.94357300]
[137.00238037 161.97543335]
[146.53233337 173.55903625]
[156.06227112 185.14265442]
[165.59222412 196.72627258]
[181.07864380 198.40208435]
[190.57835388 210.28527832]
[188.88528442 225.03889465]
[198.41522217 236.62251282]
[213.95190430 241.87072754]
[216.90939331 258.00097656]
[204.24530029 268.41986084]
[188.98735046 262.40930176]
[186.83160400 246.15245056]
[177.30166626 234.56884766]
[162.49832153 233.38697815]
[152.66859436 221.77529907]
[154.00860596 206.25621033]
[144.47866821 194.67260742]
[134.94871521 183.08898926]
[125.41876984 171.50537109]
[55.47216034 111.30073547]
[42.40966797 118.67443085]
[29.34717751 126.04811859]
[16.28468704 133.42181396]
[8.07054234 146.94358826]
[-6.81628084 146.46215820]
[-19.87877274 153.83584595]
[-32.94126511 161.20953369]
[-46.00375366 168.58322144]
[-54.21789932 182.10499573]
[-69.10472107 181.62358093]
[-82.16721344 188.99726868]
[-75.39447021 202.38412476]
[-69.23803711 216.06538391]
[-63.71068954 230.01266479]
[-58.82387161 244.19706726]
[-54.58771896 258.58920288]
[-51.01100540 273.15921021]
[-48.10115051 287.87692261]
[-45.86418152 302.71182251]
[-44.30473709 317.63317871]
[-43.42604828 332.61001587]
[-43.22993851 347.61135864]
[-43.71680832 362.60604858]
[-44.88565445 377.56307983]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[123 310]
[124 309]
[126 307]
[127 306]
[128 305]
[129 304]
[131 302]
[132 301]
[133 300]
[134 299]
[135 152]
[136 151]
[137 150]
[138 149]
[139 148]
[140 147]
[156 189]
[157 188]
[159 186]
[160 185]
[161 184]
[162 183]
[164 181]
[165 180]
[166 179]
[167 178]
[168 177]
[193 221]
[194 220]
[195 219]
[196 213]
[197 212]
[198 211]
[199 210]
[249 278]
[250 277]
[251 276]
[252 275]
[253 274]
[255 273]
[256 272]
[257 271]
[258 270]
[279 298]
[280 297]
[281 296]
[282 295]
[285 292]
[286 291]
] def

init

% Start Annotations
123 310 0.0 0.6 colorpair
124 309 0.16 1 colorpair
126 307 0.0 0.6 colorpair
127 306 0.0 1 colorpair
128 305 0.0 1 colorpair
129 304 0.0 0.6 colorpair
131 302 0.0 0.6 colorpair
132 301 0.0 1 colorpair
133 300 0.16 1 colorpair
134 299 0.0 1 colorpair
135 152 0.0 1 colorpair
136 151 0.0 1 colorpair
137 150 0.0 1 colorpair
138 149 0.0 1 colorpair
139 148 0.0 0.6 colorpair
140 147 0.0 1 colorpair
156 189 0.16 1 colorpair
157 188 0.0 1 colorpair
159 186 0.0 1 colorpair
160 185 0.0 1 colorpair
161 184 0.0 1 colorpair
162 183 0.0 1 colorpair
164 181 0.0 0.6 colorpair
165 180 0.0 1 colorpair
166 179 0.0 1 colorpair
167 178 0.0 1 colorpair
168 177 0.0 0.6 colorpair
193 221 0.0 1 colorpair
194 220 0.0 1 colorpair
195 219 0.0 0.6 colorpair
196 213 0.16 1 colorpair
197 212 0.0 1 colorpair
198 211 0.16 1 colorpair
199 210 0.0 0.6 colorpair
249 278 0.0 0.6 colorpair
250 277 0.0 1 colorpair
251 276 0.0 1 colorpair
252 275 0.0 1 colorpair
253 274 0.0 0.6 colorpair
255 273 0.16 1 colorpair
256 272 0.0 0.6 colorpair
257 271 0.16 1 colorpair
258 270 0.16 1 colorpair
279 298 0.0 0.6 colorpair
280 297 0.16 1 colorpair
281 296 0.16 1 colorpair
282 295 0.0 0.6 colorpair
285 292 0.0 1 colorpair
286 291 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
123 310 1 gmark
124 cmark
309 cmark
126 307 1 gmark
129 304 1 gmark
131 302 1 gmark
133 cmark
139 148 1 gmark
156 cmark
164 181 1 gmark
168 177 1 gmark
195 219 1 gmark
213 cmark
198 cmark
211 cmark
199 210 1 gmark
249 278 1 gmark
253 274 1 gmark
255 cmark
273 cmark
256 272 1 gmark
257 cmark
271 cmark
258 cmark
270 cmark
279 298 1 gmark
280 cmark
297 cmark
281 cmark
282 295 1 gmark

% End Annotations
showpage
end
%%EOF
