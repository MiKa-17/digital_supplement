%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Dec 24 20:49:46 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_______________________________CC_ACUA__AG__G_AGUUAG_UUAUGGCUAAACGCGAUUGUAAUGCAAAUUCAGCCAGUUCAAAAGCCCAGCGCAGCUAUAAGGUCGGCUAUGCCAGCACACGCCACGCAGACCGCAGCACCGGCAUGACCCGCUAUUACAGCCAGCACCCCAGUUUGCAUCUUAAAGGCAACUGGCUGGAAGAAGCGGGCUUUGCCACCGGGCAGCCAGUACAGGUCAGUGU\
UGAGCACGGGCAGUUGAUUAUCCGGCUCGUUGAGAACAACUGACGGCUAAAA____________________________________\
) } def
/len { sequence length } bind def

/coor [
[384.14120483 488.51855469]
[379.52444458 502.79037476]
[374.03674316 516.75048828]
[367.69897461 530.34582520]
[360.53527832 543.52465820]
[352.57284546 556.23687744]
[343.84201050 568.43408203]
[334.37594604 580.06994629]
[324.21066284 591.10021973]
[313.38479614 601.48297119]
[301.93954468 611.17864990]
[289.91842651 620.15039062]
[277.36715698 628.36413574]
[264.33346558 635.78863525]
[250.86692810 642.39562988]
[237.01873779 648.15997314]
[222.84158325 653.05975342]
[208.38935852 657.07635498]
[193.71702576 660.19451904]
[178.88040161 662.40234375]
[163.93589783 663.69152832]
[148.94035339 664.05700684]
[133.95079041 663.49749756]
[119.02422333 662.01513672]
[104.21739960 659.61553955]
[89.58664703 656.30780029]
[75.18759918 652.10455322]
[61.07501221 647.02172852]
[47.30256271 641.07873535]
[33.92262268 634.29809570]
[20.98607635 626.70562744]
[8.54212284 618.33013916]
[-3.36191583 609.20361328]
[-14.68076801 599.36065674]
[-25.37138748 588.83874512]
[-35.39311981 577.67785645]
[-44.70785141 565.92053223]
[-53.28015518 553.61132812]
[-61.07743835 540.79718018]
[-68.07004547 527.52679443]
[-74.23137665 513.85064697]
[-79.53800964 499.82067871]
[-83.96975708 485.49029541]
[-87.50977325 470.91400146]
[-90.14458466 456.14721680]
[-91.86418152 441.24612427]
[-92.66201019 426.26733398]
[-92.53505707 411.26788330]
[-91.48378754 396.30477905]
[-89.51220703 381.43490601]
[-86.62780762 366.71484375]
[-82.84156799 352.20056152]
[-78.16788483 337.94726562]
[-72.62451935 324.00912476]
[-66.23695374 310.44781494]
[-57.15080643 298.51290894]
[-70.84654999 304.63064575]
[-80.29113770 317.32354736]
[-95.06742096 315.44982910]
[-108.76316071 321.56756592]
[-115.81416321 335.97805786]
[-131.50753784 339.30935669]
[-143.80467224 329.00595093]
[-143.27224731 312.97174072]
[-130.31871033 303.50680542]
[-114.88088989 307.87182617]
[-101.18515015 301.75408936]
[-92.72016907 289.49874878]
[-76.96427917 290.93490601]
[-63.26853561 284.81716919]
[-63.64509583 277.32662964]
[-78.62617493 278.07974243]
[-93.60726166 278.83285522]
[-108.58834076 279.58596802]
[-123.56941986 280.33908081]
[-138.55050659 281.09222412]
[-153.53158569 281.84533691]
[-168.51266479 282.59844971]
[-183.49374390 283.35156250]
[-198.47483826 284.10467529]
[-213.45591736 284.85778809]
[-228.43699646 285.61093140]
[-243.41809082 286.36380005]
[-244.17074585 271.38269043]
[-229.19010925 270.62982178]
[-214.20903015 269.87670898]
[-199.22795105 269.12359619]
[-184.24687195 268.37048340]
[-169.26579285 267.61737061]
[-154.28469849 266.86425781]
[-139.30361938 266.11114502]
[-124.32254028 265.35800171]
[-109.34146118 264.60488892]
[-94.36037445 263.85177612]
[-79.37929535 263.09866333]
[-64.39821625 262.34555054]
[-64.77477264 254.85499573]
[-79.01500702 250.14164734]
[-93.25524139 245.42829895]
[-105.77957916 254.58911133]
[-121.29664612 254.60508728]
[-133.83981323 245.47007751]
[-138.58598328 230.69667053]
[-133.71014404 215.96554565]
[-121.08717346 206.94113159]
[-105.57084656 207.09349060]
[-93.12751007 216.36402893]
[-88.54188538 231.18804932]
[-74.30165100 235.90141296]
[-60.06141663 240.61476135]
[-70.29869843 229.65127563]
[-83.65416718 222.82255554]
[-93.25328827 211.29620361]
[-97.55260468 196.92553711]
[-95.86083221 182.02125549]
[-88.44998169 168.97979736]
[-76.51165771 159.89814758]
[-61.96543884 156.23652649]
[-47.15021896 158.58370972]
[-34.44815445 166.56227112]
[-25.90162086 178.88935852]
[-22.88482475 193.58285522]
[-25.88284111 208.28019714]
[-34.41475296 220.61926270]
[-38.24197006 235.12280273]
[-27.92990685 224.22961426]
[-17.61784363 213.33644104]
[-25.92758751 204.02571106]
[-33.50221634 194.10772705]
[-40.29751587 183.64038086]
[-46.27381516 172.68476868]
[-51.39623260 161.30487061]
[-55.63486099 149.56709290]
[-58.96495819 137.53994751]
[-61.36708450 125.29367828]
[-62.82721710 112.89974976]
[-63.33683014 100.43051910]
[-62.89295578 87.95877075]
[-61.49817657 75.55731964]
[-59.16064072 63.29854965]
[-55.89398956 51.25403214]
[-51.71729660 39.49406815]
[-46.65494156 28.08731651]
[-40.73647690 17.10036087]
[-33.99644852 6.59733677]
[-26.47420692 -3.36044097]
[-18.21366310 -12.71484375]
[-9.26303482 -21.41126442]
[0.32542396 -29.39893723]
[10.49574184 -36.63123322]
[21.18854713 -43.06593323]
[32.34142303 -48.66547394]
[43.88925934 -53.39716721]
[55.76464462 -57.23339081]
[52.36962128 -71.84413147]
[48.97459412 -86.45487976]
[35.42908859 -94.59703827]
[31.68946648 -109.95251465]
[39.97438431 -123.41118622]
[55.36854172 -126.98825073]
[68.73886108 -118.56150055]
[72.15296936 -103.13038635]
[63.58533859 -89.84989929]
[66.98036194 -75.23915863]
[70.37538910 -60.62841797]
[81.74340057 -62.31389999]
[93.20178223 -63.19586563]
[104.69382477 -63.26994324]
[116.16262817 -62.53576660]
[127.55141449 -60.99697495]
[138.80381775 -58.66117859]
[149.86412048 -55.53994751]
[155.09442139 -69.59854126]
[160.32470703 -83.65713501]
[165.55500793 -97.71572876]
[170.78529358 -111.77432251]
[160.29217529 -122.80408478]
[155.64743042 -137.23715210]
[157.72132874 -152.19438171]
[166.04948425 -164.71649170]
[178.93544006 -172.34941101]
[193.79603577 -173.62528992]
[199.02633667 -187.68388367]
[187.46777344 -197.49079895]
[179.96315002 -210.66108704]
[177.41867065 -225.60437012]
[180.14158630 -240.51615906]
[187.80311584 -253.59579468]
[199.47807312 -263.26385498]
[213.75665283 -268.35284424]
[228.91464233 -268.24829102]
[243.12165833 -262.96276855]
[254.66212463 -253.13456726]
[262.14245605 -239.95046997]
[264.65939331 -225.00253296]
[261.90899658 -210.09579468]
[254.22338867 -197.03030396]
[242.53063965 -187.38377380]
[228.24270630 -182.32109070]
[213.08493042 -182.45359802]
[207.85462952 -168.39500427]
[218.26774597 -157.71640015]
[223.03138733 -143.51721191]
[221.14993286 -128.59671021]
[212.94340515 -115.92102051]
[199.99456787 -108.03338623]
[184.84388733 -106.54402924]
[179.61360168 -92.48543549]
[174.38330078 -78.42684174]
[169.15301514 -64.36824799]
[163.92271423 -50.30965424]
[173.12001038 -46.05673599]
[182.03588867 -41.24170303]
[190.63604736 -35.88308716]
[198.88737488 -30.00151062]
[206.75813293 -23.61960793]
[214.21801758 -16.76194191]
[221.23831177 -9.45490456]
[227.79202271 -1.72661853]
[233.85391235 6.39317369]
[239.40063477 14.87322235]
[252.54788208 7.65171909]
[265.69512939 0.43021631]
[278.84234619 -6.79128647]
[287.21298218 -20.21676064]
[302.09320068 -19.56248856]
[310.46380615 -32.98796082]
[325.34405518 -32.33368683]
[333.37701416 -46.63065720]
[349.77597046 -46.55179596]
[357.67108154 -32.17823029]
[348.94052124 -18.29625130]
[332.56555176 -19.18644905]
[325.13531494 -6.27750492]
[309.31469727 -6.41524839]
[301.88446045 6.49369621]
[286.06384277 6.35595274]
[272.91662598 13.57745552]
[259.76937866 20.79895782]
[246.62214661 28.02046204]
[249.83486938 34.97216797]
[252.71821594 42.06682205]
[255.26585388 49.28883362]
[257.47216797 56.62231827]
[259.33230591 64.05115509]
[260.84222412 71.55902100]
[261.99853516 79.12940979]
[275.11688232 70.28523254]
[288.43643188 76.95149994]
[303.38577271 75.71999359]
[313.41342163 63.50434494]
[329.14974976 62.04035187]
[341.25869751 72.19657898]
[342.55624390 87.94750977]
[332.27255249 99.94840240]
[316.50878906 101.07934570]
[304.61727905 90.66935730]
[289.66793823 91.90086365]
[277.61886597 100.65695190]
[263.23004150 94.07877350]
[263.21353149 106.36016083]
[262.27426147 118.60559082]
[260.41757202 130.74583435]
[257.65396118 142.71224976]
[271.93664551 147.29534912]
[286.21932983 151.87846375]
[300.52279663 156.39631653]
[314.84674072 160.84880066]
[329.17068481 165.30128479]
[343.49462891 169.75376892]
[355.84954834 160.36572266]
[371.36373901 160.06634521]
[384.07165527 168.97074890]
[389.08685303 183.65501404]
[384.48089600 198.47271729]
[372.02484131 207.72618103]
[356.50833130 207.85723877]
[343.89773560 198.81550598]
[339.04214478 184.07771301]
[324.71820068 179.62522888]
[310.39425659 175.17274475]
[296.07031250 170.72026062]
[288.79650879 171.72871399]
[281.63623047 166.16114807]
[267.35354614 161.57803345]
[253.07084656 156.99493408]
[243.80612183 177.45260620]
[231.82283020 196.44609070]
[217.34750366 213.61631775]
[200.65380859 228.63871765]
[182.05731201 241.22926331]
[161.90956116 251.14996338]
[140.59146118 258.21325684]
[118.50600433 262.28564453]
[96.07070160 263.29013062]
[73.70967865 261.20770264]
[51.84566116 256.07775879]
[30.89196968 247.99725342]
[11.24472046 237.11894226]
[-6.72466421 223.64849854]
[-17.03672600 234.54168701]
[-27.34878731 245.43486023]
[-13.07663345 240.81906128]
[-1.67016077 231.07778931]
[10.31506538 222.05812073]
[22.83346367 213.79437256]
[35.83742905 206.31794739]
[49.27750778 199.65728760]
[63.10258484 193.83773804]
[77.26008606 188.88140869]
[91.69616699 184.80715942]
[106.35593414 181.63047791]
[121.18363190 179.36346436]
[136.12286377 178.01470947]
[151.11683655 177.58937073]
[166.10850525 178.08905029]
[181.04087830 179.51184082]
[195.85716248 181.85235596]
[210.50099182 185.10168457]
[224.91670227 189.24745178]
[239.04945374 194.27391052]
[252.84550476 200.16194153]
[266.25238037 206.88916016]
[279.21911621 214.42996216]
[291.69641113 222.75567627]
[303.63674927 231.83465576]
[314.99478149 241.63237000]
[325.72732544 252.11154175]
[335.79348755 263.23233032]
[345.15505981 274.95245361]
[353.77642822 287.22729492]
[361.62475586 300.01025391]
[368.67025757 313.25262451]
[374.88610840 326.90411377]
[380.24868774 340.91278076]
[384.73757935 355.22537231]
[388.33572388 369.78741455]
[391.02941895 384.54357910]
[392.80847168 399.43771362]
[393.66604614 414.41317749]
[393.59893799 429.41302490]
[392.60739136 444.38021851]
[390.69515991 459.25781250]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[56 70]
[57 69]
[59 67]
[60 66]
[97 110]
[98 109]
[99 108]
[125 302]
[126 301]
[127 300]
[154 165]
[155 164]
[156 163]
[172 211]
[173 210]
[174 209]
[175 208]
[176 207]
[182 201]
[183 200]
[221 240]
[222 239]
[223 238]
[224 237]
[226 235]
[228 233]
[247 260]
[249 258]
[250 257]
[264 286]
[265 285]
[266 284]
[267 282]
[268 281]
[269 280]
[270 279]
] def

init

% Start Annotations
56 70 0.0 1 colorpair
57 69 0.0 1 colorpair
59 67 0.0 1 colorpair
60 66 0.0 1 colorpair
97 110 0.0 1 colorpair
98 109 0.0 1 colorpair
99 108 0.16 1 colorpair
125 302 0.16 1 colorpair
127 300 0.0 1 colorpair
155 164 0.0 1 colorpair
156 163 0.0 1 colorpair
172 211 0.0 1 colorpair
173 210 0.0 1 colorpair
174 209 0.16 1 colorpair
175 208 0.16 1 colorpair
176 207 0.0 1 colorpair
182 201 0.0 1 colorpair
183 200 0.0 1 colorpair
221 240 0.0 1 colorpair
222 239 0.0 1 colorpair
223 238 0.0 1 colorpair
224 237 0.0 1 colorpair
226 235 0.16 1 colorpair
228 233 0.16 1 colorpair
247 260 0.16 1 colorpair
249 258 0.0 1 colorpair
250 257 0.16 1 colorpair
264 286 0.0 1 colorpair
265 285 0.32 1 colorpair
266 284 0.0 1 colorpair
267 282 0.0 1 colorpair
268 281 0.0 1 colorpair
269 280 0.16 1 colorpair
270 279 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
99 cmark
125 cmark
302 cmark
126 301 4 gmark
126 cmark
154 165 4 gmark
154 cmark
174 cmark
209 cmark
175 cmark
235 cmark
228 cmark
247 cmark
260 cmark
250 cmark
265 cmark
285 cmark
280 cmark
279 cmark

% End Annotations
showpage
end
%%EOF
