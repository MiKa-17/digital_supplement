%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Dec 24 20:47:37 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__________________________ACACGCCGCUGACCACAACCA__ACUGAAAAGGAGU__UAAUCAUGGCUGACACACAUUCUAAGGCAGA_ACCCGCAGAACCACAAGCCCCGCC_G__AAU_______GCGUAAAUUCACAGUUGGUUACCGGCCUAACUAUGGCGAGCCGAACCCGAUGCCCCAGAUGACCAUGAAAGGCCAAUGGCUGGAAGCGGUGGGAUUUACCACCGGCCAGGAAGUCGAGGUG\
AUCGCCGGGCAGGGCCA______GCUGAUCAUCCGGC__UGGCAGCGAAAGGAUA_AGUAACUGAGU_AGACAUUAAAACUC___CGGCGAGGAAGCCAGAA_____________________________________________\
) } def
/len { sequence length } bind def

/coor [
[59.87517166 1867.49255371]
[44.87854385 1867.15686035]
[29.89014244 1866.55725098]
[14.91461468 1865.69396973]
[-0.04339967 1864.56726074]
[-14.97926903 1863.17749023]
[-29.88836670 1861.52502441]
[-44.76607513 1859.61047363]
[-59.60778427 1857.43444824]
[-74.40889740 1854.99755859]
[-89.16483307 1852.30041504]
[-103.87100983 1849.34411621]
[-118.52288818 1846.12951660]
[-133.11592102 1842.65747070]
[-147.64558411 1838.92907715]
[-162.10739136 1834.94567871]
[-176.49684143 1830.70825195]
[-190.80950928 1826.21838379]
[-205.04092407 1821.47717285]
[-219.18670654 1816.48632812]
[-233.24244690 1811.24731445]
[-247.20382690 1805.76171875]
[-261.06649780 1800.03125000]
[-274.82617188 1794.05773926]
[-288.47857666 1787.84301758]
[-302.01950073 1781.38891602]
[-315.44473267 1774.69750977]
[-328.75015259 1767.77087402]
[-341.93157959 1760.61120605]
[-354.98495483 1753.22058105]
[-367.90628052 1745.60144043]
[-380.69149780 1737.75610352]
[-393.33663940 1729.68688965]
[-405.83782959 1721.39648438]
[-418.19119263 1712.88720703]
[-430.39288330 1704.16198730]
[-442.43911743 1695.22326660]
[-454.32617188 1686.07397461]
[-466.05038452 1676.71691895]
[-477.60809326 1667.15502930]
[-488.99572754 1657.39111328]
[-500.20974731 1647.42834473]
[-511.24673462 1637.26977539]
[-522.10321045 1626.91845703]
[-532.77581787 1616.37780762]
[-543.26129150 1605.65087891]
[-553.55633545 1594.74108887]
[-563.65777588 1583.65173340]
[-573.56256104 1572.38647461]
[-583.26745605 1560.94848633]
[-592.76959229 1549.34155273]
[-602.06604004 1537.56921387]
[-611.15380859 1525.63500977]
[-620.03015137 1513.54284668]
[-628.69226074 1501.29626465]
[-637.13757324 1488.89916992]
[-645.36334229 1476.35522461]
[-653.36712646 1463.66857910]
[-661.14636230 1450.84301758]
[-668.69866943 1437.88256836]
[-676.02178955 1424.79113770]
[-683.11328125 1411.57299805]
[-689.97113037 1398.23193359]
[-696.59307861 1384.77233887]
[-702.97711182 1371.19824219]
[-709.12127686 1357.51391602]
[-715.02368164 1343.72363281]
[-720.68249512 1329.83154297]
[-726.09588623 1315.84204102]
[-731.26226807 1301.75939941]
[-736.17999268 1287.58801270]
[-740.84759521 1273.33227539]
[-745.26354980 1258.99670410]
[-749.42651367 1244.58557129]
[-753.33526611 1230.10327148]
[-756.98846436 1215.55456543]
[-760.38513184 1200.94384766]
[-763.52410889 1186.27551270]
[-766.40441895 1171.55432129]
[-769.02520752 1156.78466797]
[-771.38568115 1141.97119141]
[-773.48510742 1127.11840820]
[-775.32275391 1112.23095703]
[-776.89819336 1097.31359863]
[-778.21081543 1082.37072754]
[-779.26019287 1067.40710449]
[-780.04614258 1052.42724609]
[-780.56829834 1037.43603516]
[-780.82659912 1022.43780518]
[-780.82086182 1007.43743896]
[-780.55114746 992.43945312]
[-780.01745605 977.44860840]
[-779.22009277 962.46942139]
[-778.15924072 947.50659180]
[-776.83520508 932.56475830]
[-775.24841309 917.64849854]
[-773.39935303 902.76251221]
[-771.28857422 887.91137695]
[-768.91680908 873.09967041]
[-766.28466797 858.33203125]
[-763.39312744 843.61297607]
[-760.24291992 828.94708252]
[-756.83514404 814.33892822]
[-753.17077637 799.79302979]
[-749.25097656 785.31384277]
[-745.07696533 770.90588379]
[-740.65002441 756.57360840]
[-735.97155762 742.32147217]
[-731.04302979 728.15386963]
[-725.86584473 714.07519531]
[-720.44177246 700.08978271]
[-714.77233887 686.20208740]
[-708.85943604 672.41625977]
[-702.70477295 658.73663330]
[-696.31036377 645.16741943]
[-689.67810059 631.71289062]
[-682.81011963 618.37713623]
[-675.70843506 605.16430664]
[-668.37536621 592.07855225]
[-660.81317139 579.12384033]
[-653.02410889 566.30419922]
[-645.01062012 553.62365723]
[-636.77526855 541.08612061]
[-628.32049561 528.69543457]
[-619.64898682 516.45550537]
[-610.76342773 504.37005615]
[-601.66650391 492.44287109]
[-592.36114502 480.67761230]
[-582.85009766 469.07794189]
[-573.13641357 457.64743042]
[-563.22308350 446.38967896]
[-553.11315918 435.30813599]
[-542.80975342 424.40621948]
[-532.31610107 413.68731689]
[-521.63543701 403.15475464]
[-510.77102661 392.81179810]
[-499.72631836 382.66165161]
[-488.50463867 372.70742798]
[-477.10955811 362.95227051]
[-465.54452515 353.39913940]
[-453.81320190 344.05105591]
[-441.91912842 334.91085815]
[-429.86605835 325.98138428]
[-417.65771484 317.26544189]
[-405.29785156 308.76568604]
[-392.79034424 300.48480225]
[-380.13900757 292.42529297]
[-367.34780884 284.58969116]
[-354.42068481 276.98040771]
[-341.36163330 269.59979248]
[-328.17474365 262.45016479]
[-314.86404419 255.53373718]
[-301.43368530 248.85263062]
[-287.88784790 242.40890503]
[-274.23068237 236.20457458]
[-260.46646118 230.24156189]
[-246.59941101 224.52171326]
[-232.63383484 219.04679871]
[-218.57409668 213.81851196]
[-204.42449951 208.83847046]
[-190.18946838 204.10821533]
[-175.87338257 199.62922668]
[-161.48068237 195.40287781]
[-147.01583862 191.43046570]
[-132.48332214 187.71325684]
[-117.88764954 184.25236511]
[-103.23331451 181.04888916]
[-88.52487946 178.10382080]
[-73.76688385 175.41804504]
[-58.96391296 172.99243164]
[-44.12054443 170.82769775]
[-29.24137878 168.92453003]
[-14.33102226 167.28350830]
[0.60590506 165.90516663]
[15.56477642 164.78990173]
[30.54095840 163.93807983]
[45.52981186 163.34994507]
[60.52669525 163.02569580]
[75.52696228 162.96543884]
[90.52597046 163.16917419]
[90.99362183 148.17646790]
[91.46128082 133.18376160]
[75.72694397 124.18450165]
[66.78525543 108.41738129]
[67.13848877 90.29470825]
[76.68779755 74.88800049]
[92.76085663 66.50871277]
[92.87779236 51.50917053]
[77.81839752 46.55261612]
[65.05078888 37.18652344]
[55.82382584 24.34199715]
[51.03538132 9.28963757]
[51.14500809 -6.48615265]
[56.12985229 -21.43354225]
[65.48808289 -34.08593369]
[78.28939819 -43.20584488]
[93.26749420 -47.90596008]
[93.26749420 -62.90596008]
[81.91635132 -73.90264893]
[81.74925995 -89.70605469]
[92.86534882 -100.94029236]
[108.66963959 -100.94029236]
[119.78572083 -89.70605469]
[119.61862946 -73.90264893]
[108.26749420 -62.90596008]
[108.26749420 -47.90596008]
[121.89337158 -43.85293961]
[133.84332275 -36.12365723]
[143.14836121 -25.33423042]
[149.05097961 -12.34933376]
[151.06678772 1.78707898]
[149.02433777 15.93571377]
[143.07955933 28.95375633]
[133.70396423 39.78717422]
[121.64725494 47.55606079]
[107.87733459 51.62610245]
[107.76040649 66.62564850]
[118.45920563 71.13256073]
[127.03899384 78.95328522]
[132.51486206 89.19004822]
[134.25822449 100.66773224]
[132.06892395 112.06877136]
[126.19831085 122.08438110]
[117.32028198 129.56483459]
[106.45398712 133.65141296]
[105.98633575 148.64411926]
[105.51867676 163.63682556]
[120.50122070 164.36828613]
[135.46856689 165.36329651]
[150.41609192 166.62158203]
[165.33915710 168.14273071]
[180.23313904 169.92626953]
[195.09341431 171.97164917]
[209.91540527 174.27824402]
[224.69450378 176.84533691]
[239.42613220 179.67213440]
[254.10572815 182.75775146]
[268.72875977 186.10122681]
[283.29064941 189.70155334]
[297.78695679 193.55758667]
[312.21313477 197.66815186]
[326.56475830 202.03196716]
[340.83734131 206.64767456]
[355.02648926 211.51385498]
[369.12780762 216.62899780]
[383.13693237 221.99151611]
[397.04946899 227.59974670]
[410.86117554 233.45196533]
[424.56774902 239.54634094]
[438.16494751 245.88101196]
[451.64855957 252.45397949]
[465.01440430 259.26324463]
[478.25833130 266.30667114]
[491.37625122 273.58209229]
[504.36410522 281.08724976]
[517.21789551 288.81982422]
[529.93353271 296.77740479]
[542.50720215 304.95751953]
[554.93493652 313.35766602]
[567.21295166 321.97525024]
[579.33740234 330.80755615]
[591.30450439 339.85189819]
[603.11059570 349.10540771]
[614.75201416 358.56530762]
[626.22509766 368.22857666]
[637.52642822 378.09228516]
[648.65234375 388.15338135]
[659.59948730 398.40869141]
[670.36444092 408.85507202]
[680.94390869 419.48931885]
[691.33459473 430.30807495]
[701.53320312 441.30804443]
[711.53674316 452.48577881]
[721.34191895 463.83782959]
[730.94586182 475.36071777]
[740.34545898 487.05081177]
[749.53790283 498.90454102]
[758.52032471 510.91818237]
[767.28991699 523.08807373]
[775.84399414 535.41040039]
[784.17980957 547.88134766]
[792.29492188 560.49713135]
[800.18676758 573.25372314]
[807.85284424 586.14721680]
[815.29083252 599.17364502]
[822.49841309 612.32897949]
[829.47332764 625.60913086]
[836.21350098 639.00994873]
[842.71673584 652.52728271]
[848.98114014 666.15704346]
[855.00463867 679.89489746]
[860.78546143 693.73663330]
[866.32177734 707.67797852]
[871.61187744 721.71459961]
[876.65411377 735.84210205]
[881.44696045 750.05621338]
[885.98895264 764.35241699]
[890.27856445 778.72637939]
[894.31457520 793.17358398]
[898.09570312 807.68963623]
[901.62078857 822.26995850]
[904.88873291 836.91003418]
[907.89849854 851.60534668]
[910.64916992 866.35137939]
[913.13989258 881.14355469]
[915.36993408 895.97723389]
[917.33856201 910.84790039]
[919.04516602 925.75091553]
[920.48925781 940.68157959]
[921.67028809 955.63543701]
[922.58801270 970.60772705]
[923.24212646 985.59381104]
[923.63232422 1000.58917236]
[923.75860596 1015.58898926]
[923.62084961 1030.58874512]
[923.21917725 1045.58374023]
[922.55364990 1060.56933594]
[921.62451172 1075.54101562]
[920.43200684 1090.49389648]
[918.97650146 1105.42346191]
[917.25854492 1120.32519531]
[915.27856445 1135.19433594]
[913.03717041 1150.02636719]
[910.53515625 1164.81652832]
[907.77319336 1179.56042480]
[904.75219727 1194.25354004]
[901.47308350 1208.89111328]
[897.93688965 1223.46875000]
[894.14465332 1237.98181152]
[890.09759521 1252.42602539]
[885.79699707 1266.79663086]
[881.24414062 1281.08935547]
[876.44042969 1295.29980469]
[871.38739014 1309.42346191]
[866.08654785 1323.45605469]
[860.53955078 1337.39318848]
[854.74816895 1351.23046875]
[848.71417236 1364.96374512]
[842.43939209 1378.58874512]
[835.92578125 1392.10107422]
[829.17541504 1405.49670410]
[822.19030762 1418.77160645]
[814.97271729 1431.92138672]
[807.52478027 1444.94213867]
[799.84881592 1457.82971191]
[791.94726562 1470.58032227]
[783.82250977 1483.18981934]
[775.47717285 1495.65441895]
[766.91369629 1507.97021484]
[758.13482666 1520.13342285]
[749.14318848 1532.14025879]
[739.94171143 1543.98693848]
[730.53314209 1555.66979980]
[720.92041016 1567.18530273]
[711.10656738 1578.52990723]
[701.09454346 1589.70007324]
[690.88745117 1600.69213867]
[680.48852539 1611.50305176]
[669.90093994 1622.12915039]
[659.12799072 1632.56726074]
[648.17303467 1642.81420898]
[637.03942871 1652.86682129]
[625.73059082 1662.72192383]
[614.25012207 1672.37646484]
[602.60150146 1681.82739258]
[590.78833008 1691.07189941]
[578.81427002 1700.10705566]
[566.68310547 1708.93017578]
[554.39855957 1717.53833008]
[541.96435547 1725.92895508]
[529.38446045 1734.09948730]
[516.66271973 1742.04736328]
[503.80303955 1749.77014160]
[490.80947876 1757.26538086]
[477.68597412 1764.53076172]
[464.43667603 1771.56408691]
[451.06564331 1778.36315918]
[437.57702637 1784.92578125]
[423.97497559 1791.25000000]
[410.26376343 1797.33398438]
[396.44757080 1803.17565918]
[382.53073120 1808.77319336]
[368.51754761 1814.12500000]
[354.41232300 1819.22937012]
[340.21945190 1824.08471680]
[325.94335938 1828.68957520]
[311.58840942 1833.04235840]
[297.15908813 1837.14196777]
[282.65985107 1840.98693848]
[268.09518433 1844.57604980]
[253.46961975 1847.90832520]
[238.78765869 1850.98278809]
[224.05387878 1853.79833984]
[209.27282715 1856.35412598]
[194.44908142 1858.64941406]
[179.58723450 1860.68347168]
[164.69189453 1862.45556641]
[149.76768494 1863.96533203]
[134.81919861 1865.21215820]
[119.85109711 1866.19580078]
[104.86799622 1866.91577148]
[89.87454987 1867.37194824]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[180 227]
[181 226]
[182 225]
[187 217]
[188 216]
[197 206]
[198 205]
] def

init

% Start Annotations
180 227 0.16 1 colorpair
181 226 0.0 1 colorpair
182 225 0.16 1 colorpair
187 217 0.0 1 colorpair
188 216 0.0 1 colorpair
197 206 0.16 1 colorpair
198 205 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
180 cmark
182 cmark
225 cmark
197 cmark
198 cmark

% End Annotations
showpage
end
%%EOF
