%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Dec 24 15:26:51 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCAU_GAUC___GCUA__U_____U_C___C_C__U_U___A_A__UAGUG_A_UU_G_UGAUUAGCGG_UGCGGGGG_UG_U_U_G_C_C_G_CACCUCCGCA__CCGCGCU_____\
) } def
/len { sequence length } bind def

/coor [
[-16.55218315 244.13948059]
[-27.79907227 254.07698059]
[-39.80913162 263.07723999]
[-52.50447083 271.08190918]
[-65.80275726 278.03906250]
[-79.61774445 283.90356445]
[-93.85982513 288.63742065]
[-108.43665314 292.20989990]
[-123.25366974 294.59783936]
[-138.21479797 295.78573608]
[-153.22299194 295.76589966]
[-168.18092346 294.53848267]
[-182.99157715 292.11141968]
[-197.55891418 288.50045776]
[-211.78845215 283.72900391]
[-225.58789062 277.82803345]
[-238.86775208 270.83578491]
[-251.54190063 262.79760742]
[-263.52816772 253.76564026]
[-274.74874878 243.79847717]
[-285.13095093 232.96073914]
[-294.60739136 221.32272339]
[-303.11660767 208.95989990]
[-310.60345459 195.95245361]
[-317.01931763 182.38475037]
[-322.32266235 168.34477234]
[-326.47903442 153.92356873]
[-329.46148682 139.21469116]
[-331.25070190 124.31350708]
[-331.83505249 109.31668091]
[-331.21075439 94.32146454]
[-329.38186646 79.42510223]
[-326.36022949 64.72422028]
[-322.16546631 50.31414413]
[-316.82476807 36.28834152]
[-310.37277222 22.73776817]
[-302.85131836 9.75031090]
[-294.30917358 -2.58980179]
[-284.80178833 -14.20253754]
[-274.39077759 -25.01258278]
[-263.14364624 -34.94982910]
[-251.13339233 -43.94982910]
[-238.43788147 -51.95421600]
[-225.13945007 -58.91107178]
[-211.32432556 -64.77528381]
[-197.08213806 -69.50881195]
[-182.50523376 -73.08097076]
[-167.68817139 -75.46857452]
[-152.72702026 -76.65615845]
[-137.71882629 -76.63600159]
[-122.76091766 -75.40824890]
[-107.95030975 -72.98085785]
[-93.38304901 -69.36956787]
[-79.15362549 -64.59780884]
[-65.35430908 -58.69651794]
[-52.07460403 -51.70397186]
[-39.40062714 -43.66552353]
[-27.41458321 -34.63330078]
[-16.19420052 -24.66588402]
[-5.81225443 -13.82791901]
[3.66392612 -2.18969274]
[12.17288399 10.17331505]
[19.65943336 23.18092537]
[26.07501984 36.74877548]
[31.37803841 50.78887177]
[35.53409195 65.21015930]
[38.51623154 79.91910553]
[40.30511093 94.82032013]
[55.29373550 94.23628998]
[70.28236389 93.65225983]
[85.27098846 93.06822205]
[99.15507507 83.74333191]
[113.93105316 91.57865143]
[128.89945984 90.60569763]
[143.86787415 89.63275146]
[158.83628845 88.65979767]
[173.80470276 87.68685150]
[188.77311707 86.71389771]
[203.74153137 85.74095154]
[218.70993042 84.76799774]
[227.18925476 81.05034637]
[234.07862854 83.96922302]
[238.97851562 69.60414124]
[248.73977661 57.98165894]
[262.04229736 50.67361450]
[277.08700562 48.66836929]
[291.83923340 52.23711014]
[304.30389404 60.89720154]
[312.79519653 73.47743225]
[316.16479492 88.27642822]
[313.95693970 103.29274750]
[306.47027588 116.49555969]
[294.71728516 126.09928894]
[280.28747559 130.80511475]
[265.13235474 129.97660828]
[251.30149841 123.72581482]
[240.66546631 112.89810944]
[234.66267395 98.95785522]
[219.68289185 99.73641205]
[204.71447754 100.70935822]
[189.74606323 101.68231201]
[174.77764893 102.65525818]
[159.80923462 103.62821198]
[144.84082031 104.60116577]
[129.87240601 105.57411194]
[114.90399933 106.54706573]
[106.64146423 114.86217499]
[94.93504333 115.47060394]
[85.85501862 108.05685425]
[70.86639404 108.64088440]
[55.87776947 109.22491455]
[40.88914490 109.80895233]
[40.26517868 124.80418396]
[38.43661499 139.70057678]
[35.41530991 154.40153503]
[31.22086143 168.81170654]
[25.88046646 182.83761597]
[19.42876434 196.38833618]
[11.90759563 209.37596130]
[3.36573982 221.71626282]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[68 112]
[69 111]
[70 110]
[71 109]
[73 106]
[74 105]
[75 104]
[76 103]
[77 102]
[78 101]
[79 100]
[80 99]
[82 98]
] def

init

% Start Annotations
68 112 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
68 112 1 gmark
112 cmark
69 111 3 gmark
69 cmark
111 cmark
70 110 10 gmark
70 cmark
110 cmark
71 109 93 gmark
71 cmark
109 cmark
73 106 46 gmark
73 cmark
106 cmark
74 105 17 gmark
74 cmark
105 cmark
75 104 117 gmark
75 cmark
104 cmark
76 103 46 gmark
76 cmark
103 cmark
77 102 118 gmark
77 cmark
102 cmark
78 101 51 gmark
78 cmark
101 cmark
79 100 16 gmark
79 cmark
100 cmark
80 99 5 gmark
80 cmark
99 cmark
82 98 25 gmark
82 cmark
98 cmark

% End Annotations
showpage
end
%%EOF
