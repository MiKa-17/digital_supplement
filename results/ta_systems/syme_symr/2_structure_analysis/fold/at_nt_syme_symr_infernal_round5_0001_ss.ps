%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Dec 24 15:26:50 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCAU_GA_UC__ACC__UC__C_____U_C________U_U___A_A__AGUUG_G_UUG_UGGUUA_GCGG_UGCGGGGG_UG_UUG_C_A_G_CACCUUCGCACCGCGCU_____\
) } def
/len { sequence length } bind def

/coor [
[66.62696075 108.39370728]
[65.59194946 99.45246887]
[51.00639725 95.95079041]
[36.42084885 92.44911194]
[18.96187401 98.11989594]
[6.65053225 85.68820953]
[-2.52129674 86.96969604]
[-8.36260796 82.29108429]
[-22.94815636 78.78939819]
[-32.08908844 89.46564484]
[-44.88811493 95.11023712]
[-58.80302048 94.66480255]
[-71.09697723 88.27442932]
[-79.37683868 77.24781036]
[-82.05893707 63.78966904]
[-96.54782104 59.90738678]
[-111.03671265 56.02510071]
[-117.32452393 69.68421173]
[-125.83042908 82.08411407]
[-136.30970764 92.86803436]
[-148.46083069 101.72568512]
[-161.93420410 108.40222931]
[-176.34216309 112.70556641]
[-191.27017212 114.51187897]
[-206.28869629 113.76918793]
[-220.96565247 110.49887848]
[-234.87875366 104.79502869]
[-247.62767029 96.82175446]
[-258.84561157 86.80846405]
[-268.20980835 75.04326630]
[-275.45080566 61.86465836]
[-280.36032104 47.65181732]
[-282.79705811 32.81368256]
[-282.69091797 17.77716637]
[-280.04495239 2.97490764]
[-274.93530273 -11.16720676]
[-267.50894165 -24.24227905]
[-257.97961426 -35.87411499]
[-246.62142944 -45.72804260]
[-233.76123047 -53.52054214]
[-219.76899719 -59.02741241]
[-205.04733276 -62.09020615]
[-190.01982117 -62.62080383]
[-175.11880493 -60.60393524]
[-160.77302551 -56.09763336]
[-147.39524841 -49.23155212]
[-135.37037659 -40.20323944]
[-125.04438019 -29.27246284]
[-116.71437073 -16.75371933]
[-110.62001038 -3.00719953]
[-106.93665314 11.57158184]
[-105.77027130 26.56316566]
[-107.15442657 41.53621292]
[-92.66553497 45.41849899]
[-78.17665100 49.30078506]
[-67.08741760 37.62581635]
[-51.54412460 33.07603836]
[-35.72823715 36.97327423]
[-23.94386864 48.35364914]
[-19.44647598 64.20384979]
[-4.86092710 67.70552826]
[9.76920795 71.01599121]
[20.15877151 64.67119598]
[32.47032166 67.23760986]
[39.92253113 77.86356354]
[54.50807953 81.36524200]
[69.09362793 84.86692047]
[83.93413544 69.56807709]
[104.93792725 65.94371033]
[124.04740143 75.38422394]
[133.93167114 94.26799011]
[148.91110229 95.05303192]
[163.89054871 95.83806610]
[178.86999512 96.62310791]
[187.72843933 93.92260742]
[194.22972107 97.62983704]
[209.18348694 98.80672455]
[224.13725281 99.98361206]
[239.09100342 101.16049957]
[254.04476929 102.33738708]
[268.99853516 103.51427460]
[283.95227051 104.69115448]
[298.90603638 105.86804199]
[307.83215332 103.40035248]
[314.23416138 107.27649689]
[321.81204224 94.06681824]
[334.11148071 85.08662415]
[349.00149536 81.89178467]
[363.90234375 85.03582764]
[376.23233032 93.97402191]
[383.85522461 107.15777588]
[385.45028687 122.30292511]
[380.74121094 136.78549194]
[370.54385376 148.09625244]
[356.62493896 154.27558899]
[341.39605713 154.25286865]
[327.49563599 148.03202820]
[317.33206177 136.69087219]
[312.66622925 122.19432831]
[297.72915649 120.82180023]
[282.77539062 119.64492035]
[267.82162476 118.46803284]
[252.86787415 117.29114532]
[237.91412354 116.11425781]
[222.96035767 114.93737030]
[208.00659180 113.76048279]
[193.05284119 112.58359528]
[178.08496094 111.60255432]
[163.10551453 110.81751251]
[148.12606812 110.03247070]
[133.14662170 109.24743652]
[129.61477661 117.52650452]
[124.05686951 124.60652161]
[116.85312653 130.00309753]
[108.49639130 133.34704590]
[99.55838013 134.40957642]
[90.65058899 133.11801147]
[82.38242340 129.56069946]
[75.31954956 123.98101807]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 67]
[3 66]
[4 65]
[6 62]
[8 61]
[9 60]
[15 55]
[16 54]
[17 53]
[71 111]
[72 110]
[73 109]
[74 108]
[76 107]
[77 106]
[78 105]
[79 104]
[80 103]
[81 102]
[82 101]
[83 100]
[85 99]
] def

init

% Start Annotations
2 67 0.32 0.6 colorpair
3 66 0.32 1 colorpair
4 65 0.16 1 colorpair
71 111 0.16 0.6 colorpair
72 110 0.32 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
2 67 1 gmark
2 cmark
67 cmark
3 cmark
66 cmark
4 cmark
6 62 6 gmark
6 cmark
62 cmark
8 61 73 gmark
8 cmark
61 cmark
9 60 103 gmark
9 cmark
60 cmark
15 55 65 gmark
15 cmark
55 cmark
16 54 48 gmark
16 cmark
54 cmark
17 53 38 gmark
17 cmark
53 cmark
71 111 1 gmark
111 cmark
72 110 1 gmark
72 cmark
110 cmark
73 109 4 gmark
73 cmark
109 cmark
74 108 5 gmark
74 cmark
108 cmark
76 107 14 gmark
76 cmark
107 cmark
77 106 10 gmark
77 cmark
106 cmark
78 105 22 gmark
78 cmark
105 cmark
79 104 21 gmark
79 cmark
104 cmark
80 103 53 gmark
80 cmark
103 cmark
81 102 32 gmark
81 cmark
102 cmark
82 101 14 gmark
82 cmark
101 cmark
83 100 9 gmark
83 cmark
100 cmark
85 99 18 gmark
85 cmark
99 cmark

% End Annotations
showpage
end
%%EOF
