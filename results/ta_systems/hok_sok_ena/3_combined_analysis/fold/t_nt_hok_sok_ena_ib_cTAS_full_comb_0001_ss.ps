%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Dec 19 14:23:51 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGAAUGCCGCAAAAAUAUAGAUUGCUUUCUUUAAUAGUGAUUUGUUUCACGCUUUUAUUUUUCACCUGGAUGAUAAGAGAUUCACUGUGUGAAUUGCAUAUUAAACAGGGGAGUUAUGAGCUGGCGGCAUUUUUAGCCUGCAAUUUAAAAGAGUAA_____________\
) } def
/len { sequence length } bind def

/coor [
[82.31077576 279.12918091]
[83.68989563 264.17254639]
[86.93274689 249.50669861]
[91.98820496 235.36294556]
[98.77651978 221.96437073]
[107.19063568 209.52226257]
[117.09784698 198.23287964]
[128.34191895 188.27424622]
[119.88140106 175.88796997]
[111.42088318 163.50170898]
[102.96036530 151.11543274]
[94.49985504 138.72917175]
[97.03207397 153.51388550]
[98.15805817 168.47155762]
[97.86775970 183.46875000]
[96.16376495 198.37165833]
[93.06128693 213.04730225]
[88.58800507 227.36476135]
[82.78382111 241.19630432]
[75.70051575 254.41850281]
[67.40129852 266.91342163]
[57.96020508 278.56958008]
[47.46146774 289.28295898]
[35.99875641 298.95797729]
[23.67433929 307.50836182]
[10.59817314 314.85775757]
[-3.11307931 320.94064331]
[-17.33708763 325.70275879]
[-31.94694901 329.10156250]
[-46.81231689 331.10678101]
[-61.80056000 331.70050049]
[-76.77796173 330.87744141]
[-91.61089325 328.64489746]
[-106.16701508 325.02285767]
[-120.31646729 320.04360962]
[-133.93299866 313.75155640]
[-146.89514160 306.20285034]
[-159.08723450 297.46484375]
[-170.40051270 287.61547852]
[-180.73403931 276.74264526]
[-189.99560547 264.94335938]
[-198.10260010 252.32286072]
[-204.98268127 238.99377441]
[-210.57446289 225.07502747]
[-214.82807922 210.69076538]
[-217.70555115 195.96934509]
[-219.18122864 181.04211426]
[-219.24192810 166.04223633]
[-217.88713074 151.10354614]
[-215.12889099 136.35931396]
[-210.99185181 121.94110870]
[-205.51290894 107.97753906]
[-198.74093628 94.59320831]
[-190.73635864 81.90751648]
[-181.57060242 70.03364563]
[-171.32542419 59.07753372]
[-160.09223938 49.13693237]
[-147.97126770 40.30052567]
[-135.07064819 32.64715195]
[-121.50548553 26.24509239]
[-107.39680481 21.15146828]
[-92.87046814 17.41172028]
[-78.05609894 15.05921745]
[-63.08584595 14.11494637]
[-48.09328461 14.58733177]
[-33.21217728 16.47216034]
[-18.57528496 19.75261307]
[-4.31319666 24.39942551]
[9.44684124 30.37113762]
[22.58206558 37.61447144]
[34.97528458 46.06480408]
[46.51593018 55.64673996]
[57.10103607 66.27479553]
[66.63249207 77.84922791]
[63.38959503 63.20397186]
[60.14669418 48.55871201]
[45.86497116 42.49142075]
[37.90596008 29.17099190]
[39.33006668 13.71940422]
[49.58969116 2.07810831]
[64.73979187 -1.27658045]
[78.95485687 4.94528437]
[86.76889801 18.35126877]
[85.17725372 33.78649902]
[74.79195404 45.31581116]
[78.03485107 59.96107101]
[81.27775574 74.60633087]
[88.01804352 77.89546967]
[92.19344330 63.48831940]
[96.36884308 49.08116531]
[100.54423523 34.67401505]
[104.71963501 20.26686096]
[108.89503479 5.85970783]
[106.46151733 -8.94157600]
[111.22569275 -23.16488838]
[122.08352661 -33.51416397]
[136.51885986 -37.59108734]
[151.18647766 -34.45088959]
[162.68736267 -24.82126999]
[168.35633850 -10.93376637]
[166.87966919 3.99337292]
[158.59959412 16.50097656]
[145.43495178 23.69054794]
[136.64768982 35.84719086]
[127.86042786 48.00383377]
[119.07315826 60.16047287]
[110.28589630 72.31711578]
[101.49862671 84.47376251]
[108.23892212 87.76290131]
[121.77867889 81.30728149]
[135.31843567 74.85166931]
[135.32630920 59.58855057]
[141.96354675 45.84410858]
[153.91233826 36.34730530]
[168.80023193 32.98374176]
[183.67121887 36.42125320]
[195.57266235 45.97732162]
[202.14151001 59.75458145]
[202.07353210 75.01754761]
[195.38221741 88.73574829]
[183.39611816 98.18542480]
[168.49510193 101.49033356]
[153.63777161 97.99428558]
[141.77404785 88.39142609]
[128.23429871 94.84703827]
[114.69453430 101.30265808]
[112.74243164 108.54415894]
[106.88612366 130.26864624]
[115.34664154 142.65492249]
[123.80715179 155.04118347]
[132.26766968 167.42745972]
[140.72817993 179.81373596]
[154.09449768 172.96209717]
[168.21417236 167.83978271]
[182.86450195 164.52757263]
[197.81446838 163.07769775]
[212.82824707 163.51303101]
[227.66906738 165.82672119]
[242.10287476 169.98225403]
[255.90202332 175.91410828]
[268.84887695 183.52871704]
[280.73922729 192.70599365]
[291.38558960 203.30119324]
[300.62002563 215.14723206]
[308.29690552 228.05726624]
[314.29513550 241.82768250]
[318.52011108 256.24130249]
[320.90524292 271.07083130]
[321.41290283 286.08233643]
[320.03503418 301.03909302]
[316.79339600 315.70523071]
[311.73913574 329.84939575]
[304.95196533 343.24853516]
[296.53887939 355.69134521]
[286.63262939 366.98156738]
[275.38940430 376.94116211]
[262.98654175 385.41299438]
[249.61964417 392.26351929]
[235.49954224 397.38464355]
[220.84892273 400.69561768]
[205.89884949 402.14422607]
[190.88510132 401.70764160]
[176.04446411 399.39270020]
[161.61100769 395.23596191]
[147.81236267 389.30294800]
[134.86616516 381.68722534]
[122.97657013 372.50894165]
[112.33110809 361.91284180]
[103.09767151 350.06604004]
[95.42188263 337.15536499]
[89.42481232 323.38442993]
[85.20102692 308.97045898]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 132]
[9 131]
[10 130]
[11 129]
[12 128]
[74 87]
[75 86]
[76 85]
[109 126]
[110 125]
[111 124]
] def

init

% Start Annotations
9 131 0.16 1 colorpair
110 125 0.16 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
8 132 78 gmark
8 cmark
132 cmark
131 cmark
10 130 3 gmark
10 cmark
11 129 24 gmark
11 cmark
129 cmark
12 128 140 gmark
12 cmark
128 cmark
74 87 13 gmark
74 cmark
87 cmark
75 86 25 gmark
75 cmark
86 cmark
76 85 42 gmark
76 cmark
109 126 53 gmark
109 cmark
126 cmark
110 125 2 gmark
110 cmark
111 124 10 gmark
111 cmark
124 cmark

% End Annotations
showpage
end
%%EOF
