%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Dec 19 01:59:28 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_______G______GAG_A__A___A__A__G_G__C______A_U__GA_CG________CAA__AA______A_UCUGU_GUUAGU__GGCCCU_________GAUCGU___CAUCUG______UUUCACGGUGUUGGUAUU_CACCUUGAUGACGCGG_GAAUCGCUGUGCGAGUUGCGUAUCAGAAACGGAAA_UA_C______GGAGGUU_GCGGC___AUUUU___UGG_CU__UAC_GA_AU_CC_A_\
A______\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50359344 92.14030457]
[62.52012253 91.42110443]
[47.55820465 90.34281921]
[32.62644577 88.90606689]
[17.73343468 87.11167145]
[2.88773322 84.96067047]
[-11.90211964 82.45429993]
[-26.62761879 79.59399414]
[-41.28029633 76.38140869]
[-55.85172272 72.81838226]
[-70.33351898 68.90696716]
[-84.71736145 64.64941406]
[-98.99497223 60.04817200]
[-113.15814209 55.10588074]
[-127.19873047 49.82538986]
[-141.10865784 44.20973587]
[-154.87992859 38.26214218]
[-168.50460815 31.98603630]
[-181.97488403 25.38502312]
[-195.28300476 18.46289825]
[-208.42129517 11.22364616]
[-221.38221741 3.67142749]
[-234.15832520 -4.18941402]
[-246.74226379 -12.35435772]
[-259.12677002 -20.81870842]
[-271.30477905 -29.57759666]
[-283.26922607 -38.62598801]
[-295.01327515 -47.95867538]
[-306.53015137 -57.57029343]
[-317.81323242 -67.45531464]
[-328.85604858 -77.60805511]
[-339.65222168 -88.02267456]
[-350.19555664 -98.69318390]
[-360.47998047 -109.61344910]
[-370.49960327 -120.77719116]
[-380.24862671 -132.17797852]
[-389.72146606 -143.80926514]
[-398.91268921 -155.66436768]
[-407.81695557 -167.73645020]
[-416.42919922 -180.01858521]
[-424.74447632 -192.50370789]
[-432.75793457 -205.18463135]
[-440.46505737 -218.05406189]
[-447.86132812 -231.10459900]
[-454.94253540 -244.32875061]
[-461.70458984 -257.71890259]
[-468.14364624 -271.26736450]
[-474.25592041 -284.96630859]
[-480.03799438 -298.80789185]
[-485.48645020 -312.78414917]
[-490.59823608 -326.88705444]
[-495.37036133 -341.10845947]
[-499.80007935 -355.44021606]
[-503.88485718 -369.87405396]
[-507.62237549 -384.40170288]
[-511.01043701 -399.01480103]
[-514.04711914 -413.70495605]
[-516.73065186 -428.46368408]
[-519.05950928 -443.28253174]
[-521.03234863 -458.15295410]
[-522.64807129 -473.06640625]
[-523.90570068 -488.01431274]
[-524.80450439 -502.98809814]
[-525.34399414 -517.97912598]
[-525.52386475 -532.97875977]
[-525.34405518 -547.97839355]
[-524.80456543 -562.96942139]
[-523.90570068 -577.94317627]
[-522.64813232 -592.89111328]
[-521.03240967 -607.80456543]
[-519.05957031 -622.67498779]
[-516.73071289 -637.49383545]
[-514.04718018 -652.25256348]
[-511.01052856 -666.94268799]
[-507.62246704 -681.55578613]
[-503.88497925 -696.08343506]
[-499.80017090 -710.51733398]
[-495.37045288 -724.84906006]
[-490.59835815 -739.07049561]
[-485.48660278 -753.17333984]
[-480.03811646 -767.14959717]
[-474.25607300 -780.99121094]
[-468.14379883 -794.69018555]
[-461.70474243 -808.23864746]
[-454.94268799 -821.62878418]
[-447.86151123 -834.85290527]
[-440.46524048 -847.90350342]
[-432.75814819 -860.77294922]
[-424.74465942 -873.45385742]
[-416.42941284 -885.93896484]
[-407.81716919 -898.22113037]
[-398.91290283 -910.29321289]
[-389.72167969 -922.14831543]
[-380.24884033 -933.77960205]
[-370.49981689 -945.18041992]
[-360.48022461 -956.34411621]
[-350.19580078 -967.26440430]
[-339.65246582 -977.93493652]
[-328.85629272 -988.34954834]
[-317.81350708 -998.50231934]
[-306.53042603 -1008.38732910]
[-295.01354980 -1017.99896240]
[-283.26953125 -1027.33166504]
[-271.30505371 -1036.38000488]
[-259.12707520 -1045.13891602]
[-246.74255371 -1053.60327148]
[-234.15863037 -1061.76818848]
[-221.38253784 -1069.62915039]
[-208.42161560 -1077.18127441]
[-195.28332520 -1084.42053223]
[-181.97520447 -1091.34277344]
[-168.50494385 -1097.94372559]
[-154.88024902 -1104.21984863]
[-141.10899353 -1110.16748047]
[-127.19906616 -1115.78308105]
[-113.15848541 -1121.06359863]
[-98.99531555 -1126.00585938]
[-84.71770477 -1130.60717773]
[-70.33386993 -1134.86474609]
[-55.85206985 -1138.77612305]
[-41.28064728 -1142.33923340]
[-26.62797165 -1145.55175781]
[-11.90247440 -1148.41210938]
[2.88737679 -1150.91845703]
[17.73307610 -1153.06945801]
[32.62608719 -1154.86389160]
[47.55784607 -1156.30065918]
[62.51976013 -1157.37890625]
[77.50322723 -1158.09814453]
[92.49964142 -1158.45788574]
[107.50035858 -1158.45788574]
[122.49677277 -1158.09814453]
[137.48023987 -1157.37890625]
[152.44215393 -1156.30065918]
[167.37391663 -1154.86389160]
[182.26692200 -1153.06945801]
[197.11262512 -1150.91845703]
[211.90248108 -1148.41210938]
[226.62797546 -1145.55175781]
[241.28063965 -1142.33923340]
[255.85206604 -1138.77612305]
[270.33386230 -1134.86474609]
[284.71771240 -1130.60717773]
[298.99533081 -1126.00585938]
[313.15847778 -1121.06359863]
[327.19906616 -1115.78308105]
[341.10897827 -1110.16748047]
[354.88024902 -1104.21984863]
[368.50494385 -1097.94372559]
[381.97521973 -1091.34277344]
[395.28332520 -1084.42053223]
[408.42160034 -1077.18127441]
[421.38253784 -1069.62915039]
[434.15863037 -1061.76818848]
[446.74255371 -1053.60327148]
[459.12707520 -1045.13891602]
[471.30505371 -1036.38000488]
[483.26953125 -1027.33166504]
[495.01354980 -1017.99896240]
[506.53042603 -1008.38732910]
[517.81353760 -998.50231934]
[528.85632324 -988.34954834]
[539.65246582 -977.93493652]
[550.19580078 -967.26440430]
[560.48022461 -956.34411621]
[570.49981689 -945.18041992]
[580.24884033 -933.77960205]
[589.72167969 -922.14831543]
[598.91290283 -910.29321289]
[607.81719971 -898.22113037]
[616.42944336 -885.93896484]
[624.74468994 -873.45385742]
[632.75811768 -860.77294922]
[640.46520996 -847.90350342]
[647.86151123 -834.85290527]
[654.94268799 -821.62878418]
[661.70477295 -808.23864746]
[668.14379883 -794.69018555]
[674.25610352 -780.99121094]
[680.03814697 -767.14959717]
[685.48657227 -753.17333984]
[690.59832764 -739.07049561]
[695.37048340 -724.84906006]
[699.80017090 -710.51733398]
[703.88494873 -696.08343506]
[707.62243652 -681.55578613]
[711.01049805 -666.94268799]
[714.04718018 -652.25256348]
[716.73071289 -637.49383545]
[719.05957031 -622.67498779]
[721.03240967 -607.80456543]
[722.64813232 -592.89111328]
[723.90570068 -577.94317627]
[724.80456543 -562.96942139]
[725.34405518 -547.97839355]
[725.52386475 -532.97875977]
[725.34399414 -517.97912598]
[724.80450439 -502.98809814]
[723.90570068 -488.01431274]
[722.64807129 -473.06640625]
[721.03234863 -458.15295410]
[719.05950928 -443.28253174]
[716.73065186 -428.46368408]
[714.04711914 -413.70495605]
[711.01043701 -399.01480103]
[707.62237549 -384.40170288]
[703.88488770 -369.87405396]
[699.80010986 -355.44021606]
[695.37036133 -341.10845947]
[690.59820557 -326.88705444]
[685.48645020 -312.78414917]
[680.03796387 -298.80789185]
[674.25592041 -284.96630859]
[668.14361572 -271.26736450]
[661.70458984 -257.71890259]
[654.94250488 -244.32875061]
[647.86132812 -231.10459900]
[640.46502686 -218.05406189]
[632.75793457 -205.18463135]
[624.74444580 -192.50370789]
[616.42919922 -180.01858521]
[607.81695557 -167.73645020]
[598.91265869 -155.66436768]
[589.72143555 -143.80926514]
[580.24859619 -132.17797852]
[570.49957275 -120.77719116]
[560.47998047 -109.61344910]
[550.19555664 -98.69318390]
[539.65222168 -88.02267456]
[528.85601807 -77.60805511]
[517.81323242 -67.45531464]
[506.53015137 -57.57029343]
[495.01327515 -47.95867538]
[483.26922607 -38.62598801]
[471.30477905 -29.57759666]
[459.12677002 -20.81870842]
[446.74224854 -12.35435772]
[434.15832520 -4.18941402]
[421.38223267 3.67142749]
[408.42129517 11.22364616]
[395.28298950 18.46289825]
[381.97488403 25.38502312]
[368.50460815 31.98603630]
[354.87991333 38.26214218]
[341.10867310 44.20973587]
[327.19873047 49.82538986]
[313.15814209 55.10588074]
[298.99496460 60.04817200]
[284.71737671 64.64941406]
[270.33352661 68.90696716]
[255.85171509 72.81838226]
[241.28028870 76.38140869]
[226.62762451 79.59399414]
[211.90211487 82.45429993]
[197.11227417 84.96067047]
[182.26657104 87.11167145]
[167.37355042 88.90606689]
[152.44180298 90.34281921]
[137.47987366 91.42110443]
[122.49640656 92.14030457]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
