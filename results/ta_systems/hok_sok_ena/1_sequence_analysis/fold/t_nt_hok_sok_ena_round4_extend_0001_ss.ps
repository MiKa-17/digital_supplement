%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Dec 18 15:08:58 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAACUACCGCGAAACACCCUUAUCUGGU_GCGUA__UUAAUCGUGUGUCUCACACUGUUGAUAUUCACUUACCUGACCCGGA_AAUCGCUGUGCGAAAUCCGGUACAGGG___ACGGAAACAGGGAGGUGGCGGCUUUCAUGGCUUACGAAUCC___GG___U_AA_GUAG_\
) } def
/len { sequence length } bind def

/coor [
[72.32650757 278.58715820]
[60.81251526 276.41864014]
[49.46323776 273.50860596]
[38.32637405 269.86923218]
[27.44874382 265.51589966]
[16.87606239 260.46685791]
[6.65277147 254.74330139]
[-3.17815876 248.36935425]
[-12.57540607 241.37176514]
[-22.39831734 252.70800781]
[-32.22122955 264.04425049]
[-42.04413986 275.38049316]
[-34.91272354 288.77853394]
[-33.10668945 303.84844971]
[-36.87028503 318.55218506]
[-45.69451904 330.90115356]
[-58.38598633 339.22531128]
[-73.22826385 342.39880371]
[-88.21406555 339.99249268]
[-101.31667328 332.33181763]
[-110.76407623 320.45281982]
[-115.27858734 305.96200562]
[-114.24965668 290.81915283]
[-107.81643677 277.07223511]
[-96.84896851 266.58035278]
[-82.83051300 260.76251221]
[-67.65695190 260.40548706]
[-53.38038254 265.55758667]
[-43.55747223 254.22134399]
[-33.73456192 242.88508606]
[-23.91164970 231.54884338]
[-48.06856537 203.60934448]
[-66.04066467 171.34208679]
[-77.07726288 136.09487915]
[-80.71735382 99.33998108]
[-76.80889130 62.61265945]
[-91.34294891 58.90306473]
[-97.85195923 60.33089828]
[-103.27801514 58.50885010]
[-106.32487488 54.79297256]
[-120.71726990 50.56698608]
[-135.10966492 46.34099579]
[-147.38854980 55.64342499]
[-162.61260986 55.92861557]
[-174.93959045 47.29673767]
[-179.76234436 33.22978592]
[-194.15473938 29.00379753]
[-208.54713440 24.77780914]
[-222.93952942 20.55182076]
[-237.65260315 26.94750595]
[-251.75834656 19.30500412]
[-254.43601990 3.48698926]
[-243.63154602 -8.37231255]
[-227.63319397 -7.17545843]
[-218.71353149 6.15942669]
[-204.32113647 10.38541508]
[-189.92874146 14.61140347]
[-175.53634644 18.83739090]
[-163.87403870 9.61089039]
[-148.83715820 9.01376820]
[-136.18405151 17.48443413]
[-130.88366699 31.94860077]
[-116.49127960 36.17459106]
[-102.09888458 40.40057755]
[-87.63335419 44.36900330]
[-73.09928894 48.07860184]
[-70.15650940 39.12340927]
[-66.75078583 30.33384514]
[-62.89138031 21.73381996]
[-58.58880234 13.34673214]
[-53.85475159 5.19540119]
[-48.70211411 -2.69799638]
[-43.14490128 -10.31198502]
[-37.19823837 -17.62584877]
[-30.87829971 -24.61968994]
[-24.20228386 -31.27448082]
[-17.18835258 -37.57211304]
[-9.85558891 -43.49545670]
[-2.22394252 -49.02839279]
[5.68582344 -54.15587234]
[13.85218811 -58.86394119]
[22.25293541 -63.13978958]
[30.86520576 -66.97178650]
[39.66557312 -70.34950256]
[48.63008881 -73.26375580]
[57.73436737 -75.70661163]
[66.95363617 -77.67142487]
[76.26281738 -79.15284729]
[85.63657379 -80.14685059]
[95.04941559 -80.65073395]
[104.47572327 -80.66312408]
[113.88984680 -80.18398285]
[123.26618958 -79.21462250]
[132.57922363 -77.75767517]
[141.80363464 -75.81710052]
[150.91430664 -73.39818573]
[159.88644409 -70.50750732]
[168.69566345 -67.15293121]
[177.31797791 -63.34358597]
[185.72993469 -59.08983612]
[193.90864563 -54.40324783]
[201.83186340 -49.29658127]
[209.47802734 -43.78372192]
[216.82633972 -37.87967300]
[223.85679626 -31.60050011]
[230.55027771 -24.96327972]
[236.88858032 -17.98607635]
[242.85444641 -10.68786812]
[248.43165588 -3.08851290]
[253.60502625 4.79131365]
[258.36047363 12.93017292]
[262.68508911 21.30592155]
[266.56707764 29.89577293]
[269.99591064 38.67635345]
[272.96221924 47.62377930]
[275.45794678 56.71370316]
[277.47631836 65.92139435]
[279.01184082 75.22180939]
[280.06030273 84.58963013]
[280.61889648 93.99938202]
[280.68609619 103.42545319]
[280.26168823 112.84220886]
[279.34683228 122.22402954]
[277.94406128 131.54537964]
[276.05712891 140.78091431]
[273.69122314 149.90548706]
[287.92361450 154.64247131]
[300.52670288 145.78424072]
[315.75122070 146.04261780]
[327.76226807 155.10896301]
[332.07986450 169.33909607]
[346.31225586 174.07608032]
[355.77804565 168.63591003]
[366.45462036 169.30798340]
[374.81234741 175.62712097]
[378.22219849 185.30155945]
[392.27645874 190.54351807]
[406.33068848 195.78547668]
[419.84472656 187.91748047]
[435.24563599 190.62782288]
[445.26159668 202.63674927]
[445.16339111 218.27401733]
[434.99737549 230.15620422]
[419.56362915 232.67288208]
[406.14950562 224.63575745]
[401.08874512 209.83972168]
[387.03448486 204.59776306]
[372.98025513 199.35580444]
[354.22387695 203.97758484]
[341.57525635 188.30847168]
[327.34286499 183.57147217]
[315.35867310 192.37583923]
[300.31005859 192.43588257]
[287.96734619 183.51899719]
[283.18661499 168.87486267]
[268.95422363 164.13787842]
[264.44311523 174.95103455]
[259.24081421 185.44915771]
[253.36918640 195.58811951]
[246.85292053 205.32530212]
[239.71937561 214.61976624]
[231.99856567 223.43246460]
[223.72294617 231.72634888]
[214.92727661 239.46655273]
[205.64854431 246.62054443]
[195.92573547 253.15824890]
[185.79972839 259.05218506]
[175.31309509 264.27761841]
[164.50990295 268.81253052]
[153.43554688 272.63787842]
[142.13659668 275.73760986]
[130.66053772 278.09863281]
[119.05560303 279.71109009]
[107.37057495 280.56817627]
[95.65456390 280.66632080]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 31]
[10 30]
[11 29]
[12 28]
[36 66]
[37 65]
[40 64]
[41 63]
[42 62]
[46 58]
[47 57]
[48 56]
[49 55]
[126 156]
[127 155]
[131 151]
[132 150]
[136 148]
[137 147]
[138 146]
] def

init

% Start Annotations
10 30 0.16 0.2 colorpair
11 29 0.16 0.2 colorpair
36 66 0.16 0.2 colorpair
41 63 0.16 1 colorpair
46 58 0.16 0.2 colorpair
47 57 0.16 0.6 colorpair
48 56 0.16 0.2 colorpair
49 55 0.16 1 colorpair
126 156 0.0 0.2 colorpair
131 151 0.16 0.6 colorpair
132 150 0.0 1 colorpair
137 147 0.0 0.6 colorpair
138 146 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
9 31 5 gmark
9 cmark
31 cmark
10 30 2 gmark
10 cmark
30 cmark
11 29 2 gmark
11 cmark
29 cmark
12 28 15 gmark
12 cmark
28 cmark
36 66 2 gmark
66 cmark
37 65 5 gmark
37 cmark
65 cmark
40 64 5 gmark
40 cmark
64 cmark
63 cmark
42 62 6 gmark
42 cmark
46 58 2 gmark
58 cmark
47 57 1 gmark
57 cmark
48 56 2 gmark
56 cmark
49 cmark
55 cmark
126 156 2 gmark
127 155 3 gmark
127 cmark
131 151 1 gmark
131 cmark
151 cmark
136 148 8 gmark
136 cmark
148 cmark
137 147 1 gmark
138 cmark

% End Annotations
showpage
end
%%EOF
