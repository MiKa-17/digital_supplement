%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Dec 18 00:23:07 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAACUACCACGAAGUUCCCUUGUCUGGUGUGUGUUGAUCGUGUGUCUCACACUGUUGAUAUUCACUUAUCUGACACGAAAAUCGCUGUGCGAGAUUCGUUACAGAGACGGAUACAGGGAGGUGGCGGCUUUCAUGGCUUACGAAUCCGGU_AAGUAG\
) } def
/len { sequence length } bind def

/coor [
[219.05035400 390.27841187]
[212.54209900 376.76388550]
[206.03384399 363.24935913]
[199.52558899 349.73483276]
[193.01733398 336.22027588]
[186.50907898 322.70574951]
[176.54203796 320.18869019]
[169.47798157 312.42001343]
[167.84986877 301.82400513]
[172.44027710 291.89303589]
[166.46424866 278.13485718]
[154.29695129 269.54382324]
[155.89569092 253.80358887]
[141.99682617 253.94076538]
[129.05812073 248.74508667]
[119.05204010 238.97296143]
[113.51754761 226.08105469]
[113.32351685 212.00932312]
[118.53245544 198.88908386]
[128.38604736 188.72015381]
[122.67961884 174.84800720]
[116.97318268 160.97584534]
[111.26675415 147.10369873]
[95.30221558 148.20404053]
[79.85053253 144.04199219]
[66.59854126 135.07194519]
[56.99295044 122.27312469]
[52.08238983 107.04277802]
[52.40293503 91.04357910]
[38.26902008 86.02038574]
[24.13510704 80.99719238]
[10.00119209 75.97399139]
[-5.59323454 78.64315796]
[-14.99458122 67.09049225]
[-29.12849617 62.06729889]
[-43.26240921 57.04410553]
[-57.39632416 52.02091217]
[-71.53023529 46.99771881]
[-85.66415405 41.97452545]
[-98.44340515 50.57667160]
[-113.65962982 50.01116562]
[-125.48529816 40.70431137]
[-129.51489258 26.38996696]
[-143.64880371 21.36677361]
[-157.78271484 16.34357834]
[-171.91662598 11.32038498]
[-186.05055237 6.29719067]
[-202.99993896 6.69021749]
[-208.06965637 -9.48798466]
[-193.92715454 -18.83815575]
[-181.02734375 -7.83672333]
[-166.89343262 -2.81352901]
[-152.75952148 2.20966530]
[-138.62561035 7.23285961]
[-124.49169159 12.25605392]
[-112.33229065 3.69528270]
[-97.28553772 3.93888736]
[-85.12525177 13.10299683]
[-80.64095306 27.84061050]
[-66.50704193 32.86380386]
[-52.37312698 37.88699722]
[-38.23921585 42.91019058]
[-24.10530090 47.93338776]
[-9.97138691 52.95658112]
[4.61208773 49.92812729]
[15.02438641 61.84008026]
[29.15830040 66.86327362]
[43.29221344 71.88646698]
[57.42612839 76.90966034]
[70.91593170 61.27255249]
[89.69379425 52.67685318]
[110.34552765 52.68543243]
[115.78020477 38.70457840]
[121.21488190 24.72372437]
[126.64955902 10.74286938]
[120.52887726 -3.58106160]
[126.23957062 -17.68221664]
[139.93296814 -23.42907906]
[145.36764526 -37.40993500]
[150.80232239 -51.39078903]
[156.23699951 -65.37164307]
[161.67167664 -79.35250092]
[155.55099487 -93.67642975]
[161.26168823 -107.77758026]
[174.95509338 -113.52444458]
[180.38977051 -127.50530243]
[185.82444763 -141.48616028]
[191.25912476 -155.46701050]
[191.36228943 -172.42063904]
[207.68193054 -177.01473999]
[216.61421204 -162.60464478]
[205.23997498 -150.03233337]
[199.80529785 -136.05148315]
[194.37062073 -122.07062531]
[188.93594360 -108.08976746]
[195.15290833 -94.60329437]
[189.84053040 -80.34730530]
[175.65252686 -73.91782379]
[170.21784973 -59.93696594]
[164.78317261 -45.95611191]
[159.34849548 -31.97525787]
[153.91383362 -17.99440193]
[160.13078308 -4.50793028]
[154.81842041 9.74806404]
[140.63041687 16.17754555]
[135.19573975 30.15839958]
[129.76106262 44.13925552]
[124.32638550 58.12010956]
[132.41307068 64.01262665]
[139.11633301 71.44110870]
[144.15010071 80.08850861]
[147.29948425 89.58574677]
[148.43009949 99.52747345]
[147.49368286 109.48937225]
[144.53019714 119.04624939]
[139.66612244 127.79022217]
[133.10906982 135.34808350]
[125.13890076 141.39726257]
[130.84533691 155.26942444]
[136.55177307 169.14157104]
[142.25819397 183.01373291]
[158.48468018 183.82728577]
[172.68702698 191.59709167]
[182.05555725 204.72834778]
[184.76202393 220.57144165]
[180.31620789 235.95649719]
[169.65386963 247.82757568]
[182.24861145 257.40270996]
[180.22242737 272.15884399]
[186.19844055 285.91702271]
[202.92404175 297.10986328]
[200.02360535 316.19750977]
[206.53186035 329.71203613]
[213.04011536 343.22656250]
[219.54837036 356.74108887]
[226.05664062 370.25561523]
[232.56489563 383.77017212]
[249.71446228 394.30191040]
[247.56095886 413.48818970]
[254.59153748 426.73849487]
[261.62213135 439.98883057]
[268.65270996 453.23913574]
[275.81222534 466.42022705]
[283.10000610 479.53085327]
[298.48712158 482.31848145]
[308.44265747 494.37756348]
[308.26593018 510.01412964]
[298.04037476 521.84509277]
[282.59417725 524.28424072]
[269.22058105 516.17987061]
[264.23419189 501.35861206]
[269.98941040 486.81863403]
[262.70162964 473.70800781]
[256.67269897 469.36764526]
[255.40238953 460.26971436]
[248.37181091 447.01940918]
[241.34121704 433.76907349]
[234.31063843 420.51876831]
[224.25299072 418.39251709]
[216.89120483 410.90536499]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 137]
[2 136]
[3 135]
[4 134]
[5 133]
[6 132]
[10 130]
[11 129]
[13 127]
[20 121]
[21 120]
[22 119]
[23 118]
[29 69]
[30 68]
[31 67]
[32 66]
[34 64]
[35 63]
[36 62]
[37 61]
[38 60]
[39 59]
[43 55]
[44 54]
[45 53]
[46 52]
[47 51]
[72 108]
[73 107]
[74 106]
[75 105]
[78 102]
[79 101]
[80 100]
[81 99]
[82 98]
[85 95]
[86 94]
[87 93]
[88 92]
[139 158]
[140 157]
[141 156]
[142 155]
[143 153]
[144 152]
] def

init

% Start Annotations
1 137 0.0 1 colorpair
2 136 0.0 0.2 colorpair
3 135 0.0 0.6 colorpair
4 134 0.0 0.6 colorpair
5 133 0.0 0.6 colorpair
6 132 0.16 0.6 colorpair
10 130 0.0 1 colorpair
11 129 0.0 0.6 colorpair
13 127 0.0 0.6 colorpair
20 121 0.0 1 colorpair
22 119 0.0 1 colorpair
23 118 0.0 0.2 colorpair
29 69 0.32 1 colorpair
30 68 0.0 1 colorpair
31 67 0.0 0.6 colorpair
32 66 0.0 1 colorpair
34 64 0.0 1 colorpair
35 63 0.16 0.6 colorpair
36 62 0.16 1 colorpair
37 61 0.0 1 colorpair
38 60 0.0 1 colorpair
43 55 0.0 0.6 colorpair
44 54 0.0 1 colorpair
45 53 0.0 1 colorpair
46 52 0.0 1 colorpair
47 51 0.0 1 colorpair
72 108 0.16 0.6 colorpair
73 107 0.0 0.2 colorpair
74 106 0.0 1 colorpair
75 105 0.0 1 colorpair
78 102 0.16 0.2 colorpair
79 101 0.0 1 colorpair
80 100 0.0 1 colorpair
81 99 0.32 0.2 colorpair
82 98 0.0 1 colorpair
85 95 0.0 1 colorpair
86 94 0.0 0.6 colorpair
87 93 0.0 0.6 colorpair
88 92 0.16 1 colorpair
139 158 0.0 0.6 colorpair
140 157 0.0 0.6 colorpair
141 156 0.0 0.6 colorpair
142 155 0.0 0.6 colorpair
143 153 0.0 0.6 colorpair
144 152 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
2 136 2 gmark
3 135 1 gmark
4 134 1 gmark
5 133 1 gmark
6 132 1 gmark
6 cmark
11 129 1 gmark
13 127 1 gmark
21 120 4 gmark
21 cmark
23 118 2 gmark
29 cmark
69 cmark
31 67 1 gmark
35 63 1 gmark
63 cmark
36 cmark
39 59 3 gmark
39 cmark
43 55 1 gmark
72 108 1 gmark
72 cmark
108 cmark
73 107 2 gmark
78 102 2 gmark
78 cmark
102 cmark
81 99 2 gmark
81 cmark
99 cmark
86 94 1 gmark
87 93 1 gmark
88 cmark
139 158 1 gmark
140 157 1 gmark
141 156 1 gmark
142 155 1 gmark
143 153 1 gmark
144 152 2 gmark

% End Annotations
showpage
end
%%EOF
