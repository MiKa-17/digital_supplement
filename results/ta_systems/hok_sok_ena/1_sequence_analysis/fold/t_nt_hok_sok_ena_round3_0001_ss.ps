%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Dec 18 07:43:28 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAACUGCCGCGAAACACCCUUAUCUGGUGCGUAUUAAUCGUGUGUCUCACACUGUUGAUAUUCACUUACCUGACCCGGAAAUCGCUGUGCGAAAUCCGGUACAGGGACGGAUACAGGGAGGUGGCGGCUUUUAUGGCUUACGAAUCC___GGU_AAGUAG\
) } def
/len { sequence length } bind def

/coor [
[143.69419861 354.00201416]
[128.54623413 356.14706421]
[113.29768372 357.38955688]
[98.00228119 357.72506714]
[82.71391296 357.15246582]
[67.48645782 355.67376709]
[52.37356949 353.29415894]
[37.42850113 350.02203369]
[22.70390892 345.86889648]
[8.25168133 340.84942627]
[-5.87725878 334.98129272]
[-19.63312531 328.28518677]
[-32.96744919 320.78466797]
[-45.83324051 312.50616455]
[-58.18517303 303.47888184]
[-69.97971344 293.73461914]
[-81.17530823 283.30770874]
[-91.73250580 272.23486328]
[-101.61411285 260.55514526]
[-110.78530121 248.30969238]
[-119.21375275 235.54164124]
[-126.86978149 222.29598999]
[-133.72639465 208.61941528]
[-139.75944519 194.56010437]
[-144.94767761 180.16760254]
[-149.27279663 165.49259949]
[-152.71955872 150.58683777]
[-155.27584839 135.50283813]
[-156.93261719 120.29372406]
[-157.68406677 105.01309967]
[-157.52751160 89.71482086]
[-156.46353149 74.45277405]
[-154.49588013 59.28075409]
[-151.63145447 44.25221252]
[-147.88038635 29.42010498]
[-162.18133545 24.89429474]
[-176.48226929 20.36848640]
[-190.78321838 15.84267712]
[-205.08416748 11.31686783]
[-217.55474854 20.36068726]
[-232.78144836 20.32769203]
[-244.92538452 11.44011593]
[-249.45312500 -2.72454095]
[-263.75405884 -7.25035000]
[-278.05502319 -11.77615929]
[-292.35595703 -16.30196762]
[-307.19946289 -10.21512318]
[-321.14242554 -18.15070915]
[-323.48898315 -34.02122498]
[-312.43905640 -45.65216446]
[-296.46923828 -44.12127304]
[-287.83016968 -30.60291290]
[-273.52920532 -26.07710457]
[-259.22827148 -21.55129623]
[-244.92732239 -17.02548599]
[-233.07475281 -26.00627708]
[-218.02868652 -26.28905869]
[-205.55534363 -17.55584335]
[-200.55836487 -2.98407769]
[-186.25741577 1.54173136]
[-171.95646667 6.06754017]
[-157.65551758 10.59334946]
[-143.35456848 15.11915874]
[-138.11264038 1.36643183]
[-132.09420776 -12.06465149]
[-125.31892395 -25.13029289]
[-117.80887604 -37.78788376]
[-109.58855438 -49.99615097]
[-100.68476105 -61.71527863]
[-91.12654114 -72.90705872]
[-80.94506073 -83.53498840]
[-70.17351532 -93.56440735]
[-58.84704208 -102.96261597]
[-47.00256348 -111.69896698]
[-34.67871094 -119.74497223]
[-21.91567421 -127.07437897]
[-8.75506973 -133.66331482]
[4.76018429 -139.49026489]
[18.58601570 -144.53623962]
[32.67733765 -148.78477478]
[46.98819733 -152.22203064]
[61.47192764 -154.83679199]
[76.08129883 -156.62054443]
[90.76866913 -157.56744385]
[105.48613739 -157.67442322]
[120.18572235 -156.94113159]
[134.81947327 -155.36994934]
[149.33969116 -152.96600342]
[163.69900513 -149.73715210]
[177.85060120 -145.69389343]
[191.74832153 -140.84944153]
[205.34684753 -135.21957397]
[218.60185242 -128.82266235]
[231.47007751 -121.67955017]
[243.90959167 -113.81355286]
[255.87982178 -105.25030518]
[267.34173584 -96.01773834]
[278.25793457 -86.14596558]
[288.59283447 -75.66716766]
[298.31274414 -64.61551666]
[307.38592529 -53.02705765]
[315.78286743 -40.93957901]
[323.47610474 -28.39249611]
[330.44061279 -15.42672729]
[336.65365601 -2.08455276]
[342.09497070 11.59051895]
[346.74679565 25.55389404]
[350.59399414 39.76003647]
[353.62402344 54.16262436]
[355.82696533 68.71468353]
[357.19564819 83.36876678]
[357.72564697 98.07707977]
[357.41519165 112.79167175]
[356.26528931 127.46453857]
[354.27972412 142.04785156]
[351.46496582 156.49404907]
[347.83016968 170.75601196]
[343.38720703 184.78724670]
[338.15054321 198.54199219]
[351.83810425 204.67802429]
[365.26358032 197.12403870]
[380.38604736 198.90306091]
[391.43057251 209.12471008]
[394.30401611 223.71516418]
[407.99154663 229.85119629]
[417.97073364 225.37852478]
[428.54269409 227.12673950]
[436.22811890 234.27421570]
[438.63415527 244.26373291]
[452.07666016 250.91952515]
[465.51913452 257.57531738]
[479.76885986 251.13488770]
[494.81057739 255.41053772]
[503.54202271 268.38342285]
[501.84048462 283.92816162]
[490.50936890 294.70498657]
[474.89889526 295.62542725]
[462.37985229 286.25488281]
[458.86334229 271.01782227]
[445.42083740 264.36199951]
[431.97836304 257.70620728]
[412.85726929 260.39376831]
[401.85552979 243.53875732]
[388.16796875 237.40272522]
[375.36364746 244.96496582]
[360.38442993 243.52033997]
[348.99493408 233.41426086]
[345.70208740 218.36557007]
[332.01452637 212.22953796]
[324.94671631 225.79818726]
[317.08627319 238.92356873]
[308.46090698 251.55941772]
[299.10098267 263.66125488]
[289.03952026 275.18637085]
[278.31195068 286.09420776]
[266.95605469 296.34634399]
[255.01187134 305.90658569]
[242.52149963 314.74130249]
[229.52891541 322.81936646]
[216.07992554 330.11227417]
[202.22190857 336.59436035]
[188.00369263 342.24276733]
[173.47540283 347.03759766]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 63]
[36 62]
[37 61]
[38 60]
[39 59]
[43 55]
[44 54]
[45 53]
[46 52]
[119 149]
[120 148]
[124 144]
[125 143]
[129 141]
[130 140]
[131 139]
] def

init

% Start Annotations
38 60 0.16 0.6 colorpair
43 55 0.16 0.2 colorpair
44 54 0.16 0.6 colorpair
45 53 0.0 0.6 colorpair
46 52 0.0 0.6 colorpair
119 149 0.0 0.6 colorpair
124 144 0.0 0.2 colorpair
125 143 0.0 0.6 colorpair
130 140 0.0 0.6 colorpair
131 139 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
35 63 3 gmark
63 cmark
36 62 5 gmark
36 cmark
62 cmark
37 61 5 gmark
37 cmark
61 cmark
38 60 1 gmark
60 cmark
39 59 6 gmark
39 cmark
43 55 2 gmark
55 cmark
44 54 1 gmark
54 cmark
45 53 1 gmark
46 52 1 gmark
119 149 1 gmark
120 148 3 gmark
120 cmark
124 144 2 gmark
125 143 1 gmark
129 141 8 gmark
129 cmark
141 cmark
130 140 1 gmark
131 139 1 gmark

% End Annotations
showpage
end
%%EOF
