%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Dec 18 23:22:04 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__________________________________A______GA__AA_GA_____A_GGC________AUG_A___UGCCG____CA___AAAAUCGGUGUUAGU__GGCCC_________UGAU_C_GUCAUCUGU______UUCACGGUGUUGGUAUUCACAUUGAUGACGCGGG_AAUCGCUGUGCGAGUUGCGAAUCAGAA___ACG_GCAA_UA______CGGAGGUU_GCGGCCUUCU___UAGCUUAC\
GAAU___C____C_G___AG_A__AG_________________________________________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50188446 92.23965454]
[62.51054001 91.71904755]
[47.53049469 90.93832397]
[32.56625366 89.89772797]
[17.62232971 88.59756470]
[2.70321989 87.03823090]
[-12.18657780 85.22019958]
[-27.04257965 83.14401245]
[-41.86030960 80.81029510]
[-56.63530350 78.21975708]
[-71.36310577 75.37317657]
[-86.03929138 72.27140045]
[-100.65943146 68.91538239]
[-115.21911621 65.30611420]
[-129.71397400 61.44469452]
[-144.13961792 57.33228683]
[-158.49172974 52.97012329]
[-172.76596069 48.35952377]
[-186.95802307 43.50187302]
[-201.06362915 38.39863968]
[-215.07855225 33.05135727]
[-228.99855042 27.46163559]
[-242.81942749 21.63116264]
[-256.53704834 15.56169128]
[-270.14724731 9.25505161]
[-283.64593506 2.71314359]
[-297.02905273 -4.06206226]
[-310.29257202 -11.06852531]
[-323.43249512 -18.30413437]
[-336.44485474 -25.76671028]
[-349.32571411 -33.45400238]
[-362.07122803 -41.36370087]
[-374.67752075 -49.49341583]
[-387.14083862 -57.84070206]
[-399.45739746 -66.40304565]
[-411.62350464 -75.17786407]
[-423.63546753 -84.16251373]
[-435.48968506 -93.35429382]
[-447.18258667 -102.75042725]
[-458.71066284 -112.34809113]
[-470.07040405 -122.14438629]
[-481.25842285 -132.13636780]
[-492.27133179 -142.32101440]
[-503.10580444 -152.69528198]
[-513.75860596 -163.25602722]
[-524.22650146 -174.00006104]
[-534.50634766 -184.92416382]
[-544.59503174 -196.02503967]
[-554.48956299 -207.29934692]
[-564.18688965 -218.74368286]
[-573.68420410 -230.35459900]
[-582.97845459 -242.12860107]
[-592.06701660 -254.06213379]
[-600.94714355 -266.15161133]
[-609.61602783 -278.39340210]
[-618.07116699 -290.78381348]
[-626.30999756 -303.31909180]
[-634.33001709 -315.99548340]
[-642.12878418 -328.80914307]
[-649.70404053 -341.75622559]
[-657.05340576 -354.83285522]
[-664.17468262 -368.03506470]
[-671.06579590 -381.35888672]
[-677.72460938 -394.80029297]
[-684.14910889 -408.35525513]
[-690.33740234 -422.01968384]
[-696.28759766 -435.78942871]
[-701.99792480 -449.66040039]
[-707.46667480 -463.62838745]
[-712.69207764 -477.68917847]
[-717.67272949 -491.83853149]
[-722.40704346 -506.07223511]
[-726.89361572 -520.38592529]
[-731.13104248 -534.77532959]
[-735.11810303 -549.23614502]
[-738.85363770 -563.76397705]
[-742.33636475 -578.35443115]
[-745.56542969 -593.00311279]
[-748.53973389 -607.70568848]
[-751.25836182 -622.45764160]
[-753.72058105 -637.25457764]
[-755.92565918 -652.09197998]
[-757.87280273 -666.96545410]
[-759.56158447 -681.87042236]
[-760.99139404 -696.80255127]
[-762.16180420 -711.75720215]
[-763.07250977 -726.72985840]
[-763.72320557 -741.71612549]
[-764.11370850 -756.71142578]
[-764.24389648 -771.71124268]
[-764.11370850 -786.71105957]
[-763.72320557 -801.70635986]
[-763.07250977 -816.69262695]
[-762.16180420 -831.66534424]
[-760.99139404 -846.61999512]
[-759.56158447 -861.55206299]
[-757.87286377 -876.45703125]
[-755.92565918 -891.33050537]
[-753.72064209 -906.16796875]
[-751.25842285 -920.96484375]
[-748.53973389 -935.71679688]
[-745.56542969 -950.41937256]
[-742.33642578 -965.06805420]
[-738.85363770 -979.65850830]
[-735.11816406 -994.18634033]
[-731.13110352 -1008.64715576]
[-726.89367676 -1023.03656006]
[-722.40710449 -1037.35021973]
[-717.67279053 -1051.58398438]
[-712.69219971 -1065.73327637]
[-707.46673584 -1079.79406738]
[-701.99798584 -1093.76208496]
[-696.28771973 -1107.63305664]
[-690.33746338 -1121.40283203]
[-684.14923096 -1135.06726074]
[-677.72467041 -1148.62219238]
[-671.06585693 -1162.06359863]
[-664.17480469 -1175.38745117]
[-657.05346680 -1188.58959961]
[-649.70410156 -1201.66625977]
[-642.12890625 -1214.61340332]
[-634.33007812 -1227.42700195]
[-626.31005859 -1240.10339355]
[-618.07128906 -1252.63867188]
[-609.61614990 -1265.02917480]
[-600.94720459 -1277.27087402]
[-592.06713867 -1289.36035156]
[-582.97857666 -1301.29394531]
[-573.68426514 -1313.06799316]
[-564.18701172 -1324.67883301]
[-554.48968506 -1336.12316895]
[-544.59515381 -1347.39746094]
[-534.50646973 -1358.49841309]
[-524.22662354 -1369.42248535]
[-513.75872803 -1380.16650391]
[-503.10592651 -1390.72729492]
[-492.27145386 -1401.10156250]
[-481.25854492 -1411.28613281]
[-470.07055664 -1421.27819824]
[-458.71078491 -1431.07446289]
[-447.18273926 -1440.67211914]
[-435.48983765 -1450.06823730]
[-423.63562012 -1459.26000977]
[-411.62365723 -1468.24475098]
[-399.45755005 -1477.01953125]
[-387.14099121 -1485.58190918]
[-374.67770386 -1493.92919922]
[-362.07138062 -1502.05883789]
[-349.32586670 -1509.96862793]
[-336.44500732 -1517.65588379]
[-323.43264771 -1525.11840820]
[-310.29275513 -1532.35412598]
[-297.02923584 -1539.36047363]
[-283.64611816 -1546.13574219]
[-270.14743042 -1552.67761230]
[-256.53723145 -1558.98425293]
[-242.81961060 -1565.05371094]
[-228.99871826 -1570.88427734]
[-215.07872009 -1576.47399902]
[-201.06381226 -1581.82128906]
[-186.95819092 -1586.92443848]
[-172.76614380 -1591.78210449]
[-158.49191284 -1596.39270020]
[-144.13980103 -1600.75488281]
[-129.71415710 -1604.86730957]
[-115.21929932 -1608.72875977]
[-100.65961456 -1612.33801270]
[-86.03947449 -1615.69409180]
[-71.36329651 -1618.79577637]
[-56.63548660 -1621.64245605]
[-41.86049652 -1624.23291016]
[-27.04276657 -1626.56665039]
[-12.18676567 -1628.64282227]
[2.70303226 -1630.46093750]
[17.62214088 -1632.02026367]
[32.56606674 -1633.32043457]
[47.53030777 -1634.36096191]
[62.51035309 -1635.14172363]
[77.50169373 -1635.66235352]
[92.49980927 -1635.92272949]
[107.50019073 -1635.92272949]
[122.49830627 -1635.66235352]
[137.48965454 -1635.14172363]
[152.46969604 -1634.36096191]
[167.43392944 -1633.32043457]
[182.37785339 -1632.02026367]
[197.29696655 -1630.46093750]
[212.18676758 -1628.64282227]
[227.04277039 -1626.56665039]
[241.86048889 -1624.23291016]
[256.63549805 -1621.64245605]
[271.36328125 -1618.79577637]
[286.03948975 -1615.69409180]
[300.65960693 -1612.33801270]
[315.21929932 -1608.72875977]
[329.71414185 -1604.86730957]
[344.13980103 -1600.75488281]
[358.49191284 -1596.39270020]
[372.76614380 -1591.78210449]
[386.95819092 -1586.92443848]
[401.06381226 -1581.82128906]
[415.07873535 -1576.47399902]
[428.99871826 -1570.88427734]
[442.81961060 -1565.05371094]
[456.53723145 -1558.98425293]
[470.14743042 -1552.67761230]
[483.64611816 -1546.13574219]
[497.02923584 -1539.36047363]
[510.29275513 -1532.35412598]
[523.43267822 -1525.11840820]
[536.44500732 -1517.65588379]
[549.32586670 -1509.96862793]
[562.07141113 -1502.05883789]
[574.67767334 -1493.92919922]
[587.14099121 -1485.58190918]
[599.45758057 -1477.01953125]
[611.62365723 -1468.24475098]
[623.63562012 -1459.26000977]
[635.48980713 -1450.06823730]
[647.18273926 -1440.67211914]
[658.71081543 -1431.07446289]
[670.07055664 -1421.27819824]
[681.25854492 -1411.28613281]
[692.27148438 -1401.10156250]
[703.10595703 -1390.72729492]
[713.75872803 -1380.16650391]
[724.22662354 -1369.42248535]
[734.50646973 -1358.49841309]
[744.59515381 -1347.39746094]
[754.48968506 -1336.12316895]
[764.18701172 -1324.67883301]
[773.68426514 -1313.06799316]
[782.97857666 -1301.29394531]
[792.06713867 -1289.36035156]
[800.94720459 -1277.27087402]
[809.61614990 -1265.02917480]
[818.07128906 -1252.63867188]
[826.31005859 -1240.10339355]
[834.33007812 -1227.42700195]
[842.12890625 -1214.61340332]
[849.70410156 -1201.66625977]
[857.05346680 -1188.58959961]
[864.17480469 -1175.38745117]
[871.06585693 -1162.06359863]
[877.72467041 -1148.62219238]
[884.14923096 -1135.06726074]
[890.33746338 -1121.40283203]
[896.28771973 -1107.63305664]
[901.99798584 -1093.76208496]
[907.46673584 -1079.79406738]
[912.69219971 -1065.73327637]
[917.67279053 -1051.58398438]
[922.40710449 -1037.35021973]
[926.89367676 -1023.03656006]
[931.13110352 -1008.64715576]
[935.11816406 -994.18634033]
[938.85363770 -979.65850830]
[942.33642578 -965.06805420]
[945.56542969 -950.41937256]
[948.53973389 -935.71679688]
[951.25842285 -920.96484375]
[953.72064209 -906.16796875]
[955.92565918 -891.33050537]
[957.87286377 -876.45703125]
[959.56158447 -861.55206299]
[960.99139404 -846.61999512]
[962.16180420 -831.66534424]
[963.07250977 -816.69262695]
[963.72320557 -801.70635986]
[964.11370850 -786.71105957]
[964.24389648 -771.71124268]
[964.11370850 -756.71142578]
[963.72320557 -741.71612549]
[963.07250977 -726.72985840]
[962.16180420 -711.75720215]
[960.99139404 -696.80255127]
[959.56158447 -681.87042236]
[957.87280273 -666.96545410]
[955.92565918 -652.09197998]
[953.72058105 -637.25457764]
[951.25836182 -622.45764160]
[948.53973389 -607.70568848]
[945.56542969 -593.00311279]
[942.33636475 -578.35443115]
[938.85363770 -563.76397705]
[935.11810303 -549.23614502]
[931.13104248 -534.77532959]
[926.89361572 -520.38592529]
[922.40704346 -506.07223511]
[917.67272949 -491.83853149]
[912.69207764 -477.68917847]
[907.46667480 -463.62838745]
[901.99792480 -449.66040039]
[896.28759766 -435.78942871]
[890.33740234 -422.01968384]
[884.14910889 -408.35525513]
[877.72460938 -394.80029297]
[871.06579590 -381.35888672]
[864.17468262 -368.03506470]
[857.05340576 -354.83285522]
[849.70404053 -341.75622559]
[842.12878418 -328.80914307]
[834.33001709 -315.99548340]
[826.30999756 -303.31909180]
[818.07116699 -290.78381348]
[809.61602783 -278.39340210]
[800.94714355 -266.15161133]
[792.06701660 -254.06213379]
[782.97845459 -242.12860107]
[773.68420410 -230.35459900]
[764.18688965 -218.74368286]
[754.48956299 -207.29934692]
[744.59503174 -196.02503967]
[734.50634766 -184.92416382]
[724.22650146 -174.00006104]
[713.75860596 -163.25602722]
[703.10583496 -152.69528198]
[692.27130127 -142.32101440]
[681.25842285 -132.13636780]
[670.07037354 -122.14438629]
[658.71063232 -112.34809113]
[647.18261719 -102.75042725]
[635.48968506 -93.35429382]
[623.63543701 -84.16251373]
[611.62347412 -75.17786407]
[599.45739746 -66.40304565]
[587.14086914 -57.84070206]
[574.67755127 -49.49341583]
[562.07122803 -41.36370087]
[549.32568359 -33.45400238]
[536.44482422 -25.76671028]
[523.43249512 -18.30413437]
[510.29257202 -11.06852531]
[497.02905273 -4.06206226]
[483.64593506 2.71314359]
[470.14724731 9.25505161]
[456.53704834 15.56169128]
[442.81942749 21.63116264]
[428.99853516 27.46163559]
[415.07855225 33.05135727]
[401.06362915 38.39863968]
[386.95800781 43.50187302]
[372.76596069 48.35952377]
[358.49172974 52.97012329]
[344.13961792 57.33228683]
[329.71395874 61.44469452]
[315.21911621 65.30611420]
[300.65942383 68.91538239]
[286.03930664 72.27140045]
[271.36309814 75.37317657]
[256.63531494 78.21975708]
[241.86030579 80.81029510]
[227.04257202 83.14401245]
[212.18658447 85.22019958]
[197.29678345 87.03823090]
[182.37767029 88.59756470]
[167.43374634 89.89772797]
[152.46951294 90.93832397]
[137.48945618 91.71904755]
[122.49811554 92.23965454]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
