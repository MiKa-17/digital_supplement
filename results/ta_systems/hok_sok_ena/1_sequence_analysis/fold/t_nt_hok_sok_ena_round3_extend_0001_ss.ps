%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Dec 18 07:44:31 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAACUGCCGCGAAACACCCUUAUCUGGU_GCGUA__UUAAUCGUGUGUCUCACACUGUUGAUAUUCACUUACCUGACCCGGAAAUCGCUGUGCGAAAUCCGGUACAGGG___ACGGAUACAGGGAGGUGGCGGCUUUUAUGGCUUACGAAUC___CGGU_AA_GUAG_\
) } def
/len { sequence length } bind def

/coor [
[76.08943939 228.05357361]
[70.68048859 214.06275940]
[69.02592468 199.15428162]
[71.23560333 184.31793213]
[77.16281128 170.53866577]
[86.41513824 158.73022461]
[89.84360504 144.12728882]
[93.27207184 129.52435303]
[96.70053864 114.92142487]
[86.69075775 126.09300995]
[76.68097687 137.26458740]
[66.67119598 148.43617249]
[73.57916260 161.95077515]
[75.13473511 177.04859924]
[71.12751770 191.68782043]
[62.09945679 203.88858032]
[49.27153015 212.00083923]
[34.37860489 214.92747498]
[19.43482590 212.27267456]
[6.46121836 204.39550781]
[-2.78764439 192.36126709]
[-7.06092930 177.79748535]
[-5.78070974 162.67381287]
[0.87987471 149.03559875]
[12.02003479 138.72727966]
[26.13315582 133.14300537]
[41.31055450 133.03796387]
[55.49961090 138.42639160]
[65.50939178 127.25480652]
[75.51917267 116.08322144]
[85.52895355 104.91164398]
[81.47034454 90.47045898]
[77.41211700 76.03055573]
[61.96795273 79.46398926]
[52.00941849 68.38802338]
[37.64540863 64.06654358]
[23.28140068 59.74505234]
[16.71054459 60.89738083]
[11.36220360 58.84244156]
[8.47699642 54.99452972]
[-5.71960068 50.15132523]
[-19.91619682 45.30811691]
[-32.58512115 54.07194138]
[-47.80730438 53.69981384]
[-59.75027084 44.54396820]
[-63.96141052 30.28197861]
[-78.15800476 25.43877220]
[-92.35460663 20.59556580]
[-106.55120087 15.75236034]
[-121.52660370 21.50709152]
[-135.28935242 13.26292610]
[-137.28184509 -2.65591502]
[-125.97561646 -14.03786087]
[-110.04383087 -12.15165615]
[-101.70799255 1.55576384]
[-87.51139832 6.39896965]
[-73.31480408 11.24217606]
[-59.11820602 16.08538246]
[-47.06855011 7.37080717]
[-32.01992035 7.42321110]
[-19.74418068 16.43207359]
[-15.07299137 31.11152267]
[-0.87639439 35.95472717]
[13.32020187 40.79793549]
[27.60288811 45.38104630]
[41.96689606 49.70252991]
[56.33090591 54.02401733]
[70.74765778 50.28149033]
[81.73360443 61.66654968]
[71.19982910 50.98761749]
[62.02188492 39.12316132]
[54.14608383 26.35712051]
[47.66023254 12.83182144]
[42.63663483 -1.30194974]
[39.13130569 -15.88662148]
[37.18331909 -30.75959587]
[36.81438828 -45.75505829]
[38.02863693 -60.70582962]
[40.81251907 -75.44523621]
[45.13499832 -89.80894470]
[50.94789124 -103.63682556]
[58.18638611 -116.77471161]
[66.76979065 -129.07614136]
[76.60240173 -140.40397644]
[87.57460785 -150.63191223]
[99.56408691 -159.64591980]
[112.43716431 -167.34553528]
[126.05032349 -173.64488220]
[140.25180054 -178.47373962]
[154.88327026 -181.77830505]
[169.78161621 -183.52169800]
[184.78073120 -183.68449402]
[199.71340942 -182.26487732]
[214.41316223 -179.27868652]
[228.71609497 -174.75920105]
[242.46278381 -168.75680542]
[255.49995422 -161.33842468]
[267.68225098 -152.58677673]
[278.87387085 -142.59939575]
[288.95004272 -131.48765564]
[297.79843140 -119.37542725]
[305.32037354 -106.39774323]
[311.43203735 -92.69928741]
[316.06527710 -78.43278503]
[319.16839600 -63.75727463]
[320.70687866 -48.83638000]
[320.66351318 -33.83644485]
[319.03881836 -18.92469215]
[315.85086060 -4.26737309]
[311.13522339 9.97210693]
[304.94448853 23.63499641]
[297.34762573 36.56897354]
[288.42935181 48.62984085]
[278.28909302 59.68313980]
[267.03991699 69.60564423]
[254.80723572 78.28672028]
[241.72740173 85.62960052]
[227.94624329 91.55241394]
[213.61740112 95.98912811]
[198.90063477 98.89028168]
[183.96000671 100.22353363]
[168.96208191 99.97402191]
[154.07406616 98.14452362]
[139.45660400 94.75389099]
[124.52881622 96.22405243]
[138.33401489 102.09062195]
[151.60885620 94.27494812]
[166.76325989 95.75723267]
[178.00604248 105.76043701]
[181.16488647 120.29177094]
[194.97007751 126.15834045]
[204.84817505 121.49526215]
[215.44126892 123.02781677]
[223.26412964 130.00657654]
[225.87858582 139.93130493]
[239.46031189 146.29815674]
[253.04203796 152.66500854]
[267.15078735 145.92135620]
[282.28048706 149.87440491]
[291.28732300 162.65762329]
[289.91854858 178.23519897]
[278.82046509 189.25184631]
[263.23324585 190.50584412]
[250.51669312 181.40512085]
[246.67518616 166.24671936]
[233.09346008 159.87988281]
[219.51173401 153.51303101]
[200.44519043 156.59947205]
[189.10350037 139.96353149]
[175.29830933 134.09696960]
[162.64468384 141.90872192]
[147.64002991 140.75798035]
[136.05464172 130.87707520]
[132.46743774 115.89581299]
[118.66224670 110.02924347]
[127.96485901 121.79620361]
[137.26747131 133.56317139]
[146.57008362 145.33012390]
[159.95851135 152.09400940]
[171.17425537 162.05429077]
[179.47271729 174.54971313]
[184.30296326 188.75071716]
[185.34431458 203.71452332]
[182.52766418 218.44770813]
[176.03997803 231.97212219]
[166.31198120 243.38992310]
[153.98950195 251.94306946]
[139.89060974 257.06375122]
[124.95132446 258.41198730]
[110.16344452 255.89830017]
[96.50872803 249.68954468]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 31]
[10 30]
[11 29]
[12 28]
[33 69]
[35 67]
[36 66]
[37 65]
[40 64]
[41 63]
[42 62]
[46 58]
[47 57]
[48 56]
[49 55]
[125 155]
[126 154]
[130 150]
[131 149]
[135 147]
[136 146]
[137 145]
] def

init

% Start Annotations
10 30 0.16 0.6 colorpair
11 29 0.16 0.2 colorpair
33 69 0.16 0.2 colorpair
35 67 0.16 0.2 colorpair
36 66 0.16 0.2 colorpair
41 63 0.16 1 colorpair
46 58 0.16 0.2 colorpair
47 57 0.16 0.6 colorpair
48 56 0.16 1 colorpair
49 55 0.16 1 colorpair
125 155 0.0 0.6 colorpair
130 150 0.16 0.6 colorpair
131 149 0.0 1 colorpair
136 146 0.0 0.6 colorpair
137 145 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
9 31 4 gmark
9 cmark
31 cmark
10 30 1 gmark
10 cmark
30 cmark
11 29 2 gmark
11 cmark
29 cmark
12 28 15 gmark
12 cmark
28 cmark
33 69 2 gmark
69 cmark
35 67 2 gmark
35 cmark
36 66 2 gmark
66 cmark
37 65 5 gmark
37 cmark
65 cmark
40 64 5 gmark
40 cmark
64 cmark
63 cmark
42 62 6 gmark
42 cmark
46 58 2 gmark
58 cmark
47 57 1 gmark
57 cmark
56 cmark
49 cmark
55 cmark
125 155 1 gmark
126 154 3 gmark
126 cmark
130 150 1 gmark
130 cmark
150 cmark
135 147 7 gmark
135 cmark
147 cmark
136 146 1 gmark
137 cmark

% End Annotations
showpage
end
%%EOF
