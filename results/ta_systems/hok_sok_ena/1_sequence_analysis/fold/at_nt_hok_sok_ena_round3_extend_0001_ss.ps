%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Dec 18 07:44:30 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUGCUUGAGGCUAUCUGUCUCAGGCAUU_AGC_AG__AAC_GGCAGAUAGAGAAAA__GCCCCGGGUGA_CA_UUUUACGACCAACACGACGCUUA_ACAUUUACCGGAG____ACAUAUUGAG_UGCCUCUUACA__GACCGUUAGGUCCAGAAGAAGAGAGCAGUG______\
) } def
/len { sequence length } bind def

/coor [
[-17.51136398 463.44680786]
[-31.68961525 458.55313110]
[-45.66481400 453.10659790]
[-59.41540527 447.11560059]
[-72.92018890 440.58935547]
[-86.15834808 433.53796387]
[-99.10945892 425.97229004]
[-107.17830658 438.61718750]
[-115.24715424 451.26208496]
[-123.31600189 463.90701294]
[-131.38484192 476.55191040]
[-139.45368958 489.19680786]
[-134.59013367 504.05883789]
[-140.46548462 518.55072021]
[-154.30560303 525.82977295]
[-169.57560730 522.45916748]
[-179.06544495 510.03027344]
[-178.29434204 494.41174316]
[-167.62635803 482.97808838]
[-152.09860229 481.12796021]
[-144.02975464 468.48306274]
[-135.96090698 455.83816528]
[-127.89205933 443.19323730]
[-119.82321167 430.54833984]
[-111.75436401 417.90344238]
[-124.07193756 409.34490967]
[-136.04400635 400.30938721]
[-147.65211487 390.81082153]
[-158.87835693 380.86386108]
[-169.70542908 370.48379517]
[-180.11663818 359.68667603]
[-190.09591675 348.48916626]
[-199.62789917 336.90847778]
[-208.69787598 324.96249390]
[-217.29187012 312.66964722]
[-225.39662170 300.04885864]
[-232.99961853 287.11962891]
[-240.08917236 273.90185547]
[-246.65432739 260.41595459]
[-252.68496704 246.68270874]
[-258.17178345 232.72328186]
[-263.10635376 218.55920410]
[-267.48101807 204.21231079]
[-271.28906250 189.70474243]
[-274.52459717 175.05885315]
[-277.18264771 160.29721069]
[-279.25912476 145.44261169]
[-280.75079346 130.51794434]
[-281.65536499 115.54621887]
[-281.97146606 100.55051422]
[-281.69860840 85.55397034]
[-280.83715820 70.57969666]
[-279.38851929 55.65078735]
[-277.35488892 40.79026031]
[-274.73941040 26.02103233]
[-271.54608154 11.36587334]
[-267.77987671 -3.15261817]
[-263.44659424 -17.51205635]
[-258.55288696 -31.69029808]
[-253.10632324 -45.66548538]
[-247.11528015 -59.41606522]
[-240.58903503 -72.92083740]
[-233.53761292 -86.15898132]
[-225.97190857 -99.11007690]
[-217.90356445 -111.75416565]
[-209.34504700 -124.07173920]
[-200.30953979 -136.04380798]
[-190.81098938 -147.65193176]
[-180.86401367 -158.87817383]
[-170.48397827 -169.70526123]
[-159.68685913 -180.11647034]
[-148.48933411 -190.09576416]
[-136.90866089 -199.62774658]
[-124.96269226 -208.69773865]
[-112.66983795 -217.29173279]
[-100.04907227 -225.39648438]
[-87.11984253 -232.99951172]
[-73.90208435 -240.08906555]
[-60.41618347 -246.65422058]
[-46.68292999 -252.68487549]
[-32.72350693 -258.17172241]
[-18.55943108 -263.10626221]
[-4.21254683 -267.48095703]
[10.29502583 -271.28900146]
[24.94091606 -274.52453613]
[39.70254517 -277.18261719]
[54.55714417 -279.25909424]
[69.48181152 -280.75076294]
[84.45354462 -281.65536499]
[99.44924164 -281.97146606]
[114.44578552 -281.69860840]
[129.42005920 -280.83718872]
[144.34896851 -279.38854980]
[159.20950317 -277.35491943]
[173.97872925 -274.73944092]
[188.63389587 -271.54614258]
[203.15238953 -267.77993774]
[217.51182556 -263.44665527]
[231.69006348 -258.55297852]
[245.66526794 -253.10641479]
[259.41583252 -247.11538696]
[272.92062378 -240.58914185]
[286.15878296 -233.53773499]
[299.10986328 -225.97203064]
[311.75396729 -217.90370178]
[324.07153320 -209.34519958]
[336.04360962 -200.30969238]
[347.65173340 -190.81114197]
[358.87799072 -180.86418152]
[369.70507812 -170.48414612]
[380.11630249 -159.68704224]
[390.09561157 -148.48953247]
[399.62759399 -136.90885925]
[408.69760132 -124.96288300]
[417.29159546 -112.67004395]
[425.39636230 -100.04927826]
[432.99938965 -87.12004852]
[440.08895874 -73.90229797]
[446.65411377 -60.41640091]
[452.68478394 -46.68315506]
[458.17163086 -32.72373199]
[463.10620117 -18.55966187]
[467.48089600 -4.21278048]
[471.28894043 10.29479027]
[474.52450562 24.94067955]
[477.18258667 39.70230484]
[479.25906372 54.55690384]
[480.75073242 69.48157501]
[481.65533447 84.45330048]
[481.97146606 99.44899750]
[481.69860840 114.44554901]
[480.83721924 129.41981506]
[479.38858032 144.34872437]
[477.35494995 159.20925903]
[474.73950195 173.97848511]
[471.54620361 188.63365173]
[467.77999878 203.15214539]
[463.44674683 217.51159668]
[458.55303955 231.68984985]
[453.10650635 245.66503906]
[447.11547852 259.41561890]
[440.58926392 272.92041016]
[433.53784180 286.15856934]
[425.97216797 299.10964966]
[417.90383911 311.75375366]
[409.34533691 324.07135010]
[400.30984497 336.04342651]
[390.81130981 347.65155029]
[380.86434937 358.87780762]
[370.48431396 369.70492554]
[359.68722534 380.11614990]
[348.48971558 390.09545898]
[336.90905762 399.62744141]
[324.96307373 408.69744873]
[312.67025757 417.29147339]
[300.04946899 425.39624023]
[287.12026978 432.99926758]
[273.90252686 440.08883667]
[260.41662598 446.65402222]
[246.68338013 452.68469238]
[232.72396851 458.17153931]
[218.55989075 463.10610962]
[204.21301270 467.48080444]
[189.70544434 471.28887939]
[175.05955505 474.52444458]
[160.29794312 477.18252563]
[145.44334412 479.25903320]
[130.51866150 480.75073242]
[115.54694366 481.65533447]
[100.55124664 481.97146606]
[85.55469513 481.69860840]
[70.58042145 480.83721924]
[55.65150833 479.38861084]
[40.79098129 477.35501099]
[26.02174568 474.73953247]
[11.36658096 471.54626465]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 25]
[8 24]
[9 23]
[10 22]
[11 21]
[12 20]
] def

init

% Start Annotations
9 23 0.16 0.6 colorpair
10 22 0.32 1 colorpair
11 21 0.32 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
7 25 3 gmark
7 cmark
25 cmark
8 24 3 gmark
24 cmark
9 23 1 gmark
23 cmark
10 cmark
22 cmark
11 21 2 gmark
11 cmark
21 cmark
12 20 3 gmark
20 cmark

% End Annotations
showpage
end
%%EOF
