%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Dec 18 00:23:06 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUGCUUGAGGCUGUCUGUCUCAGGCAUUAGCUGAACGGCAGAUAGAGAAAAGCCCCGAGUGAUAUUUUACCAUCAACCCGAGGCCCCCUAUAUGCUGAACACAUGUAGAGUGCCUCUUACUGACCGUAAGGUCAAGGAGAAGAGAGCAAUG\
) } def
/len { sequence length } bind def

/coor [
[89.78588104 105.31339264]
[74.86384583 103.78604889]
[59.94180298 102.25869751]
[38.23552322 116.72106171]
[14.68128204 98.89706421]
[-0.00767998 101.93588257]
[-14.69664192 104.97469330]
[-29.38560486 108.01350403]
[-44.07456589 111.05232239]
[-56.02109909 121.42492676]
[-70.05194092 116.42644501]
[-84.74090576 119.46526337]
[-99.42987061 122.50407410]
[-114.11882782 125.54288483]
[-128.55357361 129.62185669]
[-142.66056824 134.72019958]
[-156.76754761 139.81854248]
[-170.87452698 144.91687012]
[-184.98150635 150.01521301]
[-199.08848572 155.11355591]
[-213.19546509 160.21189880]
[-227.19551086 165.59693909]
[-241.08280945 171.26643372]
[-254.97009277 176.93592834]
[-268.85739136 182.60543823]
[-273.46310425 197.54937744]
[-286.62503052 205.99314880]
[-302.12857056 203.94984436]
[-312.65335083 192.38424683]
[-313.22994995 176.75730896]
[-303.58605957 164.44755554]
[-288.27529907 161.26730347]
[-274.52688599 168.71815491]
[-260.63958740 163.04864502]
[-246.75230408 157.37915039]
[-232.86502075 151.70964050]
[-230.20422363 147.67770386]
[-224.95532227 145.30798340]
[-218.29380798 146.10491943]
[-204.18682861 141.00657654]
[-190.07984924 135.90823364]
[-175.97286987 130.80989075]
[-161.86587524 125.71155548]
[-147.75889587 120.61321259]
[-133.65191650 115.51487732]
[-147.07402039 108.81808472]
[-153.20834351 95.12976074]
[-149.27415466 80.65488434]
[-137.05484009 71.95496368]
[-122.08948517 72.97372437]
[-111.16192627 83.24935150]
[-109.22567749 98.12385559]
[-117.15764618 110.85392761]
[-102.46868134 107.81510925]
[-87.77971649 104.77629852]
[-73.09075165 101.73748779]
[-62.19487381 91.58223724]
[-47.11338043 96.36335754]
[-32.42441940 93.32454681]
[-17.73545456 90.28572845]
[-3.04649282 87.24691772]
[11.64246941 84.20810699]
[19.23062897 71.26902771]
[14.71193695 56.96582794]
[10.19324398 42.66263199]
[-4.56685638 37.87524796]
[-13.66682625 25.30662727]
[-13.60754108 9.78966618]
[-4.41179705 -2.70905066]
[10.38445473 -7.38351059]
[25.09175301 -2.43628812]
[34.05484009 10.23030853]
[33.82722855 25.74571419]
[24.49644089 38.14393997]
[29.01513290 52.44713593]
[33.53382492 66.75032806]
[47.26115036 68.45100403]
[57.32045364 76.34730530]
[61.46915054 87.33666229]
[76.39118958 88.86400604]
[91.31322479 90.39134979]
[105.78882599 86.45982361]
[117.88800812 77.59361267]
[129.98719788 68.72739410]
[142.08638000 59.86117554]
[154.18556213 50.99496078]
[160.74357605 36.59693909]
[175.58291626 35.31508636]
[182.14093018 20.91706657]
[196.98027039 19.63521576]
[209.07945251 10.76899815]
[221.17863464 1.90278149]
[233.27781677 -6.96343565]
[245.37699890 -15.82965279]
[257.47616577 -24.69586945]
[269.57534790 -33.56208801]
[270.42190552 -49.17673874]
[281.14501953 -60.55871201]
[296.68151855 -62.33378601]
[309.69558716 -53.66382599]
[314.04235840 -38.64252090]
[307.66943359 -24.36247253]
[293.58590698 -17.56628418]
[278.44158936 -21.46290398]
[266.34240723 -12.59668827]
[254.24320984 -3.73047090]
[242.14402771 5.13574600]
[230.04484558 14.00196266]
[217.94566345 22.86817932]
[205.84648132 31.73439789]
[200.15388489 45.49824905]
[184.44912720 47.41426849]
[178.75653076 61.17811966]
[163.05177307 63.09413910]
[150.95259094 71.96035767]
[138.85340881 80.82657623]
[126.75422668 89.69279480]
[114.65504456 98.55900574]
[114.88450623 106.05549622]
[129.87750244 105.59681702]
[130.33592224 120.58981323]
[115.34343719 121.04847717]
[115.57289886 128.54496765]
[128.19169617 136.65457153]
[140.81050110 144.76419067]
[153.42930603 152.87379456]
[166.04811096 160.98341370]
[182.44551086 161.22282410]
[190.19950867 175.67298889]
[181.33346558 189.46882629]
[164.96800232 188.41836548]
[157.93850708 173.60221863]
[145.31970215 165.49259949]
[132.70089722 157.38299561]
[120.08209229 149.27337646]
[107.46328735 141.16377258]
[114.64937592 154.33039856]
[114.21059418 169.32397461]
[109.39255524 183.52912903]
[100.61922455 195.69584656]
[88.66264343 204.75344849]
[74.57497406 209.90490723]
[59.59589767 210.69688416]
[45.04354477 207.05970764]
[32.19849777 199.31343079]
[22.19109535 188.13972473]
[15.90196896 174.52183533]
[13.88455200 159.65811157]
[16.31637192 144.85655212]
[22.98343277 131.41964722]
[33.29904938 120.52983856]
[46.35546112 113.14538574]
[61.00373077 109.91612244]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 81]
[2 80]
[3 79]
[5 62]
[6 61]
[7 60]
[8 59]
[9 58]
[11 56]
[12 55]
[13 54]
[14 53]
[15 45]
[16 44]
[17 43]
[18 42]
[19 41]
[20 40]
[21 39]
[22 36]
[23 35]
[24 34]
[25 33]
[63 76]
[64 75]
[65 74]
[82 118]
[83 117]
[84 116]
[85 115]
[86 114]
[88 112]
[90 110]
[91 109]
[92 108]
[93 107]
[94 106]
[95 105]
[96 104]
[123 136]
[124 135]
[125 134]
[126 133]
[127 132]
] def

init

% Start Annotations
1 81 0.0 0.6 colorpair
2 80 0.0 0.6 colorpair
3 79 0.0 0.6 colorpair
5 62 0.16 0.6 colorpair
6 61 0.0 0.6 colorpair
7 60 0.16 0.6 colorpair
8 59 0.0 0.6 colorpair
9 58 0.0 0.6 colorpair
11 56 0.0 0.6 colorpair
12 55 0.0 0.6 colorpair
13 54 0.0 0.6 colorpair
14 53 0.0 0.6 colorpair
15 45 0.16 0.6 colorpair
16 44 0.0 0.6 colorpair
17 43 0.16 0.2 colorpair
18 42 0.16 0.6 colorpair
19 41 0.0 0.6 colorpair
20 40 0.0 0.6 colorpair
21 39 0.0 0.6 colorpair
22 36 0.16 0.6 colorpair
23 35 0.0 0.2 colorpair
24 34 0.0 0.6 colorpair
25 33 0.0 0.2 colorpair
63 76 0.0 0.6 colorpair
64 75 0.0 0.6 colorpair
65 74 0.0 0.6 colorpair
82 118 0.0 1 colorpair
83 117 0.0 1 colorpair
84 116 0.0 1 colorpair
85 115 0.0 1 colorpair
86 114 0.0 1 colorpair
88 112 0.16 1 colorpair
90 110 0.0 1 colorpair
91 109 0.0 1 colorpair
92 108 0.0 1 colorpair
93 107 0.0 0.6 colorpair
94 106 0.0 1 colorpair
95 105 0.0 1 colorpair
96 104 0.0 1 colorpair
123 136 0.0 0.6 colorpair
124 135 0.0 0.6 colorpair
125 134 0.0 0.6 colorpair
126 133 0.0 0.2 colorpair
127 132 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
1 81 1 gmark
2 80 1 gmark
3 79 1 gmark
5 62 1 gmark
5 cmark
6 61 1 gmark
7 60 1 gmark
60 cmark
8 59 1 gmark
9 58 1 gmark
11 56 1 gmark
12 55 1 gmark
13 54 1 gmark
14 53 1 gmark
15 45 1 gmark
15 cmark
16 44 1 gmark
17 43 2 gmark
17 cmark
18 42 1 gmark
42 cmark
19 41 1 gmark
20 40 1 gmark
21 39 1 gmark
22 36 1 gmark
36 cmark
23 35 2 gmark
24 34 1 gmark
25 33 2 gmark
63 76 1 gmark
64 75 1 gmark
65 74 1 gmark
88 cmark
93 107 1 gmark
123 136 1 gmark
124 135 1 gmark
125 134 1 gmark
126 133 2 gmark
127 132 1 gmark

% End Annotations
showpage
end
%%EOF
