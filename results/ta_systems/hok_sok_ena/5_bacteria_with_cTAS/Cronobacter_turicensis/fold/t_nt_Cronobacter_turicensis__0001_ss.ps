%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 15:14:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAGCCACUGCGUUAUUUACUGGCCUGUUUAUUCAUGGUCUGCAUCACUAUUUUGAUUUUUGCGUUAAUGAAUCAGGGUACGUUAUGCGAACUUACCAUCCGAAGCGGCAGUCAGGAGGUGGCGGCUAAGCUUGCCUGCACAGGCAGGUAA\
) } def
/len { sequence length } bind def

/coor [
[199.22084045 404.07897949]
[196.57171631 395.52935791]
[196.87873840 386.54031372]
[200.13647461 378.10992432]
[206.01033020 371.18362427]
[200.05873108 357.41488647]
[194.10713196 343.64614868]
[188.15553284 329.87738037]
[176.00349426 321.26477051]
[177.63014221 305.52740479]
[171.67854309 291.75866699]
[165.72694397 277.98989868]
[159.77534485 264.22116089]
[147.62330627 255.60853577]
[149.24995422 239.87117004]
[143.29835510 226.10243225]
[130.02372742 224.39515686]
[119.24895477 216.27423096]
[113.86520386 203.78428650]
[115.38338470 190.15930176]
[123.51192474 178.98536682]
[117.84243011 165.09808350]
[112.17292786 151.21080017]
[106.50342560 137.32351685]
[101.03059387 132.28923035]
[100.86310577 123.09465790]
[95.47806549 109.09461212]
[89.84228516 103.25858307]
[90.12917328 94.75366211]
[85.03083038 80.64668274]
[79.93249512 66.53969574]
[74.83415222 52.43271637]
[61.31275940 49.58631134]
[51.05526352 40.49077988]
[46.68125153 27.61245155]
[49.23649597 14.36420918]
[57.94526291 4.20113945]
[53.13574600 -10.00690556]
[48.32622910 -24.21495056]
[43.51671219 -38.42299652]
[38.70719528 -52.63104248]
[20.77294922 -66.01538849]
[25.50951385 -87.11255646]
[19.55791283 -100.88130951]
[13.60631084 -114.65005493]
[7.65470982 -128.41880798]
[1.70310843 -142.18754578]
[-10.87462902 -151.78500366]
[-8.82227612 -166.53753662]
[-14.77387714 -180.30628967]
[-20.86560822 -194.01361084]
[-27.09683228 -207.65809631]
[-33.32805634 -221.30256653]
[-39.55928421 -234.94705200]
[-45.79050827 -248.59153748]
[-52.02173233 -262.23602295]
[-58.25296021 -275.88049316]
[-64.48418427 -289.52496338]
[-70.71540833 -303.16946411]
[-76.94663239 -316.81393433]
[-83.17785645 -330.45840454]
[-95.94875336 -339.79730225]
[-94.19776154 -354.58862305]
[-109.09130859 -359.87612915]
[-115.80827332 -374.18200684]
[-110.36359406 -389.01882935]
[-95.98751068 -395.58416748]
[-81.20909119 -389.98291016]
[-74.79611206 -375.53820801]
[-80.55327606 -360.81985474]
[-68.22808075 -352.45690918]
[-69.53337860 -336.68963623]
[-63.30215454 -323.04516602]
[-57.07093048 -309.40066528]
[-50.83970261 -295.75619507]
[-44.60847855 -282.11172485]
[-38.37725449 -268.46722412]
[-32.14602661 -254.82275391]
[-25.91480255 -241.17826843]
[-19.68357849 -227.53379822]
[-13.45235252 -213.88931274]
[-7.22112751 -200.24484253]
[-1.54751074 -195.43797302]
[-1.00512862 -186.25788879]
[4.94647264 -172.48913574]
[17.09851265 -163.87651062]
[15.47185707 -148.13916016]
[21.42345810 -134.37040710]
[27.37505913 -120.60165405]
[33.32666016 -106.83290863]
[39.27826309 -93.06416321]
[47.18181610 -91.76428986]
[53.98830414 -87.36556244]
[58.52465439 -80.53636932]
[59.97356415 -72.37096405]
[58.01986694 -64.21429443]
[52.91524124 -57.44055939]
[57.72475815 -43.23251343]
[62.53427505 -29.02446747]
[67.34378815 -14.81642246]
[72.15330505 -0.60837758]
[87.95170593 3.74854660]
[98.15946198 16.78065872]
[98.61454773 33.49425888]
[88.94113159 47.33437729]
[94.03947449 61.44136047]
[99.13780975 75.54833984]
[104.23615265 89.65531921]
[109.47811890 103.70957184]
[114.86315918 117.70961761]
[120.39071655 131.65400696]
[126.06021118 145.54129028]
[131.72972107 159.42858887]
[137.39921570 173.31587219]
[153.85397339 177.10594177]
[164.71665955 189.81631470]
[165.87345886 206.32981873]
[157.06710815 220.15083313]
[163.01870728 233.91957092]
[175.59645081 243.51702881]
[173.54409790 258.26956177]
[179.49569702 272.03829956]
[185.44729614 285.80706787]
[191.39889526 299.57580566]
[203.97663879 309.17324829]
[201.92428589 323.92578125]
[207.87588501 337.69451904]
[213.82748413 351.46328735]
[219.77908325 365.23202515]
[240.58662415 371.59359741]
[249.92472839 390.93563843]
[242.16975403 410.66439819]
[249.49240112 423.75558472]
[256.81503296 436.84674072]
[264.13769531 449.93792725]
[271.46032715 463.02911377]
[278.78295898 476.12026978]
[286.10562134 489.21145630]
[293.42825317 502.30264282]
[307.78671265 510.22515869]
[307.83428955 526.62420654]
[293.52200317 534.62988281]
[279.57315063 526.00665283]
[280.33706665 509.62527466]
[273.01443481 496.53408813]
[265.69180298 483.44293213]
[258.36914062 470.35174561]
[251.04650879 457.26055908]
[243.72386169 444.16940308]
[236.40121460 431.07821655]
[229.07856750 417.98703003]
[220.32293701 418.58450317]
[211.81457520 416.26193237]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 129]
[6 128]
[7 127]
[8 126]
[10 124]
[11 123]
[12 122]
[13 121]
[15 119]
[16 118]
[21 114]
[22 113]
[23 112]
[24 111]
[26 110]
[27 109]
[29 108]
[30 107]
[31 106]
[32 105]
[37 101]
[38 100]
[39 99]
[40 98]
[41 97]
[43 91]
[44 90]
[45 89]
[46 88]
[47 87]
[49 85]
[50 84]
[51 82]
[52 81]
[53 80]
[54 79]
[55 78]
[56 77]
[57 76]
[58 75]
[59 74]
[60 73]
[61 72]
[63 70]
[132 151]
[133 150]
[134 149]
[135 148]
[136 147]
[137 146]
[138 145]
[139 144]
] def

init

% Start Annotations
5 129 0.0 1 colorpair
6 128 0.0 1 colorpair
7 127 0.0 1 colorpair
8 126 0.0 1 colorpair
10 124 0.0 1 colorpair
11 123 0.0 1 colorpair
12 122 0.0 1 colorpair
13 121 0.0 1 colorpair
15 119 0.0 1 colorpair
16 118 0.0 1 colorpair
21 114 0.0 1 colorpair
22 113 0.0 1 colorpair
23 112 0.0 1 colorpair
24 111 0.0 1 colorpair
26 110 0.0 1 colorpair
27 109 0.0 1 colorpair
29 108 0.0 1 colorpair
30 107 0.0 1 colorpair
31 106 0.0 1 colorpair
32 105 0.0 1 colorpair
37 101 0.0 1 colorpair
38 100 0.0 1 colorpair
39 99 0.0 1 colorpair
40 98 0.0 1 colorpair
41 97 0.0 1 colorpair
43 91 0.0 1 colorpair
44 90 0.0 1 colorpair
45 89 0.0 1 colorpair
46 88 0.0 1 colorpair
47 87 0.0 1 colorpair
49 85 0.0 1 colorpair
50 84 0.0 1 colorpair
51 82 0.0 1 colorpair
52 81 0.0 1 colorpair
53 80 0.0 1 colorpair
54 79 0.0 1 colorpair
55 78 0.0 1 colorpair
56 77 0.0 1 colorpair
57 76 0.0 1 colorpair
58 75 0.0 1 colorpair
59 74 0.0 1 colorpair
60 73 0.0 1 colorpair
61 72 0.0 1 colorpair
63 70 0.0 1 colorpair
132 151 0.0 1 colorpair
133 150 0.0 1 colorpair
134 149 0.0 1 colorpair
135 148 0.0 1 colorpair
136 147 0.0 1 colorpair
137 146 0.0 1 colorpair
138 145 0.0 1 colorpair
139 144 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
