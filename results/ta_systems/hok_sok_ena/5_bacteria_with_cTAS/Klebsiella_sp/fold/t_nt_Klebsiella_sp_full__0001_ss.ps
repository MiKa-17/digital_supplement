%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 17:49:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAAUGCCGCAAAAGUAUCUGUUGUUUGGCUUAAUAGUGAUUUGCUUCACUAUUUUAUUAUUGACCUGGAUGGUUCGUGAUUCGCUGUGUGAAUUACAGAUCAGACAGGGAAAUAUUGAGCUGGUGGCAUUCUUAGCCUGUGAAAUUAAACAGUAA___\
) } def
/len { sequence length } bind def

/coor [
[192.80856323 330.05596924]
[204.35432434 320.39218140]
[197.32374573 307.14187622]
[190.29315186 293.89154053]
[183.26257324 280.64123535]
[176.23199463 267.39093018]
[169.20140076 254.14060974]
[162.17082214 240.89028931]
[155.14022827 227.63996887]
[148.10964966 214.38966370]
[141.07907104 201.13934326]
[131.02140808 199.01307678]
[123.65962982 191.52592468]
[121.61933136 181.00151062]
[125.81877899 170.89898682]
[119.31052399 157.38446045]
[112.80226898 143.86991882]
[96.30369568 145.55003357]
[80.29187775 141.23176575]
[66.87538147 131.48376465]
[54.45438766 139.89321899]
[42.03339005 148.30267334]
[37.59983444 163.72094727]
[22.72645760 169.73445129]
[8.82284260 161.73013306]
[6.55465174 145.84823608]
[17.66184807 134.27197266]
[33.62393951 135.88168335]
[46.04493713 127.47222900]
[58.46593475 119.06277466]
[56.65572739 114.48248291]
[55.34893417 109.73398590]
[54.56072617 104.87243652]
[54.30026245 99.95429993]
[39.50611115 97.47778320]
[24.71196365 95.00126648]
[9.91781330 92.52474976]
[-4.87633657 90.04823303]
[-19.67048645 87.57171631]
[-34.46463776 85.09519958]
[-49.25878525 82.61868286]
[-61.97864914 91.99848175]
[-77.59276581 89.55412292]
[-86.83755493 76.73580170]
[-84.22825623 61.14839935]
[-71.31290436 52.03964996]
[-55.75396347 54.81360626]
[-46.78226852 67.82453918]
[-31.98812103 70.30104828]
[-17.19396973 72.77756500]
[-2.39982080 75.25408173]
[12.39432907 77.73059845]
[27.18847847 80.20711517]
[41.98262787 82.68363190]
[56.77677917 85.16014862]
[62.39374161 74.03392029]
[70.80791473 64.83908081]
[81.39343262 58.25956726]
[93.36293030 54.78476715]
[105.82611084 54.67313766]
[110.15411377 40.31108856]
[114.48211670 25.94904327]
[118.81011963 11.58699703]
[123.13813019 -2.77504921]
[119.71170807 -18.22076797]
[130.79219055 -28.17427444]
[135.12019348 -42.53631973]
[139.44819641 -56.89836884]
[143.77619934 -71.26041412]
[136.55728149 -85.06349182]
[141.15107727 -99.56699371]
[154.35469055 -106.36406708]
[158.68269348 -120.72612000]
[163.01069641 -135.08816528]
[153.79562378 -147.43273926]
[153.61846924 -162.65844727]
[162.33760071 -174.92387390]
[176.43841553 -179.64668274]
[180.76641846 -194.00872803]
[185.09442139 -208.37078857]
[189.42242432 -222.73283386]
[193.75042725 -237.09487915]
[198.07843018 -251.45692444]
[202.40644836 -265.81896973]
[206.73445129 -280.18099976]
[211.06245422 -294.54306030]
[209.84338379 -311.45312500]
[225.75512695 -317.30572510]
[235.78379822 -303.63598633]
[225.42449951 -290.21505737]
[221.09649658 -275.85299683]
[216.76849365 -261.49096680]
[212.44047546 -247.12892151]
[208.11247253 -232.76687622]
[203.78446960 -218.40481567]
[199.45646667 -204.04277039]
[195.12846375 -189.68072510]
[190.80046082 -175.31867981]
[199.94398499 -163.59118652]
[200.43438721 -148.55046082]
[191.87416077 -135.95777893]
[177.37274170 -130.76016235]
[173.04473877 -116.39810944]
[168.71673584 -102.03606415]
[175.96635437 -89.07540894]
[171.78173828 -74.44859314]
[158.13824463 -66.93241119]
[153.81024170 -52.57036209]
[149.48223877 -38.20831680]
[145.15423584 -23.84627151]
[148.89021301 -9.42782116]
[137.50016785 1.55295515]
[133.17216492 15.91500187]
[128.84416199 30.27704811]
[124.51615906 44.63909531]
[120.18815613 59.00114059]
[134.97766113 70.58859253]
[143.85514832 87.14723206]
[145.32012939 105.87828827]
[139.12496948 123.61577606]
[126.31680298 137.36166382]
[132.82505798 150.87620544]
[139.33331299 164.39073181]
[156.48287964 174.92248535]
[154.32937622 194.10874939]
[161.35997009 207.35906982]
[168.39054871 220.60939026]
[175.42112732 233.85971069]
[182.45172119 247.11001587]
[189.48229980 260.36035156]
[196.51289368 273.61065674]
[203.54347229 286.86096191]
[210.57406616 300.11129761]
[217.60464478 313.36160278]
[232.07980347 309.21875000]
[247.10003662 308.17636108]
[262.00869751 310.28005981]
[276.15405273 315.43780518]
[288.91772461 323.42419434]
[299.74176025 333.89004517]
[308.15295410 346.37783813]
[313.78363037 360.34170532]
[316.38760376 375.17117310]
[315.85107422 390.21795654]
[312.19747925 404.82427979]
[305.58654785 418.35165405]
[296.30725098 430.20864868]
[284.76528931 439.87698364]
[271.46517944 446.93399048]
[256.98840332 451.07113647]
[241.96775818 452.10760498]
[227.05993652 449.99804688]
[212.91659546 444.83474731]
[200.15606689 436.84335327]
[189.33615112 426.37322998]
[180.92987061 413.88211060]
[175.30470276 399.91604614]
[172.70655823 385.08554077]
[173.24900818 370.03897095]
[176.90835571 355.43408203]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 134]
[3 133]
[4 132]
[5 131]
[6 130]
[7 129]
[8 128]
[9 127]
[10 126]
[11 125]
[15 123]
[16 122]
[17 121]
[20 30]
[21 29]
[22 28]
[34 55]
[35 54]
[36 53]
[37 52]
[38 51]
[39 50]
[40 49]
[41 48]
[60 116]
[61 115]
[62 114]
[63 113]
[64 112]
[66 110]
[67 109]
[68 108]
[69 107]
[72 104]
[73 103]
[74 102]
[78 98]
[79 97]
[80 96]
[81 95]
[82 94]
[83 93]
[84 92]
[85 91]
[86 90]
] def

init

% Start Annotations
2 134 0.0 0.2 colorpair
3 133 0.0 0.2 colorpair
4 132 0.0 0.2 colorpair
5 131 0.0 0.2 colorpair
6 130 0.16 0.2 colorpair
7 129 0.0 1 colorpair
8 128 0.0 0.6 colorpair
9 127 0.16 1 colorpair
10 126 0.0 0.2 colorpair
11 125 0.16 0.2 colorpair
15 123 0.0 1 colorpair
16 122 0.16 1 colorpair
17 121 0.16 1 colorpair
20 30 0.16 1 colorpair
21 29 0.32 1 colorpair
22 28 0.16 1 colorpair
34 55 0.0 0.2 colorpair
35 54 0.16 1 colorpair
36 53 0.16 1 colorpair
37 52 0.32 1 colorpair
38 51 0.0 1 colorpair
39 50 0.0 1 colorpair
40 49 0.16 1 colorpair
41 48 0.0 0.2 colorpair
60 116 0.0 0.2 colorpair
61 115 0.0 1 colorpair
62 114 0.16 1 colorpair
63 113 0.0 1 colorpair
66 110 0.0 0.2 colorpair
67 109 0.0 0.2 colorpair
68 108 0.0 0.2 colorpair
69 107 0.16 1 colorpair
72 104 0.0 1 colorpair
73 103 0.16 1 colorpair
74 102 0.0 1 colorpair
78 98 0.0 0.2 colorpair
79 97 0.0 0.2 colorpair
80 96 0.16 1 colorpair
81 95 0.16 1 colorpair
82 94 0.16 0.2 colorpair
83 93 0.0 1 colorpair
84 92 0.0 1 colorpair
85 91 0.32 1 colorpair
86 90 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
2 134 2 gmark
3 133 2 gmark
4 132 2 gmark
5 131 2 gmark
6 130 2 gmark
130 cmark
8 128 1 gmark
9 cmark
127 cmark
10 126 2 gmark
11 125 2 gmark
11 cmark
16 cmark
122 cmark
17 cmark
20 cmark
30 cmark
21 cmark
29 cmark
22 cmark
28 cmark
34 55 2 gmark
35 cmark
53 cmark
37 cmark
52 cmark
40 cmark
49 cmark
41 48 2 gmark
60 116 2 gmark
114 cmark
64 112 3 gmark
64 cmark
112 cmark
66 110 2 gmark
67 109 2 gmark
68 108 2 gmark
69 cmark
107 cmark
103 cmark
78 98 2 gmark
79 97 2 gmark
80 cmark
81 cmark
95 cmark
82 94 2 gmark
82 cmark
94 cmark
85 cmark
91 cmark

% End Annotations
showpage
end
%%EOF
