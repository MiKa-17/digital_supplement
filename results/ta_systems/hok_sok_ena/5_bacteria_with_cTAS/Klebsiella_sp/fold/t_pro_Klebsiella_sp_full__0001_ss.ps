%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 17:49:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______________GAGGCGAGGAAUGCCGAAAAAGUAUCUGUUGUUUGGCUUAAUAGUGAUUUGCUUCACUGUUUUAUUAUUUACCUGGAUGGUGCGUGACUCGCUGUGUGAAUUACAGAUUAGACAGGGUAAUAUUGAGCUGGUGGCAUUCUUAGCCUGUGAAAUUAAGAA_____________\
) } def
/len { sequence length } bind def

/coor [
[103.47122955 598.99871826]
[93.16358948 588.06561279]
[84.51688385 575.77673340]
[77.70715332 562.38244629]
[72.87302399 548.15527344]
[70.11291504 533.38494873]
[69.48302460 518.37213135]
[70.99617004 503.42251587]
[74.62155151 488.84042358]
[80.28535461 474.92276001]
[87.87227631 461.95281982]
[97.22785950 450.19467163]
[108.16162872 439.88769531]
[120.45098877 431.24176025]
[133.84574890 424.43286133]
[148.07321167 419.59960938]
[145.31695557 404.85501099]
[142.56071472 390.11041260]
[139.80447388 375.36581421]
[129.86029053 364.27697754]
[134.93006897 349.29003906]
[132.17382812 334.54544067]
[129.41758728 319.80087280]
[115.90734863 313.58703613]
[108.55973816 300.45401001]
[110.37546539 285.33593750]
[120.86628723 274.05548096]
[118.11004639 259.31088257]
[115.35380554 244.56626892]
[103.71585083 241.03031921]
[94.63745117 232.82723999]
[89.88792419 221.47279358]
[90.42807007 209.10455322]
[96.21654510 198.07943726]
[106.20600128 190.52462769]
[103.94664001 175.69577026]
[101.68727875 160.86689758]
[73.82442474 154.97695923]
[51.68738174 137.06098938]
[40.11855698 111.03807068]
[25.14447975 111.91955566]
[10.17040348 112.80104828]
[-1.51931989 123.78876495]
[-17.37709045 121.35757446]
[-25.23818398 107.37248993]
[-19.07224083 92.56165314]
[-3.60924625 88.28668976]
[9.28891373 97.82697296]
[24.26299095 96.94548035]
[39.23706818 96.06398773]
[39.76047516 91.12160492]
[40.68521500 86.23836517]
[42.00512695 81.44681549]
[43.71141434 76.77886963]
[45.79270935 72.26562500]
[33.38225174 63.84062576]
[20.97179604 55.41563034]
[8.56133938 46.99063492]
[-3.84911728 38.56563568]
[-16.25957298 30.14064026]
[-30.81041145 35.53070068]
[-45.74135208 31.30618095]
[-55.31114960 19.09149170]
[-55.84001923 3.58343267]
[-47.12459564 -9.25483322]
[-32.51614380 -14.48672962]
[-17.63190842 -10.10048580]
[-8.19518089 2.21729851]
[-7.83457708 17.73018265]
[4.57587957 26.15517998]
[16.98633575 34.58017731]
[29.39679146 43.00517273]
[41.80724716 51.43017197]
[54.21770477 59.85516739]
[58.57093430 55.37647629]
[63.36005783 51.36728668]
[68.53468323 47.86978149]
[74.04035950 44.92075348]
[79.81917572 42.55123901]
[85.81031799 40.78615952]
[91.95075226 39.64409256]
[98.17588043 39.13705063]
[104.42019653 39.27037048]
[110.61800385 40.04264832]
[116.70410156 41.44575882]
[122.61444855 43.46494293]
[129.85841370 30.33006477]
[137.10237122 17.19518852]
[144.23576355 3.99992776]
[139.82081604 -10.93814468]
[147.13122559 -24.28027534]
[161.39959717 -28.39719391]
[168.42189026 -41.65190887]
[175.44418335 -54.90662384]
[167.40670776 -67.91993713]
[166.96496582 -83.10880280]
[174.13751221 -96.39115906]
[186.90994263 -104.24742889]
[201.79957581 -104.65299225]
[208.82186890 -117.90770721]
[215.84414673 -131.16241455]
[222.86643982 -144.41712952]
[229.88873291 -157.67184448]
[236.91101074 -170.92657471]
[243.93330383 -184.18128967]
[250.95559692 -197.43600464]
[253.02787781 -214.26281738]
[269.77078247 -216.92964172]
[276.96826172 -201.57931519]
[264.21029663 -190.41371155]
[257.18801880 -177.15899658]
[250.16572571 -163.90428162]
[243.14344788 -150.64956665]
[236.12115479 -137.39485168]
[229.09886169 -124.14013672]
[222.07658386 -110.88542175]
[215.05429077 -97.63070679]
[223.08174133 -85.08377075]
[223.75559998 -70.10372162]
[216.79484558 -56.70916367]
[203.98001099 -48.54356003]
[188.69889832 -47.88433838]
[181.67660522 -34.62961960]
[174.65431213 -21.37490654]
[179.26219177 -7.25743341]
[172.32942200 6.28476810]
[157.49047852 11.02221584]
[157.13655090 18.42015076]
[150.23725891 24.43915367]
[142.99328613 37.57403183]
[135.74932861 50.70890808]
[145.80297852 59.87876129]
[153.56918335 71.05230713]
[158.66009521 83.67153168]
[160.82147217 97.10620880]
[159.94537354 110.68540192]
[156.07554626 123.73095703]
[149.40525818 135.59136963]
[140.26763916 145.67431641]
[129.11900330 153.47625732]
[116.51614380 158.60752869]
[118.77550507 173.43640137]
[121.03487396 188.26527405]
[137.37145996 196.09138489]
[145.68150330 212.01029968]
[142.81347656 229.57817078]
[130.09840393 241.81002808]
[132.85464478 256.55462646]
[135.61088562 271.29922485]
[149.46826172 278.02822876]
[156.62265015 291.46948242]
[154.51541138 306.36996460]
[144.16218567 317.04461670]
[146.91842651 331.78921509]
[149.67466736 346.53381348]
[159.81599426 358.67727661]
[154.54907227 372.60958862]
[157.30531311 387.35415649]
[160.06155396 402.09875488]
[162.81779480 416.84335327]
[177.83047485 416.21069336]
[192.78038025 417.72106934]
[207.36314392 421.34371948]
[221.28187561 427.00494385]
[234.25323486 434.58947754]
[246.01310730 443.94287109]
[256.32211304 454.87472534]
[264.97033691 467.16247559]
[271.78170776 480.55596924]
[276.61761475 494.78253174]
[279.37954712 509.55252075]
[280.01129150 524.56524658]
[278.50000000 539.51501465]
[274.87643433 554.09759521]
[269.21432495 568.01599121]
[261.62902832 580.98681641]
[252.27490234 592.74615479]
[241.34240723 603.05444336]
[229.05410767 611.70190430]
[215.66020203 618.51251221]
[201.43333435 623.34747314]
[186.66317749 626.10852051]
[171.65042114 626.73931885]
[156.70071411 625.22711182]
[142.11839294 621.60266113]
[128.20036316 615.93969727]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 160]
[17 159]
[18 158]
[19 157]
[21 155]
[22 154]
[23 153]
[27 149]
[28 148]
[29 147]
[35 143]
[36 142]
[37 141]
[40 50]
[41 49]
[42 48]
[55 74]
[56 73]
[57 72]
[58 71]
[59 70]
[60 69]
[86 131]
[87 130]
[88 129]
[89 127]
[92 124]
[93 123]
[94 122]
[99 117]
[100 116]
[101 115]
[102 114]
[103 113]
[104 112]
[105 111]
[106 110]
] def

init

% Start Annotations
16 160 0.0 0.2 colorpair
17 159 0.16 0.2 colorpair
18 158 0.0 0.2 colorpair
19 157 0.0 0.2 colorpair
21 155 0.0 0.2 colorpair
22 154 0.16 1 colorpair
23 153 0.16 1 colorpair
27 149 0.0 1 colorpair
28 148 0.0 0.2 colorpair
29 147 0.16 1 colorpair
35 143 0.0 1 colorpair
36 142 0.16 1 colorpair
37 141 0.16 1 colorpair
40 50 0.16 1 colorpair
41 49 0.32 1 colorpair
42 48 0.16 1 colorpair
55 74 0.16 1 colorpair
56 73 0.16 1 colorpair
57 72 0.32 1 colorpair
58 71 0.0 1 colorpair
59 70 0.0 1 colorpair
60 69 0.16 1 colorpair
86 131 0.0 1 colorpair
87 130 0.16 1 colorpair
88 129 0.16 1 colorpair
89 127 0.16 1 colorpair
92 124 0.0 1 colorpair
93 123 0.16 1 colorpair
94 122 0.0 1 colorpair
100 116 0.16 1 colorpair
101 115 0.16 1 colorpair
103 113 0.0 1 colorpair
104 112 0.0 1 colorpair
106 110 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
16 160 2 gmark
17 159 2 gmark
159 cmark
18 158 2 gmark
19 157 2 gmark
21 155 2 gmark
154 cmark
23 cmark
153 cmark
28 148 2 gmark
29 cmark
147 cmark
36 cmark
142 cmark
37 cmark
40 cmark
50 cmark
41 cmark
49 cmark
42 cmark
48 cmark
55 cmark
73 cmark
57 cmark
72 cmark
60 cmark
69 cmark
87 cmark
130 cmark
88 cmark
89 cmark
127 cmark
123 cmark
99 117 4 gmark
99 cmark
117 cmark
100 cmark
101 cmark
115 cmark
102 114 4 gmark
102 cmark
114 cmark
105 111 4 gmark
105 cmark
111 cmark

% End Annotations
showpage
end
%%EOF
