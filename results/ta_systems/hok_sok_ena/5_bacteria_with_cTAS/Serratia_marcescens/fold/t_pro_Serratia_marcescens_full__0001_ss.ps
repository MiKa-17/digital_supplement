%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 17:55:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______AAGGAGGCAAGCAUGCGCUUAAGGCAUGUGUUUCACUCGCUAACCGUUGUAUGUAUUACGGUUUUGUUAUUUAUCUGGAUGAUAAGAGACUCGCUGUGCGAGCUGAAAAUCUACCAGGAAAAUAUCACUAUCCUGAUCAGGUUGGCGUGUGAGG________\
) } def
/len { sequence length } bind def

/coor [
[49.77279663 422.89477539]
[47.19860840 437.67224121]
[41.34473419 451.48281860]
[32.51535034 463.60888672]
[21.16923332 473.42041016]
[7.89594173 480.40753174]
[-6.61483240 484.20718384]
[-21.60909653 484.62194824]
[-36.30773544 481.63031006]
[-49.94699478 475.38766479]
[-61.81816483 466.21838379]
[-71.30440521 454.59896851]
[-77.91281128 441.13311768]
[-81.30000305 426.52056885]
[-81.28997040 411.52056885]
[-77.88323975 396.91253662]
[-71.25743866 383.45648193]
[-83.60219574 391.97744751]
[-95.94695282 400.49844360]
[-108.29170990 409.01940918]
[-120.63646698 417.54037476]
[-132.98123169 426.06134033]
[-134.26844788 441.64584351]
[-145.30871582 452.72045898]
[-160.88916016 454.05603027]
[-173.65316772 445.02197266]
[-177.57395935 429.88391113]
[-170.80027771 415.78952026]
[-156.53042603 409.39379883]
[-141.50219727 413.71658325]
[-129.15744019 405.19561768]
[-116.81268311 396.67465210]
[-104.46792603 388.15365601]
[-92.12316132 379.63269043]
[-79.77840424 371.11172485]
[-76.77088928 363.77349854]
[-69.04025269 359.43551636]
[-61.58053970 346.42196655]
[-54.12082291 333.40841675]
[-46.66110611 320.39486694]
[-39.20138931 307.38131714]
[-31.74167061 294.36773682]
[-32.12486649 279.47808838]
[-18.54918861 271.35333252]
[-11.08947182 258.33978271]
[-3.62975454 245.32621765]
[3.82996249 232.31266785]
[11.28967953 219.29910278]
[18.74939728 206.28555298]
[26.20911407 193.27200317]
[25.83251953 188.47406006]
[28.49400139 183.39515686]
[34.19571304 179.92079163]
[42.13398743 167.19351196]
[50.07226562 154.46621704]
[35.08267593 155.02496338]
[25.15618896 143.77931213]
[27.57130241 128.97500610]
[40.55715942 121.46717072]
[54.59201050 126.76084900]
[59.38494492 140.97447205]
[68.47021484 129.03889465]
[77.55548096 117.10332489]
[86.64074707 105.16775513]
[88.60236359 91.32421112]
[101.42368317 85.74697876]
[110.50894928 73.81140900]
[119.59421539 61.87583160]
[112.75376892 48.27547455]
[112.49770355 33.11561203]
[118.82323456 19.40401840]
[130.42710876 9.83786964]
[144.97367859 6.27323055]
[159.56497192 9.36510468]
[168.65023804 -2.57046962]
[177.73550415 -14.50604439]
[186.82077026 -26.44161797]
[195.90603638 -38.37719345]
[198.10797119 -54.04442215]
[211.97329712 -59.48521423]
[221.05856323 -71.42078400]
[230.14382935 -83.35636139]
[239.22909546 -95.29193878]
[248.31436157 -107.22750854]
[246.38865662 -122.68485260]
[255.77244568 -134.65980530]
[270.52053833 -136.40039062]
[279.60580444 -148.33596802]
[288.69107056 -160.27154541]
[283.60229492 -176.38204956]
[289.05056763 -192.19914246]
[302.70770264 -201.57048035]
[319.09414673 -200.97566223]
[327.95599365 -213.07804871]
[330.51666260 -221.88932800]
[337.09674072 -225.32098389]
[346.18200684 -237.25656128]
[355.26727295 -249.19213867]
[364.35253906 -261.12771606]
[373.43780518 -273.06329346]
[378.22021484 -289.32873535]
[395.17391968 -289.23593140]
[399.77801514 -272.91912842]
[385.37338257 -263.97802734]
[376.28811646 -252.04243469]
[367.20285034 -240.10687256]
[358.11758423 -228.17129517]
[349.03231812 -216.23571777]
[340.05838013 -204.21621704]
[331.19653320 -192.11381531]
[336.44143677 -179.81221008]
[334.90039062 -166.41912842]
[326.87057495 -155.45532227]
[314.36898804 -149.85617065]
[300.62661743 -151.18627930]
[291.54135132 -139.25070190]
[282.45608521 -127.31513214]
[284.70565796 -112.63606262]
[275.66192627 -100.40226746]
[260.24993896 -98.14224243]
[251.16465759 -86.20667267]
[242.07939148 -74.27109528]
[232.99412537 -62.33552170]
[223.90885925 -50.39994812]
[222.35676575 -35.58642960]
[207.84161377 -29.29192734]
[198.75634766 -17.35635376]
[189.67108154 -5.42077827]
[180.58581543 6.51479626]
[171.50054932 18.45037079]
[178.36633301 31.69145966]
[178.80404663 46.66202545]
[172.67333984 60.39430237]
[161.14129639 70.14273071]
[146.46063232 73.93286896]
[131.52978516 70.96109772]
[122.44451904 82.89667511]
[113.35925293 94.83224487]
[111.39763641 108.67578888]
[98.57631683 114.25302124]
[89.49105072 126.18859100]
[80.40578461 138.12416077]
[71.32051849 150.05973816]
[62.79954910 162.40449524]
[54.86127090 175.13179016]
[46.92299652 187.85906982]
[39.22266769 200.73171997]
[31.76295280 213.74526978]
[24.30323410 226.75881958]
[16.84351730 239.77238464]
[9.38380051 252.78593445]
[1.92408383 265.79949951]
[-5.53563309 278.81304932]
[-5.68600607 294.63354492]
[-18.72811508 301.82745361]
[-26.18783188 314.84103394]
[-33.64754868 327.85458374]
[-41.10726547 340.86813354]
[-48.56698227 353.88168335]
[-56.02669907 366.89523315]
[-43.17029572 359.16784668]
[-28.89792824 354.55270386]
[-13.95120049 353.28964233]
[0.89324224 355.44427490]
[14.86406803 360.90469360]
[27.23534203 369.38711548]
[37.36423874 380.45083618]
[44.72445297 393.52090454]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 35]
[18 34]
[19 33]
[20 32]
[21 31]
[22 30]
[37 160]
[38 159]
[39 158]
[40 157]
[41 156]
[42 155]
[44 153]
[45 152]
[46 151]
[47 150]
[48 149]
[49 148]
[50 147]
[53 146]
[54 145]
[55 144]
[61 143]
[62 142]
[63 141]
[64 140]
[66 138]
[67 137]
[68 136]
[74 130]
[75 129]
[76 128]
[77 127]
[78 126]
[80 124]
[81 123]
[82 122]
[83 121]
[84 120]
[87 117]
[88 116]
[89 115]
[93 110]
[94 109]
[96 108]
[97 107]
[98 106]
[99 105]
[100 104]
] def

init

% Start Annotations
17 35 0.0 1 colorpair
18 34 0.0 1 colorpair
19 33 0.0 1 colorpair
20 32 0.0 1 colorpair
21 31 0.16 1 colorpair
22 30 0.0 1 colorpair
37 160 0.16 0.6 colorpair
38 159 0.0 1 colorpair
39 158 0.0 1 colorpair
40 157 0.0 1 colorpair
41 156 0.0 1 colorpair
42 155 0.16 1 colorpair
44 153 0.0 1 colorpair
45 152 0.0 1 colorpair
46 151 0.0 1 colorpair
47 150 0.0 1 colorpair
48 149 0.0 1 colorpair
49 148 0.16 1 colorpair
50 147 0.0 1 colorpair
53 146 0.0 1 colorpair
54 145 0.0 1 colorpair
55 144 0.0 1 colorpair
61 143 0.0 1 colorpair
62 142 0.0 1 colorpair
63 141 0.0 1 colorpair
64 140 0.0 1 colorpair
66 138 0.0 1 colorpair
67 137 0.0 1 colorpair
68 136 0.0 1 colorpair
74 130 0.0 1 colorpair
75 129 0.0 1 colorpair
76 128 0.0 1 colorpair
77 127 0.0 1 colorpair
78 126 0.0 1 colorpair
80 124 0.16 1 colorpair
81 123 0.0 1 colorpair
82 122 0.0 1 colorpair
83 121 0.0 1 colorpair
84 120 0.0 1 colorpair
87 117 0.0 1 colorpair
88 116 0.0 1 colorpair
89 115 0.0 1 colorpair
93 110 0.0 1 colorpair
94 109 0.0 1 colorpair
96 108 0.16 1 colorpair
97 107 0.0 1 colorpair
98 106 0.0 1 colorpair
99 105 0.0 1 colorpair
100 104 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
31 cmark
37 160 1 gmark
37 cmark
42 cmark
49 cmark
124 cmark
96 cmark
108 cmark
100 cmark

% End Annotations
showpage
end
%%EOF
