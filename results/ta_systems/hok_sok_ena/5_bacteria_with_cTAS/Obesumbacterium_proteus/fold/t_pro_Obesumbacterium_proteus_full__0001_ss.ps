%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 17:50:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______________CCAAAAAAUGCCACAAAAAACUGUUAUUUGGUGUCUAUUGAUCGUCUGUAUAACACUUCUGGCGUUCAUUGGGAUCACACAUGGAUAUCUGUGUGAAAUACACAUCAAAAACGGUAAUAAAGAGGUUGCCGCCGUUUUAGCCUACGCAUCUAAA___\
) } def
/len { sequence length } bind def

/coor [
[119.20526123 308.46502686]
[108.13648987 318.66152954]
[95.29101562 326.50244141]
[81.16256714 331.68640137]
[66.29420471 334.01409912]
[51.25744247 333.39608765]
[36.63024139 329.85614014]
[22.97483635 323.53030396]
[10.81610394 314.66174316]
[0.62139356 303.59133911]
[-7.21743727 290.74456787]
[-12.39908504 276.61529541]
[-14.72438049 261.74655151]
[-14.10394669 246.70989990]
[-10.56163025 232.08326721]
[-4.23358822 218.42887878]
[4.63694572 206.27159119]
[15.70901108 196.07867432]
[28.55702972 188.24191284]
[42.68715668 183.06256104]
[57.55626297 180.73966980]
[72.59282684 181.36253357]
[76.12114716 166.78340149]
[79.64945984 152.20428467]
[83.17777252 137.62515259]
[73.95043945 131.93836975]
[66.52478027 124.04264069]
[61.41436005 114.48404694]
[58.97264481 103.92369843]
[59.36850739 93.09196472]
[62.57456589 82.73801422]
[68.36907959 73.57795715]
[76.35128784 66.24533081]
[85.96910858 61.24728012]
[83.51441956 46.44949341]
[81.05972290 31.65170670]
[78.60502625 16.85391998]
[76.15032959 2.05613446]
[73.69564056 -12.74165154]
[69.18888092 -20.73028946]
[71.33382416 -27.83191490]
[69.14980316 -42.67206573]
[66.96578217 -57.51221466]
[64.78176880 -72.35236359]
[62.59775162 -87.19252014]
[60.41373444 -102.03266907]
[58.22971725 -116.87281799]
[56.04570007 -131.71296692]
[19.97979355 -151.04138184]
[10.59687901 -162.74441528]
[1.21396315 -174.44743347]
[-13.45508385 -180.37446594]
[-15.37968826 -195.14419556]
[-24.76260376 -206.84722900]
[-34.14551926 -218.55026245]
[-48.81456757 -224.47727966]
[-50.73917007 -239.24702454]
[-60.12208557 -250.95005798]
[-69.50500488 -262.65307617]
[-78.88791656 -274.35610962]
[-93.47391510 -270.07626343]
[-108.58691406 -271.70898438]
[-121.92227936 -279.00531006]
[-131.44648743 -290.85260010]
[-135.70713806 -305.44421387]
[-134.05453491 -320.55505371]
[-126.74067688 -333.88079834]
[-114.88087463 -343.38940430]
[-100.28366852 -347.63085938]
[-85.17501831 -345.95840454]
[-71.85888672 -338.62701416]
[-62.36589432 -326.75469971]
[-58.14364243 -312.15194702]
[-59.83599854 -297.04550171]
[-67.18489075 -283.73901367]
[-57.80197144 -272.03601074]
[-48.41905594 -260.33297729]
[-39.03614044 -248.62994385]
[-25.03822327 -243.53999329]
[-22.44248962 -227.93318176]
[-13.05957413 -216.23014832]
[-3.67665887 -204.52711487]
[10.32125950 -199.43716431]
[12.91699219 -183.83035278]
[22.29990768 -172.12731934]
[31.68282318 -160.42430115]
[39.15156937 -161.10827637]
[54.08906174 -162.47625732]
[61.55780411 -163.16024780]
[68.65894318 -176.37289429]
[75.76007843 -189.58552551]
[82.86121368 -202.79817200]
[89.96234894 -216.01081848]
[97.06348419 -229.22344971]
[104.16461945 -242.43609619]
[97.30367279 -256.35397339]
[99.96694183 -271.64077759]
[111.13034821 -282.41842651]
[126.50132751 -284.54272461]
[140.16943359 -277.19680786]
[146.87898254 -263.20532227]
[144.05004883 -247.94830322]
[132.77038574 -237.29237366]
[117.37725830 -235.33496094]
[110.27612305 -222.12231445]
[103.17498779 -208.90968323]
[96.07385254 -195.69703674]
[88.97271729 -182.48439026]
[81.87158203 -169.27175903]
[74.77044678 -156.05911255]
[88.95114136 -160.94868469]
[102.12560272 -153.77694702]
[105.71652985 -139.21311951]
[97.38603210 -126.73902893]
[82.55773163 -124.47599792]
[70.88584900 -133.89698792]
[73.06987000 -119.05683899]
[75.25388336 -104.21668243]
[77.43790436 -89.37653351]
[79.62191772 -74.53638458]
[81.80593872 -59.69623184]
[83.98995209 -44.85608292]
[86.17397308 -30.01593208]
[88.49342346 -15.19634628]
[90.94812012 -0.39856008]
[93.40281677 14.39922619]
[95.85750580 29.19701195]
[98.31220245 43.99479675]
[100.76689911 58.79258347]
[124.59304047 66.92702484]
[139.24218750 87.40278625]
[139.24795532 112.57924652]
[152.46058655 119.68038177]
[165.67323303 126.78151703]
[178.88587952 133.88265991]
[192.09851074 140.98379517]
[207.91720581 140.70156860]
[215.46502686 153.54211426]
[228.67765808 160.64324951]
[241.89030457 167.74438477]
[258.25646973 166.70468140]
[267.11343384 180.50636292]
[259.34991455 194.95143127]
[242.95237732 195.18005371]
[234.78916931 180.95703125]
[221.57652283 173.85589600]
[208.36389160 166.75476074]
[193.49024963 167.54490662]
[184.99737549 154.19642639]
[171.78474426 147.09529114]
[158.57209778 139.99415588]
[145.35945129 132.89302063]
[132.14682007 125.79188538]
[128.36549377 129.90046692]
[124.06350708 133.46022034]
[119.31983948 136.40580750]
[114.22154236 138.68316650]
[108.86221313 140.25047302]
[103.34020996 141.07897949]
[97.75690460 141.15347290]
[94.22858429 155.73258972]
[90.70027161 170.31172180]
[87.17195892 184.89085388]
[100.82940674 191.21226501]
[112.99101257 200.07688904]
[123.18930817 211.14401245]
[131.03228760 223.98822021]
[136.21852112 238.11582947]
[138.54862976 252.98381042]
[137.93305969 268.02066040]
[134.39547729 282.64843750]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 163]
[23 162]
[24 161]
[25 160]
[34 129]
[35 128]
[36 127]
[37 126]
[38 125]
[39 124]
[41 123]
[42 122]
[43 121]
[44 120]
[45 119]
[46 118]
[47 117]
[48 116]
[49 86]
[50 85]
[51 84]
[53 82]
[54 81]
[55 80]
[57 78]
[58 77]
[59 76]
[60 75]
[89 110]
[90 109]
[91 108]
[92 107]
[93 106]
[94 105]
[95 104]
[132 153]
[133 152]
[134 151]
[135 150]
[136 149]
[138 147]
[139 146]
[140 145]
] def

init

% Start Annotations
22 163 0.0 1 colorpair
23 162 0.0 1 colorpair
24 161 0.0 1 colorpair
25 160 0.0 1 colorpair
34 129 0.0 1 colorpair
35 128 0.0 1 colorpair
36 127 0.0 1 colorpair
37 126 0.0 1 colorpair
38 125 0.0 1 colorpair
39 124 0.0 1 colorpair
41 123 0.0 1 colorpair
42 122 0.0 1 colorpair
43 121 0.0 1 colorpair
44 120 0.0 1 colorpair
45 119 0.0 1 colorpair
46 118 0.0 1 colorpair
47 117 0.0 1 colorpair
48 116 0.0 1 colorpair
49 86 0.0 1 colorpair
50 85 0.0 1 colorpair
51 84 0.0 1 colorpair
53 82 0.0 1 colorpair
54 81 0.0 1 colorpair
55 80 0.0 1 colorpair
57 78 0.0 1 colorpair
58 77 0.0 1 colorpair
59 76 0.0 1 colorpair
60 75 0.0 1 colorpair
89 110 0.0 1 colorpair
90 109 0.0 1 colorpair
91 108 0.0 1 colorpair
92 107 0.0 1 colorpair
93 106 0.0 1 colorpair
94 105 0.0 1 colorpair
95 104 0.0 1 colorpair
132 153 0.0 1 colorpair
133 152 0.0 1 colorpair
134 151 0.0 1 colorpair
135 150 0.0 1 colorpair
136 149 0.0 1 colorpair
138 147 0.0 1 colorpair
139 146 0.0 1 colorpair
140 145 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
