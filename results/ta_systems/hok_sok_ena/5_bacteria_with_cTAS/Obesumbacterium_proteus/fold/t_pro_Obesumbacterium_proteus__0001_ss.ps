%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 17:50:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAAAAGGAAAACCAAAAAAUGCCACAAAAAACUGUUAUUUGGUGUCUAUUGAUCGUCUGUAUAACACUUCUGGCGUUCAUUGGGAUCACACAUGGAUAUCUGUGUGAAAUACACAUCAAAAACGGUAAUAAAGAGGUUGCCGCCGUUUUAGCCUACGCAUCUAAACGG\
) } def
/len { sequence length } bind def

/coor [
[105.46661377 160.04380798]
[101.42127991 174.48802185]
[92.56110382 186.59162903]
[80.01471710 194.81283569]
[65.38031769 198.10438538]
[50.52207947 196.04702759]
[37.33268738 188.90278625]
[27.49224854 177.58175659]
[22.25426292 163.52603149]
[22.28596306 148.52606201]
[27.58331108 134.49259949]
[37.47151184 123.21326447]
[50.69098282 116.12484741]
[65.55778503 114.13030243]
[80.17595673 117.48274994]
[65.73542023 113.42433167]
[51.29487610 109.36590576]
[36.85433578 105.30748749]
[23.18880081 112.78350830]
[8.60185146 108.46198273]
[1.55882287 95.38791656]
[-12.88171768 91.32949066]
[-27.32225990 87.27107239]
[-41.76279831 83.21265411]
[-56.20334244 79.15422821]
[-70.64388275 75.09580994]
[-85.08441925 71.03739166]
[-94.28731537 76.92193604]
[-104.98934937 76.75259399]
[-113.63820648 70.82826233]
[-117.49680328 61.31791687]
[-131.77947998 56.73480606]
[-141.19116211 62.27931976]
[-151.87986755 61.71923065]
[-160.30657959 55.48297501]
[-163.81526184 45.83805084]
[-177.92103577 40.73636627]
[-192.02680969 35.63467789]
[-206.13258362 30.53299332]
[-220.23835754 25.43130875]
[-234.34413147 20.32962227]
[-249.95315552 22.91205215]
[-259.29013062 11.30731010]
[-273.39590454 6.20562458]
[-287.50167847 1.10393906]
[-301.65344238 -3.86871409]
[-315.85003662 -8.71191978]
[-330.09027100 -13.42527485]
[-344.37295532 -18.00838661]
[-360.27804565 -14.01327896]
[-371.49456787 -25.97661400]
[-366.48394775 -41.59153748]
[-350.40069580 -44.79475403]
[-339.78985596 -32.29107285]
[-325.50717163 -27.70796013]
[-318.15026855 -28.66182899]
[-311.00683594 -22.90851593]
[-296.81024170 -18.06531143]
[-289.43713379 -18.88465500]
[-282.39999390 -13.00183296]
[-268.29421997 -7.90014744]
[-254.18844604 -2.79846168]
[-239.58836365 -5.74579859]
[-229.24244690 6.22385073]
[-215.13667297 11.32553673]
[-201.03089905 16.42722130]
[-186.92512512 21.52890778]
[-172.81935120 26.63059425]
[-158.71357727 31.73227882]
[-140.00796509 26.91984749]
[-127.19637299 42.45212173]
[-112.91368866 47.03523254]
[-94.39631653 41.54284286]
[-81.02600098 56.59684753]
[-66.58546448 60.65526962]
[-52.14492035 64.71369171]
[-37.70438004 68.77210999]
[-23.26383781 72.83052826]
[-8.82329750 76.88895416]
[5.61724329 80.94737244]
[18.43993568 73.45643616]
[33.14250946 77.36653900]
[40.91275406 90.86695099]
[55.35329437 94.92536926]
[69.79383850 98.98378754]
[84.23437500 103.04220581]
[78.75035095 91.51250458]
[82.73490906 75.82454681]
[98.19096375 63.51179123]
[105.29209900 50.29914856]
[112.39323425 37.08650970]
[119.49436951 23.87386894]
[126.59550476 10.66122913]
[133.69664001 -2.55141187]
[140.79777527 -15.76405239]
[133.93682861 -29.68191910]
[136.60009766 -44.96873093]
[147.76350403 -55.74639893]
[163.13447571 -57.87068558]
[176.80258179 -50.52476120]
[183.51214600 -36.53328323]
[180.68319702 -21.27626228]
[169.40353394 -10.62033272]
[154.01042175 -8.66291714]
[146.90928650 4.54972410]
[139.80815125 17.76236534]
[132.70700073 30.97500420]
[125.60587311 44.18764496]
[118.50473785 57.40028763]
[111.40360260 70.61293030]
[114.46246338 77.46080017]
[127.02877808 69.27008057]
[139.59509277 61.07936478]
[152.16139221 52.88864517]
[159.77836609 39.96649933]
[173.51855469 33.94926071]
[188.18074036 37.11469650]
[198.21470642 48.26456451]
[199.82218933 63.17818451]
[192.39466858 76.21014404]
[178.74377441 82.42732239]
[164.03805542 79.47688293]
[149.55210876 83.37010193]
[135.06614685 87.26332092]
[120.58020020 91.15653992]
[123.63906097 98.00440979]
[138.21818542 101.53273010]
[152.79731750 105.06104279]
[167.37644958 108.58935547]
[181.95558167 112.11767578]
[196.53471375 115.64598846]
[211.11383057 119.17430115]
[224.47200012 110.72830963]
[239.87130737 114.28319550]
[248.17559814 127.72991943]
[244.45809937 143.09077454]
[230.92433167 151.25242615]
[215.60363770 147.37272644]
[207.58552551 133.75343323]
[193.00639343 130.22511292]
[178.42726135 126.69680023]
[163.84812927 123.16848755]
[149.26901245 119.64016724]
[134.68988037 116.11185455]
[120.11074829 112.58354187]
[110.94314575 124.45598602]
[118.04428101 137.66862488]
[125.14541626 150.88127136]
[132.24655151 164.09390259]
[139.34768677 177.30654907]
[146.44882202 190.51919556]
[164.76383972 195.25045776]
[173.68583679 211.56848145]
[167.98246765 228.93540955]
[175.56141663 241.87989807]
[190.07307434 249.51820374]
[190.44348145 265.91314697]
[176.29159546 274.19903564]
[162.17565918 265.85205078]
[162.61694336 249.45884705]
[155.03799438 236.51435852]
[143.59410095 236.08219910]
[133.68621826 230.10322571]
[127.84986877 219.97180176]
[127.64398193 208.16123962]
[133.23617554 197.62033081]
[126.13504791 184.40768433]
[119.03390503 171.19503784]
[111.93276978 157.98240662]
[104.83163452 144.76976013]
[97.73049927 131.55712891]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 86]
[16 85]
[17 84]
[18 83]
[21 80]
[22 79]
[23 78]
[24 77]
[25 76]
[26 75]
[27 74]
[31 72]
[32 71]
[36 69]
[37 68]
[38 67]
[39 66]
[40 65]
[41 64]
[43 62]
[44 61]
[45 60]
[46 58]
[47 57]
[48 55]
[49 54]
[89 110]
[90 109]
[91 108]
[92 107]
[93 106]
[94 105]
[95 104]
[126 145]
[127 144]
[128 143]
[129 142]
[130 141]
[131 140]
[132 139]
[146 171]
[147 170]
[148 169]
[149 168]
[150 167]
[151 166]
[154 161]
[155 160]
] def

init

% Start Annotations
15 86 0.0 1 colorpair
16 85 0.0 1 colorpair
17 84 0.0 1 colorpair
18 83 0.0 1 colorpair
21 80 0.0 1 colorpair
22 79 0.0 1 colorpair
23 78 0.0 1 colorpair
24 77 0.0 1 colorpair
25 76 0.0 1 colorpair
26 75 0.0 1 colorpair
27 74 0.0 1 colorpair
31 72 0.0 1 colorpair
32 71 0.0 1 colorpair
36 69 0.0 1 colorpair
37 68 0.0 1 colorpair
38 67 0.0 1 colorpair
39 66 0.0 1 colorpair
40 65 0.0 1 colorpair
41 64 0.0 1 colorpair
43 62 0.0 1 colorpair
44 61 0.0 1 colorpair
45 60 0.0 1 colorpair
46 58 0.0 1 colorpair
47 57 0.0 1 colorpair
48 55 0.0 1 colorpair
49 54 0.0 1 colorpair
89 110 0.0 1 colorpair
90 109 0.0 1 colorpair
91 108 0.0 1 colorpair
92 107 0.0 1 colorpair
93 106 0.0 1 colorpair
94 105 0.0 1 colorpair
95 104 0.0 1 colorpair
126 145 0.0 1 colorpair
127 144 0.0 1 colorpair
128 143 0.0 1 colorpair
129 142 0.0 1 colorpair
130 141 0.0 1 colorpair
131 140 0.0 1 colorpair
132 139 0.0 1 colorpair
146 171 0.0 1 colorpair
147 170 0.0 1 colorpair
148 169 0.0 1 colorpair
149 168 0.0 1 colorpair
150 167 0.0 1 colorpair
151 166 0.0 1 colorpair
154 161 0.0 1 colorpair
155 160 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
