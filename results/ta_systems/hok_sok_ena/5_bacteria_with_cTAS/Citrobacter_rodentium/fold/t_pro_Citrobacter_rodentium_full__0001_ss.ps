%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 15:14:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______________GAGGCUGGCGAUGCCGCAAAAAUGUAUAUUAUGCAGUUUAAUAGUGAUAUGUCUCACUAUAUUAUUAUUUACCUGGAUGGUUCGUGAUUCAUUAUGCGAAUUACAUAUCAGACAGGGCAAUAAUGAACUGGCGGCAUUUUUAGCCUGUGAAGUGAAA___\
) } def
/len { sequence length } bind def

/coor [
[85.16500092 507.10153198]
[70.45986176 503.90075684]
[56.66184235 497.89236450]
[44.30130005 489.30728149]
[33.85334015 478.47555542]
[25.71956253 465.81350708]
[20.21260071 451.80780029]
[17.54412842 436.99679565]
[17.81671715 421.94982910]
[21.01988602 407.24517822]
[27.03051758 393.44815063]
[35.61757660 381.08898926]
[46.45100021 370.64279175]
[59.11437988 362.51104736]
[73.12097168 357.00637817]
[87.93239594 354.34030151]
[88.20166016 339.34271240]
[88.47092438 324.34512329]
[88.74018860 309.34753418]
[89.00945282 294.34994507]
[89.27871704 279.35238647]
[89.54798126 264.35479736]
[82.04039764 251.49067688]
[90.02417755 237.83161926]
[90.29344177 222.83404541]
[90.56270599 207.83645630]
[90.83197021 192.83886719]
[91.10123444 177.84129333]
[91.37050629 162.84370422]
[91.63977051 147.84613037]
[91.90903473 132.84854126]
[76.18595123 124.02876282]
[67.22540283 108.38548279]
[52.23084259 108.78935242]
[37.23628235 109.19322968]
[23.64943695 117.29928589]
[10.71845531 109.90747070]
[-4.27610683 110.31134033]
[-19.27066803 110.71520996]
[-34.26523209 111.11907959]
[-49.25979233 111.52294922]
[-64.93038940 117.99356079]
[-75.48617554 104.72662354]
[-65.65985107 90.91070557]
[-49.66366196 96.52838898]
[-34.66910172 96.12451935]
[-19.67453957 95.72064972]
[-4.67997694 95.31678009]
[10.31458473 94.91291046]
[22.82891846 86.83573151]
[36.83241272 94.19866180]
[51.82697296 93.79479218]
[66.82153320 93.39092255]
[68.32687378 88.11287689]
[70.66587830 83.14771271]
[59.63962173 72.97806549]
[48.61336899 62.80841827]
[37.58711243 52.63877106]
[26.56085777 42.46912766]
[15.53460407 32.29948044]
[4.50834894 22.12983322]
[-11.27094269 23.01837349]
[-23.00105286 12.42686462]
[-23.72271538 -3.36093950]
[-13.00778008 -14.97841454]
[2.78677130 -15.53311729]
[14.29031181 -4.69595480]
[14.67799473 11.10357857]
[25.70425034 21.27322388]
[36.73050308 31.44287109]
[47.75675964 41.61251831]
[58.78301620 51.78216171]
[69.80927277 61.95180893]
[80.83552551 72.12145233]
[98.48220825 66.20375061]
[116.58831024 70.51579285]
[126.65857697 59.39870453]
[136.72885132 48.28161240]
[146.79911804 37.16452026]
[156.86938477 26.04742813]
[166.93963623 14.93033600]
[177.00990295 3.81324387]
[187.08016968 -7.30384827]
[186.48002625 -22.86911583]
[196.85107422 -33.99997330]
[211.69387817 -34.47620010]
[221.76414490 -45.59329224]
[231.83441162 -56.71038437]
[241.90467834 -67.82747650]
[241.30453491 -83.39274597]
[251.67558289 -94.52359772]
[266.51837158 -94.99982452]
[276.58865356 -106.11692047]
[286.65890503 -117.23400879]
[296.72918701 -128.35110474]
[296.12902832 -143.91636658]
[306.50009155 -155.04722595]
[321.34289551 -155.52345276]
[331.41314697 -166.64054871]
[341.48342896 -177.75764465]
[351.55368042 -188.87472534]
[361.62396240 -199.99182129]
[371.69421387 -211.10891724]
[381.76449585 -222.22601318]
[379.45538330 -237.69216919]
[387.67202759 -250.99710083]
[402.53469849 -255.85861206]
[417.02575684 -249.98126221]
[424.30294800 -236.14015198]
[420.93020630 -220.87062073]
[408.50003052 -211.38247681]
[392.88159180 -212.15574646]
[382.81130981 -201.03865051]
[372.74105835 -189.92155457]
[362.67077637 -178.80445862]
[352.60052490 -167.68737793]
[342.53024292 -156.57028198]
[332.45999146 -145.45318604]
[333.44921875 -130.63572693]
[323.39489746 -119.21796417]
[307.84628296 -118.28083801]
[297.77600098 -107.16374207]
[287.70574951 -96.04665375]
[277.63546753 -84.92955780]
[278.62469482 -70.11210632]
[268.57040405 -58.69433594]
[253.02177429 -57.75720978]
[242.95150757 -46.64011765]
[232.88124084 -35.52302551]
[222.81097412 -24.40593338]
[223.80020142 -9.58847713]
[213.74588013 1.82929027]
[198.19726562 2.76641822]
[188.12699890 13.88351059]
[178.05673218 25.00060272]
[167.98646545 36.11769485]
[157.91619873 47.23478699]
[147.84593201 58.35187912]
[137.77566528 69.46897125]
[127.70540619 80.58605957]
[133.04467773 92.75158691]
[133.28767395 106.03499603]
[128.39691162 118.38765717]
[119.12665558 127.90450287]
[106.90661621 133.11779785]
[106.63735199 148.11538696]
[106.36808777 163.11297607]
[106.09882355 178.11054993]
[105.82955933 193.10813904]
[105.56028748 208.10571289]
[105.29102325 223.10330200]
[105.02175903 238.10089111]
[112.51008606 252.03773499]
[104.54557037 264.62405396]
[104.27629852 279.62164307]
[104.00703430 294.61923218]
[103.73777008 309.61679077]
[103.46850586 324.61437988]
[103.19924164 339.61196899]
[102.92997742 354.60955811]
[117.63615417 357.80557251]
[131.43612671 363.80950928]
[143.79943848 372.39056396]
[154.25090027 383.21893311]
[162.38877869 395.87835693]
[167.90028381 409.88226318]
[170.57354736 424.69238281]
[170.30583191 439.73947144]
[167.10742188 454.44512939]
[161.10125732 468.24411011]
[152.51818848 480.60604858]
[141.68815613 491.05575562]
[129.02740479 499.19158936]
[115.02259827 504.70083618]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 160]
[17 159]
[18 158]
[19 157]
[20 156]
[21 155]
[22 154]
[24 152]
[25 151]
[26 150]
[27 149]
[28 148]
[29 147]
[30 146]
[31 145]
[33 53]
[34 52]
[35 51]
[37 49]
[38 48]
[39 47]
[40 46]
[41 45]
[55 74]
[56 73]
[57 72]
[58 71]
[59 70]
[60 69]
[61 68]
[76 140]
[77 139]
[78 138]
[79 137]
[80 136]
[81 135]
[82 134]
[83 133]
[86 130]
[87 129]
[88 128]
[89 127]
[92 124]
[93 123]
[94 122]
[95 121]
[98 118]
[99 117]
[100 116]
[101 115]
[102 114]
[103 113]
[104 112]
] def

init

% Start Annotations
16 160 0.0 1 colorpair
17 159 0.0 1 colorpair
18 158 0.0 1 colorpair
19 157 0.0 1 colorpair
20 156 0.0 1 colorpair
21 155 0.0 1 colorpair
22 154 0.0 1 colorpair
24 152 0.0 1 colorpair
25 151 0.0 1 colorpair
26 150 0.0 1 colorpair
27 149 0.0 1 colorpair
28 148 0.0 1 colorpair
29 147 0.0 1 colorpair
30 146 0.0 1 colorpair
31 145 0.0 1 colorpair
33 53 0.0 1 colorpair
34 52 0.0 1 colorpair
35 51 0.0 1 colorpair
37 49 0.0 1 colorpair
38 48 0.0 1 colorpair
39 47 0.0 1 colorpair
40 46 0.0 1 colorpair
41 45 0.0 1 colorpair
55 74 0.0 1 colorpair
56 73 0.0 1 colorpair
57 72 0.0 1 colorpair
58 71 0.0 1 colorpair
59 70 0.0 1 colorpair
60 69 0.0 1 colorpair
61 68 0.0 1 colorpair
76 140 0.0 1 colorpair
77 139 0.0 1 colorpair
78 138 0.0 1 colorpair
79 137 0.0 1 colorpair
80 136 0.0 1 colorpair
81 135 0.0 1 colorpair
82 134 0.0 1 colorpair
83 133 0.0 1 colorpair
86 130 0.0 1 colorpair
87 129 0.0 1 colorpair
88 128 0.0 1 colorpair
89 127 0.0 1 colorpair
92 124 0.0 1 colorpair
93 123 0.0 1 colorpair
94 122 0.0 1 colorpair
95 121 0.0 1 colorpair
98 118 0.0 1 colorpair
99 117 0.0 1 colorpair
100 116 0.0 1 colorpair
101 115 0.0 1 colorpair
102 114 0.0 1 colorpair
103 113 0.0 1 colorpair
104 112 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
