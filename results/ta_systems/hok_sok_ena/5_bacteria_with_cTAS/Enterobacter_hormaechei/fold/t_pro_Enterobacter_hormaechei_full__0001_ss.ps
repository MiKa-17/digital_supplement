%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 15:16:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__________AAGGAGGCUAUGACGCCAAAAAAAACUCCGCUGGGAGUUUUGUUUAUUAUUUGUAUGACGAUAGUGAUCUUCACCUUGAUGACGCGCGACACGCUGUGUGAGCUGCACUUAAGAAAUGAAAAACAAGAGGUGGCGGCGAAGUUGGCUUGUGACGCAAA____\
) } def
/len { sequence length } bind def

/coor [
[-37.05664444 274.44198608]
[-43.85118484 277.90420532]
[-50.78813934 281.07135010]
[-57.85470200 283.93750000]
[-65.03781891 286.49740601]
[-72.32422638 288.74633789]
[-79.70046997 290.68014526]
[-87.15292358 292.29528809]
[-94.66783142 293.58874512]
[-102.23130798 294.55816650]
[-109.82939911 295.20178223]
[-117.44805908 295.51834106]
[-125.07323456 295.50732422]
[-132.69084167 295.16873169]
[-140.28681946 294.50320435]
[-147.84712219 293.51196289]
[-155.35781860 292.19683838]
[-162.80502319 290.56030273]
[-170.17498779 288.60534668]
[-177.45411682 286.33557129]
[-184.62895203 283.75521851]
[-191.68626404 280.86904907]
[-198.61300659 277.68234253]
[-205.39640808 274.20104980]
[-212.02394104 270.43157959]
[-218.48336792 266.38088989]
[-224.76277161 262.05645752]
[-230.85054016 257.46630859]
[-236.73544312 252.61888123]
[-242.40663147 247.52314758]
[-247.85363770 242.18852234]
[-253.06639099 236.62486267]
[-258.03527832 230.84243774]
[-262.75109863 224.85192871]
[-267.20520020 218.66439819]
[-271.38934326 212.29127502]
[-275.29580688 205.74432373]
[-278.91735840 199.03565979]
[-282.24734497 192.17764282]
[-285.27960205 185.18295288]
[-288.00854492 178.06449890]
[-290.42910767 170.83544922]
[-292.53689575 163.50912476]
[-294.32797241 156.09907532]
[-295.79904175 148.61897278]
[-296.94738770 141.08262634]
[-297.77090454 133.50396729]
[-298.26806641 125.89698792]
[-298.43798828 118.27572632]
[-298.28030396 110.65425873]
[-297.79537964 103.04665375]
[-296.98406982 95.46695709]
[-295.84786987 87.92917633]
[-294.38891602 80.44721985]
[-292.60989380 73.03489685]
[-290.51409912 65.70590973]
[-288.10537720 58.47377396]
[-285.38821411 51.35184479]
[-282.36764526 44.35327911]
[-279.04919434 37.49098969]
[-275.43902588 30.77764702]
[-271.54382324 24.22564507]
[-267.37075806 17.84708214]
[-262.92755127 11.65373135]
[-258.22241211 5.65702581]
[-253.26403809 -0.13196458]
[-248.06156921 -5.70255423]
[-242.62463379 -11.04445934]
[-236.96327209 -16.14782143]
[-231.08793640 -21.00321960]
[-225.00947571 -25.60169220]
[-218.73912048 -29.93475342]
[-212.28843689 -33.99440384]
[-205.66937256 -37.77315521]
[-198.89411926 -41.26403046]
[-191.97520447 -44.46059036]
[-184.92541504 -47.35693359]
[-177.75773621 -49.94772339]
[-170.48544312 -52.22817612]
[-163.12194824 -54.19408417]
[-155.68084717 -55.84182739]
[-148.17587280 -57.16836166]
[-140.62091064 -58.17124557]
[-133.02987671 -58.84863281]
[-125.41681671 -59.19927597]
[-117.79578400 -59.22253036]
[-110.18083191 -58.91836548]
[-102.58604431 -58.28733826]
[-95.02542877 -57.33062744]
[-87.51294708 -56.04999542]
[-80.06247711 -54.44781876]
[-72.68777466 -52.52705765]
[-65.40244293 -50.29126740]
[-58.21994781 -47.74457169]
[-51.15354156 -44.89168930]
[-44.21627045 -41.73788071]
[-37.15282822 -54.97071075]
[-40.42409515 -70.67671204]
[-30.07374763 -82.93435669]
[-14.04168415 -82.34062958]
[-4.62633324 -69.35099030]
[-9.05034637 -53.92997360]
[-23.91999817 -47.90726852]
[-30.98344231 -34.67443848]
[10.74606323 -0.65192968]
[40.35366058 44.33696365]
[55.10306931 96.15195465]
[70.05301666 94.92755127]
[85.00296021 93.70314789]
[93.07904816 85.28055573]
[104.71717834 84.43370056]
[113.92749786 91.59842682]
[128.89720154 90.64569092]
[143.86691284 89.69296265]
[158.82736206 88.60434723]
[173.77731323 87.37994385]
[176.46929932 72.53354645]
[182.91296387 58.89017868]
[192.66897583 47.38006592]
[205.07215881 38.78799438]
[219.27682495 33.69978333]
[234.31448364 32.46234894]
[249.15983582 35.16007233]
[262.80072021 41.60900879]
[274.30706787 51.36946487]
[282.89434814 63.77595520]
[287.97708130 77.98258209]
[289.20870972 93.02072144]
[286.50524902 107.86503601]
[280.05102539 121.50342560]
[270.28613281 133.00599670]
[257.87634277 141.58848572]
[243.66775513 146.66572571]
[228.62913513 147.89155579]
[213.78587341 145.18237305]
[200.14996338 138.72290039]
[188.65116882 128.95355225]
[180.07347107 116.54044342]
[175.00170898 102.32989502]
[160.05177307 103.55429077]
[153.61889648 107.24740601]
[144.81965637 104.66267395]
[129.84994507 105.61540222]
[114.88022614 106.56813812]
[101.18044281 116.22245789]
[86.22736359 108.65309143]
[71.27742004 109.87749481]
[56.32747269 111.10189819]
[56.46317673 118.72795868]
[56.27113724 126.35274506]
[55.75171280 133.96218872]
[54.90586853 141.54225159]
[53.73516464 149.07890320]
[52.24177551 156.55825806]
[50.42846298 163.96649170]
[48.29857254 171.28993225]
[45.85605240 178.51506042]
[43.10540771 185.62852478]
[40.05172348 192.61720276]
[36.70064926 199.46818542]
[33.05836868 206.16883850]
[29.13161850 212.70678711]
[24.92764854 219.06994629]
[20.45422745 225.24658203]
[15.71961880 231.22528076]
[10.73256874 236.99502563]
[5.50228930 242.54515076]
[0.03844188 247.86541748]
[-5.64888144 252.94601440]
[-11.54917622 257.77755737]
[-17.65154457 262.35110474]
[-23.94471550 266.65823364]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[96 104]
[97 103]
[107 148]
[108 147]
[109 146]
[112 144]
[113 143]
[114 142]
[115 140]
[116 139]
] def

init

% Start Annotations
96 104 0.16 0.6 colorpair
107 148 0.16 0.2 colorpair
108 147 0.0 0.2 colorpair
109 146 0.16 0.2 colorpair
112 144 0.0 0.2 colorpair
114 142 0.0 0.2 colorpair
115 140 0.32 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
96 104 1 gmark
104 cmark
97 103 5 gmark
97 cmark
107 148 2 gmark
148 cmark
108 147 2 gmark
109 146 2 gmark
109 cmark
112 144 2 gmark
113 143 4 gmark
113 cmark
114 142 2 gmark
115 140 2 gmark
115 cmark
140 cmark
116 139 4 gmark
116 cmark

% End Annotations
showpage
end
%%EOF
