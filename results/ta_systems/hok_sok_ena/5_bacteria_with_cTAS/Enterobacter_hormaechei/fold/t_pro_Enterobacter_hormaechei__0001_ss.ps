%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 15:16:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__A__AG_AA_A_GCAUG_____ACGCCAUUAAAAACUACGUUAGGCAUCGUCUUUAUUAUUUGCCUGACGAUAGUGAUCUUUACCUUUAUUACUCGCGAUAAGCUAUGUGAGUUUUCAAUAAAGAGUGAACAUCAGGAGGUGGCGGCGAAAUUAGCCUGUAACGCA______\
) } def
/len { sequence length } bind def

/coor [
[-43.50595093 421.19903564]
[-55.50559616 412.19857788]
[-66.09272766 401.57254028]
[-75.04913330 389.53994751]
[-82.19020844 376.34884644]
[-87.36875153 362.27111816]
[-90.47803497 347.59692383]
[-91.45396423 332.62869263]
[-90.27642822 317.67498779]
[-86.96969604 303.04400635]
[-81.60192871 289.03732300]
[-74.28376007 275.94366455]
[-65.16603088 264.03286743]
[-54.43667603 253.55044556]
[-42.31684494 244.71247864]
[-29.05634308 237.70112610]
[-14.92849445 232.66090393]
[-0.22449866 229.69567871]
[14.75257111 228.86659241]
[29.69401169 230.19073486]
[44.29185486 233.64079285]
[58.24521637 239.14567566]
[71.26649475 246.59190369]
[83.08729553 255.82601929]
[93.46397400 266.65765381]
[102.18708038 278.87084961]
[101.37499237 263.89285278]
[100.56291199 248.91484070]
[99.75083160 233.93684387]
[76.18067932 231.80204773]
[53.35423279 225.55203247]
[31.98419762 215.38192749]
[12.73780251 201.60928345]
[-3.78402662 184.66412354]
[-17.06543159 165.07551575]
[-26.69173241 143.45507812]
[-32.36236954 120.47784424]
[-33.90028763 96.86123657]
[-31.25746918 73.34262848]
[-24.51643181 50.65634155]
[-38.13006592 44.35800171]
[-53.90356827 45.58564377]
[-62.20571899 33.21941757]
[-75.81935120 26.92108154]
[-89.43298340 20.62274551]
[-99.37070465 31.99896812]
[-112.11166382 40.11343002]
[-126.62302399 44.30833054]
[-141.72840881 44.24360657]
[-156.20327759 39.92450333]
[-168.87423706 31.70115471]
[-178.71409607 20.24018860]
[-184.92520142 6.47069454]
[-187.00402832 -8.49109650]
[-184.78204346 -23.43229866]
[-178.43940735 -37.14169312]
[-168.49026489 -48.50792694]
[-155.74114990 -56.60958481]
[-141.22558594 -60.78990555]
[-126.12028503 -60.71000671]
[-111.64974976 -56.37636566]
[-98.98706055 -48.14029312]
[-89.15871429 -36.66944504]
[-82.96145630 -22.89371872]
[-80.89766693 -7.92984819]
[-83.13464355 7.00911427]
[-69.52101135 13.30745125]
[-55.90738297 19.60578728]
[-41.10761642 17.92764664]
[-31.83172798 30.74437141]
[-18.21809578 37.04270935]
[-13.26194286 28.50964355]
[-7.69098520 20.36464119]
[-1.53546262 12.65191078]
[5.17121124 5.41332197]
[12.39263248 -1.31183493]
[20.08959961 -7.48705435]
[28.22033501 -13.07881546]
[36.74070358 -18.05676651]
[45.60445023 -22.39388466]
[54.76346970 -26.06662941]
[64.16803741 -29.05506325]
[73.76710510 -31.34296417]
[83.50857544 -32.91791534]
[93.33956146 -33.77136230]
[103.20670319 -33.89867783]
[113.05643463 -33.29916763]
[122.83529663 -31.97608948]
[132.49020386 -29.93662071]
[141.96875000 -27.19183540]
[151.21948242 -23.75663185]
[160.19218445 -19.64965630]
[168.83815002 -14.89320278]
[177.25595093 -27.30853653]
[178.59635925 -43.07286072]
[192.14280701 -49.26501083]
[200.56062317 -61.68034744]
[208.97842407 -74.09568024]
[217.39622498 -86.51101685]
[211.99774170 -101.05873108]
[216.21360779 -115.99211884]
[228.42276001 -125.56898499]
[243.93051147 -126.10684204]
[256.77380371 -117.39885712]
[262.01419067 -102.79343414]
[257.63656616 -87.90666199]
[245.32423401 -78.46279907]
[229.81156921 -78.09320831]
[221.39376831 -65.67787170]
[212.97595215 -53.26253891]
[204.55815125 -40.84720612]
[203.81985474 -25.97090912]
[189.67129517 -18.89073181]
[181.25347900 -6.47539663]
[189.99807739 0.80582130]
[198.09306335 8.80301857]
[205.48002625 17.45847321]
[212.10562134 26.70970726]
[217.92205811 36.48994827]
[222.88732910 46.72860336]
[226.96562195 57.35177231]
[230.12745667 68.28276825]
[232.35005188 79.44270325]
[233.61734009 90.75101471]
[233.92019653 102.12609100]
[233.25640869 113.48581696]
[231.63079834 124.74820709]
[229.05506897 135.83195496]
[225.54782104 146.65708923]
[221.13438416 157.14543152]
[215.84658813 167.22131348]
[209.72262573 176.81199646]
[202.80670166 185.84825134]
[195.14871216 194.26484680]
[186.80393982 202.00105286]
[177.83262634 209.00102234]
[168.29951477 215.21421814]
[158.27342224 220.59579468]
[147.82670593 225.10693359]
[137.03479004 228.71504211]
[125.97555542 231.39410400]
[114.72882843 233.12475586]
[115.54091644 248.10275269]
[116.35299683 263.08074951]
[117.16507721 278.05874634]
[123.34026337 291.72869873]
[134.04219055 302.23910522]
[144.74411011 312.74954224]
[160.29080200 311.06607056]
[173.25354004 319.81256104]
[177.51170349 334.85922241]
[171.05471802 349.10147095]
[156.93138123 355.81454468]
[141.81028748 351.82873535]
[132.83117676 339.02600098]
[134.23368835 323.45144653]
[123.53176880 312.94104004]
[112.82984924 302.43060303]
[116.22634888 317.04101562]
[117.49568176 331.98721313]
[116.61167145 346.96115112]
[113.59255219 361.65417480]
[108.50054169 375.76342773]
[101.44059753 388.99813843]
[92.55824280 401.08544922]
[82.03655243 411.77630615]
[70.09239960 420.85028076]
[56.97196960 428.12039185]
[42.94569778 433.43673706]
[28.30269051 436.68978882]
[13.34476280 437.81246948]
[-1.61977506 436.78164673]
[-16.28248024 433.61859131]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 145]
[27 144]
[28 143]
[29 142]
[40 71]
[41 70]
[43 68]
[44 67]
[45 66]
[93 114]
[94 113]
[96 111]
[97 110]
[98 109]
[99 108]
[146 158]
[147 157]
[148 156]
] def

init

% Start Annotations
26 145 0.0 0.2 colorpair
27 144 0.0 0.2 colorpair
28 143 0.16 0.2 colorpair
29 142 0.0 0.2 colorpair
40 71 0.16 0.2 colorpair
41 70 0.0 0.2 colorpair
43 68 0.0 1 colorpair
44 67 0.32 0.2 colorpair
45 66 0.32 1 colorpair
94 113 0.16 1 colorpair
96 111 0.0 0.2 colorpair
97 110 0.16 1 colorpair
98 109 0.16 0.2 colorpair
99 108 0.16 1 colorpair
146 158 0.32 1 colorpair
147 157 0.0 0.2 colorpair
148 156 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
26 145 2 gmark
27 144 2 gmark
28 143 2 gmark
28 cmark
29 142 2 gmark
40 71 2 gmark
40 cmark
41 70 2 gmark
44 67 2 gmark
44 cmark
67 cmark
45 cmark
66 cmark
93 114 3 gmark
93 cmark
114 cmark
94 cmark
96 111 2 gmark
110 cmark
98 109 2 gmark
98 cmark
99 cmark
146 cmark
158 cmark
147 157 2 gmark

% End Annotations
showpage
end
%%EOF
