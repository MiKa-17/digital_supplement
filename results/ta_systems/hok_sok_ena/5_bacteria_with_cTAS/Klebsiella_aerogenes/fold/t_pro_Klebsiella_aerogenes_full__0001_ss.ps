%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 17:40:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___________GAGGCAAGAUAUGCUGACAAAAUAUGCCCUUGUGGCAAUCAUCGUACUCUGUAUUACGGUACUGGGAUUUACGCUGUUGGUGCACAGCUCACUAUGCGAGCUGAGUAUUAAAGAGCGUAAUAUUGAGUUUAAAGCUGUUCUCGCUUACGAAUCGAAGAA________________\
) } def
/len { sequence length } bind def

/coor [
[130.02458191 569.19262695]
[123.78331757 555.52416992]
[119.55089569 541.10656738]
[117.41348267 526.23333740]
[117.41458130 511.20736694]
[119.55417633 496.33447266]
[123.78870392 481.91748047]
[130.03196716 468.24990845]
[138.15684509 455.61001587]
[147.99792480 444.25509644]
[159.35487366 434.41638184]
[171.99647522 426.29412842]
[185.66534424 420.05371094]
[181.43934631 405.66131592]
[177.21336365 391.26892090]
[172.98738098 376.87652588]
[161.97779846 366.84466553]
[165.51373291 351.42364502]
[161.28773499 337.03125000]
[157.06175232 322.63885498]
[142.99479675 317.81610107]
[134.36293030 305.48910522]
[134.64811707 290.26504517]
[143.95054626 277.98617554]
[139.72454834 263.59378052]
[135.49856567 249.20138550]
[117.96638489 246.99005127]
[103.11557770 237.31578064]
[93.95299530 222.08219910]
[92.35780334 204.32405090]
[98.69624329 187.60253906]
[111.73890686 175.29129028]
[106.79321289 161.13008118]
[101.84752655 146.96885681]
[96.90183258 132.80763245]
[91.95614624 118.64641571]
[79.07202911 110.96529388]
[64.26266479 113.34913635]
[49.45330048 115.73297882]
[38.92860031 127.84124756]
[22.90667534 127.01815796]
[13.67817783 113.89511108]
[18.32242012 98.53898621]
[33.27673721 92.72969055]
[47.06945801 100.92361450]
[61.87882233 98.53977203]
[76.68818665 96.15592957]
[77.94226837 88.76152039]
[63.15348816 86.25313568]
[65.66210175 71.46439362]
[80.45042419 73.97270203]
[81.70449829 66.57829285]
[68.50923920 59.44491196]
[55.31398010 52.31153488]
[42.11871719 45.17815781]
[28.92345619 38.04477692]
[15.72819519 30.91140175]
[1.79361594 37.73834229]
[-13.48664761 35.03775406]
[-24.23702049 23.84806633]
[-26.32376862 8.47194481]
[-18.94449043 -5.17817926]
[-4.93667173 -11.85355473]
[10.31339645 -8.98736382]
[20.94175148 2.31828570]
[22.86157417 17.71613884]
[36.05683517 24.84951782]
[49.25209427 31.98289490]
[62.44735718 39.11627197]
[75.64261627 46.24965286]
[88.83788300 53.38302994]
[95.91848755 50.91018295]
[87.75848389 38.32390976]
[79.59847260 25.73763847]
[69.97392273 14.23250866]
[71.11184692 -0.72426659]
[82.36618042 -10.64091301]
[97.34723663 -9.88720894]
[107.54944611 1.10892534]
[107.18021393 16.10494041]
[108.62995911 31.03471756]
[110.07971191 45.96449280]
[117.16031647 43.49164963]
[123.04576111 29.69449043]
[128.93119812 15.89733315]
[134.70054626 2.05122566]
[128.80480957 -12.36674881]
[134.73550415 -26.37679672]
[148.51718140 -31.90863228]
[154.17001343 -45.80271149]
[144.01506042 -57.14459991]
[139.80868530 -71.71145630]
[142.33372498 -86.59918213]
[151.03656006 -98.86383057]
[164.14733887 -106.10378265]
[179.03971863 -106.92991638]
[184.69255066 -120.82399750]
[190.34538269 -134.71807861]
[195.99821472 -148.61216736]
[201.65104675 -162.50624084]
[207.30387878 -176.40032959]
[199.83653259 -190.13978577]
[202.99841309 -205.45437622]
[215.29658508 -215.11299133]
[230.92420959 -214.55516052]
[242.50242615 -204.04425049]
[244.56433105 -188.54321289]
[236.13636780 -175.37113953]
[221.19795227 -170.74749756]
[215.54512024 -156.85340881]
[209.89228821 -142.95933533]
[204.23945618 -129.06524658]
[198.58663940 -115.17116547]
[192.93380737 -101.27708435]
[203.01939392 -90.28862000]
[207.35166931 -75.95192719]
[205.02009583 -61.09511948]
[196.43418884 -48.67326736]
[183.25286865 -41.18062592]
[168.06408691 -40.14987946]
[162.41125488 -26.25580025]
[168.41638184 -12.67367458]
[162.88153076 1.49742639]
[148.59463501 7.70405722]
[148.98695374 15.10005569]
[142.72836304 21.78277588]
[136.84292603 35.57993317]
[130.95747375 49.37709045]
[142.60066223 86.93051147]
[127.11334229 112.32305908]
[106.11736298 113.70072937]
[111.06305695 127.86194611]
[116.00874329 142.02316284]
[120.95443726 156.18438721]
[125.90012360 170.34561157]
[138.36166382 170.52839661]
[150.14038086 174.52532959]
[160.10037231 181.93505859]
[167.28599548 192.02789307]
[171.01361084 203.81761169]
[170.93650818 216.15788269]
[167.07723999 227.85362244]
[159.82385254 237.77685547]
[149.89096069 244.97538757]
[154.11694336 259.36779785]
[158.34294128 273.76019287]
[172.80709839 279.06057739]
[181.27777100 291.71368408]
[180.68064880 306.75054932]
[171.45414734 318.41287231]
[175.68013000 332.80526733]
[179.90612793 347.19766235]
[191.21797180 358.25897217]
[187.37977600 372.65054321]
[191.60575867 387.04293823]
[195.83174133 401.43533325]
[200.05773926 415.82772827]
[214.93054199 413.68756104]
[229.95654297 413.68585205]
[244.82983398 415.82269287]
[259.24761963 420.05453491]
[272.91632080 426.29525757]
[285.55773926 434.41781616]
[296.91445923 444.25677490]
[306.75531006 455.61190796]
[314.87991333 468.25198364]
[321.12286377 481.91970825]
[325.35705566 496.33679199]
[327.49630737 511.20971680]
[327.49707031 526.23571777]
[325.35931396 541.10888672]
[321.12658691 555.52636719]
[314.88500977 569.19476318]
[306.76168823 581.83563232]
[296.92199707 593.19177246]
[285.56628418 603.03186035]
[272.92568970 611.15570068]
[259.25759888 617.39782715]
[244.84025574 621.63110352]
[229.96717834 623.76947021]
[214.94117737 623.76928711]
[200.06816101 621.63061523]
[185.65090942 617.39697266]
[171.98295593 611.15454102]
[159.34254456 603.03045654]
[147.98703003 593.19006348]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 157]
[14 156]
[15 155]
[16 154]
[18 152]
[19 151]
[20 150]
[24 146]
[25 145]
[26 144]
[32 135]
[33 134]
[34 133]
[35 132]
[36 131]
[37 47]
[38 46]
[39 45]
[52 71]
[53 70]
[54 69]
[55 68]
[56 67]
[57 66]
[83 128]
[84 127]
[85 126]
[86 124]
[89 121]
[90 120]
[96 114]
[97 113]
[98 112]
[99 111]
[100 110]
[101 109]
] def

init

% Start Annotations
13 157 0.0 0.6 colorpair
14 156 0.16 0.6 colorpair
15 155 0.0 0.6 colorpair
16 154 0.0 0.6 colorpair
18 152 0.0 0.6 colorpair
19 151 0.16 1 colorpair
20 150 0.16 1 colorpair
24 146 0.0 1 colorpair
25 145 0.0 1 colorpair
26 144 0.16 1 colorpair
32 135 0.0 1 colorpair
33 134 0.16 1 colorpair
34 133 0.0 1 colorpair
35 132 0.0 1 colorpair
36 131 0.0 1 colorpair
37 47 0.16 1 colorpair
38 46 0.16 1 colorpair
39 45 0.16 1 colorpair
52 71 0.16 0.2 colorpair
53 70 0.16 1 colorpair
54 69 0.16 1 colorpair
55 68 0.0 1 colorpair
56 67 0.0 1 colorpair
57 66 0.16 1 colorpair
83 128 0.0 1 colorpair
84 127 0.16 1 colorpair
85 126 0.16 1 colorpair
86 124 0.16 1 colorpair
89 121 0.0 1 colorpair
90 120 0.16 1 colorpair
96 114 0.16 1 colorpair
97 113 0.16 1 colorpair
98 112 0.16 1 colorpair
99 111 0.16 1 colorpair
100 110 0.0 1 colorpair
101 109 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
13 157 1 gmark
14 156 1 gmark
156 cmark
15 155 1 gmark
16 154 1 gmark
18 152 1 gmark
151 cmark
20 cmark
150 cmark
26 cmark
144 cmark
33 cmark
37 cmark
47 cmark
38 cmark
39 cmark
45 cmark
52 71 2 gmark
52 cmark
70 cmark
54 cmark
69 cmark
57 cmark
66 cmark
84 cmark
127 cmark
85 cmark
86 cmark
124 cmark
120 cmark
96 cmark
114 cmark
97 cmark
98 cmark
112 cmark
99 cmark
111 cmark

% End Annotations
showpage
end
%%EOF
