%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 17:40:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAAUGCCGCAAAAGUAUCUGUUGUUUGGCUUAGUAGUGAUUUGCUUCACUAUUUUAUUAUUGACCUGGAUGGUUCGUGAUUCGCUAUGUGAAUUACAGCGCAGGCAGGGAAAUAUUGAGCUGGUGGCAUUCUUAGCCUGUGAUAUUAAACAGUAA\
) } def
/len { sequence length } bind def

/coor [
[172.83035278 359.46740723]
[166.47607422 345.87982178]
[160.12178040 332.29220581]
[153.76748657 318.70458984]
[147.41320801 305.11700439]
[141.05891418 291.52938843]
[134.70463562 277.94177246]
[128.35034180 264.35418701]
[121.99605560 250.76657104]
[115.64176941 237.17897034]
[109.28748322 223.59135437]
[107.49597168 238.48399353]
[100.80104065 251.90702820]
[89.98237610 262.29724121]
[76.29991150 268.44461060]
[61.34707642 269.63320923]
[46.86526108 265.72460938]
[34.54100037 257.17401123]
[25.80956078 244.97721863]
[21.68778992 230.55462646]
[22.65570450 215.58589172]
[28.60058212 201.81423950]
[38.83009338 190.84349060]
[52.15291977 183.95130920]
[67.01750946 181.94032288]
[81.69274139 185.04473877]
[94.46957397 192.90303040]
[103.85989380 204.59976196]
[102.07461548 189.70639038]
[100.28934479 174.81300354]
[98.50407410 159.91963196]
[96.71880341 145.02624512]
[94.93352509 130.13285828]
[93.14825439 115.23947906]
[82.97171783 104.21958160]
[68.26725769 101.25667572]
[53.56279755 98.29376221]
[38.85833740 95.33084869]
[24.15387726 92.36794281]
[9.44941807 89.40502930]
[-5.25504303 86.44211578]
[-18.27722931 95.39746094]
[-33.80227280 92.43965912]
[-42.61943817 79.32351685]
[-39.49765778 63.83061600]
[-26.28902817 55.15261459]
[-10.82999706 58.43801880]
[-2.29213190 71.73765564]
[12.41232872 74.70056915]
[27.11678886 77.66348267]
[41.82125092 80.62638855]
[56.52571106 83.58930206]
[71.23017120 86.55221558]
[85.93463135 89.51512146]
[73.21156311 81.57009125]
[70.49601746 66.81794739]
[79.55596924 54.86314011]
[94.49288177 53.48890686]
[105.58202362 63.58994675]
[105.60392761 78.58952332]
[110.85858917 64.54001617]
[116.11325073 50.49051666]
[121.36791229 36.44101334]
[115.06376648 22.19687653]
[120.59288025 8.02353764]
[134.21133423 2.10127735]
[139.46600342 -11.94822502]
[144.72067261 -25.99772835]
[149.97532654 -40.04722977]
[143.67117310 -54.29136658]
[149.20030212 -68.46470642]
[162.81875610 -74.38697052]
[168.07341003 -88.43647003]
[173.18814087 -102.53752136]
[178.16242981 -116.68872070]
[183.13671875 -130.83992004]
[183.03535461 -140.02967834]
[188.35314941 -145.22134399]
[193.60781860 -159.27084351]
[198.86247253 -173.32034302]
[204.11714172 -187.36984253]
[209.37179565 -201.41934204]
[214.62646484 -215.46885681]
[219.88111877 -229.51835632]
[225.13578796 -243.56785583]
[230.39045715 -257.61737061]
[230.27586365 -274.57092285]
[246.53515625 -279.37423706]
[255.65177917 -265.08004761]
[244.43995667 -252.36270142]
[239.18528748 -238.31318665]
[233.93063354 -224.26368713]
[228.67596436 -210.21418762]
[223.42131042 -196.16468811]
[218.16664124 -182.11518860]
[212.91197205 -168.06567383]
[207.65731812 -154.01617432]
[202.40264893 -139.96667480]
[197.28791809 -125.86563110]
[192.31362915 -111.71443176]
[187.33934021 -97.56322479]
[188.09220886 -90.16961670]
[182.12292480 -83.18180847]
[176.86825562 -69.13230133]
[183.25791931 -55.72679138]
[178.12908936 -41.40374374]
[164.02482605 -34.79256821]
[158.77017212 -20.74306488]
[153.51550293 -6.69356251]
[148.26084900 7.35593987]
[154.65051270 20.76145172]
[149.52168274 35.08449936]
[135.41741943 41.69567871]
[130.16275024 55.74517822]
[124.90808868 69.79468536]
[119.65342712 83.84418488]
[120.25447845 103.51888275]
[108.04163361 113.45420837]
[109.82691193 128.34759521]
[111.61218262 143.24096680]
[113.39745331 158.13435364]
[115.18272400 173.02774048]
[116.96800232 187.92111206]
[118.75327301 202.81449890]
[122.87509155 217.23707581]
[129.22937012 230.82467651]
[135.58366394 244.41227722]
[141.93795776 257.99987793]
[148.29223633 271.58749390]
[154.64653015 285.17510986]
[161.00080872 298.76269531]
[167.35510254 312.35031128]
[173.70938110 325.93792725]
[180.06367493 339.52551270]
[186.41796875 353.11312866]
[203.04356384 356.08035278]
[214.52543640 368.23797607]
[216.49855042 384.67657471]
[208.38406372 398.91778564]
[215.00724792 412.37637329]
[221.63043213 425.83496094]
[228.25361633 439.29354858]
[243.56672668 441.80123901]
[254.45735168 452.85446167]
[256.73782349 468.20303345]
[249.53128052 481.94512939]
[235.60876465 488.79663086]
[220.32376099 486.12298584]
[209.55368042 474.95227051]
[207.43983459 459.57983398]
[214.79502869 445.91671753]
[208.17184448 432.45816040]
[201.54866028 418.99957275]
[194.92549133 405.54098511]
[181.58587646 404.49111938]
[170.42524719 396.91476440]
[164.43046570 384.70983887]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 135]
[2 134]
[3 133]
[4 132]
[5 131]
[6 130]
[7 129]
[8 128]
[9 127]
[10 126]
[11 125]
[28 124]
[29 123]
[30 122]
[31 121]
[32 120]
[33 119]
[34 118]
[35 54]
[36 53]
[37 52]
[38 51]
[39 50]
[40 49]
[41 48]
[60 116]
[61 115]
[62 114]
[63 113]
[66 110]
[67 109]
[68 108]
[69 107]
[72 104]
[73 103]
[74 101]
[75 100]
[76 99]
[78 98]
[79 97]
[80 96]
[81 95]
[82 94]
[83 93]
[84 92]
[85 91]
[86 90]
[139 154]
[140 153]
[141 152]
[142 151]
] def

init

% Start Annotations
1 135 0.0 1 colorpair
2 134 0.0 1 colorpair
3 133 0.0 1 colorpair
4 132 0.0 1 colorpair
5 131 0.0 1 colorpair
6 130 0.0 1 colorpair
7 129 0.0 1 colorpair
8 128 0.0 1 colorpair
9 127 0.0 1 colorpair
10 126 0.0 1 colorpair
11 125 0.0 1 colorpair
28 124 0.0 1 colorpair
29 123 0.0 1 colorpair
30 122 0.0 1 colorpair
31 121 0.0 1 colorpair
32 120 0.0 1 colorpair
33 119 0.0 1 colorpair
34 118 0.0 1 colorpair
35 54 0.0 1 colorpair
36 53 0.0 1 colorpair
37 52 0.0 1 colorpair
38 51 0.0 1 colorpair
39 50 0.0 1 colorpair
40 49 0.0 1 colorpair
41 48 0.0 1 colorpair
60 116 0.0 1 colorpair
61 115 0.0 1 colorpair
62 114 0.0 1 colorpair
63 113 0.0 1 colorpair
66 110 0.0 1 colorpair
67 109 0.0 1 colorpair
68 108 0.0 1 colorpair
69 107 0.0 1 colorpair
72 104 0.0 1 colorpair
73 103 0.0 1 colorpair
74 101 0.0 1 colorpair
75 100 0.0 1 colorpair
76 99 0.0 1 colorpair
78 98 0.0 1 colorpair
79 97 0.0 1 colorpair
80 96 0.0 1 colorpair
81 95 0.0 1 colorpair
82 94 0.0 1 colorpair
83 93 0.0 1 colorpair
84 92 0.0 1 colorpair
85 91 0.0 1 colorpair
86 90 0.0 1 colorpair
139 154 0.0 1 colorpair
140 153 0.0 1 colorpair
141 152 0.0 1 colorpair
142 151 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
