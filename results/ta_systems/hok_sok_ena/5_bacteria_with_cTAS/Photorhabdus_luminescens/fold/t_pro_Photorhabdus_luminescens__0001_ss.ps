%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 17:50:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_AAAGGCAAGGAGACGCUAACCAUGAAACAGCAAAAA___GCGAUAUUUAUCGCCAUCGUUAUUUGUAUUGCCGCUUUAGCGGCUGUGCUGGUCACGAGGAAAGACCUCUGUGAGGUUCGCAUCCGAAGCGGCCAAACGGAGGUUGCUGUUUUCAUGGAUUACGAAACCAGG______\
) } def
/len { sequence length } bind def

/coor [
[88.63296509 552.46618652]
[75.01506805 545.90533447]
[63.93713760 535.62084961]
[56.38421631 522.52716064]
[53.02790833 507.78857422]
[54.16665268 492.71557617]
[59.69919586 478.64852905]
[69.13358307 466.83819580]
[81.63092041 458.33477783]
[96.07994843 453.89440918]
[96.07994843 438.89440918]
[83.94152832 430.30389404]
[79.13221741 416.04434204]
[83.69496918 401.51730347]
[96.07994843 392.35659790]
[96.07994843 377.35659790]
[92.92652130 370.64822388]
[96.21388245 362.09393311]
[96.47713470 347.09625244]
[96.74037933 332.09854126]
[96.87200928 317.09912109]
[96.87200928 302.09912109]
[96.87200928 287.09912109]
[96.87200928 272.09912109]
[96.87200928 257.09912109]
[96.87200928 242.09913635]
[96.87200928 227.09913635]
[96.74037933 212.09971619]
[96.47713470 197.10202026]
[96.21388245 182.10432434]
[95.95063782 167.10664368]
[95.68738556 152.10894775]
[95.42414093 137.11126709]
[95.16088867 122.11357117]
[92.31746674 136.84159851]
[80.33193970 145.86087036]
[65.39246368 144.51470947]
[55.21232986 133.49813843]
[55.04755783 118.49903870]
[64.98322296 107.26148224]
[79.89150238 105.58796692]
[64.96132660 104.14227295]
[50.03115845 102.69657898]
[35.10099030 101.25088501]
[20.17082024 99.80519104]
[5.47683239 107.08659363]
[-8.02428627 97.77790070]
[-6.44374418 81.45509338]
[8.59253311 74.90968323]
[21.61651230 84.87502289]
[36.54668045 86.32071686]
[51.47685242 87.76641083]
[66.40702057 89.21210480]
[81.33718872 90.65779877]
[85.71356964 84.56703949]
[94.46633148 72.38553619]
[98.84271240 66.29477692]
[92.70961761 52.60591125]
[86.57651520 38.91704178]
[80.44341278 25.22817612]
[67.73989868 15.79783630]
[69.59705353 1.01946533]
[63.46395111 -12.66940212]
[57.33085251 -26.35826874]
[44.62733841 -35.78860855]
[46.48448944 -50.56697845]
[40.35138702 -64.25584412]
[34.21828842 -77.94471741]
[28.08518791 -91.63358307]
[15.38167477 -101.06391907]
[17.23882484 -115.84229279]
[11.10572433 -129.53115845]
[4.97262478 -143.22003174]
[-1.16047513 -156.90888977]
[-7.29357481 -170.59776306]
[-20.89306450 -179.76214600]
[-19.48644829 -196.10086060]
[-4.52073145 -202.80603027]
[8.60863876 -192.97996521]
[6.39529228 -176.73086548]
[12.52839184 -163.04199219]
[18.66149139 -149.35313416]
[24.79459190 -135.66426086]
[30.92769241 -121.97539520]
[43.19252396 -113.52416992]
[41.77405548 -97.76667786]
[47.90715408 -84.07781219]
[54.04025650 -70.38894653]
[60.17335510 -56.70008087]
[72.43818665 -48.24885941]
[71.01972198 -32.49136734]
[77.15281677 -18.80250168]
[83.28591919 -5.11363459]
[95.55075073 3.33758569]
[94.13228607 19.09507561]
[100.26538086 32.78394318]
[106.39848328 46.47281265]
[112.53158569 60.16167831]
[107.65409851 45.97682190]
[112.48014069 31.77438354]
[124.99009705 23.49785042]
[139.94874573 24.61081886]
[151.09614563 34.64752960]
[153.76728821 49.40778351]
[146.84432983 62.71464920]
[133.22317505 68.99955750]
[147.35325623 63.96557617]
[161.48332214 58.93159866]
[175.61340332 53.89762115]
[189.74348450 48.86364365]
[203.87355042 43.82966232]
[218.00363159 38.79568481]
[224.83489990 24.79670143]
[239.23651123 19.89282036]
[252.54031372 26.49165726]
[266.67037964 21.45767975]
[273.72900391 15.61313915]
[281.09286499 16.46172142]
[295.30908203 11.67649937]
[309.52532959 6.89127827]
[323.74157715 2.10605669]
[329.27767944 -12.51877308]
[342.94442749 -20.11837006]
[358.28881836 -17.10443497]
[368.06570435 -4.90005875]
[367.65872192 10.73222733]
[357.26004028 22.41133499]
[341.77960205 24.62274742]
[328.52682495 16.32230377]
[314.31057739 21.10752487]
[300.09432983 25.89274597]
[285.87808228 30.67796707]
[271.70437622 35.58775711]
[257.57427979 40.62173462]
[251.43946838 54.14576721]
[237.18127441 59.45222855]
[223.03761292 52.92576218]
[208.90753174 57.95973969]
[194.77746582 62.99371719]
[180.64738464 68.02769470]
[166.51730347 73.06167603]
[152.38722229 78.09564972]
[138.25715637 83.12963104]
[110.15857697 121.85032654]
[110.42182922 136.84800720]
[110.68507385 151.84570312]
[110.94832611 166.84339905]
[111.21157074 181.84107971]
[111.47482300 196.83877563]
[111.73806763 211.83645630]
[115.02542877 220.39074707]
[111.87200928 227.09913635]
[111.87200928 242.09913635]
[111.87200928 257.09912109]
[111.87200928 272.09912109]
[111.87200928 287.09912109]
[111.87200928 302.09912109]
[111.87200928 317.09912109]
[115.00873566 325.70980835]
[111.73806763 332.36181641]
[111.47482300 347.35949707]
[111.21157074 362.35717773]
[111.07994843 377.35659790]
[111.07994843 392.35659790]
[123.46492004 401.51730347]
[128.02767944 416.04434204]
[123.21836090 430.30389404]
[111.07994843 438.89440918]
[111.07994843 453.89440918]
[125.52896881 458.33477783]
[138.02630615 466.83819580]
[147.46069336 478.64852905]
[152.99324036 492.71557617]
[154.13197327 507.78857422]
[150.77566528 522.52716064]
[143.22274780 535.62084961]
[132.14482117 545.90533447]
[118.52692413 552.46618652]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 169]
[11 168]
[15 164]
[16 163]
[18 162]
[19 161]
[20 160]
[21 158]
[22 157]
[23 156]
[24 155]
[25 154]
[26 153]
[27 152]
[28 150]
[29 149]
[30 148]
[31 147]
[32 146]
[33 145]
[34 144]
[41 54]
[42 53]
[43 52]
[44 51]
[45 50]
[57 98]
[58 97]
[59 96]
[60 95]
[62 93]
[63 92]
[64 91]
[66 89]
[67 88]
[68 87]
[69 86]
[71 84]
[72 83]
[73 82]
[74 81]
[75 80]
[106 143]
[107 142]
[108 141]
[109 140]
[110 139]
[111 138]
[112 137]
[115 134]
[116 133]
[118 132]
[119 131]
[120 130]
[121 129]
] def

init

% Start Annotations
10 169 0.0 1 colorpair
11 168 0.0 1 colorpair
15 164 0.0 0.6 colorpair
16 163 0.0 1 colorpair
18 162 0.0 0.6 colorpair
19 161 0.16 1 colorpair
20 160 0.16 1 colorpair
21 158 0.0 1 colorpair
22 157 0.16 1 colorpair
23 156 0.0 1 colorpair
24 155 0.0 1 colorpair
25 154 0.0 1 colorpair
26 153 0.0 1 colorpair
27 152 0.0 0.6 colorpair
28 150 0.16 1 colorpair
29 149 0.0 1 colorpair
30 148 0.16 1 colorpair
31 147 0.0 1 colorpair
32 146 0.0 1 colorpair
33 145 0.0 1 colorpair
34 144 0.0 1 colorpair
41 54 0.16 1 colorpair
42 53 0.0 0.6 colorpair
43 52 0.16 1 colorpair
44 51 0.0 0.6 colorpair
45 50 0.0 1 colorpair
57 98 0.0 1 colorpair
58 97 0.0 0.6 colorpair
59 96 0.0 0.6 colorpair
60 95 0.0 1 colorpair
62 93 0.0 1 colorpair
63 92 0.16 1 colorpair
64 91 0.0 1 colorpair
66 89 0.16 1 colorpair
67 88 0.0 1 colorpair
68 87 0.16 1 colorpair
69 86 0.16 1 colorpair
71 84 0.16 1 colorpair
72 83 0.0 0.6 colorpair
73 82 0.0 0.6 colorpair
74 81 0.0 0.6 colorpair
75 80 0.16 1 colorpair
106 143 0.0 0.6 colorpair
107 142 0.0 0.6 colorpair
108 141 0.0 1 colorpair
109 140 0.0 1 colorpair
110 139 0.16 1 colorpair
111 138 0.0 1 colorpair
112 137 0.0 1 colorpair
115 134 0.0 0.6 colorpair
116 133 0.0 0.6 colorpair
118 132 0.16 1 colorpair
119 131 0.0 1 colorpair
120 130 0.0 0.6 colorpair
121 129 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
15 164 1 gmark
18 162 1 gmark
19 cmark
20 cmark
22 cmark
27 152 1 gmark
28 cmark
150 cmark
30 cmark
148 cmark
54 cmark
42 53 1 gmark
43 cmark
52 cmark
44 51 1 gmark
58 97 1 gmark
59 96 1 gmark
92 cmark
89 cmark
68 cmark
87 cmark
86 cmark
71 cmark
84 cmark
72 83 1 gmark
73 82 1 gmark
74 81 1 gmark
75 cmark
80 cmark
106 143 1 gmark
107 142 1 gmark
139 cmark
115 134 1 gmark
116 133 1 gmark
118 cmark
120 130 1 gmark
121 cmark

% End Annotations
showpage
end
%%EOF
