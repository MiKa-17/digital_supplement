%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 17:50:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAGCCGCAAAAAAUCGCAAUAUUUAGUUUGAUCAUUAUUUGUGUGACAUUACUCAUAUUCACGUGGAUAACAAGGGGUUCAAUCUGUAAACUCCAUAUCAAACGAGGUAAUACAGAGGUUGCGGCAAUCAUGGCUUACGAAUCCAGCGACAGGUAA\
) } def
/len { sequence length } bind def

/coor [
[324.45596313 533.33557129]
[317.38500977 520.10675049]
[310.31405640 506.87792969]
[303.24310303 493.64910889]
[287.87039185 485.23062134]
[288.55996704 466.85336304]
[281.23062134 453.76593018]
[273.90130615 440.67849731]
[266.57199097 427.59106445]
[259.24267578 414.50360107]
[251.91336060 401.41616821]
[244.58404541 388.32873535]
[233.13328552 387.67379761]
[223.33200073 381.48870850]
[217.69688416 371.22387695]
[217.74113464 359.39389038]
[223.57014465 348.96163940]
[216.76028442 335.59655762]
[200.63121033 335.15490723]
[186.83845520 326.60302734]
[179.18341064 312.18685913]
[179.83161926 295.78341675]
[188.70106506 281.85818481]
[181.63011169 268.62936401]
[174.55915833 255.40052795]
[167.48820496 242.17172241]
[160.41725159 228.94290161]
[147.59396362 221.36578369]
[147.91230774 205.54777527]
[140.84135437 192.31895447]
[133.77040100 179.09013367]
[126.69944763 165.86132812]
[119.62850189 152.63250732]
[112.55754852 139.40368652]
[105.48659515 126.17486572]
[87.31954956 123.54639435]
[75.12639618 109.82497406]
[74.65144348 91.47490692]
[62.34542465 82.89808655]
[50.03940201 74.32126617]
[37.73338318 65.74445343]
[25.42736053 57.16762924]
[13.12133884 48.59081268]
[0.81531715 40.01399231]
[-11.49070454 31.43717194]
[-23.79672623 22.86035347]
[-36.10274887 14.28353405]
[-48.40876770 5.70671463]
[-60.71479034 -2.87010503]
[-73.98545074 4.66993999]
[-89.21398926 5.69679451]
[-103.37676239 0.00657518]
[-113.66174316 -11.27091980]
[-118.02684784 -25.89653587]
[-115.60536957 -40.96634674]
[-106.87810516 -53.48823166]
[-93.57785034 -60.97595978]
[-78.34539032 -61.94283676]
[-64.20513153 -56.19688797]
[-53.96464157 -44.87897873]
[-49.65716934 -30.23628426]
[-52.13796997 -15.17612648]
[-39.83195114 -6.59930706]
[-27.52592850 1.97751224]
[-15.21990681 10.55433178]
[-2.91388512 19.13115120]
[9.39213657 27.70796967]
[21.69815826 36.28479004]
[34.00418091 44.86161041]
[46.31019974 53.43842697]
[58.61622238 62.01524734]
[70.92224121 70.59206390]
[83.22826385 79.16888428]
[86.92714691 76.66918945]
[90.99031067 74.81961060]
[95.30454254 73.67170715]
[99.74960327 73.25745392]
[103.82121277 58.82062912]
[107.89282227 44.38380051]
[111.96442413 29.94697189]
[116.03603363 15.51014233]
[120.10764313 1.07331395]
[109.80381775 -10.40861893]
[107.36585236 -25.64213181]
[113.57169342 -39.76626205]
[126.44107819 -48.27405548]
[141.86743164 -48.45070267]
[154.92825317 -40.23984146]
[161.45590210 -26.26152039]
[159.36741638 -10.97617531]
[149.32920837 0.73869562]
[134.54446411 5.14492083]
[130.47286987 19.58174896]
[126.40125275 34.01857758]
[122.32965088 48.45540619]
[118.25804138 62.89223480]
[114.18643188 77.32906342]
[124.53559875 89.35900879]
[126.24599457 105.13555145]
[118.71541595 119.10391235]
[125.78636932 132.33273315]
[132.85731506 145.56155396]
[139.92826843 158.79037476]
[146.99922180 172.01919556]
[154.07017517 185.24801636]
[161.14112854 198.47682190]
[174.47016907 207.00015259]
[173.64607239 221.87194824]
[180.71702576 235.10076904]
[187.78797913 248.32958984]
[194.85893250 261.55841064]
[201.92987061 274.78723145]
[215.94349670 274.52279663]
[228.63864136 280.30480957]
[237.55267334 290.94876099]
[240.98362732 304.33331299]
[238.31494141 317.82293701]
[230.12538147 328.78668213]
[236.93524170 342.15179443]
[255.13349915 347.27069092]
[263.71279907 363.75869751]
[257.67147827 380.99942017]
[265.00079346 394.08685303]
[272.33010864 407.17428589]
[279.65942383 420.26171875]
[286.98876953 433.34918213]
[294.31808472 446.43661499]
[301.64739990 459.52404785]
[313.85641479 463.78759766]
[319.68194580 474.88162231]
[316.47192383 486.57815552]
[323.54287720 499.80697632]
[330.61383057 513.03582764]
[337.68478394 526.26464844]
[347.30123901 532.68420410]
[348.55178833 542.87902832]
[357.83819580 554.65881348]
[367.12460327 566.43853760]
[382.47009277 564.85150146]
[396.22726440 571.83319092]
[404.00622559 585.15576172]
[403.32473755 600.56805420]
[394.40026855 613.15209961]
[380.08059692 618.89227295]
[364.93502808 615.95703125]
[353.79650879 605.28289795]
[350.21929932 590.27600098]
[355.34484863 575.72497559]
[346.05844116 563.94519043]
[336.77203369 552.16546631]
[335.97293091 567.14416504]
[328.06729126 579.89172363]
[315.00451660 587.26495361]
[300.00561523 587.44567871]
[286.76898193 580.38934326]
[278.55853271 567.83593750]
[277.39877319 552.88079834]
[283.57568359 539.21166992]
[295.56616211 530.19897461]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 134]
[2 133]
[3 132]
[4 131]
[6 128]
[7 127]
[8 126]
[9 125]
[10 124]
[11 123]
[12 122]
[17 119]
[18 118]
[23 112]
[24 111]
[25 110]
[26 109]
[27 108]
[29 106]
[30 105]
[31 104]
[32 103]
[33 102]
[34 101]
[35 100]
[38 73]
[39 72]
[40 71]
[41 70]
[42 69]
[43 68]
[44 67]
[45 66]
[46 65]
[47 64]
[48 63]
[49 62]
[77 97]
[78 96]
[79 95]
[80 94]
[81 93]
[82 92]
[136 150]
[137 149]
[138 148]
] def

init

% Start Annotations
1 134 0.0 1 colorpair
2 133 0.0 1 colorpair
3 132 0.0 1 colorpair
4 131 0.0 1 colorpair
6 128 0.0 1 colorpair
7 127 0.0 1 colorpair
8 126 0.0 1 colorpair
9 125 0.0 1 colorpair
10 124 0.0 1 colorpair
11 123 0.0 1 colorpair
12 122 0.0 1 colorpair
17 119 0.0 1 colorpair
18 118 0.0 1 colorpair
23 112 0.0 1 colorpair
24 111 0.0 1 colorpair
25 110 0.0 1 colorpair
26 109 0.0 1 colorpair
27 108 0.0 1 colorpair
29 106 0.0 1 colorpair
30 105 0.0 1 colorpair
31 104 0.0 1 colorpair
32 103 0.0 1 colorpair
33 102 0.0 1 colorpair
34 101 0.0 1 colorpair
35 100 0.0 1 colorpair
38 73 0.0 1 colorpair
39 72 0.0 1 colorpair
40 71 0.0 1 colorpair
41 70 0.0 1 colorpair
42 69 0.0 1 colorpair
43 68 0.0 1 colorpair
44 67 0.0 1 colorpair
45 66 0.0 1 colorpair
46 65 0.0 1 colorpair
47 64 0.0 1 colorpair
48 63 0.0 1 colorpair
49 62 0.0 1 colorpair
77 97 0.0 1 colorpair
78 96 0.0 1 colorpair
79 95 0.0 1 colorpair
80 94 0.0 1 colorpair
81 93 0.0 1 colorpair
82 92 0.0 1 colorpair
136 150 0.0 1 colorpair
137 149 0.0 1 colorpair
138 148 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
