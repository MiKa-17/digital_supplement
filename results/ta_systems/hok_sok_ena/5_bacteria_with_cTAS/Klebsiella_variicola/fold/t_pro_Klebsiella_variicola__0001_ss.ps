%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 17:49:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCAACACUGGAGGCGAGGAAUGCCGCAAAAGUAUCUGUUUUUUGGCUUAGUAGUGAUUUGCUUCACUAUUUUAUUAUUGACCUGGAUGGUUCGUGAUUCGCUAUGUGAAUUACAGAUCAGGCAGGGAAAUAUUGAGCUGGUGGCAUUCUUAGCCUGUGAUAUUAAACAG____________\
) } def
/len { sequence length } bind def

/coor [
[110.26559448 532.34869385]
[102.96563721 519.21051025]
[97.75687408 505.11196899]
[94.76139069 490.38351440]
[94.04942322 475.37042236]
[95.63764954 460.42456055]
[99.48883820 445.89636230]
[105.51271820 432.12634277]
[113.56807709 419.43731689]
[123.46609497 408.12670898]
[134.97473145 398.45968628]
[147.82421875 390.66281128]
[161.71334839 384.91888428]
[158.16188049 370.34539795]
[154.61041260 355.77188110]
[151.05894470 341.19836426]
[140.52827454 330.66488647]
[144.77819824 315.42517090]
[141.22673035 300.85168457]
[137.67526245 286.27816772]
[123.84804535 280.80584717]
[115.79932404 268.09042358]
[116.79286194 252.89614868]
[126.65676880 241.06358337]
[123.10530090 226.49008179]
[119.55383301 211.91656494]
[103.73381805 213.55056763]
[87.84063721 212.95938110]
[72.18573761 210.15460205]
[57.07588959 205.19122314]
[42.80719757 198.16645813]
[29.65927505 189.21801758]
[17.88976860 178.52120972]
[7.72932100 166.28569031]
[-0.62296218 152.75122070]
[-7.00340700 138.18301392]
[-11.28697968 122.86655426]
[-26.14726830 124.90905762]
[-41.00755692 126.95155334]
[-51.80804443 138.81448364]
[-67.80679321 137.62300110]
[-76.73093414 124.29110718]
[-71.73462677 109.04589844]
[-56.65061188 103.58218384]
[-43.05005646 112.09126282]
[-28.18976784 110.04876709]
[-13.32947922 108.00626373]
[-13.53740692 95.88558197]
[-12.45270824 83.81174469]
[-10.08773232 71.92221069]
[-6.46940517 60.35234070]
[-1.63892090 49.23386002]
[-14.58640671 41.66004944]
[-27.53389359 34.08623886]
[-40.48138046 26.51243019]
[-53.42886734 18.93861961]
[-66.37635040 11.36480904]
[-80.53298950 17.71849251]
[-95.71360779 14.50472260]
[-106.08096313 2.95926118]
[-107.64858246 -12.47842598]
[-99.81369019 -25.87223434]
[-85.58895874 -32.07197189]
[-70.44409180 -28.69370842]
[-60.20259857 -17.03646088]
[-58.80254364 -1.58267677]
[-45.85505676 5.99113369]
[-32.90756989 13.56494331]
[-19.96008301 21.13875389]
[-7.01259708 28.71256447]
[5.93488932 36.28637314]
[13.80774975 25.98265648]
[22.80343819 16.64316368]
[32.80476761 8.38956356]
[43.68145370 1.32937360]
[55.29180145 -4.44543123]
[67.48456573 -8.85962296]
[80.10090637 -11.85569763]
[92.97647095 -13.39462566]
[105.94353485 -13.45635986]
[118.83316803 -12.04009438]
[131.47746277 -9.16428089]
[143.71170044 -4.86638117]
[150.38429260 -18.30053902]
[157.05688477 -31.73469734]
[163.61453247 -45.22532654]
[158.55743408 -59.95840073]
[165.28376770 -73.60432434]
[179.36065674 -78.33470154]
[185.80291748 -91.88082123]
[192.24516296 -105.42694092]
[183.65220642 -118.08032990]
[182.55374146 -133.23587036]
[189.14491272 -146.81610107]
[201.56549072 -155.21760559]
[216.42362976 -156.26698303]
[222.86587524 -169.81311035]
[229.30813599 -183.35922241]
[235.75038147 -196.90534973]
[242.19262695 -210.45147705]
[248.63488770 -223.99758911]
[241.96977234 -238.14363098]
[246.00686646 -253.25109863]
[258.83996582 -262.18673706]
[274.40966797 -260.73138428]
[285.36447144 -249.57225037]
[286.53179932 -233.97828674]
[277.36050415 -221.31253052]
[262.18099976 -217.55534363]
[255.73875427 -204.00921631]
[249.29650879 -190.46310425]
[242.85424805 -176.91697693]
[236.41200256 -163.37084961]
[229.96974182 -149.82473755]
[238.53253174 -137.63685608]
[239.85385132 -122.69998932]
[233.47912598 -109.01681519]
[221.02957153 -100.30442810]
[205.79129028 -98.98469543]
[199.34902954 -85.43856812]
[192.90678406 -71.89244843]
[198.12113953 -57.98755646]
[191.78074646 -44.15808868]
[177.16065979 -38.78307724]
[177.12719727 -31.37449646]
[170.49104309 -25.06211090]
[163.81845093 -11.62795258]
[157.14585876 1.80620515]
[170.67573547 11.04713726]
[182.73570251 22.13809967]
[193.07493591 34.84842300]
[201.47840881 48.91376495]
[207.77134705 64.04158783]
[211.82287598 79.91727448]
[213.54872131 96.21063232]
[212.91299438 112.58280182]
[209.92890930 128.69328308]
[204.65855408 144.20700073]
[197.21151733 158.80130005]
[187.74267578 172.17266846]
[176.44897461 184.04299927]
[163.56530762 194.16540527]
[149.35961914 202.32937622]
[134.12733459 208.36509705]
[137.67880249 222.93861389]
[141.23027039 237.51211548]
[155.43203735 243.48004150]
[163.30453491 256.51373291]
[162.00813293 271.50650024]
[152.24876404 282.72668457]
[155.80023193 297.30020142]
[159.35169983 311.87371826]
[170.13639832 323.44958496]
[165.63244629 337.64691162]
[169.18391418 352.22039795]
[172.73538208 366.79391479]
[176.28684998 381.36743164]
[191.26138306 380.07745361]
[206.25730896 381.08859253]
[220.92312622 384.37707520]
[234.91503906 389.86587524]
[247.90505981 397.42630005]
[259.58868408 406.88110352]
[269.69201660 418.00869751]
[277.97824097 430.54818726]
[284.25308228 444.20565796]
[288.36950684 458.66094971]
[290.23095703 473.57522583]
[289.79385376 488.59884644]
[287.06838989 503.37966919]
[282.11849976 517.57116699]
[275.06021118 530.84069824]
[266.05892944 542.87719727]
[255.32571411 553.39855957]
[243.11215210 562.15808105]
[229.70454407 568.95043945]
[215.41717529 573.61645508]
[200.58496094 576.04669189]
[185.55560303 576.18420410]
[170.68141174 574.02581787]
[156.31105042 569.62207031]
[142.78138733 563.07617188]
[130.40956116 554.54162598]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 157]
[14 156]
[15 155]
[16 154]
[18 152]
[19 151]
[20 150]
[24 146]
[25 145]
[26 144]
[37 47]
[38 46]
[39 45]
[52 71]
[53 70]
[54 69]
[55 68]
[56 67]
[57 66]
[83 128]
[84 127]
[85 126]
[86 124]
[89 121]
[90 120]
[91 119]
[96 114]
[97 113]
[98 112]
[99 111]
[100 110]
[101 109]
] def

init

% Start Annotations
13 157 0.0 1 colorpair
14 156 0.16 1 colorpair
15 155 0.0 1 colorpair
16 154 0.0 1 colorpair
18 152 0.0 1 colorpair
19 151 0.16 1 colorpair
20 150 0.16 1 colorpair
24 146 0.0 1 colorpair
25 145 0.0 1 colorpair
26 144 0.16 1 colorpair
37 47 0.32 1 colorpair
38 46 0.16 1 colorpair
39 45 0.16 1 colorpair
52 71 0.16 1 colorpair
53 70 0.16 1 colorpair
54 69 0.16 0.2 colorpair
55 68 0.0 1 colorpair
56 67 0.0 1 colorpair
57 66 0.16 1 colorpair
83 128 0.0 1 colorpair
84 127 0.16 1 colorpair
85 126 0.16 1 colorpair
86 124 0.16 1 colorpair
89 121 0.0 0.6 colorpair
90 120 0.16 1 colorpair
91 119 0.0 1 colorpair
96 114 0.16 1 colorpair
97 113 0.16 1 colorpair
98 112 0.16 1 colorpair
99 111 0.16 1 colorpair
100 110 0.0 1 colorpair
101 109 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
156 cmark
151 cmark
20 cmark
150 cmark
26 cmark
144 cmark
37 cmark
47 cmark
38 cmark
39 cmark
45 cmark
52 cmark
70 cmark
54 69 2 gmark
54 cmark
69 cmark
57 cmark
66 cmark
84 cmark
127 cmark
85 cmark
86 cmark
124 cmark
89 121 1 gmark
120 cmark
96 cmark
114 cmark
97 cmark
98 cmark
112 cmark
99 cmark
111 cmark

% End Annotations
showpage
end
%%EOF
