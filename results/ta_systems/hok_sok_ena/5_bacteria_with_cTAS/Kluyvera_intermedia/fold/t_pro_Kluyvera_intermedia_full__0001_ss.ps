%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 17:50:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___________UAAGGGGCUAGGGAUGCCACAAAAAUCUAUGUUGUAUAGUUUGAUAGUGAUAUGUCUCACUAUUCUAUUAUUUACCUGGAUGGUUCGUGAUUCAUUAUGCGAAUUGCAUAUUAAGCAAGGAAAUAAUGAGGUCGCGGCAUCUUUAGCCUGUGAUAUU______\
) } def
/len { sequence length } bind def

/coor [
[105.02591705 483.36160278]
[90.40150452 479.74575806]
[76.94859314 472.96585083]
[65.34197235 463.36199951]
[56.16382980 451.41589355]
[49.87453461 437.72674561]
[46.78955460 422.98123169]
[47.06363297 407.91894531]
[50.68301773 393.29541016]
[57.46616745 379.84411621]
[67.07283783 368.23983765]
[79.02117157 359.06457520]
[92.71183014 352.77862549]
[107.45810699 349.69720459]
[99.95052338 336.83309937]
[107.93430328 323.17404175]
[108.20356750 308.17645264]
[108.47283173 293.17886353]
[108.74209595 278.18127441]
[109.01136017 263.18371582]
[109.28062439 248.18612671]
[109.54988861 233.18853760]
[109.81915283 218.19094849]
[110.08842468 203.19337463]
[110.35768890 188.19578552]
[110.62695312 173.19821167]
[110.89621735 158.20062256]
[111.16548157 143.20303345]
[111.43474579 128.20545959]
[101.30858612 129.74848938]
[91.47144318 127.84239197]
[83.03858948 122.85523224]
[76.91484833 115.49542236]
[73.69805908 106.71469879]
[73.62260437 97.58644867]
[76.54814911 89.17494965]
[65.34111786 79.20487213]
[54.13408279 69.23479462]
[42.92704773 59.26472092]
[31.72001457 49.29464722]
[16.26665115 45.90287399]
[11.90041828 31.66260529]
[0.69338489 21.69253159]
[-12.59332085 24.02018166]
[-24.61463356 18.34345818]
[-31.06659508 6.94311142]
[-29.78310966 -5.89756155]
[-40.80936432 -16.06720734]
[-51.83562088 -26.23685455]
[-62.86187363 -36.40650177]
[-73.88813019 -46.57614517]
[-89.45816040 -46.11573410]
[-100.49547577 -56.58627319]
[-100.83845520 -71.43275452]
[-111.86470795 -81.60240173]
[-122.89096832 -91.77204895]
[-133.91722107 -101.94169617]
[-144.94348145 -112.11133575]
[-155.96972656 -122.28098297]
[-166.99598694 -132.45063782]
[-178.02224731 -142.62028503]
[-193.80152893 -141.73173523]
[-205.53164673 -152.32324219]
[-206.25331116 -168.11105347]
[-195.53837585 -179.72853088]
[-179.74382019 -180.28323364]
[-168.24028015 -169.44606018]
[-167.85260010 -153.64653015]
[-156.82633972 -143.47688293]
[-145.80007935 -133.30723572]
[-134.77383423 -123.13759613]
[-123.74757385 -112.96794891]
[-112.72132111 -102.79830170]
[-101.69506836 -92.62865448]
[-90.66880798 -82.45900726]
[-75.84307098 -83.31520081]
[-64.51601410 -73.15880585]
[-63.71848297 -57.60240173]
[-52.69222641 -47.43275452]
[-41.66597366 -37.26310730]
[-30.63971901 -27.09346199]
[-19.61346245 -16.92381668]
[-2.86960006 -18.32901955]
[9.97339535 -6.97828102]
[10.66345978 10.48549747]
[21.87049294 20.45557213]
[36.52225494 23.13421822]
[41.69009018 38.08761215]
[52.89712524 48.05768967]
[64.10415649 58.02776337]
[75.31118774 67.99784088]
[86.51822662 77.96791840]
[95.13420868 73.85162354]
[104.93077087 73.08306122]
[114.61637115 75.96263123]
[122.84301758 82.29668427]
[128.39331055 91.39846039]
[130.35852051 102.15912628]
[144.53884888 97.26853180]
[158.71919250 92.37793732]
[172.89953613 87.48734283]
[187.07987976 82.59674835]
[201.21575928 77.57907104]
[215.30601501 72.43471527]
[229.39628601 67.29035187]
[243.48655701 62.14599609]
[257.57681274 57.00164032]
[271.66708374 51.85728455]
[285.75735474 46.71292496]
[287.45947266 32.81060410]
[294.95587158 21.05794525]
[306.73205566 13.72307777]
[320.45437622 12.19223118]
[333.43234253 16.70806503]
[343.14624023 26.33331490]
[357.32656860 21.44272041]
[371.50692749 16.55212593]
[385.68725586 11.66153145]
[391.11465454 -3.00398111]
[404.72463989 -10.70479488]
[420.09097290 -7.80482101]
[429.95816040 4.32666159]
[429.66720581 19.96153831]
[419.35546875 31.71749687]
[403.89187622 34.04373550]
[390.57785034 25.84187317]
[376.39752197 30.73246765]
[362.21716309 35.62306213]
[348.03683472 40.51365662]
[345.35824585 56.43347549]
[334.96429443 68.90816498]
[319.61303711 74.47994995]
[303.45288086 71.54263306]
[290.90170288 60.80319214]
[276.81143188 65.94754791]
[262.72116089 71.09190369]
[248.63090515 76.23625946]
[234.54063416 81.38062286]
[220.45037842 86.52497864]
[206.36010742 91.66933441]
[201.13781738 96.93460846]
[191.97047424 96.77709198]
[177.79013062 101.66768646]
[163.60978699 106.55828094]
[149.42944336 111.44886780]
[135.24911499 116.33946228]
[126.43232727 128.47471619]
[126.16306305 143.47230530]
[125.89379883 158.46987915]
[125.62453461 173.46746826]
[125.35527039 188.46505737]
[125.08600616 203.46263123]
[124.81674194 218.46022034]
[124.54747772 233.45779419]
[124.27820587 248.45538330]
[124.00894165 263.45297241]
[123.73967743 278.45056152]
[123.47041321 293.44812012]
[123.20114899 308.44570923]
[122.93188477 323.44329834]
[130.42021179 337.38012695]
[122.45568848 349.96646118]
[137.08184814 353.57522583]
[150.53805542 360.34860229]
[162.14932251 369.94683838]
[171.33325195 381.88848877]
[177.62918091 395.57458496]
[180.72129822 410.31860352]
[180.45452881 425.38104248]
[176.84222412 440.00631714]
[170.06559753 453.46087646]
[160.46455383 465.06982422]
[148.52066040 474.25085449]
[134.83305359 480.54345703]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 162]
[16 160]
[17 159]
[18 158]
[19 157]
[20 156]
[21 155]
[22 154]
[23 153]
[24 152]
[25 151]
[26 150]
[27 149]
[28 148]
[29 147]
[36 92]
[37 91]
[38 90]
[39 89]
[40 88]
[42 86]
[43 85]
[47 82]
[48 81]
[49 80]
[50 79]
[51 78]
[54 75]
[55 74]
[56 73]
[57 72]
[58 71]
[59 70]
[60 69]
[61 68]
[98 146]
[99 145]
[100 144]
[101 143]
[102 142]
[103 140]
[104 139]
[105 138]
[106 137]
[107 136]
[108 135]
[109 134]
[115 129]
[116 128]
[117 127]
[118 126]
] def

init

% Start Annotations
14 162 0.0 1 colorpair
16 160 0.0 1 colorpair
17 159 0.0 1 colorpair
18 158 0.0 1 colorpair
19 157 0.0 1 colorpair
20 156 0.0 1 colorpair
21 155 0.0 1 colorpair
22 154 0.0 1 colorpair
23 153 0.0 1 colorpair
24 152 0.0 1 colorpair
25 151 0.0 1 colorpair
26 150 0.0 1 colorpair
27 149 0.0 1 colorpair
28 148 0.0 1 colorpair
29 147 0.0 1 colorpair
36 92 0.0 1 colorpair
37 91 0.0 1 colorpair
38 90 0.0 1 colorpair
39 89 0.0 1 colorpair
40 88 0.0 1 colorpair
42 86 0.0 1 colorpair
43 85 0.0 1 colorpair
47 82 0.0 1 colorpair
48 81 0.0 1 colorpair
49 80 0.0 1 colorpair
50 79 0.0 1 colorpair
51 78 0.0 1 colorpair
54 75 0.0 1 colorpair
55 74 0.0 1 colorpair
56 73 0.0 1 colorpair
57 72 0.0 1 colorpair
58 71 0.0 1 colorpair
59 70 0.0 1 colorpair
60 69 0.0 1 colorpair
61 68 0.0 1 colorpair
98 146 0.0 1 colorpair
99 145 0.0 1 colorpair
100 144 0.0 1 colorpair
101 143 0.0 1 colorpair
102 142 0.0 1 colorpair
103 140 0.0 1 colorpair
104 139 0.0 1 colorpair
105 138 0.0 1 colorpair
106 137 0.0 1 colorpair
107 136 0.0 1 colorpair
108 135 0.0 1 colorpair
109 134 0.0 1 colorpair
115 129 0.0 1 colorpair
116 128 0.0 1 colorpair
117 127 0.0 1 colorpair
118 126 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
