%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 17:51:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___AAAGGCAAGGAGAAGCAGGCUAUGAAGCAGCAAAAGGCGAUGUUAAUCGCCCUGAUCGUCAUCUGUUUCACCGUCAUAGUGACGGCACUGGUAACGAGGAAAGACCUCUGCGAGGUACGAAUCCGAACCGGCCAGACGGAGGUCGCGGCCUUCAUAGCCUACGAAUCUAAGGAG_______________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[126.72169495 553.98089600]
[116.56332397 542.93884277]
[107.04006195 531.34460449]
[98.18188477 519.23461914]
[90.01664734 506.64703369]
[82.57006073 493.62136841]
[75.86553955 480.19869995]
[69.92417908 466.42120361]
[64.76468658 452.33224487]
[60.40327835 437.97616577]
[56.85369110 423.39810181]
[54.12708664 408.64398193]
[52.23204041 393.76016235]
[51.17452621 378.79351807]
[50.95785904 363.79110718]
[51.58272934 348.80017090]
[53.04716492 333.86782837]
[55.34656525 319.04110718]
[58.47368622 304.36663818]
[62.41869736 289.89059448]
[67.16918182 275.65850830]
[72.71019745 261.71517944]
[79.02429962 248.10449219]
[86.09162903 234.86923218]
[93.88995361 222.05107117]
[102.39472198 209.69033813]
[111.57919312 197.82591248]
[121.41445923 186.49513245]
[131.86956787 175.73364258]
[142.91165161 165.57531738]
[133.39085388 153.98416138]
[123.87007904 142.39302063]
[114.34929657 130.80186462]
[104.82850647 119.21072388]
[110.01513672 133.28549194]
[105.58334351 147.61584473]
[93.35665131 156.30537415]
[78.36590576 155.77865601]
[66.77924347 146.25241089]
[63.36417007 131.64634705]
[69.52585602 117.97032166]
[82.72798157 110.85170746]
[67.82638550 112.56705475]
[52.92478943 114.28240204]
[50.16587830 129.14442444]
[43.14740372 142.53219604]
[32.49344254 153.25529480]
[19.15134239 160.36019897]
[4.30747080 163.21516418]
[-10.71826649 161.56634521]
[-24.58978844 155.56031799]
[-36.07365036 145.73117065]
[-44.14871597 132.95286560]
[-48.09695435 118.36168671]
[-47.56729126 103.25503540]
[-42.60682297 88.97619629]
[-33.65663147 76.79483795]
[-21.51256371 67.79411316]
[-7.25446033 62.77436829]
[7.84985828 62.18194580]
[22.45732689 66.06952667]
[35.26905823 74.09143066]
[45.14583969 85.53436279]
[51.20943832 99.38080597]
[66.11103821 97.66545868]
[81.01263428 95.95010376]
[67.11286926 90.31126404]
[53.21310425 84.67241669]
[39.31333923 79.03357697]
[25.41357422 73.39472961]
[11.51381016 67.75588989]
[-2.38595366 62.11704636]
[-16.28571701 56.47820282]
[-31.21843910 57.89730072]
[-46.21551895 57.60141373]
[-61.08064651 55.59441376]
[-75.61922455 51.90257645]
[-89.64094543 46.57422638]
[-102.96226501 39.67911148]
[-115.40879059 31.30749702]
[-126.81760406 21.56896400]
[-137.03935242 10.59099483]
[-145.94023132 -1.48270607]
[-153.40374756 -14.49409008]
[-159.33216858 -28.27283478]
[-163.64790344 -42.63857269]
[-166.29446411 -57.40325165]
[-167.23719788 -72.37359619]
[-166.46376038 -87.35364532]
[-163.98428345 -102.14730072]
[-159.83123779 -116.56090546]
[-154.05895996 -130.40579224]
[-146.74302673 -143.50071716]
[-137.97921753 -155.67427063]
[-127.88222504 -166.76710510]
[-116.58423615 -176.63398743]
[-104.23314667 -185.14578247]
[-90.99063110 -192.19105530]
[-77.03004456 -197.67758179]
[-62.53413010 -201.53353882]
[-47.69264221 -203.70846558]
[-32.69986343 -204.17387390]
[-17.75205612 -202.92369080]
[-3.04488444 -199.97425842]
[11.22912598 -195.36421204]
[24.88312531 -189.15386963]
[37.73838043 -181.42454529]
[49.62660980 -172.27742004]
[60.39219284 -161.83221436]
[69.89420319 -150.22567749]
[78.00826263 -137.60972595]
[84.62815094 -124.14952850]
[89.66722107 -110.02126312]
[93.05949402 -95.40988159]
[94.76057434 -80.50665283]
[94.74819183 -65.50665283]
[93.02251434 -50.60625076]
[89.60612488 -36.00049210]
[84.54698944 -21.88820267]
[86.58000183 -7.02661324]
[88.61301422 7.83497667]
[90.64603424 22.69656563]
[92.67904663 37.55815506]
[94.71206665 52.41974640]
[96.74507904 67.28133392]
[98.77809143 82.14292145]
[104.11898041 68.12597656]
[98.89599609 52.95692825]
[107.62042236 39.49349976]
[123.59963226 38.06367874]
[134.57574463 49.76430130]
[132.12881470 65.61965179]
[118.13593292 73.46685791]
[112.79504395 87.48381042]
[124.20220184 77.74333954]
[132.94657898 65.55581665]
[145.96533203 58.10515976]
[160.90303040 56.73938370]
[175.05706787 61.70558548]
[185.86662292 72.10526276]
[191.37600708 86.05684662]
[190.58840942 101.03615570]
[183.64633179 114.33306122]
[171.80577087 123.54180908]
[157.20898438 126.99632263]
[142.49687195 124.07159424]
[130.33201599 115.29762268]
[116.41965485 109.68994141]
[125.94043732 121.28108978]
[135.46122742 132.87223816]
[144.98200989 144.46337891]
[154.50279236 156.05451965]
[166.61267090 147.19621277]
[179.20019531 139.03083801]
[192.22575378 131.58410645]
[205.64836121 124.87943268]
[219.42579651 118.93791962]
[233.51469421 113.77826691]
[247.87072754 109.41670227]
[262.44873047 105.86695099]
[277.20285034 103.14018250]
[292.08663940 101.24497223]
[307.05328369 100.18728638]
[322.05566406 99.97045898]
[337.04663086 100.59516144]
[351.97897339 102.05943298]
[366.80572510 104.35866547]
[381.48022461 107.48562622]
[395.95632935 111.43047333]
[410.18844604 116.18080139]
[424.13183594 121.72165680]
[437.74261475 128.03561401]
[450.97793579 135.10279846]
[463.79617310 142.90097046]
[476.15701294 151.40560913]
[488.02154541 160.58995056]
[499.35244751 170.42507935]
[510.11404419 180.88008118]
[520.27252197 191.92204285]
[529.79583740 203.51622009]
[538.65411377 215.62612915]
[546.81945801 228.21368408]
[554.26611328 241.23927307]
[560.97076416 254.66191101]
[566.91223145 268.43936157]
[572.07177734 282.52825928]
[576.43328857 296.88430786]
[579.98303223 311.46234131]
[582.70971680 326.21646118]
[584.60485840 341.10025024]
[585.66253662 356.06689453]
[585.87927246 371.06930542]
[585.25451660 386.06027222]
[583.79022217 400.99261475]
[581.49090576 415.81933594]
[578.36389160 430.49383545]
[574.41900635 444.96990967]
[569.66864014 459.20202637]
[564.12768555 473.14538574]
[557.81372070 486.75613403]
[550.74645996 499.99145508]
[542.94824219 512.80963135]
[534.44354248 525.17047119]
[525.25921631 537.03497314]
[515.42401123 548.36578369]
[504.96896362 559.12738037]
[493.92697144 569.28576660]
[482.33276367 578.80908203]
[470.22280884 587.66729736]
[457.63522339 595.83258057]
[444.60961914 603.27923584]
[431.18695068 609.98382568]
[417.40948486 615.92523193]
[403.32055664 621.08477783]
[388.96447754 625.44622803]
[374.38644409 628.99584961]
[359.63232422 631.72253418]
[344.74850464 633.61761475]
[329.78186035 634.67517090]
[314.77944946 634.89190674]
[299.78851318 634.26708984]
[284.85617065 632.80273438]
[270.02944946 630.50335693]
[255.35494995 627.37628174]
[240.87889099 623.43133545]
[226.64680481 618.68090820]
[212.70346069 613.13995361]
[199.09274292 606.82592773]
[185.85745239 599.75860596]
[173.03927612 591.96032715]
[160.67849731 583.45562744]
[148.81404114 574.27117920]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[30 152]
[31 151]
[32 150]
[33 149]
[34 148]
[42 66]
[43 65]
[44 64]
[126 134]
[127 133]
] def

init

% Start Annotations
30 152 0.16 0.6 colorpair
31 151 0.0 0.6 colorpair
32 150 0.32 0.6 colorpair
33 149 0.16 0.6 colorpair
34 148 0.32 0.2 colorpair
42 66 0.48 0.2 colorpair
43 65 0.16 1 colorpair
44 64 0.32 1 colorpair
126 134 0.16 0.6 colorpair
127 133 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
30 152 1 gmark
152 cmark
31 151 1 gmark
32 150 1 gmark
32 cmark
150 cmark
33 149 1 gmark
33 cmark
149 cmark
34 148 2 gmark
34 cmark
148 cmark
42 66 2 gmark
42 cmark
66 cmark
43 cmark
44 cmark
64 cmark
126 134 1 gmark
126 cmark
127 133 2 gmark

% End Annotations
showpage
end
%%EOF
