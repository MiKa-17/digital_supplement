%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 17:55:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_________GAGGCA_AGCAUGCGGUUAAAGCAUGUGUUUCACUCGUUAACUGUUGUAUGUAUUACUAUUUUGUUAUUUAUCUGGAUGAUAAGAGACUCACUGUGUGAGUUGGCCAUCUACCAGGAAAAUAUCACGAUUUUGAUCAGGUUAGCUUGUGAGGUGA_____\
) } def
/len { sequence length } bind def

/coor [
[93.70687103 379.90603638]
[90.22151184 394.49548340]
[83.73130798 408.01870728]
[74.52950287 419.86465454]
[63.03185654 429.49813843]
[49.75784683 436.48388672]
[35.30722809 440.50628662]
[20.33290672 441.38357544]
[5.51144695 439.07611084]
[-8.48748398 433.68817139]
[-21.03138733 425.46316528]
[-31.55350494 414.77276611]
[-39.57842636 402.09991455]
[-44.74356842 388.01727295]
[-46.81556320 373.16107178]
[-45.70079041 358.20254517]
[-41.44961929 343.81756592]
[-34.25328064 330.65484619]
[-46.85844040 338.78564453]
[-59.46360016 346.91644287]
[-72.06876373 355.04724121]
[-84.67392731 363.17803955]
[-97.27908325 371.30886841]
[-99.05297852 386.84548950]
[-110.43413544 397.56945801]
[-126.04872131 398.41720581]
[-138.52400208 388.98846436]
[-141.96954346 373.73519897]
[-134.75845337 359.85952759]
[-120.29559326 353.91311646]
[-105.40988922 358.70370483]
[-92.80472565 350.57290649]
[-80.19956207 342.44207764]
[-67.59439850 334.31127930]
[-54.98924255 326.18048096]
[-42.38407898 318.04968262]
[-40.86893463 313.22552490]
[-37.11960602 309.12963867]
[-31.53708839 306.79418945]
[-23.87762070 293.89721680]
[-16.21815300 281.00021362]
[-8.55868530 268.10321045]
[-0.89921755 255.20620728]
[-4.81409979 240.88108826]
[2.76996708 227.69258118]
[17.82202339 223.68342590]
[25.48149109 210.78642273]
[33.14095688 197.88941956]
[40.80042648 184.99243164]
[48.45989609 172.09542847]
[56.11936188 159.19842529]
[63.77883148 146.30143738]
[49.61664963 130.28718567]
[42.11758423 110.26751709]
[42.27337265 88.88997650]
[50.06341553 68.98172760]
[38.43535614 59.50606155]
[26.80729675 50.03039551]
[10.76537800 50.22119904]
[0.72621286 37.70741653]
[4.39098978 22.08855247]
[18.94840622 15.34605980]
[33.23125458 22.65220261]
[36.28296280 38.40233612]
[47.91102219 47.87799835]
[59.53908157 57.35366440]
[69.62326050 49.67058945]
[81.12018585 44.32820511]
[93.49517059 41.57497787]
[106.17267609 41.53895187]
[118.56310272 44.22180557]
[130.09020996 49.49875641]
[139.34938049 37.69758224]
[141.78063965 22.06430054]
[155.72419739 16.82725143]
[164.98336792 5.02607775]
[174.24253845 -6.77509642]
[183.50170898 -18.57627106]
[192.76087952 -30.37744522]
[195.19215393 -46.01072693]
[209.13569641 -51.24777603]
[218.39486694 -63.04895020]
[227.65405273 -74.85012817]
[236.91322327 -86.65129852]
[246.17239380 -98.45247650]
[244.47338867 -113.93637085]
[254.03163147 -125.77254486]
[268.80361938 -127.29685211]
[278.06280518 -139.09802246]
[287.32196045 -150.89920044]
[281.71676636 -165.13047791]
[283.97259521 -180.15739441]
[293.38455200 -191.95915222]
[307.34664917 -197.42866516]
[322.07263184 -195.19027710]
[331.33181763 -206.99145508]
[340.59100342 -218.79261780]
[349.85015869 -230.59379578]
[359.10934448 -242.39497375]
[368.36849976 -254.19615173]
[377.62768555 -265.99731445]
[382.64791870 -282.19094849]
[399.59841919 -281.84976196]
[403.96292114 -265.46722412]
[389.42886353 -256.73815918]
[380.16967773 -244.93696594]
[370.91052246 -233.13580322]
[361.65133667 -221.33462524]
[352.39215088 -209.53344727]
[343.13299561 -197.73226929]
[333.87380981 -185.93110657]
[339.55175781 -172.16061401]
[337.56140137 -157.29809570]
[328.33801270 -145.34838867]
[314.27938843 -139.58193970]
[299.12313843 -141.64002991]
[289.86398315 -129.83885193]
[280.60479736 -118.03768158]
[282.63903809 -103.32722473]
[273.41702271 -91.22725677]
[257.97357178 -89.19329834]
[248.71438599 -77.39212799]
[239.45521545 -65.59095001]
[230.19604492 -53.78977966]
[220.93687439 -41.98860550]
[219.16789246 -27.19942093]
[204.56205750 -21.11827087]
[195.30288696 -9.31709766]
[186.04371643 2.48407674]
[176.78454590 14.28525066]
[167.52536011 26.08642578]
[165.75637817 40.87561035]
[151.15055847 46.95675659]
[141.89137268 58.75793076]
[149.63238525 68.49727631]
[155.15046692 79.64756775]
[158.19847107 91.70940399]
[158.63987732 104.14255524]
[156.45492554 116.39017487]
[151.74145508 127.90370941]
[144.71060181 138.16749573]
[135.67724609 146.72183228]
[125.04598999 153.18359375]
[113.29296112 157.26336670]
[100.94457245 158.77842712]
[88.55387878 157.66091919]
[76.67582703 153.96090698]
[69.01635742 166.85789490]
[61.35689163 179.75489807]
[53.69742584 192.65190125]
[46.03795624 205.54888916]
[38.37849045 218.44589233]
[30.71902084 231.34289551]
[34.40123367 246.47824097]
[26.44972229 259.44851685]
[11.99777985 262.86569214]
[4.33831215 275.76266479]
[-3.32115555 288.65966797]
[-10.98062325 301.55667114]
[-18.64009094 314.45367432]
[-5.75363350 306.77648926]
[8.46433067 301.99636841]
[23.37140656 300.32931519]
[38.29405975 301.85061646]
[52.55805969 306.49154663]
[65.51892853 314.04244995]
[76.59106445 324.16210938]
[85.27421570 336.39334106]
[91.17604828 350.18350220]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 36]
[19 35]
[20 34]
[21 33]
[22 32]
[23 31]
[39 160]
[40 159]
[41 158]
[42 157]
[43 156]
[46 153]
[47 152]
[48 151]
[49 150]
[50 149]
[51 148]
[52 147]
[56 66]
[57 65]
[58 64]
[72 134]
[73 133]
[75 131]
[76 130]
[77 129]
[78 128]
[79 127]
[81 125]
[82 124]
[83 123]
[84 122]
[85 121]
[88 118]
[89 117]
[90 116]
[95 111]
[96 110]
[97 109]
[98 108]
[99 107]
[100 106]
[101 105]
] def

init

% Start Annotations
18 36 0.0 0.2 colorpair
19 35 0.0 1 colorpair
20 34 0.0 1 colorpair
21 33 0.0 1 colorpair
22 32 0.0 1 colorpair
23 31 0.16 1 colorpair
39 160 0.0 0.2 colorpair
40 159 0.0 0.2 colorpair
41 158 0.0 0.2 colorpair
42 157 0.0 0.6 colorpair
43 156 0.0 0.6 colorpair
46 153 0.0 0.6 colorpair
47 152 0.16 0.6 colorpair
48 151 0.16 0.6 colorpair
49 150 0.0 0.6 colorpair
50 149 0.0 0.6 colorpair
51 148 0.0 0.6 colorpair
52 147 0.16 0.6 colorpair
56 66 0.0 1 colorpair
57 65 0.0 1 colorpair
58 64 0.0 1 colorpair
72 134 0.0 0.6 colorpair
73 133 0.0 0.6 colorpair
75 131 0.0 0.6 colorpair
76 130 0.0 0.6 colorpair
77 129 0.0 0.6 colorpair
78 128 0.16 0.6 colorpair
79 127 0.16 0.6 colorpair
81 125 0.16 0.6 colorpair
82 124 0.0 0.6 colorpair
83 123 0.0 0.6 colorpair
84 122 0.0 0.6 colorpair
85 121 0.0 1 colorpair
88 118 0.0 1 colorpair
89 117 0.0 1 colorpair
90 116 0.0 1 colorpair
95 111 0.0 1 colorpair
96 110 0.0 0.2 colorpair
97 109 0.16 1 colorpair
98 108 0.16 1 colorpair
99 107 0.0 0.2 colorpair
100 106 0.16 1 colorpair
101 105 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
18 36 2 gmark
23 cmark
39 160 2 gmark
40 159 2 gmark
41 158 2 gmark
42 157 1 gmark
43 156 1 gmark
46 153 1 gmark
47 152 1 gmark
152 cmark
48 151 1 gmark
151 cmark
49 150 1 gmark
50 149 1 gmark
51 148 1 gmark
52 147 1 gmark
52 cmark
147 cmark
72 134 1 gmark
73 133 1 gmark
75 131 1 gmark
76 130 1 gmark
77 129 1 gmark
78 128 1 gmark
128 cmark
79 127 1 gmark
127 cmark
81 125 1 gmark
125 cmark
82 124 1 gmark
83 123 1 gmark
84 122 1 gmark
96 110 2 gmark
97 cmark
109 cmark
98 cmark
108 cmark
99 107 2 gmark
100 cmark
106 cmark
101 cmark

% End Annotations
showpage
end
%%EOF
