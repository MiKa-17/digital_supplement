%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 17:50:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_________AAGGAGGCUAGAACGCCAAAAAAAACUCCGCUAGGAAGUGUGUUUAUGAUCUGCACGACGAUAGUGAUCUUCACCUGGAUGACCCGCGAUAAGCUCUGCGAAUUGCAAAUAAAAAAGGAAAAAAAAGAGAUGGCGGCAAAAUUAGCCUACAAACCAAA____\
) } def
/len { sequence length } bind def

/coor [
[-41.09955215 363.31240845]
[-52.10936737 353.12496948]
[-61.46525574 341.40032959]
[-68.95520782 328.40414429]
[-74.40950775 314.43093872]
[-77.70455933 299.79733276]
[-78.76570129 284.83489990]
[-77.56887817 269.88272095]
[-74.14121246 255.27960205]
[-68.56037903 241.35644531]
[-60.95283890 228.42875671]
[-51.49097824 216.78945923]
[-40.38919830 206.70231628]
[-27.89907074 198.39588928]
[-14.30361748 192.05841064]
[0.08908864 187.83348083]
[14.95290947 185.81683350]
[29.95103073 186.05418396]
[44.74359894 188.54014587]
[58.99541092 193.21836853]
[72.38352203 199.98286438]
[84.60456848 208.68034363]
[95.38160706 219.11372375]
[104.46978760 231.04559326]
[103.10180664 216.10809326]
[101.73383331 201.17060852]
[100.36585236 186.23310852]
[98.99787903 171.29562378]
[86.00576019 169.91589355]
[73.48349762 166.18870544]
[61.85153580 160.23922729]
[51.50041962 152.26721191]
[42.77768707 142.54029846]
[35.97620392 131.38508606]
[31.32433701 119.17612457]
[28.97826958 106.32331085]
[29.01677322 93.25819397]
[31.43855667 80.41942596]
[17.52851868 74.80597687]
[3.61848116 69.19252014]
[-10.29155636 63.57906723]
[-24.20159340 57.96561432]
[-38.11162949 52.35216141]
[-52.02166748 46.73870850]
[-65.93170929 41.12525558]
[-79.84174347 35.51180267]
[-93.75177765 29.89834785]
[-105.00450897 40.21042633]
[-119.61958313 44.61069107]
[-134.69517517 42.22546768]
[-147.23800659 33.52834702]
[-154.75770569 20.24614143]
[-155.76121521 5.01604939]
[-150.04930115 -9.13798618]
[-138.75605774 -19.40567017]
[-124.12376404 -23.74834824]
[-109.05767822 -21.30377769]
[-96.54918671 -12.55732822]
[-89.08185577 0.75438482]
[-88.13832855 15.98831081]
[-74.22828674 21.60176468]
[-60.31825256 27.21521759]
[-46.40821457 32.82867050]
[-32.49817657 38.44212341]
[-18.58814049 44.05557632]
[-4.67810297 49.66903305]
[9.23193455 55.28248596]
[23.14197159 60.89593887]
[37.05200958 66.50939178]
[43.49707794 56.50873566]
[51.51531219 47.71897507]
[60.88347244 40.38483429]
[71.34072876 34.71051788]
[82.59591675 30.85400772]
[94.33567810 28.92267609]
[106.23314667 28.97030067]
[117.95706940 30.99555206]
[129.18103027 34.94204330]
[139.59251404 40.69989395]
[149.18762207 29.17018700]
[158.78271484 17.64048004]
[161.66305542 2.08367419]
[175.75160217 -2.74976468]
[185.34669495 -14.27947235]
[194.94178772 -25.80917931]
[204.53689575 -37.33888626]
[203.28437805 -52.86528397]
[213.17941284 -64.42135620]
[227.98918152 -65.51975250]
[237.58427429 -77.04945374]
[246.42320251 -89.16858673]
[254.46986389 -101.82762909]
[262.51651001 -114.48667145]
[270.56317139 -127.14571381]
[278.60980225 -139.80476379]
[286.65646362 -152.46380615]
[294.70312500 -165.12284851]
[302.74978638 -177.78189087]
[299.06924438 -193.15164185]
[307.40585327 -206.57833862]
[322.81365967 -210.09617615]
[336.15148926 -201.61805725]
[339.50619507 -186.17393494]
[330.88757324 -172.92649841]
[315.40881348 -169.73524475]
[307.36215210 -157.07620239]
[299.31552124 -144.41714478]
[291.26885986 -131.75810242]
[283.22219849 -119.09906769]
[275.17556763 -106.44001770]
[267.12890625 -93.78097534]
[259.08224487 -81.12193298]
[273.76318359 -84.19927216]
[287.05947876 -77.25601959]
[292.92401123 -63.44995880]
[288.68960571 -49.06003952]
[276.28204346 -40.63075638]
[261.34426880 -41.99572754]
[250.66995239 -52.53416443]
[249.11398315 -67.45436096]
[239.51889038 -55.92465591]
[241.12876892 -41.16173172]
[231.56222534 -29.33228302]
[216.06658936 -27.74379158]
[206.47149658 -16.21408272]
[196.87640381 -4.68437672]
[187.28131104 6.84533072]
[185.08726501 21.57745361]
[170.31242371 27.23557472]
[160.71733093 38.76528168]
[151.12222290 50.29499054]
[162.46549988 65.61786652]
[169.34312439 83.39873505]
[171.26338196 102.36642456]
[168.08903503 121.16493225]
[160.04698181 138.45036316]
[147.71217346 152.98696899]
[131.96641541 163.73553467]
[113.93536377 169.92764282]
[115.30334473 184.86514282]
[116.67131805 199.80262756]
[118.03929901 214.74012756]
[119.40727234 229.67761230]
[125.89789581 243.20062256]
[136.69644165 253.61174011]
[147.49499512 264.02285767]
[158.29354858 274.43395996]
[169.09210205 284.84506226]
[184.69136047 291.48583984]
[182.62843323 308.31381226]
[165.88702393 310.98992920]
[158.68098450 295.64361572]
[147.88243103 285.23251343]
[137.08389282 274.82141113]
[126.28533173 264.41027832]
[115.48677826 253.99917603]
[119.11133575 268.55468750]
[120.50996399 283.48931885]
[119.65097809 298.46472168]
[116.55384064 313.14147949]
[111.28872681 327.18707275]
[103.97496033 340.28320312]
[94.77825165 352.13314819]
[83.90701294 362.46832275]
[71.60757446 371.05459595]
[58.15864944 377.69735718]
[43.86498642 382.24609375]
[29.05047607 384.59777832]
[14.05081749 384.69906616]
[-0.79409748 382.54766846]
[-15.14788532 378.19235229]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[24 143]
[25 142]
[26 141]
[27 140]
[28 139]
[38 69]
[39 68]
[40 67]
[41 66]
[42 65]
[43 64]
[44 63]
[45 62]
[46 61]
[47 60]
[79 131]
[80 130]
[81 129]
[83 127]
[84 126]
[85 125]
[86 124]
[89 121]
[90 120]
[91 112]
[92 111]
[93 110]
[94 109]
[95 108]
[96 107]
[97 106]
[98 105]
[144 156]
[145 155]
[146 154]
[147 153]
[148 152]
] def

init

% Start Annotations
24 143 0.0 1 colorpair
25 142 0.0 1 colorpair
26 141 0.0 1 colorpair
27 140 0.0 1 colorpair
28 139 0.0 0.2 colorpair
38 69 0.16 1 colorpair
39 68 0.0 1 colorpair
40 67 0.0 0.2 colorpair
41 66 0.0 1 colorpair
42 65 0.16 1 colorpair
43 64 0.16 1 colorpair
44 63 0.0 0.2 colorpair
45 62 0.0 0.2 colorpair
46 61 0.16 1 colorpair
47 60 0.0 0.2 colorpair
79 131 0.0 1 colorpair
80 130 0.0 0.2 colorpair
81 129 0.16 1 colorpair
83 127 0.0 1 colorpair
84 126 0.0 0.2 colorpair
85 125 0.16 1 colorpair
86 124 0.16 1 colorpair
89 121 0.0 1 colorpair
90 120 0.16 1 colorpair
91 112 0.16 1 colorpair
92 111 0.16 1 colorpair
93 110 0.0 0.2 colorpair
94 109 0.0 1 colorpair
95 108 0.16 1 colorpair
96 107 0.16 1 colorpair
97 106 0.0 1 colorpair
98 105 0.0 0.2 colorpair
144 156 0.16 1 colorpair
145 155 0.0 1 colorpair
146 154 0.0 1 colorpair
147 153 0.0 0.2 colorpair
148 152 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
28 139 2 gmark
38 cmark
40 67 2 gmark
42 cmark
65 cmark
43 cmark
64 cmark
44 63 2 gmark
45 62 2 gmark
46 cmark
47 60 2 gmark
80 130 2 gmark
81 cmark
129 cmark
84 126 2 gmark
125 cmark
86 cmark
124 cmark
90 cmark
120 cmark
91 cmark
92 cmark
111 cmark
93 110 2 gmark
108 cmark
96 cmark
98 105 2 gmark
156 cmark
147 153 2 gmark
148 cmark

% End Annotations
showpage
end
%%EOF
