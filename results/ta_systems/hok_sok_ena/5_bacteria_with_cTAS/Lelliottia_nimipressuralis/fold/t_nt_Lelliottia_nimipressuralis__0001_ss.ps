%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 17:50:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__AGAACGCCAAAAAAAACUCCGCUAGGAAGUGUGUUUAUGAUCUGCACGACGAUAGUGAUCUUCACCUGGAUGACCCGCGAUAAGCUCUGCGAAUUGCAAAUAAAAAAGGAAAAAAAAGAGAUGGCGGCAAAAUUAGCCUACAAACCAAAACAA__\
) } def
/len { sequence length } bind def

/coor [
[146.10273743 304.39978027]
[139.97590637 292.91864014]
[137.04658508 280.22509766]
[137.52374268 267.19308472]
[141.38151550 254.72181702]
[148.36053467 243.67366028]
[157.98535156 234.81443787]
[151.36216736 221.35585022]
[144.73898315 207.89727783]
[138.11579895 194.43869019]
[131.49261475 180.98010254]
[124.86943817 167.52153015]
[112.80618286 170.80711365]
[100.35630798 171.95497131]
[87.89566803 170.93046570]
[75.80047607 167.76449585]
[64.43587494 162.55268860]
[54.14499283 155.45234680]
[45.23850250 146.67787170]
[37.98530579 136.49414062]
[32.60437775 125.20863342]
[29.25817871 113.16205597]
[14.30559731 114.35380554]
[-0.64698553 115.54556274]
[-15.59956837 116.73731232]
[-30.55215073 117.92906952]
[-45.50473404 119.12081909]
[-60.45731735 120.31256866]
[-75.40989685 121.50432587]
[-90.36248016 122.69607544]
[-105.31506348 123.88783264]
[-110.77590179 138.14062500]
[-121.88589478 148.60632324]
[-136.43913269 153.20695496]
[-151.54606628 151.02908325]
[-164.20721436 142.50509644]
[-171.90867615 129.32745361]
[-173.12133789 114.11258698]
[-167.60441589 99.88141632]
[-156.45329285 89.45954895]
[-141.88204956 84.91625214]
[-126.78380585 87.15360260]
[-114.15632629 95.72737885]
[-106.50681305 108.93524933]
[-91.55423737 107.74349213]
[-76.60165405 106.55174255]
[-61.64906693 105.35999298]
[-46.69648743 104.16823578]
[-31.74390411 102.97648621]
[-16.79132080 101.78472900]
[-1.83873808 100.59297943]
[13.11384487 99.40122986]
[28.06642723 98.20947266]
[29.60703468 85.08439636]
[33.52198410 72.46241760]
[39.67922974 60.76927567]
[47.87108612 50.39938354]
[57.82124329 41.70251083]
[69.19408417 34.97200394]
[81.60600281 30.43488121]
[94.63834381 28.24418068]
[107.85153961 28.47379303]
[120.79990387 31.11597443]
[126.60897064 17.28648567]
[132.41802979 3.45699835]
[130.62892151 -12.26272297]
[142.69134521 -21.00039864]
[148.50041199 -34.82988739]
[154.30947876 -48.65937424]
[160.11854553 -62.48886108]
[154.38568115 -76.97237396]
[160.47390747 -90.91468811]
[174.31704712 -96.29084015]
[180.12611389 -110.12033081]
[184.95947266 -124.32028198]
[188.79373169 -138.82196045]
[192.62797546 -153.32362366]
[196.46221924 -167.82530212]
[200.29647827 -182.32698059]
[204.13072205 -196.82864380]
[207.96498108 -211.33032227]
[211.79922485 -225.83200073]
[203.63612366 -239.36489868]
[207.51420593 -254.68598938]
[221.13264465 -262.70556641]
[236.41189575 -258.66571045]
[244.28701782 -244.96324158]
[240.08586121 -229.72756958]
[226.30090332 -221.99774170]
[222.46664429 -207.49607849]
[218.63240051 -192.99440002]
[214.79815674 -178.49272156]
[210.96389771 -163.99105835]
[207.12965393 -149.48937988]
[203.29539490 -134.98770142]
[199.46115112 -120.48603058]
[212.58482361 -127.75025940]
[227.33865356 -125.04384613]
[237.02955627 -113.59453583]
[237.26124573 -98.59632874]
[227.92863464 -86.85314941]
[213.26544189 -83.69229126]
[199.92364502 -90.54767609]
[193.95561218 -104.31126404]
[188.14654541 -90.48177338]
[193.99819946 -76.83283234]
[188.30398560 -62.72500992]
[173.94804382 -56.67979431]
[168.13897705 -42.85030746]
[162.32991028 -29.02082062]
[156.52084351 -15.19133186]
[158.72546387 -0.46078837]
[146.24752808 9.26606560]
[140.43846130 23.09555435]
[134.62939453 36.92504120]
[149.66627502 47.93363571]
[161.37173462 62.43465042]
[168.96060181 79.45540619]
[171.92385864 97.85421753]
[170.06271362 116.39695740]
[163.50204468 133.83985901]
[152.68188477 149.01289368]
[138.32801819 160.89834595]
[144.95120239 174.35691833]
[151.57438660 187.81550598]
[158.19757080 201.27409363]
[164.82075500 214.73266602]
[171.44392395 228.19125366]
[188.50808716 225.98536682]
[205.28044128 229.71316528]
[219.76226807 238.91331482]
[230.23365784 252.47340393]
[235.45767212 268.76440430]
[234.82656860 285.83630371]
[228.43235779 301.65164185]
[217.05386353 314.32861328]
[224.46760559 327.36840820]
[231.88134766 340.40823364]
[239.29508972 353.44802856]
[246.70881653 366.48782349]
[254.12255859 379.52764893]
[261.53628540 392.56744385]
[268.95004272 405.60723877]
[282.03472900 416.38812256]
[275.29736328 431.94589233]
[258.48251343 429.77865601]
[255.91023254 413.02099609]
[248.49649048 399.98117065]
[241.08274841 386.94137573]
[233.66902161 373.90158081]
[226.25527954 360.86175537]
[218.84153748 347.82196045]
[211.42779541 334.78216553]
[204.01406860 321.74234009]
[191.42823792 324.77429199]
[178.47352600 324.42440796]
[166.04374695 320.70977783]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 128]
[8 127]
[9 126]
[10 125]
[11 124]
[12 123]
[22 53]
[23 52]
[24 51]
[25 50]
[26 49]
[27 48]
[28 47]
[29 46]
[30 45]
[31 44]
[63 115]
[64 114]
[65 113]
[67 111]
[68 110]
[69 109]
[70 108]
[73 105]
[74 104]
[75 96]
[76 95]
[77 94]
[78 93]
[79 92]
[80 91]
[81 90]
[82 89]
[136 154]
[137 153]
[138 152]
[139 151]
[140 150]
[141 149]
[142 148]
[143 147]
] def

init

% Start Annotations
7 128 0.16 1 colorpair
8 127 0.0 1 colorpair
9 126 0.0 1 colorpair
10 125 0.0 1 colorpair
11 124 0.0 1 colorpair
12 123 0.0 0.6 colorpair
22 53 0.16 1 colorpair
23 52 0.0 1 colorpair
24 51 0.0 0.6 colorpair
25 50 0.0 1 colorpair
26 49 0.16 1 colorpair
27 48 0.16 1 colorpair
28 47 0.0 0.6 colorpair
29 46 0.0 0.6 colorpair
30 45 0.16 1 colorpair
31 44 0.0 0.6 colorpair
63 115 0.0 1 colorpair
64 114 0.0 0.6 colorpair
65 113 0.16 1 colorpair
67 111 0.0 1 colorpair
68 110 0.0 0.6 colorpair
69 109 0.16 1 colorpair
70 108 0.16 1 colorpair
73 105 0.0 1 colorpair
74 104 0.16 1 colorpair
75 96 0.16 1 colorpair
76 95 0.16 1 colorpair
77 94 0.0 0.6 colorpair
78 93 0.0 1 colorpair
79 92 0.16 1 colorpair
80 91 0.16 1 colorpair
81 90 0.0 1 colorpair
82 89 0.0 0.6 colorpair
136 154 0.16 1 colorpair
137 153 0.16 1 colorpair
138 152 0.0 0.6 colorpair
139 151 0.0 0.6 colorpair
140 150 0.16 1 colorpair
141 149 0.0 1 colorpair
142 148 0.0 0.6 colorpair
143 147 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
7 cmark
12 123 1 gmark
22 cmark
24 51 1 gmark
26 cmark
49 cmark
27 cmark
48 cmark
28 47 1 gmark
29 46 1 gmark
30 cmark
31 44 1 gmark
64 114 1 gmark
65 cmark
113 cmark
68 110 1 gmark
109 cmark
70 cmark
108 cmark
74 cmark
104 cmark
75 cmark
76 cmark
95 cmark
77 94 1 gmark
92 cmark
80 cmark
82 89 1 gmark
154 cmark
137 cmark
153 cmark
138 152 1 gmark
139 151 1 gmark
140 cmark
150 cmark
142 148 1 gmark
143 147 1 gmark

% End Annotations
showpage
end
%%EOF
