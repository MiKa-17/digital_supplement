%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 17:50:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_________AAGGAGGCUAGAACGCCAA_AAAAUACGCCGCAGGCAGAAUAGUU_AUGAUCUGUAUGACGAUACUGAUAUUCACCUGGAUGAAUCGCGGCAAGCUAUGCGAACUCACAAUAAAAAAGAAACAAAAAGAACUGGCGGCAAAAUUAGCCUACGAAGCAG_____________________________\
) } def
/len { sequence length } bind def

/coor [
[-86.41349792 612.02429199]
[-96.42890930 600.85778809]
[-105.36179352 588.80773926]
[-113.13464355 575.97875977]
[-119.68000793 562.48217773]
[-124.94108582 548.43505859]
[-128.87222290 533.95935059]
[-131.43931580 519.18066406]
[-132.62008667 504.22717285]
[-132.40429688 489.22872925]
[-130.79379272 474.31546021]
[-127.80256653 459.61672974]
[-123.45658112 445.26010132]
[-117.79353333 431.37017822]
[-110.86257935 418.06747437]
[-102.72384644 405.46743774]
[-93.44797516 393.67938232]
[-83.11544037 382.80563354]
[-71.81591797 372.94049072]
[-59.64744949 364.16961670]
[-46.71562576 356.56909180]
[-33.13267136 350.20486450]
[-19.01644516 345.13217163]
[-4.48944092 341.39505005]
[10.32228088 339.02587891]
[25.29019356 338.04525757]
[40.28441238 338.46170044]
[55.17482376 340.27157593]
[69.83222198 343.45916748]
[84.12940979 347.99682617]
[97.94232941 353.84518433]
[111.15111542 360.95349121]
[123.64115143 369.26004028]
[135.30404663 378.69277954]
[146.04589844 389.17767334]
[143.66395569 374.36801147]
[134.00378418 363.03088379]
[139.45147705 348.17715454]
[137.06953430 333.36749268]
[134.68759155 318.55783081]
[132.30563354 303.74813843]
[129.92369080 288.93847656]
[127.54173279 274.12881470]
[125.15979004 259.31915283]
[122.77783966 244.50947571]
[120.39588928 229.69979858]
[118.01393890 214.89013672]
[115.16093445 200.16395569]
[111.83978271 185.53623962]
[108.51862335 170.90852356]
[105.19747162 156.28082275]
[101.87631989 141.65310669]
[98.55516815 127.02539825]
[95.23400879 112.39768219]
[86.88803101 99.93395233]
[74.62748718 91.29224396]
[58.89008331 89.66600800]
[52.94476318 76.00942230]
[40.68421936 67.36771393]
[28.42367744 58.72600937]
[16.16313362 50.08430481]
[3.33627462 58.24151611]
[-11.63669109 60.86425018]
[-26.47249603 57.55255127]
[-38.90878677 48.81143570]
[-47.04912186 35.97385788]
[-49.65215302 20.99745560]
[-46.32094574 6.16601944]
[-37.56347656 -6.25876236]
[-24.71520042 -14.38220119]
[-9.73538685 -16.96553230]
[5.09165382 -13.61481476]
[17.50490570 -4.84101009]
[25.61143494 8.01794052]
[28.17505836 23.00114059]
[24.80484009 37.82376099]
[37.06538391 46.46546555]
[49.32592392 55.10717392]
[61.58646774 63.74887848]
[76.44691467 64.75700378]
[83.26919556 79.03170013]
[95.52973938 87.67340851]
[109.57508087 82.40574646]
[123.61918640 77.13856506]
[127.17317963 62.56567383]
[130.72717285 47.99278259]
[134.28115845 33.41989136]
[126.33462524 20.02249336]
[130.14646912 5.29413843]
[142.96781921 -2.19910836]
[146.52180481 -16.77199936]
[150.07580566 -31.34488869]
[145.82852173 -46.58533478]
[156.36102295 -57.11699295]
[159.91500854 -71.68988037]
[163.46900940 -86.26277161]
[167.02299500 -100.83566284]
[170.57699585 -115.40855408]
[174.13098145 -129.98144531]
[177.68498230 -144.55433655]
[181.23896790 -159.12722778]
[184.79296875 -173.70011902]
[188.34695435 -188.27301025]
[191.90093994 -202.84590149]
[189.77958679 -219.66659546]
[205.35566711 -226.36149597]
[216.10083008 -213.24745178]
[206.47383118 -199.29190063]
[202.91984558 -184.71900940]
[199.36584473 -170.14611816]
[195.81185913 -155.57322693]
[192.25787354 -141.00033569]
[188.70387268 -126.42745209]
[185.14988708 -111.85456085]
[181.59588623 -97.28166962]
[178.04190063 -82.70877838]
[174.48789978 -68.13588715]
[170.93391418 -53.56299973]
[175.43539429 -39.36490250]
[164.64869690 -27.79089737]
[161.09469604 -13.21800613]
[157.54071045 1.35488403]
[165.47285461 13.90942955]
[162.07620239 28.73904037]
[148.85404968 36.97388458]
[145.30006409 51.54677582]
[141.74606323 66.11966705]
[138.19207764 80.69255829]
[109.86172485 109.07653046]
[113.18287659 123.70423889]
[116.50402832 138.33195496]
[119.82518768 152.95967102]
[123.14633942 167.58737183]
[126.46749115 182.21508789]
[129.78865051 196.84280396]
[132.86994934 199.93920898]
[134.62225342 203.49868774]
[135.06370544 207.04429626]
[134.36613464 210.15438843]
[132.82360840 212.50817871]
[135.20555115 227.31785583]
[137.58750916 242.12751770]
[139.96945190 256.93719482]
[142.35140991 271.74685669]
[144.73335266 286.55651855]
[147.11531067 301.36621094]
[149.49725342 316.17587280]
[151.87921143 330.98553467]
[154.26115417 345.79519653]
[164.09170532 358.19161987]
[158.47361755 371.98605347]
[160.85557556 386.79571533]
[169.29421997 374.39453125]
[184.29115295 374.09164429]
[193.22367859 386.14193726]
[188.57339478 400.40289307]
[174.25430298 404.87124634]
[187.73155212 411.45635986]
[201.20880127 418.04147339]
[214.68605042 424.62658691]
[231.57162476 426.14758301]
[234.78448486 442.79431152]
[219.67771912 450.48989868]
[208.10092163 438.10385132]
[194.62367249 431.51870728]
[181.14642334 424.93359375]
[167.66918945 418.34848022]
[174.57328796 431.66513062]
[180.20829773 445.56646729]
[184.52529907 459.93182373]
[187.48686218 474.63653564]
[189.06727600 489.55307007]
[189.25280762 504.55191040]
[188.04187012 519.50292969]
[185.44496155 534.27642822]
[181.48461914 548.74420166]
[176.19520569 562.78063965]
[169.62261963 576.26403809]
[161.82391357 589.07727051]
[152.86672974 601.10925293]
[142.82881165 612.25561523]
[131.79725647 622.41949463]
[119.86779022 631.51275635]
[107.14394379 639.45654297]
[93.73611450 646.18188477]
[79.76065063 651.63043213]
[65.33882904 655.75488281]
[50.59579468 658.51947021]
[35.65947342 659.90014648]
[20.65948296 659.88500977]
[5.72597933 658.47418213]
[-9.01144886 655.67987061]
[-23.42491913 651.52630615]
[-37.38935852 646.04962158]
[-50.78358841 639.29724121]
[-63.49138641 631.32781982]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[35 152]
[36 151]
[38 149]
[39 148]
[40 147]
[41 146]
[42 145]
[43 144]
[44 143]
[45 142]
[46 141]
[47 140]
[48 135]
[49 134]
[50 133]
[51 132]
[52 131]
[53 130]
[54 129]
[55 82]
[56 81]
[58 79]
[59 78]
[60 77]
[61 76]
[84 128]
[85 127]
[86 126]
[87 125]
[90 122]
[91 121]
[92 120]
[94 118]
[95 117]
[96 116]
[97 115]
[98 114]
[99 113]
[100 112]
[101 111]
[102 110]
[103 109]
[104 108]
[157 167]
[158 166]
[159 165]
[160 164]
] def

init

% Start Annotations
35 152 0.0 1 colorpair
36 151 0.16 1 colorpair
38 149 0.16 1 colorpair
39 148 0.0 0.2 colorpair
40 147 0.0 1 colorpair
41 146 0.0 1 colorpair
42 145 0.0 0.2 colorpair
43 144 0.0 1 colorpair
44 143 0.0 0.2 colorpair
45 142 0.16 1 colorpair
46 141 0.0 1 colorpair
47 140 0.16 1 colorpair
48 135 0.0 0.2 colorpair
49 134 0.0 0.2 colorpair
50 133 0.16 1 colorpair
51 132 0.0 0.2 colorpair
52 131 0.0 1 colorpair
53 130 0.0 1 colorpair
54 129 0.0 1 colorpair
55 82 0.0 0.2 colorpair
56 81 0.0 1 colorpair
58 79 0.16 1 colorpair
59 78 0.0 1 colorpair
60 77 0.0 1 colorpair
61 76 0.16 1 colorpair
84 128 0.0 0.2 colorpair
85 127 0.0 0.2 colorpair
86 126 0.16 1 colorpair
87 125 0.16 1 colorpair
90 122 0.0 1 colorpair
91 121 0.16 1 colorpair
92 120 0.16 1 colorpair
94 118 0.0 1 colorpair
95 117 0.0 0.2 colorpair
96 116 0.0 0.2 colorpair
97 115 0.0 0.2 colorpair
98 114 0.0 1 colorpair
99 113 0.0 1 colorpair
100 112 0.16 1 colorpair
101 111 0.0 0.2 colorpair
102 110 0.0 0.2 colorpair
103 109 0.16 1 colorpair
104 108 0.16 1 colorpair
157 167 0.16 0.6 colorpair
158 166 0.16 1 colorpair
159 165 0.16 1 colorpair
160 164 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
36 cmark
151 cmark
38 cmark
149 cmark
39 148 2 gmark
42 145 2 gmark
44 143 2 gmark
45 cmark
47 cmark
140 cmark
48 135 2 gmark
49 134 2 gmark
133 cmark
51 132 2 gmark
55 82 2 gmark
58 cmark
79 cmark
61 cmark
84 128 2 gmark
85 127 2 gmark
126 cmark
87 cmark
125 cmark
91 cmark
121 cmark
92 cmark
95 117 2 gmark
96 116 2 gmark
97 115 2 gmark
100 cmark
112 cmark
101 111 2 gmark
102 110 2 gmark
109 cmark
104 cmark
157 167 1 gmark
157 cmark
167 cmark
166 cmark
159 cmark
165 cmark

% End Annotations
showpage
end
%%EOF
