%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 15:14:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAGAAUGCCGCGAAAAUUCGCGUUGUCCAGUAAAAUUGUGAUUUGUAUCACAAUUUUACUUUUCACCUUGCUGAUACGUGAUUCACUGUGUGAGUUACGUAUCAAACAAGGUAACACGGAGGUAGCGGUGUUCCUGAACUACGAACUUAAGAG\
) } def
/len { sequence length } bind def

/coor [
[186.46574402 429.07980347]
[198.82160950 420.35125732]
[194.35905457 406.03042603]
[189.89651489 391.70962524]
[185.43397522 377.38879395]
[180.82745361 363.11364746]
[176.07743835 348.88562012]
[171.32740784 334.65756226]
[166.57739258 320.42950439]
[161.82737732 306.20147705]
[157.07734680 291.97341919]
[152.32733154 277.74536133]
[147.57731628 263.51733398]
[134.01567078 261.66387939]
[122.52726746 254.10157776]
[115.39442444 242.26426697]
[114.06363678 228.44163513]
[118.85260773 215.33641052]
[128.87678528 205.53585815]
[124.41424561 191.21504211]
[119.95169830 176.89422607]
[115.48915100 162.57341003]
[104.31578827 152.72428894]
[107.59716034 137.24710083]
[103.13461304 122.92629242]
[98.67206573 108.60548401]
[95.40759277 110.92608643]
[91.01177216 112.00462341]
[85.93173981 111.45383453]
[80.72816467 109.03810120]
[76.02645111 104.70346832]
[61.70564270 100.24092102]
[47.38482666 95.77837372]
[33.06401443 91.31583405]
[18.74320221 86.85328674]
[4.42238951 82.39073944]
[-9.89842319 77.92819214]
[-24.21923637 73.46564484]
[-38.54005051 69.00310516]
[-52.86086273 64.54055786]
[-67.18167877 60.07801056]
[-81.50248718 55.61546326]
[-95.82330322 51.15291977]
[-110.14411163 46.69037247]
[-126.01493835 50.81941605]
[-137.33192444 38.95106125]
[-132.45312500 23.29445267]
[-116.39743805 19.95576859]
[-105.68157196 32.36956024]
[-91.36075592 36.83210373]
[-77.03993988 41.29465103]
[-62.71913147 45.75719833]
[-48.39831543 50.21974182]
[-34.07750320 54.68228912]
[-19.75669098 59.14483261]
[-5.43587780 63.60737991]
[8.88493538 68.06992340]
[23.20574760 72.53247070]
[37.52656174 76.99501801]
[51.84737396 81.45756531]
[66.16819000 85.92011261]
[80.48899841 90.38265228]
[70.62034607 79.08621216]
[74.11388397 64.49871063]
[88.02915955 58.89825439]
[100.65386963 66.99867249]
[101.36193085 81.98202515]
[108.59882355 68.84324646]
[115.83571625 55.70447159]
[123.07260895 42.56569672]
[130.30949402 29.42692184]
[137.54638672 16.28814697]
[136.72506714 -2.08111453]
[152.03297424 -10.61207104]
[159.00382996 -23.89391136]
[165.97467041 -37.17575073]
[172.94552612 -50.45759201]
[179.91636658 -63.73943329]
[186.88722229 -77.02127075]
[193.85806274 -90.30311584]
[200.82891846 -103.58495331]
[207.79975891 -116.86679077]
[214.77061462 -130.14863586]
[221.74145508 -143.43048096]
[228.71231079 -156.71231079]
[235.68315125 -169.99415588]
[242.65399170 -183.27600098]
[249.62484741 -196.55783081]
[251.63189697 -213.39256287]
[268.36431885 -216.12426758]
[275.62127686 -200.80197144]
[262.90667725 -189.58699036]
[255.93583679 -176.30514526]
[248.96499634 -163.02330017]
[241.99414062 -149.74147034]
[235.02330017 -136.45962524]
[228.05244446 -123.17778778]
[221.08160400 -109.89594269]
[214.11074829 -96.61410522]
[207.13990784 -83.33226776]
[200.16905212 -70.05042267]
[193.19821167 -56.76858521]
[186.22735596 -43.48674393]
[179.25651550 -30.20490456]
[172.28567505 -16.92306328]
[165.31481934 -3.64122295]
[168.61308289 8.03431511]
[162.86695862 19.17362785]
[150.68516541 23.52503967]
[143.44827271 36.66381454]
[136.21138000 49.80258942]
[128.97448730 62.94136429]
[121.73760223 76.08013916]
[114.50070953 89.21891022]
[112.99288177 104.14293671]
[117.45542145 118.46374512]
[121.91796875 132.78456116]
[133.41052246 143.65800476]
[129.80996704 158.11087036]
[134.27250671 172.43168640]
[138.73506165 186.75248718]
[143.19760132 201.07330322]
[159.34004211 204.52507019]
[171.48094177 215.57075500]
[176.38261414 231.13722229]
[172.80224609 246.96356201]
[161.80535889 258.76730347]
[166.55537415 272.99536133]
[171.30540466 287.22338867]
[176.05541992 301.45144653]
[180.80543518 315.67950439]
[185.55546570 329.90753174]
[190.30548096 344.13558960]
[195.05549622 358.36364746]
[200.77320862 365.56240845]
[199.75477600 372.92626953]
[204.21733093 387.24707031]
[208.67987061 401.56790161]
[213.14242554 415.88870239]
[228.26948547 416.05325317]
[242.60469055 420.88616943]
[254.74360657 429.91400146]
[263.49697876 442.25228882]
[268.00729370 456.69226074]
[267.83261108 471.81921387]
[262.99008179 486.15118408]
[253.95410156 498.28402710]
[241.60995483 507.02914429]
[227.16697693 511.52978516]
[212.04013062 511.34497070]
[197.71142578 506.49282837]
[185.58462524 497.44873047]
[176.84777832 485.09872437]
[172.35684204 470.65270996]
[172.55178833 455.52603149]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 139]
[3 138]
[4 137]
[5 136]
[6 134]
[7 133]
[8 132]
[9 131]
[10 130]
[11 129]
[12 128]
[13 127]
[19 122]
[20 121]
[21 120]
[22 119]
[24 117]
[25 116]
[26 115]
[31 62]
[32 61]
[33 60]
[34 59]
[35 58]
[36 57]
[37 56]
[38 55]
[39 54]
[40 53]
[41 52]
[42 51]
[43 50]
[44 49]
[67 114]
[68 113]
[69 112]
[70 111]
[71 110]
[72 109]
[74 106]
[75 105]
[76 104]
[77 103]
[78 102]
[79 101]
[80 100]
[81 99]
[82 98]
[83 97]
[84 96]
[85 95]
[86 94]
[87 93]
[88 92]
] def

init

% Start Annotations
2 139 0.0 1 colorpair
3 138 0.0 1 colorpair
4 137 0.0 1 colorpair
5 136 0.0 1 colorpair
6 134 0.0 1 colorpair
7 133 0.0 1 colorpair
8 132 0.0 1 colorpair
9 131 0.0 1 colorpair
10 130 0.0 1 colorpair
11 129 0.0 1 colorpair
12 128 0.0 1 colorpair
13 127 0.0 1 colorpair
19 122 0.0 1 colorpair
20 121 0.0 1 colorpair
21 120 0.0 1 colorpair
22 119 0.0 1 colorpair
24 117 0.0 1 colorpair
25 116 0.0 1 colorpair
26 115 0.0 1 colorpair
31 62 0.0 1 colorpair
32 61 0.0 1 colorpair
33 60 0.0 1 colorpair
34 59 0.0 1 colorpair
35 58 0.0 1 colorpair
36 57 0.0 1 colorpair
37 56 0.0 1 colorpair
38 55 0.0 1 colorpair
39 54 0.0 1 colorpair
40 53 0.0 1 colorpair
41 52 0.0 1 colorpair
42 51 0.0 1 colorpair
43 50 0.0 1 colorpair
44 49 0.0 1 colorpair
67 114 0.0 1 colorpair
68 113 0.0 1 colorpair
69 112 0.0 1 colorpair
70 111 0.0 1 colorpair
71 110 0.0 1 colorpair
72 109 0.0 1 colorpair
74 106 0.0 1 colorpair
75 105 0.0 1 colorpair
76 104 0.0 1 colorpair
77 103 0.0 1 colorpair
78 102 0.0 1 colorpair
79 101 0.0 1 colorpair
80 100 0.0 1 colorpair
81 99 0.0 1 colorpair
82 98 0.0 1 colorpair
83 97 0.0 1 colorpair
84 96 0.0 1 colorpair
85 95 0.0 1 colorpair
86 94 0.0 1 colorpair
87 93 0.0 1 colorpair
88 92 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
