%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 17:55:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAGAAGAAGGCUAUGGAGCCACAUAAACUGGCGCUGUUGUCGCUAAUCGUUGUCAGUAUCGCCCUGUUAGGGGCGUUGCUGCUCAACAAAAACAACCUCUGUGAUGUUAGCUUCCGAAGCGGCGGAACGGAGAUUGUGGCUCACAUGGCUUACGAAACCAAG\
) } def
/len { sequence length } bind def

/coor [
[91.73918152 502.96109009]
[91.60717773 487.15734863]
[102.74818420 475.94784546]
[102.46432495 460.95053101]
[89.36062622 453.86822510]
[81.50906372 441.09289551]
[81.10359192 426.00311279]
[88.35321808 412.64871216]
[101.39895630 404.66400146]
[93.42218781 392.08541870]
[100.89694977 378.14129639]
[100.61309052 363.14398193]
[100.32922363 348.14666748]
[100.04536438 333.14935303]
[99.76150513 318.15203857]
[99.47763824 303.15472412]
[99.19377899 288.15740967]
[98.90991211 273.16009521]
[98.48415375 258.16613770]
[97.91653442 243.17687988]
[97.34890747 228.18763733]
[96.78128815 213.19837952]
[96.21366882 198.20912170]
[95.64604187 183.21986389]
[95.07842255 168.23060608]
[94.51080322 153.24134827]
[83.44194794 150.89797974]
[73.11299133 146.28024292]
[63.98545837 139.59451294]
[56.46722031 131.13952637]
[50.89422226 121.29307556]
[47.51548767 110.49515533]
[32.53965378 111.34633636]
[17.56382561 112.19751740]
[2.58799505 113.04869843]
[-12.38783550 113.89987183]
[-27.35494041 114.89272308]
[-40.58364105 124.58465576]
[-55.48033905 117.72750854]
[-56.72058487 101.37532806]
[-43.02852249 92.34983063]
[-28.48937225 99.93568420]
[-22.02898788 96.27806854]
[-13.23901463 98.92404175]
[1.73681581 98.07286835]
[16.71264648 97.22168732]
[31.68847656 96.37050629]
[46.66430664 95.51932526]
[48.97668457 83.83232117]
[53.81697464 72.94633484]
[60.94536972 63.40070343]
[70.00870514 55.66835785]
[63.42746353 42.18921280]
[56.84622955 28.71006775]
[50.26499176 15.23092461]
[34.76692963 5.32432652]
[36.61404419 -12.10828876]
[29.77890587 -25.46047401]
[22.94376564 -38.81266022]
[16.10862732 -52.16484833]
[9.27348804 -65.51703644]
[-3.90224314 -74.27549744]
[-2.81442976 -89.13032532]
[-9.64956856 -102.48251343]
[-16.48470879 -115.83469391]
[-23.31984711 -129.18688965]
[-30.15498543 -142.53906250]
[-36.99012375 -155.89125061]
[-51.04682541 -164.33763123]
[-50.48990250 -180.72731018]
[-35.89227295 -188.20001221]
[-22.27072334 -179.06845093]
[-23.63793945 -162.72639465]
[-16.80279922 -149.37420654]
[-9.96766090 -136.02201843]
[-3.13252187 -122.66983795]
[3.70261741 -109.31764984]
[10.53775597 -95.96546173]
[23.22459221 -88.16204071]
[22.62567520 -72.35217285]
[29.46081352 -58.99998474]
[36.29595184 -45.64780045]
[43.13109207 -32.29561234]
[49.96623230 -18.94342804]
[61.40106583 -14.91353226]
[67.19451141 -3.80831671]
[63.74413681 8.64968777]
[70.32537079 22.12883186]
[76.90660858 35.60797501]
[83.48784637 49.08712006]
[91.17003632 47.20980835]
[99.04499054 46.48495102]
[106.94079590 46.92837143]
[114.68508148 48.53038788]
[122.10877228 51.25603104]
[129.04981995 55.04579163]
[135.35667419 59.81694412]
[140.89166260 65.46532440]
[145.53396606 71.86762238]
[149.18222046 78.88407898]
[163.65878296 74.95610809]
[178.13536072 71.02814484]
[192.61192322 67.10017395]
[207.08850098 63.17220688]
[221.56506348 59.24423981]
[229.45680237 45.81448746]
[244.19406128 42.03719330]
[256.94863892 49.64352036]
[271.42520142 45.71555328]
[285.90176392 41.78758240]
[300.37835693 37.85961533]
[307.88061523 32.56994629]
[315.16610718 33.99707031]
[329.71441650 30.34376144]
[344.26272583 26.69045448]
[358.81103516 23.03714752]
[372.70059204 13.31519699]
[385.88763428 23.97064972]
[379.29913330 39.59204483]
[362.46432495 37.58545685]
[347.91601562 41.23876572]
[333.36770630 44.89207077]
[318.81939697 48.54537964]
[304.30630493 52.33618546]
[289.82974243 56.26415253]
[275.35317993 60.19211960]
[260.87661743 64.12008667]
[253.71591187 77.13008118]
[239.09056091 81.31982422]
[225.49302673 73.72080994]
[211.01646423 77.64878082]
[196.53988647 81.57674408]
[182.06332397 85.50471497]
[167.58674622 89.43267822]
[153.11018372 93.36064911]
[149.68141174 119.91305542]
[133.82199097 141.48307800]
[109.50005341 152.67372131]
[110.06768036 167.66297913]
[110.63529968 182.65223694]
[111.20291901 197.64149475]
[111.77054596 212.63075256]
[112.33816528 227.62001038]
[112.90579224 242.60926819]
[113.47341156 257.59851074]
[116.93807220 266.09915161]
[113.90722656 272.87625122]
[114.19109344 287.87356567]
[114.47495270 302.87088013]
[114.75881195 317.86819458]
[115.04267883 332.86547852]
[115.32653809 347.86279297]
[115.61039734 362.86010742]
[115.89426422 377.85742188]
[123.89133453 391.50872803]
[116.39627075 404.38012695]
[129.73481750 411.86547852]
[137.48460388 424.93594360]
[137.65043640 440.03030396]
[130.28793335 453.09356689]
[117.46163940 460.66665649]
[117.74549866 475.66397095]
[129.30270386 486.44387817]
[129.76882935 502.24130249]
[118.86734009 513.68389893]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 162]
[4 161]
[9 156]
[11 154]
[12 153]
[13 152]
[14 151]
[15 150]
[16 149]
[17 148]
[18 147]
[19 145]
[20 144]
[21 143]
[22 142]
[23 141]
[24 140]
[25 139]
[26 138]
[32 48]
[33 47]
[34 46]
[35 45]
[36 44]
[37 42]
[52 90]
[53 89]
[54 88]
[55 87]
[57 84]
[58 83]
[59 82]
[60 81]
[61 80]
[63 78]
[64 77]
[65 76]
[66 75]
[67 74]
[68 73]
[100 135]
[101 134]
[102 133]
[103 132]
[104 131]
[105 130]
[108 127]
[109 126]
[110 125]
[111 124]
[113 123]
[114 122]
[115 121]
[116 120]
] def

init

% Start Annotations
3 162 0.0 1 colorpair
4 161 0.0 1 colorpair
9 156 0.0 1 colorpair
11 154 0.0 1 colorpair
12 153 0.0 1 colorpair
13 152 0.0 1 colorpair
14 151 0.0 1 colorpair
15 150 0.0 1 colorpair
16 149 0.0 1 colorpair
17 148 0.0 1 colorpair
18 147 0.0 1 colorpair
19 145 0.0 1 colorpair
20 144 0.0 1 colorpair
21 143 0.0 1 colorpair
22 142 0.0 1 colorpair
23 141 0.0 1 colorpair
24 140 0.0 1 colorpair
25 139 0.0 1 colorpair
26 138 0.0 1 colorpair
32 48 0.0 1 colorpair
33 47 0.0 1 colorpair
34 46 0.0 1 colorpair
35 45 0.0 1 colorpair
36 44 0.0 1 colorpair
37 42 0.0 1 colorpair
52 90 0.0 1 colorpair
53 89 0.0 1 colorpair
54 88 0.0 1 colorpair
55 87 0.0 1 colorpair
57 84 0.0 1 colorpair
58 83 0.0 1 colorpair
59 82 0.0 1 colorpair
60 81 0.0 1 colorpair
61 80 0.0 1 colorpair
63 78 0.0 1 colorpair
64 77 0.0 1 colorpair
65 76 0.0 1 colorpair
66 75 0.0 1 colorpair
67 74 0.0 1 colorpair
68 73 0.0 1 colorpair
100 135 0.0 1 colorpair
101 134 0.0 1 colorpair
102 133 0.0 1 colorpair
103 132 0.0 1 colorpair
104 131 0.0 1 colorpair
105 130 0.0 1 colorpair
108 127 0.0 1 colorpair
109 126 0.0 1 colorpair
110 125 0.0 1 colorpair
111 124 0.0 1 colorpair
113 123 0.0 1 colorpair
114 122 0.0 1 colorpair
115 121 0.0 1 colorpair
116 120 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
