%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 17:40:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_______________CAAAAAAUGCCACAAAAAACUGUUAUUUGGUGUCUAUUGAUCGUCUGUAUAACACUUCUGGCGUUCAUUAGAAUCACACAUGGAUACCUGUGUGAAAUACACAUCAAAAACGGUAACAAAGAGGUUGCCGCCGUUUUAGCCUACGCAUCUAAA___\
) } def
/len { sequence length } bind def

/coor [
[115.19910431 589.29724121]
[104.13034058 599.49377441]
[91.28485870 607.33465576]
[77.15641022 612.51861572]
[62.28805542 614.84631348]
[47.25128937 614.22827148]
[32.62409210 610.68835449]
[18.96868515 604.36248779]
[6.80995321 595.49395752]
[-3.38475704 584.42352295]
[-11.22358799 571.57678223]
[-16.40523529 557.44750977]
[-18.73053169 542.57873535]
[-18.11009789 527.54211426]
[-14.56778049 512.91546631]
[-8.23973846 499.26107788]
[0.63079482 487.10379028]
[11.70286083 476.91085815]
[24.55087852 469.07412720]
[38.68100357 463.89477539]
[53.55011368 461.57186890]
[68.58667755 462.19473267]
[72.11499023 447.61560059]
[75.64331055 433.03646851]
[79.17162323 418.45736694]
[65.81398010 408.16253662]
[58.25895309 393.02328491]
[58.06241608 376.04956055]
[65.31185913 360.63955688]
[78.59925842 349.89941406]
[95.29425049 346.01708984]
[98.28775024 331.31884766]
[101.28125763 316.62057495]
[104.27475739 301.92230225]
[107.26825714 287.22402954]
[95.82291412 279.33984375]
[88.26807404 267.61309814]
[85.80218506 253.83082581]
[88.84456635 240.11145020]
[96.96479034 228.57931519]
[108.94302368 221.03569031]
[106.75901031 206.19554138]
[104.57498932 191.35539246]
[102.39097595 176.51524353]
[100.20695496 161.67509460]
[98.02294159 146.83493042]
[95.83892059 131.99478149]
[93.65490723 117.15463257]
[57.58900070 97.82622528]
[48.20608521 86.12319183]
[38.82316971 74.42016602]
[24.15412140 68.49314117]
[22.22951698 53.72340012]
[12.84660149 42.02037430]
[3.46368575 30.31734276]
[-11.20536137 24.39031792]
[-13.12996578 9.62057972]
[-22.51288033 -2.08244967]
[-31.89579582 -13.78547859]
[-41.27871323 -25.48850822]
[-55.86471176 -21.20866203]
[-70.97770691 -22.84138870]
[-84.31307983 -30.13771057]
[-93.83728027 -41.98499298]
[-98.09793091 -56.57660675]
[-96.44532776 -71.68743896]
[-89.13146973 -85.01320648]
[-77.27166748 -94.52181244]
[-62.67446136 -98.76326752]
[-47.56581497 -97.09078217]
[-34.24968338 -89.75940704]
[-24.75668716 -77.88710785]
[-20.53443527 -63.28433228]
[-22.22679138 -48.17789841]
[-29.57568359 -34.87142563]
[-20.19276810 -23.16839409]
[-10.80985165 -11.46536541]
[-1.42693627 0.23766397]
[12.57098198 5.32761049]
[15.16671467 20.93442726]
[24.54963112 32.63745880]
[33.93254471 44.34048462]
[47.93046570 49.43043137]
[50.52619934 65.03724670]
[59.90911484 76.74028015]
[69.29203033 88.44330597]
[76.76077271 87.75932312]
[91.69826508 86.39134216]
[99.16700745 85.70735168]
[106.26815033 72.49471283]
[113.36928558 59.28207397]
[120.47042084 46.06943130]
[127.57155609 32.85679245]
[134.67268372 19.64415169]
[141.77381897 6.43151140]
[143.08918762 -2.64587903]
[149.12722778 -6.95585966]
[156.46849060 -20.03660011]
[158.94773865 -36.80829239]
[175.75032043 -39.06880188]
[182.57389832 -23.54865265]
[169.54924011 -12.69533348]
[162.20796204 0.38540784]
[154.98646545 13.53264713]
[147.88533020 26.74528694]
[140.78419495 39.95792770]
[133.68305969 53.17057037]
[126.58192444 66.38320923]
[119.48078918 79.59584808]
[112.37965393 92.80848694]
[126.56034851 87.91892242]
[139.73480225 95.09065247]
[143.32572937 109.65448761]
[134.99523926 122.12857056]
[120.16693115 124.39160919]
[108.49505615 114.97061920]
[110.67906952 129.81077576]
[112.86309052 144.65092468]
[115.04710388 159.49107361]
[117.23112488 174.33122253]
[119.41513824 189.17137146]
[121.59915924 204.01152039]
[123.78318024 218.85166931]
[140.95852661 224.77807617]
[152.95996094 238.24223328]
[156.82359314 255.72445679]
[171.40272522 259.25277710]
[185.98185730 262.78109741]
[200.56098938 266.30941772]
[215.14010620 269.83770752]
[229.71923828 273.36602783]
[244.29837036 276.89434814]
[257.65655518 268.44836426]
[273.05584717 272.00323486]
[281.36013794 285.44995117]
[277.64263916 300.81082153]
[264.10885620 308.97247314]
[248.78817749 305.09277344]
[240.77005005 291.47348022]
[226.19093323 287.94515991]
[211.61180115 284.41683960]
[197.03266907 280.88851929]
[182.45353699 277.36022949]
[167.87440491 273.83190918]
[153.29528809 270.30358887]
[145.60267639 280.72711182]
[134.66967773 287.67663574]
[121.96652222 290.21755981]
[118.97302246 304.91580200]
[115.97951508 319.61407471]
[112.98601532 334.31234741]
[109.99251556 349.01058960]
[121.09050751 356.25521851]
[129.03764343 366.82150269]
[132.90074158 379.43237305]
[132.23852539 392.57299805]
[127.15200043 404.67263794]
[118.26968384 414.29238892]
[106.67008972 420.29632568]
[93.75075531 421.98565674]
[90.22243500 436.56478882]
[86.69412231 451.14392090]
[83.16580963 465.72305298]
[96.82325745 472.04446411]
[108.98486328 480.90908813]
[119.18315125 491.97619629]
[127.02614594 504.82043457]
[132.21237183 518.94805908]
[134.54248047 533.81604004]
[133.92691040 548.85290527]
[130.38932800 563.48065186]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 163]
[23 162]
[24 161]
[25 160]
[31 152]
[32 151]
[33 150]
[34 149]
[35 148]
[41 123]
[42 122]
[43 121]
[44 120]
[45 119]
[46 118]
[47 117]
[48 116]
[49 86]
[50 85]
[51 84]
[53 82]
[54 81]
[55 80]
[57 78]
[58 77]
[59 76]
[60 75]
[89 110]
[90 109]
[91 108]
[92 107]
[93 106]
[94 105]
[95 104]
[97 103]
[98 102]
[126 145]
[127 144]
[128 143]
[129 142]
[130 141]
[131 140]
[132 139]
] def

init

% Start Annotations
22 163 0.0 1 colorpair
23 162 0.0 1 colorpair
24 161 0.0 1 colorpair
25 160 0.0 1 colorpair
31 152 0.0 1 colorpair
32 151 0.0 1 colorpair
33 150 0.0 1 colorpair
34 149 0.0 1 colorpair
35 148 0.0 1 colorpair
41 123 0.0 1 colorpair
42 122 0.0 1 colorpair
43 121 0.0 1 colorpair
44 120 0.0 1 colorpair
45 119 0.0 1 colorpair
46 118 0.0 1 colorpair
47 117 0.0 1 colorpair
48 116 0.0 1 colorpair
49 86 0.0 1 colorpair
50 85 0.0 1 colorpair
51 84 0.0 1 colorpair
53 82 0.0 1 colorpair
54 81 0.0 1 colorpair
55 80 0.0 1 colorpair
57 78 0.0 1 colorpair
58 77 0.0 1 colorpair
59 76 0.0 1 colorpair
60 75 0.0 1 colorpair
89 110 0.0 1 colorpair
90 109 0.0 1 colorpair
91 108 0.0 1 colorpair
92 107 0.0 1 colorpair
93 106 0.0 1 colorpair
94 105 0.0 1 colorpair
95 104 0.0 1 colorpair
97 103 0.0 1 colorpair
98 102 0.0 1 colorpair
126 145 0.0 1 colorpair
127 144 0.0 1 colorpair
128 143 0.0 1 colorpair
129 142 0.0 1 colorpair
130 141 0.0 1 colorpair
131 140 0.0 1 colorpair
132 139 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
