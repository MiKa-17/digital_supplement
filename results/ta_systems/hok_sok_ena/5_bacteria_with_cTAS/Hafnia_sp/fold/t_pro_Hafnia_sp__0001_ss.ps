%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 17:40:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAAAAGGAAAACCAAAAAAUGCCACAAAAAACUGUUAUUUGGUGUCUAUUGAUCGUCUGUAUAACACUUCUGGCGUUCAUUAGAAUCACACAUGGAUACCUGUGUGAAAUACACAUCAAAAACGGUAACAAAGAGGUUGCCGCCGUUUUAGCCUACGCAUCUAAACGG\
) } def
/len { sequence length } bind def

/coor [
[96.04480743 137.06054688]
[96.31877136 152.05804443]
[101.21378326 166.23686218]
[89.24155426 175.27377319]
[76.94733429 166.68003845]
[81.32127380 152.33201599]
[81.04730988 137.33451843]
[80.77335358 122.33701324]
[73.27460480 122.47399139]
[66.66075897 135.93716431]
[68.29749298 152.25442505]
[54.82850647 161.60955811]
[40.10953522 154.37879944]
[39.28219223 138.00053406]
[53.19758224 129.32331848]
[59.81142807 115.86014557]
[47.55264282 124.50434875]
[38.67808151 136.59741211]
[27.16256523 146.20953369]
[13.67807674 152.77981567]
[-0.98851115 155.92483521]
[-15.98134041 155.46109009]
[-30.42551804 151.41563416]
[-43.47816849 144.02453613]
[-54.37760925 133.71910095]
[-62.48781967 121.10067749]
[-67.33553314 106.90561676]
[-68.63786316 91.96226501]
[-66.31881714 77.14261627]
[-60.51371765 63.31145859]
[-51.56131744 51.27590561]
[-39.98402405 41.73827744]
[-26.45742798 35.25513458]
[-11.77085400 32.20479965]
[3.21867180 32.76526260]
[17.63644791 36.90382767]
[30.64113998 44.37898636]
[41.47386551 54.75453568]
[49.50249863 67.42501831]
[54.25920486 81.65438843]
[63.29060745 93.63076782]
[61.10659027 78.79061890]
[58.92257309 63.95046616]
[56.73855591 49.11031723]
[54.55453873 34.27016830]
[52.37051773 19.43001556]
[50.18650055 4.58986568]
[48.00248337 -10.25028515]
[11.93658066 -29.57869530]
[2.55366492 -41.28172684]
[-6.82925081 -52.98475647]
[-21.49829674 -58.91178131]
[-23.42290115 -73.68151855]
[-32.80581665 -85.38454437]
[-42.18873215 -97.08757782]
[-56.85778046 -103.01460266]
[-58.78238297 -117.78433990]
[-68.16529846 -129.48736572]
[-77.54821777 -141.19039917]
[-86.93112946 -152.89343262]
[-101.51712799 -148.61358643]
[-116.63012695 -150.24630737]
[-129.96549988 -157.54263306]
[-139.48970032 -169.38990784]
[-143.75035095 -183.98152161]
[-142.09774780 -199.09236145]
[-134.78388977 -212.41812134]
[-122.92408752 -221.92672729]
[-108.32688141 -226.16818237]
[-93.21823120 -224.49571228]
[-79.90210724 -217.16432190]
[-70.40910339 -205.29202271]
[-66.18685150 -190.68925476]
[-67.87921143 -175.58282471]
[-75.22810364 -162.27635193]
[-65.84518433 -150.57331848]
[-56.46227264 -138.87028503]
[-47.07935715 -127.16725922]
[-33.08143616 -122.07730865]
[-30.48570442 -106.47048950]
[-21.10278893 -94.76746368]
[-11.71987247 -83.06443787]
[2.27804518 -77.97448730]
[4.87377882 -62.36767197]
[14.25669384 -50.66464233]
[23.63961029 -38.96161270]
[31.10835457 -39.64559937]
[46.04584503 -41.01357651]
[53.51459122 -41.69756699]
[60.61572647 -54.91020584]
[67.71686554 -68.12284851]
[74.81800079 -81.33548737]
[81.91913605 -94.54812622]
[89.02027130 -107.76076508]
[96.12140656 -120.97341156]
[97.43676758 -130.05079651]
[103.47480774 -134.36077881]
[110.81607819 -147.44152832]
[113.29532623 -164.21321106]
[130.09790039 -166.47372437]
[136.92147827 -150.95356750]
[123.89682007 -140.10025024]
[116.55554962 -127.01951599]
[109.33404541 -113.87227631]
[102.23291016 -100.65962982]
[95.13177490 -87.44699097]
[88.03063965 -74.23435211]
[80.92950439 -61.02171326]
[73.82836914 -47.80907059]
[66.72723389 -34.59643173]
[80.90792847 -39.48599625]
[94.08238983 -32.31427002]
[97.67331696 -17.75043678]
[89.34281921 -5.27634668]
[74.51451874 -3.01331520]
[62.84263611 -12.43430233]
[65.02664948 2.40584803]
[67.21067047 17.24599838]
[69.39468384 32.08614731]
[71.57870483 46.92630005]
[73.76272583 61.76644897]
[75.94673920 76.60659790]
[78.13076019 91.44675446]
[89.79170990 75.95234680]
[111.07189178 73.44905853]
[129.17816162 88.37335968]
[143.75729370 91.90167236]
[158.33641052 95.42999268]
[172.91554260 98.95830536]
[187.49467468 102.48661804]
[202.07380676 106.01493835]
[216.65292358 109.54325104]
[230.01110840 101.09725952]
[245.41040039 104.65214539]
[253.71469116 118.09886932]
[249.99719238 133.45971680]
[236.46342468 141.62138367]
[221.14273071 137.74168396]
[213.12461853 124.12238312]
[198.54548645 120.59406281]
[183.96635437 117.06575012]
[169.38722229 113.53743744]
[154.80810547 110.00911713]
[140.22897339 106.48080444]
[125.64984131 102.95249176]
[116.48223877 114.82493591]
[123.58337402 128.03758240]
[130.68450928 141.25021362]
[137.78564453 154.46286011]
[144.88677979 167.67549133]
[151.98791504 180.88813782]
[170.30293274 185.61941528]
[179.22492981 201.93743896]
[173.52156067 219.30436707]
[181.10050964 232.24884033]
[195.61218262 239.88714600]
[195.98257446 256.28210449]
[181.83068848 264.56799316]
[167.71475220 256.22100830]
[168.15603638 239.82778931]
[160.57708740 226.88331604]
[149.13320923 226.45114136]
[139.22531128 220.47216797]
[133.38896179 210.34074402]
[133.18307495 198.53018188]
[138.77528381 187.98927307]
[131.67413330 174.77664185]
[124.57300568 161.56399536]
[117.47187042 148.35134888]
[110.37073517 135.13871765]
[103.26959991 121.92607117]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 16]
[10 15]
[41 123]
[42 122]
[43 121]
[44 120]
[45 119]
[46 118]
[47 117]
[48 116]
[49 86]
[50 85]
[51 84]
[53 82]
[54 81]
[55 80]
[57 78]
[58 77]
[59 76]
[60 75]
[89 110]
[90 109]
[91 108]
[92 107]
[93 106]
[94 105]
[95 104]
[97 103]
[98 102]
[126 145]
[127 144]
[128 143]
[129 142]
[130 141]
[131 140]
[132 139]
[146 171]
[147 170]
[148 169]
[149 168]
[150 167]
[151 166]
[154 161]
[155 160]
] def

init

% Start Annotations
9 16 0.0 1 colorpair
10 15 0.0 1 colorpair
41 123 0.0 1 colorpair
42 122 0.0 1 colorpair
43 121 0.0 1 colorpair
44 120 0.0 1 colorpair
45 119 0.0 1 colorpair
46 118 0.0 1 colorpair
47 117 0.0 1 colorpair
48 116 0.0 1 colorpair
49 86 0.0 1 colorpair
50 85 0.0 1 colorpair
51 84 0.0 1 colorpair
53 82 0.0 1 colorpair
54 81 0.0 1 colorpair
55 80 0.0 1 colorpair
57 78 0.0 1 colorpair
58 77 0.0 1 colorpair
59 76 0.0 1 colorpair
60 75 0.0 1 colorpair
89 110 0.0 1 colorpair
90 109 0.0 1 colorpair
91 108 0.0 1 colorpair
92 107 0.0 1 colorpair
93 106 0.0 1 colorpair
94 105 0.0 1 colorpair
95 104 0.0 1 colorpair
97 103 0.0 1 colorpair
98 102 0.0 1 colorpair
126 145 0.0 1 colorpair
127 144 0.0 1 colorpair
128 143 0.0 1 colorpair
129 142 0.0 1 colorpair
130 141 0.0 1 colorpair
131 140 0.0 1 colorpair
132 139 0.0 1 colorpair
146 171 0.0 1 colorpair
147 170 0.0 1 colorpair
148 169 0.0 1 colorpair
149 168 0.0 1 colorpair
150 167 0.0 1 colorpair
151 166 0.0 1 colorpair
154 161 0.0 1 colorpair
155 160 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
