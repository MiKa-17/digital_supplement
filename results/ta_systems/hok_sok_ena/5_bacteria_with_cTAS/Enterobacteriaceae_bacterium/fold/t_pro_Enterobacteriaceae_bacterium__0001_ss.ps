%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 15:16:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_____GGUC_AGGAGAAGAGGGCUAUGAAGCCGCAAAAAUCGAUGUUAGUUGCCCUGGUCAUCAUCUGUAUCACCGUAAUUUUAGUGGCGUUGGUGAUGAGAAAGGAUCUCUGUGAGGUCCAUAUCCGAACGGGCCAUACUGAGGUUGCUGUUUUUACAGCCUGCGAAUCUAAA_________________\
) } def
/len { sequence length } bind def

/coor [
[96.38298035 535.92199707]
[82.96305847 529.19433594]
[70.25510406 521.20288086]
[58.37778091 512.02221680]
[47.44197845 501.73806763]
[37.54980087 490.44644165]
[28.79361916 478.25280762]
[21.25518417 465.27099609]
[15.00488377 451.62222290]
[10.10107517 437.43389893]
[6.58954668 422.83853149]
[4.50308418 407.97241211]
[3.86116982 392.97427368]
[4.66979647 377.98422241]
[6.92141390 363.14221191]
[10.59499931 348.58679199]
[15.65625286 334.45388794]
[22.05791664 320.87542725]
[29.74022102 307.97824097]
[38.63143158 295.88269043]
[48.64854050 284.70178223]
[59.69800949 274.53985596]
[71.67667389 265.49179077]
[84.47268677 257.64212036]
[97.96657562 251.06408691]
[112.03234863 245.81913757]
[126.53867340 241.95622253]
[124.09524536 227.15658569]
[121.65180969 212.35693359]
[119.20838165 197.55728149]
[116.76494598 182.75762939]
[114.32151031 167.95797729]
[111.87808228 153.15832520]
[106.92706299 167.31768799]
[106.85007477 182.31748962]
[104.79448700 197.17597961]
[100.79624176 211.63328552]
[94.92527771 225.43661499]
[87.28424835 238.34454346]
[78.00679016 250.13134766]
[67.25514984 260.59091187]
[55.21734619 269.54028320]
[42.10390472 276.82296753]
[28.14415169 282.31161499]
[13.58221912 285.91024780]
[-1.32723379 287.55590820]
[-16.32346916 287.21984863]
[-31.14422798 284.90789795]
[-45.53032684 280.66052246]
[-59.23017883 274.55200195]
[-72.00419617 266.68914795]
[-83.62899017 257.20947266]
[-93.90126038 246.27876282]
[-102.64137268 234.08818054]
[-109.69646454 220.85089111]
[-114.94316864 206.79841614]
[-118.28971863 192.17649841]
[-119.67760468 177.24084473]
[-119.08254242 162.25265503]
[-116.51493835 147.47404480]
[-112.01970673 133.16345215]
[-105.67544556 119.57115936]
[-97.59311676 106.93486786]
[-87.91406250 95.47555542]
[-76.80754089 85.39362335]
[-64.46779633 76.86539459]
[-51.11062622 70.04000854]
[-36.96961594 65.03681946]
[-22.29206848 61.94333649]
[-7.33466959 60.81365204]
[7.64100790 61.66752243]
[22.37306595 64.49002075]
[36.60386658 69.23177338]
[50.07943726 75.80694580]
[62.20859146 84.63211060]
[55.79526520 71.07227325]
[49.38193893 57.51243210]
[42.96861267 43.95259476]
[27.69631004 41.20735550]
[16.97868729 29.98629570]
[14.93689060 14.60414028]
[22.35603333 0.97564274]
[36.38330460 -5.65876198]
[51.62492752 -2.74800944]
[62.22019196 8.58865643]
[64.09500122 23.99205589]
[56.52845383 37.53926849]
[62.94178009 51.09910583]
[69.35510254 64.65894318]
[75.76843262 78.21878815]
[83.19601440 79.25852966]
[84.06871796 64.28394318]
[84.94142914 49.30934906]
[85.81414032 34.33475876]
[86.68685150 19.36016846]
[87.55956268 4.38557768]
[88.43227386 -10.58901310]
[89.30497742 -25.56360435]
[84.69252014 -39.83683777]
[89.99896240 -53.86686707]
[102.90258789 -61.51515961]
[117.75770569 -59.43537903]
[128.06478882 -48.53748322]
[129.31419373 -33.58960724]
[120.95998383 -21.13238907]
[117.68729401 -6.49375772]
[114.41460419 8.14487267]
[111.14192200 22.78350449]
[107.86923218 37.42213440]
[104.59654236 52.06076431]
[101.32386017 66.69939423]
[98.05117035 81.33802795]
[105.47874451 82.37777710]
[115.36893463 71.10018158]
[125.25912476 59.82258224]
[125.64887238 43.78426361]
[138.51770020 34.20444489]
[153.99372864 38.43194580]
[160.20509338 53.22378540]
[152.38694763 67.23293304]
[136.53671265 69.71276855]
[126.64653015 80.99036407]
[116.75634766 92.26795959]
[120.92311859 98.50398254]
[133.42344666 117.21205139]
[147.62741089 112.39045715]
[161.83135986 107.56886292]
[176.03530884 102.74727631]
[178.35136414 87.61801910]
[187.44238281 75.30493164]
[201.21931458 68.63748169]
[216.51631165 69.14779663]
[229.81823730 76.71861267]
[238.06842041 89.61019897]
[239.37101746 104.86017609]
[233.42669678 118.96421051]
[221.60144043 128.68128967]
[206.61257935 131.77850342]
[191.90446472 127.54414368]
[180.85690308 116.95122528]
[166.65295410 121.77281952]
[152.44898987 126.59441376]
[138.24504089 131.41600037]
[153.23616028 131.93196106]
[162.96633911 143.34791565]
[161.10067749 158.23143005]
[148.85383606 166.89254761]
[134.19917297 163.69239807]
[126.67773438 150.71488953]
[129.12117004 165.51454163]
[131.56459045 180.31419373]
[134.00802612 195.11384583]
[136.45146179 209.91349792]
[138.89489746 224.71315002]
[141.33831787 239.51280212]
[156.31649780 238.50779724]
[171.32173157 238.95310974]
[186.21394348 240.84457397]
[200.85406494 244.16453552]
[215.10542297 248.88197327]
[228.83494568 254.95288086]
[241.91442871 262.32055664]
[254.22177124 270.91616821]
[265.64205933 280.65951538]
[276.06863403 291.45962524]
[285.40414429 303.21560669]
[293.56146240 315.81774902]
[300.46441650 329.14834595]
[306.04852295 343.08294678]
[310.26165771 357.49145508]
[313.06448364 372.23931885]
[314.43084717 387.18887329]
[314.34796143 402.20046997]
[312.81661987 417.13403320]
[309.85110474 431.85003662]
[305.47912598 446.21115112]
[299.74151611 460.08325195]
[292.69180298 473.33682251]
[284.39581299 485.84811401]
[274.93106079 497.50030518]
[264.38586426 508.18460083]
[252.85870361 517.80126953]
[240.45719910 526.26049805]
[227.29714966 533.48327637]
[213.50143433 539.40222168]
[199.19886780 543.96197510]
[184.52296448 547.12011719]
[169.61077881 548.84698486]
[154.60153198 549.12658691]
[139.63537598 547.95629883]
[124.85204315 545.34698486]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[27 155]
[28 154]
[29 153]
[30 152]
[31 151]
[32 150]
[33 149]
[75 90]
[76 89]
[77 88]
[78 87]
[113 123]
[114 122]
[115 121]
[125 143]
[126 142]
[127 141]
[128 140]
] def

init

% Start Annotations
27 155 0.32 1 colorpair
28 154 0.16 1 colorpair
29 153 0.16 0.2 colorpair
30 152 0.32 1 colorpair
31 151 0.16 0.2 colorpair
33 149 0.16 0.2 colorpair
77 88 0.32 1 colorpair
113 123 0.16 0.6 colorpair
115 121 0.0 0.2 colorpair
125 143 0.0 1 colorpair
126 142 0.16 1 colorpair
127 141 0.16 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
27 cmark
155 cmark
28 cmark
154 cmark
29 153 2 gmark
29 cmark
153 cmark
30 cmark
152 cmark
31 151 2 gmark
31 cmark
32 150 3 gmark
32 cmark
150 cmark
33 149 2 gmark
149 cmark
75 90 3 gmark
75 cmark
90 cmark
76 89 4 gmark
76 cmark
89 cmark
77 cmark
88 cmark
78 87 4 gmark
78 cmark
87 cmark
113 123 1 gmark
123 cmark
114 122 3 gmark
114 cmark
122 cmark
115 121 2 gmark
126 cmark
127 141 1 gmark
127 cmark
141 cmark
128 140 3 gmark
128 cmark
140 cmark

% End Annotations
showpage
end
%%EOF
