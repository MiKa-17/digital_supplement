%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 17:55:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___CGGAGGGCAAACAUGCCGCGAAAACAGGUGUUACAAGCAUUAACAGUAGGAUGCAUAACAAUCCUGAUAUUCAUCUGGAUGAUAAGAGACUCACUGUGUGAGCUGACAAUCAAACAGGAAAAUACCAAGAUAGCGACAAGGUUAGCCUGUAAUGU_______\
) } def
/len { sequence length } bind def

/coor [
[79.07624817 347.19555664]
[73.28464508 333.26284790]
[71.29738617 318.30581665]
[73.24996948 303.34420776]
[79.00927734 289.39813232]
[88.18260956 277.41845703]
[100.14453125 268.22201538]
[114.07945251 262.43579102]
[112.09810638 247.56721497]
[110.11676025 232.69865417]
[108.13541412 217.83007812]
[106.15407562 202.96151733]
[104.17272949 188.09294128]
[102.19138336 173.22438049]
[100.21003723 158.35581970]
[98.22869110 143.48724365]
[96.24735260 128.61868286]
[94.26600647 113.75011444]
[81.69626617 105.56466675]
[67.29662323 109.76588440]
[52.89697647 113.96710205]
[38.49733353 118.16832733]
[24.09768867 122.36954498]
[9.69804382 126.57076263]
[-4.70160007 130.77198792]
[-15.78236389 142.06478882]
[-30.16731644 138.20182800]
[-44.56695938 142.40304565]
[-58.96660614 146.60426331]
[-73.36624908 150.80549622]
[-87.76589203 155.00671387]
[-96.70848846 168.32623291]
[-112.70886993 169.49555969]
[-123.49291229 157.61769104]
[-120.78803253 141.80429077]
[-106.66916656 134.18608093]
[-91.96710968 140.60707092]
[-77.56746674 136.40583801]
[-63.16782379 132.20462036]
[-48.76818085 128.00340271]
[-34.36853790 123.80218506]
[-24.31773186 112.80989075]
[-8.90282059 116.37234497]
[5.49682379 112.17111969]
[19.89646721 107.96990204]
[34.29611206 103.76868439]
[48.69575500 99.56745911]
[63.09539795 95.36624146]
[77.49504089 91.16502380]
[62.84399414 87.94837952]
[54.12327194 75.74391174]
[54.02735519 60.74422073]
[62.59128952 48.42922974]
[76.68636322 43.29804993]
[91.16312408 47.22528839]
[100.73271179 58.77618027]
[101.89889526 73.73117828]
[100.31771088 88.64760590]
[108.85664368 76.31526947]
[117.39557648 63.98292923]
[125.93450928 51.65058899]
[134.47344971 39.31824875]
[143.01237488 26.98590660]
[151.55131531 14.65356731]
[160.09024048 2.32122707]
[168.62918091 -10.01111317]
[170.12382507 -25.76156044]
[183.73025513 -31.82081032]
[192.26918030 -44.15315247]
[200.80812073 -56.48549271]
[209.34704590 -68.81783295]
[217.88598633 -81.15016937]
[226.42492676 -93.48251343]
[234.96385193 -105.81484985]
[232.34449768 -121.16987610]
[241.17987061 -133.55497742]
[255.83468628 -135.95750427]
[264.37362671 -148.28984070]
[272.91253662 -160.62219238]
[281.45147705 -172.95452881]
[289.99041748 -185.28686523]
[291.48507690 -201.03732300]
[305.09149170 -207.09657288]
[313.63043213 -219.42890930]
[322.16934204 -231.76124573]
[330.70828247 -244.09358215]
[333.03656006 -252.97299194]
[339.52734375 -256.57641602]
[348.29812622 -268.74496460]
[357.06890869 -280.91351318]
[358.47830200 -299.25320435]
[374.71542358 -305.86108398]
[383.25436401 -318.19342041]
[391.79330444 -330.52575684]
[400.33221436 -342.85809326]
[408.87115479 -355.19042969]
[417.41009521 -367.52276611]
[421.45568848 -383.98696899]
[438.39636230 -384.65722656]
[443.73010254 -368.56411743]
[429.74243164 -358.98382568]
[421.20349121 -346.65148926]
[412.66458130 -334.31915283]
[404.12564087 -321.98681641]
[395.58670044 -309.65447998]
[387.04776001 -297.32214355]
[388.89822388 -285.34002686]
[381.84756470 -274.98733521]
[369.23742676 -272.14273071]
[360.46664429 -259.97418213]
[351.69586182 -247.80564880]
[343.04061890 -235.55465698]
[334.50170898 -223.22232056]
[325.96276855 -210.88996887]
[317.42382812 -198.55763245]
[316.53994751 -183.68927002]
[302.32275391 -176.74794006]
[293.78381348 -164.41558838]
[285.24487305 -152.08325195]
[276.70596313 -139.75091553]
[268.16702271 -127.41857147]
[271.07489014 -112.85561371]
[262.59088135 -100.22722626]
[247.29618835 -97.27591705]
[238.75726318 -84.94358063]
[230.21832275 -72.61123657]
[221.67939758 -60.27889633]
[213.14045715 -47.94655609]
[204.60153198 -35.61421585]
[196.06259155 -23.28187752]
[195.17871094 -8.41352177]
[180.96151733 -1.47217965]
[172.42259216 10.86016083]
[163.88365173 23.19250107]
[155.34472656 35.52484131]
[146.80578613 47.85718155]
[138.26684570 60.18952179]
[129.72792053 72.52185822]
[121.18898773 84.85420227]
[112.65005493 97.18653870]
[109.13457489 111.76876831]
[111.11591339 126.63733673]
[113.09725952 141.50590515]
[115.07860565 156.37446594]
[117.05995178 171.24304199]
[119.04129791 186.11160278]
[121.02263641 200.98016357]
[123.00398254 215.84873962]
[124.98532867 230.71730042]
[126.96667480 245.58587646]
[128.94801331 260.45443726]
[143.91188049 262.38967896]
[157.86460876 268.13284302]
[169.85488892 277.29229736]
[179.06520081 289.24356079]
[184.86756897 303.17175293]
[186.86637878 318.12725830]
[184.92533875 333.09039307]
[179.17680359 347.04089355]
[170.01272583 359.02764893]
[158.05790710 368.23333740]
[144.12745667 374.03030396]
[129.17118835 376.02334595]
[114.20882416 374.07653809]
[100.26052856 368.32263184]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 151]
[9 150]
[10 149]
[11 148]
[12 147]
[13 146]
[14 145]
[15 144]
[16 143]
[17 142]
[18 141]
[19 49]
[20 48]
[21 47]
[22 46]
[23 45]
[24 44]
[25 43]
[27 41]
[28 40]
[29 39]
[30 38]
[31 37]
[58 140]
[59 139]
[60 138]
[61 137]
[62 136]
[63 135]
[64 134]
[65 133]
[66 132]
[68 130]
[69 129]
[70 128]
[71 127]
[72 126]
[73 125]
[74 124]
[77 121]
[78 120]
[79 119]
[80 118]
[81 117]
[83 115]
[84 114]
[85 113]
[86 112]
[88 111]
[89 110]
[90 109]
[92 106]
[93 105]
[94 104]
[95 103]
[96 102]
[97 101]
] def

init

% Start Annotations
8 151 0.16 0.6 colorpair
9 150 0.16 0.6 colorpair
10 149 0.0 1 colorpair
11 148 0.0 0.2 colorpair
12 147 0.0 0.2 colorpair
13 146 0.16 1 colorpair
14 145 0.16 1 colorpair
15 144 0.0 1 colorpair
16 143 0.0 0.2 colorpair
17 142 0.16 1 colorpair
18 141 0.0 0.2 colorpair
19 49 0.16 1 colorpair
20 48 0.0 0.2 colorpair
21 47 0.0 1 colorpair
22 46 0.0 0.2 colorpair
23 45 0.16 1 colorpair
24 44 0.0 1 colorpair
25 43 0.0 1 colorpair
27 41 0.0 0.2 colorpair
28 40 0.0 0.2 colorpair
29 39 0.0 0.2 colorpair
30 38 0.16 1 colorpair
31 37 0.0 0.2 colorpair
58 140 0.16 1 colorpair
59 139 0.16 1 colorpair
60 138 0.0 0.2 colorpair
61 137 0.0 0.2 colorpair
62 136 0.0 0.2 colorpair
63 135 0.0 0.2 colorpair
64 134 0.0 0.2 colorpair
65 133 0.16 1 colorpair
66 132 0.0 0.2 colorpair
68 130 0.16 1 colorpair
69 129 0.0 0.2 colorpair
70 128 0.16 1 colorpair
71 127 0.0 1 colorpair
72 126 0.0 1 colorpair
73 125 0.0 1 colorpair
74 124 0.0 1 colorpair
77 121 0.0 1 colorpair
78 120 0.16 1 colorpair
79 119 0.0 1 colorpair
80 118 0.0 1 colorpair
81 117 0.0 0.2 colorpair
83 115 0.0 0.2 colorpair
84 114 0.0 0.2 colorpair
85 113 0.0 1 colorpair
86 112 0.0 0.2 colorpair
88 111 0.0 0.2 colorpair
89 110 0.0 1 colorpair
90 109 0.0 0.2 colorpair
92 106 0.0 0.2 colorpair
93 105 0.0 1 colorpair
94 104 0.0 1 colorpair
95 103 0.0 1 colorpair
96 102 0.0 1 colorpair
97 101 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
8 151 1 gmark
8 cmark
9 150 1 gmark
150 cmark
11 148 2 gmark
12 147 2 gmark
13 cmark
14 cmark
16 143 2 gmark
142 cmark
18 141 2 gmark
19 cmark
20 48 2 gmark
22 46 2 gmark
23 cmark
45 cmark
27 41 2 gmark
28 40 2 gmark
29 39 2 gmark
30 cmark
38 cmark
31 37 2 gmark
58 cmark
140 cmark
139 cmark
60 138 2 gmark
61 137 2 gmark
62 136 2 gmark
63 135 2 gmark
64 134 2 gmark
133 cmark
66 132 2 gmark
130 cmark
69 129 2 gmark
70 cmark
128 cmark
78 cmark
81 117 2 gmark
83 115 2 gmark
84 114 2 gmark
86 112 2 gmark
88 111 2 gmark
90 109 2 gmark
92 106 2 gmark
97 101 2 gmark

% End Annotations
showpage
end
%%EOF
