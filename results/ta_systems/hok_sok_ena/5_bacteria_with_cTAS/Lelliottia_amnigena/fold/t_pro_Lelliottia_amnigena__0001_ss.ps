%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 17:50:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_____________AUGACGCCAUUAAAAUCAGUGUUGGGCAUUGUUCUCAUUAUUUGCCUGACUAUCGUGAUAUUUACCUUUAUUAAUCGCGGGAAGUUAUGCGAGCUAACAAUAAAGAGUGAGCAUCAGGAGGUGGCGGCUAAAUUAGCCUGUAU_____________________________________\
) } def
/len { sequence length } bind def

/coor [
[34.51991272 187.12088013]
[19.52130890 187.32554626]
[4.91950607 183.89227295]
[-8.41639614 177.02542114]
[-19.69264221 167.13368225]
[-28.23806763 154.80584717]
[-33.54404831 140.77565002]
[-35.29476929 125.87815857]
[-33.38603210 111.00009918]
[-27.93144226 97.02700043]
[-19.25565910 84.79055023]
[-7.87506294 75.01905823]
[5.53296852 68.29412842]
[20.17038918 65.01602936]
[35.16597366 65.37986755]
[49.62718964 69.36399841]
[62.69329834 76.73127747]
[73.58567810 87.04208374]
[86.94812775 93.85712433]
[78.48877716 81.47006226]
[70.02941895 69.08300018]
[61.57006454 56.69593430]
[53.11071014 44.30887222]
[44.65135574 31.92181015]
[50.44668198 45.75706100]
[48.22724533 60.59195709]
[38.63653564 72.12531281]
[24.45525742 77.01319122]
[9.79508114 73.83840942]
[-1.09346855 63.52145767]
[-5.05340147 49.05360031]
[-0.93658727 34.62959671]
[10.06335831 24.43149948]
[24.75470543 21.41593742]
[9.75470543 21.41593742]
[-5.24529457 21.41593742]
[-20.24529457 21.41593742]
[-35.24529266 21.41593742]
[-50.24529266 21.41593742]
[-65.24529266 21.41593742]
[-80.24529266 21.41593742]
[-86.03009796 35.47312546]
[-96.75755310 46.24299622]
[-110.79180145 52.08322906]
[-125.99272156 52.10322571]
[-140.04228210 46.29993820]
[-150.79803467 35.55832291]
[-156.61979675 21.51640511]
[-156.61979675 6.31546926]
[-150.79803467 -7.72644997]
[-140.04228210 -18.46806335]
[-125.99272156 -24.27135086]
[-110.79180145 -24.25135422]
[-96.75755310 -18.41112328]
[-86.03009796 -7.64125013]
[-80.24529266 6.41593695]
[-65.24529266 6.41593695]
[-50.24529266 6.41593695]
[-35.24529266 6.41593695]
[-20.24529457 6.41593695]
[-5.24529457 6.41593695]
[9.75470543 6.41593695]
[24.75470543 6.41593695]
[29.76786423 5.44980049]
[34.35533142 6.06279659]
[38.10943604 8.02378750]
[39.08038330 -6.94475460]
[32.25259018 -21.21681976]
[40.79750061 -33.41656494]
[41.76844788 -48.38510895]
[42.73939514 -63.35365295]
[43.71034241 -78.32219696]
[36.88254929 -92.59426117]
[45.42745590 -104.79400635]
[46.39840317 -119.76255035]
[47.36935043 -134.73109436]
[48.34029770 -149.69963074]
[49.31124496 -164.66816711]
[50.16096497 -179.64408875]
[50.88939667 -194.62638855]
[51.61783218 -209.60868835]
[52.34626389 -224.59098816]
[53.07469940 -239.57330322]
[53.80313110 -254.55560303]
[54.53156281 -269.53790283]
[39.41576004 -284.13635254]
[39.95066071 -304.85061646]
[55.35769272 -318.26440430]
[55.11479568 -333.26245117]
[54.87190247 -348.26046753]
[54.62900543 -363.25851440]
[54.38610840 -378.25653076]
[41.60958481 -387.06222534]
[36.48077011 -401.70718384]
[40.97180176 -416.56015015]
[53.35578156 -425.90982056]
[68.87082672 -426.16110229]
[81.55107117 -417.21731567]
[86.52071381 -402.51757812]
[81.86882019 -387.71423340]
[69.38414001 -378.49945068]
[69.62703705 -363.50140381]
[69.86993408 -348.50335693]
[70.11283112 -333.50534058]
[70.35572815 -318.50729370]
[78.78088379 -314.36962891]
[85.15361023 -307.39944458]
[88.56333160 -298.52999878]
[88.50006104 -288.96997070]
[84.93024445 -280.03878784]
[78.30716705 -272.98452759]
[69.51387024 -268.80947876]
[68.78543091 -253.82716370]
[68.05699921 -238.84486389]
[67.32856750 -223.86256409]
[66.60013580 -208.88026428]
[65.87170410 -193.89796448]
[65.14326477 -178.91564941]
[67.96262360 -172.07226562]
[64.27978516 -163.69721985]
[63.30884171 -148.72868347]
[62.33789444 -133.76014709]
[61.36694717 -118.79160309]
[60.39599991 -103.82305908]
[67.29324341 -90.62164307]
[58.67888260 -77.35124969]
[57.70793533 -62.38270569]
[56.73698807 -47.41416168]
[55.76604080 -32.44561768]
[62.66328049 -19.24420357]
[54.04892349 -5.97380733]
[53.07797623 8.99473476]
[57.03841782 23.46245575]
[65.49777222 35.84951782]
[73.95713043 48.23657990]
[82.41648102 60.62364197]
[90.87583923 73.01070404]
[99.33518982 85.39776611]
[112.65589905 92.29405212]
[127.65393066 92.05115509]
[142.65196228 91.80825806]
[157.64999390 91.56536102]
[172.64804077 91.32246399]
[188.38717651 85.02043915]
[198.79995728 98.39991760]
[188.82589722 112.10956573]
[172.89093018 106.32050323]
[157.89289856 106.56340027]
[142.89486694 106.80628967]
[127.89682770 107.04918671]
[112.89879608 107.29208374]
[108.82079315 113.58651733]
[122.09925842 120.56379700]
[135.37771606 127.54107666]
[148.65618896 134.51835632]
[161.93464661 141.49563599]
[175.21310425 148.47291565]
[188.49157715 155.45019531]
[203.49143982 155.38616943]
[215.78604126 163.97933960]
[220.88017273 178.08784485]
[216.91128540 192.55325317]
[205.33052063 202.08665466]
[190.37207031 203.20239258]
[177.50512695 195.49253845]
[171.43441772 181.77810669]
[159.63948059 172.51098633]
[147.84454346 163.24386597]
[136.04960632 153.97674561]
[124.25466919 144.70962524]
[112.45973206 135.44250488]
[100.66479492 126.17539215]
[96.58679962 132.46983337]
[102.49493408 146.25727844]
[108.40306854 160.04473877]
[114.31120300 173.83219910]
[120.21934509 187.61964417]
[126.12747955 201.40710449]
[132.03561401 215.19456482]
[145.48323059 224.58038330]
[143.80926514 240.89387512]
[128.73576355 247.35310364]
[115.76905060 237.31336975]
[118.24816132 221.10269165]
[112.34002686 207.31524658]
[106.43188477 193.52778625]
[100.52375031 179.74032593]
[94.61561584 165.95288086]
[88.70748138 152.16542053]
[82.79933929 138.37796021]
[81.37416077 153.31010437]
[73.16829681 165.86653137]
[62.16616058 176.06227112]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 138]
[20 137]
[21 136]
[22 135]
[23 134]
[24 133]
[34 63]
[35 62]
[36 61]
[37 60]
[38 59]
[39 58]
[40 57]
[41 56]
[66 132]
[67 131]
[69 129]
[70 128]
[71 127]
[72 126]
[74 124]
[75 123]
[76 122]
[77 121]
[78 120]
[79 118]
[80 117]
[81 116]
[82 115]
[83 114]
[84 113]
[85 112]
[88 105]
[89 104]
[90 103]
[91 102]
[92 101]
[139 151]
[140 150]
[141 149]
[142 148]
[143 147]
[173 190]
[174 189]
[175 188]
[176 187]
[177 186]
[178 185]
[179 184]
] def

init

% Start Annotations
19 138 0.0 1 colorpair
20 137 0.0 1 colorpair
21 136 0.0 1 colorpair
22 135 0.0 1 colorpair
23 134 0.0 1 colorpair
24 133 0.0 1 colorpair
34 63 0.0 1 colorpair
35 62 0.0 1 colorpair
36 61 0.0 1 colorpair
37 60 0.0 1 colorpair
38 59 0.0 1 colorpair
39 58 0.0 1 colorpair
40 57 0.0 1 colorpair
41 56 0.0 1 colorpair
66 132 0.0 1 colorpair
67 131 0.0 1 colorpair
69 129 0.0 1 colorpair
70 128 0.0 1 colorpair
71 127 0.0 1 colorpair
72 126 0.0 1 colorpair
74 124 0.0 1 colorpair
75 123 0.0 1 colorpair
76 122 0.0 1 colorpair
77 121 0.0 1 colorpair
78 120 0.0 1 colorpair
79 118 0.0 1 colorpair
80 117 0.0 1 colorpair
81 116 0.0 1 colorpair
82 115 0.0 1 colorpair
83 114 0.0 1 colorpair
84 113 0.0 1 colorpair
85 112 0.0 1 colorpair
88 105 0.0 1 colorpair
89 104 0.0 1 colorpair
90 103 0.0 1 colorpair
91 102 0.0 1 colorpair
92 101 0.0 1 colorpair
139 151 0.0 1 colorpair
140 150 0.0 1 colorpair
141 149 0.0 1 colorpair
142 148 0.0 1 colorpair
143 147 0.0 1 colorpair
173 190 0.0 0.6 colorpair
174 189 0.0 0.6 colorpair
175 188 0.0 0.6 colorpair
176 187 0.0 0.6 colorpair
177 186 0.0 0.6 colorpair
178 185 0.0 0.6 colorpair
179 184 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
173 190 1 gmark
174 189 1 gmark
175 188 1 gmark
176 187 1 gmark
177 186 1 gmark
178 185 1 gmark
179 184 1 gmark

% End Annotations
showpage
end
%%EOF
