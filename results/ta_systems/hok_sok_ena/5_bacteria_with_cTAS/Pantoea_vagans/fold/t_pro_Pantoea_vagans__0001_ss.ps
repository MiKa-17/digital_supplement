%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 17:50:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_____________AUGAAGCAGCGUGAGGCGAUCUUGAUCGCCAUCUUCUUCAUCGCGGCAGUGCUGGCCGUGAUACUGGUCACGAGAAAAGACCUCUGUGAGGUACGAAUCCGAACCGGCCACAUGGAGGUUGCUGCAUUCAUGGCUUACGAAUCCU_____\
) } def
/len { sequence length } bind def

/coor [
[81.63491821 403.63314819]
[70.54329681 393.46594238]
[61.57648468 381.38320923]
[55.05863190 367.82171631]
[51.22535706 353.27169800]
[50.21522903 338.25915527]
[52.06475830 323.32681274]
[56.70709610 309.01437378]
[63.97441483 295.83929443]
[73.60401154 284.27786255]
[85.24777985 274.74792480]
[98.48480225 267.59408569]
[112.83657074 263.07489014]
[111.11632538 248.17385864]
[109.39607239 233.27282715]
[107.67581940 218.37179565]
[105.95556641 203.47076416]
[104.23531342 188.56973267]
[102.37242126 173.68585205]
[100.36705780 158.82051086]
[98.36169434 143.95516968]
[96.35633087 129.08981323]
[94.35096741 114.22447205]
[85.83909607 101.87343597]
[72.66141510 94.70764160]
[59.48373032 87.54183960]
[46.30604553 80.37604523]
[31.46058846 78.22839355]
[16.79236984 81.36580658]
[2.12415028 84.50321960]
[-12.54406929 87.64062500]
[-27.21228790 90.77803802]
[-41.88050842 93.91544342]
[-53.68422699 105.29983521]
[-69.36836243 100.51026917]
[-72.79842377 84.47384644]
[-60.44585037 73.68746948]
[-45.01791763 79.24723053]
[-30.34969902 76.10981750]
[-15.68147945 72.97240448]
[-1.01325989 69.83499908]
[13.65495968 66.69758606]
[28.32317924 63.56017685]
[30.79058266 56.47766876]
[16.41385460 52.19868469]
[2.03712702 47.91970444]
[-12.88698101 46.41272354]
[-16.83815956 31.94247055]
[-4.75096941 23.05991364]
[7.87858534 31.15221596]
[21.80198860 36.73243332]
[35.72539139 42.31265259]
[38.19279480 35.23014450]
[28.64916039 23.65780830]
[19.10552216 12.08547020]
[9.56188583 0.51313245]
[0.01824956 -11.05920506]
[-9.52538681 -22.63154221]
[-19.06902313 -34.20388031]
[-28.61265945 -45.77621841]
[-44.25017166 -45.72841644]
[-56.22674942 -55.78304672]
[-58.88742447 -71.19261932]
[-50.97590256 -84.68119812]
[-36.22776794 -89.87989807]
[-21.60663223 -84.33404541]
[-14.01615429 -70.66223145]
[-17.04032326 -55.31985474]
[-7.49668598 -43.74751663]
[2.04695058 -32.17517853]
[11.59058762 -20.60284233]
[21.13422394 -9.03050423]
[30.67786026 2.54183364]
[40.22149658 14.11417103]
[49.76513290 25.68650818]
[55.63189697 33.12098694]
[59.17346191 41.11317825]
[60.45041275 49.03689957]
[59.67772293 56.32303238]
[57.20215607 62.49522781]
[53.47184372 67.19836426]
[66.64952850 74.36415863]
[79.82720947 81.52995300]
[93.00489807 88.69575500]
[80.38092804 80.59418488]
[75.68472290 66.34828949]
[81.01605988 52.32770157]
[93.99118805 44.80133820]
[108.80863953 47.13439560]
[118.84320831 58.28371429]
[119.60823822 73.26419067]
[110.76049805 85.37852478]
[124.56307220 79.50580597]
[138.36564636 73.63307953]
[152.16822815 67.76036072]
[165.97080994 61.88764191]
[179.77339172 56.01492310]
[193.57595825 50.14220047]
[207.37854004 44.26948166]
[221.18112183 38.39675903]
[234.98370361 32.52404022]
[244.65295410 20.00142479]
[259.39349365 22.13815689]
[273.19607544 16.26543617]
[286.99865723 10.39271545]
[293.70828247 4.12426758]
[301.12231445 4.54250526]
[315.03485107 -1.06475091]
[317.81823730 -16.23894882]
[328.38024902 -27.48385239]
[343.35052490 -31.21125412]
[357.95217896 -26.23175240]
[367.52584839 -14.13428783]
[369.01660156 1.22088099]
[361.94873047 14.93397617]
[348.57760620 22.62919998]
[333.16989136 21.85103226]
[320.64212036 12.84778595]
[306.72958374 18.45504189]
[292.87136841 24.19529343]
[279.06881714 30.06801414]
[265.26623535 35.94073486]
[256.58422852 48.04329300]
[240.85641479 46.32661819]
[227.05383301 52.19933701]
[213.25126648 58.07205963]
[199.44868469 63.94477844]
[185.64610291 69.81749725]
[171.84352112 75.69021606]
[158.04095459 81.56294250]
[144.23837280 87.43566132]
[130.43579102 93.30838013]
[116.63321686 99.18109894]
[109.21631622 112.21910858]
[111.22167969 127.08444977]
[113.22704315 141.94979858]
[115.23240662 156.81513977]
[117.23777008 171.68049622]
[121.50421906 179.81127930]
[119.13634491 186.84947205]
[120.85659790 201.75050354]
[122.57685089 216.65153503]
[124.29710388 231.55256653]
[126.01735687 246.45359802]
[127.73760223 261.35464478]
[142.74157715 262.48486328]
[157.26043701 266.43441772]
[170.76934814 273.06057739]
[182.77995300 282.12377930]
[192.85809326 293.29641724]
[200.63945007 306.17456055]
[205.84272766 320.29272461]
[208.27983093 335.14053345]
[207.86265564 350.18121338]
[204.60627747 364.87109375]
[198.62843323 378.67913818]
[190.14520264 391.10617065]
[179.46325684 401.70300293]
[166.96873474 410.08651733]
[153.11331177 415.95367432]
[138.39784241 419.09240723]
[123.35430145 419.38922119]
[108.52648163 416.83340454]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 145]
[14 144]
[15 143]
[16 142]
[17 141]
[18 140]
[19 138]
[20 137]
[21 136]
[22 135]
[23 134]
[24 84]
[25 83]
[26 82]
[27 81]
[28 43]
[29 42]
[30 41]
[31 40]
[32 39]
[33 38]
[53 75]
[54 74]
[55 73]
[56 72]
[57 71]
[58 70]
[59 69]
[60 68]
[92 133]
[93 132]
[94 131]
[95 130]
[96 129]
[97 128]
[98 127]
[99 126]
[100 125]
[101 124]
[103 122]
[104 121]
[105 120]
[107 119]
[108 118]
] def

init

% Start Annotations
13 145 0.0 0.6 colorpair
14 144 0.0 1 colorpair
15 143 0.0 1 colorpair
16 142 0.0 1 colorpair
17 141 0.0 1 colorpair
18 140 0.0 1 colorpair
19 138 0.0 1 colorpair
20 137 0.0 1 colorpair
21 136 0.0 1 colorpair
22 135 0.0 1 colorpair
23 134 0.0 1 colorpair
24 84 0.0 1 colorpair
25 83 0.0 1 colorpair
26 82 0.0 1 colorpair
27 81 0.0 1 colorpair
28 43 0.0 1 colorpair
29 42 0.0 1 colorpair
30 41 0.0 1 colorpair
31 40 0.0 1 colorpair
32 39 0.0 1 colorpair
33 38 0.0 1 colorpair
53 75 0.0 1 colorpair
54 74 0.0 1 colorpair
55 73 0.0 1 colorpair
56 72 0.0 1 colorpair
57 71 0.0 1 colorpair
58 70 0.0 1 colorpair
59 69 0.0 1 colorpair
60 68 0.0 1 colorpair
92 133 0.0 1 colorpair
93 132 0.0 1 colorpair
94 131 0.0 1 colorpair
95 130 0.0 1 colorpair
96 129 0.0 1 colorpair
97 128 0.0 1 colorpair
98 127 0.0 1 colorpair
99 126 0.0 1 colorpair
100 125 0.0 1 colorpair
101 124 0.0 1 colorpair
103 122 0.0 1 colorpair
104 121 0.0 1 colorpair
105 120 0.0 1 colorpair
107 119 0.0 1 colorpair
108 118 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
13 145 1 gmark

% End Annotations
showpage
end
%%EOF
