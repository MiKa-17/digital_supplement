%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 17:55:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_________GAGGCA_AGCAUGCGCUUAAAGCAUGUGUUUCACUCGCUAACCGUUGUAUGUAUUACGGUUUUGUUAUUUAUCUGGAUGAUAAGAGACUCGCUGUGCGAGCUGAAAAUCUACCAGGAAAAUAUCACUAUCCUGAUCAGGUUGGCGUGUGAGGUG______\
) } def
/len { sequence length } bind def

/coor [
[42.14453888 370.19119263]
[35.27451324 376.03387451]
[27.86502266 381.17370605]
[19.98768044 385.56121826]
[11.71860600 389.15423584]
[3.13768077 391.91821289]
[-5.67221498 393.82666016]
[-14.62600994 394.86129761]
[-23.63725662 395.01229858]
[-32.61897659 394.27838135]
[-41.48448181 392.66680908]
[-50.14823151 390.19326782]
[-58.52664948 386.88186646]
[-66.53892517 382.76464844]
[-74.10778809 377.88156128]
[-81.16028595 372.27984619]
[-87.62844086 366.01370239]
[-93.44994354 359.14376831]
[-106.05509949 367.27456665]
[-118.66026306 375.40536499]
[-131.26542664 383.53616333]
[-143.87059021 391.66696167]
[-156.47575378 399.79776001]
[-158.24963379 415.33441162]
[-169.63079834 426.05838013]
[-185.24537659 426.90612793]
[-197.72067261 417.47735596]
[-201.16621399 402.22409058]
[-193.95512390 388.34841919]
[-179.49226379 382.40203857]
[-164.60655212 387.19259644]
[-152.00138855 379.06179810]
[-139.39622498 370.93099976]
[-126.79106140 362.80020142]
[-114.18590546 354.66940308]
[-101.58074188 346.53860474]
[-109.82314301 325.06356812]
[-112.46057129 302.20504761]
[-109.32313538 279.40197754]
[-100.60461426 258.09088135]
[-86.85047913 239.61511230]
[-68.92375946 225.14041138]
[-47.95090485 215.58122253]
[-25.25099564 211.54298401]
[-2.25278974 213.28373718]
[19.59521866 220.69772339]
[27.25468636 207.80072021]
[34.91415405 194.90371704]
[34.76056671 180.00990295]
[48.45989609 172.09542847]
[56.11936188 159.19842529]
[63.77883148 146.30143738]
[49.61664963 130.28718567]
[42.11758423 110.26751709]
[42.27337265 88.88997650]
[50.06341553 68.98172760]
[38.43535614 59.50606155]
[26.80729675 50.03039551]
[10.76537800 50.22119904]
[0.72621286 37.70741653]
[4.39098978 22.08855247]
[18.94840622 15.34605980]
[33.23125458 22.65220261]
[36.28296280 38.40233612]
[47.91102219 47.87799835]
[59.53908157 57.35366440]
[69.62326050 49.67058945]
[81.12018585 44.32820511]
[93.49517059 41.57497787]
[106.17267609 41.53895187]
[118.56310272 44.22180557]
[130.09020996 49.49875641]
[139.34938049 37.69758224]
[141.78063965 22.06430054]
[155.72419739 16.82725143]
[164.98336792 5.02607775]
[174.24253845 -6.77509642]
[183.50170898 -18.57627106]
[181.80271912 -34.06016922]
[191.36094666 -45.89633942]
[206.13294983 -47.42065430]
[215.39212036 -59.22182846]
[224.65129089 -71.02300262]
[233.91046143 -82.82417297]
[243.16963196 -94.62535095]
[241.47064209 -110.10924530]
[251.02886963 -121.94541931]
[265.80087280 -123.46973419]
[275.06005859 -135.27090454]
[284.31921387 -147.07208252]
[279.46713257 -163.25602722]
[285.14739990 -178.99189758]
[298.94146729 -188.16149902]
[315.31790161 -187.32508850]
[324.35742188 -199.29533386]
[327.04742432 -208.06672668]
[333.67626953 -211.40121460]
[342.93542480 -223.20239258]
[345.36669922 -238.83567810]
[359.31024170 -244.07272339]
[368.56942749 -255.87390137]
[373.58963013 -272.06753540]
[390.54016113 -271.72634888]
[394.90466309 -255.34381104]
[380.37060547 -246.61473083]
[371.11141968 -234.81355286]
[369.34243774 -220.02436829]
[354.73660278 -213.94322205]
[345.47741699 -202.14204407]
[336.32769775 -190.25582886]
[327.28817749 -178.28556824]
[332.35076904 -165.90852356]
[330.61273193 -152.54026794]
[322.42294312 -141.69624329]
[309.84109497 -136.28153992]
[296.12039185 -137.81291199]
[286.86120605 -126.01173401]
[277.60205078 -114.21055603]
[279.63629150 -99.50010681]
[270.41427612 -87.40013123]
[254.97080994 -85.36617279]
[245.71163940 -73.56500244]
[236.45246887 -61.76382828]
[227.19329834 -49.96265411]
[217.93412781 -38.16147995]
[219.96836853 -23.45102501]
[210.74635315 -11.35105610]
[195.30288696 -9.31709766]
[186.04371643 2.48407674]
[176.78454590 14.28525066]
[167.52536011 26.08642578]
[165.75637817 40.87561035]
[151.15055847 46.95675659]
[141.89137268 58.75793076]
[149.63238525 68.49727631]
[155.15046692 79.64756775]
[158.19847107 91.70940399]
[158.63987732 104.14255524]
[156.45492554 116.39017487]
[151.74145508 127.90370941]
[144.71060181 138.16749573]
[135.67724609 146.72183228]
[125.04598999 153.18359375]
[113.29296112 157.26336670]
[100.94457245 158.77842712]
[88.55387878 157.66091919]
[76.67582703 153.96090698]
[69.01635742 166.85789490]
[61.35689163 179.75489807]
[60.96262360 195.57119751]
[47.81115341 202.56318665]
[40.15168381 215.46018982]
[32.49221420 228.35717773]
[39.58626556 233.95074463]
[46.09656906 240.21282959]
[51.96041107 247.08288574]
[57.12131500 254.49449158]
[61.52960587 262.37600708]
[65.14287567 270.65124512]
[67.92641449 279.24032593]
[69.85350037 288.06024170]
[70.90570068 297.02584839]
[71.07303619 306.05056763]
[70.35404968 315.04730225]
[68.75585175 323.92919922]
[66.29404449 332.61059570]
[62.99253845 341.00772095]
[58.88336563 349.03958130]
[54.00634003 356.62872314]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 36]
[19 35]
[20 34]
[21 33]
[22 32]
[23 31]
[46 153]
[47 152]
[48 151]
[50 149]
[51 148]
[52 147]
[56 66]
[57 65]
[58 64]
[72 134]
[73 133]
[75 131]
[76 130]
[77 129]
[78 128]
[81 125]
[82 124]
[83 123]
[84 122]
[85 121]
[88 118]
[89 117]
[90 116]
[94 111]
[95 110]
[97 109]
[98 108]
[100 106]
[101 105]
] def

init

% Start Annotations
18 36 0.16 0.2 colorpair
19 35 0.0 1 colorpair
20 34 0.0 1 colorpair
21 33 0.0 1 colorpair
22 32 0.16 1 colorpair
23 31 0.16 1 colorpair
46 153 0.0 0.2 colorpair
47 152 0.32 0.2 colorpair
48 151 0.16 0.2 colorpair
51 148 0.16 0.2 colorpair
56 66 0.0 1 colorpair
57 65 0.0 1 colorpair
58 64 0.0 1 colorpair
72 134 0.0 0.2 colorpair
73 133 0.0 0.2 colorpair
75 131 0.0 0.6 colorpair
76 130 0.0 0.6 colorpair
77 129 0.16 0.6 colorpair
78 128 0.16 0.6 colorpair
81 125 0.16 0.6 colorpair
82 124 0.0 0.2 colorpair
83 123 0.0 1 colorpair
84 122 0.0 1 colorpair
85 121 0.16 1 colorpair
88 118 0.0 1 colorpair
89 117 0.0 1 colorpair
90 116 0.0 1 colorpair
94 111 0.0 1 colorpair
95 110 0.16 1 colorpair
97 109 0.16 0.2 colorpair
98 108 0.16 1 colorpair
101 105 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
18 36 2 gmark
36 cmark
32 cmark
23 cmark
31 cmark
46 153 2 gmark
47 152 2 gmark
47 cmark
152 cmark
48 151 2 gmark
151 cmark
50 149 3 gmark
50 cmark
149 cmark
51 148 2 gmark
51 cmark
148 cmark
52 147 3 gmark
52 cmark
147 cmark
72 134 2 gmark
73 133 2 gmark
75 131 1 gmark
76 130 1 gmark
77 129 1 gmark
129 cmark
78 128 1 gmark
128 cmark
81 125 1 gmark
125 cmark
82 124 2 gmark
121 cmark
110 cmark
97 109 2 gmark
97 cmark
98 cmark
108 cmark
100 106 4 gmark
100 cmark
106 cmark
101 cmark

% End Annotations
showpage
end
%%EOF
