%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 17:55:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_________GAGGCA_AGCAUGCGCUUAAAGCAUGUGUUUCACUCGUUAACCGUUGUAUGUAUUACGGUUUUGUUAUUUAUCUGGAUGAUAAGAGACUCGCUGUGCGAGCUGAAAAUCUACCAGGAAAAUAUCACUAUCCUGAUCAGGUUGGCGUGUGAGGUG______\
) } def
/len { sequence length } bind def

/coor [
[50.85461044 355.52520752]
[43.98458481 361.36785889]
[36.57509232 366.50769043]
[28.69775009 370.89523315]
[20.42867470 374.48825073]
[11.84774971 377.25222778]
[3.03785348 379.16067505]
[-5.91594076 380.19528198]
[-14.92718887 380.34628296]
[-23.90890694 379.61236572]
[-32.77441406 378.00079346]
[-41.43816376 375.52728271]
[-49.81658173 372.21585083]
[-57.82885361 368.09866333]
[-65.39772034 363.21554565]
[-72.45021820 357.61383057]
[-78.91837311 351.34771729]
[-84.73987579 344.47775269]
[-97.34503174 352.60855103]
[-109.95019531 360.73937988]
[-122.55535889 368.87017822]
[-135.16052246 377.00097656]
[-147.76567078 385.13177490]
[-149.53956604 400.66842651]
[-160.92073059 411.39236450]
[-176.53530884 412.24011230]
[-189.01060486 402.81137085]
[-192.45614624 387.55810547]
[-185.24505615 373.68243408]
[-170.78219604 367.73602295]
[-155.89648438 372.52661133]
[-143.29132080 364.39581299]
[-130.68615723 356.26501465]
[-118.08099365 348.13421631]
[-105.47583008 340.00341797]
[-92.87067413 331.87258911]
[-101.11307526 310.39755249]
[-103.75049591 287.53903198]
[-100.61306763 264.73599243]
[-91.89454651 243.42488098]
[-78.14041138 224.94911194]
[-60.21369171 210.47441101]
[-39.24083328 200.91522217]
[-16.54092789 196.87698364]
[6.45727921 198.61775208]
[28.30528641 206.03172302]
[35.96475601 193.13471985]
[43.62422180 180.23771667]
[43.47063446 165.34391785]
[57.16996384 157.42942810]
[64.82942963 144.53244019]
[72.48889923 131.63543701]
[58.71994781 107.32249451]
[63.28642273 79.75711060]
[51.65836334 70.28144073]
[40.03030396 60.80577850]
[28.40224266 51.33011246]
[16.77418327 41.85444641]
[0.73226541 42.04524994]
[-9.30689907 29.53146935]
[-5.64212227 13.91260433]
[8.91529369 7.17011166]
[23.19814301 14.47625542]
[26.24984932 30.22638702]
[37.87790680 39.70205307]
[49.50597000 49.17771912]
[61.13402939 58.65338135]
[72.76208496 68.12905121]
[83.32588959 61.53396988]
[95.36094666 58.33297729]
[107.80533600 58.80851746]
[119.56101227 62.91862488]
[128.82019043 51.11745071]
[131.25144958 35.48416901]
[145.19499207 30.24711800]
[154.45416260 18.44594383]
[163.71334839 6.64477015]
[172.97251892 -5.15640402]
[171.27351379 -20.64030457]
[180.83174133 -32.47647095]
[195.60374451 -34.00078583]
[204.86293030 -45.80195999]
[214.12210083 -57.60313416]
[223.38127136 -69.40430450]
[232.64044189 -81.20548248]
[230.94145203 -96.68938446]
[240.49967957 -108.52555084]
[255.27168274 -110.04986572]
[264.53085327 -121.85103607]
[273.79003906 -133.65220642]
[268.93795776 -149.83616638]
[274.61819458 -165.57202148]
[288.41226196 -174.74163818]
[304.78872681 -173.90521240]
[313.82824707 -185.87547302]
[316.51821899 -194.64686584]
[323.14706421 -197.98135376]
[332.40621948 -209.78253174]
[334.83749390 -225.41580200]
[348.78103638 -230.65286255]
[358.04022217 -242.45402527]
[363.06045532 -258.64767456]
[380.01095581 -258.30648804]
[384.37548828 -241.92395020]
[369.84140015 -233.19485474]
[360.58221436 -221.39369202]
[358.81323242 -206.60450745]
[344.20739746 -200.52334595]
[334.94824219 -188.72218323]
[325.79849243 -176.83595276]
[316.75897217 -164.86569214]
[321.82159424 -152.48866272]
[320.08352661 -139.12039185]
[311.89376831 -128.27638245]
[299.31188965 -122.86167145]
[285.59118652 -124.39303589]
[276.33203125 -112.59186554]
[267.07284546 -100.79068756]
[269.10708618 -86.08023834]
[259.88510132 -73.98027039]
[244.44161987 -71.94631195]
[235.18244934 -60.14513397]
[225.92327881 -48.34395981]
[216.66409302 -36.54278564]
[207.40492249 -24.74161339]
[209.43916321 -10.03115940]
[200.21716309 2.06881022]
[184.77369690 4.10276937]
[175.51451111 15.90394306]
[166.25534058 27.70511818]
[156.99617004 39.50629044]
[155.22718811 54.29547501]
[140.62135315 60.37662506]
[131.36218262 72.17779541]
[136.34912109 79.10974884]
[139.82801819 86.90838623]
[141.65454102 95.25016785]
[141.75289917 103.78900909]
[140.11903381 112.17064667]
[136.82070923 120.04736328]
[131.99478149 127.09234619]
[125.84146118 133.01333618]
[118.61603546 137.56468201]
[110.61826324 140.55754089]
[102.17996979 141.86775208]
[93.65123749 141.44097900]
[85.38589478 139.29490662]
[77.72642517 152.19189453]
[70.06696320 165.08889771]
[69.67269135 180.90519714]
[56.52122116 187.89718628]
[48.86175156 200.79418945]
[41.20228577 213.69119263]
[48.29633331 219.28474426]
[54.80664062 225.54682922]
[60.67047882 232.41688538]
[65.83138275 239.82849121]
[70.23967743 247.70999146]
[73.85294342 255.98526001]
[76.63648224 264.57434082]
[78.56356812 273.39425659]
[79.61576843 282.35986328]
[79.78310394 291.38458252]
[79.06411743 300.38128662]
[77.46592712 309.26321411]
[75.00411224 317.94461060]
[71.70260620 326.34170532]
[67.59343719 334.37356567]
[62.71640778 341.96270752]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 36]
[19 35]
[20 34]
[21 33]
[22 32]
[23 31]
[46 153]
[47 152]
[48 151]
[50 149]
[51 148]
[52 147]
[54 68]
[55 67]
[56 66]
[57 65]
[58 64]
[72 134]
[73 133]
[75 131]
[76 130]
[77 129]
[78 128]
[81 125]
[82 124]
[83 123]
[84 122]
[85 121]
[88 118]
[89 117]
[90 116]
[94 111]
[95 110]
[97 109]
[98 108]
[100 106]
[101 105]
] def

init

% Start Annotations
18 36 0.16 0.2 colorpair
19 35 0.0 1 colorpair
20 34 0.0 1 colorpair
21 33 0.0 1 colorpair
22 32 0.16 1 colorpair
23 31 0.16 1 colorpair
46 153 0.0 0.2 colorpair
47 152 0.32 0.2 colorpair
48 151 0.16 0.2 colorpair
51 148 0.16 0.2 colorpair
54 68 0.32 1 colorpair
55 67 0.0 0.2 colorpair
56 66 0.0 1 colorpair
57 65 0.0 1 colorpair
58 64 0.0 1 colorpair
72 134 0.0 0.2 colorpair
73 133 0.0 0.2 colorpair
75 131 0.0 0.6 colorpair
76 130 0.0 0.6 colorpair
77 129 0.16 0.6 colorpair
78 128 0.16 0.6 colorpair
81 125 0.16 0.6 colorpair
82 124 0.0 0.2 colorpair
83 123 0.0 1 colorpair
84 122 0.0 1 colorpair
85 121 0.16 1 colorpair
88 118 0.0 1 colorpair
89 117 0.0 1 colorpair
90 116 0.0 1 colorpair
94 111 0.0 1 colorpair
95 110 0.16 1 colorpair
97 109 0.16 0.2 colorpair
98 108 0.16 1 colorpair
101 105 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
18 36 2 gmark
36 cmark
32 cmark
23 cmark
31 cmark
46 153 2 gmark
47 152 2 gmark
47 cmark
152 cmark
48 151 2 gmark
151 cmark
50 149 3 gmark
50 cmark
149 cmark
51 148 2 gmark
51 cmark
148 cmark
52 147 3 gmark
52 cmark
147 cmark
54 cmark
68 cmark
55 67 2 gmark
72 134 2 gmark
73 133 2 gmark
75 131 1 gmark
76 130 1 gmark
77 129 1 gmark
129 cmark
78 128 1 gmark
128 cmark
81 125 1 gmark
125 cmark
82 124 2 gmark
121 cmark
110 cmark
97 109 2 gmark
97 cmark
98 cmark
108 cmark
100 106 4 gmark
100 cmark
106 cmark
101 cmark

% End Annotations
showpage
end
%%EOF
