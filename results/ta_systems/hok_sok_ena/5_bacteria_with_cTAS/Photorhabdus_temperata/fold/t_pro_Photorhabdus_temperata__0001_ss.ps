%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 17:50:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGGCAAGGAGACGCUAACCAUGAAACAGCAAAAAGCGAUAUUUAUCGC___CAUCGUUAUUUGUAUUGCCGCUUUAGCGGCUGUGCUGGUCACGAGGAAAGACCUCUGUGAGGUUCGCAUCCGAAGCGGCCAAACGGAGGUUGCUGUUUUCAUGGAUUACGAACCCAGG\
) } def
/len { sequence length } bind def

/coor [
[95.26892853 492.40011597]
[80.97369385 497.74884033]
[65.77418518 496.35687256]
[52.68827057 488.50057983]
[44.31417084 475.73980713]
[42.31456757 460.60821533]
[47.08648682 446.11026001]
[57.68246078 435.12442017]
[71.99864960 429.83203125]
[73.36662292 414.89453125]
[62.06223297 405.23281860]
[58.57341003 390.59411621]
[64.44199371 376.54373169]
[77.61080170 368.55068970]
[78.97877502 353.61318970]
[76.44811249 346.63970947]
[80.51058960 338.41622925]
[82.15115356 323.50622559]
[83.79172516 308.59619141]
[85.29605865 293.67181396]
[86.66403961 278.73434448]
[88.03201294 263.79684448]
[89.39999390 248.85934448]
[90.76796722 233.92185974]
[92.13594818 218.98435974]
[93.50392151 204.04687500]
[94.87190247 189.10939026]
[96.10340118 174.16001892]
[97.19833374 159.20004272]
[98.29326630 144.24005127]
[99.38819122 129.28007507]
[94.33249664 123.74021912]
[86.91950226 136.78044128]
[72.22680664 133.75973511]
[70.55957031 118.85267639]
[84.22110748 112.66051483]
[79.16542053 107.12066650]
[64.16792297 106.84670258]
[49.17042160 106.57273865]
[34.17292404 106.29878235]
[19.17542458 106.02481842]
[5.09571028 114.43276978]
[-9.09187603 106.20814514]
[-8.79236126 89.81173706]
[5.68614006 82.11075592]
[19.44938660 91.02732086]
[34.44688416 91.30128479]
[49.44438171 91.57524109]
[64.44187927 91.84920502]
[79.43937683 92.12316895]
[83.80332184 86.02349091]
[69.50404358 81.49240875]
[69.39482880 66.49280548]
[83.62660980 61.75398254]
[92.53120422 73.82415009]
[96.89514923 67.72447205]
[91.79345703 53.61870193]
[86.69177246 39.51292801]
[81.59008789 25.40715790]
[69.62043762 15.06123734]
[72.56777954 0.46115226]
[67.46608734 -13.64461994]
[62.36440659 -27.75039101]
[50.39475632 -38.09631348]
[53.34209442 -52.69639587]
[48.24040604 -66.80216980]
[43.13872147 -80.90794373]
[38.03703690 -95.01371002]
[26.06738663 -105.35963440]
[29.01472282 -119.95971680]
[23.91303825 -134.06549072]
[18.81135178 -148.17126465]
[13.70966625 -162.27703857]
[8.60798073 -176.38281250]
[-4.27489138 -186.52990723]
[-1.66120422 -202.71943665]
[13.76030445 -208.29698181]
[26.12530899 -197.52485657]
[22.71375275 -181.48449707]
[27.81543922 -167.37872314]
[32.91712570 -153.27294922]
[38.01881027 -139.16717529]
[43.12049484 -125.06140137]
[54.72523880 -115.72442627]
[52.14280701 -100.11540222]
[57.24449158 -86.00962830]
[62.34617996 -71.90385437]
[67.44786835 -57.79808426]
[79.05260468 -48.46110153]
[76.47017670 -32.85207748]
[81.57186127 -18.74630547]
[86.67354584 -4.64053345]
[98.27828979 4.69644785]
[95.69586182 20.30547142]
[100.79754639 34.41124344]
[105.89923096 48.51701736]
[111.00091553 62.62278748]
[111.08889771 47.62304688]
[122.22254181 37.57108307]
[137.15324402 39.01127625]
[146.16029358 51.00598145]
[143.37962341 65.74598694]
[130.62202454 73.63468933]
[145.32029724 70.64118958]
[160.01855469 67.64768219]
[174.71681213 64.65418243]
[189.41508484 61.66068268]
[204.11334229 58.66717911]
[218.81161499 55.67367554]
[233.50987244 52.68017578]
[248.20812988 49.68667221]
[256.94311523 36.78947067]
[271.89187622 33.96301651]
[284.13357544 42.36996841]
[298.83184814 39.37646484]
[313.53009033 36.38296509]
[321.34881592 31.58745193]
[328.52404785 33.47159576]
[343.27453613 30.74704170]
[358.02499390 28.02248955]
[365.57568359 14.32864094]
[380.18060303 8.74026775]
[394.94381714 13.89603043]
[402.89453125 27.36153412]
[400.27871704 42.77878189]
[388.33145142 52.86821747]
[372.69387817 52.86592102]
[360.74957275 42.77297592]
[345.99908447 45.49752808]
[331.24859619 48.22208023]
[316.52359009 51.08122635]
[301.82534790 54.07472992]
[287.12707520 57.06822968]
[279.14849854 69.59331512]
[264.28500366 72.83853149]
[251.20164490 64.38493347]
[236.50337219 67.37844086]
[221.80511475 70.37194061]
[207.10684204 73.36544037]
[192.40858459 76.35894775]
[177.71032715 79.35244751]
[163.01205444 82.34594727]
[148.31379700 85.33944702]
[133.61552429 88.33295441]
[114.34817505 130.37500000]
[113.25325012 145.33499146]
[112.15831757 160.29496765]
[111.06338501 175.25495911]
[113.56459808 184.07952881]
[109.80938721 190.47735596]
[108.44141388 205.41485596]
[107.07343292 220.35234070]
[105.70545959 235.28984070]
[104.33747864 250.22732544]
[102.96950531 265.16482544]
[101.60152435 280.10229492]
[100.23355103 295.03979492]
[102.57317352 303.90859985]
[98.70173645 310.23675537]
[97.06117249 325.14678955]
[95.42060089 340.05679321]
[93.91626740 354.98117065]
[92.54829407 369.91867065]
[104.04621124 380.17068481]
[107.26510620 395.05328369]
[101.17539215 408.81481934]
[88.30411530 416.26251221]
[86.93614197 431.20001221]
[100.05288696 439.00473022]
[108.47717285 451.73242188]
[110.53634644 466.85598755]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 168]
[10 167]
[14 163]
[15 162]
[17 161]
[18 160]
[19 159]
[20 157]
[21 156]
[22 155]
[23 154]
[24 153]
[25 152]
[26 151]
[27 150]
[28 148]
[29 147]
[30 146]
[31 145]
[37 50]
[38 49]
[39 48]
[40 47]
[41 46]
[56 97]
[57 96]
[58 95]
[59 94]
[61 92]
[62 91]
[63 90]
[65 88]
[66 87]
[67 86]
[68 85]
[70 83]
[71 82]
[72 81]
[73 80]
[74 79]
[103 144]
[104 143]
[105 142]
[106 141]
[107 140]
[108 139]
[109 138]
[110 137]
[111 136]
[114 133]
[115 132]
[116 131]
[118 130]
[119 129]
[120 128]
] def

init

% Start Annotations
9 168 0.0 1 colorpair
10 167 0.0 1 colorpair
14 163 0.0 1 colorpair
15 162 0.0 1 colorpair
17 161 0.0 1 colorpair
18 160 0.0 1 colorpair
19 159 0.0 1 colorpair
20 157 0.0 1 colorpair
21 156 0.0 1 colorpair
22 155 0.0 1 colorpair
23 154 0.0 1 colorpair
24 153 0.0 1 colorpair
25 152 0.0 1 colorpair
26 151 0.0 1 colorpair
27 150 0.0 1 colorpair
28 148 0.0 1 colorpair
29 147 0.0 1 colorpair
30 146 0.0 1 colorpair
31 145 0.0 1 colorpair
37 50 0.0 1 colorpair
38 49 0.0 1 colorpair
39 48 0.0 1 colorpair
40 47 0.16 1 colorpair
41 46 0.0 1 colorpair
56 97 0.0 1 colorpair
57 96 0.0 1 colorpair
58 95 0.0 1 colorpair
59 94 0.0 1 colorpair
61 92 0.0 1 colorpair
62 91 0.0 1 colorpair
63 90 0.16 1 colorpair
65 88 0.16 1 colorpair
66 87 0.16 1 colorpair
67 86 0.16 1 colorpair
68 85 0.0 1 colorpair
70 83 0.0 1 colorpair
71 82 0.0 1 colorpair
72 81 0.0 1 colorpair
73 80 0.0 1 colorpair
74 79 0.0 1 colorpair
103 144 0.0 1 colorpair
104 143 0.0 1 colorpair
105 142 0.16 1 colorpair
106 141 0.0 1 colorpair
107 140 0.0 1 colorpair
108 139 0.0 1 colorpair
109 138 0.0 1 colorpair
110 137 0.0 1 colorpair
111 136 0.0 1 colorpair
114 133 0.0 1 colorpair
115 132 0.16 1 colorpair
116 131 0.0 1 colorpair
118 130 0.0 1 colorpair
119 129 0.0 1 colorpair
120 128 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
40 cmark
63 cmark
88 cmark
87 cmark
67 cmark
105 cmark
132 cmark

% End Annotations
showpage
end
%%EOF
