%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 17:40:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___AAAGGCAAGGAGAAGAAAGCAAUGAAGCAGCAAAAGGCGAUGAUAACCGCCCUGAUCGUCAUCUGUAUAACCGCCAUAGUGACGGCACUGGUAACGAGAAAAGACCUCUGCGAGGUACAAAUCCGAACCGGCCAGACGGAGGUCGCUGUCUUCACAGCUUACGAACCCGAG___\
) } def
/len { sequence length } bind def

/coor [
[93.65229034 530.20202637]
[78.90917969 533.59265137]
[63.84008789 532.25933838]
[49.92132568 526.33288574]
[38.51651001 516.39379883]
[30.74296761 503.41583252]
[27.36227608 488.67047119]
[28.70563889 473.60226440]
[34.64144516 459.68746948]
[44.58816528 448.28933716]
[57.57132721 440.52447510]
[72.31896210 437.15368652]
[73.64095306 422.21203613]
[74.96293640 407.27041626]
[63.62885666 397.64355469]
[60.09498978 383.01562500]
[65.92028809 368.94726562]
[79.06443024 360.91369629]
[72.47891998 347.55404663]
[81.40235901 334.48950195]
[82.72434998 319.54785156]
[84.04633331 304.60623169]
[85.36832428 289.66461182]
[86.69030762 274.72296143]
[80.10480499 261.36331177]
[89.02823639 248.29875183]
[90.35022736 233.35711670]
[91.67221069 218.41548157]
[92.99420166 203.47384644]
[94.31618500 188.53222656]
[95.50627136 173.57949829]
[96.56435394 158.61686707]
[97.62243652 143.65423584]
[98.68052673 128.69160461]
[93.76451874 123.02742004]
[82.43601227 132.85925293]
[72.60435486 121.53058624]
[83.93251801 111.69905853]
[79.01651764 106.03488159]
[64.05388641 104.97679901]
[49.09124756 103.91870880]
[34.12861252 102.86062622]
[19.16597748 101.80254364]
[4.20334196 100.74446106]
[-10.29690647 108.40441132]
[-24.03485107 99.44891357]
[-22.87807083 83.09061432]
[-8.01656437 76.15753174]
[5.26142597 85.78182220]
[20.22406197 86.83990479]
[35.18669510 87.89799500]
[50.14933395 88.95607758]
[65.11196899 90.01416016]
[80.07460022 91.07224274]
[84.63155365 85.11538696]
[72.71799469 76.00128174]
[81.83229828 64.08786774]
[93.74546814 73.20166779]
[98.30242157 67.24481201]
[93.36608887 53.08032608]
[88.42975616 38.91584015]
[83.49342346 24.75135612]
[71.64561462 14.26612759]
[74.76353455 -0.29848146]
[69.82720184 -14.46296597]
[64.89086914 -28.62745094]
[53.04306030 -39.11267853]
[56.16098022 -53.67728806]
[51.22464752 -67.84177399]
[42.21339035 -70.79457855]
[35.68085861 -77.47679138]
[33.01296234 -86.28874207]
[34.69110489 -95.20121765]
[40.21080017 -102.22257996]
[36.03102112 -116.62846375]
[31.85123825 -131.03434753]
[27.67145729 -145.44023132]
[23.49167442 -159.84611511]
[19.31189346 -174.25198364]
[9.09142876 -187.77894592]
[19.26043701 -201.34461975]
[35.11102295 -195.32836914]
[33.71777344 -178.43177795]
[37.89755630 -164.02589417]
[42.07733917 -149.62001038]
[46.25711823 -135.21412659]
[50.43690109 -120.80824280]
[54.61668396 -106.40236664]
[70.71649933 -93.51445007]
[65.38912964 -72.77810669]
[70.32546234 -58.61362076]
[81.82019043 -49.14152908]
[79.05535126 -33.56378174]
[83.99168396 -19.39929962]
[88.92801666 -5.23481464]
[100.42274475 4.23727560]
[97.65790558 19.81502342]
[102.59423828 33.97950745]
[107.53057098 48.14399338]
[112.46690369 62.30847549]
[112.29630280 47.30944824]
[123.25501251 37.06705475]
[138.20832825 38.24965668]
[147.42080688 50.08731461]
[144.89463806 64.87306976]
[132.27493286 72.98051453]
[146.81933594 69.31173706]
[161.36375427 65.64296722]
[175.90817261 61.97418976]
[190.45259094 58.30541611]
[204.99700928 54.63664246]
[219.54142761 50.96787262]
[234.08584595 47.29909897]
[248.63026428 43.63032532]
[258.16134644 24.91889954]
[278.10275269 19.34097862]
[295.46179199 30.08435440]
[309.71118164 25.39877129]
[323.96057129 20.71318817]
[338.20996094 16.02760506]
[352.45938110 11.34202290]
[366.70877075 6.65644026]
[377.22952271 -5.92313766]
[393.33538818 -2.83552599]
[398.45800781 12.74300480]
[387.32769775 24.78659821]
[371.39434814 20.90583801]
[357.14495850 25.59141922]
[342.89556885 30.27700233]
[328.64614868 34.96258545]
[314.39675903 39.64816666]
[300.14736938 44.33375168]
[298.69131470 53.64223480]
[293.90112305 61.82264328]
[286.40444946 67.71911621]
[277.21459961 70.48061371]
[267.59375000 69.68353271]
[258.87951660 65.39609528]
[252.29904175 58.17474365]
[237.75462341 61.84351730]
[223.21020508 65.51229095]
[208.66578674 69.18106079]
[194.12136841 72.84983826]
[179.57695007 76.51860809]
[165.03253174 80.18738556]
[150.48811340 83.85615540]
[135.94369507 87.52493286]
[113.64315796 129.74967957]
[112.58507538 144.71232605]
[111.52699280 159.67495728]
[110.46890259 174.63758850]
[112.99062347 183.44915771]
[109.25782013 189.85420227]
[107.93582916 204.79583740]
[106.61384583 219.73747253]
[105.29185486 234.67910767]
[103.96987152 249.62072754]
[110.46081543 264.04910278]
[101.63194275 276.04495239]
[100.30995178 290.98657227]
[98.98796844 305.92822266]
[97.66597748 320.86984253]
[96.34399414 335.81149292]
[102.83493805 350.23986816]
[94.00605774 362.23568726]
[105.53549194 372.45227051]
[108.80017853 387.32492065]
[102.75285339 401.10510254]
[89.90457153 408.59240723]
[88.58258057 423.53402710]
[87.26059723 438.47564697]
[101.18728638 444.38348389]
[112.60541534 454.30728149]
[120.39633942 467.27481079]
[123.79679108 482.01562500]
[122.47362518 497.08560181]
[116.55646515 511.00833130]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 171]
[13 170]
[14 169]
[18 165]
[20 163]
[21 162]
[22 161]
[23 160]
[24 159]
[26 157]
[27 156]
[28 155]
[29 154]
[30 153]
[31 151]
[32 150]
[33 149]
[34 148]
[39 54]
[40 53]
[41 52]
[42 51]
[43 50]
[44 49]
[59 100]
[60 99]
[61 98]
[62 97]
[64 95]
[65 94]
[66 93]
[68 91]
[69 90]
[74 88]
[75 87]
[76 86]
[77 85]
[78 84]
[79 83]
[106 147]
[107 146]
[108 145]
[109 144]
[110 143]
[111 142]
[112 141]
[113 140]
[114 139]
[117 132]
[118 131]
[119 130]
[120 129]
[121 128]
[122 127]
] def

init

% Start Annotations
12 171 0.16 1 colorpair
13 170 0.0 1 colorpair
14 169 0.0 0.6 colorpair
18 165 0.0 1 colorpair
20 163 0.16 1 colorpair
21 162 0.16 1 colorpair
22 161 0.0 1 colorpair
23 160 0.0 1 colorpair
24 159 0.0 0.6 colorpair
26 157 0.0 1 colorpair
27 156 0.0 1 colorpair
28 155 0.0 1 colorpair
29 154 0.0 1 colorpair
30 153 0.16 1 colorpair
31 151 0.0 1 colorpair
32 150 0.0 1 colorpair
33 149 0.0 1 colorpair
34 148 0.0 1 colorpair
39 54 0.0 1 colorpair
40 53 0.0 1 colorpair
41 52 0.0 1 colorpair
42 51 0.0 1 colorpair
43 50 0.0 0.6 colorpair
44 49 0.16 1 colorpair
59 100 0.0 1 colorpair
60 99 0.0 1 colorpair
61 98 0.0 1 colorpair
62 97 0.0 1 colorpair
64 95 0.0 1 colorpair
65 94 0.0 1 colorpair
66 93 0.0 1 colorpair
68 91 0.0 1 colorpair
69 90 0.16 1 colorpair
74 88 0.0 1 colorpair
75 87 0.0 1 colorpair
76 86 0.0 1 colorpair
77 85 0.16 1 colorpair
78 84 0.0 1 colorpair
79 83 0.16 1 colorpair
106 147 0.16 1 colorpair
107 146 0.0 1 colorpair
108 145 0.0 1 colorpair
109 144 0.0 1 colorpair
110 143 0.0 1 colorpair
111 142 0.0 1 colorpair
112 141 0.0 1 colorpair
113 140 0.0 1 colorpair
114 139 0.0 0.6 colorpair
117 132 0.16 1 colorpair
118 131 0.0 1 colorpair
119 130 0.0 1 colorpair
120 129 0.0 0.6 colorpair
121 128 0.0 1 colorpair
122 127 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
171 cmark
14 169 1 gmark
20 cmark
21 cmark
24 159 1 gmark
153 cmark
43 50 1 gmark
49 cmark
90 cmark
77 cmark
85 cmark
79 cmark
147 cmark
114 139 1 gmark
132 cmark
120 129 1 gmark
122 127 1 gmark

% End Annotations
showpage
end
%%EOF
