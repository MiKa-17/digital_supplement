%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 17:51:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
________AGGAAAAUGACCAAGUACGCCCUGAUAGGGCUGAUUGCCGUUUGUUUAACGGUACUGUGUUUCUCUCUGUUAAUGCGCGAUAGACUCUGUUCUAUCAGUGUGAAUAGUGGGAAUACAGUAGUUCAGGCAACACUUUCUUACGAAG_____\
) } def
/len { sequence length } bind def

/coor [
[88.97646332 390.11849976]
[78.42849731 379.30566406]
[71.35533905 365.95849609]
[68.33038330 351.15896606]
[69.59884644 336.10678101]
[75.05789185 322.02221680]
[84.26499176 310.04699707]
[96.47376251 301.15188599]
[110.69449615 296.05804443]
[109.80588531 281.08438110]
[108.91727448 266.11071777]
[108.02866364 251.13706970]
[107.14005280 236.16340637]
[106.25144196 221.18975830]
[97.77376556 208.94319153]
[104.67994690 194.70889282]
[103.79133606 179.73524475]
[91.96991730 164.47273254]
[101.13031769 146.55511475]
[99.65084839 131.62825012]
[93.47200012 127.37715149]
[92.28781891 142.33033752]
[78.74593353 148.78147888]
[66.38807678 140.27951050]
[67.57198334 125.32630920]
[81.11430359 118.87495422]
[74.93545532 114.62385559]
[60.46592331 118.57766724]
[45.99638748 122.53147125]
[31.52685547 126.48527527]
[17.05732155 130.43908691]
[3.37206864 140.44659424]
[-10.03279591 130.06651306]
[-3.76921391 114.31202698]
[13.10351467 115.96955109]
[27.57304764 112.01574707]
[42.04258347 108.06193542]
[56.51211548 104.10813141]
[70.98165131 100.15431976]
[71.94223022 92.71608734]
[57.20016479 95.48585510]
[50.01057816 82.32113647]
[60.30939865 71.41544342]
[73.86338806 77.83963013]
[74.82395935 70.40139771]
[61.83358002 62.90139771]
[48.84320068 55.40139771]
[35.85282135 47.90139771]
[22.86243820 40.40139771]
[9.87205791 32.90139771]
[-5.93412495 35.64805603]
[-17.84045219 24.89543152]
[-16.71340752 8.89201641]
[-3.41756535 -0.08574052]
[11.84764385 4.84912872]
[17.37205696 19.91101456]
[30.36243820 27.41101456]
[43.35282135 34.91101456]
[56.34320068 42.41101456]
[69.33358002 49.91101456]
[82.32395935 57.41101456]
[96.93840027 54.03193665]
[105.31809998 41.59085083]
[113.69780731 29.14976501]
[122.07750702 16.70868111]
[130.45721436 4.26759529]
[138.83691406 -8.17349052]
[147.21661377 -20.61457634]
[155.59631348 -33.05566025]
[163.97601318 -45.49674606]
[172.35571289 -57.93783188]
[180.73541260 -70.37891388]
[179.03904724 -83.20011139]
[186.31809998 -93.40065765]
[198.20718384 -95.80553436]
[206.83103943 -108.07862854]
[215.45491028 -120.35173035]
[224.07878113 -132.62483215]
[232.70263672 -144.89791870]
[230.20538330 -155.55314636]
[233.93652344 -165.60682678]
[242.42471313 -171.79336548]
[252.69789124 -172.24754333]
[261.79989624 -184.17036438]
[270.90188599 -196.09318542]
[280.00390625 -208.01599121]
[288.98767090 -220.02815247]
[297.85232544 -232.12846375]
[306.71701050 -244.22879028]
[315.58166504 -256.32910156]
[324.44631958 -268.42944336]
[333.31100464 -280.52975464]
[330.65295410 -296.10891724]
[339.85763550 -308.95608521]
[355.46401978 -311.44924927]
[368.21316528 -302.10925293]
[370.54119873 -286.47738647]
[361.06695557 -273.82769775]
[345.41131592 -271.66506958]
[336.54666138 -259.56475830]
[327.68197632 -247.46444702]
[318.81732178 -235.36412048]
[309.95266724 -223.26380920]
[301.08798218 -211.16348267]
[299.66436768 -203.87033081]
[291.92672729 -198.91400146]
[282.82470703 -186.99118042]
[273.72271729 -175.06835938]
[264.62072754 -163.14553833]
[263.61187744 -143.86674500]
[244.97573853 -136.27406311]
[236.35186768 -124.00096130]
[227.72801208 -111.72785950]
[219.10414124 -99.45476532]
[210.48027039 -87.18167114]
[209.89198303 -69.66523743]
[193.17649841 -61.99921417]
[184.79679871 -49.55812836]
[176.41709900 -37.11704636]
[168.03739929 -24.67595863]
[159.65769958 -12.23487377]
[151.27799988 0.20621137]
[142.89830017 12.64729691]
[134.51858521 25.08838272]
[126.13889313 37.52946854]
[117.75918579 49.97055435]
[109.37948608 62.41163635]
[121.26452637 68.51824188]
[130.15217590 78.14423370]
[135.09193420 89.99709320]
[135.64717102 102.56533051]
[131.92852783 114.31072235]
[124.55901337 123.85655212]
[114.57770538 130.14877319]
[116.05718231 145.07563782]
[124.90485382 151.51683044]
[128.64173889 161.56837463]
[126.25054932 171.79602051]
[118.76499176 178.84663391]
[119.65360260 193.82028198]
[128.19483948 207.13786316]
[121.22510529 220.30114746]
[122.11370850 235.27479553]
[123.00231934 250.24845886]
[123.89093018 265.22210693]
[124.77954102 280.19577026]
[125.66815186 295.16943359]
[140.39154053 298.54559326]
[153.56666565 305.93429565]
[164.12548828 316.73651123]
[171.21205139 330.07656860]
[174.25187683 344.87307739]
[172.99853516 359.92651367]
[167.55363464 374.01657104]
[158.35856628 386.00103760]
[146.15873718 394.90838623]
[131.94313049 400.01654053]
[116.86415100 400.91137695]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 147]
[10 146]
[11 145]
[12 144]
[13 143]
[14 142]
[16 140]
[17 139]
[19 135]
[20 134]
[27 39]
[28 38]
[29 37]
[30 36]
[31 35]
[45 61]
[46 60]
[47 59]
[48 58]
[49 57]
[50 56]
[62 127]
[63 126]
[64 125]
[65 124]
[66 123]
[67 122]
[68 121]
[69 120]
[70 119]
[71 118]
[72 117]
[75 115]
[76 114]
[77 113]
[78 112]
[79 111]
[83 109]
[84 108]
[85 107]
[86 106]
[87 104]
[88 103]
[89 102]
[90 101]
[91 100]
[92 99]
] def

init

% Start Annotations
9 147 0.0 1 colorpair
10 146 0.0 1 colorpair
11 145 0.0 1 colorpair
12 144 0.0 1 colorpair
13 143 0.0 1 colorpair
14 142 0.0 1 colorpair
16 140 0.0 1 colorpair
17 139 0.0 1 colorpair
19 135 0.0 1 colorpair
20 134 0.0 1 colorpair
27 39 0.0 1 colorpair
28 38 0.0 1 colorpair
29 37 0.0 1 colorpair
30 36 0.0 1 colorpair
31 35 0.0 1 colorpair
45 61 0.0 1 colorpair
46 60 0.0 1 colorpair
47 59 0.0 1 colorpair
48 58 0.0 1 colorpair
49 57 0.0 1 colorpair
50 56 0.0 0.6 colorpair
62 127 0.0 1 colorpair
63 126 0.0 1 colorpair
64 125 0.0 1 colorpair
65 124 0.0 1 colorpair
66 123 0.0 1 colorpair
67 122 0.0 1 colorpair
68 121 0.0 1 colorpair
69 120 0.0 1 colorpair
70 119 0.0 1 colorpair
71 118 0.0 1 colorpair
72 117 0.0 1 colorpair
75 115 0.0 1 colorpair
76 114 0.0 1 colorpair
77 113 0.0 1 colorpair
78 112 0.0 1 colorpair
79 111 0.0 1 colorpair
83 109 0.0 1 colorpair
84 108 0.0 1 colorpair
85 107 0.0 1 colorpair
86 106 0.0 1 colorpair
87 104 0.0 1 colorpair
88 103 0.0 1 colorpair
89 102 0.0 1 colorpair
90 101 0.0 1 colorpair
91 100 0.0 1 colorpair
92 99 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
50 56 1 gmark

% End Annotations
showpage
end
%%EOF
