%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 15:15:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGAAUGCCAAAACGUGCUCUGCUGUUAGGUUUGUUUUUGAUCUGUACGACGCUGUUGAUCUUCACCUGGAUGGUGCGCGAUUCGCUAUGUGAAUUGCAUUUCAGACAGGAGAAAACAGAGCUGGCGGCAGUGUUGGCUUACGAAGCAAAACGUUA\
) } def
/len { sequence length } bind def

/coor [
[136.70092773 649.80865479]
[127.38581085 654.16839600]
[123.55156708 668.67010498]
[119.71731567 683.17175293]
[124.53403473 698.84759521]
[113.17011261 710.67102051]
[97.31577301 706.47912598]
[93.28060913 690.58416748]
[105.21563721 679.33752441]
[109.04988861 664.83581543]
[112.88414001 650.33416748]
[106.42205811 632.14349365]
[120.71882629 617.98297119]
[123.97351074 603.34033203]
[127.22819519 588.69769287]
[130.48287964 574.05505371]
[133.73754883 559.41241455]
[134.63179016 544.43908691]
[133.14297485 529.51318359]
[124.18064880 517.61669922]
[130.51002502 503.11669922]
[129.02122498 488.19076538]
[127.53240967 473.26483154]
[126.04360199 458.33889771]
[124.55480194 443.41296387]
[123.06599426 428.48703003]
[121.57718658 413.56109619]
[120.08837891 398.63516235]
[118.59957123 383.70925903]
[117.11076355 368.78332520]
[108.14843750 356.88684082]
[114.47781372 342.38687134]
[112.98900604 327.46093750]
[111.50019836 312.53500366]
[110.01139069 297.60906982]
[108.52258301 282.68313599]
[107.03377533 267.75720215]
[105.54497528 252.83126831]
[104.05616760 237.90533447]
[102.56735992 222.97940063]
[93.38924408 215.04739380]
[92.05543518 202.58631897]
[99.82865143 192.24896240]
[98.63690186 177.29638672]
[97.44515228 162.34379578]
[96.25339508 147.39122009]
[95.06164551 132.43862915]
[68.69139099 122.15026855]
[56.88421631 91.78574371]
[44.30957413 83.60781860]
[31.73493385 75.42990112]
[19.16029167 67.25197601]
[2.58576584 63.68526840]
[1.42480075 46.77111816]
[17.35655212 40.97322083]
[27.33821297 54.67733765]
[39.91285324 62.85525894]
[52.48749542 71.03318024]
[65.06213379 79.21109772]
[71.00471497 74.63553619]
[58.62877274 66.15991974]
[62.86521530 51.77059555]
[77.85940552 51.35317230]
[82.88986969 65.48441315]
[88.83244324 60.90884781]
[84.14049530 46.66154480]
[79.44854736 32.41424179]
[74.75659943 18.16694069]
[61.13860321 9.68579388]
[59.42194366 -6.26515055]
[70.92349243 -17.44969368]
[86.82024384 -15.28801060]
[94.91757202 -1.43835998]
[89.00389862 13.47499180]
[93.69584656 27.72229385]
[98.38779449 41.96959686]
[103.07974243 56.21689606]
[104.53948212 61.91777039]
[105.45614624 67.64443207]
[111.26521301 53.81494141]
[117.07427979 39.98545456]
[122.88334656 26.15596581]
[128.69241333 12.32647800]
[134.50148010 -1.50300968]
[140.31054688 -15.33249760]
[146.11961365 -29.16198540]
[151.92868042 -42.99147415]
[152.48820496 -59.93618393]
[168.92559814 -64.08929443]
[177.46673584 -49.44397354]
[165.75817871 -37.18240738]
[159.94911194 -23.35291672]
[154.14004517 -9.52342987]
[148.33097839 4.30605793]
[142.52189636 18.13554573]
[136.71282959 31.96503448]
[130.90376282 45.79452133]
[125.09470367 59.62400818]
[119.28563690 73.45349884]
[125.77764130 79.69813538]
[130.32691956 87.47281647]
[132.59062195 96.19160461]
[132.39813232 105.19741821]
[129.76397705 113.81152344]
[124.88665771 121.38472748]
[118.13376617 127.34627533]
[110.01422882 131.24688721]
[111.20597839 146.19946289]
[112.39772797 161.15205383]
[113.58948517 176.10462952]
[114.78123474 191.05722046]
[125.57944489 205.94178772]
[117.49329376 221.49058533]
[118.98209381 236.41651917]
[120.47090149 251.34245300]
[121.95970917 266.26840210]
[123.44851685 281.19433594]
[124.93732452 296.12023926]
[126.42613220 311.04617310]
[127.91493988 325.97210693]
[129.40374756 340.89804077]
[138.47256470 353.86212158]
[132.03669739 367.29449463]
[133.52549744 382.22042847]
[135.01431274 397.14636230]
[136.50311279 412.07229614]
[137.99192810 426.99822998]
[139.48072815 441.92416382]
[140.96954346 456.85009766]
[142.45834351 471.77603149]
[143.94715881 486.70196533]
[145.43595886 501.62789917]
[154.50477600 514.59197998]
[148.06890869 528.02435303]
[149.55770874 542.95025635]
[160.95678711 537.80352783]
[175.62181091 539.26281738]
[190.25613403 548.60760498]
[198.68246460 561.01715088]
[207.10877991 573.42675781]
[215.53509521 585.83630371]
[229.43495178 595.54351807]
[223.95495605 611.58740234]
[207.02107239 610.76293945]
[203.12553406 594.26263428]
[194.69921875 581.85308838]
[186.27290344 569.44348145]
[177.84657288 557.03393555]
[170.47998047 558.44219971]
[165.55264282 572.60986328]
[155.74679565 561.25878906]
[148.38020325 562.66711426]
[145.12551880 577.30975342]
[141.87083435 591.95239258]
[138.61614990 606.59503174]
[135.36146545 621.23767090]
[141.75683594 630.12066650]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 11]
[3 10]
[4 9]
[13 156]
[14 155]
[15 154]
[16 153]
[17 152]
[18 135]
[19 134]
[21 132]
[22 131]
[23 130]
[24 129]
[25 128]
[26 127]
[27 126]
[28 125]
[29 124]
[30 123]
[32 121]
[33 120]
[34 119]
[35 118]
[36 117]
[37 116]
[38 115]
[39 114]
[40 113]
[43 111]
[44 110]
[45 109]
[46 108]
[47 107]
[49 59]
[50 58]
[51 57]
[52 56]
[65 77]
[66 76]
[67 75]
[68 74]
[79 99]
[80 98]
[81 97]
[82 96]
[83 95]
[84 94]
[85 93]
[86 92]
[87 91]
[138 148]
[139 147]
[140 146]
[141 145]
] def

init

% Start Annotations
2 11 0.0 1 colorpair
3 10 0.0 1 colorpair
4 9 0.0 1 colorpair
13 156 0.0 1 colorpair
14 155 0.0 1 colorpair
15 154 0.0 1 colorpair
16 153 0.0 1 colorpair
17 152 0.0 1 colorpair
18 135 0.0 1 colorpair
19 134 0.0 1 colorpair
21 132 0.0 1 colorpair
22 131 0.0 1 colorpair
23 130 0.0 1 colorpair
24 129 0.0 1 colorpair
25 128 0.0 1 colorpair
26 127 0.0 1 colorpair
27 126 0.0 1 colorpair
28 125 0.0 1 colorpair
29 124 0.0 1 colorpair
30 123 0.0 1 colorpair
32 121 0.0 1 colorpair
33 120 0.0 1 colorpair
34 119 0.0 1 colorpair
35 118 0.0 1 colorpair
36 117 0.0 1 colorpair
37 116 0.0 1 colorpair
38 115 0.0 1 colorpair
39 114 0.0 1 colorpair
40 113 0.0 1 colorpair
43 111 0.0 1 colorpair
44 110 0.0 1 colorpair
45 109 0.0 1 colorpair
46 108 0.0 1 colorpair
47 107 0.0 1 colorpair
49 59 0.0 1 colorpair
50 58 0.0 1 colorpair
51 57 0.0 1 colorpair
52 56 0.0 1 colorpair
65 77 0.0 1 colorpair
66 76 0.0 1 colorpair
67 75 0.0 1 colorpair
68 74 0.0 1 colorpair
79 99 0.0 1 colorpair
80 98 0.0 1 colorpair
81 97 0.0 1 colorpair
82 96 0.0 1 colorpair
83 95 0.0 1 colorpair
84 94 0.0 1 colorpair
85 93 0.0 1 colorpair
86 92 0.0 1 colorpair
87 91 0.0 1 colorpair
138 148 0.0 1 colorpair
139 147 0.0 1 colorpair
140 146 0.0 1 colorpair
141 145 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
