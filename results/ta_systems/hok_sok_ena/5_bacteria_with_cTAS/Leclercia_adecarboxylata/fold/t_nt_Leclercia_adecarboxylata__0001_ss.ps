%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 17:50:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGAAUGCCAAAACGUACUCUGCUGUUAGGUUUGUUGAUGAUCUGUAUGACGUUACUGAUCUUCACCUGGAUGGUUCGCGGCUCGCUGUGUGAGCUGCGAUUCAGACAGAAACAGACAGAGCUGGCGGCAGUGUUAGUUUACGAAGUGAAACGUUAAGGCA\
) } def
/len { sequence length } bind def

/coor [
[142.00259399 584.63140869]
[132.73577881 597.22741699]
[117.52828217 600.86968994]
[103.56062317 593.83843994]
[97.42790222 579.45361328]
[102.02579498 564.50726318]
[115.18332672 556.05664062]
[116.91408539 541.15679932]
[118.64484406 526.25695801]
[120.37560272 511.35717773]
[110.95655823 499.87600708]
[112.49954224 484.74081421]
[124.60591125 474.93908691]
[126.33666992 460.03927612]
[128.06742859 445.13946533]
[129.79818726 430.23965454]
[131.52894592 415.33984375]
[130.95088196 400.35098267]
[128.07771301 385.62872314]
[118.04583740 374.61914062]
[122.99652100 359.59246826]
[120.12335205 344.87020874]
[117.25018311 330.14794922]
[114.37700653 315.42568970]
[111.50383759 300.70343018]
[108.63066864 285.98117065]
[105.75749969 271.25891113]
[102.88433075 256.53665161]
[100.01115417 241.81440735]
[97.13798523 227.09214783]
[87.10610962 216.08256531]
[92.05679321 201.05587769]
[89.18362427 186.33361816]
[86.31045532 171.61137390]
[83.43728638 156.88911438]
[80.56410980 142.16685486]
[77.69094086 127.44458771]
[68.32245636 115.73000336]
[54.59197998 109.69064331]
[38.84455490 111.21681976]
[30.30967522 99.01005554]
[16.57919502 92.97068787]
[2.84871411 86.93132782]
[-10.88176632 80.89196777]
[-26.62919044 82.41813660]
[-35.16407013 70.21137238]
[-48.89455032 64.17201233]
[-62.62503052 58.13264847]
[-77.26126099 64.09555817]
[-91.79443359 57.88567352]
[-97.60225677 43.18721390]
[-91.23907471 28.72051620]
[-76.48003387 23.06841087]
[-62.08141708 29.58419609]
[-56.58567047 44.40216827]
[-42.85519028 50.44153214]
[-29.12470818 56.48089218]
[-14.35937977 54.52274323]
[-4.84240389 67.16148376]
[8.88807678 73.20084381]
[22.61855698 79.24021149]
[36.34903717 85.27957153]
[51.11436462 83.32141876]
[60.63134003 95.96015930]
[74.36182404 101.99952698]
[78.15670776 89.50317383]
[87.20854187 81.18300629]
[98.48616791 78.78239441]
[102.76256561 64.40489197]
[107.03896332 50.02739716]
[99.77051544 36.25033569]
[104.31220245 21.73043060]
[117.49131775 14.88597775]
[121.76771545 0.50848025]
[126.04411316 -13.86901665]
[122.56224823 -29.30233002]
[133.60690308 -39.29556656]
[137.88330078 -53.67306519]
[142.15969849 -68.05056000]
[146.43609619 -82.42806244]
[150.71249390 -96.80555725]
[154.98889160 -111.18305206]
[159.26528931 -125.56054688]
[163.54168701 -139.93804932]
[167.81808472 -154.31555176]
[172.09448242 -168.69303894]
[176.37088013 -183.07054138]
[175.09109497 -199.97612000]
[190.98170471 -205.88581848]
[201.05941772 -192.25218201]
[190.74838257 -178.79414368]
[186.47198486 -164.41664124]
[182.19558716 -150.03915405]
[177.91918945 -135.66165161]
[173.64279175 -121.28415680]
[169.36639404 -106.90665436]
[165.08999634 -92.52915955]
[160.81359863 -78.15166473]
[156.53720093 -63.77416611]
[152.26080322 -49.39666748]
[147.98440552 -35.01916885]
[151.77214050 -20.61423111]
[140.42161560 -9.59261990]
[136.14521790 4.78487778]
[131.86882019 19.16237450]
[139.16493225 32.09691620]
[135.03286743 46.73865891]
[121.41646576 54.30379486]
[117.14006805 68.68128967]
[112.86367035 83.05879211]
[119.76223755 90.30490112]
[122.75208282 100.20895386]
[120.89868927 110.73325348]
[114.29853821 119.56692505]
[104.12181091 124.63281250]
[92.41320038 124.57141876]
[95.28636932 139.29368591]
[98.15954590 154.01593018]
[101.03271484 168.73818970]
[103.90588379 183.46044922]
[106.77905273 198.18270874]
[117.01644135 210.24531555]
[111.86024475 224.21897888]
[114.73341370 238.94122314]
[117.60658264 253.66348267]
[120.47975922 268.38574219]
[123.35292816 283.10800171]
[126.22609711 297.83026123]
[129.09927368 312.55252075]
[131.97244263 327.27478027]
[134.84561157 341.99703979]
[137.71878052 356.71929932]
[147.95616150 368.78189087]
[142.79997253 382.75555420]
[145.67314148 397.47781372]
[151.43644714 395.56311035]
[158.27311707 395.66784668]
[165.50260925 398.16336060]
[172.33811951 403.20169067]
[181.93063354 414.73355103]
[191.52313232 426.26541138]
[201.11564636 437.79727173]
[210.70816040 449.32913208]
[225.48567200 457.63946533]
[221.59092712 474.13998413]
[204.65707397 474.96524048]
[199.17630005 458.92163086]
[189.58378601 447.38977051]
[179.99128723 435.85791016]
[170.39877319 424.32604980]
[160.80625916 412.79418945]
[146.42875671 417.07058716]
[144.69799805 431.97042847]
[142.96723938 446.87023926]
[141.23648071 461.77005005]
[139.50572205 476.66986084]
[149.04293823 488.98568726]
[147.07543945 504.07156372]
[135.27542114 513.08795166]
[133.54466248 527.98773193]
[131.81390381 542.88757324]
[130.08314514 557.78735352]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 162]
[8 161]
[9 160]
[10 159]
[13 156]
[14 155]
[15 154]
[16 153]
[17 152]
[18 135]
[19 134]
[21 132]
[22 131]
[23 130]
[24 129]
[25 128]
[26 127]
[27 126]
[28 125]
[29 124]
[30 123]
[32 121]
[33 120]
[34 119]
[35 118]
[36 117]
[37 116]
[38 65]
[39 64]
[41 62]
[42 61]
[43 60]
[44 59]
[46 57]
[47 56]
[48 55]
[68 110]
[69 109]
[70 108]
[73 105]
[74 104]
[75 103]
[77 101]
[78 100]
[79 99]
[80 98]
[81 97]
[82 96]
[83 95]
[84 94]
[85 93]
[86 92]
[87 91]
[139 151]
[140 150]
[141 149]
[142 148]
[143 147]
] def

init

% Start Annotations
7 162 0.0 1 colorpair
8 161 0.0 1 colorpair
9 160 0.0 1 colorpair
10 159 0.0 1 colorpair
13 156 0.0 1 colorpair
14 155 0.0 1 colorpair
15 154 0.0 1 colorpair
16 153 0.0 1 colorpair
17 152 0.0 1 colorpair
18 135 0.0 1 colorpair
19 134 0.0 1 colorpair
21 132 0.0 1 colorpair
22 131 0.0 1 colorpair
23 130 0.0 1 colorpair
24 129 0.0 1 colorpair
25 128 0.0 1 colorpair
26 127 0.0 1 colorpair
27 126 0.0 1 colorpair
28 125 0.0 1 colorpair
29 124 0.0 1 colorpair
30 123 0.0 1 colorpair
32 121 0.0 1 colorpair
33 120 0.0 1 colorpair
34 119 0.0 1 colorpair
35 118 0.0 1 colorpair
36 117 0.0 1 colorpair
37 116 0.0 1 colorpair
38 65 0.0 1 colorpair
39 64 0.0 1 colorpair
41 62 0.0 1 colorpair
42 61 0.0 1 colorpair
43 60 0.0 1 colorpair
44 59 0.0 1 colorpair
46 57 0.0 1 colorpair
47 56 0.0 1 colorpair
48 55 0.0 1 colorpair
68 110 0.0 1 colorpair
69 109 0.0 1 colorpair
70 108 0.0 1 colorpair
73 105 0.0 1 colorpair
74 104 0.0 1 colorpair
75 103 0.0 1 colorpair
77 101 0.0 1 colorpair
78 100 0.0 1 colorpair
79 99 0.0 1 colorpair
80 98 0.0 1 colorpair
81 97 0.0 1 colorpair
82 96 0.0 1 colorpair
83 95 0.0 1 colorpair
84 94 0.0 1 colorpair
85 93 0.0 1 colorpair
86 92 0.0 1 colorpair
87 91 0.0 1 colorpair
139 151 0.0 1 colorpair
140 150 0.0 1 colorpair
141 149 0.0 1 colorpair
142 148 0.0 1 colorpair
143 147 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
