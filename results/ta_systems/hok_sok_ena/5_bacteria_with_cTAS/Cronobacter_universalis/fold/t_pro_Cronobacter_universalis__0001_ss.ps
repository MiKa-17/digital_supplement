%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 15:14:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_____________AUGAAGCCACUGAAAUAUCUACUCGCAUGUUUAGUCAUAGUCUGCGUAACGAUAUUAAUUUUCGCAUUAAUGAACCACGGCACGUUAUGCGAGCUAACCAUAAAAAAAGGAAAUAAGGAGGUGGCGGCAAAGCUUGCCUGU________________________\
) } def
/len { sequence length } bind def

/coor [
[-9.97037792 442.09539795]
[-10.22705936 427.09759521]
[-8.55547905 412.19100952]
[-4.98332310 397.62255859]
[0.43024558 383.63354492]
[7.59556580 370.45559692]
[16.39396286 358.30700684]
[26.67971611 347.38897705]
[38.28247070 337.88232422]
[51.01005554 329.94454956]
[64.65167999 323.70706177]
[78.98139954 319.27319336]
[93.76187897 316.71640015]
[108.74832916 316.07897949]
[123.69253540 317.37152100]
[138.34700012 320.57260132]
[152.46897888 325.62921143]
[165.82461548 332.45761108]
[178.19784546 340.94876099]
[172.54891968 327.05310059]
[166.89999390 313.15740967]
[161.25108337 299.26174927]
[155.60215759 285.36605835]
[149.95324707 271.47039795]
[140.56935120 270.65451050]
[132.08239746 266.43655396]
[125.68778229 259.36325073]
[122.30343628 250.38668823]
[122.43824005 240.73622131]
[126.11594391 231.75025940]
[132.86601257 224.69053650]
[128.20573425 210.43284607]
[123.54544830 196.17515564]
[118.88516235 181.91746521]
[114.22487640 167.65977478]
[109.56459045 153.40208435]
[104.90430450 139.14439392]
[93.59571838 129.45083618]
[96.66260529 113.92972565]
[86.38491058 104.45024109]
[89.07970428 90.73056030]
[84.41941833 76.47286987]
[79.75913239 62.21517944]
[75.09884644 47.95748901]
[70.43856049 33.69979858]
[65.77827454 19.44210815]
[61.11798859 5.18441820]
[56.45770264 -9.07327175]
[44.81578445 -19.78664207]
[48.21600723 -34.28794479]
[43.55572128 -48.54563522]
[38.77050018 -62.76188278]
[33.86071014 -76.93558502]
[28.95092201 -91.10929871]
[24.04113388 -105.28300476]
[19.13134384 -119.45671082]
[14.22155571 -133.63041687]
[9.31176758 -147.80412292]
[4.40197849 -161.97782898]
[-0.50781024 -176.15153503]
[-5.41759872 -190.32524109]
[-10.32738781 -204.49894714]
[-15.23717594 -218.67265320]
[-20.14696503 -232.84637451]
[-25.18094254 -246.97644043]
[-30.33872223 -261.06179810]
[-35.49650192 -275.14715576]
[-40.65428162 -289.23251343]
[-45.81206131 -303.31787109]
[-50.96984100 -317.40322876]
[-56.12762070 -331.48858643]
[-61.28540039 -345.57394409]
[-66.44318390 -359.65930176]
[-71.60095978 -373.74465942]
[-86.74526215 -376.30313110]
[-98.57114410 -386.10333252]
[-103.89751434 -400.50906372]
[-101.29159546 -415.64529419]
[-91.45436859 -427.44039917]
[-77.03200531 -432.72158813]
[-61.90404129 -430.06823730]
[-50.13982391 -420.19406128]
[-44.90386963 -405.75521851]
[-47.60462570 -390.63565063]
[-57.51560211 -378.90243530]
[-52.35782242 -364.81707764]
[-47.20004272 -350.73171997]
[-42.04226303 -336.64636230]
[-36.88448334 -322.56100464]
[-31.72670364 -308.47564697]
[-26.56892395 -294.39028931]
[-21.41114426 -280.30493164]
[-16.25336456 -266.21957397]
[-11.09558487 -252.13421631]
[-5.82775688 -246.91920471]
[-5.97325802 -237.75614929]
[-1.06346917 -223.58244324]
[3.84631944 -209.40873718]
[8.75610828 -195.23503113]
[13.66589737 -181.06132507]
[18.57568550 -166.88761902]
[23.48547363 -152.71391296]
[28.39526367 -138.54020691]
[33.30504990 -124.36650085]
[38.21483994 -110.19279480]
[43.12462997 -96.01908112]
[48.03441620 -81.84537506]
[52.94420624 -67.67166901]
[58.11970139 -62.36500168]
[57.81341171 -53.20592117]
[62.47369766 -38.94823074]
[73.78227997 -29.25466537]
[70.71539307 -13.73355770]
[75.37567902 0.52413291]
[80.03596497 14.78182316]
[84.69625092 29.03951454]
[89.35653687 43.29720306]
[94.01682281 57.55489349]
[98.67710876 71.81258392]
[103.33739471 86.07027435]
[113.61508942 95.54975891]
[110.92029572 109.26943970]
[122.56221771 119.98281097]
[119.16199493 134.48411560]
[123.82228088 148.74180603]
[128.48255920 162.99949646]
[133.14285278 177.25718689]
[137.80313110 191.51487732]
[142.46342468 205.77256775]
[147.12370300 220.03025818]
[166.44656372 228.25399780]
[173.37913513 247.76687622]
[163.84890747 265.82147217]
[169.49783325 279.71716309]
[175.14675903 293.61282349]
[180.79566956 307.50848389]
[186.44459534 321.40417480]
[192.09350586 335.29983521]
[202.74655151 345.85980225]
[216.69125366 351.38656616]
[230.63597107 356.91333008]
[244.30723572 349.32186890]
[259.64981079 352.34490967]
[269.41943359 364.55508423]
[269.00317383 380.18713379]
[258.59756470 391.86004639]
[243.11581421 394.06228638]
[229.86795044 385.75396729]
[225.10920715 370.85803223]
[211.16448975 365.33126831]
[197.21978760 359.80450439]
[205.81576538 372.09713745]
[212.76185608 385.39196777]
[217.94299316 399.46875000]
[221.27337646 414.09436035]
[222.69786072 429.02655029]
[222.19281006 444.01806641]
[219.76663208 458.82055664]
[215.45950317 473.18887329]
[209.34272766 486.88504028]
[201.51765442 499.68222046]
[192.11386108 511.36849976]
[181.28709412 521.75024414]
[169.21669006 530.65557861]
[156.10253906 537.93701172]
[142.16184998 543.47393799]
[127.62551880 547.17462158]
[112.73429108 548.97778320]
[97.73480225 548.85357666]
[82.87548828 546.80401611]
[68.40243530 542.86309814]
[54.55536270 537.09606934]
[41.56360626 529.59844971]
[29.64233971 520.49438477]
[18.98900414 509.93475342]
[9.78004646 498.09436035]
[2.16798520 485.16931152]
[-3.72110510 471.37371826]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 138]
[20 137]
[21 136]
[22 135]
[23 134]
[24 133]
[31 130]
[32 129]
[33 128]
[34 127]
[35 126]
[36 125]
[37 124]
[39 122]
[41 120]
[42 119]
[43 118]
[44 117]
[45 116]
[46 115]
[47 114]
[48 113]
[50 111]
[51 110]
[52 108]
[53 107]
[54 106]
[55 105]
[56 104]
[57 103]
[58 102]
[59 101]
[60 100]
[61 99]
[62 98]
[63 97]
[64 96]
[65 94]
[66 93]
[67 92]
[68 91]
[69 90]
[70 89]
[71 88]
[72 87]
[73 86]
[74 85]
[139 151]
[140 150]
[141 149]
] def

init

% Start Annotations
19 138 0.0 1 colorpair
20 137 0.0 1 colorpair
21 136 0.0 1 colorpair
22 135 0.0 1 colorpair
23 134 0.0 1 colorpair
24 133 0.0 1 colorpair
31 130 0.0 1 colorpair
32 129 0.0 0.2 colorpair
33 128 0.0 0.2 colorpair
34 127 0.0 0.2 colorpair
35 126 0.16 1 colorpair
36 125 0.0 1 colorpair
37 124 0.0 0.2 colorpair
39 122 0.0 1 colorpair
41 120 0.16 1 colorpair
42 119 0.0 0.2 colorpair
43 118 0.16 1 colorpair
44 117 0.16 1 colorpair
45 116 0.0 1 colorpair
46 115 0.0 0.2 colorpair
47 114 0.0 0.2 colorpair
48 113 0.0 1 colorpair
50 111 0.0 0.2 colorpair
51 110 0.0 1 colorpair
52 108 0.16 1 colorpair
53 107 0.0 0.2 colorpair
54 106 0.0 1 colorpair
55 105 0.0 0.2 colorpair
56 104 0.0 1 colorpair
57 103 0.16 1 colorpair
58 102 0.0 1 colorpair
59 101 0.0 1 colorpair
60 100 0.0 1 colorpair
61 99 0.0 0.2 colorpair
62 98 0.0 1 colorpair
63 97 0.0 1 colorpair
64 96 0.0 0.2 colorpair
65 94 0.0 0.2 colorpair
66 93 0.0 1 colorpair
67 92 0.0 0.2 colorpair
68 91 0.0 0.2 colorpair
69 90 0.0 1 colorpair
70 89 0.0 0.2 colorpair
71 88 0.0 0.2 colorpair
72 87 0.0 1 colorpair
73 86 0.0 1 colorpair
74 85 0.0 0.2 colorpair
139 151 0.0 1 colorpair
140 150 0.0 1 colorpair
141 149 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
32 129 2 gmark
33 128 2 gmark
34 127 2 gmark
35 cmark
126 cmark
37 124 2 gmark
120 cmark
42 119 2 gmark
118 cmark
117 cmark
46 115 2 gmark
47 114 2 gmark
50 111 2 gmark
52 cmark
53 107 2 gmark
55 105 2 gmark
103 cmark
61 99 2 gmark
64 96 2 gmark
65 94 2 gmark
67 92 2 gmark
68 91 2 gmark
70 89 2 gmark
71 88 2 gmark
74 85 2 gmark
141 149 2 gmark

% End Annotations
showpage
end
%%EOF
