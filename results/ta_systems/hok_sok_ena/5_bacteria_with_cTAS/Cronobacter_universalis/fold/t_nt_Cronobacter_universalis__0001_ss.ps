%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 15:14:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGAAGCCACUGCAUUAUUUACUGGCCUGUUUAUUCAUGGUCUGCGUAACUAUCUUGAUUUUUGCAUUAAUGAAUCAGGGUACGUUAUGCGAGCUUACCAUCAGAAGCGGCAGUCAGGAGGUGGCGGCUAAGCUUGCCUGUACGGGCAAGUAA\
) } def
/len { sequence length } bind def

/coor [
[212.78877258 443.55346680]
[214.82687378 431.22381592]
[221.97494507 420.88482666]
[207.78298950 416.51174927]
[200.71389771 403.04019165]
[205.39700317 388.18402100]
[198.61442566 374.80505371]
[191.83184814 361.42608643]
[185.04927063 348.04711914]
[178.26669312 334.66815186]
[171.48410034 321.28918457]
[164.23445129 321.94897461]
[157.02900696 320.76724243]
[150.32948303 317.80850220]
[144.56796265 313.25146484]
[140.11904907 307.37835693]
[137.27549744 300.55734253]
[136.22904968 293.21948242]
[137.05741882 285.83163452]
[139.71873474 278.86651611]
[144.05349731 272.77264404]
[149.79402161 267.94540405]
[145.27532959 253.64221191]
[140.75663757 239.33901978]
[136.23794556 225.03581238]
[131.71925354 210.73262024]
[126.90972900 196.52458191]
[121.81139374 182.41758728]
[116.71305084 168.31060791]
[111.61470795 154.20362854]
[106.51637268 140.09664917]
[101.41802979 125.98966980]
[88.42205048 123.31147003]
[78.43505859 114.57487488]
[74.05256653 102.05042267]
[76.41352844 88.99308777]
[84.90436554 78.79633331]
[80.09484863 64.58828735]
[75.28533173 50.38024139]
[70.47581482 36.17219543]
[65.66629791 21.96415138]
[60.42433929 7.90990448]
[54.75483704 -5.97738314]
[48.94398499 -19.80612183]
[42.99238586 -33.57487106]
[37.04078293 -47.34362030]
[31.08918190 -61.11236572]
[25.13758087 -74.88111877]
[19.18597984 -88.64986420]
[13.23437786 -102.41861725]
[7.14264774 -116.12593842]
[0.91142261 -129.77041626]
[-5.31980276 -143.41490173]
[-11.55102825 -157.05938721]
[-17.78225327 -170.70385742]
[-24.01347733 -184.34834290]
[-30.24470329 -197.99281311]
[-36.47592926 -211.63729858]
[-42.70715332 -225.28178406]
[-48.93837738 -238.92625427]
[-55.16960526 -252.57073975]
[-67.94049835 -261.90963745]
[-66.18950653 -276.70095825]
[-81.08305359 -281.98846436]
[-87.80001831 -296.29434204]
[-82.35533905 -311.13113403]
[-67.97925568 -317.69647217]
[-53.20083237 -312.09524536]
[-46.78785324 -297.65054321]
[-52.54502106 -282.93218994]
[-40.21982574 -274.56924438]
[-41.52512360 -258.80197144]
[-35.29389954 -245.15748596]
[-29.06267357 -231.51300049]
[-22.83144951 -217.86853027]
[-16.60022354 -204.22404480]
[-10.36899853 -190.57955933]
[-4.13777304 -176.93508911]
[2.09345222 -163.29060364]
[8.32467747 -149.64613342]
[14.55590248 -136.00164795]
[20.78712845 -122.35716248]
[26.46074486 -117.55030823]
[27.00312614 -108.37021637]
[32.95472717 -94.60146332]
[38.90633011 -80.83271790]
[44.85792923 -67.06396484]
[50.80953217 -53.29521942]
[56.76113129 -39.52647018]
[62.71273422 -25.75772285]
[68.28711700 -20.83613205]
[68.64212799 -11.64688396]
[74.31163025 2.24040413]
[77.46559906 3.94032240]
[79.93054199 7.28366899]
[80.92877960 11.91899395]
[79.87434387 17.15463448]
[84.68386078 31.36267853]
[89.49337769 45.57072449]
[94.30289459 59.77877045]
[99.11241150 73.98681641]
[114.69766235 78.51855469]
[124.56770325 91.40338898]
[124.88455200 107.63102722]
[115.52501678 120.89132690]
[120.62335205 134.99830627]
[125.72169495 149.10528564]
[130.82003784 163.21228027]
[135.91836548 177.31925964]
[141.01670837 191.42623901]
[145.88825989 196.03912354]
[147.42173767 201.59025574]
[146.02244568 206.21392822]
[150.54113770 220.51712036]
[155.05982971 234.82032776]
[159.57852173 249.12351990]
[164.09721375 263.42672729]
[186.06550598 271.98300171]
[194.70152283 293.64532471]
[184.86306763 314.50662231]
[191.64564514 327.88558960]
[198.42822266 341.26455688]
[205.21080017 354.64349365]
[211.99337769 368.02246094]
[218.77595520 381.40142822]
[233.52723694 386.40518188]
[240.21514893 400.06997681]
[235.35391235 414.10223389]
[253.28829956 416.40542603]
[266.16992188 428.87042236]
[269.01119995 446.41055298]
[260.86804199 462.02722168]
[268.19067383 475.11840820]
[275.51333618 488.20959473]
[282.83596802 501.30075073]
[290.15859985 514.39190674]
[297.48126221 527.48309326]
[304.80389404 540.57427979]
[312.12655640 553.66546631]
[326.48501587 561.58795166]
[326.53259277 577.98706055]
[312.22030640 585.99273682]
[298.27142334 577.36944580]
[299.03536987 560.98809814]
[291.71270752 547.89691162]
[284.39007568 534.80572510]
[277.06744385 521.71459961]
[269.74478149 508.62341309]
[262.42214966 495.53222656]
[255.09950256 482.44104004]
[247.77687073 469.34988403]
[235.57492065 469.71310425]
[224.31944275 464.80322266]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 128]
[6 125]
[7 124]
[8 123]
[9 122]
[10 121]
[11 120]
[22 117]
[23 116]
[24 115]
[25 114]
[26 113]
[27 110]
[28 109]
[29 108]
[30 107]
[31 106]
[32 105]
[37 101]
[38 100]
[39 99]
[40 98]
[41 97]
[42 93]
[43 92]
[44 90]
[45 89]
[46 88]
[47 87]
[48 86]
[49 85]
[50 84]
[51 82]
[52 81]
[53 80]
[54 79]
[55 78]
[56 77]
[57 76]
[58 75]
[59 74]
[60 73]
[61 72]
[63 70]
[132 151]
[133 150]
[134 149]
[135 148]
[136 147]
[137 146]
[138 145]
[139 144]
] def

init

% Start Annotations
3 128 0.0 1 colorpair
6 125 0.0 1 colorpair
7 124 0.0 1 colorpair
8 123 0.0 1 colorpair
9 122 0.0 1 colorpair
10 121 0.0 1 colorpair
11 120 0.0 1 colorpair
22 117 0.0 1 colorpair
23 116 0.0 1 colorpair
24 115 0.0 1 colorpair
25 114 0.0 1 colorpair
26 113 0.0 1 colorpair
27 110 0.0 1 colorpair
28 109 0.0 1 colorpair
29 108 0.0 1 colorpair
30 107 0.0 1 colorpair
31 106 0.0 1 colorpair
32 105 0.0 1 colorpair
37 101 0.0 1 colorpair
38 100 0.0 1 colorpair
39 99 0.0 1 colorpair
40 98 0.0 1 colorpair
41 97 0.0 1 colorpair
42 93 0.0 1 colorpair
43 92 0.0 1 colorpair
44 90 0.0 1 colorpair
45 89 0.0 1 colorpair
46 88 0.0 1 colorpair
47 87 0.0 1 colorpair
48 86 0.0 1 colorpair
49 85 0.0 1 colorpair
50 84 0.0 1 colorpair
51 82 0.0 1 colorpair
52 81 0.0 1 colorpair
53 80 0.0 1 colorpair
54 79 0.0 1 colorpair
55 78 0.0 1 colorpair
56 77 0.0 1 colorpair
57 76 0.0 1 colorpair
58 75 0.0 1 colorpair
59 74 0.0 1 colorpair
60 73 0.0 1 colorpair
61 72 0.0 1 colorpair
63 70 0.0 1 colorpair
132 151 0.0 1 colorpair
133 150 0.0 1 colorpair
134 149 0.0 1 colorpair
135 148 0.0 1 colorpair
136 147 0.0 1 colorpair
137 146 0.0 1 colorpair
138 145 0.0 1 colorpair
139 144 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
