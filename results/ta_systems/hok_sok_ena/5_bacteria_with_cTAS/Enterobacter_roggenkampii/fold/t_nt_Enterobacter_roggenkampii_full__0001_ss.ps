%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 15:17:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGCCAUUAAAAACUGCGUUAGGCAUCGUCUUUAUUGUUUGCCUGACGAUAGUGAUCUUUACCUUUAUUACUCGCGGCAGGCUCUGCGAGUUUUCAAUAAAGAGUGAGCAUCAGGAGGUGGCGGCUAAAUUAGCCUGCAACCCAGGCUAA\
) } def
/len { sequence length } bind def

/coor [
[144.53289795 259.78509521]
[134.30805969 247.39009094]
[130.48434448 231.72381592]
[133.87335205 215.89839172]
[143.84869385 203.08026123]
[137.06611633 189.70130920]
[130.28353882 176.32234192]
[123.50095367 162.94337463]
[116.71837616 149.56442261]
[109.93579865 136.18545532]
[103.15322113 122.80649567]
[93.60546875 123.08375549]
[84.39527893 119.38147736]
[77.16814423 112.04089355]
[73.33866882 102.07518005]
[73.82102966 91.03456116]
[58.89899445 92.56190491]
[43.97695923 94.08924866]
[29.05492020 95.61660004]
[14.14923668 97.29606628]
[-0.73854125 99.12747955]
[-15.62631893 100.95889282]
[-30.51409721 102.79030609]
[-45.40187454 104.62171936]
[-60.28964996 106.45314026]
[-75.17742920 108.28455353]
[-90.06520844 110.11596680]
[-104.95298767 111.94738007]
[-108.97820282 126.60569000]
[-118.31046295 138.60475159]
[-131.52665710 146.11479187]
[-146.61140442 147.99058533]
[-161.26440430 143.94609070]
[-173.25119019 134.59805298]
[-180.74383545 121.37199402]
[-182.59977722 106.28478241]
[-178.53601074 91.63711548]
[-169.17221069 79.66264343]
[-155.93630981 72.18740082]
[-140.84666443 70.35130310]
[-126.20436096 74.43434143]
[-114.24222565 83.81387329]
[-106.78440094 97.05960083]
[-91.89662170 95.22818756]
[-77.00884247 93.39677429]
[-62.12106705 91.56536102]
[-47.23328781 89.73394775]
[-32.34551239 87.90252686]
[-17.45773315 86.07111359]
[-2.56995606 84.23970032]
[12.31782150 82.40828705]
[18.61053848 78.44627380]
[27.52757454 80.69455719]
[42.44961166 79.16721344]
[57.37165070 77.63986969]
[72.29368591 76.11252594]
[84.20949554 67.00134277]
[89.59453583 53.00129700]
[94.97957611 39.00125122]
[92.71237183 23.34333420]
[104.50299835 14.24221802]
[109.88803864 0.24217038]
[115.27307892 -13.75787735]
[120.65811920 -27.75792503]
[126.04315948 -41.75797272]
[131.28512573 -55.81221771]
[136.38346863 -69.91919708]
[141.48179626 -84.02618408]
[146.58013916 -98.13316345]
[151.67848206 -112.24014282]
[156.77682495 -126.34712982]
[161.87516785 -140.45411682]
[166.39385986 -154.75730896]
[170.32537842 -169.23291016]
[174.25691223 -183.70851135]
[178.18843079 -198.18411255]
[182.11994934 -212.65971375]
[186.05148315 -227.13533020]
[189.98300171 -241.61093140]
[193.91453552 -256.08654785]
[185.84248352 -269.67391968]
[189.82331848 -284.96865845]
[203.49531555 -292.89660645]
[218.74708557 -288.75427246]
[226.53004456 -274.99923706]
[222.22669983 -259.79211426]
[208.39013672 -252.15501404]
[204.45860291 -237.67939758]
[200.52708435 -223.20379639]
[196.59556580 -208.72819519]
[192.66403198 -194.25259399]
[188.73251343 -179.77699280]
[184.80097961 -165.30139160]
[180.86946106 -150.82577515]
[182.20132446 -148.29414368]
[182.57948303 -145.06706238]
[181.72798157 -141.51678467]
[179.51501465 -138.11045837]
[175.98214722 -135.35577393]
[170.88380432 -121.24878693]
[165.78546143 -107.14180756]
[160.68711853 -93.03482819]
[155.58879089 -78.92784119]
[150.49044800 -64.82086182]
[145.39210510 -50.71387863]
[146.08055115 -43.30970383]
[140.04321289 -36.37293243]
[134.65817261 -22.37288475]
[129.27313232 -8.37283707]
[123.88809204 5.62721109]
[118.50304413 19.62725830]
[121.15542603 34.28379822]
[108.97962189 44.38629150]
[103.59458160 58.38633728]
[98.20954132 72.38638306]
[110.81432343 75.54221344]
[120.17745209 83.90195465]
[124.42382812 95.24337769]
[122.96163177 106.82006836]
[116.53218079 116.02391052]
[123.31475830 129.40287781]
[130.09733582 142.78184509]
[136.87991333 156.16079712]
[143.66249084 169.53976440]
[150.44508362 182.91873169]
[157.22766113 196.29768372]
[171.36854553 195.47291565]
[184.71159363 200.09681702]
[195.24499512 209.43713379]
[201.39395142 222.05316162]
[202.25616455 236.01792908]
[197.73397827 249.21244812]
[188.54428101 259.64730835]
[195.05253601 273.16183472]
[201.56079102 286.67639160]
[208.06904602 300.19091797]
[214.57730103 313.70544434]
[221.08555603 327.21997070]
[227.59381104 340.73449707]
[234.10206604 354.24905396]
[248.70899963 360.88357544]
[252.48930359 376.47488403]
[242.54304504 389.06265259]
[226.50015259 388.99060059]
[216.66735840 376.31402588]
[220.58753967 360.75729370]
[214.07928467 347.24276733]
[207.57102966 333.72824097]
[201.06277466 320.21371460]
[194.55451965 306.69915771]
[188.04626465 293.18463135]
[181.53800964 279.67010498]
[175.02973938 266.15557861]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 126]
[6 125]
[7 124]
[8 123]
[9 122]
[10 121]
[11 120]
[16 56]
[17 55]
[18 54]
[19 53]
[20 51]
[21 50]
[22 49]
[23 48]
[24 47]
[25 46]
[26 45]
[27 44]
[28 43]
[57 115]
[58 114]
[59 113]
[61 111]
[62 110]
[63 109]
[64 108]
[65 107]
[66 105]
[67 104]
[68 103]
[69 102]
[70 101]
[71 100]
[72 99]
[73 94]
[74 93]
[75 92]
[76 91]
[77 90]
[78 89]
[79 88]
[80 87]
[133 153]
[134 152]
[135 151]
[136 150]
[137 149]
[138 148]
[139 147]
[140 146]
] def

init

% Start Annotations
5 126 0.0 1 colorpair
6 125 0.0 1 colorpair
7 124 0.0 1 colorpair
8 123 0.0 1 colorpair
9 122 0.0 1 colorpair
10 121 0.0 1 colorpair
11 120 0.0 1 colorpair
16 56 0.0 0.6 colorpair
17 55 0.0 1 colorpair
18 54 0.0 1 colorpair
19 53 0.0 1 colorpair
20 51 0.0 1 colorpair
21 50 0.0 1 colorpair
22 49 0.0 1 colorpair
23 48 0.0 1 colorpair
24 47 0.0 1 colorpair
25 46 0.0 1 colorpair
26 45 0.0 1 colorpair
27 44 0.0 1 colorpair
28 43 0.0 1 colorpair
57 115 0.0 1 colorpair
58 114 0.0 1 colorpair
59 113 0.0 1 colorpair
61 111 0.16 1 colorpair
62 110 0.0 1 colorpair
63 109 0.0 1 colorpair
64 108 0.0 1 colorpair
65 107 0.0 1 colorpair
66 105 0.0 1 colorpair
67 104 0.0 1 colorpair
68 103 0.0 1 colorpair
69 102 0.0 1 colorpair
70 101 0.0 1 colorpair
71 100 0.0 1 colorpair
72 99 0.0 1 colorpair
73 94 0.0 1 colorpair
74 93 0.0 1 colorpair
75 92 0.0 1 colorpair
76 91 0.0 1 colorpair
77 90 0.0 1 colorpair
78 89 0.0 1 colorpair
79 88 0.0 1 colorpair
80 87 0.0 1 colorpair
133 153 0.0 1 colorpair
134 152 0.0 1 colorpair
135 151 0.0 1 colorpair
136 150 0.0 1 colorpair
137 149 0.0 1 colorpair
138 148 0.0 1 colorpair
139 147 0.0 1 colorpair
140 146 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
16 56 1 gmark
111 cmark

% End Annotations
showpage
end
%%EOF
