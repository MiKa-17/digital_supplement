%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 17:49:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______________GAGGCAAGAAAUGCCGAAAAAAUAUCCCCUGGUGGCAAUAAUAGUAAUCUGCAUCACGAUACUAGGAUUUACCCGGAUGGUGCACAACUCACUAUGCGAACUAAAGAUCAAACAGCGAAAUAUUGAGCUGAAAGCAGUCCUAGCCUACGAAACGAAAAA_____________\
) } def
/len { sequence length } bind def

/coor [
[103.33716583 592.69439697]
[93.02952576 581.76123047]
[84.38282013 569.47241211]
[77.57308960 556.07806396]
[72.73895264 541.85095215]
[69.97885132 527.08056641]
[69.34896088 512.06781006]
[70.86210632 497.11819458]
[74.48748779 482.53610229]
[80.15129089 468.61840820]
[87.73821259 455.64846802]
[97.09379578 443.89031982]
[108.02756500 433.58334351]
[120.31692505 424.93740845]
[133.71168518 418.12850952]
[147.93913269 413.29525757]
[145.18289185 398.55065918]
[142.42665100 383.80606079]
[139.67041016 369.06146240]
[129.72622681 357.97262573]
[134.79600525 342.98571777]
[132.03976440 328.24111938]
[129.28352356 313.49652100]
[126.52727509 298.75192261]
[123.77103424 284.00732422]
[121.01479340 269.26272583]
[118.25855255 254.51812744]
[115.50230408 239.77352905]
[112.74606323 225.02893066]
[109.98982239 210.28433228]
[107.23358154 195.53973389]
[103.85258484 192.13980103]
[102.58467865 186.57302856]
[104.64115143 180.25404358]
[102.38179016 165.42517090]
[100.12242889 150.59631348]
[97.86306000 135.76744080]
[68.00727844 131.45434570]
[46.14943695 102.30102539]
[31.17535973 103.18251801]
[16.20128250 104.06400299]
[1.22720659 104.94549561]
[-10.46251678 115.93321228]
[-26.32028770 113.50202179]
[-34.18138123 99.51692963]
[-28.01543808 84.70610046]
[-12.55244350 80.43113708]
[0.34571680 89.97142029]
[15.31979370 89.08992767]
[30.29387093 88.20843506]
[45.26794815 87.32695007]
[47.25975418 80.09626770]
[36.72743607 69.41590118]
[51.24336624 65.63491058]
[53.23517227 58.40423584]
[40.82471466 49.97923660]
[28.41425705 41.55424118]
[16.00380135 33.12924576]
[3.59334517 24.70424652]
[-8.81711102 16.27925110]
[-21.22756767 7.85425377]
[-36.70138550 11.06930256]
[-49.87039948 2.33130574]
[-52.92166901 -13.17563820]
[-44.04492950 -26.25153351]
[-28.50659561 -29.13868523]
[-15.52528000 -20.12419510]
[-12.80257034 -4.55620289]
[-0.39211440 3.86879420]
[12.01834202 12.29379082]
[24.42879868 20.71878815]
[36.83925629 29.14378548]
[49.24971008 37.56878281]
[61.66016769 45.99377823]
[68.95367432 44.24600220]
[62.10163498 30.90248108]
[53.87761688 18.35793877]
[59.40865707 4.41492605]
[73.99564362 0.91925740]
[85.24565887 10.84081078]
[83.60067749 25.75056648]
[83.54069519 40.75044632]
[90.83420563 39.00267029]
[98.07817078 25.86779404]
[105.32213593 12.73291779]
[112.56610107 -0.40195855]
[119.81006622 -13.53683472]
[127.05403137 -26.67171097]
[134.29798889 -39.80658722]
[141.54196167 -52.94146347]
[148.78591919 -66.07633972]
[155.91929626 -79.27159882]
[162.94158936 -92.52631378]
[169.96388245 -105.78102875]
[176.98616028 -119.03574371]
[184.00845337 -132.29046631]
[191.03074646 -145.54518127]
[198.05302429 -158.79989624]
[205.07531738 -172.05461121]
[212.09759521 -185.30932617]
[219.11988831 -198.56404114]
[226.14218140 -211.81875610]
[233.16445923 -225.07347107]
[240.18675232 -238.32818604]
[247.20904541 -251.58290100]
[254.23132324 -264.83761597]
[256.30361938 -281.66442871]
[273.04650879 -284.33126831]
[280.24401855 -268.98092651]
[267.48605347 -257.81533813]
[260.46374512 -244.56060791]
[253.44146729 -231.30589294]
[246.41917419 -218.05117798]
[239.39689636 -204.79646301]
[232.37460327 -191.54174805]
[225.35231018 -178.28703308]
[218.33003235 -165.03231812]
[211.30773926 -151.77760315]
[204.28546143 -138.52288818]
[197.26316833 -125.26817322]
[190.24087524 -112.01345825]
[183.21859741 -98.75874329]
[176.19630432 -85.50402832]
[169.17401123 -72.24931335]
[168.82009888 -64.85137939]
[161.92079163 -58.83237457]
[154.67683411 -45.69749832]
[147.43287659 -32.56262207]
[140.18890381 -19.42774582]
[132.94494629 -6.29287004]
[125.70097351 6.84200621]
[118.45700836 19.97688293]
[111.21304321 33.11175919]
[103.96907806 46.24663544]
[122.79423523 54.02163315]
[136.51206970 67.71701813]
[143.55285645 84.71826172]
[143.52236938 102.13814545]
[137.16496277 117.29867554]
[126.14455414 128.14208984]
[112.69192505 133.50807190]
[114.95129395 148.33694458]
[117.21065521 163.16581726]
[119.47001648 177.99467468]
[121.97817230 192.78349304]
[124.73442078 207.52809143]
[127.49066162 222.27268982]
[130.24690247 237.01728821]
[133.00314331 251.76188660]
[135.75938416 266.50646973]
[138.51562500 281.25106812]
[141.27188110 295.99566650]
[144.02812195 310.74026489]
[146.78436279 325.48486328]
[149.54060364 340.22946167]
[159.68193054 352.37292480]
[154.41500854 366.30523682]
[157.17124939 381.04983521]
[159.92749023 395.79443359]
[162.68373108 410.53900146]
[177.69641113 409.90634155]
[192.64631653 411.41671753]
[207.22908020 415.03936768]
[221.14781189 420.70059204]
[234.11917114 428.28512573]
[245.87904358 437.63851929]
[256.18804932 448.57037354]
[264.83627319 460.85812378]
[271.64764404 474.25161743]
[276.48355103 488.47817993]
[279.24548340 503.24816895]
[279.87722778 518.26086426]
[278.36593628 533.21069336]
[274.74237061 547.79321289]
[269.08026123 561.71160889]
[261.49496460 574.68249512]
[252.14083862 586.44177246]
[241.20834351 596.75012207]
[228.92004395 605.39758301]
[215.52613831 612.20812988]
[201.29927063 617.04315186]
[186.52911377 619.80419922]
[171.51635742 620.43499756]
[156.56665039 618.92279053]
[141.98432922 615.29827881]
[128.06629944 609.63537598]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 160]
[17 159]
[18 158]
[19 157]
[21 155]
[22 154]
[23 153]
[24 152]
[25 151]
[26 150]
[27 149]
[28 148]
[29 147]
[30 146]
[31 145]
[34 144]
[35 143]
[36 142]
[37 141]
[39 51]
[40 50]
[41 49]
[42 48]
[55 74]
[56 73]
[57 72]
[58 71]
[59 70]
[60 69]
[61 68]
[83 134]
[84 133]
[85 132]
[86 131]
[87 130]
[88 129]
[89 128]
[90 127]
[91 126]
[92 124]
[93 123]
[94 122]
[95 121]
[96 120]
[97 119]
[98 118]
[99 117]
[100 116]
[101 115]
[102 114]
[103 113]
[104 112]
[105 111]
[106 110]
] def

init

% Start Annotations
16 160 0.0 1 colorpair
17 159 0.16 1 colorpair
18 158 0.0 1 colorpair
19 157 0.0 1 colorpair
21 155 0.0 1 colorpair
22 154 0.16 1 colorpair
23 153 0.16 1 colorpair
24 152 0.0 0.2 colorpair
25 151 0.0 0.2 colorpair
26 150 0.0 0.2 colorpair
27 149 0.0 1 colorpair
28 148 0.0 1 colorpair
29 147 0.16 1 colorpair
30 146 0.0 0.2 colorpair
31 145 0.0 0.2 colorpair
34 144 0.0 0.2 colorpair
35 143 0.0 1 colorpair
36 142 0.16 1 colorpair
37 141 0.0 1 colorpair
39 51 0.0 0.2 colorpair
40 50 0.16 1 colorpair
41 49 0.16 1 colorpair
42 48 0.16 1 colorpair
55 74 0.16 1 colorpair
56 73 0.16 1 colorpair
57 72 0.16 1 colorpair
58 71 0.0 1 colorpair
59 70 0.0 1 colorpair
60 69 0.16 1 colorpair
61 68 0.0 0.2 colorpair
83 134 0.0 1 colorpair
84 133 0.0 1 colorpair
85 132 0.0 0.2 colorpair
86 131 0.0 1 colorpair
87 130 0.16 1 colorpair
88 129 0.16 1 colorpair
89 128 0.0 0.2 colorpair
90 127 0.0 0.2 colorpair
91 126 0.0 0.2 colorpair
92 124 0.0 1 colorpair
93 123 0.16 1 colorpair
94 122 0.0 1 colorpair
95 121 0.0 0.2 colorpair
96 120 0.16 1 colorpair
97 119 0.0 0.2 colorpair
98 118 0.0 0.2 colorpair
99 117 0.16 1 colorpair
100 116 0.16 1 colorpair
101 115 0.16 1 colorpair
102 114 0.16 1 colorpair
103 113 0.0 1 colorpair
104 112 0.0 1 colorpair
105 111 0.0 0.2 colorpair
106 110 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
159 cmark
154 cmark
23 cmark
153 cmark
24 152 2 gmark
25 151 2 gmark
26 150 2 gmark
29 cmark
147 cmark
30 146 2 gmark
31 145 2 gmark
34 144 2 gmark
36 cmark
142 cmark
39 51 2 gmark
40 cmark
50 cmark
41 cmark
42 cmark
48 cmark
55 cmark
73 cmark
57 cmark
72 cmark
60 cmark
69 cmark
61 68 2 gmark
85 132 2 gmark
87 cmark
130 cmark
88 cmark
89 128 2 gmark
90 127 2 gmark
91 126 2 gmark
123 cmark
95 121 2 gmark
96 cmark
120 cmark
97 119 2 gmark
98 118 2 gmark
99 cmark
117 cmark
100 cmark
101 cmark
115 cmark
102 cmark
114 cmark
105 111 2 gmark

% End Annotations
showpage
end
%%EOF
