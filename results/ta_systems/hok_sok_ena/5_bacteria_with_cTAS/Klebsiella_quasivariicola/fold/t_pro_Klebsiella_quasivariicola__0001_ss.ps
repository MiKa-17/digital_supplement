%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 17:49:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
______________GAGGCAAGAUAUGCUGACAAAAUAUGCCCUUGUGGCAAUCAUCGUACUCUGUAUUACGGUACUGGGAUUUACGCUGUUGGUGCACAGCUCACUGUGCGAGCUGAGUAUUAAAGAGCGUAAUAUUGAGUUUAAAGCUGUUCUCGCUUACGAAUCGAAGAAG____________\
) } def
/len { sequence length } bind def

/coor [
[100.18647003 578.61102295]
[89.87882996 567.67791748]
[81.23212433 555.38909912]
[74.42238617 541.99475098]
[69.58825684 527.76757812]
[66.82815552 512.99725342]
[66.19825745 497.98446655]
[67.71141052 483.03485107]
[71.33679199 468.45275879]
[77.00059509 454.53506470]
[84.58751678 441.56512451]
[93.94309998 429.80697632]
[104.87686920 419.50003052]
[117.16622925 410.85409546]
[130.56098938 404.04516602]
[144.78843689 399.21191406]
[142.03219604 384.46731567]
[139.27595520 369.72271729]
[136.51971436 354.97814941]
[126.57552338 343.88928223]
[131.64530945 328.90237427]
[128.88906860 314.15777588]
[126.13282013 299.41317749]
[112.62258148 293.19937134]
[105.27497864 280.06634521]
[107.09070587 264.94824219]
[117.58152771 253.66778564]
[114.82528687 238.92318726]
[112.06903839 224.17858887]
[101.46151733 219.91212463]
[94.16263580 210.95628357]
[92.08146667 199.46990967]
[95.85081482 188.29512024]
[104.64115143 180.25404358]
[102.38179016 165.42517090]
[100.12242889 150.59631348]
[97.86306000 135.76744080]
[68.00727844 131.45434570]
[46.14943695 102.30102539]
[31.17535973 103.18251801]
[16.20128250 104.06400299]
[1.22720659 104.94549561]
[-10.46251678 115.93321228]
[-26.32028770 113.50202179]
[-34.18138123 99.51692963]
[-28.01543808 84.70610046]
[-12.55244350 80.43113708]
[0.34571680 89.97142029]
[15.31979370 89.08992767]
[30.29387093 88.20843506]
[45.26794815 87.32695007]
[47.25975418 80.09626770]
[36.72743607 69.41590118]
[51.24336624 65.63491058]
[53.23517227 58.40423584]
[40.82471466 49.97923660]
[28.41425705 41.55424118]
[16.00380135 33.12924576]
[3.59334517 24.70424652]
[-8.81711102 16.27925110]
[-23.36794853 21.66931343]
[-38.29888916 17.44479179]
[-47.86868668 5.23010349]
[-48.39755630 -10.27795601]
[-39.68213654 -23.11622238]
[-25.07368279 -28.34811783]
[-10.18944645 -23.96187401]
[-0.75271875 -11.64409065]
[-0.39211440 3.86879420]
[12.01834202 12.29379082]
[24.42879868 20.71878815]
[36.83925629 29.14378548]
[49.24971008 37.56878281]
[61.66016769 45.99377823]
[68.95367432 44.24600220]
[62.10163498 30.90248108]
[53.87761688 18.35793877]
[59.40865707 4.41492605]
[73.99564362 0.91925740]
[85.24565887 10.84081078]
[83.60067749 25.75056648]
[83.54069519 40.75044632]
[90.83420563 39.00267029]
[98.07817078 25.86779404]
[105.32213593 12.73291779]
[112.56610107 -0.40195855]
[119.81006622 -13.53683472]
[127.05403137 -26.67171097]
[134.29798889 -39.80658722]
[133.50141907 -58.19386292]
[148.84761047 -66.68796539]
[155.86988831 -79.94268036]
[162.89218140 -93.19740295]
[169.91447449 -106.45211792]
[176.93675232 -119.70683289]
[183.95904541 -132.96154785]
[190.98133850 -146.21626282]
[190.60487366 -162.03298950]
[203.40022278 -169.65718079]
[210.42251587 -182.91189575]
[217.44479370 -196.16661072]
[224.46708679 -209.42132568]
[231.48937988 -222.67604065]
[238.51165771 -235.93075562]
[232.46481323 -250.35189819]
[237.15173340 -265.27056885]
[250.35942078 -273.64260864]
[265.85159302 -271.51501465]
[276.31332397 -259.89236450]
[276.80490112 -244.26251221]
[267.09423828 -232.00540161]
[251.76637268 -228.90846252]
[244.74409485 -215.65374756]
[237.72180176 -202.39903259]
[230.69950867 -189.14431763]
[223.67723083 -175.88960266]
[216.65493774 -162.63488770]
[217.53367615 -147.76622009]
[204.23605347 -139.19396973]
[197.21376038 -125.93925476]
[190.19146729 -112.68453979]
[183.16918945 -99.42982483]
[176.14689636 -86.17510986]
[169.12460327 -72.92039490]
[162.10232544 -59.66567993]
[165.35534668 -48.00115967]
[159.59620667 -36.89484024]
[147.43287659 -32.56262207]
[140.18890381 -19.42774582]
[132.94494629 -6.29287004]
[125.70097351 6.84200621]
[118.45700836 19.97688293]
[111.21304321 33.11175919]
[103.96907806 46.24663544]
[122.79423523 54.02163315]
[136.51206970 67.71701813]
[143.55285645 84.71826172]
[143.52236938 102.13814545]
[137.16496277 117.29867554]
[126.14455414 128.14208984]
[112.69192505 133.50807190]
[114.95129395 148.33694458]
[117.21065521 163.16581726]
[119.47001648 177.99467468]
[135.14253235 188.60932922]
[138.05133057 206.99050903]
[126.81363678 221.42234802]
[129.56988525 236.16694641]
[132.32612610 250.91154480]
[146.18350220 257.64053345]
[153.33789062 271.08181763]
[151.23065186 285.98226929]
[140.87742615 296.65692139]
[143.63366699 311.40151978]
[146.38990784 326.14611816]
[156.53123474 338.28961182]
[151.26431274 352.22189331]
[154.02055359 366.96649170]
[156.77679443 381.71109009]
[159.53303528 396.45568848]
[174.54571533 395.82299805]
[189.49562073 397.33337402]
[204.07838440 400.95605469]
[217.99711609 406.61727905]
[230.96847534 414.20178223]
[242.72834778 423.55517578]
[253.03733826 434.48703003]
[261.68557739 446.77478027]
[268.49694824 460.16827393]
[273.33285522 474.39483643]
[276.09478760 489.16482544]
[276.72653198 504.17755127]
[275.21524048 519.12738037]
[271.59167480 533.70989990]
[265.92956543 547.62829590]
[258.34426880 560.59918213]
[248.99012756 572.35845947]
[238.05764771 582.66674805]
[225.76934814 591.31427002]
[212.37542725 598.12481689]
[198.14857483 602.95983887]
[183.37841797 605.72082520]
[168.36566162 606.35168457]
[153.41595459 604.83941650]
[138.83363342 601.21496582]
[124.91559601 595.55200195]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 160]
[17 159]
[18 158]
[19 157]
[21 155]
[22 154]
[23 153]
[27 149]
[28 148]
[29 147]
[34 144]
[35 143]
[36 142]
[37 141]
[39 51]
[40 50]
[41 49]
[42 48]
[55 74]
[56 73]
[57 72]
[58 71]
[59 70]
[60 69]
[83 134]
[84 133]
[85 132]
[86 131]
[87 130]
[88 129]
[89 128]
[91 125]
[92 124]
[93 123]
[94 122]
[95 121]
[96 120]
[97 119]
[99 117]
[100 116]
[101 115]
[102 114]
[103 113]
[104 112]
] def

init

% Start Annotations
16 160 0.0 1 colorpair
17 159 0.16 1 colorpair
18 158 0.0 1 colorpair
19 157 0.0 1 colorpair
21 155 0.0 1 colorpair
22 154 0.16 1 colorpair
23 153 0.16 1 colorpair
27 149 0.0 1 colorpair
28 148 0.0 1 colorpair
29 147 0.16 1 colorpair
34 144 0.0 0.6 colorpair
35 143 0.0 1 colorpair
36 142 0.16 1 colorpair
37 141 0.0 1 colorpair
39 51 0.0 0.6 colorpair
40 50 0.16 1 colorpair
41 49 0.16 1 colorpair
42 48 0.16 1 colorpair
55 74 0.16 1 colorpair
56 73 0.16 1 colorpair
57 72 0.16 1 colorpair
58 71 0.0 1 colorpair
59 70 0.0 1 colorpair
60 69 0.16 1 colorpair
83 134 0.0 1 colorpair
84 133 0.0 1 colorpair
85 132 0.0 0.6 colorpair
86 131 0.0 1 colorpair
87 130 0.16 1 colorpair
88 129 0.16 1 colorpair
89 128 0.0 0.6 colorpair
91 125 0.0 0.6 colorpair
92 124 0.0 1 colorpair
93 123 0.16 1 colorpair
94 122 0.0 1 colorpair
95 121 0.0 0.6 colorpair
96 120 0.16 1 colorpair
97 119 0.0 0.6 colorpair
99 117 0.16 1 colorpair
100 116 0.16 1 colorpair
101 115 0.16 1 colorpair
102 114 0.16 1 colorpair
103 113 0.0 1 colorpair
104 112 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
159 cmark
154 cmark
23 cmark
153 cmark
29 cmark
147 cmark
34 144 1 gmark
36 cmark
142 cmark
39 51 1 gmark
40 cmark
50 cmark
41 cmark
42 cmark
48 cmark
55 cmark
73 cmark
57 cmark
72 cmark
60 cmark
69 cmark
85 132 1 gmark
87 cmark
130 cmark
88 cmark
89 128 1 gmark
91 125 1 gmark
123 cmark
95 121 1 gmark
96 cmark
120 cmark
97 119 1 gmark
99 cmark
117 cmark
100 cmark
101 cmark
115 cmark
102 cmark
114 cmark

% End Annotations
showpage
end
%%EOF
