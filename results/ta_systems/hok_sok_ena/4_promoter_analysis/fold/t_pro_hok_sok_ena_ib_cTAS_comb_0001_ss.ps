%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Jan  9 15:05:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
____________AA____CAAG_G_A__G_____AAGAAGGCU_AUGAAGCAGCAAAAGGCUAUGUUAGUCGCCC_________UGAUCGUCAUCUGUUUAACCGUCAUAGUGUUGGCACUGAUAACGAGGAAAGACCUCUGCGAGGUACGAAUCCGAACCGGCCAUACGGAGGUCGCGGUCUUCAUAGCUUACGAAUCUGAG_____________GAG____________________________________\
______________________________________________________\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 92.50000000]
[77.50257874 92.19500732]
[62.51446533 91.58514404]
[47.54185104 90.67065430]
[32.59091949 89.45192719]
[17.66786385 87.92945862]
[2.77884626 86.10388184]
[-12.06997395 83.97595215]
[-26.87245941 81.54655457]
[-41.62248611 78.81668091]
[-56.31396103 75.78746033]
[-70.94080353 72.46015930]
[-85.49697876 68.83614349]
[-99.97644806 64.91691589]
[-114.37324524 60.70408630]
[-128.68141174 56.19940948]
[-142.89501953 51.40474319]
[-157.00819397 46.32206726]
[-171.01512146 40.95348740]
[-184.90998840 35.30121994]
[-198.68707275 29.36760330]
[-212.34065247 23.15508842]
[-225.86508179 16.66624832]
[-239.25479126 9.90376377]
[-252.50424194 2.87042928]
[-265.60794067 -4.43084574]
[-278.56048584 -11.99704266]
[-291.35650635 -19.82503319]
[-303.99072266 -27.91158104]
[-316.45788574 -36.25334167]
[-328.75286865 -44.84687042]
[-340.87060547 -53.68860626]
[-352.80606079 -62.77490234]
[-364.55426025 -72.10199738]
[-376.11044312 -81.66603088]
[-387.46972656 -91.46305847]
[-398.62750244 -101.48902130]
[-409.57910156 -111.73978424]
[-420.32000732 -122.21109009]
[-430.84579468 -132.89863586]
[-441.15209961 -143.79797363]
[-451.23464966 -154.90461731]
[-461.08929443 -166.21397400]
[-470.71197510 -177.72134399]
[-480.09866333 -189.42201233]
[-489.24551392 -201.31109619]
[-498.14877319 -213.38371277]
[-506.80468750 -225.63485718]
[-515.20971680 -238.05947876]
[-523.36041260 -250.65240479]
[-531.25335693 -263.40847778]
[-538.88531494 -276.32235718]
[-546.25311279 -289.38879395]
[-553.35369873 -302.60229492]
[-560.18414307 -315.95745850]
[-566.74169922 -329.44873047]
[-573.02349854 -343.07055664]
[-579.02709961 -356.81729126]
[-584.74993896 -370.68322754]
[-590.18963623 -384.66268921]
[-595.34405518 -398.74984741]
[-600.21087646 -412.93890381]
[-604.78826904 -427.22396851]
[-609.07421875 -441.59915161]
[-613.06701660 -456.05850220]
[-616.76501465 -470.59606934]
[-620.16662598 -485.20581055]
[-623.27044678 -499.88168335]
[-626.07531738 -514.61767578]
[-628.57995605 -529.40759277]
[-630.78332520 -544.24542236]
[-632.68457031 -559.12493896]
[-634.28289795 -574.04010010]
[-635.57763672 -588.98461914]
[-636.56817627 -603.95239258]
[-637.25427246 -618.93719482]
[-637.63549805 -633.93286133]
[-637.71173096 -648.93322754]
[-637.48303223 -663.93200684]
[-636.94934082 -678.92303467]
[-636.11096191 -693.90008545]
[-634.96826172 -708.85699463]
[-633.52166748 -723.78759766]
[-631.77178955 -738.68572998]
[-629.71936035 -753.54516602]
[-627.36523438 -768.35980225]
[-624.71038818 -783.12353516]
[-621.75592041 -797.83020020]
[-618.50299072 -812.47375488]
[-614.95300293 -827.04815674]
[-611.10742188 -841.54736328]
[-606.96783447 -855.96539307]
[-602.53594971 -870.29626465]
[-597.81359863 -884.53405762]
[-592.80273438 -898.67291260]
[-587.50543213 -912.70697021]
[-581.92388916 -926.63037109]
[-576.06036377 -940.43743896]
[-569.91735840 -954.12243652]
[-563.49731445 -967.67968750]
[-556.80297852 -981.10357666]
[-549.83709717 -994.38861084]
[-542.60253906 -1007.52923584]
[-535.10229492 -1020.52008057]
[-527.33941650 -1033.35571289]
[-519.31719971 -1046.03088379]
[-511.03894043 -1058.54028320]
[-502.50799561 -1070.87878418]
[-493.72799683 -1083.04138184]
[-484.70248413 -1095.02282715]
[-475.43521118 -1106.81835938]
[-465.93005371 -1118.42297363]
[-456.19088745 -1129.83190918]
[-446.22177124 -1141.04040527]
[-436.02682495 -1152.04406738]
[-425.61026001 -1162.83801270]
[-414.97634888 -1173.41796875]
[-404.12954712 -1183.77954102]
[-393.07427979 -1193.91845703]
[-381.81518555 -1203.83044434]
[-370.35687256 -1213.51147461]
[-358.70407104 -1222.95751953]
[-346.86163330 -1232.16479492]
[-334.83441162 -1241.12927246]
[-322.62744141 -1249.84729004]
[-310.24572754 -1258.31542969]
[-297.69436646 -1266.53002930]
[-284.97860718 -1274.48767090]
[-272.10366821 -1282.18518066]
[-259.07489014 -1289.61926270]
[-245.89762878 -1296.78698730]
[-232.57736206 -1303.68530273]
[-219.11959839 -1310.31127930]
[-205.52987671 -1316.66223145]
[-191.81384277 -1322.73559570]
[-177.97715759 -1328.52893066]
[-164.02554321 -1334.03955078]
[-149.96476746 -1339.26550293]
[-135.80064392 -1344.20446777]
[-121.53902435 -1348.85437012]
[-107.18580627 -1353.21337891]
[-92.74692535 -1357.27954102]
[-78.22835541 -1361.05139160]
[-63.63609314 -1364.52722168]
[-48.97617722 -1367.70568848]
[-34.25466537 -1370.58532715]
[-19.47764778 -1373.16516113]
[-4.65122938 -1375.44396973]
[10.21845722 -1377.42077637]
[25.12526512 -1379.09497070]
[40.06303024 -1380.46557617]
[55.02557373 -1381.53222656]
[70.00671387 -1382.29443359]
[85.00025940 -1382.75195312]
[100.00000000 -1382.90441895]
[114.99974060 -1382.75195312]
[129.99328613 -1382.29443359]
[144.97442627 -1381.53222656]
[159.93696594 -1380.46557617]
[174.87474060 -1379.09497070]
[189.78153992 -1377.42077637]
[204.65122986 -1375.44396973]
[219.47764587 -1373.16516113]
[234.25466919 -1370.58532715]
[248.97618103 -1367.70568848]
[263.63610840 -1364.52722168]
[278.22836304 -1361.05139160]
[292.74691772 -1357.27954102]
[307.18579102 -1353.21337891]
[321.53903198 -1348.85437012]
[335.80062866 -1344.20446777]
[349.96478271 -1339.26550293]
[364.02554321 -1334.03955078]
[377.97717285 -1328.52893066]
[391.81384277 -1322.73559570]
[405.52987671 -1316.66223145]
[419.11959839 -1310.31127930]
[432.57736206 -1303.68530273]
[445.89761353 -1296.78698730]
[459.07489014 -1289.61926270]
[472.10366821 -1282.18518066]
[484.97860718 -1274.48767090]
[497.69436646 -1266.53002930]
[510.24572754 -1258.31542969]
[522.62744141 -1249.84729004]
[534.83441162 -1241.12927246]
[546.86163330 -1232.16479492]
[558.70410156 -1222.95751953]
[570.35687256 -1213.51147461]
[581.81518555 -1203.83044434]
[593.07427979 -1193.91845703]
[604.12951660 -1183.77954102]
[614.97637939 -1173.41796875]
[625.61022949 -1162.83801270]
[636.02679443 -1152.04406738]
[646.22180176 -1141.04040527]
[656.19091797 -1129.83190918]
[665.93005371 -1118.42297363]
[675.43524170 -1106.81835938]
[684.70245361 -1095.02282715]
[693.72796631 -1083.04138184]
[702.50799561 -1070.87878418]
[711.03894043 -1058.54028320]
[719.31719971 -1046.03088379]
[727.33941650 -1033.35571289]
[735.10229492 -1020.52008057]
[742.60253906 -1007.52923584]
[749.83709717 -994.38861084]
[756.80297852 -981.10357666]
[763.49731445 -967.67968750]
[769.91735840 -954.12243652]
[776.06036377 -940.43743896]
[781.92388916 -926.63037109]
[787.50543213 -912.70697021]
[792.80273438 -898.67291260]
[797.81359863 -884.53405762]
[802.53594971 -870.29626465]
[806.96783447 -855.96539307]
[811.10742188 -841.54736328]
[814.95300293 -827.04815674]
[818.50299072 -812.47375488]
[821.75592041 -797.83020020]
[824.71038818 -783.12353516]
[827.36523438 -768.35980225]
[829.71936035 -753.54516602]
[831.77178955 -738.68572998]
[833.52166748 -723.78759766]
[834.96826172 -708.85699463]
[836.11096191 -693.90008545]
[836.94934082 -678.92303467]
[837.48303223 -663.93200684]
[837.71173096 -648.93322754]
[837.63549805 -633.93286133]
[837.25427246 -618.93719482]
[836.56817627 -603.95239258]
[835.57763672 -588.98461914]
[834.28289795 -574.04010010]
[832.68457031 -559.12493896]
[830.78332520 -544.24542236]
[828.57995605 -529.40759277]
[826.07531738 -514.61767578]
[823.27044678 -499.88168335]
[820.16662598 -485.20581055]
[816.76501465 -470.59606934]
[813.06701660 -456.05850220]
[809.07421875 -441.59915161]
[804.78826904 -427.22396851]
[800.21087646 -412.93890381]
[795.34405518 -398.74984741]
[790.18963623 -384.66268921]
[784.74993896 -370.68322754]
[779.02709961 -356.81729126]
[773.02349854 -343.07055664]
[766.74169922 -329.44873047]
[760.18414307 -315.95745850]
[753.35369873 -302.60229492]
[746.25311279 -289.38879395]
[738.88531494 -276.32235718]
[731.25335693 -263.40847778]
[723.36041260 -250.65240479]
[715.20971680 -238.05947876]
[706.80468750 -225.63485718]
[698.14874268 -213.38371277]
[689.24554443 -201.31109619]
[680.09869385 -189.42201233]
[670.71197510 -177.72134399]
[661.08929443 -166.21397400]
[651.23468018 -154.90461731]
[641.15209961 -143.79797363]
[630.84576416 -132.89863586]
[620.32000732 -122.21109009]
[609.57910156 -111.73978424]
[598.62750244 -101.48902130]
[587.46972656 -91.46305847]
[576.11041260 -81.66603088]
[564.55426025 -72.10199738]
[552.80603027 -62.77490234]
[540.87060547 -53.68860626]
[528.75286865 -44.84687042]
[516.45788574 -36.25334167]
[503.99072266 -27.91158104]
[491.35650635 -19.82503319]
[478.56048584 -11.99704266]
[465.60794067 -4.43084574]
[452.50424194 2.87042928]
[439.25479126 9.90376377]
[425.86508179 16.66624832]
[412.34063721 23.15508842]
[398.68707275 29.36760330]
[384.91000366 35.30121994]
[371.01513672 40.95348740]
[357.00820923 46.32206726]
[342.89501953 51.40474319]
[328.68139648 56.19940948]
[314.37322998 60.70408630]
[299.97644043 64.91691589]
[285.49697876 68.83614349]
[270.94079590 72.46015930]
[256.31396484 75.78746033]
[241.62248230 78.81668091]
[226.87245178 81.54655457]
[212.06997681 83.97595215]
[197.22116089 86.10388184]
[182.33213806 87.92945862]
[167.40907288 89.45192719]
[152.45814514 90.67065430]
[137.48553467 91.58514404]
[122.49742126 92.19500732]
[107.50000000 92.50000000]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
] def

init

% Start Annotations

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
