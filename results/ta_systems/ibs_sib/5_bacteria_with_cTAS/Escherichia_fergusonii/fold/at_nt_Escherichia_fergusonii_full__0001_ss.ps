%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Dec 18 00:06:27 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___AGGGUAAGGGAGGAUUUCUCCCCCCUCUGAUUGGCUGUUAAUAAGUCGGGAAACUUAAUAGUAACAACACAAUCAGUAUGAUGACGAGCUUCAUCAUAACCCUUUCCUUAUACAAGGCCCCUUCCUCGGGAGGGGCUUU\
) } def
/len { sequence length } bind def

/coor [
[152.98117065 217.48687744]
[140.50283813 201.54551697]
[137.67739868 181.42378235]
[145.33900452 162.52378845]
[135.39216614 151.29612732]
[125.44532776 140.06846619]
[115.49848175 128.84080505]
[105.55164337 117.61314392]
[98.16317749 119.05535889]
[90.54067993 117.41704559]
[79.20443726 127.23995972]
[67.86819458 137.06286621]
[56.53194809 146.88577271]
[51.16933060 161.77043152]
[36.48384476 164.25755310]
[25.14760208 174.08047485]
[13.81135750 183.90338135]
[8.96196842 199.56912231]
[-7.08742571 202.93794250]
[-17.82658386 190.54429626]
[-12.20798016 175.13769531]
[3.98844671 172.56713867]
[15.32469082 162.74423218]
[26.66093445 152.92131042]
[31.21270943 138.73925781]
[46.70903778 135.54953003]
[58.04528046 125.72662354]
[69.38152313 115.90370941]
[80.71776581 106.08080292]
[81.54119873 91.10341644]
[71.35012054 80.09697723]
[61.15903473 69.09053040]
[50.96795273 58.08408356]
[40.77687073 47.07763672]
[23.32364082 46.74787903]
[11.70865345 34.17120361]
[12.72490978 17.41913795]
[-2.43168139 12.88170242]
[-5.72122478 -1.64510608]
[-16.15163040 -12.42502403]
[-26.58203697 -23.20494080]
[-37.01244354 -33.98485947]
[-47.44284821 -44.76477814]
[-68.34526825 -49.25039673]
[-72.78987885 -69.36196136]
[-83.90760803 -79.43153381]
[-95.02532959 -89.50109863]
[-106.14305115 -99.57067108]
[-121.30224609 -96.25727844]
[-135.50030518 -102.51785278]
[-143.27777100 -115.94508362]
[-141.64407349 -131.37591553]
[-131.22740173 -142.87689209]
[-116.03315735 -146.02563477]
[-101.90384674 -139.61140442]
[-94.27249146 -126.10059357]
[-96.07348633 -110.68839264]
[-84.95575714 -100.61882019]
[-73.83803558 -90.54925537]
[-62.72031021 -80.47968292]
[-53.90884018 -82.37656403]
[-45.09146881 -79.92559814]
[-38.32117844 -73.56414795]
[-35.23578644 -64.65488434]
[-36.66293335 -55.19518280]
[-26.23252487 -44.41526413]
[-15.80211926 -33.63534927]
[-5.37171316 -22.85543060]
[5.05869293 -12.07551193]
[19.46923065 -8.30912781]
[23.50482750 6.98873234]
[36.33712006 5.40145302]
[47.90168762 11.60873413]
[53.84511948 23.52946472]
[51.78331757 36.88655472]
[61.97439957 47.89300156]
[72.16548157 58.89944839]
[82.35655975 69.90589142]
[92.54764557 80.91233826]
[107.53316498 81.57119751]
[118.65089417 71.50163269]
[129.76861572 61.43206406]
[140.88633728 51.36249542]
[152.00405884 41.29292679]
[163.12179565 31.22335815]
[174.23951721 21.15378952]
[185.35723877 11.08422089]
[185.88771057 -4.71116257]
[197.48873901 -15.44390678]
[213.27761841 -14.74646473]
[223.88711548 -3.03261662]
[223.02278137 12.74801922]
[211.19741821 23.23307228]
[195.42680359 22.20194435]
[184.30908203 32.27151489]
[173.19136047 42.34108353]
[162.07363892 52.41065216]
[150.95590210 62.48022079]
[139.83818054 72.54978943]
[128.72045898 82.61935425]
[117.60273743 92.68892670]
[116.77930450 107.66630554]
[126.72614288 118.89396667]
[136.67298889 130.12162781]
[146.61982727 141.34928894]
[156.56666565 152.57695007]
[166.07009888 148.60464478]
[176.26168823 147.23616028]
[186.44238281 148.55639648]
[195.91612244 152.46609497]
[204.03756714 158.68933105]
[210.25598145 166.79289246]
[214.15258789 176.21641541]
[215.46876526 186.31120300]
[214.12319946 196.38482666]
[210.21685791 205.74862671]
[204.02543640 213.76480103]
[212.41029358 226.20240784]
[220.79515076 238.64002991]
[229.18000793 251.07763672]
[237.56486511 263.51525879]
[245.94972229 275.95285034]
[254.33457947 288.39047241]
[262.71945190 300.82809448]
[271.10430908 313.26568604]
[279.48916626 325.70330811]
[287.87402344 338.14089966]
[302.84100342 344.84323120]
[304.25073242 361.18167114]
[290.65298462 370.34866333]
[276.03594971 362.91394043]
[275.43640137 346.52575684]
[267.05154419 334.08816528]
[258.66668701 321.65054321]
[250.28182983 309.21295166]
[241.89697266 296.77532959]
[233.51211548 284.33770752]
[225.12725830 271.90011597]
[216.74240112 259.46249390]
[208.35754395 247.02488708]
[199.97268677 234.58728027]
[191.58782959 222.14965820]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 106]
[5 105]
[6 104]
[7 103]
[8 102]
[10 29]
[11 28]
[12 27]
[13 26]
[15 24]
[16 23]
[17 22]
[30 79]
[31 78]
[32 77]
[33 76]
[34 75]
[37 71]
[39 69]
[40 68]
[41 67]
[42 66]
[43 65]
[45 60]
[46 59]
[47 58]
[48 57]
[80 101]
[81 100]
[82 99]
[83 98]
[84 97]
[85 96]
[86 95]
[87 94]
[117 142]
[118 141]
[119 140]
[120 139]
[121 138]
[122 137]
[123 136]
[124 135]
[125 134]
[126 133]
[127 132]
] def

init

% Start Annotations
4 106 0.0 1 colorpair
5 105 0.0 1 colorpair
6 104 0.0 1 colorpair
7 103 0.0 1 colorpair
8 102 0.0 1 colorpair
10 29 0.0 1 colorpair
11 28 0.0 1 colorpair
12 27 0.0 1 colorpair
13 26 0.0 1 colorpair
15 24 0.0 1 colorpair
16 23 0.0 1 colorpair
17 22 0.0 1 colorpair
30 79 0.0 1 colorpair
31 78 0.0 1 colorpair
32 77 0.0 1 colorpair
33 76 0.0 1 colorpair
34 75 0.0 0.2 colorpair
37 71 0.0 1 colorpair
39 69 0.0 0.2 colorpair
40 68 0.0 1 colorpair
41 67 0.0 1 colorpair
42 66 0.0 1 colorpair
43 65 0.0 1 colorpair
45 60 0.0 1 colorpair
46 59 0.0 1 colorpair
47 58 0.0 1 colorpair
48 57 0.0 1 colorpair
80 101 0.0 1 colorpair
81 100 0.0 1 colorpair
82 99 0.0 1 colorpair
83 98 0.0 1 colorpair
84 97 0.0 1 colorpair
85 96 0.0 1 colorpair
86 95 0.0 1 colorpair
87 94 0.0 1 colorpair
117 142 0.0 1 colorpair
118 141 0.0 1 colorpair
119 140 0.0 1 colorpair
120 139 0.0 1 colorpair
121 138 0.0 1 colorpair
122 137 0.0 1 colorpair
123 136 0.0 1 colorpair
124 135 0.0 1 colorpair
125 134 0.0 1 colorpair
126 133 0.0 1 colorpair
127 132 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
34 75 2 gmark
39 69 2 gmark

% End Annotations
showpage
end
%%EOF
