%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Dec 18 00:12:28 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAAGGGU_AAGGGAGGAUUUCUCC__CCCUCUGAU__GUUGUUAGUAAGCCGGGAAACUUAUCAGUAACAACACAACCAGUAUGAUGACGAGCUUCAUCAUAACCCUUUCCUUCUUUAAGGCCC_CUUCCUCGGGAGGGGCUUU\
) } def
/len { sequence length } bind def

/coor [
[170.68905640 197.16647339]
[162.18469238 179.48695374]
[162.12765503 159.82176208]
[170.56930542 142.00885010]
[160.54833984 130.84729004]
[150.52738953 119.68573761]
[140.50642395 108.52417755]
[130.48547363 97.36261749]
[125.91297913 113.18806458]
[114.23548126 123.58999634]
[99.63263702 126.02639008]
[86.75162506 120.61556244]
[75.16928101 130.14704895]
[63.58692932 139.67852783]
[61.91316605 155.16517639]
[50.03123474 164.66647339]
[35.27739716 162.97535706]
[23.69504929 172.50683594]
[18.44889069 188.04420471]
[2.31902504 191.00384521]
[-8.10152245 178.34114075]
[-2.09298730 163.08238220]
[14.16356564 160.92448425]
[25.74591446 151.39300537]
[26.92580795 136.58950806]
[38.53617859 126.75823212]
[54.05544281 128.09619141]
[65.63779449 118.56470490]
[77.22013855 109.03321838]
[74.97078705 91.18296814]
[85.90730286 75.14983368]
[106.08925629 70.01265717]
[96.31076813 58.63806915]
[86.53228760 47.26348114]
[76.75379944 35.88889313]
[66.97531891 24.51430702]
[50.79587173 27.75190163]
[35.27337646 22.43899155]
[24.59373093 10.10788822]
[21.58665276 -5.83018064]
[26.97637558 -21.02842331]
[16.95541763 -32.18998337]
[6.93446016 -43.35153961]
[-3.08649802 -54.51309967]
[-13.10745621 -65.67465973]
[-31.95917511 -62.84924698]
[-48.61569214 -71.80934143]
[-56.52276611 -88.82691193]
[-52.69049454 -107.04433441]
[-63.41059494 -117.53620911]
[-74.13069153 -128.02807617]
[-89.92938232 -127.60745239]
[-101.34053040 -138.54185486]
[-101.59410858 -154.34411621]
[-90.53966522 -165.63902283]
[-74.73561096 -165.72550964]
[-63.55821228 -154.55226135]
[-63.63882065 -138.74818420]
[-52.91872025 -128.25630188]
[-42.19861984 -117.76443481]
[-31.63232994 -121.70498657]
[-20.30820465 -121.38201904]
[-9.88926029 -116.80416107]
[-1.92015803 -108.60776520]
[2.40177536 -97.96868896]
[2.40634346 -86.43370056]
[-1.94589686 -75.69561768]
[8.07506084 -64.53405762]
[18.09601974 -53.37249756]
[28.11697769 -42.21094131]
[38.13793564 -31.04938126]
[51.32477570 -34.74803925]
[64.88111877 -32.37756348]
[76.13830566 -24.34645271]
[82.85523987 -12.18321896]
[83.66439056 1.75427496]
[78.34990692 14.73582172]
[88.12838745 26.11040878]
[97.90687561 37.48499680]
[107.68535614 48.85958481]
[117.46384430 60.23416901]
[132.43260193 61.20179749]
[143.59416199 51.18083954]
[154.75572205 41.15988159]
[165.91728210 31.13892365]
[177.07884216 21.11796570]
[188.24040222 11.09700775]
[199.40196228 1.07604969]
[210.56352234 -8.94490814]
[211.16290283 -24.73782730]
[222.81065369 -35.41984558]
[238.59635925 -34.65351105]
[249.15463257 -22.89347839]
[248.22145081 -7.11676359]
[236.35043335 3.31658649]
[220.58447266 2.21665072]
[209.42291260 12.23760891]
[198.26135254 22.25856590]
[187.09979248 32.27952576]
[175.93823242 42.30048370]
[164.77667236 52.32144165]
[153.61511230 62.34239960]
[142.45355225 72.36335754]
[141.64703369 87.34165955]
[151.66798401 98.50321960]
[161.68894958 109.66477966]
[171.70989990 120.82633209]
[181.73086548 131.98789978]
[191.59078979 127.39441681]
[202.25625610 125.32408905]
[213.09295654 125.89369965]
[223.45799255 129.06321716]
[232.73788452 134.63853455]
[240.38499451 142.28338623]
[245.94979858 151.53956604]
[249.10731506 161.85440063]
[249.67604065 172.61381531]
[247.62847900 183.17878723]
[243.09223938 192.92335510]
[236.34225464 201.27174377]
[244.84278870 213.63058472]
[253.34330750 225.98942566]
[261.84384155 238.34828186]
[270.34436035 250.70712280]
[282.90576172 253.83708191]
[289.72341919 264.36624146]
[287.58023071 276.31747437]
[295.81286621 288.85638428]
[304.04550171 301.39526367]
[312.27816772 313.93414307]
[327.16235352 320.81838989]
[328.37283325 337.17279053]
[314.66436768 346.17333984]
[300.13903809 338.56106567]
[299.73928833 322.16677856]
[291.50662231 309.62789917]
[283.27398682 297.08901978]
[275.04135132 284.55014038]
[258.97769165 277.56146240]
[257.98553467 259.20764160]
[249.48500061 246.84880066]
[240.98446655 234.48995972]
[232.48394775 222.13111877]
[223.98341370 209.77226257]
[204.94889832 213.90754700]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 108]
[5 107]
[6 106]
[7 105]
[8 104]
[12 29]
[13 28]
[14 27]
[17 24]
[18 23]
[32 81]
[33 80]
[34 79]
[35 78]
[36 77]
[41 71]
[42 70]
[43 69]
[44 68]
[45 67]
[49 60]
[50 59]
[51 58]
[82 103]
[83 102]
[84 101]
[85 100]
[86 99]
[87 98]
[88 97]
[89 96]
[120 144]
[121 143]
[122 142]
[123 141]
[124 140]
[127 138]
[128 137]
[129 136]
[130 135]
] def

init

% Start Annotations
4 108 0.0 1 colorpair
5 107 0.0 1 colorpair
6 106 0.0 1 colorpair
7 105 0.0 1 colorpair
8 104 0.0 0.6 colorpair
12 29 0.0 0.2 colorpair
13 28 0.0 1 colorpair
17 24 0.0 1 colorpair
18 23 0.16 1 colorpair
32 81 0.0 0.2 colorpair
33 80 0.0 1 colorpair
34 79 0.0 1 colorpair
36 77 0.0 0.6 colorpair
41 71 0.0 1 colorpair
42 70 0.16 1 colorpair
43 69 0.0 1 colorpair
44 68 0.0 1 colorpair
45 67 0.0 1 colorpair
49 60 0.0 1 colorpair
50 59 0.0 1 colorpair
82 103 0.0 0.2 colorpair
83 102 0.0 1 colorpair
84 101 0.0 1 colorpair
85 100 0.0 1 colorpair
86 99 0.0 1 colorpair
87 98 0.0 1 colorpair
88 97 0.0 1 colorpair
89 96 0.0 1 colorpair
120 144 0.0 0.2 colorpair
121 143 0.16 0.2 colorpair
122 142 0.16 0.2 colorpair
123 141 0.0 0.2 colorpair
124 140 0.0 0.2 colorpair
127 138 0.0 0.6 colorpair
128 137 0.0 0.6 colorpair
129 136 0.0 0.6 colorpair
130 135 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
8 104 1 gmark
12 29 2 gmark
14 27 4 gmark
14 cmark
27 cmark
18 cmark
23 cmark
32 81 2 gmark
35 78 3 gmark
35 cmark
78 cmark
36 77 1 gmark
42 cmark
70 cmark
51 58 3 gmark
51 cmark
58 cmark
82 103 2 gmark
120 144 2 gmark
121 143 2 gmark
121 cmark
122 142 2 gmark
142 cmark
123 141 2 gmark
124 140 2 gmark
127 138 1 gmark
128 137 1 gmark
129 136 1 gmark
130 135 1 gmark

% End Annotations
showpage
end
%%EOF
