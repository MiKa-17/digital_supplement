%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Dec 18 00:09:20 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGGUGAGAGGGGAUCUCUCCCCCC__UCUGAUUGGCUGUUAGUAAGCUGCGAAACUUAUCAGUAACAGAACAAUCAGUAUGAUGACCUGGUGCAUCAUAACCCUUUCCUUAUUAAAGCCCCUUCCUCGGGAGGGGCUUU\
) } def
/len { sequence length } bind def

/coor [
[139.47682190 176.63360596]
[149.47402954 161.56614685]
[139.22520447 150.61346436]
[128.97636414 139.66078186]
[118.72752380 128.70808411]
[108.47868347 117.75540161]
[100.97914124 117.67243958]
[100.81297302 132.67152405]
[85.81389618 132.50509644]
[85.98006439 117.50651550]
[78.48052216 117.42355347]
[67.99189758 128.14683533]
[57.50326920 138.87011719]
[47.01464462 149.59339905]
[36.52602005 160.31668091]
[32.98347092 176.32861328]
[17.26609612 181.00796509]
[5.54258680 169.54098511]
[9.87308121 153.72395325]
[25.80273819 149.82804871]
[36.29136276 139.10476685]
[46.77999115 128.38148499]
[57.26861572 117.65821075]
[67.75724030 106.93492889]
[53.41159058 111.31697845]
[42.12406158 101.43812561]
[43.57007599 86.50798798]
[56.54360580 78.97888184]
[70.22478485 85.13107300]
[84.36255646 90.14338684]
[74.35852814 78.96665955]
[64.35449219 67.78992462]
[54.35046005 56.61319351]
[44.34642792 45.43646240]
[34.34239197 34.25973129]
[17.57988358 36.21862030]
[3.08189297 27.90826416]
[-3.56605816 12.75741577]
[0.06177054 -3.21527815]
[-10.18706703 -14.16796398]
[-20.43590355 -25.12065125]
[-30.68474197 -36.07333755]
[-40.93357849 -47.02602386]
[-54.32521439 -40.05704498]
[-69.10070038 -36.96064758]
[-84.16358948 -37.96659851]
[-98.39611816 -43.00025177]
[-110.74214172 -51.68807983]
[-120.28549957 -63.38538361]
[-126.31800842 -77.22414398]
[-128.39202881 -92.17744446]
[-126.35363770 -107.13563538]
[-120.35410309 -120.98873138]
[-110.83863831 -132.70872498]
[-98.51334381 -141.42594910]
[-84.29284668 -146.49348450]
[-69.23239899 -147.53530884]
[-54.44957733 -144.47412109]
[-41.04137802 -137.53706360]
[-30.00277519 -127.23892212]
[-22.15290260 -114.34387970]
[-18.07427406 -99.80883789]
[-18.06955338 -84.71239471]
[-22.13908768 -70.17480469]
[-29.98089218 -57.27486038]
[-19.73205566 -46.32217407]
[-9.48321819 -35.36948776]
[0.76561928 -24.41680145]
[11.01445675 -13.46411514]
[24.09714699 -16.33670998]
[36.98823547 -12.31838799]
[46.26945877 -2.36208200]
[49.42418671 10.99016380]
[45.51912308 24.25569725]
[55.52315903 35.43243027]
[65.52719116 46.60916138]
[75.53122711 57.78589249]
[85.53525543 68.96262360]
[95.53929138 80.13935852]
[110.50626373 81.13420105]
[121.90156555 71.37986755]
[133.29687500 61.62553406]
[144.69218445 51.87120438]
[156.08749390 42.11687088]
[167.48278809 32.36253738]
[178.87809753 22.60820580]
[177.50933838 7.15161848]
[185.51600647 -6.14022017]
[199.81936646 -12.15632534]
[214.91947937 -8.58338261]
[225.01007080 3.20473862]
[226.21107483 18.67526627]
[218.06068420 31.87946510]
[203.69290161 37.74005127]
[188.63243103 34.00351334]
[177.23712158 43.75784683]
[165.84182739 53.51217651]
[154.44651794 63.26651001]
[143.05120850 73.02084351]
[131.65589905 82.77517700]
[120.26059723 92.52950287]
[119.43137360 107.50656891]
[129.68020630 118.45925140]
[139.92904663 129.41194153]
[150.17788696 140.36462402]
[160.42672729 151.31730652]
[170.84864807 144.78170776]
[182.22950745 140.12182617]
[194.23498535 137.47317505]
[206.51261902 136.91220093]
[218.70219421 138.45410156]
[230.44628906 142.05236816]
[241.40078735 147.60023499]
[251.24488831 154.93380737]
[259.69061279 163.83695984]
[266.49111938 174.04762268]
[271.44796753 185.26557922]
[274.41693115 197.16122437]
[275.31216431 209.38531494]
[274.10867310 221.57916260]
[270.84298706 233.38517761]
[265.61218262 244.45738220]
[258.57086182 254.47152710]
[249.92657471 263.13458252]
[258.36331177 275.53707886]
[266.80004883 287.93954468]
[281.79492188 294.57928467]
[283.27288818 310.91171265]
[269.71353149 320.13540649]
[255.06558228 312.76181030]
[254.39758301 296.37628174]
[245.96084595 283.97381592]
[237.52410889 271.57131958]
[220.73565674 278.04272461]
[202.85400391 280.11660767]
[185.01223755 277.65710449]
[168.34202576 270.81564331]
[153.90185547 260.02178955]
[142.60984802 245.95622253]
[135.18534851 229.50779724]
[132.10310364 211.71739197]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 106]
[3 105]
[4 104]
[5 103]
[6 102]
[11 24]
[12 23]
[13 22]
[14 21]
[15 20]
[30 79]
[31 78]
[32 77]
[33 76]
[34 75]
[35 74]
[39 69]
[40 68]
[41 67]
[42 66]
[43 65]
[80 101]
[81 100]
[82 99]
[83 98]
[84 97]
[85 96]
[86 95]
[124 133]
[125 132]
[126 131]
] def

init

% Start Annotations
2 106 0.16 1 colorpair
3 105 0.0 0.6 colorpair
4 104 0.0 1 colorpair
5 103 0.0 0.6 colorpair
6 102 0.0 0.6 colorpair
11 24 0.0 0.2 colorpair
12 23 0.32 1 colorpair
13 22 0.0 0.6 colorpair
14 21 0.0 0.6 colorpair
15 20 0.0 0.2 colorpair
30 79 0.16 0.6 colorpair
31 78 0.0 1 colorpair
32 77 0.0 1 colorpair
33 76 0.16 1 colorpair
34 75 0.0 1 colorpair
35 74 0.16 1 colorpair
39 69 0.0 1 colorpair
40 68 0.16 1 colorpair
41 67 0.0 1 colorpair
42 66 0.0 1 colorpair
43 65 0.0 1 colorpair
80 101 0.0 1 colorpair
81 100 0.0 1 colorpair
82 99 0.0 1 colorpair
83 98 0.0 1 colorpair
84 97 0.0 1 colorpair
85 96 0.0 1 colorpair
86 95 0.0 1 colorpair
124 133 0.0 0.2 colorpair
125 132 0.16 0.6 colorpair
126 131 0.32 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
2 cmark
3 105 1 gmark
5 103 1 gmark
6 102 1 gmark
11 24 2 gmark
12 cmark
23 cmark
13 22 1 gmark
14 21 1 gmark
15 20 2 gmark
30 79 1 gmark
30 cmark
33 cmark
76 cmark
35 cmark
74 cmark
40 cmark
68 cmark
124 133 2 gmark
125 132 1 gmark
132 cmark
126 131 2 gmark
126 cmark
131 cmark

% End Annotations
showpage
end
%%EOF
