%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Dec 18 00:09:29 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_AGGGUGAGAGGGGA_UCUCUCC__C_CCCUCUGAUUGGCUGUUAGUAAGCUGGGAAACUUAUCAGUAACAGAACAAUCAGUAUGAUGACCUGGUGCAUCAUAACCCUUUCCUUAUUAUAGCCCCUUCCUCGGGAGGGGCUUU\
) } def
/len { sequence length } bind def

/coor [
[-8.82686710 430.82742310]
[-21.13070869 422.24746704]
[-32.67789459 412.67343140]
[-43.38832092 402.17166138]
[-53.18769836 390.81509399]
[-62.00804520 378.68240356]
[-69.78817749 365.85784912]
[-76.47412109 352.43032837]
[-82.01950836 338.49301147]
[-86.38586426 324.14257812]
[-89.54290009 309.47857666]
[-91.46871948 294.60272217]
[-92.14996338 279.61819458]
[-91.58190155 264.62896729]
[-89.76847839 249.73898315]
[-86.72227478 235.05154419]
[-82.46441650 220.66854858]
[-77.02443695 206.68975830]
[-70.44008636 193.21212769]
[-62.75702667 180.32917786]
[-54.02855682 168.13024902]
[-44.31522369 156.69998169]
[-33.68441010 146.11764526]
[-22.20985603 136.45666504]
[-9.97115993 127.78404236]
[2.94678116 120.15995026]
[16.45435905 113.63726807]
[30.45787239 108.26124573]
[44.86018372 104.06917572]
[59.56138229 101.09013367]
[74.45949554 99.34478760]
[89.45644379 98.84529114]
[80.06758881 87.14702606]
[70.67873383 75.44876099]
[61.28988266 63.75049210]
[51.90103149 52.05222321]
[42.51218033 40.35395432]
[25.66696548 41.40848541]
[11.63629818 32.32843781]
[5.81465244 16.83961296]
[10.30029964 1.08468592]
[0.65848541 -10.40598106]
[-8.98332882 -21.89664650]
[-18.62514305 -33.38731384]
[-28.26695633 -44.87797928]
[-42.01571655 -38.64306641]
[-56.93697357 -36.34987259]
[-71.92346191 -38.16856766]
[-85.86309814 -43.96419144]
[-97.72145081 -53.30667114]
[-106.61856842 -65.50273132]
[-111.89421844 -79.64734650]
[-113.15690613 -94.69088745]
[-110.31295013 -109.51702881]
[-103.57337189 -123.02557373]
[-93.43830109 -134.21409607]
[-80.65982056 -142.25231934]
[-66.18619537 -146.54377747]
[-51.09144592 -146.77000427]
[-36.49571228 -142.91419983]
[-23.48209190 -135.26252747]
[-13.01628399 -124.38275146]
[-5.87491989 -111.08224487]
[-2.58793616 -96.34798431]
[-3.39924860 -81.27336121]
[-8.24865246 -66.97699738]
[-16.77629089 -54.51979446]
[-7.13447618 -43.02912903]
[2.50733805 -31.53846169]
[12.14915180 -20.04779434]
[21.79096603 -8.55712795]
[35.00791931 -10.71842861]
[47.66164398 -6.01098013]
[56.39154434 4.42966413]
[58.82254028 17.93052864]
[54.21044540 30.96510315]
[63.59930038 42.66337204]
[72.98815155 54.36163712]
[82.37700653 66.05990601]
[91.76585388 77.75817108]
[101.15470886 89.45644379]
[116.06555176 91.08943939]
[127.76381683 81.70059204]
[139.46208191 72.31173706]
[151.16035461 62.92288589]
[162.85862732 53.53403473]
[174.55688477 44.14518356]
[186.25515747 34.75633240]
[185.37619019 19.26416969]
[193.79945374 6.23235178]
[208.28602600 0.67187726]
[223.26551819 4.72086143]
[232.97802734 16.82238770]
[233.68887329 32.32317352]
[225.12474060 45.26284790]
[210.57870483 50.66584396]
[195.64401245 46.45459747]
[183.94573975 55.84344864]
[172.24746704 65.23229980]
[160.54920959 74.62115479]
[148.85093689 84.01000977]
[137.15266418 93.39885712]
[125.45440674 102.78771210]
[139.98271179 106.51977539]
[154.15005493 111.44787598]
[167.85818481 117.53782654]
[181.01197815 124.74737549]
[193.52021790 133.02650452]
[205.29611206 142.31781006]
[216.25798035 152.55680847]
[226.32980347 163.67250061]
[235.44169617 175.58776855]
[243.53045654 188.21994019]
[250.53996277 201.48143005]
[256.42160034 215.28019714]
[261.13458252 229.52056885]
[264.64617920 244.10372925]
[266.93209839 258.92852783]
[267.97640991 273.89212036]
[267.77188110 288.89071655]
[266.31997681 303.82031250]
[263.63073730 318.57727051]
[259.72283936 333.05926514]
[254.62335205 347.16583252]
[248.36767578 360.79910278]
[240.99920654 373.86456299]
[232.56904602 386.27148438]
[223.13566589 397.93389893]
[212.76452637 408.77084351]
[201.52755737 418.70718384]
[189.50271606 427.67395020]
[176.77340698 435.60897827]
[163.42793274 442.45721436]
[149.55886841 448.17114258]
[135.26242065 452.71115112]
[120.63776398 456.04571533]
[105.78633881 458.15173340]
[90.81118011 459.01455688]
[75.81615448 458.62826538]
[60.90528488 456.99545288]
[46.18200302 454.12753296]
[31.74844551 450.04434204]
[17.70473289 444.77423096]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[32 81]
[33 80]
[34 79]
[35 78]
[36 77]
[37 76]
[41 71]
[42 70]
[43 69]
[44 68]
[45 67]
[82 103]
[83 102]
[84 101]
[85 100]
[86 99]
[87 98]
[88 97]
] def

init

% Start Annotations
33 80 0.0 1 colorpair
34 79 0.0 1 colorpair
35 78 0.16 1 colorpair
36 77 0.0 1 colorpair
37 76 0.16 1 colorpair
41 71 0.0 1 colorpair
42 70 0.16 1 colorpair
43 69 0.0 1 colorpair
44 68 0.0 1 colorpair
45 67 0.0 1 colorpair
82 103 0.0 1 colorpair
83 102 0.0 1 colorpair
84 101 0.0 1 colorpair
85 100 0.0 1 colorpair
86 99 0.0 1 colorpair
87 98 0.0 1 colorpair
88 97 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
32 81 4 gmark
32 cmark
35 cmark
78 cmark
37 cmark
76 cmark
42 cmark
70 cmark

% End Annotations
showpage
end
%%EOF
