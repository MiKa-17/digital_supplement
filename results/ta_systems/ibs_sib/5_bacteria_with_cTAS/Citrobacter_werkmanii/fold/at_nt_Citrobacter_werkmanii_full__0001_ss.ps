%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Dec 17 22:26:03 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGUUAGGGAGGGUUUCCCCUCCCCCUGGUG___UCUUAGUAAGCCGCGAAGCUAAUCACUAAGAGUAUCACCAGUAUGAUGACGUACUUCAUCAUAACCCUUUCCUUAUUUUGGCCCCUUCCUCGGGAGGGGCUUU\
) } def
/len { sequence length } bind def

/coor [
[148.18597412 159.86627197]
[137.51960754 149.31977844]
[126.85324860 138.77326965]
[116.18688202 128.22677612]
[105.52052307 117.68026733]
[101.02341461 118.74932098]
[96.33850098 118.67684174]
[91.75487518 117.43632507]
[81.32958221 128.22119141]
[71.02683258 139.12316895]
[60.84793091 150.14088440]
[50.66903305 161.15859985]
[40.49013138 172.17631531]
[30.31123352 183.19403076]
[27.22624779 199.30038452]
[11.64855194 204.42556763]
[-0.39685547 193.29721069]
[3.48130774 177.36323547]
[19.29351997 173.01513672]
[29.47241783 161.99742126]
[39.65131760 150.97970581]
[49.83021545 139.96199036]
[60.00911713 128.94427490]
[62.25655365 121.83681488]
[70.54472351 117.79589844]
[80.97001648 107.01103210]
[80.63101959 92.01486206]
[69.72904205 81.71211243]
[58.82705307 71.40935516]
[47.92507172 61.10660172]
[37.02308655 50.80384827]
[26.12110138 40.50109482]
[9.58324337 43.85276794]
[-5.55680275 36.78522110]
[-13.44922256 22.24656105]
[-11.17417049 6.02825212]
[-22.30620766 -4.02549171]
[-33.43824387 -14.07923508]
[-44.57027817 -24.13297844]
[-55.70231628 -34.18672180]
[-66.83435059 -44.24046707]
[-77.96639252 -54.29421234]
[-99.12023926 -57.35133362]
[-104.93278503 -77.10691833]
[-116.72040558 -86.38334656]
[-128.50802612 -95.65976715]
[-144.16954041 -93.54022980]
[-156.69184875 -103.18219757]
[-158.64567566 -118.86524963]
[-148.87185669 -131.28491211]
[-133.16903687 -133.07281494]
[-120.85339355 -123.16824341]
[-119.23160553 -107.44738770]
[-107.44398499 -98.17096710]
[-95.65636444 -88.89453888]
[-86.98543549 -91.39894104]
[-78.00877380 -89.55651855]
[-70.81103516 -83.66384888]
[-67.12438202 -74.97281647]
[-67.91264343 -65.42624664]
[-56.78060913 -55.37250137]
[-45.64857101 -45.31875992]
[-34.51653671 -35.26501465]
[-23.38450050 -25.21127129]
[-12.25246334 -15.15752792]
[-1.12042689 -5.10378408]
[11.67788887 -9.06468010]
[24.86318398 -6.14010334]
[34.94732666 3.00639343]
[39.20817184 16.05094147]
[36.42385483 29.59911156]
[47.32584000 39.90186310]
[58.22782516 50.20462036]
[69.12980652 60.50737381]
[80.03179169 70.81012726]
[90.93377686 81.11288452]
[105.93377686 81.11288452]
[116.83576202 70.81012726]
[127.73774719 60.50737381]
[138.63972473 50.20462036]
[149.54171753 39.90186310]
[160.44369507 29.59911156]
[171.34568787 19.29635620]
[182.24766541 8.99360275]
[182.44351196 -6.80947304]
[193.81465149 -17.78548813]
[209.61476135 -17.42256927]
[220.46995544 -5.93602943]
[219.94000244 9.85937214]
[208.33934021 20.59250259]
[192.55041504 19.89558601]
[181.64843750 30.19834137]
[170.74644470 40.50109482]
[159.84446716 50.80384827]
[148.94248962 61.10660172]
[138.04049683 71.40935516]
[127.13851166 81.71211243]
[116.23653412 92.01486206]
[116.06702423 107.01390839]
[126.73339081 117.56040955]
[137.39974976 128.10691833]
[148.06611633 138.65341187]
[158.73248291 149.19992065]
[166.52023315 145.41107178]
[174.97261047 143.59791565]
[183.59747314 143.85826111]
[191.89453125 146.16941833]
[199.38429260 150.38995361]
[205.63584900 156.26831055]
[210.29159546 163.45782471]
[213.08767700 171.53713989]
[213.86903381 180.03491211]
[212.59785461 188.45726013]
[209.35542297 196.31657410]
[204.33691406 203.15960693]
[212.93284607 215.45228577]
[221.52877808 227.74496460]
[230.12471008 240.03764343]
[238.72064209 252.33032227]
[247.31657410 264.62301636]
[255.91250610 276.91567993]
[264.50842285 289.20837402]
[273.10437012 301.50103760]
[288.18356323 307.94692993]
[289.87197876 324.25894165]
[276.43267822 333.65667725]
[261.69088745 326.47253418]
[260.81167603 310.09698486]
[252.21575928 297.80429077]
[243.61982727 285.51162720]
[235.02389526 273.21893311]
[226.42796326 260.92626953]
[217.83203125 248.63357544]
[209.23609924 236.34089661]
[200.64016724 224.04821777]
[192.04423523 211.75553894]
[170.12329102 213.66770935]
[151.22517395 202.15762329]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 103]
[2 102]
[3 101]
[4 100]
[5 99]
[8 26]
[9 25]
[10 23]
[11 22]
[12 21]
[13 20]
[14 19]
[27 76]
[28 75]
[29 74]
[30 73]
[31 72]
[32 71]
[36 66]
[37 65]
[38 64]
[39 63]
[40 62]
[41 61]
[42 60]
[44 55]
[45 54]
[46 53]
[77 98]
[78 97]
[79 96]
[80 95]
[81 94]
[82 93]
[83 92]
[84 91]
[115 136]
[116 135]
[117 134]
[118 133]
[119 132]
[120 131]
[121 130]
[122 129]
[123 128]
] def

init

% Start Annotations
1 103 0.0 1 colorpair
2 102 0.0 1 colorpair
3 101 0.0 1 colorpair
4 100 0.0 1 colorpair
5 99 0.0 1 colorpair
8 26 0.16 1 colorpair
9 25 0.0 0.6 colorpair
10 23 0.0 1 colorpair
11 22 0.16 1 colorpair
12 21 0.0 0.2 colorpair
13 20 0.0 1 colorpair
14 19 0.16 1 colorpair
27 76 0.0 1 colorpair
28 75 0.0 1 colorpair
29 74 0.0 1 colorpair
30 73 0.0 0.6 colorpair
31 72 0.0 1 colorpair
32 71 0.16 1 colorpair
36 66 0.0 1 colorpair
37 65 0.16 1 colorpair
38 64 0.0 1 colorpair
39 63 0.0 1 colorpair
40 62 0.0 1 colorpair
41 61 0.0 0.6 colorpair
42 60 0.0 0.6 colorpair
44 55 0.0 1 colorpair
45 54 0.0 1 colorpair
46 53 0.0 0.6 colorpair
77 98 0.0 1 colorpair
78 97 0.0 1 colorpair
79 96 0.0 1 colorpair
80 95 0.0 1 colorpair
81 94 0.0 1 colorpair
82 93 0.0 1 colorpair
83 92 0.0 1 colorpair
84 91 0.0 1 colorpair
115 136 0.16 1 colorpair
116 135 0.16 1 colorpair
117 134 0.0 1 colorpair
118 133 0.0 1 colorpair
119 132 0.0 1 colorpair
120 131 0.0 1 colorpair
121 130 0.0 1 colorpair
122 129 0.0 1 colorpair
123 128 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
26 cmark
9 25 1 gmark
11 cmark
22 cmark
12 21 2 gmark
14 cmark
19 cmark
30 73 1 gmark
32 cmark
71 cmark
37 cmark
65 cmark
41 61 1 gmark
42 60 1 gmark
46 53 1 gmark
115 cmark
135 cmark
123 128 1 gmark

% End Annotations
showpage
end
%%EOF
