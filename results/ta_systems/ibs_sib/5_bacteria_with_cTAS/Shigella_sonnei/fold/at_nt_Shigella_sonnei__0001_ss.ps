%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Dec 18 00:18:06 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___AGGGU_AGGGAGGAGUUCCCCCCCCCC__UGAU__GUUCUUAGUAAGCCGGGAAACUUAUCACUAACAACACAACCAGUAUGAUGACGAGCUUCAUCAUAACCCUUUCCUUAUUAAA_GGCCCCUUCCUCGGGAGGGGCUUU\
) } def
/len { sequence length } bind def

/coor [
[167.43795776 213.73873901]
[167.54237366 193.56726074]
[176.31282043 175.35183716]
[166.29185486 164.19027710]
[156.27090454 153.02871704]
[146.24993896 141.86715698]
[136.22898865 130.70559692]
[126.20802307 119.54403687]
[112.55873108 128.19877625]
[97.33015442 128.92199707]
[84.56044006 122.41876221]
[72.97808838 131.95024109]
[61.39574432 141.48173523]
[49.81339264 151.01321411]
[38.23104477 160.54469299]
[26.64869690 170.07618713]
[15.06634808 179.60766602]
[3.48399901 189.13916016]
[-1.76216066 204.67652893]
[-17.89202499 207.63616943]
[-28.31257439 194.97344971]
[-22.30403900 179.71470642]
[-6.04748535 177.55680847]
[5.53486347 168.02531433]
[17.11721230 158.49383545]
[28.69956017 148.96235657]
[40.28190994 139.43086243]
[51.86425781 129.89938354]
[63.44660568 120.36789703]
[75.02895355 110.83641052]
[72.86414337 102.15086365]
[73.63363647 93.23273468]
[77.25422668 85.04637909]
[67.47574615 73.67179108]
[57.69725800 62.29720306]
[47.91877365 50.92261887]
[30.48726654 49.94828415]
[19.34510040 36.94783401]
[20.98440742 20.24298096]
[10.96344948 9.08142090]
[0.94249129 -2.08013797]
[-9.07846642 -13.24169731]
[-19.09942436 -24.40325546]
[-29.12038231 -35.56481552]
[-39.14134216 -46.72637558]
[-49.16230011 -57.88793182]
[-59.53823090 -68.72029114]
[-70.25833130 -79.21216583]
[-80.97843170 -89.70404053]
[-91.69853210 -100.19591522]
[-102.41863251 -110.68778992]
[-118.21732330 -110.26715851]
[-129.62847900 -121.20156860]
[-129.88204956 -137.00382996]
[-118.82760620 -148.29872131]
[-103.02355194 -148.38522339]
[-91.84615326 -137.21197510]
[-91.92675781 -121.40789032]
[-81.20665741 -110.91601562]
[-70.48655701 -100.42414093]
[-59.76645660 -89.93226624]
[-49.04635620 -79.44039154]
[-45.46457672 -79.13781738]
[-41.86114502 -77.03989410]
[-39.09939575 -73.16072083]
[-38.00074005 -67.90888977]
[-27.97978210 -56.74733353]
[-17.95882416 -45.58577347]
[-7.93786573 -34.42421341]
[2.08309245 -23.26265526]
[12.10405064 -12.10109615]
[22.12500763 -0.93953687]
[32.14596558 10.22202206]
[45.02563858 9.11417007]
[56.34922028 15.74518967]
[61.84608459 27.87511063]
[59.29336166 41.14413452]
[69.07184601 52.51871872]
[78.85033417 63.89330673]
[88.62881470 75.26789093]
[108.94831085 71.41071320]
[128.15515137 83.38321686]
[139.31671143 73.36225891]
[150.47827148 63.34130478]
[161.63983154 53.32034683]
[172.80139160 43.29938889]
[183.96295166 33.27843094]
[195.12451172 23.25747299]
[206.28607178 13.23651409]
[206.88546753 -2.55640435]
[218.53320312 -13.23842239]
[234.31890869 -12.47208881]
[244.87718201 -0.71205527]
[243.94400024 15.06465912]
[232.07298279 25.49800873]
[216.30702209 24.39807320]
[205.14546204 34.41903305]
[193.98390198 44.43999100]
[182.82234192 54.46094894]
[171.66078186 64.48190308]
[160.49922180 74.50286102]
[149.33766174 84.52381897]
[138.17610168 94.54477692]
[137.36958313 109.52307892]
[147.39053345 120.68463898]
[157.41149902 131.84619141]
[167.43244934 143.00775146]
[177.45341492 154.16931152]
[187.47436523 165.33087158]
[196.89242554 160.78822327]
[207.08274841 158.49310303]
[217.51736450 158.55946350]
[227.65673828 160.97900391]
[236.97770691 165.62187195]
[245.00047302 172.24365234]
[251.31327820 180.49819946]
[255.59356689 189.95570374]
[257.62442017 200.12513733]
[257.30563354 210.47970581]
[254.65853882 220.48413086]
[249.82470703 229.62236023]
[243.05839539 237.42411804]
[251.29103088 249.96299744]
[259.52368164 262.50189209]
[267.75631714 275.04077148]
[275.98895264 287.57965088]
[284.22161865 300.11853027]
[292.45425415 312.65740967]
[300.68688965 325.19628906]
[308.91955566 337.73516846]
[323.80374146 344.61941528]
[325.01422119 360.97384644]
[311.30575562 369.97439575]
[296.78042603 362.36209106]
[296.38064575 345.96783447]
[288.14801025 333.42895508]
[279.91537476 320.89004517]
[271.68273926 308.35116577]
[263.45007324 295.81228638]
[255.21743774 283.27340698]
[246.98478699 270.73452759]
[238.75215149 258.19564819]
[230.51950073 245.65676880]
[210.91972351 249.59365845]
[191.48324585 244.72743225]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 109]
[4 108]
[5 107]
[6 106]
[7 105]
[8 104]
[11 30]
[12 29]
[13 28]
[14 27]
[15 26]
[16 25]
[17 24]
[18 23]
[33 80]
[34 79]
[35 78]
[36 77]
[39 73]
[40 72]
[41 71]
[42 70]
[43 69]
[44 68]
[45 67]
[46 66]
[47 62]
[48 61]
[49 60]
[50 59]
[51 58]
[82 103]
[83 102]
[84 101]
[85 100]
[86 99]
[87 98]
[88 97]
[89 96]
[122 143]
[123 142]
[124 141]
[125 140]
[126 139]
[127 138]
[128 137]
[129 136]
[130 135]
] def

init

% Start Annotations
3 109 0.0 0.2 colorpair
4 108 0.0 1 colorpair
5 107 0.0 1 colorpair
6 106 0.0 1 colorpair
7 105 0.0 1 colorpair
8 104 0.0 1 colorpair
11 30 0.0 1 colorpair
12 29 0.16 0.6 colorpair
13 28 0.0 1 colorpair
14 27 0.16 0.2 colorpair
15 26 0.0 1 colorpair
16 25 0.0 0.6 colorpair
17 24 0.0 0.2 colorpair
18 23 0.0 0.2 colorpair
33 80 0.0 1 colorpair
34 79 0.0 1 colorpair
35 78 0.16 0.6 colorpair
36 77 0.0 1 colorpair
39 73 0.16 0.6 colorpair
40 72 0.16 0.2 colorpair
41 71 0.0 1 colorpair
42 70 0.16 1 colorpair
43 69 0.0 1 colorpair
44 68 0.0 1 colorpair
45 67 0.0 1 colorpair
46 66 0.0 0.2 colorpair
47 62 0.0 1 colorpair
48 61 0.0 0.6 colorpair
49 60 0.0 1 colorpair
50 59 0.0 1 colorpair
51 58 0.16 0.6 colorpair
82 103 0.0 0.6 colorpair
83 102 0.0 1 colorpair
84 101 0.0 1 colorpair
85 100 0.0 1 colorpair
86 99 0.0 1 colorpair
87 98 0.0 1 colorpair
88 97 0.0 1 colorpair
89 96 0.0 1 colorpair
122 143 0.0 1 colorpair
123 142 0.16 1 colorpair
124 141 0.0 1 colorpair
125 140 0.0 1 colorpair
126 139 0.16 1 colorpair
127 138 0.0 1 colorpair
128 137 0.0 1 colorpair
129 136 0.0 1 colorpair
130 135 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
3 109 2 gmark
12 29 1 gmark
29 cmark
14 27 2 gmark
14 cmark
27 cmark
16 25 1 gmark
17 24 2 gmark
18 23 2 gmark
35 78 1 gmark
35 cmark
78 cmark
39 73 1 gmark
73 cmark
40 72 2 gmark
72 cmark
42 cmark
70 cmark
46 66 2 gmark
48 61 1 gmark
51 58 1 gmark
51 cmark
58 cmark
82 103 1 gmark
123 cmark
142 cmark
126 cmark
139 cmark

% End Annotations
showpage
end
%%EOF
