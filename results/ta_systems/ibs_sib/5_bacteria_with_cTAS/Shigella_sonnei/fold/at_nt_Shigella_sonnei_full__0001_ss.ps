%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Dec 18 00:18:06 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___AGGGU_AGGGAGGAUUUCUCCCCCCUC__UGAU__GUUGUUAGUAAGCCGGGAAACUUAUGAGUAACAACACAACCAGUAUGAUGACGAGCUUCAUCAUAACCCUUUCCUUCUUUAA_GGCCCCUUCCUCGGGAGGGGCUUU\
) } def
/len { sequence length } bind def

/coor [
[147.27819824 226.37960815]
[141.97787476 207.54301453]
[144.14608765 188.06509399]
[153.48767090 170.80218506]
[143.46670532 159.64062500]
[133.44575500 148.47906494]
[123.42479706 137.31752014]
[113.40383911 126.15595245]
[99.97234344 131.63978577]
[84.49176025 130.13253784]
[70.60958099 121.02848816]
[60.83109665 132.40307617]
[51.05261230 143.77766418]
[52.49151230 159.51631165]
[42.31599808 171.60905457]
[26.56301308 172.88146973]
[14.57852936 162.57867432]
[13.47272587 146.81312561]
[23.90165710 134.93823242]
[39.67802429 133.99917603]
[49.45650864 122.62458801]
[59.23499298 111.25000000]
[45.20029831 116.54408264]
[33.22187805 125.57278442]
[18.28491592 126.94651031]
[4.86064959 120.25405121]
[-3.03248882 107.49871826]
[-3.03176165 92.49871826]
[4.86261368 79.74416351]
[18.28752899 73.05299377]
[33.22435760 74.42816925]
[45.20029831 83.45591736]
[59.23499298 88.75000000]
[49.45650864 77.37541199]
[39.67802429 66.00082397]
[29.89953804 54.62623978]
[13.72009468 57.86383438]
[-1.80240154 52.55092239]
[-12.48204803 40.21981812]
[-15.48912525 24.28175163]
[-10.09940243 9.08350945]
[-20.12036133 -2.07805014]
[-30.14131927 -13.23960876]
[-40.16227722 -24.40116882]
[-50.18323517 -35.56272888]
[-69.03495026 -32.73731232]
[-85.69146729 -41.69740677]
[-93.59854889 -58.71498108]
[-89.76627350 -76.93240356]
[-100.48637390 -87.42427826]
[-111.20647430 -97.91615295]
[-127.00516510 -97.49552155]
[-138.41630554 -108.42993164]
[-138.66989136 -124.23218536]
[-127.61544037 -135.52708435]
[-111.81139374 -135.61357117]
[-100.63399506 -124.44033813]
[-100.71459961 -108.63625336]
[-89.99449921 -98.14437866]
[-79.27439880 -87.65250397]
[-68.70810699 -91.59305573]
[-57.38398361 -91.27008057]
[-46.96503830 -86.69223022]
[-38.99593735 -78.49583435]
[-34.67400360 -67.85675812]
[-34.66943359 -56.32176590]
[-39.02167511 -45.58368683]
[-29.00071716 -34.42212677]
[-18.97975922 -23.26056671]
[-8.95880127 -12.09900761]
[1.06215668 -0.93744898]
[14.24899769 -4.63610935]
[27.80533981 -2.26563120]
[39.06253052 5.76547909]
[45.77945709 17.92871284]
[46.58861160 31.86620712]
[41.27412415 44.84775543]
[51.05261230 56.22233963]
[60.83109665 67.59693146]
[70.60958099 78.97151184]
[85.58213806 69.33078766]
[102.23986053 68.43959045]
[116.13499451 75.43460083]
[127.29655457 65.41364288]
[138.45811462 55.39268875]
[149.61967468 45.37173080]
[160.78123474 35.35077286]
[171.94279480 25.32981491]
[183.10435486 15.30885696]
[183.70375061 -0.48406193]
[195.35148621 -11.16608047]
[211.13719177 -10.39974689]
[221.69546509 1.36028707]
[220.76228333 17.13700104]
[208.89128113 27.57035065]
[193.12530518 26.47041512]
[181.96374512 36.49137497]
[170.80218506 46.51233292]
[159.64062500 56.53329086]
[148.47906494 66.55424500]
[137.31752014 76.57520294]
[126.15595245 86.59616089]
[129.34790039 101.58027649]
[124.56539917 116.13499451]
[134.58634949 127.29655457]
[144.60731506 138.45811462]
[154.62826538 149.61967468]
[164.64923096 160.78123474]
[174.40086365 155.77464294]
[184.98544312 152.95637512]
[195.91874695 152.45166016]
[206.70138550 154.27996826]
[216.84158325 158.35430908]
[225.87768555 164.48529053]
[233.39909363 172.39004517]
[239.06494141 181.70515442]
[242.61959839 192.00343323]
[243.90411377 202.81346130]
[242.86338806 213.64122009]
[239.54849243 223.99266052]
[234.11421204 233.39620972]
[226.81176758 241.42425537]
[235.04440308 253.96313477]
[243.27705383 266.50201416]
[251.50968933 279.04089355]
[259.74234009 291.57977295]
[267.97497559 304.11865234]
[276.20764160 316.65756226]
[284.44027710 329.19644165]
[292.67291260 341.73532104]
[307.55709839 348.61956787]
[308.76757812 364.97396851]
[295.05911255 373.97451782]
[280.53381348 366.36224365]
[280.13403320 349.96795654]
[271.90139771 337.42907715]
[263.66873169 324.89019775]
[255.43609619 312.35131836]
[247.20346069 299.81243896]
[238.97080994 287.27355957]
[230.73817444 274.73464966]
[222.50552368 262.19577026]
[214.27287292 249.65689087]
[195.40182495 254.35714722]
[176.11753845 251.61895752]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 108]
[5 107]
[6 106]
[7 105]
[8 104]
[11 22]
[12 21]
[13 20]
[33 80]
[34 79]
[35 78]
[36 77]
[41 71]
[42 70]
[43 69]
[44 68]
[45 67]
[49 60]
[50 59]
[51 58]
[83 102]
[84 101]
[85 100]
[86 99]
[87 98]
[88 97]
[89 96]
[122 143]
[123 142]
[124 141]
[125 140]
[126 139]
[127 138]
[128 137]
[129 136]
[130 135]
] def

init

% Start Annotations
4 108 0.0 1 colorpair
5 107 0.0 1 colorpair
6 106 0.0 1 colorpair
7 105 0.0 1 colorpair
8 104 0.0 1 colorpair
11 22 0.16 1 colorpair
12 21 0.32 1 colorpair
13 20 0.0 1 colorpair
33 80 0.0 1 colorpair
34 79 0.0 1 colorpair
36 77 0.0 1 colorpair
41 71 0.0 1 colorpair
42 70 0.16 1 colorpair
43 69 0.0 1 colorpair
44 68 0.0 1 colorpair
45 67 0.0 1 colorpair
49 60 0.0 1 colorpair
50 59 0.0 1 colorpair
83 102 0.0 1 colorpair
84 101 0.0 1 colorpair
85 100 0.0 1 colorpair
86 99 0.0 1 colorpair
87 98 0.0 1 colorpair
88 97 0.0 1 colorpair
89 96 0.0 1 colorpair
122 143 0.0 1 colorpair
123 142 0.16 1 colorpair
124 141 0.0 1 colorpair
125 140 0.0 1 colorpair
126 139 0.16 1 colorpair
127 138 0.0 1 colorpair
128 137 0.0 1 colorpair
129 136 0.0 1 colorpair
130 135 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
22 cmark
12 cmark
21 cmark
35 78 10 gmark
35 cmark
78 cmark
42 cmark
70 cmark
51 58 10 gmark
51 cmark
58 cmark
123 cmark
142 cmark
126 cmark
139 cmark

% End Annotations
showpage
end
%%EOF
