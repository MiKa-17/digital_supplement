%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Wed Dec 18 00:15:13 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___AGGGUGAGGGAGGAUUUCUCCCCCCUC__UGAUUGGCUGUUAAUAAGCUGCGAAACUUACGAGUAACAACACAACCAGUAUGAUGACGAACUUCAUCAUAACCCUUUCCUUCUAUAAGGCCC_CUUCCUCGGGAGGGGCUUU\
) } def
/len { sequence length } bind def

/coor [
[178.09455872 196.60633850]
[165.48463440 180.75883484]
[162.50772095 160.65089417]
[170.04032898 141.69041443]
[160.01936340 130.52885437]
[149.99841309 119.36729431]
[139.97744751 108.20573425]
[129.95649719 97.04417419]
[122.92670441 116.31324005]
[106.10947418 125.45133209]
[88.79447937 121.46125793]
[78.07437897 131.95314026]
[67.35427856 142.44500732]
[62.90358353 157.62730408]
[48.39582443 160.99984741]
[37.67572021 171.49172974]
[33.78464890 187.42256165]
[17.96891975 191.75785828]
[6.49839926 180.03782654]
[11.17297649 164.31903076]
[27.18384743 160.77162170]
[37.90394974 150.27975464]
[41.58787155 135.84791565]
[56.86240768 131.72491455]
[67.58250427 121.23303223]
[78.30260468 110.74115753]
[74.43957520 97.48985291]
[78.47134399 83.44770813]
[89.97434235 73.18374634]
[105.97414398 70.49681854]
[99.65737152 68.17813110]
[96.05142212 63.66787338]
[95.52195740 58.85494995]
[85.74347687 47.48036575]
[69.56403351 50.71796036]
[54.04153442 45.40504837]
[43.36188889 33.07394409]
[40.35481262 17.13587761]
[45.74453354 1.93763494]
[30.76778412 -3.16211700]
[28.02250862 -17.80154037]
[18.00155067 -28.96310043]
[7.98059225 -40.12466049]
[-2.04036546 -51.28621674]
[-12.06132317 -62.44777679]
[-32.78305054 -67.71888733]
[-36.45567322 -87.98846436]
[-47.17577362 -98.48033905]
[-57.89587402 -108.97221375]
[-68.61597443 -119.46408844]
[-83.89193726 -116.73925781]
[-97.83732605 -123.54408264]
[-105.08986664 -137.26196289]
[-102.86080170 -152.61810303]
[-92.00725555 -163.70774841]
[-76.70263672 -166.26669312]
[-62.83188248 -159.31098938]
[-55.72858047 -145.51524353]
[-58.12409973 -130.18418884]
[-47.40399933 -119.69231415]
[-36.68389893 -109.20043945]
[-25.96379662 -98.70856476]
[-17.09413338 -100.26244354]
[-8.38527012 -97.47837067]
[-1.86745203 -90.87068176]
[0.87783420 -81.85994720]
[-0.89976436 -72.46873474]
[9.12119389 -61.30717468]
[19.14215088 -50.14561844]
[29.16310883 -38.98405838]
[39.18406677 -27.82249832]
[53.44405365 -23.52109718]
[56.90609360 -8.08332348]
[70.09293365 -11.78198338]
[83.64927673 -9.41150475]
[94.90647125 -1.38039505]
[101.62339783 10.78283882]
[102.43254852 24.72033310]
[97.11806488 37.70188141]
[106.89654541 49.07646561]
[116.91750336 60.23802567]
[131.90362549 60.88335800]
[143.06517029 50.86240005]
[154.22673035 40.84144211]
[165.38829041 30.82048607]
[176.54985046 20.79952812]
[187.71141052 10.77856922]
[198.87297058 0.75761157]
[210.03453064 -9.26334667]
[210.63392639 -25.05626488]
[222.28167725 -35.73828506]
[238.06736755 -34.97195053]
[248.62564087 -23.21191597]
[247.69245911 -7.43520164]
[235.82145691 2.99814844]
[220.05549622 1.89821267]
[208.89393616 11.91917038]
[197.73237610 21.94012833]
[186.57081604 31.96108627]
[175.40925598 41.98204422]
[164.24769592 52.00300217]
[153.08613586 62.02396011]
[141.92457581 72.04492188]
[141.11804199 87.02321625]
[151.13900757 98.18477631]
[161.15995789 109.34633636]
[171.18092346 120.50789642]
[181.20187378 131.66944885]
[190.66416931 127.64037323]
[200.83039856 126.20378113]
[211.00459290 127.44907379]
[220.49247742 131.28231812]
[228.64898682 137.43333435]
[234.92202759 145.47465515]
[238.88989258 154.85124207]
[240.28961182 164.91885376]
[239.03430176 174.98823547]
[235.21858215 184.37231445]
[229.11141968 192.43312073]
[237.61195374 204.79196167]
[246.11247253 217.15080261]
[254.61300659 229.50965881]
[263.11352539 241.86849976]
[271.61404419 254.22734070]
[280.11459351 266.58618164]
[287.61221313 271.93261719]
[288.66168213 279.30364990]
[296.89434814 291.84252930]
[305.12698364 304.38140869]
[313.35961914 316.92028809]
[328.24380493 323.80453491]
[329.45431519 340.15896606]
[315.74584961 349.15951538]
[301.22052002 341.54721069]
[300.82073975 325.15295410]
[292.58810425 312.61407471]
[284.35546875 300.07519531]
[276.12280273 287.53628540]
[267.75573730 275.08670044]
[259.25521851 262.72787476]
[250.75468445 250.36901855]
[242.25416565 238.01017761]
[233.75363159 225.65133667]
[225.25311279 213.29249573]
[216.75257874 200.93363953]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 108]
[5 107]
[6 106]
[7 105]
[8 104]
[11 26]
[12 25]
[13 24]
[15 22]
[16 21]
[30 81]
[33 80]
[34 79]
[39 73]
[41 71]
[42 70]
[43 69]
[44 68]
[45 67]
[47 62]
[48 61]
[49 60]
[50 59]
[82 103]
[83 102]
[84 101]
[85 100]
[86 99]
[87 98]
[88 97]
[89 96]
[119 145]
[120 144]
[121 143]
[122 142]
[123 141]
[124 140]
[125 139]
[127 138]
[128 137]
[129 136]
[130 135]
] def

init

% Start Annotations
4 108 0.0 1 colorpair
5 107 0.0 1 colorpair
6 106 0.0 1 colorpair
7 105 0.0 1 colorpair
8 104 0.0 1 colorpair
11 26 0.0 1 colorpair
12 25 0.0 0.2 colorpair
13 24 0.0 1 colorpair
15 22 0.16 1 colorpair
16 21 0.32 0.2 colorpair
30 81 0.0 0.2 colorpair
33 80 0.0 1 colorpair
34 79 0.0 1 colorpair
39 73 0.16 0.2 colorpair
41 71 0.0 1 colorpair
42 70 0.16 1 colorpair
43 69 0.0 1 colorpair
44 68 0.0 1 colorpair
45 67 0.0 1 colorpair
47 62 0.0 1 colorpair
48 61 0.0 0.2 colorpair
49 60 0.0 1 colorpair
50 59 0.0 1 colorpair
82 103 0.0 0.2 colorpair
83 102 0.0 1 colorpair
84 101 0.0 1 colorpair
85 100 0.0 1 colorpair
86 99 0.0 1 colorpair
87 98 0.0 1 colorpair
88 97 0.0 1 colorpair
89 96 0.0 1 colorpair
119 145 0.0 1 colorpair
120 144 0.0 1 colorpair
121 143 0.16 1 colorpair
122 142 0.0 1 colorpair
123 141 0.0 1 colorpair
124 140 0.0 1 colorpair
125 139 0.0 0.2 colorpair
127 138 0.0 1 colorpair
128 137 0.0 1 colorpair
129 136 0.0 1 colorpair
130 135 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
12 25 2 gmark
22 cmark
16 21 2 gmark
16 cmark
21 cmark
30 81 2 gmark
39 73 2 gmark
73 cmark
42 cmark
70 cmark
48 61 2 gmark
82 103 2 gmark
121 cmark
125 139 2 gmark

% End Annotations
showpage
end
%%EOF
