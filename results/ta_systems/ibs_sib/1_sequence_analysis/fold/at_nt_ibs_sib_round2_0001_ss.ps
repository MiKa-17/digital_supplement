%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Dec 17 10:43:28 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAAGGGUGAGGGAGGAUUUCUCCCCCC_UCUG_AUUGGCUGUUAGUAAGCUGGGAAACUUACCAGUAACAACACAAUCAGUAUGAUGACGAGCUUCAUCAUAACCCUUUCCUUCUAUAAGG_CCCCUUCCUCGGGAGGGGCUUU\
) } def
/len { sequence length } bind def

/coor [
[147.92913818 321.59231567]
[159.39022827 311.91534424]
[173.88339233 308.04910278]
[188.64157104 310.73171997]
[200.84828186 319.45242310]
[196.09042358 305.22698975]
[191.33255005 291.00158691]
[186.42190552 276.82815552]
[164.49070740 269.69049072]
[154.58821106 248.58016968]
[163.30790710 226.68080139]
[155.90127563 213.63696289]
[148.49464417 200.59312439]
[141.08799744 187.54927063]
[133.68136597 174.50543213]
[126.27473450 161.46159363]
[119.75833893 163.85528564]
[113.02882385 165.56019592]
[106.15876770 166.55793762]
[99.22227478 166.83775330]
[92.29418182 166.39660645]
[85.44919586 165.23928833]
[78.76116943 163.37825012]
[72.30223846 160.83357239]
[66.14206696 157.63272095]
[60.34711075 153.81021118]
[54.97986984 149.40725708]
[50.09824371 144.47138977]
[45.75488281 139.05581665]
[41.99664307 133.21897888]
[38.86405563 127.02380371]
[36.39091873 120.53714752]
[34.60390472 113.82896423]
[33.52228928 106.97161102]
[33.15773773 100.03906250]
[33.51418686 93.10608673]
[34.58778763 86.24747467]
[36.36695862 79.53720856]
[38.83251572 73.04766083]
[41.95785904 66.84883881]
[45.70927429 61.00760651]
[50.04630280 55.58696365]
[40.02534485 44.42540741]
[30.00438499 33.26384735]
[19.98342705 22.10228729]
[-0.73829740 16.83117676]
[-4.41092062 -3.43839836]
[-15.13102150 -13.93027306]
[-25.85112190 -24.42214775]
[-36.57122421 -34.91402435]
[-51.84718323 -32.18919373]
[-65.79257202 -38.99401855]
[-73.04511261 -52.71190262]
[-70.81604767 -68.06803894]
[-59.96250153 -79.15767670]
[-44.65788269 -81.71662903]
[-30.78712845 -74.76092529]
[-23.68383026 -60.96517563]
[-26.07934761 -45.63412476]
[-15.35924721 -35.14225006]
[-4.63914680 -24.65037346]
[6.08095407 -14.15849876]
[14.95061779 -15.71237564]
[23.65948105 -12.92830753]
[30.17729950 -6.32061863]
[32.92258453 2.69011784]
[31.14498711 12.08133030]
[41.16594315 23.24288940]
[51.18690109 34.40444946]
[61.20785904 45.56600571]
[67.54409790 41.56624222]
[74.28820038 38.30078888]
[81.35540771 35.81068039]
[88.65690613 34.12721252]
[96.10095978 33.27154160]
[103.59400940 33.25441742]
[111.04188538 34.07605743]
[118.35101318 35.72613144]
[125.42952728 38.18391037]
[132.18847656 41.41850662]
[138.54293823 45.38927078]
[144.41304016 50.04630280]
[155.57460022 40.02534485]
[166.73616028 30.00438499]
[177.89770508 19.98342705]
[189.05926514 9.96247005]
[200.22082520 -0.05848798]
[211.38238525 -10.07944584]
[209.64866638 -25.49936295]
[217.33891296 -38.97674179]
[231.49607849 -45.32925415]
[246.67642212 -42.11423111]
[257.04281616 -30.56791496]
[258.60916138 -15.13009834]
[250.77317810 -1.73693740]
[236.54792786 4.46162415]
[221.40335083 1.08211315]
[210.24179077 11.10307121]
[199.08023071 21.12402916]
[187.91867065 31.14498711]
[176.75711060 41.16594315]
[165.59555054 51.18690109]
[154.43399048 61.20785904]
[166.51631165 93.40680695]
[160.99020386 127.35112762]
[139.31857300 154.05496216]
[146.72520447 167.09880066]
[154.13185120 180.14263916]
[161.53848267 193.18647766]
[168.94511414 206.23033142]
[176.35174561 219.27416992]
[183.84257507 218.34385681]
[191.30467224 219.32473755]
[198.25965881 222.14271545]
[204.26449585 226.60630798]
[208.93969727 232.41957092]
[211.99330139 239.20173645]
[213.23910522 246.51214600]
[212.60794067 253.87884521]
[210.15147400 260.82913208]
[206.03814697 266.91973877]
[200.54167175 271.76531982]
[206.42549133 278.84906006]
[205.55796814 286.24371338]
[210.31584167 300.46911621]
[215.07371521 314.69454956]
[221.62347412 328.18902588]
[229.85612488 340.72790527]
[238.08877563 353.26678467]
[246.32141113 365.80566406]
[261.20559692 372.68991089]
[262.41607666 389.04431152]
[248.70762634 398.04489136]
[234.18229675 390.43258667]
[233.78253174 374.03829956]
[225.54988098 361.49942017]
[217.31724548 348.96054077]
[209.08459473 336.42166138]
[208.38455200 351.40530396]
[201.36241150 364.66009521]
[189.35887146 373.65539551]
[174.66569519 376.67373657]
[160.08815002 373.13888550]
[148.40943909 363.72570801]
[141.85929871 350.23141479]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 126]
[6 125]
[7 124]
[8 122]
[11 111]
[12 110]
[13 109]
[14 108]
[15 107]
[16 106]
[42 70]
[43 69]
[44 68]
[45 67]
[47 62]
[48 61]
[49 60]
[50 59]
[82 103]
[83 102]
[84 101]
[85 100]
[86 99]
[87 98]
[88 97]
[127 138]
[128 137]
[129 136]
[130 135]
] def

init

% Start Annotations
5 126 0.0 1 colorpair
6 125 0.0 1 colorpair
7 124 0.16 0.6 colorpair
8 122 0.0 0.2 colorpair
11 111 0.0 0.6 colorpair
12 110 0.16 1 colorpair
13 109 0.0 0.6 colorpair
14 108 0.16 1 colorpair
15 107 0.0 1 colorpair
16 106 0.0 0.6 colorpair
42 70 0.16 1 colorpair
43 69 0.16 1 colorpair
44 68 0.0 1 colorpair
45 67 0.0 1 colorpair
47 62 0.0 1 colorpair
48 61 0.0 1 colorpair
49 60 0.0 1 colorpair
50 59 0.16 1 colorpair
82 103 0.0 0.6 colorpair
83 102 0.0 1 colorpair
84 101 0.0 1 colorpair
85 100 0.0 1 colorpair
86 99 0.16 1 colorpair
87 98 0.0 1 colorpair
88 97 0.0 1 colorpair
127 138 0.0 0.2 colorpair
128 137 0.0 0.6 colorpair
129 136 0.32 0.2 colorpair
130 135 0.0 0.2 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
7 124 1 gmark
124 cmark
8 122 2 gmark
11 111 1 gmark
12 cmark
13 109 1 gmark
14 cmark
16 106 1 gmark
42 cmark
70 cmark
69 cmark
59 cmark
82 103 1 gmark
86 cmark
127 138 2 gmark
128 137 1 gmark
129 136 2 gmark
129 cmark
136 cmark
130 135 2 gmark

% End Annotations
showpage
end
%%EOF
