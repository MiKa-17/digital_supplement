%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Dec 17 12:02:34 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___GUG_AGGGU_AGGGGGGGGUUU_CCC_CC_C_CC__CCUG_GUAG__UCUUAGUAAGCUGGGAAGCUUAU_CACUAAG_AG___CAC___CAGUAUGAUGACGAGCUUCAUCAUAACC______________CUUUCCUUAUUUAAGG_CCC_CUU___CCUCGG_GAGGG_GCUUU_____\
) } def
/len { sequence length } bind def

/coor [
[57.34678268 418.29351807]
[38.13010025 415.12246704]
[19.14098740 410.79232788]
[0.44929340 405.31903076]
[-17.87623024 398.72271729]
[-35.76817703 391.02758789]
[-53.16073608 382.26202393]
[-69.98993683 372.45822144]
[-86.19387054 361.65225220]
[-95.17381287 373.66726685]
[-104.15375519 385.68228149]
[-103.08588409 398.55050659]
[-110.83070374 408.37658691]
[-122.79963684 410.22125244]
[-131.98121643 422.08288574]
[-141.16281128 433.94454956]
[-138.91773987 449.58856201]
[-148.45896912 462.18777466]
[-164.12585449 464.26733398]
[-176.62350464 454.59341431]
[-178.53729248 438.90542603]
[-168.73179626 426.51077271]
[-153.02444458 424.76293945]
[-143.84286499 412.90130615]
[-134.66127014 401.03967285]
[-133.24870300 383.55697632]
[-116.16876984 376.70233154]
[-107.18882751 364.68731689]
[-98.20888519 352.67230225]
[-108.80191040 343.99145508]
[-119.01516724 334.86679077]
[-128.83009338 325.31500244]
[-138.22882080 315.35339355]
[-147.19427490 305.00012207]
[-155.71012878 294.27398682]
[-163.76091003 283.19454956]
[-171.33198547 271.78189087]
[-178.40956116 260.05679321]
[-184.98077393 248.04061890]
[-191.03366089 235.75517273]
[-196.55723572 223.22282410]
[-201.54144287 210.46635437]
[-205.97721863 197.50898743]
[-209.85649109 184.37426758]
[-213.17219543 171.08609009]
[-215.91833496 157.66862488]
[-218.08987427 144.14627075]
[-219.68289185 130.54362488]
[-220.69447327 116.88542175]
[-221.12278748 103.19651794]
[-220.96705627 89.50179291]
[-220.22755432 75.82616425]
[-218.90563965 62.19450760]
[-217.00370789 48.63160324]
[-214.52520752 35.16213226]
[-211.47467041 21.81058121]
[-207.85763550 8.60124111]
[-203.68067932 -4.44186640]
[-198.95140076 -17.29501915]
[-193.67839050 -29.93483925]
[-187.87124634 -42.33833694]
[-181.54054260 -54.48295593]
[-174.69776917 -66.34660339]
[-167.35539246 -77.90770721]
[-159.52676392 -89.14524078]
[-151.22610474 -100.03875732]
[-142.46852112 -110.56845093]
[-133.26995850 -120.71517181]
[-123.64711761 -130.46046448]
[-113.61752319 -139.78660583]
[-103.19940948 -148.67662048]
[-92.41171265 -157.11434937]
[-81.27407074 -165.08445740]
[-69.80673218 -172.57243347]
[-58.03055954 -179.56466675]
[-45.96696091 -186.04843140]
[-33.63788223 -192.01194763]
[-21.06574821 -197.44435120]
[-8.27342224 -202.33578491]
[4.71582651 -206.67733765]
[17.87837601 -210.46110535]
[31.19028473 -213.68022156]
[44.62734222 -216.32882690]
[58.16511154 -218.40211487]
[71.77896881 -219.89628601]
[85.44415283 -220.80863953]
[99.13580322 -221.13752747]
[112.82903290 -220.88233948]
[126.49893188 -220.04353333]
[140.12063599 -218.62265015]
[153.66935730 -216.62226868]
[167.12048340 -214.04602051]
[180.44952393 -210.89859009]
[193.63224792 -207.18571472]
[206.64466858 -202.91413879]
[219.46313477 -198.09162903]
[232.06433105 -192.72695923]
[244.42532349 -186.82989502]
[251.48229980 -200.06616211]
[258.53927612 -213.30244446]
[265.59628296 -226.53871155]
[265.26123047 -242.35638428]
[278.07650757 -249.94702148]
[271.16912842 -263.84191895]
[273.78134155 -279.13751221]
[284.90872192 -289.95239258]
[300.27252197 -292.12799072]
[313.96505737 -284.82775879]
[320.72131348 -270.85876465]
[317.94329834 -255.59237671]
[306.69927979 -244.89883423]
[291.31280518 -242.89004517]
[292.15258789 -228.01913452]
[278.83255005 -219.48173523]
[271.77557373 -206.24545288]
[264.71856689 -193.00918579]
[257.66159058 -179.77290344]
[269.95535278 -172.47979736]
[281.91238403 -164.64683533]
[293.50897217 -156.28955078]
[304.72219849 -147.42448425]
[315.52981567 -138.06922913]
[325.91043091 -128.24227905]
[335.84344482 -117.96313477]
[345.30920410 -107.25215149]
[354.28894043 -96.13055420]
[362.76486206 -84.62037659]
[370.72021484 -72.74441528]
[378.13916016 -60.52620697]
[385.00708008 -47.98995972]
[391.31030273 -35.16050339]
[397.03640747 -22.06326675]
[402.17398071 -8.72418976]
[406.71286011 4.83029461]
[410.64410400 18.57333374]
[413.95986938 32.47769928]
[416.65359497 46.51584244]
[418.71997070 60.65995026]
[420.15487671 74.88200378]
[420.95547485 89.15381622]
[421.12017822 103.44712067]
[420.64868164 117.73359680]
[419.54190063 131.98493958]
[417.80203247 146.17291260]
[415.43249512 160.26939392]
[412.43801880 174.24647522]
[408.82455444 188.07646179]
[404.59921265 201.73193359]
[399.77038574 215.18586731]
[394.34762573 228.41157532]
[388.34170532 241.38287354]
[381.76452637 254.07406616]
[374.62908936 266.45999146]
[366.94952393 278.51611328]
[358.74108887 290.21856689]
[350.02001953 301.54415894]
[340.80361938 312.47042847]
[331.11010742 322.97573853]
[320.95870972 333.03927612]
[310.36956787 342.64111328]
[299.36358643 351.76220703]
[287.96264648 360.38452148]
[276.18930054 368.49093628]
[284.23098755 381.15313721]
[292.37930298 393.74697876]
[300.52764893 406.34082031]
[315.85000610 411.09527588]
[321.55169678 426.09094238]
[313.25891113 439.82443237]
[297.33309937 441.76058960]
[285.99124146 430.41415405]
[287.93380737 414.48916626]
[279.78546143 401.89532471]
[271.63714600 389.30148315]
[265.35012817 385.38494873]
[263.45965576 376.42541504]
[246.40196228 385.82604980]
[228.80578613 394.17535400]
[210.73582458 401.44259644]
[192.25854492 407.60107422]
[173.44192505 412.62811279]
[154.35517883 416.50524902]
[135.06848145 419.21820068]
[115.65280914 420.75698853]
[96.17955780 421.11596680]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 29]
[10 28]
[11 27]
[14 25]
[15 24]
[16 23]
[98 117]
[99 116]
[100 115]
[101 114]
[103 112]
[163 176]
[164 174]
[165 173]
[166 172]
] def

init

% Start Annotations
9 29 0.32 0.2 colorpair
98 117 0.16 0.6 colorpair
99 116 0.0 0.6 colorpair
100 115 0.32 0.6 colorpair
101 114 0.16 1 colorpair
103 112 0.32 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
9 29 2 gmark
9 cmark
29 cmark
10 28 5 gmark
28 cmark
11 27 6 gmark
11 cmark
27 cmark
14 25 29 gmark
14 cmark
15 24 33 gmark
15 cmark
16 23 7 gmark
16 cmark
23 cmark
98 117 1 gmark
98 cmark
117 cmark
99 116 1 gmark
100 115 1 gmark
100 cmark
115 cmark
101 cmark
103 cmark
112 cmark
163 176 9 gmark
163 cmark
176 cmark
164 174 13 gmark
164 cmark
174 cmark
165 173 7 gmark
165 cmark
173 cmark
166 172 6 gmark
166 cmark
172 cmark

% End Annotations
showpage
end
%%EOF
