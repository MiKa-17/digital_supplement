%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Tue Dec 17 10:28:15 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAAGGGUGAGGGAGGAUUUCUCCCCCCUCUG_AUUGGCUGUUAAUAAGCUGCGAAACUUACGAGUAACAACACAAUCAGUAUGAUGACGAGCUUCAUCAUAACCCUUUCCUUCUGUAAGG_CCCCUUCCUCGGGAGGGGCUUU\
) } def
/len { sequence length } bind def

/coor [
[157.64004517 213.35403442]
[150.22543335 193.54631042]
[156.14556885 173.10430908]
[146.06843567 161.99345398]
[135.99128723 150.88259888]
[125.91413879 139.77174377]
[115.83699036 128.66088867]
[105.75984192 117.55002594]
[98.38675690 119.07355499]
[90.74796295 117.51930237]
[79.52859497 127.47549438]
[68.30922699 137.43168640]
[57.08985901 147.38787842]
[51.90351486 162.33486938]
[37.24844742 164.99536133]
[26.02907753 174.95155334]
[14.80970955 184.90774536]
[10.14579105 200.62971497]
[-5.86267090 204.18795776]
[-16.74754333 191.92208862]
[-11.31140137 176.45016479]
[4.85351706 173.68838501]
[16.07288551 163.73219299]
[27.29225349 153.77600098]
[31.67611504 139.54115295]
[47.13366699 136.16850281]
[58.35303497 126.21231842]
[69.57240295 116.25612640]
[80.79177094 106.29993439]
[81.44155121 91.31401062]
[71.12606049 80.42407990]
[60.81056976 69.53414917]
[46.28563309 74.09349823]
[31.28264618 71.90322113]
[18.76961708 63.45074463]
[11.19845486 50.45695496]
[10.02457619 35.52606964]
[15.42741776 21.62373734]
[0.31980193 16.92581177]
[-2.81549096 2.36493278]
[-13.13098240 -8.52499962]
[-23.44647408 -19.41493225]
[-33.76196671 -30.30486488]
[-44.07745743 -41.19479752]
[-64.93209839 -45.90771103]
[-69.15083313 -66.06977081]
[-80.15187073 -76.26668549]
[-91.15290833 -86.46360779]
[-102.15394592 -96.66052246]
[-117.35028839 -93.52190399]
[-131.47531128 -99.94554901]
[-139.09767151 -113.46144104]
[-137.28639221 -128.87243652]
[-126.73797607 -140.25270081]
[-111.50848389 -143.22628784]
[-97.45397186 -136.64979553]
[-89.97869110 -123.05200958]
[-91.95703125 -107.66156006]
[-80.95599365 -97.46464539]
[-69.95494843 -87.26773071]
[-58.95391083 -77.07080841]
[-50.12690735 -78.86533356]
[-41.34325409 -76.31687164]
[-34.64783859 -69.88507843]
[-31.66097450 -60.94848633]
[-33.18752670 -51.51028824]
[-22.87203407 -40.62035751]
[-12.55654240 -29.73042297]
[-2.24105048 -18.84049225]
[8.07444096 -7.95055914]
[22.44422531 -4.03155422]
[26.31735039 11.30824566]
[40.49179459 6.66598463]
[55.33723450 8.64648342]
[67.90206909 16.91001129]
[75.66470337 29.86229706]
[77.03952789 44.96186066]
[71.70050049 59.21865463]
[82.01599121 70.10858917]
[92.33148193 80.99851990]
[107.32356262 81.48592377]
[118.32460022 71.28900146]
[129.32563782 61.09208679]
[140.32669067 50.89517212]
[151.32772827 40.69825363]
[162.32876587 30.50133514]
[173.32980347 20.30441856]
[184.33084106 10.10750103]
[184.67939758 -5.69294405]
[196.15606689 -16.55855751]
[211.95195007 -16.04296494]
[222.69561768 -4.45205832]
[222.01304626 11.33748436]
[210.30920410 21.95800591]
[194.52775574 21.10853958]
[183.52671814 31.30545807]
[172.52568054 41.50237656]
[161.52464294 51.69929123]
[150.52360535 61.89620972]
[139.52256775 72.09312439]
[128.52151489 82.29004669]
[117.52048492 92.48696136]
[116.87069702 107.47288513]
[126.94784546 118.58374023]
[137.02499390 129.69459534]
[147.10214233 140.80545044]
[157.17929077 151.91630554]
[167.25642395 163.02716064]
[176.15757751 159.63565063]
[185.62742615 158.85728455]
[194.91665649 160.74049377]
[203.29389954 165.12359619]
[210.10328674 171.64865112]
[214.81590271 179.79058838]
[217.07070923 188.89949036]
[216.70231628 198.25250244]
[213.75292969 207.11106873]
[208.46806335 214.77941895]
[217.01988220 227.10284424]
[225.57168579 239.42625427]
[234.12348938 251.74967957]
[241.64451599 257.06600952]
[242.72366333 264.43399048]
[251.00648499 276.93978882]
[259.28930664 289.44558716]
[267.57211304 301.95138550]
[275.85494995 314.45718384]
[284.13775635 326.96298218]
[292.42059326 339.46878052]
[307.33224487 346.29333496]
[308.60824585 362.64276123]
[294.93594360 371.69815063]
[280.38024902 364.14413452]
[279.91479492 347.75158691]
[271.63195801 335.24578857]
[263.34915161 322.73999023]
[255.06632996 310.23419189]
[246.78350830 297.72839355]
[238.50068665 285.22259521]
[230.21788025 272.71682739]
[221.80006409 260.30148315]
[213.24826050 247.97805786]
[204.69645691 235.65464783]
[196.14465332 223.33122253]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 108]
[4 107]
[5 106]
[6 105]
[7 104]
[8 103]
[10 29]
[11 28]
[12 27]
[13 26]
[15 24]
[16 23]
[17 22]
[30 80]
[31 79]
[32 78]
[38 72]
[40 70]
[41 69]
[42 68]
[43 67]
[44 66]
[46 61]
[47 60]
[48 59]
[49 58]
[81 102]
[82 101]
[83 100]
[84 99]
[85 98]
[86 97]
[87 96]
[88 95]
[118 144]
[119 143]
[120 142]
[121 141]
[123 140]
[124 139]
[125 138]
[126 137]
[127 136]
[128 135]
[129 134]
] def

init

% Start Annotations
3 108 0.0 1 colorpair
4 107 0.0 1 colorpair
5 106 0.0 1 colorpair
6 105 0.0 1 colorpair
7 104 0.16 0.6 colorpair
8 103 0.0 0.6 colorpair
10 29 0.0 1 colorpair
11 28 0.0 1 colorpair
12 27 0.0 0.6 colorpair
13 26 0.0 0.6 colorpair
15 24 0.0 1 colorpair
16 23 0.0 1 colorpair
17 22 0.0 1 colorpair
30 80 0.0 1 colorpair
31 79 0.0 1 colorpair
32 78 0.0 1 colorpair
38 72 0.0 0.6 colorpair
40 70 0.0 1 colorpair
41 69 0.0 1 colorpair
42 68 0.0 1 colorpair
43 67 0.0 1 colorpair
44 66 0.0 1 colorpair
46 61 0.0 1 colorpair
47 60 0.0 1 colorpair
48 59 0.0 1 colorpair
49 58 0.16 1 colorpair
81 102 0.0 1 colorpair
82 101 0.0 1 colorpair
83 100 0.0 1 colorpair
84 99 0.0 1 colorpair
85 98 0.0 1 colorpair
86 97 0.0 1 colorpair
87 96 0.0 1 colorpair
88 95 0.0 0.6 colorpair
118 144 0.0 1 colorpair
119 143 0.0 1 colorpair
120 142 0.16 1 colorpair
121 141 0.0 1 colorpair
123 140 0.0 0.6 colorpair
124 139 0.0 1 colorpair
125 138 0.0 1 colorpair
126 137 0.0 1 colorpair
127 136 0.0 1 colorpair
128 135 0.0 1 colorpair
129 134 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
7 104 1 gmark
104 cmark
8 103 1 gmark
12 27 1 gmark
13 26 1 gmark
38 72 1 gmark
58 cmark
88 95 1 gmark
120 cmark
123 140 1 gmark

% End Annotations
showpage
end
%%EOF
